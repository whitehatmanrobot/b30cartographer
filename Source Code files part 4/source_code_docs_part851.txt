fff8f807fff8f807fff8070707f800ffffffffffffffff07fffff8f807fff8f807ff070707f800ffffffffffffffff07fffff8f807fff8f807070707f800ffffffffffffffff07fffff8f807fff8f8070707f800ffffffffffffffff07fffff8f807fff8070707f800ffffffffffffffff07ff0707070707070000000000000007070700070707070007070700000000 00070700070707070007070007070700070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707fff8f807ff070707f800ffffffffffffffff07fffff8f807070707f800ffffffffffffffff07fffff8f8070707f800ffffffffffffffff07fffff8070707f800ffffffffffffffff07ffff070707f800ffffffffffffffff07fff800ffffffffffffffff07ff0707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707f800ffffffffffffffff07fff800ffffffffffffffff07fff800ffffffffffffffff07fff800ffffffffffffffff07ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707f800ffffffffffffffff07fff800ffffffffffffffff07ff0707ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffff070707ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ff0707f800ffffffffffffffff07ff0707f807070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707ff070707fff0707f800ffffffffffffffff07ff0707f80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ff07ff07ff07ff07ff07000000 000000000000000000000000000000000007ff070707f80000000000000000000000000000000000000000000000000000000000000000000000000000000000ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0000000000000000000000000000000000000000070707070707070707070707070707070707070707ff0707 f800ffffffffffffffff07ff0707f80007f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007ff07ff07ff07ff07ff07f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007ff070707f80007f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070707070707070707f80007ff070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff0707ff07070707 070707070707070707070707f80007ff070707f80007ff07070707070707070707070707070707f80007ff07070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07070707070707070707070707070707f800070707070707070707070707070707070707070707ff0707f800ff ffffffffffffff07ff0707f80007ff07070707070707070707070707070707f80007ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07070707070707070707070707070707f80007ff070707f80007ff07070707070707070707070707070707f80007ff07070707070707070707070707070707f80007ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff0707ff07070707070707070707070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070707070707070707f80007ff070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff0707ff07070707070707 070707070707070707f80007ff070707f80007ff07070707070707070707070707070707f80007ff07070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07070707070707070707070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffff ffffffff07ff0707f80007ff07070707070707070707070707070707f80007ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07070707070707070707070707070707f80007ff070707f80007ff07070707070707070707070707070707f80007ff07070707070707070707070707070707f80007ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff0707ff07070707070707070707070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070007070707070707f80007ff070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff0707ff07070707070700070707 070707070707f80007ff070707f80007ff07070707070707070007070707070707f80007ff07070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07070707070700070707070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffff ff07ff0707f80007ff07070707070707000007070707070707f80007ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07070707070700000707070707070707f80007ff070707f80007ff07070707070707000007070707070707f80007ff07070707070707070707070707070707f80007ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff0707ff07070707070700000707070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707070700000007070707070707f80007ff070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff0707ff07070707070700000007070707 070707f80007ff070707f80007ff07070707070700000007070707070707f80007ff07070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07070707070700000007070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff 0707f80007ff07070707070000000007070707070707f80007ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07070707070700000000070707070707f80007ff070707f80007ff07070707070000000007070707070707f80007ff07070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff0707ff07070707070700000000070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707000000000007070707070707f80007ff070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff0707ff07070707070700000000000707070707 f80007ff070707f80007ff07070707000000000007070707070707f80007ff07070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07070707070700000000000707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f8 0007ff07070707070000000007070707070707f80007ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07070707070700000000070707070707f80007ff070707f80007ff07070707070000000007070707070707f80007ff07070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff0707ff07070707070700000000070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707070700000007070707070707f80007ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff0707ff07070707070700000007070707070707f80007 ff070707f80007ff07070707070700000007070707070707f80007ff07070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07070707070700000007070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff 07070707070707000007070707070707f80007ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07070707070700000707070707070707f80007ff070707f80007ff07070707070707000007070707070707f80007ff07070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 07ff07070707070700000707070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070007070707070707f80007ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff0707ff07070707070700070707070707070707f80007ff0707 07f80007ff07070707070707070007070707070707f80007ff07070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07070707070700070707070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff070707 07070707070707070707070707f80007ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07070707070707070707070707070707f80007ff070707f80007ff07070707070707070707070707070707f80007ff07070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff07 070707070707070707070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070707070707070707f80007ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff0707ff07070707070707070707070707070707f80007ff070707f800 07ff07070707070707070707070707070707f80007ff07070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07070707070707070707070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007ff070707070707 07070707070707070707f80007ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07070707070707070707070707070707f80007ff070707f80007ff07070707070707070707070707070707f80007ff07070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff07070707 070707070707070707070707f800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f80007fffffffffffffffffffffffffffffffffff80007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800ff07ff07ff07ff07ff0707fffffffffffffffffffffffffffffffffff80007ff070707f80007ffff fffffffffffffffffffffffffffffff80007fffffffffffffffffffffffffffffffffff800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07fffffffffffffffffffffffffffffffffff800070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f8000707070707070707070707 07070707070707070007070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070007ff07ff07ff07ff07ff070707070707070707070707070707070707070007ff070707f8000707070707070707070707070707070707070700070707070707070707070707070707070707070007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07070707070707070707 0707070707070707070700070707070707070707070707070707070707070707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffff07f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000 00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07 ff07070707070707000707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffff000000000000ffffffffffff00000000ffffffff0000ffffffff0000ffffffff00000000ffffffffffff000000ff0000ffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff00000000000000ffff0000ff000000ffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff0000ff000000ffffffffff00000000000000ffffffff00000000ffffffffffff000000 00ffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070700000007070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000ffffffff000000000000ffffff0000ffffff000000ffffff000000000000ffffffff00000000000000ff ffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000ffffff000000000000 0000ffff00000000000000ffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffff000000000000ffffff00000000000000ffffff0000000000000000ffffff000000000000ffffffff000000000000ffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707 0707070000000000070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffff0000ffffff000000ffff000000ffff000000ffff0000ffff000000ffffff000000ffffffffffffff000000ffff000000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff0000ffffffff0000ffff000000ffff000000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff000000ffff000000ffff0000ffffffff0000ffff000000ffff000000ffff000000ffffffffff ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707000000000000000707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff0000ffffffff0000ffff0000ff000000ffffffff0000000000000000ffff0000ffffffff0000ffffffff ffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff0000ffffffff0000ff ff0000ffffffff0000ffffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffff000000ffff0000ffffffff0000ffff0000ffffffff0000ffff0000ffffffffffffffff0000000000000000ffffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707070000 0000000000000007070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffff0000ffffffff0000ffff0000ffffffff0000ffff0000000000ffffffffff0000000000000000ffff0000ffffffff0000ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff0000000000000000ffff0000ffffffff0000ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffff0000ffffffff0000ffff0000000000000000ffff0000ffffffffffffffff0000000000000000ffffff 000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff0000ffffffff0000ffff00000000ffffffffffff0000ffffffff0000ffff0000ffffffff0000ffff000000ffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff00000000000000ffff0000 ffffffff0000ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffff000000ffffffffffffff0000ffffffff0000ffffff00000000000000ffff0000ffffffffffffffff0000ffffffff0000ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707070707070707 0707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffff0000ffffffff0000ffff000000ffff000000ffff000000ffffffffffffff000000ffff000000ffff0000ffffffff0000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffff0000ffff000000ffff000000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff000000ffff000000ffffffffffffffff0000ffff000000ffff000000ffff000000ffff000000ffff0000ffff ffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffffff000000000000ffffff00000000ffffffffffffff000000000000ffffff0000ffffffff0000ffffff000000000000ff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff000000000000ffffff0000000000 0000ffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffff000000000000ffffff00000000000000ffffffff000000000000ffffffff000000000000ffffffff000000000000ffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707070707070707070707 0707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffff0000ffffffff0000ffffffff00000000ffffffff0000000000ffffffffffffff00000000ffffffff0000ffffffff0000ffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff0000000000ffffffff0000ff000000ffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff0000ff000000ffffffffff0000000000ffffffffffff00000000ffffffffffff00000000ffffffffffff00000000ff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffff000000ffffffffffffffffffffffff0000ff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffff0000ffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707070707070707070707070707 0707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ff00000000000000ffffffffffffffffffffffffff0000ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07fffffffffffffffffffffffffffffffffff80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffffffffffffffffffff0000ffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffff0000ffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07070707070707070707070707070707070707 0007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff 0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f8 00ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffff07ff070707f800fffffff9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff fffffffffffffffffffffffffffffffffffffffffffffffffffff9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9f9f9f9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffff ffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9f9f9f9f9f9f9ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffff07ff070707f800fffffff9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff fffffffffffffffffffffffffffffffffffffffffffffffffff9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffff ffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9ffffffffff fffffff9f9fffffffff9f9fffffff9f9f9f9f9f9fffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9ffff fffff9f9fffffff9f9f9f9f9f9fffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9fffffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffffffffff9f9fffffffffffffff9f9f9f9fffffffffffffff9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9 f9f9f9f9f9f9f9fffff9f9fffffffff9f9fffffffffff9f9f9f9fffffffffff9f9f9f9fffffffff9f9fffffffffffffffffffffffffffffffffffffffffff9f9f9f9fffffffff9f9f9f9f9f9f9fffff9f9fff9f9f9fffffffffffff9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffff07ff070707f800fffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffff9f9f9f9f9f9fffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9ffffffffffffffffffffffffffffff fffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffff9f9f9f9f9f9fffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9fffffffffffffffffffffffffff9f9f9f9f9f9f9f9ff fffffffff9f9fffffffffffff9f9f9f9f9f9fffffffffffff9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffff9f9fffffffff9f9fffffffff9f9f9f9f9fffffffff9f9f9f9f9f9fffffff9f9fffffffffffffffffffffffffffffffffffffffff9f9f9f9 f9fffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9fffffffff9f9f9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff 07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9fffffffffffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9ffffffffffffffff f9f9fffffffff9f9fffffffffff9f9fffffffffff9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffff9f9f9fffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffff9f9fffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9fffffffff9 f9fffffffffff9f9fffffffffff9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffff9f9f9fffffffffffffffffffffffff9f9fffffffffffffffffffffff9f9fffffffffff9f9f9fffff9f9f9fffffffffff9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9ffff fffffffffffff9f9fffffffff9f9fffffffff9f9fffffffffffff9f9f9fffffffffffffff9f9fffffffffffffffffffffffffffffffffffffffff9f9fffffffffffff9f9fffffffff9f9fffff9f9f9fffff9f9f9fffff9f9fffffffff9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffff07ff070707f800fffffff9f9fffffffffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffff9f9fffffffffffffffff9f9f9f9f9f9f9f9fffffffffff9f9fffffffffff9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffff9f9fffff9f9fffffffff9f9ffff f9f9fffffffff9f9fffff9f9fffffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9f9f9f9f9f9f9fffffffffff9f9fffffffffff9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffffffffffffffffffff9f9ffffffffffffffffffff fff9f9fffffffffff9f9fffffffff9f9fffffffffff9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffff9f9fffffffffffff9f9f9f9f9f9f9f9fffff9f9fffffffffffffffffffffffffffffffffffffffff9f9ffffffffff fff9f9fffffffff9f9fffff9f9fffffffff9f9fffffffffffffff9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff07 07f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9fffffffffffffffff9f9f9f9fffffffffffff9f9f9f9fffffffffffff9f9f9f9fffffffff9f9fffffffffffffffff9f9f9 f9f9f9f9f9fffffffffff9f9fffffffffff9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffff9f9f9f9fffffffffffff9f9f9f9fffffffffffff9f9f9f9fffffffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9f9f9f9f9f9f9ffff fffffff9f9fffffffffff9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffffffffffffffffffff9f9fffffffffffffffffffffff9f9fffffffffff9f9fffffffff9f9fffffffffff9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9ffffffffff fffffff9f9fffffffff9f9fffffffff9f9fffffffffffff9f9f9f9f9f9f9f9fffff9f9fffffffffffffffffffffffffffffffffffffffff9f9fffffffffffff9f9f9f9f9f9f9f9fffff9f9fffffffff9f9fffffff9f9f9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ff07ff070707f800fffffff9f9fffffffffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9fffffffff9f9fffffffff9f9fffffffffff9f9fffffffffff9f9fffffffffffffffff9f9f9f9f9f9fffffffff9f9fffffffff9f9fffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9f9 fffff9f9f9f9f9f9f9f9fffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9f9f9f9f9fffffffff9f9fffffffff9f9fffffffffff9f9fffffffffff9f9fffffffffffffffff9f9f9f9f9f9fffffffff9f9fffffffff9f9fffffffffffffffffffffffff9f9f9f9f9f9fffffffffffffff9f9 fffffffffff9f9fff9f9fff9f9fffffffffff9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9f9f9f9f9fffffffff9f9fffffffff9f9fffffffff9f9fffffffffffff9f9fffffffff9f9fffff9f9f9fffffffffffffffffffffffffffffffffffffff9f9fffffffffffffff9 f9f9f9f9f9f9fffff9f9fffffffff9f9fffff9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800 ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9fffffffffffffffff9f9f9f9fffffffffffff9f9f9f9fffffffffffff9f9f9f9fffffffff9f9f9f9f9f9fffffffff9f9ffffffff f9f9fffffffffff9f9fffffffffff9f9fffffffffffffffff9f9f9f9f9f9fffffffff9f9fffffffff9f9fffffffff9f9f9f9fffffffffffff9f9f9f9fffffffffffff9f9f9f9fffffffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9f9f9f9f9fffffffff9f9fffffffff9f9ffffffffff f9f9fffffffffff9f9fffffffffffffffff9f9f9f9f9f9fffffffff9f9fffffffff9f9fffffffffffffffffffffffff9f9f9f9f9f9fffffffffffffff9f9fffffffffff9f9fff9f9fff9f9fffffffffff9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9f9f9f9f9ffffffff f9f9f9fffff9f9f9fffffffff9f9fffffffffffff9f9f9fffff9f9f9fffff9f9f9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffff9f9fffff9f9f9fffff9f9f9fffff9f9fffffffff9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff 070707f800fffffff9f9fffffffffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffffff9f9fffffffffff9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffff9f9fffff9f9fffffffff9f9fffff9f9ffffffff f9f9fffff9f9fffffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffffff9f9fffffffffff9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffffffffffffffffffff9f9fffffffffffffffffffffff9f9ffffff fffff9f9fffffffff9f9fffffffffff9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9f9f9f9f9f9fffffffff9f9f9f9f9f9fffffffff9f9f9f9f9f9fffffff9f9f9f9f9f9f9f9fffffffffffffffffffffffffff9f9f9f9f9f9fffffffff9f9f9f9 f9f9fffffff9f9f9f9f9f9f9fffffffff9f9f9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9fffffffffffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffffffffffff9f9fffffffff9f9ff fffffffff9f9fffffffffff9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffff9f9fffff9f9fffffffff9f9fffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffffff9f9ff fffffffff9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffffff9f9fffffffffffffffffffffffff9f9fffffffffffffffffffffff9f9fffffffffff9f9fffffffff9f9fffffffffff9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9fffffffffffffffff9f9ff f9f9f9fffffffffff9f9f9f9f9f9fffffffffff9f9f9f9fffffffff9f9fff9f9f9f9f9fffffffffffffffffffffffffff9f9f9f9f9f9fffffffff9f9f9f9f9fffffffff9f9fff9f9f9fffffffffffff9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707 f800fffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffff9f9fffff9f9fffffffffffff9f9fffffffffff9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffff9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffff fffffffffffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffff9f9fffff9f9fffffffffffff9f9fffffffffff9f9fffffffffffffffff9f9fffffffffffffffff9f9fffffff9f9f9fffffffffffffffffffffffff9f9fffffffffffffffffffffff9f9fffffffffff9 f9f9fffff9f9f9fffffff9f9f9f9fffffffffffffffffffffffffffffffff9f9f9f9fffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9ffffffffffffffffffffffffffff fffff9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800fffffff9f9f9f9fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffffffff9f9f9f9fffffffffff9 f9f9f9f9f9fffffff9f9fffffffffffffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9f9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffffffff9f9f9f9fffffffffff9f9f9f9f9f9ffff fff9f9fffffffffffffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9fffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9f9fffffff9f9f9f9f9f9fffffffff9f9f9f9fffffffffffffffffffffffffffffffff9f9f9f9fffffffffffffffffffffffffffffff9f9f9f9f9f9f9f9ffffffffffffffff fffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffffff9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ff fffff9f9f9f9fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffffffffff9f9fffffffffffff9f9f9f9f9f9fffffff9f9fffffffffffffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff fffffffffff9f9f9f9fffffffffffffffffffffffffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffffffffff9f9fffffffffffff9f9f9f9f9f9fffffff9f9fffffffffffffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9fffffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffff9f9f9f9f9f9f9f9fffffffff9f9 f9f9fffffffffffffff9f9fffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffff9f9f9f9f9f9f9f9fffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f9fffffffffffffffffffffffffffffffff9 f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff05050505ffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05050505ffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff050505050505ffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff05050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffff050505050505ffffff0505ffffffff0505ffffffff0505ffffffffffffffff05050505ffffffff0505ffffffffffffffff0505ff0505ff0505ffffff050505050505 05ffffffffff05050505ffffffff050505050505ffffffffff05050505ffffffff0505ffffffff0505ffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05050505ffffffffff05050505050505ffff0505ffffffff0505ffff0505ffffffff0505ffffffff0505 0505ffffffffffffff05050505ffffffffffffffffffffffffffffff050505ff0505ffffffff05050505ffffffffffffff05050505ffffffffffffffffffffffffff0505ffffffff0505ffffff05050505050505ffff0505ffffffff0505ffffffff050505ff0505ffffff050505050505ffffffffff05050505ffffffffff ffffffffffffffffffffffff05050505ffffffffff05050505ffffffffffffffffffffffffffffffff05050505ffffffffff050505050505ffffffff050505050505ffffff0505ff050505ffffffff0505ff050505ffffffffffff05050505ffffffffff05050505050505ffff0505ffffffffffffffffffff050505ff0505 ffffffffffffffffffffffffffffff05050505ffffffffff05050505ffffffff0505ffffffff0505ffffffffff05050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffff05050505 0505ffffff0505ffffffff0505ffffffff0505ffffffffffffff050505050505ffffff0505ffffffffffffffff0505ff0505ff0505ffff0505050505050505ffffffff0505050505ffffffff050505050505ffffffff050505050505ffffff0505ffffffff0505ffffffffffff0505ffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffff050505050505ffffff0505050505050505ffff0505ffffffff0505ffff0505ffffffff0505ffffff050505050505ffffffffff0505050505ffffffffffffffffffffffffffff05050505050505ffffff050505050505ffffffffff0505050505ffffffffffffffffffffffff ff0505ffffffff0505ffff0505050505050505ffff0505ffffffff0505ffffff05050505050505ffffff050505050505ffffffff050505050505ffffffffffffffffffffffffffffff0505050505ffffffff050505050505ffffffffffffffffffffffffffff050505050505ffffffff050505050505ffffffff0505050505 05ffffff05050505050505ffffff05050505050505ffffffff050505050505ffffff0505050505050505ffff0505ffffffffffffffffff05050505050505ffffffffffffffffffffffffffff0505050505ffffffff050505050505ffffff050505ffff050505ffffffff0505050505ffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffffffff0505ffffffffff0505ffffffff0505ffffffff0505ffffffffffff050505ffff050505ffff0505ffffffffffffffff0505ff0505ff0505ffff0505ffffffff0505ffff ffff0505ffffffffffffffffff0505ffffffffff050505ffff050505ffff0505ffffffff0505ffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff050505ffff050505ffff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffff050505ffff0505 05ffffffff0505ffffffffffffffffffffffffffffffff050505ffff050505ffff050505ffffffffffffffffff0505ffffffffffffffffffffffffffffffff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffff050505ffff050505ffffffffff0505ffffffffff050505ffffffffffffffffffffff ffffffffffffffff0505ffffffffffff050505ffff050505ffffffffffffffffffffffff050505ffff050505ffffffffff0505ffffffffffffffff0505ffffffffff050505ffff050505ffff050505ffff050505ffff050505ffff050505ffff0505ffffffff0505ffff0505ffffffffffffffff050505ffff050505ffffff ffffffffffffffffffffff0505ffffffffffff050505ffffffffffffffff050505050505ffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffffffff0505ffffff ffff0505ffffffff0505ffffffff0505ffffffffffff0505ffffffff0505ffff0505ffffffffffffffff0505ff0505ff0505ffff0505ffffffff0505ffffffff0505ffffffffffffffffff0505ffffffffff0505ffffffff0505ffff0505ffffffff0505ffffffffffff0505ffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffff0505ffffffffffffffff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffffffff0505ffffffffffffffffffffffffffffffff0505ffffffff0505ffff0505050505050505ffffffff0505ffffffffffffffffffffffffffffffff0505 ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffffffffff0505ffffffffff0505050505050505ffffffffffffffffffffffffffff0505ffffffffffff0505ffffffff0505ffffffffffffffffffffffff0505ffffffffffffffffffffff0505ffffffffffffffff0505ffffffff ff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffffffffffff0505ffffffff0505ffffffffffffffffffffffffffff0505ffffffffffff0505050505050505ffffffff05050505ffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffffffff0505ffffffffff0505ffffffff0505ffffffff0505ffffffffffff0505ffffffff0505ffff0505ffffffffffffffff0505ff0505ff0505ffff0505050505050505ffffffff05 05ffffffffffffffffff0505ffffffffff0505ffffffff0505ffff0505ffffffff0505ffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffff0505050505050505ffff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffff ffff0505ffffffffffffffffffffffffffffffff0505ffffffff0505ffff0505050505050505ffffffff0505ffffffffffffffffffffffffffffffff0505ffffffff0505ffff0505050505050505ffff0505ffffffff0505ffff0505ffffffff0505ffffffffff0505ffffffffff0505050505050505ffffffffffffffffff ffffffffff0505ffffffffffff0505ffffffff0505ffffffffffffffffffffffff0505ffffffffffffffffffffff0505ffffffffffffffff0505ffffffffff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffff0505050505050505ffff0505ffffffffffffffff0505ffffffff0505ffffffffffff ffffffffffffffff0505ffffffffffff0505050505050505ffffffffff0505ffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffffffff0505ffffffffff05 05ffffffff0505ffffffff0505ffffffffffff0505ffffffff0505ffff050505ffffffffffffff0505ff0505ff0505ffffff05050505050505ffffffff0505ffffffffffffffffff0505ffffffffff0505ffffffff0505ffff0505ffffffff0505ffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffff0505ffffffffffffffffff05050505050505ffff0505ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffffffff0505ffffffffffffffffffffffffffffffff0505ffffffff0505ffff0505ffffffff0505ffffffff0505ffffffffffffffffffffffffffffffff0505ffffff ff0505ffffff05050505050505ffff0505ffffffff0505ffff0505ffffffff0505ffffffffff0505ffffffffff0505ffffffff0505ffffffffffffffffffffffffffff0505ffffffffffff0505ffffffff0505ffffffffffffffffffffffff0505ffffffffffffffffffffff0505ffffffffffffffff0505ffffffffff0505 ffffffff0505ffff0505ffffffff0505ffff0505ffffffff0505ffffff05050505050505ffff050505ffffffffffffff0505ffffffff0505ffffffffffffffffffffffffffff0505ffffffffffff0505ffffffff0505ffffffff05050505ffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffffffff0505ffffffffff050505ffff050505ffff0505050505050505ffff050505ffff050505ffff05050505ffffffffffff0505ff0505ff0505ffffffffffffffff0505ffffffff0505ffff ffffffffffffff0505ffffffffff050505ffff050505ffff050505ffff050505ffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffff0505ffff050505ffff050505ffff050505ffff050505ffff050505ffff050505ffffffff05 05ffffffffffffffffffffffffffffffff050505ffff050505ffff050505ffff050505ffffffff0505ffffffffffffffffffffffffffffffff050505ffff050505ffffffffffffffff0505ffff050505ffff050505ffff050505ffff050505ffffffffff0505ffffffffff050505ffff050505ffffffffffffffffffffffff ffff0505ffffffffffff050505ffff050505ffffffffffffffffffffffff050505ffff050505ffffffffff0505ffffffffffffffff0505ffffffffff050505ffff050505ffff050505ffff050505ffff050505ffff050505ffffffffffffffff0505ffff05050505ffffffffffff050505ffff050505ffffffffffffffffff ffffffffff0505ffffffffffff050505ffff050505ffffff050505050505ffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffffffff0505ffffffffff05050505 050505ffffff0505050505050505ffffff050505050505ffffff0505050505050505ffff0505050505050505ffffff050505050505ffffffff050505050505ffffffff05050505ffffffffffff050505050505ffffff05050505050505ffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffff0505ffffffffffffffffff050505050505ffffff05050505050505ffffff05050505050505ffffffff050505050505ffffffff050505050505ffffffffffffffffffffffffffff050505050505ffffffff050505050505ffffffff050505050505ffffffffffffffffffffffffff05050505050505ff ffffff050505050505ffffff05050505050505ffffffff05050505050505ffffffffff0505ffffffffffff050505050505ffffffffffffffffffffffffffff050505050505ffffffff050505050505ffffffffffffffffffffffffffff050505050505ffffffffffff0505ffffffffffff05050505ffffffffff0505050505 0505ffffff05050505050505ffffffff050505050505ffffffff050505050505ffffff0505050505050505ffffff05050505050505ffffffffffffffffffffffffff050505050505ffffffff050505050505ffffff050505ffff050505ffffff050505050505ffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffffffff0505ffffffffff0505ff050505ffffffffffff0505ffffffffffffffff05050505ffffffff0505ff0505050505ffff0505ff0505ff05ffffffff0505050505ffffffffff050505050505ffff ffff05050505ffffffffffffff05050505ffffffff0505ff050505ffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffff0505050505ffffffff0505ff050505ffffffff0505ff050505ffffffffffff05050505ffffffffff0505050505 05ffffffffffffffffffffffffffffff05050505ffffffffffff05050505ffffffffff050505050505ffffffffffffffffffffffffff0505ff050505ffffffffff0505050505ffffffff0505ff050505ffffffffffff050505ff0505ffffffffff0505ffffffffffffff05050505ffffffffffffffffffffffffffffff0505 05050505ffffffffff05050505ffffffffffffffffffffffffffffffff05050505ffffffffffffff0505ffffffffffff05050505ffffffffff0505ff050505ffffffff0505ff050505ffffffffffff05050505ffffffffff0505050505ffffffff0505ff0505050505ffffffff050505ff0505ffffffffffffffffffffffff ff050505050505ffffffffff05050505ffffffff0505ffffffff0505ffffff050505050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0505ffffffffffffffffff0505ffffffffffffffffffffffff ffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffff050505ffff050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffff0505ffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffff ffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff05050505ffffffffff050505050505ffffffffffffffffffffffffffffff050505050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff050505050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffff05050505ffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05050505ffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffff05 05ffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff05050505ffffffffff050505050505ffffffffffffffffffffffffff ffffff0505050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffff05050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffff05050505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffff0505ffffff05050505ffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05050505ffffffffffffffff0505ffffffffffffffffffffffffffffff05 05ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505 ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0505ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 07f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff02020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffff07ff070707f800ffffff02020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02020202ffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800 ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffff07ff070707f800ffffff0202ffffffffffffffff02020202ffffffffffff02020202ffffffff0202ff0202ff0202ffff0202ff0202ff0202ffffffff02020202ffffffff0202ffffffff0202ffffffffff02020202ffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02020202ffffffffffff020202ff0202ffffffff02020202ff0202ffffffff02020202ffffffffffffffffffffffffffffffffffffffffffffff0202ff02 02ff0202ffffffff02020202ffffffff0202ffffffff0202ffffffff020202ff0202ffffffffffffffffffffffffffff020202ff0202ffffffff02020202ffffffffffff02020202ffffffffffff02020202ffffffff0202ffffffff0202ffffffffffffffffffffffffffffff02020202ffffffffffffffffffffffffffff ff02020202ffffffff0202ffffffff0202ffffff020202020202ffffffffff02020202ffffffffffffff02020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffff ffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0202ffffffffffffff020202020202ffffffff020202020202ffffff0202ff0202ff0202ffff0202ff0202 ff0202ffffff020202020202ffffff0202ffffffff0202ffffffff0202020202ffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02 0202020202ffffffff02020202020202ffffff02020202020202ffffffff0202020202ffffffffffffffffffffffffffffffffffffffffffffff0202ff0202ff0202ffffff020202020202ffffff0202ffffffff0202ffffff02020202020202ffffffffffffffffffffffffff02020202020202ffffff020202020202ffff ffff020202020202ffffffff020202020202ffffff0202ffffffff0202ffffffffffffffffffffffffffff0202020202ffffffffffffffffffffffffffff020202020202ffffff020202ffff020202ffffff020202020202ffffffff020202020202ffffffffff0202020202ffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffff07ff070707f800ffffff0202ffffffffffff020202ffff020202ffff020202ffff020202ffff0202ff0202ff0202ffff0202ff0202ff0202ffff020202ffffffffffffff0202ffffffff0202ffffffff0202ffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff020202ffff020202ffff020202ffff020202ffff0202ffffff0202ffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffff0202ff0202ff02 02ffff020202ffffffffffffff0202ffffffff0202ffff020202ffff020202ffffffffffffffffffffffff020202ffff020202ffff020202ffff020202ffff020202ffffffffffffff0202ffffffff0202ffff0202ffffffff0202ffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffff020202ff ffffffffffffff020202020202ffffffffffff0202ffffffffff0202ffffffff0202ffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffff ffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0202ffffffffffff0202ffffffffffffffff0202ffffffff0202ffff0202ff0202ff0202ffff0202ff0202ff0202 ffff0202020202020202ffff0202ffffffff0202ffffffff0202ffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffff ffffffffff0202ffffffff0202ffff0202ffffffff02ffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffff0202ff0202ff0202ffff0202020202020202ffff0202ffffffff0202ffff0202ffffffff0202ffffffffffffffffffffffff0202ffffffff0202ffff0202ffffffff0202ffff0202 020202020202ffffffffffffff020202ffff0202ffffffff0202ffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffff0202020202020202ffffffff02020202ffffffffffffff0202ffffffffffffffffffff020202ffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffff07ff070707f800ffffff0202ffffffffffff0202ffffffffffffffff0202ffffffff0202ffff0202ff0202ff0202ffff0202ff0202ff0202ffff0202020202020202ffff0202ffffffff0202ffffffff0202ffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffff0202ffffffff0202ffff0202ffffffff0202ffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffff0202ff0202ff0202ffff 0202020202020202ffff0202ffffffff0202ffff0202ffffffff0202ffffffffffffffffffffffff0202ffffffff0202ffff0202ffffffff0202ffff0202020202020202ffffff020202020202ffffff0202ffffffff0202ffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffff02020202020202 02ffffffffff0202ffffffffffffffff0202ffffffffffff020202020202ffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07 ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0202ffffffffffff0202ffffffffffffffff0202ffffffff0202ffff0202ff0202ff0202ffff0202ff0202ff0202ffff02 02ffffffff0202ffff0202ffffffff0202ffffffff0202ffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffff ffff0202ffffffff0202ffffff0202ffff02020202ffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffff0202ff0202ff0202ffff0202ffffffff0202ffff0202ffffffff0202ffff0202ffffffff0202ffffffffffffffffffffffff0202ffffffff0202ffff0202ffffffff0202ffff0202ffffff ff0202ffff020202ffffffffffffff0202ffffffff0202ffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffff0202ffffffff0202ffffffff02020202ffffffffffffff0202ffffffffff020202ffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffff07ff070707f800ffffff0202ffffffffffff0202ffffffffffffffff020202ffff020202ffff0202ff0202ff0202ffff0202ff0202ff0202ffff020202ffff020202ffff020202ffff020202ffffffff0202ffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffff0202ffffffff0202ffffffff0202ffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffff0202ff0202ff0202ffff020202 ffff020202ffff020202ffff020202ffff0202ffffffff0202ffffffffffffffffffffffff020202ffff020202ffff020202ffff020202ffff020202ffff020202ffff0202ffffffff0202ffff020202ffff020202ffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffff020202ffff020202ffff ff020202020202ffffffffffff0202ffffffffff0202ffffffff0202ffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707 f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0202ffffffffffff0202ffffffffffffffffff020202020202ffffff0202020202020202ffff0202020202020202ffffff020202 020202ffffff02020202020202ffffffff020202020202ffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffff02 02ffffffff0202ffffffffff020202ffffffffff020202020202ffffffffffffffffffffffffffffffffffffffffffffff0202020202020202ffffff020202020202ffffff02020202020202ffffff0202ffffffff0202ffffffffffffffffffffffffff02020202020202ffffff020202020202ffffffff020202020202ff ffffff020202020202ffffff02020202020202ffffffffffffffffffffffffffff020202020202ffffffffffffffffffffffffffff020202020202ffffff020202ffff020202ffffff02020202ffffffffffff020202020202ffffffff020202020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 07ff070707f800ffffff0202ffffffffffff0202ffffffffffffffffffff02020202ffffffff0202ff0202ff02ffffff0202ff0202ff02ffffffffff02020202ffffffff0202ff020202ffffffffff020202020202ffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffff0202ffffffff0202ffffffff0202ff0202ffffffff020202020202ffffffffffffffffffffffffffffffffffffffffffffff0202ff0202ff02ffffffffff02020202 ffffffff0202ff020202ffffffff0202ffffffff0202ffffffffffffffffffffffffffff020202ff0202ffffffff02020202ffffffffffff02020202ffffffffffff02020202ffffffff0202ff020202ffffffffffffffffffffffffffffff020202020202ffffffffffffffffffffffffffffff02020202ffffffff0202ff ffffff0202ffffff02020202ffffffffffffff02020202ffffffffff020202020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff0202ffffffffffff020202ffff020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffff0202ffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffff020202ffff020202ffffffffffff ffffffffffffff0202ffffff0202ffffffff0202ffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07 0707f800ffffff02020202ffffffffff020202020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffff02020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffff020202020202ffffffffffffffffffffffffffffff0202ff0202ffffffffff0202ffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007ff0707f800ffffffffffffffff07ff0707f800ffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff02020202ffffffffffff02020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffff0202ffffffffffffffff02020202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffff02020202ffffffffffffffffffffff ffffffffffff020202ffffffffffff0202ffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffff0202ffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f8 00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffff0202ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff00000000ffffffff0000ffffffff0000ffffffff00000000ffffffffffff000000ff0000ffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff00000000000000ffff0000ff000000ffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff0000ff000000ffffffffff00000000000000ffffffff00000000ffff ffffffff00000000ffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000ffffffff000000000000ffffff0000ffffff000000ffffff000000000000ffffffff00 000000000000ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000ffff ff0000000000000000ffff00000000000000ffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffff00000000000000ffffff0000000000000000ffffff000000000000ffffffff000000000000ffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff0000ffffff000000ffff000000ffff000000ffff0000ffff000000ffffff000000ffffffffffffff000000ffff000000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff0000ffffffff0000ffff000000ffff000000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff000000ffff000000ffff0000ffffffff0000ffff000000ffff000000ffff00 0000ffffffffffffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff0000ffffffff0000ffff0000ff000000ffffffff0000000000000000ffff0000ffffff ff0000ffffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff0000 ffffffff0000ffff0000ffffffff0000ffffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffff000000ffff0000ffffffff0000ffff0000ffffffff0000ffff0000ffffffffffffffff0000000000000000ffffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffff0000ffffffff0000ffff0000ffffffff0000ffff0000000000ffffffffff0000000000000000ffff0000ffffffff0000ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff0000000000000000ffff0000ffffffff0000ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffff0000ffffffff0000ffff0000000000000000ffff0000ffffffffffffffff00000000 00000000ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff0000ffffffff0000ffff00000000ffffffffffff0000ffffffff0000ffff0000ffffffff0000 ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff00000000 000000ffff0000ffffffff0000ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffff000000ffffffffffffff0000ffffffff0000ffffff00000000000000ffff0000ffffffffffffffff0000ffffffff0000ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07 070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffff0000ffffffff0000ffff000000ffff000000ffff000000ffffffffffffff000000ffff000000ffff0000ffffffff0000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffff0000ffff000000ffff000000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff000000ffff000000ffffffffffffffff0000ffff000000ffff000000ffff000000ffff0000 00ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffffff000000000000ffffff00000000ffffffffffffff000000000000ffffff0000ffffffff0000ffffff 000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff000000000000ff ffff00000000000000ffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffff000000000000ffffff00000000000000ffffffff000000000000ffffffff000000000000ffffffff000000000000ffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ffffffffff fffffffffffffffffffffffff80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffff0000ffffffff0000ffffffff00000000ffffffff0000000000ffffffffffffff00000000ffffffff0000ffffffff0000ffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff0000000000ffffffff0000ff000000ffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff0000ff000000ffffffffff0000000000ffffffffffff00000000ffffffffffff00000000ffffffff ffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff070707070707070707070707070707070707070007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffff000000ffffffffffffffffffffffff0000ff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffff00 00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff 07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffff00000000000000ffffffffffffffffffffffffff0000ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffffffffffffffffffff0000ffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffff0000ffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07 ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff 07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07 ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707 ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707 f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ff ffffffff000000000000ffffffff000000000000ffffffffff00000000ffffffff0000ffffffff0000ffffffffffffffffffffffff0000ff000000ffffffffffff000000ff0000ffffffffff00000000ffffffffffff00000000ffffffffff00000000ffffffff0000ffffffff0000ffffffffffffffffffffffffffffffff ffffffffffffffff00000000ffffffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff000000000000ffffffff000000000000ffffffff000000000000ffffff0000ffffff0000ffffffffffffffffffffffffff00000000000000ffffffff00 000000000000ffffffff0000000000ffffffffff0000000000ffffffff000000000000ffffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffff0000ffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ff ffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000ffff000000ffff ffffff0000ffffffffffffffff0000ffffffffff000000ffff000000ffff0000ffff0000ffffffffffffffffffffffffffff000000ffff000000ffff000000ffff000000ffffffff0000ffffffffffffffff0000ffffffffffff000000ffff000000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffff ffffff000000ffff000000ffff0000ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff0000ffffffffffffffff0000ffffffffff0000ffffffffffffffff0000000000ffffffffffffffffffffffffffffff0000ffffffff0000ffff0000ffffff ff0000ffffffff0000ffffffffffffffff0000ffffffffffff0000ffffffff0000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff0000ff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffff ffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff 0000ffffffffffffffff0000ffffffffff0000ffffffffffffffff000000ffffffffffffffffffffffffffffffffff0000ffffffff0000ffff0000ffffffff0000ffffffff0000ffffffffffffffff0000ffffffffffff0000ffffffff0000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffff 0000ffffffff0000ffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff0000ffffffffffffffff0000ffffffffff0000ffffffffffffffff00000000ffffffffffffffffffffffffffffffff0000ffffffff0000ffff0000ffffffff0000 ffffffff0000ffffffffffffffff0000ffffffffffff0000ffffffff0000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffff ff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff0000ff ffffffffffffff0000ffffffffff000000ffff000000ffff0000ff0000ffffffffffffffffffffffffffffff000000ffff000000ffff0000ffffffff0000ffffffff0000ffffffffffffffff0000ffffffffffff000000ffff000000ffff000000ffff000000ffffffffffffffffffffffffffffffffffffffffffff0000ff ffffff0000ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff0000ffffffffffff00000000ffffffffffff000000000000ffffff0000ffff0000ffffffffffffffffffffffffffff00000000000000ffffff0000ffffffff0000ffffff 000000000000ffffffff000000000000ffffffff000000000000ffffff00000000000000ffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff 0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff0000ffffffff ffff00000000ffffffffffffff00000000ffffffff0000ffffff0000ffffffffffffffffffffffffff0000ff000000ffffffff0000ffffffff0000ffffff000000000000ffffffff000000000000ffffffffff00000000ffffffff0000ff000000ffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff 0000ffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000ffff000000ffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff0000 ffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffff000000ffff000000ffff0000ff000000ffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f8 00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff00000000ffffffffffffff ffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff000000000000ffff ff0000ffff000000ffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07 ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffffff00000000ffffffffffffffff0000ffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff0000ffffff ffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff00000000ffffffff0000ffffff0000ffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000 ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707 07f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800 ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffffff000000000000ffffffff000000000000ffffffffff00000000ff ffffff0000ffffffff0000ffffffffffffffffffffffffff000000000000ffffffffffff00000000ffffffffff00000000ffffffff0000ff0000ff0000ffffffffffffffffffffffffff0000ffff0000ffffffffffff0000ffffffffffffffffffffffffffffffffff00000000ffffffffffff0000ffffffffffffffffffff ffffffffffffff000000000000ffffffff000000000000ffffffffff00000000ffffffffffffff00000000ffffff0000ff000000ffffffffffff00000000ffffffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff000000000000ffffffff000000000000ffffffff000000000000ffffff0000ffffff0000ffffffffffffffffffffffffffff000000000000ffffffffff0000000000ffffffff000000000000ffffff0000ff0000ff0000ffffffff ffffffffffffffffff0000ffff0000ffffffffffff0000ffffffffffffffffffffffffffffffff000000000000ffffffffff0000ffffffffffffffffffffffffffffffffff000000000000ffffffff000000000000ffffffff000000000000ffffffffff0000000000ffffff00000000000000ffffffff000000000000ffff ff000000ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000ffff000000ffffffffff0000ffffffffffffffff0000ffffffffff000000ffff000000ffff 0000ffff0000ffffffffffffffffffffffffffffffffff0000ffffffffffffff0000ffffffffffff000000ffffffffffffff0000ff0000ff0000ffffffffffffffffffffffffff0000ffff0000ffffffffffff0000ffffffffffffffffffffffffffffff000000ffff000000ffffffff0000ffffffffffffffffffffffffff ffffffffffff0000ffffffffffffffff0000ffffffffff0000ffffffff0000ffffffff0000ffffffffffff000000ffff000000ffff000000ffff000000ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff0000ffffffffffffffff0000ffffffffff0000ffffffffffffffff0000000000ffffffffffffffffffffffffffffffffffff0000ffffffffffffff0000ffffffffffff0000000000000000ffff0000ff0000ff0000ffffffffffffff ffffffffff0000000000000000ffffffffff0000ffffffffffffffffffffffffffffff0000ffffffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffff0000ffffffffffffffff0000ffffffffffffffffffff000000ffffffff0000ffffffffffff0000ffffffff0000ffff0000ffffffff0000ffffffff 00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff0000ffffffffffffffff0000ffffffffff0000ffffffffffffffff000000 ffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff0000ffffffffffff0000000000000000ffff0000ff0000ff0000ffffffffffffffffffffffff0000000000000000ffffffffff0000ffffffffffffffffffffffffffffff0000ffffffff0000ffffffff0000ffffffffffffffffffffffffffffffff ffffff0000ffffffffffffffff0000ffffffffffff000000000000ffffffffff0000ffffffffffff0000ffffffff0000ffff0000ffffffff0000ffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff0000ffffffffffffffff0000ffffffffff0000ffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffff0000ffffffffffffff0000ffffffffffff0000ffffffff0000ffff0000ff0000ff0000ffffffffffffffffffff ffffff0000ffff0000ffffffffffff0000ffffffffffffffffffffffffffffff0000ffffffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffff0000ffffffffffffffff0000ffffffffff000000ffffffffffffffffff0000ffffffffffff0000ffffffff0000ffff0000ffffffff0000ffffffff000000 00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff0000ffffffffffffffff0000ffffffffff000000ffff000000ffff0000ff0000ff ffffffffffffffffffffffffffffffffff0000ffffffffffffff0000ffffffffffff000000ffff000000ffff0000ff0000ff0000ffffffffffffffffffffffffff0000ffff0000ffffffffffff0000ffffffffffffffffffffffffffffff000000ffff000000ffff0000000000000000ffffffffffffffffffffffffffffff 0000ffffffffffffffff0000ffffffffff0000ffffffff0000ffffffff0000ffffffffffff000000ffff000000ffff000000ffff000000ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07 ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff0000ffffffffffff00000000ffffffffffff000000000000ffffff0000ffff0000ffffffffffffffffffffffffffffff00000000ffffffffffff000000000000ffffffff000000000000ffffff0000000000000000ffffffffffffffffffffffff00 00000000000000ffffffffff0000ffffffffffffffffffffffffffffffff000000000000ffffff0000000000000000ffffffffffffffffffffffffffffff0000ffffffffffff00000000ffffffffffff000000000000ffffffff000000000000ffffff00000000000000ffffffff000000000000ffffff000000ffff000000 ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffff0000ffffffffffff00000000ffffffffffffff00000000ffffffff0000ffffff0000ffff ffffffffffffffffffffffff00000000ffffffffffff000000000000ffffffffff00000000ffffffff0000ff0000ff00ffffffffffffffffffffffffff0000000000000000ffffffffff0000ffffffffffffffffffffffffffffffffff00000000ffffffffffff0000ffffffffffffffffffffffffffffffffffffff0000ff ffffffffff00000000ffffffffffffff00000000ffffffffff000000000000ffffff0000ff000000ffffffffffff00000000ffffffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff 07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffff000000ffff000000ffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ff ff0000ffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffff0000ffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffff0000ffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffffffffffffffffff00000000ffffffff ffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07 ff07ff07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffff00000000ffffffffff00000000ffffffffffffffff0000ffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffff0000 ffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffffffffffffff00000000ffffffffffffffff0000ffffffffffffffffffffffffffffffffff0000ffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffff0000ffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff 07ff07ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000 0000000007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00fb00 fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb 00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f8 0007ff0707f800ffffffffffffffff07ff0707f800fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ffff04040404040404040404040404040404 04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040407ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffff0505050505050505050505050505ffffffff000404040404 04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ff0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404 0404040404040404040404040404040404040407ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff00000000ffffffff0000ffffffff0000ffffffff00000000ffffffffffff000000ff0000ffffffff00000000ffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff 0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffff0506060606060606060606060605fffffffffb04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ff0404040404040404040404040404040404 04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040407ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000 0000ffffffff000000000000ffffff0000ffffff000000ffffff000000000000ffffffff00000000000000ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffff0506020202020202020202020205ffffffff00040404ffffff0404 0404ffff04ff0404ff040404ff040404ff0404ff040404ff040404ff040404ffffffff04ff04ff0404040404ff0404040404040404ff040404ff040404ff0404ff0404ff040404040404ffffff04040404ffffffff04040404ffffffff040404ff040404ff0404040404ff04ffffff04040404ffffffff040404040404ff04 0404ff040404ffffffff040404ff040407ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffff000000ffff000000ffff000000ffff0000ffff000000ffffff000000ffffffffffffff000000ffff000000ffff0000ffffffff0000ffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f8 00ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffff0506020202020202020202020205fffffffffb0404ff040404ff0404ff0404ffff0404ff040404ff040404ff0404ff040404ff040404ff0404ff04040404ff0404ff04040404ff04ff04040404040404ff040404ff040404ff0404ff 0404ff0404040404ff040404ff0404ff04040404ff0404ff04040404ff0404ff040404ff0404040404ffff040404ff0404ff04040404ff0404040404ff040404ff0404ff04040404ff0404ff040407ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000 ffff0000ffffffff0000ffff0000ff000000ffffffff0000000000000000ffff0000ffffffff0000ffffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffff0506020202020202020202020205ffffffff00040404040404ff0404ff04 0404ff0404ff040404ff040404ff0404ff040404ff040404ff0404ff04040404ff0404ff04040404ff04ff040404040404ff04ff04ff04ff0404ff0404ff0404ff040404040404040404ff0404ff04040404ff0404ff04040404ff0404ff040404ff0404040404ff04040404ff0404ff04040404040404040404ff040404ff 0404ff04040404040404ff040407ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff0000ffffffff0000ffff0000000000ffffffffff0000000000000000ffff0000ffffffff0000ffffff000000000000ffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070700000000000000000007070707f80007ff0707f800ffff ffffffffffff07ff0707f800fffffffffffffffff8fff8fff8fff8fff8fff8ff0506020202020202020202020205fffffffffb040404ffffff040404ff040404ff0404ff040404ff040404ff0404ff040404ff040404ff0404ff04040404ff0404ff040404ff040404ff0404040404ff04ff04ff04ff0404ff0404ff0404ff 040404040404ffffff040404ff04040404ff0404ff04040404ff0404ff040404ff0404040404ff04040404ff0404ffffffffffff0404040404ff040404ff0404ffffffffffff0404ff040407ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff00 00ffffffff0000ffff00000000ffffffffffff0000ffffffff0000ffff0000ffffffff0000ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707000000000000000707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffff0506020202020202020202020205ffffffff000404ff040404040404ff040404ff 0404ff040404ff040404ff0404ff040404ff040404ff040404ffffffffff0404ff040404ff040404ff0404040404ff04ff04ff04ff0404ff0404ff0404ff0404040404ff040404040404ff04040404ff0404ff04040404ff0404ff040404ff0404040404ff04040404ff0404ff04040404ff0404040404ff040404ff0404ff 04040404ff0404ff040407ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffff000000ffff000000ffff000000ffffffffffffff000000ffff000000ffff0000ffffffff0000ffff0000ffffffff0000ffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffff000000ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070000000000070707070707f80007ff0707f800ffffffffff ffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffff0506020202020202020202020205fffffffffb0404ff040404ff0404ff040404ff0404ffff0404ffff0404ff0404ffff0404ffff0404ff0404ff04040404ff0404ffff04ff0404040404ff040404ff040404ff040404ff04ff0404ff0404ff040404 0404ff040404ff0404ff04040404ff0404ff04040404ff0404ffff0404ff0404040404ffff040404ff0404ff04040404ff0404040404ffff0404ff0404ff04040404ff0404ffff0407ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffffff000000 000000ffffff00000000ffffffffffffff000000000000ffffff0000ffffffff0000ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070700000007070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffff0506020202020202020202020205ffffffff00040404ffffff040404ff040404ff0404ff 04ffff0404ffff040404ff04ffff0404ffff04040404ffffffff040404ff04ffff0404040404ff040404ff040404ff040404ff04ff0404ff0404ff040404040404ffffff04040404ffffffff04040404ffffffff040404ff04ffff040404040404ff04ffffff04040404ffffffff040404040404ff04ffff04040404ffffff ff040404ff04ff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff0000ffffffff00000000ffffffff0000000000ffffffffffffff00000000ffffffff0000ffffffff0000ffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffff0000ff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707000707070707070707f80007ff0707f800ffffffffffffffff 07ff0707f800ffffffffffffffffffffffffffffffffffffffff0506020202020202020202020205fffffffffb040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ff0404ff040404040404 0404040404040404040404040404040404040404040404040404040404040404ff040404040404040404040404040404040404ff040404040404040404040404040404040407ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffff000000ffffffffffffffffff ffffff0000ff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffff0506020202020202020202020205ffffffff000404040404040404040404040404040404040404 04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ff0404ff0404040404040404040404040404040404040404040404040404040404040404040404040404ff040404040404040404040404040404040404ff04040404040404040404040404 0404040407ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000ffffffffffffffffffffffffff0000ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff ffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff07 07f800ffffffffffffffffffffffffffffffffffffffff0506020202020202020202020205fffffffffb040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ff0404ff0404ff040404040404040404 0404040404040404040404040404040404040404040404040404040404ff040404040404040404040404040404040404ff040404040404040404040404040404040407ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffffffffffffffffffff 0000ffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffff00ffffffffffff00ffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffff0506020202020202020202020205ffffffff000404040404040404040404040404040404040404040404 04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404 0407ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffff 0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800 ffffffffffffffffffffffffffffffffffffffff0505050505050505050505050505fffffffffb04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404 04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040407ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000404040404040404040404040404040404040404040404040404 040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040407ff 070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07fffffffffffffffffffffffffffffffffff80007ff0707f800ffffffffffffffff07ff0707f800ffffff fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00 fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb0007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffff070707070707070707070707070707070707070007ff0707f800ffffffffffffffff07ff0707f8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007ff070707 fff0707f800ffffffffffffffff07ff0707f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff070707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff0707f800ffffffffffffffff07fff800ffffffffffffffff07fff800ffffffffffffffff07fff800ffffffffffffffff07ff0707ffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff070707ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0707f800ffffffffffffffff07ff0707f8070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707ff070707fff0707f800ffffffffffffffff07ff0707f800000000000000000000000000000000 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07ff07ff0000000000000000000000000000000000000000070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f80007f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f800070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070707070707070707 f80007ff07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07ff07ff07ff07070707070707070707070707070707f800070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070707070707070707f80007ff07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff07070707070707070707070707070707f800070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070707070707070707f80007 ff07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff 07ff07ff07070707070707070707070707070707f800070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070707070707070707f80007ff07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff07070707070707070707070707070707f800070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070007070707070707f80007ff0707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07 ff07070707070700070707070707070707f800070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707000007070707070707f80007ff07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff07070707070700000707070707070707f800070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f80007ff07070707070700000007070707070707f80007ff0707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707 0707070700000007070707070707f800070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f80007ff07070707070000000007070707070707f80007ff07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff07070707070700000000070707070707f800070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f80007ff07070707000000000007070707070707f80007ff0707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707070707 0700000000000707070707f800070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f80007ff07070707070000000007070707070707f80007ff07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff07070707070700000000070707070707f800070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f80007ff07070707070700000007070707070707f80007ff0707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707070707070000 0007070707070707f800070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707000007070707070707f80007ff07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff07070707070700000707070707070707f800070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070007070707070707f80007ff0707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707070707070007070707 0707070707f800070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffff07ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070707070707070707f80007ff07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff07070707070707070707070707070707f800070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070707070707070707f80007ff0707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707070707070707070707070707 0707f800070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffff07ff0707f800ffffffffffffffff07ff0707f80007ff07070707070707070707070707070707f80007ff07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707f80007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff07070707070707070707070707070707f800070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f80007fffffffffffffffffffffffffffffffffff80007ffffffffffffffffffffffffffffffffffffffffff fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07fffffffffffffffffffffffffffffffffff8 00070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 07ff0707f800ffffffffffffffff07ff0707f8000707070707070707070707070707070707070700070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070007ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff070707070707070707070707070707070707070700070707070707070707070707070707070707070707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff04040404 04ffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000 00000000000000000000000000000000000007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07 07f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffff00ffffffffffffffffff00ffffffffffffffffff00ffffffff000000ffffff000000ffff00ffff000000ffffffffff00ffff00ffff00ffff000000ffff00ffffff00ffff0000ff00 ffffffff0000ffff000000ffffff000000ffff0000ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff0404040404ffff 00ffffffffffffffffff00ffffff00ffffff00ff00ffffff00ff00ff00ffffff00ffffffff00ffff00ffff00ff00ffffff00ff00ffffff00ff00ffff0000ffffffff00ffff00ffffff00ff00ffffff00ff00ffff00ffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707 07070707070707070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800 ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ff00ff00ff00ffffffffff00ffffffffffffffffff00ffffffffffffffffff00ffffff00ffffff00ff00ffffff00ff00ffffffff00ffffffffff00ffff00ffff00ff00ffffffffff00ffffff00ff00ffffff00ffffff ff00ffff00ffffffffffffffff00ffff00ffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff0404040404ffff00ffff ffffffffffffff00ffffff00ffffff00ff00ffffff00ff00ffff0000ffffffffffff00ffff00ffff00ff0000000000ff00ffffff00ff00ffffff00ffffffff00ffff0000000000ffff0000ffffff00ffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707070707 07070707070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffff ffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffff00ffffffffffffffffff00ffffffffffffffffff00ffffff00ffffff00ff00ffffff00ff00ff00ffffff00ffffffff0000ff00ffff00ff00ffffff00ff00ffffff00ff00ffffff00ffffffff00ff ff00ffffff00ff00ffffff00ff00ffff00ffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff040404ffffffff00ffffffffff ffffffff00ffffffff000000ffffff000000ffff00ffff000000ffffffffff00ff00000000ffffff000000ffff00000000ffff00ffffff00ffffff000000ffff000000ffffff000000ff000000ffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707070707070707 07070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffff ffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffff00ffffffffffff00000000ffffffffffffffffff00ffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff ffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707000707070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff040404ff000700ffffffffffffffff00 00000000ffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707070707000000070707 07070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07 ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffff00ffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070000000000070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff070707070000000000000007070707 07f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707 f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070700000000000000000007070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f800 07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ff ffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000ffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff07 0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffff ffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffff00ffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff0404040404ffff00ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffff00ffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707f8 00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffff ffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffff00ffffffffffffffffff00ffffffffffffffffff000000ffffffffff00ffffffff000000ffff00ffffff0000ffffff00ffffff00ff0000ffffff000000ffff00ffff00ff00ffffff00ffff000000ffffff000000ffff00ffffff0000ffffffff 0000ffff000000ffffff000000ffff0000ffff000000ffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff0404040404ffff00ffffffffffffffff00ffffff00ffffffff00ffffff00ff ffff00ff00ffffff00ffffffff00ffffff0000ffff00ff00ffffff00ff00ffff00ff00ffffff00ff00ffffff00ff00ffffff00ff00ffffff00ffffffffff00ffff00ffffff00ff00ffffff00ff00ffff00ffffff00ffffffffffffffffffffffffff07fffffffffffffffffffffffffffffffffff80007ff070707f800ffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffff ffffffffffffffffffffffffffffffff00ff00ff00ff00ffffffffff00ffffffffffffffffff00ffffffffffffff00ffffffffff00ffff00ff00ffff00ffffffffff00ffffff00ffffff00ff00ffff00ffffff00ff00ffffffffffff00ff00ff00ffffff00ffffffff00ffff00ffffffffff00ffffff00ffffffffff00ffff 00ffffffffffffffff00ffff00ffffffffff00ffffffffffffffffffffffffffff070707070707070707070707070707070707070007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff0404040404ffff00ffffffffffffff00ffffffffff00ffff00ff00ffff0000000000 ff00ffffff00ffffff00ff00ffff00ffffff00ff0000000000ffff00ff00ff00ffffff00ffff0000ffffff0000000000ff00ffffff00ffffffffff00ffff0000000000ffff0000ffffff00ffffff0000ffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff070707f800ffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffff ffffffffffffffffffffffffff00ffffffffffffffffffffff00ffffffffffffffffff00ffffffffffffff00ffffffffff00ff00ffffff00ff00ffffff00ff0000ffff00ffff00ffffff00ff0000ffff00ff00ffffff00ffff00ff00ff00ffffff00ff00ffffff00ff00ffffff00ff0000ffff00ffffffffff00ffff00ffff ff00ff00ffffff00ff00ffff00ffffff00ffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff040404ffffffff00ffffffffffffff00ffffffffff00ff00ffffff00ffff000000ffff00ff 00000000ff00ffffff00ff00ff0000ffffff000000ffffff00ff00ff00000000ffffff000000ffffff000000ffff00ff00000000ffffff000000ffff000000ffffff000000ff000000ffff000000ffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff070707f800ffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffff ffffffffffffffffffff00ffffffffffffffffffffff00ffffffffffff00000000ffffffffffffffff00ffffff00ffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffff00ffffffffff00ffffffffffffffff ffffffffffff00ffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff040404ff000700ffffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffff00 ffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffff00ffffffffff00ffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff070707f800ffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffff ffffffffffffff00ffffffffffffffffffffff00ffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff070707f800ffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffff ffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff070707f800ffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffff ff00ffffffffffffffffffffffffffffffffffffffffffffffffff04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000ffffff0404040404040404040404040404040404040404040404040404040404040404040404040404 0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff070707f800ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ff ffffffffffffffffffff00ffffffffffffffffff00ffffff04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff0404040404ffff00ffffff0404040404040404040404040404040404040404040404040404040404040404040404040404040404 0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff ffffffffffffff00ffffffffffffffffff00ffffff040404040404ff04040404ffff04ff04ff04ffff0404ff0404ff04ff040404ff0404ffff04ff0404ffffff0404ff040404ff04ffff04040404ffff0404ffffff040404ffffff0404ffff0404ffffff040404040404ffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff0404040404ffff00ffffff040404040404ff040404ff0404ffff04ffff0404ff04ff0404ff04ff040404ff04ff0404ffff04ff040404ff 04ff040404ff04ff0404040404ff0404ff040404ff04ff040404ff04ff0404ff040404ff0404040404ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ff00ff00ff00ff ffffffff00ffffffffffffffffff00ffffff040404040404ff040404ff040404ff04ff040404ff0404ff04ff04ff040404ff04ff040404ff04ff0404040404ff040404ff04ff0404040404ff0404ff0404040404040404ff0404ff0404040404ff040404040404ffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff0404040404ffff00ffffff040404040404ff04040404ffffffff04ff040404ff0404ff04ff04ff040404ff04ff040404ff04ffffffffff04ff04 0404ff04ff0404040404ff0404ffffffffff0404ffff040404ff040404ffff04040404040404ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffff ff00ffffffffffffffffff00ffffff040404040404ff040404ff040404ff04ffff0404ff0404ff04ff04ff040404ff04ff0404ffff04ff040404ff04ff040404ff04ff0404040404ff0404ff040404ff04ff040404ff04ff0404ff040404ff0404040404ffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff040404ffffffff00ffffff040404040404ff04040404ffffff0404ff04ffff040404ff04ff04ffffffff040404ffff04ff0404ffffff0404ffffffff04 ffffff040404ffffff0404ffffff040404ffffff04ffffff0404ffffff040404040404ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffff00ff ffffffffff00000000ffffff040404040404ff040404040404040404ff04040404040404ffff0404040404040404040404ff04040404040404040404040404ff0404040404ff0404040404040404040404040404ff040404040404040404040404ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff0707ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff040404ff000700ffffffff04040404ffffffffff04040404040404ff04040404040404ffff0404040404040404040404ff04040404040404040404040404ff04 04040404ff0404040404040404040404040404ff040404040404040404040404ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff07ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffff00ffffffff ffff0000ffffffffff04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 000000000000000000000000000000000000000007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07 ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000ffffffffffff0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404 0404040404040404040404040404040404040404040404040404040404ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffff ffffffffffff04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07 070707070707070707070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707 f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404 0404040404040404040404040404040404040404040404040404ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707 070707070707070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ff ffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffff00ffffffffffffffffff00ffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707 070707070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffff ffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff0404040404ffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffff00ffffffffffffffffff00ffffffffffff ffff00000000ffff00ffff00ffff00ffff0000ff00ff00ffffff0000ffffffff00ff00ffffff00ffff0000ff00ffff000000ffff00ffffff00ff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707 070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffff ff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff0404040404ffff00ffffffffffffff00ffffffff00ff00ffff00ffff00ff00ffff0000ff00ffffff00ffffffffff00ff00ffffff00ff00ffff0000ff00ffffff00ff00ffffff00ff00ffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ff00ff00ff00ffffffffff00ffffffffffffffffff00ffffffffffffffffff ffffff00ff00ffff00ffff00ff00ffffff00ff00ffffff00ffffffffff00ff00ffffff00ff00ffffff00ff00ffffffffff00ffffff00ff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707 070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff 0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff0404040404ffff00ffffffffffffffffffff0000ffff00ffff00ffff00ffff00000000ff00ffffff00ffffffffff00ff00ffffff00ff00ffffff00ff0000000000ff00ffffff00ff00ffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffff00ffffffffffffffffff00ffffffffffffffff0000ffff ffff0000ff00ffff00ff00ffffff00ff0000ffff00ffffffffff00ff00ffffff00ff00ffff0000ff00ffffff00ff00ffffff00ff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707 f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f8 00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff040404ffffffff00ffffffffffffff00ffffffffffff00ff00000000ffffff000000ffff00ff00000000ffffffff00ff00000000ffffff0000ff00ffff000000ffff00000000ff000000ffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffff00ffffffffffff00000000ffffffffffffff00ffffffff00ffff ffffffffffffffffffffffffffffffffff00ffffffffff00ffffffffffffffffffffff00ffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07fffffffffffffffffffffffffffffffffff80007 ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff040404ff000700ffffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff00ffffffffff00ffffffffffffffffffffff00ffffffffffffffffffffffffff00ffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff070707070707070707070707070707070707070007ff070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffff00ffffffffffff0000ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000007ff0707 07fff0707f800ffffffffffffffff07ff0707f800ffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007ff070707fff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707fff0707f800ffffffffffffffff07ff0707f800ffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707f8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0000000000000000000000000000000000000000000000000000000000000000000007ff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04040404040404040404040404040404040404040404040404040404040404040404040404 04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707fff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffff04ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04ffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707fff0707f800ffffffffffffffff07ff0707f800fffffffffffff8f8f8f8f8f8f8f8f8ffffffffffffff00000000000000000000000000ff04ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707fff0707f800ffffffffffffffff07ff0707f800fffffffffffff8ffffffffffffff f8fffffffffffff8f8f8f8f8f8f8f8f8f8f8f8f800ff04ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04ffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707fff0707f800ffffffffffffffff07ff0707f800fffffffffffff8fffffffffffffff8fffffffffffff8ff07fb07fb07fb07fbfbf80000ff04ffffffff00000000ffffff000000ffffff0000ff00ff00ffffffff000000ffffff000000ffffffffff00 00000000ffff0000ff00ff00ff0000ffffffffff00000000ffff00ffffff00ff00ffff00ffffff00ffffffffff04ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070700000000000000000007070707f80007ff070707fff0707f800ffffffffffffffff07ff0707f800fffffffffffff8fffffffffffffff8ffff fffffff8ff07fb07fb07fb07fb07fb00f800ff04ffffff00ffffffff00ff00ffffff00ff00ffff0000ff00ffffff00ffffff00ff00ffffff00ffffffff00ffffffffff00ffff0000ff00ff00ffffffffff00ffffffff00ff00ffffff00ff00ffff00ffffff00ffffffffff04ffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707000000000000000707070707f80007ff070707fff0707f800ffffffffffffffff07ff0707f800fffffffffffff8ff0000000000fff8ff00fffffff8fffb07fb07fb07fb07fb0700f800ff04ffffffffffffffff00ff00ffffff00ff00ffffff00ff00ffffff00ffffffffff00ffffffffffffffff00ffffff ffff00ffffff00ff00ff00ffffffffffffffffffff00ff00ffffff00ff00ffff00ffffff00ffffffffff04ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070000000000070707070707f80007ff070707fff0707f800ffffffffffffffff07ff0707f800fffffffffffff8fffffffffffffff8fffffffff8 fffb07fb07fb07fb07fbfb00f8f800ff04ffffffffffff0000ffff00ffffff00ff00ffffff00ff00ffffff00ffffffffff0000000000ffffffff00ffffffffff00ffffff00ff00ff00ffffffffffffffff0000ffff00ffffff00ff00ffff00ffffff00ffffffffff04ffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070700000007070707070707f80007ff070707fff0707f800ffffffffffffffff07ff0707f800fffffffffffff8fffffffffffffff8fffffffff8fffffffffffffffffffff8f807f800ff04ffffffff0000ffffffff00ffffff00ff00ffffff00ff0000ffff00ffffff00ff00ffffff00ffffffff0000000000ff00 ffff0000ff00ff00ffffffffffff0000ffffffff00ffffff00ff00ffff00ffffff00ffffffffff04ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707000707070707070707f80007ff070707fff0707f800ffffffffffffffff07ff0707f800fffffffffffff8fffffffffffffff8fffffffff8f8f8f8 f8f8f8f8f8f8f8f8f8fbf800ff04ffffff00ffffffffffffff000000ffff00ffffff00ff00ff00ffff000000ffffff000000ffffffffff00ffffffffffff0000ff00ff00000000ffffffff00ffffffffffff00000000ffff00ff000000ff000000ffffffff04ffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707fff0707f800ffffffffffffffff07ff0707f800fffffffffffff8f8f8f8f8f8f8f8f8fffffffffff8fffb07fb07fb07fb07fb07fbf800ff04ffffff00ffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffff 00ffffff00ffffffffff00ffffffff00ffffffffffffffffffff00ffffff00ffffffffff04ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707fff0707f800ffffffffffffffff07ff0707f800fffffffffffffffffffffffffffffffffffffffff8ff07fb07fb 07fffffffffffff800ff04ffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000ffffffffff00ff00ff00ffffffffffff00000000ffffffffffffffff00ffffff00ffffff00ffffffff04ffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707f8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0000000000000000000000000000000007ff0707f800ffffffffffffffff07ff0707f800fffffffffffffffffffffffffffffffffffffffff8fffb07fb07fbfff8f8f8f8f8f8ffff04ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707fff0707f800ffffffffffffffff07ff0707f800fffffffffffffffffffffffffffffffffffffffffff8fffffffffff8ff ffffffffffffff04ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707fff0707f800ffffffffffffffff07ff0707f800fffffffffffffffffffffffffffffffffffffffffffff8f8f8f8f8ffffffffffffffffff04ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07fffffffffffffffffffffffffffffffffff80007ff070707fff0707f800ffffffffffffffff07ff0707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffff0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffff070707070707070707070707070707070707070007ff070707fff0707f800ffffffffffffffff07ff0707f80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007ff070707fff0707f800ffffffffffffffff07ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff070707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8ff0707f800ffffffffffffffff07ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707f8fff800ffffffffffffffff07ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f8fff800ffffffffffffffff07ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707f8fff800ffffffffffffffff07ff070707070707070700000000000000000000000000000000000000000000000707070707070707000000000000 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000070707070707f8fff800ffffffffffffffff07ff0707070707070707fff8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8000707070707070707fff8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f800fff8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f800fff8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8000707 07070707f8fff800ffffffffffffffff07ff0707070707070707ff070707ffffffffffffffffffffffffffffffff07f8000707070707070707ff070707ffffffffff ffffffffffffffffffffff07f800ff070707ffffffffffffffffffffffffffffffff07f800ff070707ffffffffffffffffffffffffffffffff07f800070707070707f8fff800ffffffffffffffff07ff0707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f8000707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f8000707070707 07f8fff800ffffffffffffffff07ff0707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f8000707070707070707ff0707f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800070707070707f8fff8 00ffffffffffffffff07ff0707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f8000707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800070707070707f8fff800ffffffffffffffff07ff0707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f8000707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800070707070707f8fff800ffff ffffffffffff07ff0707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f8000707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800070707070707f8fff800ffffffffffffffff07ff0707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f8000707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800070707070707f8fff800ffffffffff ffffff07ff0707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f8000707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800070707070707f8fff800ffffffffffffffff07ff0707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f8000707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07 f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800070707070707f8fff800ffffffffffffffff 07ff0707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f8000707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800070707070707f8ff070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07ff0707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f8000707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff 0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800070707070707f8fff800ffffffffffffffff07ff07 07070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f8000707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800070707070707f8fff800ffffffffffffffff07ff0707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f8000707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800070707070707f8fff800ffffffffffffffff07ff07070707 07070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f8000707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800070707070707f8fff800ffffffffffffffff07ff0707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f8000707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800070707070707f8ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07ff07070707070707 07ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f8000707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff07f800070707070707f8fff800ffffffffffffffff07ff0707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80707f8000707070707070707ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80707f800ff0707f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f80707f800ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80707f800070707070707f8ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07ff0707070707070707ff07 07070707070707070707070707070707070707f8000707070707070707ff0707070707070707070707070707070707070707f800ff0707070707070707070707070707070707070707f800ff0707070707070707070707070707070707070707f800070707070707f8fff800ffffffffffffffff07ff0707070707070707ff0707070707070707070707070707070707070707f8000707070707070707ff0707070707070707070707070707070707070707f800ff070707070707070707070707 0707070707070707f800ff0707070707070707070707070707070707070707f800070707070707f8fff800ffffffffffffffff07ff0707070707070707ffffffffff ffffffffffffffffffffffffffffffffff000707070707070707ffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff00070707070707f8fff800ffffffffffffffff07ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707f8fff800ffffffffffffffff07ff07070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f8fff800ffffffffffffffff07ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707f8fff800ffffffffffffffff07ff0707ffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07ff0707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07fff8ff070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07fff8ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07fff8ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707f800ffffffffffffffff07ff0707070707070707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000070707070707070707070707f8 00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000007ff070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000007ff070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000007ff07070707070707070707070700000000000000000000000000000000000000000000000707070707070707000000000000000000000000000000000000000000000007070707070707070000000000000000000000 000000000000000000000000070707070707f8ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07ff0707070707070707fff8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f800fff8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f800fff8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f800070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f80007ff070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007ff0707070707070707 07070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007ff070707070707070707070707fff8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8000707070707070707fff8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8000707070707070707fff8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f800070707070707f8ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707f800ffffffffffffffff07ff0707070707070707ff0707070707070707070707070707070707070707f800ff0707070707070707070707070707070707070707f800ff070707ffffffffffffffffffffffffffffffff07f800070707070707070707070707f800ffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000 0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707ff0707070707070707070707070707070707070707f8000707070707070707ff0707070707070707070707070707070707070707f8000707070707070707ff07070707070707070707070707 07070707070707f800070707070707f8ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07ff0707070707070707ff0707070707000000000000000000000000070707f800 ff0707070707070707070707070707070707070707f800ff070707070707070707070707070707070707ff07f800070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707 f80007ff070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707070707070707070707 07f800ffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707ff07070707070707070707070707 07070707070707f8000707070707070707ff0707070707070707070707070707070707070707f8000707070707070707ff0707070707070707070707070707070707070707f800070707070707f8ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707f800ffffffffffffffff07ff0707070707070707ff0707070707000707070707070707070700070707f800ff0707070707070707070707070707070707070707f800ff070707070700000000000000000000000000ff07f800070707070707070707070707f800ffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000 ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707ff0707070707070707070707070707070707070707f8000707070707070707ff0707070707070707070707070707070707070707f8000707070707070707ff07070707070707070700000007070707 07070707f800070707070707f8ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07ff0707070707070707ff070707070700ffffffffffffffffffff00070707f800ff0707 070000000000000000000000070707070707f800ff070707070003030000000000000707000300ff07f800070707070707070707070707f800ffffffffff0000ffffffff0000ffffffff0000ffff0000ffff0000ffffff00000000ffffff000000000000ffffffffffff0000ffff0000ffff0000ffffff0000ffff00000000 00ffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007 ff070707070707070707070707f800ffffff00000000000000ffffffffff0000000000ffffff000000000000ffffffff0000000000ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707f800 ffffff0000000000000000ffff0000ffff0000ffffff000000000000ffff0000ffff0000ffffff00000000ffffff0000ffff0000ffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707ff07070707070707070707070707070707 07070707f8000707070707070707ff0707070700000000000000000000000007070707f8000707070707070707ff0707070707070707000707000007070707070707f800070707070707f8ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707f800ffffffffffffffff07ff0707070707070707ff070707070700ff00000000000000ffff00070707f800ff0707070000030303030303030303000707070707f800ff070707070003030000000000000707000300ff07f800070707070707070707070707f800ffffffffff0000ff ffffff0000ffffffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffffffffffffffffffff0000ffff0000ffff0000ffff0000ffff0000ffffff0000ffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707f800ffffff0000ffffffff0000ffffff0000ffffff0000ffff000000ffff0000ffff0000ff000000ffff0000ffff000000ffffff ffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707f800ffffff0000ffffffffffffffff0000ffff0000ffff0000ffff000000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffffffffffffffffffffffffff ffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707ff0707070707070707070700000007070707070707f8000707070707070707ff0707070007070700f800000000f8f8f800070707f8000707070707070707ff07070707070707070007070000070707070707 07f800070707070707f8ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07ff0707070707070707ff070707070700ff07070707070707ffff00070707f800ff0707070007 000303030303030303000007070707f800ff070707070003030000000000000707000300ff07f800070707070707070707070707f800ffffffff00000000ffff00000000ffffff0000ffff0000ffff0000ffffffffffff0000ffff0000ffffffffffffffffffff0000ffff0000ffff0000ffff0000ffff0000ffffffffffff ff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707000707070707070707f80007ff0707 07070707070707070707f800ffffff0000ffffffffff0000ffff0000ffffffffffffff0000ffffff0000ffff0000ffff0000ffff0000ffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707000707070707070707f80007ff070707070707070707070707f800ffffff 0000ffffffffffffffff0000ffff0000ffff0000ffffff0000ffff0000ffff0000ffffffffffff0000ffff0000ffff0000ffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707000707070707070707f80007ff070707070707070707070707ff07070707070707070700000000000707070707 07f8000707070707070707ff07070700ff00ff00f800000000f8f8f800070707f8000707070707070707ff0707070707070707f80000f8f807070707070707f800070707070707f8ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707f800ffffffffffffffff07ff0707070707070707ff070707070700ff00000000000000ffff00070707f800ff07070700fb070003030303030303030000070707f800ff070707070003030000000000000000000300ff07f800070707070707070707070707f800ffffffff00000000ffff00 000000ffffff0000ffff0000ffff0000ffffffffffff0000ffffff0000ffffffffffffffffff0000ffff0000ffff0000ffff0000ffff00000000000000ffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070700000007070707070707f80007ff070707070707070707070707f800ffffff0000ffffffffff0000ffff00000000000000ffff0000ffffff0000ffff0000ffff0000ffff0000ffffff0000ffffffffffff ffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070700000007070707070707f80007ff070707070707070707070707f800ffffff0000ffffffffffffffff0000ffff0000ffff0000ffffff0000ffff0000ffff0000ffffff00000000ffffff0000ffff0000ffffffffffffffffffffffffffffffff ffffffffffffffff07ff07070707070700000007070707070707f80007ff070707070707070707070707ff07070707070707070000f8f80000070707070707f8000707070707070707ff070700070007000700f8000000f8000000000707f8000707070707070707ff070707070707070700f800000707070707070707f800 070707070707f8ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07ff0707070707070707ff070707070700fff8f8f8f8f8f8f8ffff00070707f800ff07070700fbfbf800 030303030303030300000707f800ff070707070003030000000000000000000300ff07f800070707070707070707070707f800ffffffff00000000ffff00000000ffffff0000ffff0000ffff0000ffffffffffff0000ffffffff0000ffffffffffffffff0000ffff0000ffff0000ffff0000ffff0000ffffff0000ffff0000 ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070000000000070707070707f80007ff0707070707 07070707070707f800ffffff0000ffffffffff0000ffff0000ffffff0000ffff0000ffffff0000ffff0000ffff0000ffff0000ffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070000000000070707070707f80007ff070707070707070707070707f800ffffff0000ff ffffffffffffff0000ffff0000ffff0000ffffff0000ffff0000ffff0000ffff0000ffffffffffff0000ffff0000ffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070000000000070707070707f80007ff070707070707070707070707ff07070707070707070000f8f8f800070707070707f800 0707070707070707ff070700ff00ff00ff00f8000000f80000f8000707f8000707070707070707ff0707070707070707000700000707070707070707f800070707070707f8ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707f800ffffffffffffffff07ff0707070707070707ff070707070700fff8f8f8f8f8f8f8ffff00070707f800ff07070700fbfbfbf8000000000000000000000707f800ff070707070003030000000000000000030300ff07f800070707070707070707070707f800ffffff0000ffff00000000ffff00 00ffff0000ffff000000ff0000ffffffff000000ffffffffffff0000ffffffffffffff0000ffff000000ff0000ffff0000ffff0000ffffff0000ffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707000000000000000707070707f80007ff070707070707070707070707f800ffffff0000ffffffffff0000ffff0000ffffff0000ffff000000ffff0000ffff0000ffff0000ffff0000ffff000000ffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff07ff07070707000000000000000707070707f80007ff070707070707070707070707f800ffffff00000000000000ffffff000000ff0000ffff0000ffff000000ffff0000ffff0000ffff0000ffff0000ffff000000ff0000ffffffffffffffffffffffffffffffffffffff ffffffffff07ff07070707000000000000000707070707f80007ff070707070707070707070707ff0707070707070707f80000f800f8070707070707f8000707070707070707ff070700ff000700ff00f8f8f8000000f8f8000707f8000707070707070707ff0707070707070707000700000707070707070707f800070707 070707f8ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07ff0707070707070707ff0707070707f8fbf8f8f8f8f8f8f8ffff00070707f800ff07070700fbfbfbfbf803f8 03f800000000000707f800ff070707070003000000000000000000000300ff07f800070707070707070707070707f800ffffff0000ffff00000000ffff0000ffff0000ffff0000000000ffffffffffffff0000ffffffffffff0000ffffffffffff0000ffff0000000000ffff00000000ffff0000000000ffffff0000ffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070700000000000000000007070707f80007ff0707070707070707 07070707f800ffffff0000ffffffffff0000ffffff0000000000ffffff000000000000ffffff0000ffff0000ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070700000000000000000007070707f80007ff070707070707070707070707f800ffffff0000ffffffff ffffffff0000000000ffffffff000000000000ffff0000ffff0000ffffff00000000ffffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070700000000000000000007070707f80007ff070707070707070707070707ff070707070707f8f8070000000007070707070707f800070707 0707070707ff070700f8f806f8f800000000000000f800000707f8000707070707070707ff070707070707070700070000f807070707070707f800070707070707f8ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707f800ffffffffffffffff07ff0707070707070707ff0707070707f8fbff070707ffffffffff00070707f800ff0707070007fb07fb07fb07fb0700070707070707f800ff070707070003000707070707070707000300ff07f800070707070707070707070707f800ffff0000ffffffff0000ffffffff0000ff ffffffffffffffffffffffffffffffff0000ffff0000ffff0000ffffffffffff0000ffffffffffffffffffff0000ffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707f800ffffff0000ffffffffff0000ffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707f800ffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffff ffff07ff07070707070707070707070707070707f80007ff070707070707070707070707ff0707070707f80000f80700000707070707070707f8000707070707070707ff07070700ff00ff00f8000000f8f8f8f800070707f8000707070707070707ff070707070707f8f800f8070000f8070707070707f800070707070707 f8ff0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07ff0707070707070707ff0707070707070707070000ff0707070700070707f800ff07070700fb07fb07030703070300 070707070707f800ff070707070003000707070707070707000300ff07f800070707070707070707070707f800ffff0000ffffffff0000ffffffff0000ffffffffffffffffffffffffff0000ffff0000ffff0000ffff0000ffffffffffff0000ffffffffffffffffffff0000ffffffffffffffffffffff0000ffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff0707070707070707070707 07f800ffffff0000ffffffff0000ffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707f800ffffff0000ffffffffffffff ffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707ff0707070707000000000707070707070707070707f800070707070707 0707ff0707070007070700000000000000000000070707f8000707070707070707ff0707070707f80000f800f8070000f80707070707f800070707070707f8ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707f800ffffffffffffffff07ff0707070707070707ff0707f803f807fbfb070707ff0000000000070707f800ff070707000703070000000000000007f8f8f80707f800ff070707070003000707070707070707000300ff07f800070707070707070707070707f800ffff0000ffffffff0000ffffffff0000ff0000ff ffffffffffffffffffff00000000ffffffff00000000ffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707f800ffffff00000000000000ffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707f800ffffff0000000000000000ffffffffffffffffffffffffffffffffffffff0000ffff0000ffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff07 ff07070707070707070707070707070707f80007ff070707070707070707070707ff0707070707000000000707070707070707070707f8000707070707070707ff0707070700000000000000000000000007070707f8000707070707070707ff0707070707000700000700f80700000707070707f800070707070707f8ff07 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07ff0707070707070707ff070707fbf8fbfff8f80707ff00ff070007070707f800ff0707070700000007070707070707070000 000707f800ff070707070003000707070707070707000300ff07f800070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707f800 ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707f800ffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707ff0707070707070000070707070707070707070707f8000707070707070707ff 0707070707070707070707070707070707070707f8000707070707070707ff0707070707000700000707000700000707070707f800070707070707f8ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07f800ffffffffffffffff07ff0707070707070707ff070707f8fbf8fbf8fbffffff0007000707070707f800ff0707070707070707070707070707070700000707f800ff070707070003000707070707070707000000ff07f800070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff0707 0707070707070707070707070707f80007ff070707070707070707070707ff0707070707070707070707070707070707070707f8000707070707070707ff0707070707070707070707070707070707070707f8000707070707070707ff0707070707000707000000070700000707070707f800070707070707f8ff07070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07ff0707070707070707ff0707f8fb07f8ff07f8fb07070000070707070707f800ff0707070707070707070707000707070007000707 f800ff070707070003000707070707070707000700ff07f800070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707f800ffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707f800ffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ff07070707070707070707070707070707f80007ff070707070707070707070707ff0707070707070707070707070707070707070707f8000707070707070707ff070707 0707070707070707070707070707070707f8000707070707070707ff0707070707070007070707070000070707070707f800070707070707f8ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800 ffffffffffffffff07ff0707070707070707ff0707fb0707f8fb0707f800000007070707070707f800ff0707070707070707070707070000000707070707f800ff0707070700000000000000000000000000000707f800070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffff07fffffffffffffffffffffffffffffffffff80007ff070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffff07fffffffffffffffffffffffffffffffffff80007ff070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff07ffffffffffff fffffffffffffffffffffff80007ff070707070707070707070707ff0707070707070707070707070707070707070707f8000707070707070707ff0707070707070707070707070707070707070707f8000707070707070707ff0707070707070700000000000007070707070707f800070707070707f8ff07070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07ff0707070707070707ff0707070707070707070707070707070707070707f800ff0707070707070707070707070707070707070707f800ff 0707070707070707070707070707070707070707f800070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff070707070707070707070707070707070707070007ff070707070707070707070707f800ffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff070707070707070707070707070707070707070007ff070707070707070707070707f800ffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff070707070707070707070707070707070707070007ff070707070707070707070707ff0707070707070707070707070707070707070707f8000707070707070707ff070707070707 0707070707070707070707070707f8000707070707070707ff0707070707070707070707070707070707070707f800070707070707f8ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffff ffffffffff07ff0707070707070707ff0707070707070707070707070707070707070707f800ff0707070707070707070707070707070707070707f800ff0707070707070707070707070707070707070707f800070707070707070707070707f8000000000000000000000000000000000000000000000000000000000000 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0000000000000000000000000000000000000000000000000000000000000000000000000000000007ff070707070707070707070707f8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0000000000000000000000000000000000000000000000000007ff070707070707070707070707f8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0000000000000000000007ff070707070707070707070707ff0707070707070707070707070707070707070707f8000707070707070707ff0707070707070707070707070707070707070707f8000707070707070707ff0707070707070707070707070707070707070707f800070707070707f8ff07070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07ff0707070707070707ffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff00ffffffff ffffffffffffffffffffffffffffffffffff00070707070707070707070707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff070707070707070707070707f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff070707070707070707070707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8ff070707070707070707070707ffffffffffffffffffffffffffffffffffffffffffff000707070707070707ffffffffffffffffffff ffffffffffffffffffffffff000707070707070707ffffffffffffffffffffffffffffffffffffffffffff00070707070707f8ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffff ffff07ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f8ff07070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07fff8ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07 ff070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f8ff07070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707f800ffffffffffffffff07ff0707ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0707f800ffffffffffffffff07ff0707 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8 f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80707f800ffffffffffffffff07fff800ffffffffffffffff07fff800ffffffffffffffff07fff800ffffffffffffffff07fff800ffffffffffffffff07fffff8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f800fff8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8000707fff8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80007070707f800ffffffffffffffff07ffff070707070707070707070707070707070707f800ff0707070707070707 07070707070707070707f8000707ff070707070707070707070707070707070707f80007070707f800ffffffffffffffff07ff07070707070707f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8fff070707070707070707070707070707070707f800ff070707070707070707070707070707070707f8000707ff070707070707070707070707070707070707f80007070707f800ffffffffffffffff07ff07070707070707f8070707070707 070707070707070707fff070707070000000000000000070707070707f800ff0707070000000000000000 00070707070707f8000707ff070707070707070707070707070707070707f80007070707f800ffffffffffffffff07ff07070707070707f8070707070707070707070707070707fff070707070000000000000000070707070707f800ff070707000707070707070700070707070707f8000707ff070707070700000707070707000007070707f80007070707f800ffffffffffffffff07ff07070707070707f8070707070707070707 070707070707fff070707070707070707070707070707070707f800ff0707070007070707070707000707 07070707f8000707ff070707070700000007070700000007070707f80007070707f800ffffffffffffffff07ff07070707070707f8070707070707070707070707070707f800070707070707070707070700070707070707070007070007070007070707070707070707070707070707070707070707070007070707070700 07070007070707000707000707000707000707070700070700070707000707070707070007070707070707070707070707070707070700070707070700070700070707000707000707000707000707070707070707070707070707070707070707070707070007000707070007000707070007070007070700070700070707 07000707000707070700070700070007000700070707070707070707070707070707070707000707070707070007070007070707070707000707000707070700070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707070707070707ff070707070707070707070707070707070707f800ff070707000707070707070700070707070707f8000707ff070707070707000000070000000707070707f80007070707f800ffffffffffffffff07ff07070707070707f8070707070707070707070707 070707fff070707070707070707070707070707070707f800ff0707070007070707070707000000000707 07f8000707ff070707070707070000000000070707070707f80007070707f800ffffffffffffffff07ff07070707070707f8070707070707070707070707070707fff070707070707070707070707070707070707f800ff070707000000000000000000070700070707f8000707ff070707070707070700000007070707070707f80007070707f800ffffffffffffffff07ff07070707070707f8070707070707070707070707070707 fff070707070707070707070707070707070707f800ff070707000000000000000000070700070707f800 0707ff070707070707070000000000070707070707f80007070707f800ffffffffffffffff07ff07070707070707f8070707070707070707070707070707f800070707070707070707070700070707070707070007070007070700000000070707070707070707070707070707070707070007070707070700070700070000 00070700000007000707070000000007070700070000070707070000000707070707070707070707070707070707070700070707070707070700070707000707000700000007070000000007070707070707070707070707070707070707000707070007000707070007070007070007000007070707000000070007070700 00000007070007070700070707000707070707070707070707070707070707000707070707070007070700000000070707000707000700000007070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707070707070707070707ff070707070707070707070707070707070707f800ff070707070707000707070707070700070707f8000707ff070707070707000000070000000707070707f80007070707f800ffffffffffffffff07ff07070707070707f8070707070707070707070707070707fff070707070707070707070707070707070707f800ff070707070707000707070707070700070707f8000707ff 070707070700000007070700000007070707f80007070707f800ffffffffffffffff07ff07070707070707f80707f8f8f8f8f8f8f8f8f8f8f8f807fff070707070707070707070707070707070707f800ff070707070707000000000000000000070707f8000707ff070707070700000707070707000007070707f80007070707f800ffffffffffffffff07ff07070707070707f807fcfcfcfcfcfcfcfcfcfcfcfcfcfcfff070707070707070707070707070707070707f800ff070707070707000000000000000000070707f8000707ff070707 070707070707070707070707070707f80007070707f800ffffffffffffffff07ff07070707070707f807fcfcfcfcfcfcfcfcfcfcfcfcfcfcfff070707070707070707070707070707070707f800ff070707070707070707070707070707070707f8000707ff070707070707070707070707070707070707f80007070707f800ffffffffffffffff07ff07070707070707f8070707070707070707070707070707070007070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707ff070707070707070707070707070707070707f800ff070707070707070707070707070707070707f8000707ff070707070707 070707070707070707070707f80007070707f800ffffffffffffffff07ff07070707070707000000000000000000000000000000000000070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707 0707070707070707070707ff070707070707070707070707070707070707f800ff070707070707070707070707070707070707f8000707ff070707070707070707070707070707070707f80007070707f800ffffffffffffffff07ffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff000707ffffffffffffffffffff ffffffffffffffffffff0007070707f800ffffffffffffffff07fff800ffffffffffffffff07fff800ffffffffffffffff07fff800ffffffffffffffff07fff800ffffffffffffffff07fff800ffffffffffffffff07ff070704040404f8f800040404f8f8f804040400f8ff800ffffffffffffffff07ff070704040404f80707000404fff f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f800fff8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8000404fff8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f80004040707f800ffffffffffffffff07ff070704040404000707070004f807070400070707070004040404040404040404040404040404040404040404040404 0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ffffffff040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ffffffffff070707070707070707070707070707070707f800ff070707070707070707070707070707070707f8000404ff070707070707070707070707070707070707f80004 040707f800ffffffffffffffff07ff070704040404040407070700f8070704070707070404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ffff04040404040404040404 040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ffffff070707 070707070707070707070707070707f800ff070707070707070707070707070707070707f8000404ff070707070707070707070707070707070707f80004040707f800ffffffffffffffff07ff070704040404040400070707f807070707070700040404040404040404040404040404040404040404040404040404040404 0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ffff04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ffffff070707070000000000000000070707070707f800ff070707000000000000000000000007070707f8000404ff070707070707070707070707070707070707f80004040707 f800ffffffffffffffff07ff070704040404040404000707070707070707000404040404040404040404ffffffffff0404ffff040404040404ffff04ffff04040404040404ffffffffffffffff0404040404040404ffff0404040404ffffffff04040404040404040404040404040404ffff04040404ffffffffff04040404 ffffffffffff0404ffff040404ffff0404ffffffffff040404ffff040404ffff040404ffffffff04040404ffff04ffff040404ffffff070707070000 000000000000070707070707f800ff070707000707070707070707070007070707f8000404ff070707070700000707070707000007070707f80004040707f800ffffffffffffffff07ff0707040404040404040404070707070707040404040404040404040404ffff040404ffff04ffff040404040404ffff04ffff040404 04040404ffff04040404040404040404040404ffffffff040404ffff0404ffff040404040404040404040404040404ffff040404ffff040404ffff0404ffff0404ffffff0404ffff0404ffff0404ffff040404ffff0404ffff04040404040404ffff0404ffff0404ffff0404ffff040404ffffff070707070707070707070707070707070707f800ff070707000707070707070707070007070707f8000404ff070707070700000007070700000007070707f80004040707f800ff ffffffffffffff07ff07070404040404040404040007070707000404040404040404040404ffff0404040404ffff04ffff04040404ffff0404ffff04040404040404ffff04040404040404040404040404ffffffff04040404040404ffff040404040404040404040404040404ffff040404ffff04040404040404ffff0404 04ffff0404ffff0404ffff0404ffff040404ffff0404ffff0404040404040404040404ffff0404ffff0404ffff040404ffffff070707070707070707 070707070707070707f800ff070707000707070707070707070007070707f8000404ff070707070707000000070000000707070707f80004040707f800ffffffffffffffff07ff07070404040404040404040707070707000404040404040404040404ffff0404040404040404ffffffffffffffff0404ffff040404040404 04ffff040404040404040404040404ffff0404ffff040404040404ffff040404040404040404040404040404ffff040404ffffffffffffff0404ffff040404ffff0404ffff0404ffff0404ffff040404ffff0404ffff0404040404040404ffffffff040404ffff0404ffff040404ffffff070707070707070707070707070707070707f800ff070707000707070707070707070007070707f8000404ff070707070707070000000000070707070707f80004040707f800ffffffff ffffffff07ff07070404040404000000f807070707070700f8000404040404040404ffff040404040404040404ffff0404ffff040404ffff04040404040404ffff040404040404040404040404ffff0404ffff040404040404ffff0404040404ffffffffff0404040404ffff040404ffff040404ffff0404ffff040404ffff 0404ffff0404ffff0404ffff040404ffff0404ffff04040404040404ffff040404040404ffff0404ffff040404ffff0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404 04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404 04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404 04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404 040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404ff070707070707070707070707 070707070707f800ff070707000707070707070707070007070707f8000404ff070707070707070700000007070707070707f80004040707f800ffffffffffffffff07ff070704040400f8070707070707070707070707070004040404040404ffff040404040404040404ffff0404ffff040404ffffffffffffff0404ffff ffffffffff040404040404ffff04040404ffff040404ffffff04040404040404040404040404040404ffff040404ffff040404ffff0404ffff0404ffffff0404ffff0404ffff0404ffff040404ffff0404ffffff040404040404ffff0404ffff0404ffff0404ffff040404ffffff070707070707070707070707070707070707f800ff070707000707070707070707070007070707f8000404ff070707070707070000000000070707070707f80004040707f800ffffffffffffff ff07ff070704040007070707070707f8070704070700000700040404040404ffff04040404040404040404ffffffff04040404ffff04040404040404ffff0404040404040404040404ffff04040404ffff0404040404ffff040404040404040404040404040404ffff04040404ffffffffff04040404ffffffffffff0404ff ff04ffffffff0404ffffffffff040404ffffffff040404040404ffffffff0404ffffffffffffffff0404ffffff070707070707070707070707070707 070707f800ff070707000707070707070707070007070707f8000404ff070707070707000000070000000707070707f80004040707f800ffffffffffffffff07ff0707040400070707070707f8070707f807f807000007000404040404ffff0404040404ffff040404ffffffff04040404ffff04040404040404ffff040404 040404040404040404040404040404040404040404ffff040404040404040404040404040404ffff0404040404040404040404040404040404ffff040404040404ffff04040404040404040404040404040404040404040404040404040404ffff0404ffff040404ffffff070707070707070707070707070707070707f800ff070707000707070707070707070007070707f8000404ff070707070700000007070700000007070707f80004040707f800ffffffffffffffff07ff 07070404f807070707070707070707f80704f80704f807000404040404ffff040404ffff0404040404ffff0404040404ffff04040404040404ffff0404040404040404040404040404040404040404ffff0404ffff040404040404040404040404040404ffff0404040404040404040404040404040404ffff040404040404 ffff04040404040404040404040404040404040404040404040404040404ffff0404ffff040404ffffff070707070707070707070707070707070707 f800ff070707000000000000000000000007070707f8000404ff070707070700000707070707000007070707f80004040707f800ffffffffffffffff07ff07070404f807f807070707f807070704f80700f807000007040404040404ffffffffff040404040404ffff0404040404ffffffffffffffff04ffffffffffffffff 040404040404040404040404040404ffffffff04040404040404040404040404040404ffffffff040404040404040404040404040404ffff0404ffff04040404040404040404040404040404040404040404040404040404040404040404040404ffffffffffffff070707070707070707070707070707070707f800ff070707000000000000000000000007070707f8000404ff070707070707070707070707070707070707f80004040707f800ffffffffffffffff07ff070704 0400070707070707000707070404f80700fff070707070707070707070707070707070707f800ff 070707070707070707070707070707070707f8000404ff070707070707070707070707070707070707f80004040707f800ffffffffffffffff07ff070704040400f80707f80400070707040404f80704f8fff070707070707070707070707070707070707f800ff070707070707070707070707070707070707f8000404ff070707070707070707070707070707070707f80004040707f800ffffffffffffffff07ff070704040404 00000004040007070704040404fff070707070707070707070707070707070707f800ff070707 070707070707070707070707070707f8000404ff070707070707070707070707070707070707f80004040707f800ffffffffffffffff07ffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff000404ffffffffffffffffffffffffffffffffffffffff0004040707f800ffffffffffffffff07fff800ffffffffffffffff07fff800ffffffffffffffff07fff800ffffffffffffffff07fff800ffffffffffffffff07ffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff040000002701ffff040000002701ffff040000002d0101000400000002 010100040000002701ffff040000000201010009000000fa02000008000000000000022200040000002d0103000500000014021b03e001050000001302e509e00109000000fa02000000000000000000002200040000002d01040004000000f001030009000000fa02000008000000000000022200040000002d0103000500 000014026304f500050000001302a10af500040000002d01040004000000f001030009000000fa02000008000000000000022200040000002d0103000500000014024601cc020500000013022a09cc02040000002d01040004000000f001030009000000fa02000008000000000000022200040000002d0103000500000014 0246014d060500000013026f084d06040000002d01040004000000f001030009000000fa02000008000000000000022200040000002d0103000500000014027501b2080500000013027d03b208040000002d01040004000000f001030009000000fa02000008000000000000022200040000002d0103000500000014027b03 8d0f0500000013027b03b008040000002d01040004000000f001030007000000fc020000000000020000040000002d01030009000000fa02050001000000ffffff002200040000002d0105000c00000024030400690fa003780f7b03690f5603e10f7b03040000002d01040004000000f001050007000000fc020000ffffff 000000040000002d01050004000000f001030009000000fa02000008000000000000022200040000002d0103000500000014022105be0c05000000130221058a0f040000002d01040004000000f001030007000000fc020000000000020000040000002d01030009000000fa02050001000000ffffff002200040000002d01 06000c00000024030400690f4605780f2105690ffb04e10f2105040000002d01040004000000f0010600040000002d01050004000000f001030009000000fa02000008000000000000022200040000002d0103000500000014026c084b060500000013026c084007040000002d01040004000000f001030007000000fc0200 00000000020000040000002d01030009000000fa02050001000000ffffff002200040000002d0106000c000000240304001f0792082e076c081f07470897076c08040000002d01040004000000f0010600040000002d01050004000000f001030009000000fa02000008000000000000022200040000002d01030005000000 14022809cb0205000000130228096003040000002d01040004000000f001030007000000fc020000000000020000040000002d01030009000000fa02050001000000ffffff002200040000002d0106000c0000002403040041034d094f03280941030309b8032809040000002d01040004000000f0010600040000002d0105 0004000000f001030009000000fa02000008000000000000022200040000002d010300050000001402e409df01050000001302e4097402040000002d01040004000000f001030007000000fc020000000000020000040000002d01030009000000fa02050001000000ffffff002200040000002d0106000c00000024030400 5502090a6302e4095502be09cc02e409040000002d01040004000000f0010600040000002d01050004000000f001030009000000fa02000008000000000000022200040000002d0103000500000014029f0af3000500000013029f0a8801040000002d01040004000000f001030007000000fc020000000000020000040000 002d01030009000000fa02050001000000ffffff002200040000002d0106000c000000240304006901c40a78019f0a69017a0ae1019f0a040000002d01040004000000f0010600040000002d01050004000000f00103000400000002010100030000001e00070000001604c903311437031110040000000201010015000000 fb0283ff0000000000009001000000000400001254696d6573204e657720526f6d616e004000040000002d01030026000000320a5003111012000400000000001a14e20a4c616e67756167652073656c656374696f6e4c0037003f003f003f0037003f0037001f0031003700230037003700230023003f003f000400000002 010100040000002701ffff04000000020101000400000002010100030000001e000700000016044005e313ae0440100400000002010100040000002d01030025000000320ac704401011000400000000001a14e20a54657374206f757470757420286c6f6729004c003700310023001f003f003f0023003f003f0023001f00 2a0023003f003f002a000400000002010100040000002701ffff04000000020101000400000002010100030000001e000700000016048b08440df907c6070400000002010100040000002d01030031000000320a1208c60719000400000000001a14e20a54617267657420284465627567206f722052656c6561736529004c 0037002a003f00370023001f002a005a0037003f003f003f001f003f002a001f0053003700230037003700310037002a000400000002010100040000002701ffff04000000020101000400000002010100030000001e000700000016044709470ab508e8030400000002010100040000002d01030037000000320ace08e803 1d000400000000001a14e20a506c6174666f726d2028496e74656c2c20506d61632c2036384b2085290046002300370023002a003f002a0061001f002a002a003f002300370023001f001f0046006100370037001f001f003f003f005a001f007d002a000400000002010100040000002701ffff0400000002010100040000 0002010100030000001e00070000001604310a0e069f09fc020400000002010100040000002d01030022000000320ab809fc020f000400000000001a14e20a546573742073756974652074726565004c003700310023001f0031003f002300230037001f0023002a00370037000400000002010100040000002701ffff0400 0000020101000400000002010100030000001e00070000001604be0a5f092c0a10020400000002010100040000002d01030043000000320a450a100225000400000000001a14e20a54657374206f757470757420284c6f6720696e206120747265652073747275637475726529004c003700310023001f003f003f0023003f 003f0023001f002a004c003f003f001f0023003f001f0037001f0023002a00370037001f00310023002a003f00370023003f002a0037002a000400000002010100040000002701ffff04000000020101000a00000026060f000a00ffffffff0100000000000400000002010100040000002d01000003000000000000000000 000000000000000000000000000000000000}}}}}{\f2  \par }\pard \widctlpar {\b\f2  \par }\pard \widctlpar {\b\f2\fs24 The }{\b\f3\fs24 .STF}{\b\f2\fs24  File \par }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 The }{\f3 .STF}{\f2  file contains a list of all the tests that are to be loaded when the }{\f3 .STF}{\f2  file is opened. The }{\f3 .STF}{\f2  file is the input to the CAFE driver. You must have an }{\f3 .STF}{\f2   file in order to load and run tests from the CAFE driver. \par }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 An }{\f3 .STF}{\f2  file that contains all of the sniff tests (and is a good starting place for creating your own customized }{\f3 .STF}{\f2  file) is checked into the }{\f3 IDESNIFF}{\f2  project in the }{\f3 x86}{\f2  directory. \par }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 Since the }{\f3 .STF}{\f2  file is a text file, it allows for easy customization (see }{\f2\uldb\cf11 Customizing the .STF file}{\v\f2 _how_customize_STF}{\f2 ). \par }\pard \widctlpar {\f2  \par }{\b\f2\fs24 Running the Test \par }{\f2  \par }\pard \widctlpar {\f2 After opening an *.STF file in the driver, and }{\f2\uldb customizing your environment}{\v _how_set_environment}{\f2 , just press the RUN toolbar button to start the test. For an example, see}{\f2\uldb\cf11  How to run the IDE sniff tests}{\v\f2 _how_run_sniffs}{\f2  \par \page  \par }\pard \widctlpar {\cs15\fs16\up6 #{\footnote \pard\plain \widctlpar \fs20 {\cs15\fs16\up6 #} _CAFE_switches}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} switches; options; CAFE switches}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain  \s16\widctlpar \fs20 {\cs15\fs16\up6 $} CAFE switches}}{\f2  }{\b\f2 CAFE switches}{\f2  \par }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 CAFE supports the following switches on the command line. Each switch takes the }{\f11 form -<switch>\{[ : | =]<value>\}.}{\f2  For example, }{\f11 cafedrv -stf:sniff.stf -debug=0 -run.}{\f2  \par }\pard \widctlpar {\f2  \par }\trowd \trgaph108\trleft-108 \cellx2520\cellx3747\cellx10170 \pard \widctlpar\intbl {\b\f2 Switch\cell }\pard \widctlpar\intbl {\b\f2 Default\cell }\pard \widctlpar\intbl {\b\f2 Meaning\cell }\pard \widctlpar\intbl {\b\f2 \row }\trowd  \trgaph108\trleft-108 \cellx2520\cellx3747\cellx10170 \pard \widctlpar\intbl {\f11 auto\cell }\pard \widctlpar\intbl {\f2 true\cell }\pard \widctlpar\intbl {\f2 Use the -i_auto switch when launching the IDE\cell }\pard \widctlpar\intbl {\f2 \row }\pard  \widctlpar\intbl {\f11 baud_rate\cell }\pard \widctlpar\intbl {\f2 57600\cell }\pard \widctlpar\intbl {\f2 Set the baud rate for remote operations\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 cafekey\cell }\pard \widctlpar\intbl { \f2 CAFE v3\cell }\pard \widctlpar\intbl {\f2 Set the name of CAFE\rquote s registry key\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 close\cell }\pard \widctlpar\intbl {\f2 true\cell }\pard \widctlpar\intbl {\f2  Close the application to test after running tests\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 connections\cell }\pard \widctlpar\intbl {\f2 network\cell }\pard \widctlpar\intbl {\f2 Set the connection type for remote operations \cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 connector\cell }\pard \widctlpar\intbl {\f2 com1\cell }\pard \widctlpar\intbl {\f2 Set the connector for remote operations\cell }\pard \widctlpar\intbl {\f2 \row }\pard  \widctlpar\intbl {\f11 data_bits\cell }\pard \widctlpar\intbl {\f2 8\cell }\pard \widctlpar\intbl {\f2 Set the data bits for remote operations\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 debug\cell }\pard \widctlpar\intbl {\f2  true\cell }\pard \widctlpar\intbl {\f2 Build type of the application to test\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 debug_thread\cell }\pard \widctlpar\intbl {\f2 true\cell }\pard \widctlpar\intbl {\f2 Lau nch the application to test as a debug process\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 flow_control\cell }\pard \widctlpar\intbl {\f2 hardware\cell }\pard \widctlpar\intbl {\f2 Set the flow control for remote operations\cell  }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 inf_waits\cell }\pard \widctlpar\intbl {\f2 false\cell }\pard \widctlpar\intbl {\f2 Specifyng TRUE causes all WaitForInputIdle()\rquote s to be infinite in length.\cell }\pard  \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 key\cell }\pard \widctlpar\intbl {\f2 msvc.key\cell }\pard \widctlpar\intbl {\f2 Set the name of the key to use with the IDE\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 lang \cell }\pard \widctlpar\intbl {\f2 English\cell }\pard \widctlpar\intbl {\f2 Set the language of the application to test\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 maxfail\cell }\pard \widctlpar\intbl {\f2 100\cell }\pard  \widctlpar\intbl {\f2 Set the maximum number of failures before test run termination\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 newapp\cell }\pard \widctlpar\intbl {\f2 true\cell }\pard \widctlpar\intbl {\f2  Launch a new instance of the application to test\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 no_del_warn\cell }\pard \widctlpar\intbl {\f2 false\cell }\pard \widctlpar\intbl {\f2 Don\rquote t issue warning when deleting di rectories. (debug only)\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 parity\cell }\pard \widctlpar\intbl {\f2 none\cell }\pard \widctlpar\intbl {\f2 Set the parity for remote operations\cell }\pard \widctlpar\intbl {\f2 \row  }\pard \widctlpar\intbl {\f11 pcode\cell }\pard \widctlpar\intbl {\f2 \cell }\pard \widctlpar\intbl {\f2 \cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 post\cell }\pard \widctlpar\intbl {\f2 false\cell }\pard \widctlpar\intbl {\f2  Post test results in a message box after test completion\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 remote_at_password\cell }\pard \widctlpar\intbl {\f2 <none>\cell }\pard \widctlpar\intbl {\f2  Set the Appletalk password of the remote machine\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 remote_ip_address\cell }\pard \widctlpar\intbl {\f2 <none>\cell }\pard \widctlpar\intbl {\f2 Set the TCP/IP address of the remote machine \cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 remote_ip_password\cell }\pard \widctlpar\intbl {\f2 <none>\cell }\pard \widctlpar\intbl {\f2 Set the TCP/IP password of the remote machine\cell }\pard \widctlpar\intbl {\f2 \row  }\pard \widctlpar\intbl {\f11 remote_local_path\cell }\pard \widctlpar\intbl {\f2 <none>\cell }\pard \widctlpar\intbl {\f2 Set the path to use on the remote machine\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 remote_machine_name \cell }\pard \widctlpar\intbl {\f2 <none>\cell }\pard \widctlpar\intbl {\f2 Set the name of the remote machine\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 remote_password\cell }\pard \widctlpar\intbl {\f2 <none>\cell }\pard  \widctlpar\intbl {\f2 Set the password of the remote machine\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 remote_share_path\cell }\pard \widctlpar\intbl {\f2 <none>\cell }\pard \widctlpar\intbl {\f2  Set the path to use from the host machine to the remote machine\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 remote_zone\cell }\pard \widctlpar\intbl {\f2 <none>\cell }\pard \widctlpar\intbl {\f2 Set the zone for the remote machine \cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 run\cell }\pard \widctlpar\intbl {\f2 false\cell }\pard \widctlpar\intbl {\f2 Run tests without showing CAFE UI\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11  sleep\cell }\pard \widctlpar\intbl {\f2 100\cell }\pard \widctlpar\intbl {\f2 Indicates a percentage by which to modify all calls to Win32\rquote s Sleep()\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 step\cell }\pard  \widctlpar\intbl {\f2 false\cell }\pard \widctlpar\intbl {\f2 Set single step mode\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 stop_bits\cell }\pard \widctlpar\intbl {\f2 0\cell }\pard \widctlpar\intbl {\f2  Set the stop bits for remote operations\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx2520\cellx3747\cellx10170 \pard \widctlpar\intbl {\f11 target_platforms\cell }\pard \widctlpar\intbl {\f2 win32_x86\cell }\pard  \widctlpar\intbl {\f2 Set the platform of the application to test\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar {\f2  \par  \par  \par }{\f9  \par }\pard \widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \widctlpar \fs20 {\cs15\fs16\up6 #} _how_customize_STF}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} .STF; STF; suite file; Customizing the .STF file}}{\f2  }{ \cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} Customizing the .STF file}}{\f2  }{\b\f2 Customizing the .STF file}{\f2  \par }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 The }{\f3 .STF}{\f2  file (suite file--see also }{\f2\uldb\cf11 What is an .STF file}{\v\f2 _q_STF}{\f2 ) contains the set of tests to load and execute. It\rquote s the input file to the CAFE driver. The }{\f3 .STF}{\f2   file contains relative or absolute pathnames to each test to load--one per line. \par }\pard \widctlpar {\f9   \par }\pard \widctlpar {\f2 Most likely, you\rquote ll want to customize the }{\f3 .STF}{\f2  file to contain a subset of all the available tests that you\rquote re interested in running. To create your own }{\f3 .STF}{\f2   file, enter the relative or absolute path to the test DLL (including the DLL name), one per line, in a text editor. Save the file with a }{\f3 .STF}{\f2  extension. \par }\pard \widctlpar {\f2  \par Example: \par  \par }{\f3 ; This is an example .STF file \par ; Note that leading semicolons serve to comment out the entire line \par ; \par ..\\here\\is\\a\\relative\\path\\test.dll \par c:\\absolute\\path\\mytest.dll \par }{\f2  \par  \par  \par  \par  \par  \par }\pard \widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \widctlpar \fs20 {\cs15\fs16\up6 #} _q_STF}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} .STF; STF; suite file; What is an .STF file?}}{\f2  }{\cs15\fs16\up6 $ {\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} What is an .STF file?}}{\f2  }{\b\f2 What is an .STF file?}{\f2  \par }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 The }{\f3 .STF}{\f2  file contains a list of all the tests that are to be loaded when the }{\f3 .STF}{\f2  file is opened. The }{\f3 .STF}{\f2  file is the input to the CAFE driver. You must have an }{\f3 .STF}{\f2   file in order to load and run tests from the CAFE driver. \par }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 An }{\f3 .STF}{\f2  file that contains all of the sniff tests (and is a good starting place for creating your own customized }{\f3 .STF}{\f2  file) is checked into the }{\f3 IDESNIFF}{\f2  project in the }{\f3 x86}{\f2  directory. \par }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 Since the }{\f3 .STF}{\f2  file is a text file, it allows for easy customization (see }{\f2\uldb\cf11 Customizing the .STF file}{\v\f2 _how_customize_STF}{\f2 ). \par }\pard \widctlpar {\f2  \par  \par  \par  \par }\pard \widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \widctlpar \fs20 {\cs15\fs16\up6 #} _how_run_cmdline}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} running tests; sniffs; tests; Running tests from the command line}}{ \f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} Running tests from the command line}}{\f2  }{\b\f2 Running tests from the command line}{\f2  \par }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 To run tests directly from the command line or fully automated (that is, so you don\rquote t have to interact with the CAFE driver\rquote s UI), use some of the supported command line switches. Use }{\f3 -stf}{\f2  to specify an }{ \f3 .STF}{\f2  file to load (see }{\f2\uldb\cf11 Customizing the .STF file}{\v\f2 _how_customize_STF}{\f2 ). Use }{\f3 -run}{\f2  to run CAFE in its fully automated mode. All the tests in the given }{\f3 .STF}{\f2  file will load and run automatically. \par }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 Example: To run }{\f3 myown.stf}{\f2  on the retail IDE, use this command line}{\f3 : cafedrv -stf:myown.stf -debug=0 -run. \par }\pard \widctlpar {\f2  \par  \par }\pard \widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \widctlpar \fs20 {\cs15\fs16\up6 #} _how_set_environment}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} environment; CAFE; Setting the environment}}{\f2  }{ \cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} Setting the environment}}{\f2  }{\b\f2 Setting the environment}{\f2  \par }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 In order for tests to execute properly, you need to set the environment that the application being tested will use. For example, if you\rquote re running tests against the IDE, you\rquote  ll need to set the Path, Include, and Lib, so that the IDE will know where to find the build tools, includes, and libs necessary to build projects. \par }\pard \widctlpar {\f2  \par The environment is set via CAFE\rquote s GUI interface: \par  \par }\trowd \trgaph108\trleft-108 \cellx2880\cellx8748 \pard \widctlpar\intbl {\b\f2 Steps to perform\cell }\pard \widctlpar\intbl {\b\f2 Action to carry out step\cell }\pard \widctlpar\intbl {\b\f2 \row }\trowd \trgaph108\trleft-108 \cellx2880\cellx8748  \pard \widctlpar\intbl {\f2 Select the toolset\cell }\pard \widctlpar\intbl {\f2 From the Toolset drop down on the toolbar, select the toolset you\rquote ll be running tests against.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f2  Set the build type\cell }\pard \widctlpar\intbl {\f2 From the Build Type drop down on the toolbar, select the build type of this toolset: Debug or Retail.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx2880\cellx8748 \pard  \widctlpar\intbl {\f2 Set the environment\cell }\pard \widctlpar\intbl {\f2 Select Options.Toolset and set the Path, Include, and Lib settings on the Environment tab.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar {\f2  \par  \par }\pard \widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \widctlpar \fs20 {\cs15\fs16\up6 #} _TestWizard}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} tests; TestWizard}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain  \s16\widctlpar \fs20 {\cs15\fs16\up6 $} TestWizard}}{\f2  }{\b\f2 TestWizard}{\f2  \par }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 TestWizard is a Custom Appwizard which generates a skeleton CAF\'c9 test. To create a CAF\'c9 test using TestWizard, copy the TestWiz.AWX file from your CAF\'c9\\X86\\BIN directory to your MDEV\\ TEMPLATE directory. Additionally, copy the file APIDATA.TXT from CAF\'c9\\X86\\BIN to your MSDEV\\IDE(D) directory. After copying the files, choose File.New.Workspace and create a project based on the TestWizard CustomAppwiz ard. You may choose all defaults from there on.  \par }\pard \widctlpar {\f2  \par The generated project will be a skeleton test which, if build as is, will launch MSDEV, and close it down.  \par }\pard \widctlpar {\f2 See a brief description of the }{\f2\uldb generated files}{\v\f2  FromSample}{\f2  and how you need to modify them. \par }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 To build this skeleton project, make sure that your include paths are pointing to your CAF\'c9\\INCLUDE directory, and that your LIB paths have a path to CAF\'c9\\X86\\LIB \par }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 TestWizard has some minimum editing capabilities. If you click on the \ldblquote Edit Script\rdblquote  button on the  first page of TestWizard, you will get a dialog box from which you can do some simple editing of your script. Use the Category: dropdown to pick the category of classes to look at. After you select a class in the Areas/Subareas: listbox, all the methods a vailable for that class will populate the API\rquote s Available listbox. Just doubleclick on the desired API and it will be added to the TestScript listbox at the current selection line. All API\rquote s in the TestScript which have an }{\f2\fs24\cf6 ! } {\f2\cf1 exclamation mark indicate that the API takes an argument which is undefined.  \par }\pard \widctlpar {\f2\cf1 The contents of the TestScript are editable by double clicking on an item and modifying the string in the editbox at the top of the listbox. Press Enter after editing the text to commit the changes.   }{\f2\fs24\cf6  \par }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \widctlpar \fs20 {\cs15\fs16\up6 #} _how_build_CAFE}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} CAFE; building; SNIFFDIR; CAFEDIR; IDESRCDIR; How to build CAFE}}{ \f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} How to build CAFE}}{\f2  }{\b\f2 How to build CAFE}{\f2  \par }\pard \widctlpar {\f2  \par To build CAFE, follow these steps. \par  \par }\pard \widctlpar {\f2 Go to the }{\f11 cafe}{\f2  directory in your CAFE enlistment (see }{\f2\uldb\cf11 Enlisting in the CAFE projects}{\v\f2 _how_enlist_CAFE}{\f2 ). \par }\pard \widctlpar {\f2  \par The recommended way of building CAF\'c9 and all it\rquote s components is by using the internal build file  \par provided at the CAFE50\\ directory (CAFE50.BLD). Loading the build file will load all the CAF\'c9  \par }\pard \widctlpar {\f2 subprojects. At present, not all sniff tests are built by this build file, you can build any sniff test by using the make in the sniff directory.  \par }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 You can also use the CAFEBLD.EXE executable at the CAFE50\\ root. With this tool you can build all of CAF\'c9 and its subprojects. Make sure to set up your environment using the Settings button.  \par }\pard \widctlpar {\f2 Below is the definition of the environment variables you need to define to build using the CAFEBLD exeutable. \par  \par  \par }\trowd \trgaph108\trleft-108 \cellx1440\cellx10080 \pard \widctlpar\intbl {\f11 SNIFFDIR}{\f2 \cell }\pard \widctlpar\intbl {\f2 The directory containing your IDESNIFF enlistment (usually somepath\\idesniff\\x86).\cell }\pard \widctlpar\intbl {\f2 \row  }\trowd \trgaph108\trleft-108 \cellx1440\cellx10080 \pard \widctlpar\intbl {\f11 CAFEDIR}{\f2 \cell }\pard \widctlpar\intbl {\f2 The directory containing your CAFE enlistment (usually somepath\\cafe).\cell }\pard \widctlpar\intbl {\f2 \row }\trowd  \trgaph108\trleft-108 \cellx1440\cellx10080 \pard \widctlpar\intbl {\f11 IDESRCDIR}{\f2 \cell }\pard \widctlpar\intbl {\f2 The directory containing your IDE source code enlistment (usually somepath\\ide).\cell }\pard \widctlpar\intbl {\f2 \row }\pard  \widctlpar {\f2  \par Alternatively, you can build CAF\'c9 using the nmake command as below. \par  \par }\pard \widctlpar {\f11 nmake -f cafebld.mak [macros] [targets] \par }\pard \widctlpar {\f2  \par Examples: \par  \par To build CAFE and the sniffs debug: }{\f11 nmake -f cafebld.mak DEBUG=1}{\f2  \par To clean and build CAFE retail: }{\f11 nmake -f cafebld.mak CLEAN=1 cafe}{\f2  \par To check out, clean, and build the sys sniff test debug: }{\f11 nmake -f cafebld.mak CLEAN=1 SLMOUT=1 DEBUG=1 sys}{\f2  \par  \par This makefile requires that you set three environment variables before running: \par  \par }\trowd \trgaph108\trleft-108 \cellx1440\cellx10080 \pard \widctlpar\intbl {\f11 SNIFFDIR}{\f2 \cell }\pard \widctlpar\intbl {\f2 The directory containing your IDESNIFF enlistment (usually somepath\\idesniff\\x86).\cell }\pard \widctlpar\intbl {\f2 \row  }\trowd \trgaph108\trleft-108 \cellx1440\cellx10080 \pard \widctlpar\intbl {\f11 CAFEDIR}{\f2 \cell }\pard \widctlpar\intbl {\f2 The directory containing your CAFE enlistment (usually somepath\\cafe).\cell }\pard \widctlpar\intbl {\f2 \row }\trowd  \trgaph108\trleft-108 \cellx1440\cellx10080 \pard \widctlpar\intbl {\f11 IDESRCDIR}{\f2 \cell }\pard \widctlpar\intbl {\f2 The directory containing your IDE source code enlistment (usually somepath\\ide).\cell }\pard \widctlpar\intbl {\f2 \row }\pard  \widctlpar {\f2  \par Use none, one, or more of the following targets to build parts of CAFE: \par  \par }\trowd \trgaph108\trleft-108 \cellx1440\cellx10080 \pard \widctlpar\intbl {\b\f2 Target\cell }\pard \widctlpar\intbl {\b\f2 Description\cell }\pard \widctlpar\intbl {\b\f2 \row }\trowd \trgaph108\trleft-108 \cellx1440\cellx10080 \pard \widctlpar\intbl { \f11 <none>\cell }\pard \widctlpar\intbl {\f2 Build CAFE and all the sniff tests.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 cafe\cell }\pard \widctlpar\intbl {\f2  Build CAFE: log, target, gui, shl, eds, prj, dbg, ide, bldtools, toolset, subsuite, and cafedrv.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 log\cell }\pard \widctlpar\intbl {\f2 Build the log system (log(d).dll).\cell }\pard  \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 target\cell }\pard \widctlpar\intbl {\f2 Build the target portion of the support system (target(d).dll).\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 gui\cell }\pard  \widctlpar\intbl {\f2 Build the GUI portion of the support system (gui(d).dll).\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 shl\cell }\pard \widctlpar\intbl {\f2 Build the shell portion of the support system (shl(d).dll).\cell  }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 eds\cell }\pard \widctlpar\intbl {\f2 Build the editors portion of the support system (eds(d).dll).\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 prj\cell }\pard  \widctlpar\intbl {\f2 Build the project portion of the support system (prj(d).dll).\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 dbg\cell }\pard \widctlpar\intbl {\f2 Build the debugger portion of the support system (dbg(d).dll). \cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 ide\cell }\pard \widctlpar\intbl {\f2 Build the IDE portion of the support system.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 bldtools\cell }\pard  \widctlpar\intbl {\f2 Build the build tools portion of the support system (bldtools(d).dll).\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 toolset\cell }\pard \widctlpar\intbl {\f2  Build the toolset portion of the support system (toolset(d).dll).\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 subsuite\cell }\pard \widctlpar\intbl {\f2 Build the subsuite portion of the support system (subsuite(d).lib).\cell  }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 cafedrv\cell }\pard \widctlpar\intbl {\f2 Build the CAFE driver (cafedrv(d).exe).\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 browser\cell }\pard \widctlpar\intbl { \f2 Build the browser sniff test (browser(d).dll).\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 dbg_mbc\cell }\pard \widctlpar\intbl {\f2 Build the debugger MBC sniff test (dbg_mbc(d).dll).\cell }\pard \widctlpar\intbl {\f2 \row  }\pard \widctlpar\intbl {\f11 debugger\cell }\pard \widctlpar\intbl {\f2 Build the debugger sniff test (debug(d).dll).\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 editgo\cell }\pard \widctlpar\intbl {\f2 Build the edit \lquote  n Go sniff test (editgo(d).dll).\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 editor\cell }\pard \widctlpar\intbl {\f2 Build the editor sniff test (editor(d).dll).\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl { \f11 sys\cell }\pard \widctlpar\intbl {\f2 Build the system sniff test (sys(d).dll).\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 vproj\cell }\pard \widctlpar\intbl {\f2 Build the vProj sniff test (vproj(d).dll).\cell }\pard  \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 vres\cell }\pard \widctlpar\intbl {\f2 Build the vRes sniff test (vres(d).dll).\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 vshell\cell }\pard \widctlpar\intbl {\f2  Build the vShell sniff test (vshell(d).dll).\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1440\cellx10080 \pard \widctlpar\intbl {\f11 wizards\cell }\pard \widctlpar\intbl {\f2 Build the wizards sniff test (wizards(d).dll). \cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar {\f2  \par Define none, one, or more of the following macros to perform actions on each target: \par  \par }\trowd \trgaph108\trleft-108 \cellx1440\cellx2880\cellx8748 \pard \widctlpar\intbl {\b\f2 Macro\cell }\pard \widctlpar\intbl {\b\f2 Value\cell }\pard \widctlpar\intbl {\b\f2 Description\cell }\pard \widctlpar\intbl {\b\f2 \row }\trowd  \trgaph108\trleft-108 \cellx1440\cellx2880\cellx8748 \pard \widctlpar\intbl {\f11 DEBUG\cell }\pard \widctlpar\intbl {\f2 0 (default)\cell }\pard \widctlpar\intbl {\f2 Build a retail version.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl  {\f11 \cell }\pard \widctlpar\intbl {\f2 1\cell }\pard \widctlpar\intbl {\f2 Build a debug version.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 \cell }\pard \widctlpar\intbl {\f2 2\cell }\pard \widctlpar\intbl {\f2  Build a retail version with debug information.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 BROWSE\cell }\pard \widctlpar\intbl {\f2 0\cell }\pard \widctlpar\intbl {\f2 Build without browser information.\cell }\pard  \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 \cell }\pard \widctlpar\intbl {\f2 1 (default)\cell }\pard \widctlpar\intbl {\f2 Build with browser information.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 SSYNC\cell  }\pard \widctlpar\intbl {\f2 0\cell }\pard \widctlpar\intbl {\f2 Don\rquote t ssync the source files before building.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 \cell }\pard \widctlpar\intbl {\f2 1\cell }\pard \widctlpar\intbl { \f2 Ssync the source files before building.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 SLMOUT\cell }\pard \widctlpar\intbl {\f2 0 (default)\cell }\pard \widctlpar\intbl {\f2 Don\rquote  t check out the DLL/EXE/LIB files before building.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 \cell }\pard \widctlpar\intbl {\f2 1\cell }\pard \widctlpar\intbl {\f2 Check out the DLL/EXE/LIB files before building.\cell }\pard  \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 SLMIN\cell }\pard \widctlpar\intbl {\f2 0 (default)\cell }\pard \widctlpar\intbl {\f2 Don\rquote t check in the DLL/EXE/LIB files after building.\cell }\pard \widctlpar\intbl {\f2 \row }\pard  \widctlpar\intbl {\f11 \cell }\pard \widctlpar\intbl {\f2 1\cell }\pard \widctlpar\intbl {\f2 Check in the DLL/EXE/LIB files after building.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 CLEAN\cell }\pard \widctlpar\intbl {\f2  0 (default)\cell }\pard \widctlpar\intbl {\f2 Don\rquote t delete intermediate and result files before building.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 \cell }\pard \widctlpar\intbl {\f2 1\cell }\pard \widctlpar\intbl {\f2  Delete intermediate and result files before building.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f11 DEPEND\cell }\pard \widctlpar\intbl {\f2 0\cell }\pard \widctlpar\intbl {\f2 Don\rquote t build any of the target\rquote  s dependencies.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1440\cellx2880\cellx8748 \pard \widctlpar\intbl {\f11 \cell }\pard \widctlpar\intbl {\f2 1 (default)\cell }\pard \widctlpar\intbl {\f2 Build all of the target \rquote s dependencies.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \widctlpar \fs20 {\cs15\fs16\up6 #} _how_use_help}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} using help; How to use this help file}}{\f2  }{\cs15\fs16\up6 $ {\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} How to use this help file}}{\f2  }{\b\f2 How to use this help file}{\f2  \par }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 Currently, the CAFE components (C++ classes) and member functions are accessible via the Search dialog. To search for a particular C++ class or member function, click the Search/Index button  on the toolbar, above, and search by class name (ex: COClipboard) or member function (ex: GetText). \par }\pard \widctlpar {\f2  \par }{\b\f2 About this help file \par }{\f2  \par }\pard \widctlpar {\f2 This help file is generated automatically by parsing specially formatted comments in the CAFE source files. To see how to add these special comments to your component files, select the }{\f2\uldb\cf11  How to add topics to this help file}{\v\f2\uldb\cf11 _}{\v\f2 how_add_help }{\f2 topic. \par }\pard \widctlpar {\f2  \par  \par }{\f9  \par }\pard \widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \widctlpar \fs20 {\cs15\fs16\up6 #} _how_add_help}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} add to this help file; How to add topics to this help file}}{\f2  }{ \cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} How to add topics to this help file}}{\f2  }{\b\f2 How to add topics to this help file}{\f2  \par }\pard \widctlpar {\f2  \par }\pard \widctlpar {\f2 To add topics to this help file, you must enter specially-formatted comments in your source or header file, rebuild the Rich Text Format (RTF) file that contains these topics, and run the Help Compiler (HC). \par }\pard \widctlpar {\f2  \par }{\b\f2 Comments are entered in your source (or header) file in the following format: \par }{\f2  \par }{\f3 // BEGIN_HELP_COMMENT \par // Function: <function prototype> \par // Description: <short description of the function> \par // Return: <short description of the return value> \par // Param: <parameter name> <parameter description> \par // END_HELP_COMMENT \par }{\f2  \par }{\b\f2 Example: \par }{\f2  \par }{\f3 // BEGIN_HELP_COMMENT \par // Function: BOOL COClipboard::SetText(LPCSTR szTextIn) \par // Description: Use this function to set the text in the system clipboard. \par // Return: TRUE if successful; FALSE otherwise \par }\pard \widctlpar {\f3 // Param: szTextIn A pointer to a null-terminated string containing the text to put in the clipboard. \par }\pard \widctlpar {\f3 // END_HELP_COMMENT \par }{\f2  \par }{\b\f2 Notes on fields: \par }{\f2  \par }\pard \widctlpar {\f2 Function: this field is required. The format of this field is <return type> <class::><function>(<param list>). For functions without a return type, class, or parameter list, these fields may be left empty. \par }\pard \widctlpar {\f2  \par Description: this field is optional. The text, to the end of the line, is included as a function description. \par  \par Return: this field is optional. The text, to the end of the line, is included as a return value description. \par  \par }\pard \widctlpar {\f2 Param: this field is optional. The format of this field is <parameter name> <parameter description>. The parameter description, to the end of the line, is a description of the parameter. Include this field multiple times to d escribe multiple parameters. \par }\pard \widctlpar {\f2  \par }{\b\f2 Building the help file: \par }{\f2  \par }\pard \widctlpar {\f2 Run }{\f3 nmake /f cafehlp.mak}{\f2  in the }{\f3 cafe\\help}{\f2  directory to build the .HLP file. Edit }{\f3 cafehlp.lst}{\f2  to add additional source files to the list of source files included. \par }\pard \widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \widctlpar \fs20 {\cs15\fs16\up6 #} _how_report_bugs}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} bugs; reporting bugs; How to report bugs}}{\f2  }{\cs15\fs16\up6 $ {\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} How to report bugs}}{\f2  }{\b\f2 How to report bugs}{\f2  \par }\pard \widctlpar {\f2  \par All bugs should be reported in the CAFE RAID database. \par  \par }\trowd \trgaph108\trleft-108 \cellx2880\cellx5760 \pard \widctlpar\intbl {\b\f2 RAID Field\cell }\pard \widctlpar\intbl {\b\f2 Value\cell }\pard \widctlpar\intbl {\b\f2 \row }\trowd \trgaph108\trleft-108 \cellx2880\cellx5760 \pard \widctlpar\intbl {\f2  Server\cell }\pard \widctlpar\intbl {\f2 dzzt\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f2 Login ID\cell }\pard \widctlpar\intbl {\f2 raiduser\cell }\pard \widctlpar\intbl {\f2 \row }\pard \widctlpar\intbl {\f2 Password\cell }\pard  \widctlpar\intbl {\f2 [leave blank]\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx2880\cellx5760 \pard \widctlpar\intbl {\f2 Database Name\cell }\pard \widctlpar\intbl {\f2 cafe\cell }\pard \widctlpar\intbl {\f2 \row }\pard  \widctlpar {\f2  \par }{\f9  \par }\pard \widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar \fs20 {\cs15\fs16\up6 #} SubSuite.H}}{\f2  The code segment below is a declaration of the CIDESubSuite based class. Every CAF\'c9 testsuite has to have one of these.  \par }\pard \widctlpar {\f2\cf11 /////////////////////////////////////////////////////////////////////////////// \par //\tab CAFEsub.h \par // \par //\tab Created by :\tab \tab \tab  \par //\tab \tab VCBU QA \par //\tab Description : \par //\tab \tab Declaration of the CCAFETESTSubSuite class \par }{\f2  \par }{\f2\cf2 #ifndef}{\f2  __SNIFF_H__ \par }{\f2\cf2 #define}{\f2  __SNIFF_H__ \par }{\f2\cf2 #ifndef}{\f2  __STDAFX_H__ \par \tab #error include 'stdafx.h' before including this file for PCH \par }{\f2\cf2 #endif}{\f2  \par }{\f2\cf11 /////////////////////////////////////////////////////////////////////////////// \par }{\f2 // CCAFETESTSubSuite class \par  \par }{\f2\cf2 class}{\f2  CCAFETESTSubSuite : }{\f2\cf2 public}{\f2  CIDESubSuite \par \{ \par }{\f2\cf2 public}{\f2 : \par }\pard \fi720\widctlpar {\f2 DECLARE_SUBSUITE(CCAFETESTSubSuite) \par }\pard \widctlpar {\f2 \tab DECLARE_TESTLIST(); // A macro used to declare the list of tests in a given suite. \par }\pard \widctlpar {\f2 \tab \tab \tab \tab  // See IMPLEMENT_TESTLIST for the test list in cafesub.cpp}{\v SubSuite.CPP}{\f2  \par }\pard \widctlpar {\f2 \tab }{\f2\cf2 virtual void}{\f2  SetUp(BOOL bCleanUp); \par }{\f2\cf2 #endif}{\f2  //__SNIFF_H__  \par }\pard \widctlpar {\f2\fs16 \page }{\f2 Implementation of the CAF\'c9 subsuite based class. Each test suite declares and implements one of these.}{\v\f2  \par }\pard \widctlpar {\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar \fs20 {\cs15\fs16\up6 #} SubSuite.CPP}}{\f2  \line }{\f2\cf11 /////////////////////////////////////////////////////////////////////////////// \par }\pard \widctlpar {\f2\cf11 //\tab CAFEsub.CPP \par //\tab Created by :\tab VCBU QA\tab \tab  \par // \par //\tab Description :\tab implementation of the CCAFETESTSubSuite class \par  \par }{\f2\cf2 #include}{\f2  "stdafx.h" \par }{\f2\cf2 #include}{\f2  "CAFEsub.h" \par  \par }{\f2\cf2 #include}{\f2  "CAFEcase.h" \par  \par }{\f2\cf2 #undef}{\f2  THIS_FILE \par }{\f2\cf2 static char}{\f2  BASED_}{\f2\cf1 CODE}{\f2  THIS_FILE[] = __FILE__; \par  \par }{\f2\cf11 ///////////////////////////////////////////////////////////////////////////// \par // The CCAFETESTSubSuite object}{\f2\cf6  \par }{\f2  \par IMPLEMENT_SUBSUITE(CCAFETESTSubSuite, CIDESubSuite, "TestWizard Generated script", "VCBU QA") \par  \par BEGIN_TESTLIST(CCAFETESTSubSuite) \par }\pard \widctlpar {\f2 \tab TEST(CCAFETESTIDETest, RUN)  }{\f2\cf11 //}{\f2\cf6  Add a list of all the testcases here. \ldblquote RUN\rdblquote  flag selects the case to run by default}{\f2\cf11 .}{\f2  \par END_TESTLIST()\tab \tab }{\f2\cf6 // Use the NORUN flag to deselect the test by default when the suite is loaded in the driver. \par }\pard \widctlpar {\f2  \par }{\f2\cf2 void}{\f2  CCAFETESTSubSuite::SetUp(BOOL bCleanUp) \par \{ \par }{\f2\cf11 \tab // call the base class \par }{\f2 \tab CIDESubSuite::SetUp(bCleanUp); \par \} \par }\pard \widctlpar {\f2 \page This is a sample testcase declaration. \par }\pard \widctlpar {\f2 Pay attention to the notes in }{\f2\fs18\cf6 RED}{\f2 . \par }\pard \widctlpar {\cs15\up6 #{\footnote \pard\plain \s16\nowidctlpar \fs20 {\cs15\fs16\up6 #} TestCase.H}}{\f2  }{\f2\cf11 /////////////////////////////////////////////////////////////////////////////// \par }\pard \widctlpar {\f2\cf11 //\tab CAFEcase.h \par //\tab Created by : VCBU QA \par  \par //\tab Description : Declaration of the CCAFETESTIDETest Class \par // \par }{\f2\cf2 #ifndef}{\f2  __CLWCASES_H__ \par }{\f2\cf2 #define}{\f2  __CLWCASES_H__ \par  \par }{\f2\cf2 #ifndef}{\f2  __STDAFX_H__ \par \tab }{\f2\cf2 #error include}{\f2  'stdafx.h' before including this file for PCH \par }{\f2\cf2 #endif}{\f2  \par }{\f2\cf2 #include}{\f2  "CAFEsub.h" \par }{\f2\cf11 /////////////////////////////////////////////////////////////////////////////// \par }{\f2 //\tab CCAFETESTIDETest class \par }{\f2\cf2 class}{\f2  CCAFETESTIDETest : }{\f2\cf2 public}{\f2  CTest \par \{ \par     DECLARE_TEST(CCAFETESTIDETest, CCAFETESTSubSuite) \par }{\f2\cf11 // Operations \par }{\f2\cf2 public}{\f2 : \par }{\f2\cf2 virtual void}{\f2  Run(void); }{\f2\cf6 // This function gets called for each of the testcases.  \par }\pard \li1440\widctlpar {\f2\cf6          //Think of it as the main() of a DOS app. You want to call all \par }\pard \widctlpar {\f2\cf11 // Data}{\f2\cf6  \tab  // your testing functions from inside this function. See a sample implementation in cafesub.cpp}{\v SubSuite.CPP}{\f2\cf6  \par }\pard \widctlpar {\f2\cf11  \par }{\f2\cf2 protected:}{\f2  \par }{\f2\cf11 // Test Cases  }{\f2\cf6 // All your testing functions would be declared here.  \par }{\f2\cf2 protected}{\f2 : \par \}; \par }\pard \widctlpar {\f2\cf2 #endif }{\f2 //__CLWCASES_H__\page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar \fs20 {\cs15\fs16\up6 #} TestCase.CPP}}{\f2  This is a sample testcase implementation. \par }\pard \widctlpar {\f2 Pay attention to the notes in }{\f2\fs18\cf6 RED}{\f2 . \par }\pard \widctlpar {\f2\fs18\cf11 /////////////////////////////////////////////////////////////////////////////// \par //\tab CAFEcase.CPP \par //\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab   \par //\tab Created by :\tab \tab \tab  \par //\tab \tab VCBU QA\tab \tab  \par // \par //\tab Description :\tab \tab \tab \tab \tab \tab \tab \tab   \par //\tab \tab TestWizard Generated script\tab \tab   \par }\pard \widctlpar {\f2  \par }{\f2\fs18\cf2 #include}{\f2  "stdafx.h" \par }{\f2\fs18\cf2 #include}{\f2  "CAFEcase.h"\tab \tab \tab \tab \tab  \tab   \par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab     \par }{\f2\fs18\cf2 #define}{\f2  VERIFY_TEST_SUCCESS(TestCase)\\ \par \tab TestCase == ERROR_SUCCESS \par  \par IMPLEMENT_TEST(CCAFETESTIDETest, CTest, "TestWizard Generated script", -1, CCAFETESTSubSuite) \par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab   \par }{\f2\fs18\cf2 void}{\f2  CCAFETESTIDETest::Run(}{\f2\fs18\cf2 void}{\f2 ) \par \{ \par }\pard\plain \s51\li360\sa120\nowidctlpar \fs20 {\f2\fs18\cf6 /*Call all your testing functions in here. In the best case you should only have simple functions like CreateProject() ; \par BuildProject(); \par DebugProject();  \par }\pard \s51\li360\sa120\nowidctlpar {\f2\fs18\cf6 That way one can just read the Run function and know what\rquote s going on in the test. */ \par }\pard\plain \nowidctlpar \fs20 \} \par \pard \widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\nowidctlpar \fs20 {\cs15\fs16\up6 #} STDAFX}}{\f2  The stdafx.*.  \par }\pard \widctlpar {\f2\fs18\cf11 //\tab Description : \par //\tab \tab Precompiled header for the test \par // \par //\tab \tab Includes core CAFE headers, as contained in the utility headers \par //\tab \tab for the Workbench and all of the workbench's areas. \par // \par }\pard \widctlpar {\f2  \par }{\f2\fs18\cf2 #}{\f2\cf2 ifndef}{\f2  __STDAFX_H__ \par }{\f2\fs18\cf2 #}{\f2\cf2 define}{\f2  __STDAFX_H__ \par  \par }{\f2\fs18\cf2 #include}{\f2  <afxwin.h>\tab \tab \tab // MFC core and standard components \par }{\f2\cf2 #include }{\f2 <winperf.h>\tab \tab // skipped in windows.h due to WIN32_LEAN_AND_MEAN \par }{\f2\cf2 #include}{\f2  <afxext.h> \tab \tab // MFC extensions \par }{\f2\cf2 #include}{\f2  <afxtempl.h> \par  \par }{\f2\cf2 #include}{\f2  "test.h" \par }{\f2\cf2 #include}{\f2  "subsuite.h" \par }{\f2\cf2 #include}{\f2  "support.h" \par  \par }{\f2\cf2 #endif}{\f2  //__STDAFX_H__ \par  \par ++++++++++++++ \par  \par Below is the stdafx.cpp file code segment. \par }\pard \widctlpar {\f2\fs18\cf11 /////////////////////////////////////////////////////////////////////////////// \par //\tab STDAFX.CPP \par // \par //\tab Created by :\tab \tab \tab : \par //\tab \tab VCBU QA\tab \tab  \par // \par //\tab Description : \par //\tab \tab source file that includes just the standard include \par // \par //\tab \tab stdafx.pch will be the pre-compiled header \par //\tab \tab stdafx.obj will contain the pre-compiled type information \par // \par  \par }\pard \widctlpar {\f2\cf2 #include}{\f2  "stdafx.h"} \par }
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Src\Tools\Bin\cafebrws.txt ===
********************  CAFE Browser README *************************
INTRODUCTION


Q: What is CAFE Browser?
A: It is a tool used to write CAFE automated tests by giving easy access to the entire set of CAFE functions.

Q: Who needs this tool?
A: Anybody who wants to add tests to an existing CAFE test script.

Q: What advandages does CAFE Browse offer?
A: It provides up to date documentation on all the CAFE functions and their parameters.  
   Look up of functions is fast and easy.  Copy and Paste is supported so that you can use this app while working with the IDE.

Q: What kind of documentation is available?
A: This readme.txt file briefly explains how to install and use the CAFE Browser.

Q: Who do I contact for support, bug reports or feature requests?
A: EnriqueP.

Q: Where do I report CAFE Browser bugs?
A: Use raid to enter bugs. The database is CAFE and the AREA = CAFE BRWS

**************  INSTALLING CAFE Browser  *********************

**** Tree Diagram


CAFE
     V3
		TOOLS
			BIN	(contains the files you need: cafebrws.exe and apidata.txt )

To install CAFE Browsser:
1.Create a new APPWIZ subdirectory under your IDE\BIN directory. 

2. Copy apidata.txt from the V3\TOOLS\BIN directory to IDE\BIN\APPWIZ
3. Copy cafebrws.exe to IDE\BIN


**************  RUNNING TEST WIZARD  *********************

1. You can run the browser at any time. It is a stand alone app so it does not need the IDE to be running.
2. You can however add CAFE Browser to your Tools Menu so you can easily launch it when you need it.

 NOTE: CAFE Browser gets its data from apidata.txt.  This text file will be periodically updated and checked in into
 \CAFE\V3\TOOLS\BIN   so remember to ssync and copy it to your local IDE\BIN\APPWIZ directory.

 Thanks.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Src\Tools\Bin\readme.txt ===
*************************** README.TXT     ************************

To learn about the tools that are available for CAFE development read:

cafebrws.txt  for CAFE Browser information on how to install it and what is used for.

testwiz.txt for Test Wizard information on how to install it and what is used for.


 For questions or suggestions contact:

  EnriqueP or IvanL


   Thanks.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Src\Tools\Bin\testwiz.txt ===
********************  TEST WIZARDS README *************************
INTRODUCTION


Q: What is Test Wizard?
A: It is a custom App Wizard extension DLL (AWX) that is used to create CAFE automated tests.

Q: Who needs this tool?
A: Anybody who wants to write a new CAFE test script.

Q: What advandages does Test Wizard have?
A: The start up time to create a new test is greatly reduced since it automatically generates a CAFE type makefile and all the necessary source files, hiding all of the grunge work so the user is able to focus on writing the test cases instead of worrying about the underlying support code. 
It also provides an intuitive UI to the CAFE member functions so that the user can get a headstart on writing the script.

Q: What kind of documentation is available?
A: This text file briefly explains how to install and use the Test Wizard.

Q: Who do I contact for support, bug reports or feature requests?
A: EnriqueP or IvanL

Q: Where do I report Test Wizard bugs?
A: Use raid to enter bugs. The database is CAFE and the AREA = TESTWIZ

**************  INSTALLING TEST WIZARD  *********************

**** Tree Diagram


CAFE
     V3
	TOOLS
              BIN\testwiz.awx (Retail version of Test Wizard)
		 \testwizd.awx (Debug version of Test Wizard)
		 \apidata.txt (CAFE database)

To install the Test Wizard:

1. Copy both testwiz.awx and apidata.txt from the V3\TOOLS\BIN directory to V3DROP\BIN\IDE

 *If you are using the Debug IDE you must copy the testwizd.awx to IDE\BIN\IDED


**************  RUNNING TEST WIZARD  *********************

1. Start IDE; File.New; select New Project Workspace
2. Specify the name of your new test and the path to the new location.
3. Select "TestWizard Custom Appwiz" from 'Project Type' drop down; <Create>.
4. The next dialog is self explanatory.  
 To create an empty skeleton for your sniff test click "Finish"
OR
  You can click on  <Edit Script...> if you want to start writing your test.

5. After you are done reading the confirmation dialog hit "OK"

The test wizard will create a new project with all the correct Project settings and source and *.stf files. 
If you build this project you should get a working automation test dll .  

*** IMPORTANT: ****
Test Wizard gets its data from apidata.txt.  This text file will be periodically updated and checked in into
 \CAFE\V3\TOOLS\BIN   so remember to ssync and copy it to your local BIN\IDE (or BIN\IDED) directory.

Any feedback and bugs reports are welcome. Feel free to contact EnriqueP if you have any questions,

 Thanks and Happy coding!
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Src\Tools\TestWiz\custapi.txt ===
This file explains how to add API's and customize what is displayed in the TEST Wizard Script Dialog. 

**IMPORTANT**: The format of the APIDATA.TXT will undergo some improvement changes. Any time that you might invest customizing your APIDATA.TXT could be wasted since we won't guarenteed backward compatibility. 

*********** TO BE IMPLEMENTED   ******
In the future, a tool will be available that will automatically generate APIDATA.TXT. All the necessary information will be taken from the CAFE.BSC file.  Until then, it will be necessary to edit this file manually.
******************************************
All the Categories, Areas, Subareas and API's shown in the Script dialog are read in from the APIDATA.TXT.

APIDATA.TXT has a unique format in which the data is arranged. 
Here is a description of the format:

Every line starts with a special key word such as "API".  There are currently 5 key words in use: CATEGORY, AREA, SUBAREA, API and PARAM

Here is an example:
Supose you want to add an API defined as:
int COSource::SaveAs(LPCSTR szName, BOOL bOverwrite = FALSE); 
and you want to place it in the Category= Editors, Area = Source Editor and Subarea = File I/O. You would need to create the entry:
________________________________
CATEGORY Editors
   AREA Source Editor
	SUBAREA File I/O
		API int COSource::SaveAs(LPCSTR szName, BOOL bOverwrite = FALSE);
_____________________________________

*The indents are not required but it makes it more readable to the human eye.
Note how the the SaveAs() comes after the CATEGORY, AREA and SUBAREA in which it is contained. 
You may specify a short description for the API immediately following its declaration. Make sure to use a space, tab, comma or semicolon as a separator.

You can group API's together and have them show up in the same subarea, for example:
If we want to show the COSource::Close() API in the File I/O subarea and the COSource::Find() API on different subarea like "Search Operations", this is what you would enter:
_____________________________________________________
CATEGORY Editors
   AREA Source Editor
	SUBAREA File I/O
	   API int COSource::SaveAs(LPCSTR szName, BOOL bOverwrite = FALSE); Saves a text file.
	   API int COSource::Close(void)  Closes editor window.
	SUBAREA Search Operations
	   API int COSource::Find(void), Finds selected text
____________________________________________________________


Note the short API descriptions after each API declaration. These descriptions will be displayed on the script dialog's description box.

Also note the parameters must be declared just as you would do it in a header file. Default values for the parameters are handled correctly and displayed accordingly in the Parameters List box.

If an API is not a member function of any class you can simply declare it as you would in a header file and preappending the API keyword like this:
_____________________________________________________
CATEGORY  Utilities
    AREA IDE
	SUBAREA Mouse Operations
	    API void ClickMouse(int nButton,HWND hwnd, int cX,  int cY); Clicks mouse at coordinates
CATEGORY Editors
    AREA Source Editor
	SUBAREA File I/O
	    API int COSource::SaveAs(LPCSTR szName, BOOL bOverwrite = FALSE); Saves a text file.
	    API int COSource::Close(void)  Closes editor window.
	SUBAREA Search Operations
	    API int COSource::Find(void), Finds selected text
____________________________________________________________

**** Look at the APIDATA.TXT to get a better idea of how all the api's are grouped.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Src\Tools\Bin\apidata.txt ===
// BEGIN_CLASS_HELP
// ClassName: COClipboard
// BaseClass: none
// Category: General
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: CIME
// BaseClass: CWnd
// Category: General
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: CUniqueDlgCtrl
// BaseClass: None
// Category: General
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIDialog
// BaseClass: UIWindow
// Category: General
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIMessageBox
// BaseClass: UIWindow
// Category: General
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIWindow
// BaseClass: None
// Category: General
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: CFileTableLine
// BaseClass: CObject
// Category: Tools
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: CFileTableLineList
// BaseClass: CObList
// Category: Tools
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: CFileTable
// BaseClass: None
// Category: Tools
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIDAM
// BaseClass: UIDockWindow
// Category: Debug
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIDebug
// BaseClass: None
// Category: Debug
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIEEWindow
// BaseClass: UIDockWindow
// Category: Debug
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIExceptions
// BaseClass: UIDialog
// Category: Debug
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UILocals
// BaseClass: UIDockWindow
// Category: Debug
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIMemory
// BaseClass: UIDockWindow
// Category: Debug
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIQuickWatch
// BaseClass: UIDialog
// Category: Debug
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIRegisters
// BaseClass: UIDockWindow
// Category: Debug
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIStack
// BaseClass: UIDockWindow
// Category: Debug
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIThreads
// BaseClass: UIDialog
// Category: Debug
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIVariables
// BaseClass: UIEEWindow
// Category: Debug
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIWatch
// BaseClass: UIEEWindow
// Category: Debug
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: COFile
// BaseClass: none
// Category: Editors
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: COResScript
// BaseClass: COFile
// Category: Editors
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: COSource
// BaseClass: COFile
// Category: Editors
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIAccEdit
// BaseClass: UIResTableEditor
// Category: Editors
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIDlgEdit
// BaseClass: UIResEditor
// Category: Editors
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIEditor
// BaseClass: UIWindow
// Category: Editors
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIFindInFilesDlg
// BaseClass: UIDialog
// Category: Editors
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIFindDlg
// BaseClass: UIDialog
// Category: Editors
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIReplaceDlg
// BaseClass: UIDialog
// Category: Editors
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIImgEdit
// BaseClass: UIResEditor
// Category: Editors
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIMenEdit
// BaseClass: UIResEditor
// Category: Editors
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIResBrowser
// BaseClass: UIResTableEditor
// Category: Editors
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIResEditor
// BaseClass: UIEditor
// Category: Editors
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIResTableEditor
// BaseClass: UIResEditor
// Category: Editors
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIStrEdit
// BaseClass: UIResTableEditor
// Category: Editors
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UISymbolBrowser
// BaseClass: UIDialog
// Category: Editors
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIVerEdit
// BaseClass: UIResEditor
// Category: Editors
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: APPWZOPTIONS
// BaseClass: none
// Category: Project
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: PROJOPTIONS
// BaseClass: none
// Category: Project
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: COProject
// BaseClass: none
// Category: Project
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UISqlDataSources
// BaseClass: UIDialog
// Category: Project
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UISqlServerLogIn
// BaseClass: UIDialog
// Category: Project
// END_CLASS_HELP
 // BEGIN_CLASS_HELP
// ClassName: UISelectTables
// BaseClass: UIDialog
// Category: Project
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIDataBaseDlgs
// BaseClass: None
// Category: Project
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UISelectRecordSet
// BaseClass: UIDialog
// Category: Project
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIAppWizard
// BaseClass: UIProjectWizard
// Category: Project
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIClassWizard
// BaseClass: UITabbedDialog
// Category: Project
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIAddClassDlg
// BaseClass: UIDialog
// Category: Project
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIExtWizard
// BaseClass: UIProjectWizard
// Category: Project
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIProjectTarget
// BaseClass: UIDialog
// Category: Project
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIOGalleryDlg
// BaseClass: UIDialog
// Category: Project
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIProjectFiles
// BaseClass: UIDialog
// Category: Project
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIProjOptionsTabDlg
// BaseClass: UITabbedDialog
// Category: Project
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIProjectWizard
// BaseClass: UIDialog
// Category: Project
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UITestAppWizard
// BaseClass: UIAppWizard
// Category: Project
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: COConnection
// BaseClass: none
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: COWorkSpace
// BaseClass: none
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIFileDlg
// BaseClass: UIDialog
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIFileSaveAsDlg
// BaseClass: UIFileDlg
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIFileOpenDlg
// BaseClass: UIFileDlg
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIFontDlg
// BaseClass: UIDialog
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UICustomizeTabDlg
// BaseClass: UITabbedDialog
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIDockWindow
// BaseClass: UIWindow
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIConnection
// BaseClass: UIDialog
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIConnectionSettings
// BaseClass: UIDialog
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIOptionsTabDlg
// BaseClass: UITabbedDialog
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIOutput
// BaseClass: UIDockWindow
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UITabbedDialog
// BaseClass: UIDialog
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIWBDialog
// BaseClass: UIDialog
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIWBMessageBox
// BaseClass: UIMessageBox
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIMainFrm
// BaseClass: UIWindow
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIProperties
// BaseClass: UIWindow
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UITBarDialog
// BaseClass: UIDialog
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIToolbar
// BaseClass: UIWindow
// Category: Shell
// END_CLASS_HELP
// BEGIN_CLASS_HELP
// ClassName: UIWBFrame
// BaseClass: UIMainFrm
// Category: Shell
// END_CLASS_HELP
// BEGIN_HELP_COMMENT
// Function: BOOL COClipboard::Empty(void)
// Description: Use this function to clear the text on the system clipboard.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString COClipboard::GetText(void)
// Description: Use this function to get the text from the system clipboard.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COClipboard::SetText(LPCSTR szTextIn)
// Description: Use this function to set the text in the system clipboard.
// Return: BOOL
// Param: szTextIn A pointer to a null-terminated string containing the text to put in the clipboard.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CIME::Create(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int CIME::OnCreate(LPCREATESTRUCT lpCreateStruct)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: lpCreateStruct
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CIME::Enable(BOOL bEnable /*=TRUE*/)		//REVIEW(EnriqueP): Do we need to switch focus to window?
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: bEnable
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CIME::IsEnabled(void)		//REVIEW(EnriqueP): Do we need to switch focus to window?
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CIME::Open(BOOL bOpen /*=TRUE*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: bOpen
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int CIME::IsOpen(void)	   //REVIEW(EnriqueP): Do we need to switch focus to window?
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CIME::Flush(HWND hwnd)		   //REVIEW(EnriqueP): Do we need to switch focus to window?
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: hwnd
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: UINT CIME::GetMode(void)			//REVIEW(EnriqueP): Do we need to switch focus to window?
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: UINT
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: UINT CIME::SetMode(UINT flags)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: UINT
// Param: flags
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: UINT CIME::SetMode(EAlphabets eAlphabet /*=ALPHA*/, UINT nBytes /*=1*/, BOOL bRoman /*=TRUE*/, BOOL bCodeInput /*=FALSE*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: UINT
// Param: eAlphabet
// Param: nBytes
// Param: bRoman
// Param: bCodeInput
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CIME::SendVKey(UINT vKey)		//REVIEW(EnriqueP): Do we need to switch focus to window?
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: vKey
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND CMSTest::WGetFocus       (void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WStaticSetClass (LPSTR lpszClassName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpszClassName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WIsVisible      (HWND hwnd)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: hwnd
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WGetText        (HWND hwnd, CString& strBuffer)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: hwnd
// Param: strBuffer
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND CMSTest::WFndWndWait       (LPCSTR lpcszCaption, UINT uFlags, UINT uSeconds)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: lpcszCaption
// Param: uFlags
// Param: uSeconds
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND CMSTest::WFndWndWaitC       (LPCSTR lpcszCaption, LPCSTR lpcszClass, UINT uFlags, UINT uSeconds)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: lpcszCaption
// Param: lpcszClass
// Param: uFlags
// Param: uSeconds
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND CMSTest::WFndWnd       (LPCSTR lpcszCaption, UINT uFlags)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: lpcszCaption
// Param: uFlags
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND CMSTest::WFndWndC      (LPCSTR lpcszCaption, LPCSTR lpcszClass, UINT uFlags)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: lpcszCaption
// Param: lpcszClass
// Param: uFlags
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WSetWndSiz    (HWND hwnd, int w,  int h)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: hwnd
// Param: w
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CSize CMSTest::WGetWndSiz    (HWND hwnd)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CSize
// Param: hwnd
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WSetActWnd    (HWND hwnd)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: hwnd
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND CMSTest::WGetActWnd    (HWND hwnd)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: hwnd
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WMenu        (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WMenuExists        (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WMenuGrayed        (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WMenuChecked       (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WMenuEnabled       (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::WMenuCount         (void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WMenuText			(LPCSTR lpcszName, CString& strBuffer)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: strBuffer
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WMenuEnd           (void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WButtonExists   (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WButtonEnabled  (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WButtonFocus    (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WButtonClick    (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WButtonSetFocus (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WCheckExists   (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WCheckEnabled  (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WCheckFocus    (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::WCheckState    (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WCheckClick    (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WCheckCheck    (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WCheckUnCheck  (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WCheckSetFocus (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WOptionExists   (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WOptionEnabled  (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WOptionFocus    (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::WOptionState    (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WOptionClick    (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WOptionSelect   (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WOptionSetFocus (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WListExists       (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::WListCount        (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WListText         (LPCSTR lpcszName, CString& strBuffer)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: strBuffer
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::WListLen          (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::WListIndex        (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WListItemText     (LPCSTR lpcszName, int iIndex, CString& strBuffer)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: iIndex
// Param: strBuffer
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::WListItemLen      (LPCSTR lpcszName, int iIndex)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: lpcszName
// Param: iIndex
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::WListItemExists   (LPCSTR lpcszName, LPCSTR lpcszItem)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: lpcszName
// Param: lpcszItem
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WListItemClk      (LPCSTR lpcszName, int iIndex, int nOffset /*=0*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: iIndex
// Param: nOffset
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WListItemClk  (LPCSTR lpcszName, LPCSTR szItem, int nOffset /*=0*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: szItem
// Param: nOffset
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WListItemCtrlClk  (LPCSTR lpcszName, int iIndex, int nOffset /*=0*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: iIndex
// Param: nOffset
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WListItemCtrlClk  (LPCSTR lpcszName, LPCSTR szItem, int nOffset /*=0*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: szItem
// Param: nOffset
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WListItemShftClk  (LPCSTR lpcszName, int iIndex, int nOffset /*=0*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: iIndex
// Param: nOffset
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WListItemShftClk  (LPCSTR lpcszName, LPCSTR szItem, int nOffset /*=0*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: szItem
// Param: nOffset
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WListItemDblClk  (LPCSTR lpcszName, int iIndex, int nOffset /*=0*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: iIndex
// Param: nOffset
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WListItemDblClk  (LPCSTR lpcszName, LPCSTR szItem, int nOffset /*=0*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: szItem
// Param: nOffset
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::WListSelCount     (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WListSelItems     (LPCSTR lpcszName, LPINT lpIntArray)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: lpIntArray
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WListEnabled      (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WListSetFocus     (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WComboExists      (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::WComboCount       (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WComboText        (LPCSTR lpcszName, CString& strBuff)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: strBuff
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::WComboLen         (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::WComboIndex       (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WComboSetText (LPCSTR lpcszName, LPCSTR lpcszText)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: lpcszText
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WComboSelText     (LPCSTR lpcszName, CString& strBuff)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: strBuff
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::WComboSelLen      (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WComboItemText    (LPCSTR lpcszName, int iIndex, CString& strBuff)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: iIndex
// Param: strBuff
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::WComboItemLen     (LPCSTR lpcszName, int iIndex)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: lpcszName
// Param: iIndex
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::WComboItemExists  (LPCSTR lpcszName, LPCSTR lpcszItem)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: lpcszName
// Param: lpcszItem
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WComboItemClk(LPCSTR lpcszName, int iIndex)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: iIndex
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WComboItemClk(LPCSTR lpcszName, LPCSTR szItem)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: szItem
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WComboItemDblClk(LPCSTR lpcszName, int iIndex)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: iIndex
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WComboItemDblClk(LPCSTR lpcszName, LPCSTR szItem)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: szItem
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WComboEnabled     (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WComboSetFocus    (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WEditExists   (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: long CMSTest::WEditLen      (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: long
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WEditText     (LPCSTR lpcszName, CString& strBuff)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: strBuff
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WEditSetText  (LPCSTR lpcszName, LPCSTR lpcszText)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: lpcszText
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WEditSelText  (LPCSTR lpcszName, CString& strBuff)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// Param: strBuff
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: long CMSTest::WEditSelLen   (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: long
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WEditClick    (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WEditEnabled  (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::WEditSetFocus (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CMSTest::WStaticExists   (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: long CMSTest::WStaticLen	 (LPCSTR lpcszName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: long
// Param: lpcszName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int CMSTest::QueKeys (LPCSTR sz)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: sz
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int CMSTest::QueKeyDn (LPCSTR sz)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: sz
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int CMSTest::QueKeyUp (LPCSTR sz)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: sz
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int CMSTest::DoKeys (LPCSTR sz, BOOL bLiteral /*=FALSE*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: sz
// Param: bLiteral
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int CMSTest::DoKeyshWnd (HWND hwnd, LPCSTR sz)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: hwnd
// Param: sz
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void CMSTest::QuePause (DWORD dw)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: dw
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::QueSetSpeed (WORD w)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: w
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::QueSetFocus (HWND hwnd)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: hwnd
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::QueSetRelativeWindow (HWND hwnd)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: hwnd
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::QueMouseMove (POINT pt)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::QueMouseDn (int n, POINT pt)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Param The parameter description(s) for this function are not available.
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::QueMouseUp (int n, POINT pt)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Param The parameter description(s) for this function are not available.
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::QueMouseClick (int n, POINT pt)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Param The parameter description(s) for this function are not available.
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::QueMouseDblClk (int n, POINT pt)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Param The parameter description(s) for this function are not available.
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CMSTest::QueMouseDblDn (int n, POINT pt)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Param The parameter description(s) for this function are not available.
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int CMSTest::QueFlush (BOOL bRestoreKeyState)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: bRestoreKeyState
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API BOOL EmptyClip( /*BTHROW bThrowFail /*= DO_THROW*/ ) 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: bThrowFail
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API BOOL GetClipText( CString& rstrTextOut/*, BTHROW bThrowFail /*= DO_THROW*/ )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: rstrTextOut
// Param: bThrowFail
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API BOOL SetClipText( LPCSTR szTextIn/*, BTHROW bThrowFail /*= DO_THROW*/ )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: szTextIn
// Param: bThrowFail
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API void PasteKeys(LPCSTR szPasteText/*, BTHROW bThrowFail /*= DO_THROW*/)
// Description: Use this function to paste the given string into the control with the focus.
// Return: GUI_API
// Param: szPasteText Pointer to a null-terminated string containing the text to paste.
// Param: bThrowFail One of: DO_THROW or DONT_THROW that indicates whether to throw an exception upon failure.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API void DoKeysSlow(LPCSTR szKeys, WORD wMilliseconds /*=0*/, BOOL bLiteral /*=FALSE*/)
// Description: Use this function to perform DoKeys at a slower rate.
// Return: GUI_API
// Param: szKeys Pointer to a null-terminated string containing the DoKeys-formatted keystrokes.
// Param: wMilliseconds The number of milliseconds to wait between keystrokes.
// Param: bLiteral TRUE to interpret the keystrokes literally; FALSE to interpret the keystrokes as DoKeys keystrokes.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API void ClickMouse( int nButton, HWND hwnd, int cX,  int cY) 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: nButton
// Param: hwnd
// Param: cX
// Param: cY
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API void DragMouse ( int nButton, HWND hwnd1, int cX1, int cY1, HWND hwnd2, int cX2, int cY2)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: nButton
// Param: hwnd1
// Param: cX1
// Param: cY1
// Param: hwnd2
// Param: cX2
// Param: cY2
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API BOOL ScreenToClient(HWND hwnd, CRect* pRect)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: hwnd
// Param: pRect
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API BOOL ClientToScreen(HWND hwnd, CRect* pRect)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: hwnd
// Param: pRect
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API int CompareFiles(LPCSTR strSource, LPCSTR strTarget, int nStart)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: strSource
// Param: strTarget
// Param: nStart
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API void KillFile(LPCSTR szPathName, LPCSTR szFileName /*=NULL*/, BOOL bIgnoreReadOnly /*=FALSE*/)
// Description: Use this function to delete all files that match the pattern provided in szFileName.
// Return: GUI_API
// Param: szPathName A string containing the path to the files.
// Param: szFileName A string containing the filename to delete (wildcards are supported).
// Param: bIgnoreReadOnly TRUE to ignore the read-only bit; FALSE to honor the read-only bit.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API BOOL KillAllFiles(LPCSTR szPathName, BOOL bRemoveDir /*=TRUE*/)
// Description: Use this function to delete an entire directory.
// Return: GUI_API
// Param: szPathName A string containing the path to the directory to be deleted.
// Param: bRemoveDir TRUE to remove the directory itself; FALSE to keep the directory but delete all the files in it.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API void CopyTree(LPCSTR szFrom, LPCSTR szTo)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: szFrom
// Param: szTo
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API int FindStrInFile(LPCSTR szFileName, LPCSTR szStr, int nStart /*=1*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: szFileName
// Param: szStr
// Param: nStart
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API LPCSTR GetText(HWND hwnd, LPSTR sz, int cMax)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: hwnd
// Param: sz
// Param: cMax
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API CString GetText(HWND hwnd)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: hwnd
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API int DoMenu( LPCSTR szMenu1, LPCSTR szMenu2, LPCSTR szMenu3, 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: szMenu1
// Param: szMenu2
// Param: szMenu3
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API int DoMenu(LPCSTR szMenu)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: szMenu
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API BOOL DoSingleMenu(LPCSTR szMenu)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: szMenu
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API BOOL IsWindowActive(LPCSTR szWndTitle)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: szWndTitle
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API BOOL WaitMsgBoxText(LPCSTR szExpect, int nSeconds)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: szExpect
// Param: nSeconds
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API LPCSTR GetLabel(UINT id, HWND hwnd /*=NULL*/, BOOL bOkNoExist /*=FALSE*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: id
// Param: hwnd
// Param: bOkNoExist
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API int GetDlgControlClass(HWND hCtl) 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: hCtl
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API HWND ControlOnPropPage(int iCtrlId)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: iCtrlId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API BOOL CALLBACK WGetPageHandle(HWND hChWnd,LPARAM iCtrlId)	  // Can this be a private member??
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: hChWnd
// Param: iCtrlId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API void DayRandSeed(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API int DayRand(int nRange)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: nRange
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API BOOL WaitForWndWithCtrl(INT ID, DWORD dwMillSec /* = 3000*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: ID
// Param: dwMillSec
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API DWORD GetSystem(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: GUI_API int GetPowerOfTwo(int i)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: GUI_API
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: UIDialog::UIDialog( LPCSTR szTitle )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: UIDialog::UIDialog(
// Param: szTitle
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: UIDialog::UIDialog( UINT idCtrl, int nType )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: UIDialog::UIDialog(
// Param: idCtrl
// Param: nType
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDialog::Open(void) const
// Description: Open the dialog. This member function must be overridden in the derived class.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDialog::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDialog::VerifyClass(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDialog::VerifyUnique(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: LPCSTR UIDialog::ExpectedTitle(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: LPCSTR
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIDialog::SetExpectedTitle(LPCSTR szTitle)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: szTitle
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDialog::VerifyTitle(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIDialog::GetDlgItem(UINT id) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: id
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDialog::VerifyDlgItemClass(UINT id, int nClass) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: id
// Param: nClass
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIDialog::OK(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIDialog::Cancel(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIDialog::Close(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIDialog::Help(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIMessageBox::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIMessageBox::GetMessageText(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIMessageBox::ButtonClick(int btn /*=MSG_DEFAULT*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: btn
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIMessageBox::ButtonExists(int btn)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: btn
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIMessageBox::GetActiveButton(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: UIWindow::UIWindow(HWND hwnd)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: UIWindow::UIWindow(HWND
// Param: hwnd
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWindow::operator=(HWND hwnd)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: hwnd
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWindow::Attach(HWND hwnd)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: hwnd
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWindow::Find(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIWindow::OnUpdate(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWindow::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: LPCSTR UIWindow::GetText(LPSTR sz, int cMax) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: LPCSTR
// Param: sz
// Param: cMax
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIWindow::GetText(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWindow::IsActive(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWindow::Activate(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWindow::BlockingActivate(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWindow::HasFocus(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWindow::WaitAttachActive(DWORD dwMilliseconds)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: dwMilliseconds
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWindow::WaitUntilGone(DWORD dwMilliseconds)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: dwMilliseconds
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: bp *COBreakpoints::SetBreakpoint(int line, LPCSTR source, int passcount /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: bp*
// Param: line
// Param: source
// Param: passcount
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: bp *COBreakpoints::SetBreakpoint(LPCSTR function, LPCSTR source, int passcount /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: bp*
// Param: Param The parameter description(s) for this function are not available.
// Param: source
// Param: passcount
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: bp *COBreakpoints::SetBreakpoint(int line, LPCSTR expression, int option, int length, int passcount /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: bp*
// Param: line
// Param: expression
// Param: option
// Param: length
// Param: passcount
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: bp *COBreakpoints::SetBreakpoint(int line, LPCSTR source, LPCSTR expression, int option, int length, int passcount /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: bp*
// Param: line
// Param: source
// Param: expression
// Param: option
// Param: length
// Param: passcount
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: bp *COBreakpoints::SetBreakpoint(LPCSTR function, LPCSTR expression, int option, int length, int passcount /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: bp*
// Param: Param The parameter description(s) for this function are not available.
// Param: expression
// Param: option
// Param: length
// Param: passcount
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: bp *COBreakpoints::SetBreakpoint(LPCSTR function, LPCSTR source, LPCSTR expression, int option, int length, int passcount /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: bp*
// Param: Param The parameter description(s) for this function are not available.
// Param: source
// Param: expression
// Param: option
// Param: length
// Param: passcount
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: bp *COBreakpoints::SetBreakpoint(LPCSTR expression, int option, int length, int passcount /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: bp*
// Param: expression
// Param: option
// Param: length
// Param: passcount
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: bp *COBreakpoints::SetBreakpoint(LPCSTR location /* NULL */, int passcount /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: bp*
// Param: location
// Param: passcount
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: bp *COBreakpoints::SetBreakOnExpr(LPCSTR location, LPCSTR expression, int expr_type, int length /* 1 */, int passcount /* 0 */, BOOL fForceType /* TRUE */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: bp*
// Param: location
// Param: expression
// Param: expr_type
// Param: length
// Param: passcount
// Param: fForceType
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: bp *COBreakpoints::SetBreakOnMsg(LPCSTR location, LPCSTR message, int msg_type, int passcount /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: bp*
// Param: location
// Param: message
// Param: msg_type
// Param: passcount
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: bp *COBreakpoints::SetBreakOnExpr(LPCSTR expression, int expr_type, int length /* 1 */, int passcount /* 0 */, BOOL fForceType /* TRUE */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: bp*
// Param: expression
// Param: expr_type
// Param: length
// Param: passcount
// Param: fForceType
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBreakpoints::EnableBreakpoint(bp *pbp)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: pbp
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBreakpoints::EnableAllBreakpoints(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBreakpoints::DisableBreakpoint(bp *pbp)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: pbp
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBreakpoints::DisableAllBreakpoints(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBreakpoints::RemoveBreakpoint(bp *pbp)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: pbp
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBreakpoints::ClearAllBreakpoints(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL VerifyBreakpointHit(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: bp *COBreakpoints::FailAndClose(void) //close dialog then fail Set Bp operation
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: bp*
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: bp *COBreakpoints::AddBPandClose(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: bp*
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: bp *COBreakpoints::AddBPToList(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: bp*
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COBreakpoints::FindBPIndex(POSITION pos)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: pos
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBrowse::GotoNthDefinition(int index, LPCSTR name,int ambiguity ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: index
// Param: name
// Param: ambiguity
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBrowse::GotoNthReference(int index, LPCSTR name, int ambiguity) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: index
// Param: name
// Param: ambiguity
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBrowse::NextDefinition(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBrowse::PrevDefinition(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBrowse::NextReference(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBrowse::PrevReference(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBrowse::PopContext(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBrowse::GetMatches( CStringArray& matches, CString name, QueryType type, int filter ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: matches
// Param: name
// Param: type
// Param: filter
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBrowse::GetDefinitions( CStringArray& definitions, CString name, QueryType type, int filter, int ambiguity ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: definitions
// Param: name
// Param: type
// Param: filter
// Param: ambiguity
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBrowse::GetReferences( CStringArray& references, CString name, QueryType type, int filter, int ambiguity ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: references
// Param: name
// Param: type
// Param: filter
// Param: ambiguity
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBrowse::GetMembers( CStringArray& members, CString name, QueryType type, int filter, int ambiguity ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: members
// Param: name
// Param: type
// Param: filter
// Param: ambiguity
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBrowse::GetFirstLevelBranches( CStringArray& branches, CString name, QueryType type, int filter, int ambiguity ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: branches
// Param: name
// Param: type
// Param: filter
// Param: ambiguity
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COBrowse::VerifyNavigation(LPCSTR file_line) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: file_line
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString  COCoProcessor::GetCPRegister(int reg)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: reg
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL  COCoProcessor::CPRegisterValueIs(int reg, LPCSTR value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: reg
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COCoProcessor::SetCPRegister(int reg, LPCSTR value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: reg
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CODAM::GotoSymbol(LPCSTR symbol)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: symbol
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CODAM::GotoAddress(int address)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: address
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL  CODAM::InstructionIs(LPCSTR inst)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: inst
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString CODAM::GetInstruction()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CODebug::CODebug() {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CODebug::CODebug()
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::Exec(BOOL (UIWBFrame::*stepfcn)(int), int count, LPCSTR symbol, LPCSTR line, LPCSTR function, int WAIT, int ModeVerify)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: (UIWBFrame::*stepfcn
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::ExecUntilLine(BOOL (UIWBFrame::*stepfcn)(int), LPCSTR line, LPCSTR function, int WAIT)	// REVIEW set limit?
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: (UIWBFrame::*stepfcn
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::ExecUntilFunc(BOOL (UIWBFrame::*stepfcn)(int), LPCSTR function, int WAIT)	//REVIEW: set limit?
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: (UIWBFrame::*stepfcn
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::ExecUntilSymbol(BOOL (UIWBFrame::*stepfcn)(int), LPCSTR symbol, int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: (UIWBFrame::*stepfcn
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::Go(LPCSTR symbol, LPCSTR line /* 0 */, LPCSTR function /* NULL */, int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: symbol
// Param: line
// Param: Param The parameter description(s) for this function are not available.
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::Restart(LPCSTR path /* NULL */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: path
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::StopDebugging(int WAIT)		
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::Break()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::StepInto(int count /* 1 */, LPCSTR symbol /* NULL */, LPCSTR line /* NULL */, LPCSTR function /* NULL */, int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: count
// Param: symbol
// Param: line
// Param: Param The parameter description(s) for this function are not available.
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::StepIntoUntilLine(LPCSTR line, LPCSTR function /* NULL */, int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: line
// Param: Param The parameter description(s) for this function are not available.
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::StepIntoUntilFunc(LPCSTR function /* NULL */, int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: Param The parameter description(s) for this function are not available.
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::StepIntoUntilSymbol(LPCSTR symbol, int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: symbol
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::StepOver(int count /* 1 */, LPCSTR symbol /* NULL */, LPCSTR line /* NULL */, LPCSTR function /* NULL */, int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: count
// Param: symbol
// Param: line
// Param: Param The parameter description(s) for this function are not available.
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::StepOverUntilLine(LPCSTR line, LPCSTR function /* NULL */, int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: line
// Param: Param The parameter description(s) for this function are not available.
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::StepOverUntilFunc(LPCSTR function /* NULL */, int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: Param The parameter description(s) for this function are not available.
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::StepOverUntilSymbol(LPCSTR symbol, int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: symbol
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::StepOut(int count /* 1 */, LPCSTR symbol /* NULL */, LPCSTR line /* NULL */, LPCSTR function /* NULL */, int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: count
// Param: symbol
// Param: line
// Param: Param The parameter description(s) for this function are not available.
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::StepOutUntilLine(LPCSTR line, LPCSTR function /* NULL */, int WAIT)	//REVIEW: set limit?
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: line
// Param: Param The parameter description(s) for this function are not available.
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::StepOutUntilFunc(LPCSTR function /* NULL */, int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: Param The parameter description(s) for this function are not available.
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::StepOutUntilSymbol(LPCSTR symbol, int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: symbol
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::StepToCursor(int linepos /* 0 */, LPCSTR symbol /* NULL */, LPCSTR line /* NULL */, LPCSTR function /* NULL */, int WAIT /*WAIT_FOR_BREAK*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: linepos
// Param: symbol
// Param: line
// Param: Param The parameter description(s) for this function are not available.
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::SetNextStatement(int line /* 0 */)		// REVIEW: check for non-zero line number?
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: line
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::SetNextStatement(LPCSTR line)		//TODO: use UIFind class
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: line
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::ShowNextStatement(void) // effects both source and dam window (moves source to top (focus))
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: DebugState CODebug::GetDebugState(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: DebugState
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::Wait(int option)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: option
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::CurrentLineIs(LPCSTR line)		
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: line
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::VerifyCurrentLine(LPCSTR line)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: line
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::AtSymbol(LPCSTR symbol)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: symbol
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::VerifyAtSymbol(LPCSTR symbol)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: symbol
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::VerifyTermination(int exitcode)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: exitcode
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::VerifyTermination(void)          //any exitcode
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::SetSteppingMode(StepMode mode)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: mode
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: StepMode CODebug::GetSteppingMode(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: StepMode
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::ValidateSteppingMode(StepMode mode)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: mode
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::DoDebuggeeKeys(CString str)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::DoDebuggeeCmd(CString str)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::MyIsActive()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CODebug::SetOwnedStack( COStack* pStack ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: pStack
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::Enable()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::Disable()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::GetExpressionValue(LPCSTR expression, char *value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::GetExpressionValue(LPCSTR expression, unsigned char *value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: char
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::GetExpressionValue(LPCSTR expression, short int *value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::GetExpressionValue(LPCSTR expression, unsigned short int *value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: short
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::GetExpressionValue(LPCSTR expression, int *value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::GetExpressionValue(LPCSTR expression, unsigned int *value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::GetExpressionValue(LPCSTR expression, long int *value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::GetExpressionValue(LPCSTR expression, unsigned long int *value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: long
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::GetExpressionValue(LPCSTR expression, float *value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::GetExpressionValue(LPCSTR expression, double *value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::GetExpressionValue(LPCSTR expression, long double *value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: double
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString COExpEval::ExtractExpressionValue(LPCSTR expression, BOOL bErrorExpected /* FALSE */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: expression
// Param: bErrorExpected
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::SetExpressionValue(LPCSTR expression, char value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::SetExpressionValue(LPCSTR expression, unsigned char value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: char
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::SetExpressionValue(LPCSTR expression, short int value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::SetExpressionValue(LPCSTR expression, unsigned short int value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: short
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::SetExpressionValue(LPCSTR expression, int value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::SetExpressionValue(LPCSTR expression, unsigned int value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::SetExpressionValue(LPCSTR expression, long int value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::SetExpressionValue(LPCSTR expression, unsigned long int value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: long
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::SetExpressionValue(LPCSTR expression, float value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::SetExpressionValue(LPCSTR expression, double value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::SetExpressionValue(LPCSTR expression, long double value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: double
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::SetExpressionValue(LPCSTR expression, LPCSTR value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::ExpressionValueIs(LPCSTR expression, char value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::ExpressionValueIs(LPCSTR expression, unsigned char value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: char
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::ExpressionValueIs(LPCSTR expression, short int value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::ExpressionValueIs(LPCSTR expression, unsigned short int value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: short
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::ExpressionValueIs(LPCSTR expression, int value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::ExpressionValueIs(LPCSTR expression, unsigned int value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::ExpressionValueIs(LPCSTR expression, long int value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::ExpressionValueIs(LPCSTR expression, unsigned long int value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: long
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::ExpressionValueIs(LPCSTR expression, float value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::ExpressionValueIs(LPCSTR expression, double value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::ExpressionValueIs(LPCSTR expression, long double value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: double
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::ExpressionValueIs(LPCSTR expression, LPCSTR value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::ExpressionValueIsTrue(LPCSTR expression)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::ExpressionValueIsFalse(LPCSTR expression)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExpEval::ExpressionErrorIs(LPCSTR expression, LPCSTR value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExceptions::VerifyExceptionHit(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExceptions::VerifyExceptionHit(int code)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: code
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExceptions::SetException(int code, int option)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: code
// Param: option
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString  COExceptions::GetException(int code)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: code
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COExceptions::RestoreDefualts(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::Enable(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::Disable(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::GetMemoryData(int address, char *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::GetMemoryData(int address, unsigned char *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: char
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::GetMemoryData(int address, short int *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: int
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::GetMemoryData(int address, unsigned short int *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: short
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::GetMemoryData(int address, int *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::GetMemoryData(int address, unsigned int *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: int
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::GetMemoryData(int address, long int *data, int count)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: int
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::GetMemoryData(int address, unsigned long int *data, int count)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: long
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::GetMemoryData(int address, float *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::GetMemoryData(int address, double *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::GetMemoryData(int address, long double *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: double
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString COMemory::ExtractMemoryData(MEM_FORMAT format, int address, int count)	//REVIEW: probably needs error checking
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: format
// Param: address
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COMemory::SetMemoryData(LPCSTR symbol, char *data, int count /* 1 */)	//TODO: use big-endian for
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: symbol
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, char *data, int count /* 1 */)	//TODO: use big-endian for
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, unsigned char *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: char
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, short int *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: int
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, unsigned short int *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: short
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COMemory::SetMemoryData(LPCSTR symbol, int *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: symbol
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, int *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, unsigned int *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: int
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, long int *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: int
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, unsigned long int *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: long
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, float *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, double *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, long double *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: double
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COMemory::SetMemoryData(LPCSTR symbol, char data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: symbol
// Param: data
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, char data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, unsigned char data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: char
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, short int data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, unsigned short int data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: short
// Param: data
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COMemory::SetMemoryData(LPCSTR symbol, int data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: symbol
// Param: data
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, int data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, unsigned int data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, long int data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, unsigned long int data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: long
// Param: data
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, float data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, double data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryData(int address, long double data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: double
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::SetMemoryBytes(int address, LPCSTR bytes)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: bytes
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COMemory::SetMemoryBytes(LPCSTR symbol, LPCSTR bytes)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: symbol
// Param: bytes
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, char *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, unsigned char *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: char
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, short int *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: int
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, unsigned short int *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: short
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, int *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, unsigned int *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: int
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, long int *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: int
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, unsigned long int *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: long
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, float *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, double *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// Param: count
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, long double *data, int count /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: double
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, char data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, unsigned char data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: char
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, short int data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, unsigned short int data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: short
// Param: data
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, int data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, unsigned int data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, long int data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: int
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, unsigned long int data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: long
// Param: data
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, float data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, double data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: data
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COMemory::MemoryDataIs(int address, long double data)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// Param: double
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  CORegisters::GetRegister(int reg)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: reg
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL  CORegisters::RegisterValueIs(int reg, int value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: reg
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL CORegisters::SetRegister(int reg, LPCSTR value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: reg
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: COStack::COStack( CODebug* owner ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: COStack::COStack(
// Param: owner
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COStack::NavigateStack( CString str ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COStack::Index( CString str ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COStack::CurrentFunctionIs(LPCSTR str) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COStack::VerifyCurrentFunction(LPCSTR str) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString COStack::GetFunction(int level /* 0 */)	{
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: level
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString COStack::GetAllFunctions(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COStack::NavigateStack(int level /* 0 */) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: level
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COStack::FunctionIs(LPCSTR str, int level /* 0 */) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// Param: level
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COStack::Compare( char const * const * stk, FrameList::Filter filter, int top, int bottom ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: const
// Param: const
// Param: stk
// Param: filter
// Param: top
// Param: bottom
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: FrameList::FrameList() {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: FrameList::FrameList()
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: FrameList::FrameList(char const* const* ppchar)   {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: FrameList::FrameList(char
// Param: const*
// Param: ppchar
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL FrameList::CreateFromText( CString str ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int FrameList::Index( CString frame0 ) const {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: frame0
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL FrameList::Compare( char const * const * stk, Filter filter, int top, int bottom ) const {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: const
// Param: const
// Param: stk
// Param: filter
// Param: top
// Param: bottom
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL FrameList::GeneralIntegrity() const {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL Frame::GetAbsoluteAddress( CString& str ) const {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL Frame::GetFunctionName( CString& str ) const {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL Frame::GetImageName( CString& str ) const {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL Frame::GetLineNumber( CString& str ) const {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL Frame::GetByteOffset( CString& str ) const {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL Frame::GetParameters( CString& str ) const {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL Frame::GetParameterType( CString& str, int index ) const {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// Param: index
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL Frame::GetParameterValue( CString& str, int index ) const {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// Param: index
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL Frame::Test( CString str ) const {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COStack::IsDirty() const {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COThreads::FreezeThread(int thread)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: thread
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COThreads::ThawThread(int thread)			
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: thread
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COThreads::SetCurrentThread(int thread)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: thread
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: INT  COThreads::GetCurrentThread(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: INT
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COThreads::CurrentThreadIs(int thread)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: thread
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBreakpoints::Activate(void)
// Description: Open the Breakpoints dialog.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBreakpoints::SetLocation(LPCSTR location)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: location
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBreakpoints::SetExpression(LPCSTR expression, int expr_type, BOOL fForceType /* TRUE */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expression
// Param: expr_type
// Param: fForceType
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBreakpoints::SetLength(LPCSTR length)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: length
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBreakpoints::SetPassCount(LPCSTR passcount)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: passcount
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBreakpoints::SetWndProc(LPCSTR location)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: location
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBreakpoints::SetMessage(LPCSTR message, int type)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: message
// Param: type
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBreakpoints::SetCurrentBreakpoint(int bp /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: bp
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBreakpoints::Remove(int bp /* 0 */)	
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: bp
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBreakpoints::Enable(int bp /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: bp
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBreakpoints::Disable(int bp /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: bp
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBreakpoints::ClearAll()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBreakpoints::BreakpointIsSet(LPCSTR expr, LPCSTR source /* NULL */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expr
// Param: source
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBreakpoints::BreakpointIsEnabled(LPCSTR expr, LPCSTR source /* NULL */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: expr
// Param: source
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIBreakpoints::GetCount(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIBreakpoints::GetBreakpointStr(int bp /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: bp
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIBreakpoints::Close(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: static BOOL FillStringArrayFromClipBrd( CStringArray& lines ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: static
// Param: lines
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIBrowse::OnUpdate(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::IsValid(void) const {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::Find(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::IsActive(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::Query(QueryType query, LPCSTR name /*NULL*/, int filters /*NONE*/) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: query
// Param: name
// Param: filters
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: static void SetFilterButton( UIBrowse* pBrowse, LPCTSTR szButtonName, BOOL bDown ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: static
// Param: pBrowse
// Param: szButtonName
// Param: bDown
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::SetFilters(QueryType type, int filters) {  		// set filters based on current type
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: type
// Param: filters
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  UIBrowse::GetFilters(QueryType type) {         		// get filters based on current type
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: type
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::PopContext(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::FirstDefinition(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::NextDefinition(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::PrevDefinition(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::FirstReference(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::NextReference(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::PrevReference(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::GotoPane(PaneType pane, QueryType type) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: pane
// Param: type
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::GotoDefinitionsHeading(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::GotoReferencesHeading(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::ExpandCurrentItem(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIBrowse::GetCurrentItem(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::Navigate(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::SelectNthItem(QueryType type, int item) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: type
// Param: item
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::CrackFileLine(LPCSTR file_line,CHAR *file,int *line) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: file_line
// Param: file
// Param: line
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIBrowse::ButtonDown(const char *button) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: char
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIBrowse::ButtonUp(const char *button) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: char
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::IsButtonDown(const char *button) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: char
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::CloseBrowser(void) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::GetMatches( CStringArray& matches ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: matches
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::SelectMatch( CString name ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: name
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::SelectMatch( int index ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: index
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::GetMembers( CStringArray& members ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: members
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::SelectMember( CString member ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: member
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::SelectMember( int index ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: index
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::GetLocations( CStringArray& locations ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: locations
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::GetFirstLevelBranches( CStringArray& branches ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: branches
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::SelectDefinition( CString definition ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: definition
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::SelectDefinition( int index ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: index
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::SelectReference( CString reference ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: reference
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::SelectReference( int index ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: index
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::GetAmbiguities( CStringArray& ambiguities ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: ambiguities
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::GetCurrentAmbiguity( CString& symbol ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: symbol
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::SelectAmbiguity( CString symbol ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: symbol
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::SelectAmbiguity( int index ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: index
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIBrowse::CancelAmbiguity() {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: UIAmbiguiousSymbolDialog::UIAmbiguiousSymbolDialog() : 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: UIAmbiguiousSymbolDialog::UIAmbiguiousSymbolDialog()
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIAmbiguiousSymbolDialog::GetAmbiguities( CStringArray& ambiguities ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: ambiguities
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIAmbiguiousSymbolDialog::GetCurrentAmbiguity( CString& symbol ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: symbol
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIAmbiguiousSymbolDialog::SelectAmbiguity( CString symbol ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: symbol
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIAmbiguiousSymbolDialog::SelectAmbiguity( int index ) {
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: index
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIAmbiguiousSymbolDialog::Cancel(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString  UICoProcessor::GetCPRegister(int reg)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: reg
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UICoProcessor::SetCPRegister(int reg, LPCSTR value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: reg
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UICoProcessor::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UICoProcessor::AttachActive(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UICoProcessor::Find(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UICoProcessor::IsActive(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDAM::GotoSymbol(LPCSTR symbol)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: symbol
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDAM::GotoAddress(int address)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: address
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIDAM::GetInstruction(int offset /* 0 */, int range /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: offset
// Param: range
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDAM::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDAM::AttachActive(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDAM::Find(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDAM::IsActive(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDAM::Activate(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIDebug::ShowDockWindow(UINT id, BOOL bShow /*=TRUE*/)
// Description: Open the docking window with the given id.
// Return: The HWND of the opened window. NULL if the function fails.
// Param: id The id of the docking window to open (IDW_OUTPUT_WIN, IDW_WATCH_WIN, IDW_LOCALS_WIN, IDW_CPU_WIN, IDW_MEMORY_WIN, IDW_CALLS_WIN, IDW_DISASSY_WIN).
// Param: bShow TRUE to show the window; FALSE to hide it (default is TRUE).
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIEEWindow::GetState(int row /* ROW_CURRENT */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: row
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIEEWindow::GetType(int row /* ROW_CURRENT */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: row
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIEEWindow::GetName(int row /* ROW_CURRENT */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: row
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIEEWindow::GetValue(int row /* ROW_CURRENT */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: row
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIEEWindow::GetAllFields(EXPR_INFO* expr_info, 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: expr_info
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIEEWindow::SelectRows(int start_row /* ROW_CURRENT */, 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: start_row
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIEEWindow::Expand(int row /* ROW_CURRENT */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: row
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIEEWindow::Collapse(int row /* ROW_CURRENT */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: row
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIEEWindow::SetPane(int pane)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: pane
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIExceptions::Activate(void)
// Description: Open the Exceptions dialog.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIExceptions::ExcptToString(int excpt)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: excpt
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIExceptions::SetNumber(int code)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: code
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIExceptions::SetName(LPCSTR name)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: name
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIExceptions::SetOption(int option)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: option
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIExceptions::AddException(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIExceptions::ChangeException(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIExceptions::RestoreDefualts(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIExceptions::SetException(int code, int option)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: code
// Param: option
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIExceptions::DeleteException(int code)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: code
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString  UIExceptions::GetException(int code)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: code
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UILocals::Activate(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIMemory::AttachActive(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIMemory::Find(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIMemory::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIMemory::IsActive(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIMemory::GetCurrentAddress(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIMemory::GetCurrentData(int count /* 1 */, int start /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: count
// Param: start
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIMemory::GetCurrentChars(int count /* 1 */, int start /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: count
// Param: start
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIMemory::SetCurrentData(LPCSTR data, int start /* 0 */)		// TODO: handle data overlapping to next line
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: data
// Param: start
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIMemory::SetCurrentChars(LPCSTR chars, int start /* 0 */)		// TODO: handle chars overlapping to next line
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: chars
// Param: start
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIMemory::SetCurrentChars(char chr, int start /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: chr
// Param: start
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIMemory::GetFormatWidth(int format /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: format
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIMemory::Activate(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIMemory::GoToAddress(LPCSTR symbol)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: symbol
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIQuickWatch::Activate(void)
// Description: Open the QuickWatch dialog.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIQuickWatch::GetCurrentValue(void) 
// Description: Returns the value of the current expression
// Return: CString contaning the current value
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIQuickWatch::GetExpression(void) 
// Description: Returns the current expression
// Return: CString contaning the current expression
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIQuickWatch::SetExpression(LPCSTR exp)
// Description: Sets a new expression for the Quickwatch dialog, note does not do a "recalc"
// Return: BOOL
// Param: exp
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIQuickWatch::SetNewValue(LPCSTR value) 
// Description: Modifies the value for the current expression 
// Return: BOOL
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIQuickWatch::Recalc(void)
// Description: Recalcs the expression in the expression field.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIQuickWatch::AddWatch(void)
// Description: Adds the current expression in the Quick Watch Dialog to the Watch window.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIQuickWatch::Close(void)
// Description: Close the QuickWatch Dailog
// Return: HWND: NULL means all went well, otherwise return HWND of active window (alert)
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  UIRegisters::GetRegister(int reg)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: reg
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIRegisters::SetRegister(int reg, LPCSTR value)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: reg
// Param: value
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIRegisters::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIRegisters::AttachActive(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIRegisters::Find(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIRegisters::IsActive(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIRegisters::Activate(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIStack::GetFunction(int level /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: level
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIStack::GetAllFunctions(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIStack::NavigateStack(int level /* 0 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: level
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIStack::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIStack::AttachActive(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIStack::Find(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIStack::IsActive(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIStack::Activate(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIThreads::Activate(void)
// Description: Open the Threads dialog.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIThreads::ThreadToString(int thread)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: thread
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIThreads::FreezeThread(int thread)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: thread
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIThreads::ThawThread(int thread)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: thread
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIThreads::SetCurrentThread(int thread)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: thread
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: INT  UIThreads::GetCurrentThread(void)   //assumes first item in listbox is current thread.
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: INT
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIVariables::Activate(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIVariables::SetValue(LPCSTR value, int row /* ROW_CURRENT */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: value
// Param: row
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIVariables::Locals(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWatch::Activate(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIWatch::SetName(LPCSTR name, int row /* ROW_CURRENT */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: name
// Param: row
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIWatch::SetValue(LPCSTR value, int row /* ROW_CURRENT */,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: value
// Param: row
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIWatch::Delete(int start_row /* ROW_CURRENT */, int total_rows /* 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: start_row
// Param: total_rows
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COFile::Create(UINT idsType, LPCSTR szSaveAs /*=NULL*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: idsType
// Param: szSaveAs
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COFile::Open(LPCSTR szFileName, LPCSTR szChDir /*=NULL*/, EOpenAs oa /*=OA_AUTO*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szFileName
// Param: szChDir
// Param: oa
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COFile::Save(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COFile::SaveAs(LPCSTR szFileName, BOOL bOverWrite /*=FALSE*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szFileName
// Param: bOverWrite
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COFile::Close(BOOL bSaveChanges /* = FALSE */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: bSaveChanges
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: LPCSTR COFile::GetFileName(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: LPCSTR
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: LPCSTR COFile::Cut(CString* pstr /*=NULL*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: LPCSTR
// Param: pstr
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: LPCSTR COFile::Copy(CString* pstr /*=NULL*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: LPCSTR
// Param: pstr
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void COFile::Paste(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void COFile::Delete(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void COFile::Undo(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void COFile::Redo(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COResScript::Create(LPCSTR szSaveAs /*=NULL*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szSaveAs
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COResScript::Open(LPCSTR szFileName, LPCSTR szChDir /*=NULL*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szFileName
// Param: szChDir
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COResScript::CreateResource( UINT idResType )	   // This one uses the string table
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: idResType
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COResScript::CreateResource( LPCSTR szResName )		// This one is generally used for custom resource types
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szResName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COSource::Create(LPCSTR szSaveAs /*=NULL*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szSaveAs
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COSource::Open(LPCSTR szFileName, LPCSTR szChDir /*=NULL*/, EOpenAs oa /*=OA_AUTO*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szFileName
// Param: szChDir
// Param: oa
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COSource::GetReadOnly(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COSource::GetCurrentLine(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COSource::GetCurrentColumn(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString COSource::GetSelectedText(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void COSource::SelectText(int line1, int column1, int line2, int column2, BOOL bColumnSelect /*=SELECT_NORMAL*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: line1
// Param: column1
// Param: line2
// Param: column2
// Param: bColumnSelect
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void COSource::SetCursor(int line, int column)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: line
// Param: column
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void COSource::InsertText(LPCSTR szText, int line, int column, BOOL bLiteral /*=FALSE*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: szText
// Param: line
// Param: column
// Param: bLiteral
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void COSource::TypeTextAtCursor(LPCSTR szText, BOOL bLiteral /*=FALSE*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: szText
// Param: bLiteral
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COSource::GoToLine(LPCSTR szLine)
// Description: Go to the given line in the current source editor.
// Return: BOOL
// Param: szLine A string containing the line number to go to.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COSource::GoToLine(int nLine)
// Description: Go to the given line in the current source editor.
// Return: BOOL
// Param: nLine An integer containing the line number to go to.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COSource::Find(LPCSTR szFind, BOOL bMatchWord /*= FALSE*/, BOOL bMatchCase /*= FALSE*/, BOOL bRegExpr /*= FALSE*/, COSource::FindDirection fd /*= FD_DOWN*/)
// Description: Find the given string (szFind) in this source editor window.
// Return: BOOL
// Param: szFind The string to find in this window.
// Param: bMatchWord Set to TRUE to only find whole words. Default value is FALSE.
// Param: bMatchCase Set to TRUE to turn on case sensitivity. Default value is FALSE.
// Param: bRegExpr Set to TRUE if the string in szFind is a regular expression. Default value is FALSE.
// Param: fd Set to FD_DOWN to search toward the end of the file; FD_UP to search toward the top of the file. Default value is FD_DOWN.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COSource::Replace(LPCSTR szFind, LPCSTR szReplace, BOOL bMatchWord /*= FALSE*/, BOOL bMatchCase /*= FALSE*/, BOOL bRegExpr /*= FALSE*/, COSource::ReplaceScope rs /*= RS_WHOLEFILE*/)
// Description: Find (szFind) and replace (szReplace) in this source editor window.
// Return: BOOL
// Param: szFind The string to find in this window.
// Param: szReplace The string to replace the found string with in this window.
// Param: bMatchWord Set to TRUE to only find whole words. Default value is FALSE.
// Param: bMatchCase Set to TRUE to turn on case sensitivity. Default value is FALSE.
// Param: bRegExpr Set to TRUE if the string in szFind is a regular expression. Default value is FALSE.
// Param: rs Set to RS_WHOLEFILE to search and replace across the entire file; RS_SELECTION to search and replace within the selection. Default value is RS_WHOLEFILE.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COSource::SelectEmulations(EmulationType eEM)
// Description: Select Editor to emulate from Tools.Options.Compatibility
// Return: BOOL
// Param: eEM
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIAccEdit::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIAccEdit::AddAccel(LPCSTR szChar, LPCSTR  szId /*=NULL*/, DWORD dwKeyMods /*=0x0*/, BOOL bNextKeyType /*=FALSE*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szChar
// Param: szId
// Param: dwKeyMods
// Param: bNextKeyType
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIAccEdit::EditAccel(LPCSTR szChar /*=NULL*/, LPCSTR  szId /*=NULL*/, DWORD dwKeyMods /*=0x0*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: szChar
// Param: szId
// Param: dwKeyMods
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIAccEdit::FindAccel(LPCSTR sz /*=NULL*/, LPCSTR szId /*=0*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: sz
// Param: szId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIAccEdit::GetKey(int line /*=-1*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: line
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: DWORD UIAccEdit::GetKeyMods(int line /*=-1*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: DWORD
// Param: line
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDlgEdit::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIDlgEdit::OnUpdate(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDlgEdit::DropControl(int nControl, int cX, int cY )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: nControl
// Param: cX
// Param: cY
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIEditor::AttachActive(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIEditor::IsActive(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIEditor::Activate(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIEditor::GetTitle(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIEditor::Close(BOOL bLoseChanges /*=TRUE*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: bLoseChanges
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIFindInFilesDlg::AddFile(LPCSTR szFile)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: szFile
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIFindInFilesDlg::FindWhat(LPCSTR szFind)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: szFind
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIFindInFilesDlg::DoFind(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIFindDlg::Activate(void)
// Description: Open the Find dialog.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIFindDlg::Close(void)
// Description: Close the Find dialog.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIFindDlg::SetFindString(LPCSTR szFind)
// Description: Enter the text given in szFind in the Find What edit box in the Find dialog.
// Return: BOOL
// Param: szFind The string to enter in the Find What edit box in the Find dialog.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIFindDlg::SetMatchWord(BOOL bMatchWord /*= FALSE*/)
// Description: Check or uncheck the Match Whole Word Only checkbox based on the value of bMatchWord.
// Return: BOOL
// Param: bMatchWord If TRUE, check the Match Whole Word Only checkbox; if FALSE, uncheck it. Default value is FALSE.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIFindDlg::SetMatchCase(BOOL bMatchCase /*= FALSE*/)
// Description: Check or uncheck the Match Case checkbox based on the value of bMatchCase.
// Return: BOOL
// Param: bMatchCase If TRUE, check the Match Case checkbox; if FALSE, uncheck it. Default value is FALSE.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIFindDlg::SetRegularExpression(BOOL bRegExpr)
// Description: Check or uncheck the Regular Expression checkbox based on the value of bRegExpr.
// Return: BOOL
// Param: bRegExpr If TRUE, check the Regular Expression checkbox; if FALSE, uncheck it. Default value is FALSE.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIFindDlg::SetDirection(UIFindDlg::FindDirection fd /*= FD_DOWN*/)
// Description: Set the find direction in the Find dialog box.
// Return: BOOL
// Param: fd If FD_UP, set find direction to Up; if FD_DOWN, set find direction to Down. Default value is FD_DOWN.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIFindDlg::FindNext(void)
// Description: Perform the find operation by clicking the Find Next button in the Find dialog.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIFindDlg::SetBookmarks(void)
// Description: Perform the set bookmarks operation by clicking on the Set Bookmarks on All button in the Find dialog.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIReplaceDlg::Activate(void)
// Description: Open the Replace dialog.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIReplaceDlg::Close(void)
// Description: Close the Replace dialog.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIReplaceDlg::SetFindString(LPCSTR szFind)
// Description: Enter the text given in szFind in the Find What edit box in the Replace dialog.
// Return: BOOL
// Param: szFind The string to enter in the Find What edit box in the Replace dialog.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIReplaceDlg::SetReplaceString(LPCSTR szReplace)
// Description: Enter the text given in szReplace in the Replace With edit box in the Replace dialog.
// Return: BOOL
// Param: szReplace The string to enter in the Replace With edit box in the Replace dialog.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIReplaceDlg::SetMatchWord(BOOL bMatchWord /*= FALSE*/)
// Description: Check or uncheck the Match Whole Word Only checkbox based on the value of bMatchWord.
// Return: BOOL
// Param: bMatchWord If TRUE, check the Match Whole Word Only checkbox; if FALSE, uncheck it. Default value is FALSE.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIReplaceDlg::SetMatchCase(BOOL bMatchCase /*= FALSE*/)
// Description: Check or uncheck the Match Case checkbox based on the value of bMatchCase.
// Return: BOOL
// Param: bMatchCase If TRUE, check the Match Case checkbox; if FALSE, uncheck it. Default value is FALSE.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIReplaceDlg::SetRegularExpression(BOOL bRegExpr)
// Description: Check or uncheck the Regular Expression checkbox based on the value of bRegExpr.
// Return: BOOL
// Param: bRegExpr If TRUE, check the Regular Expression checkbox; if FALSE, uncheck it. Default value is FALSE.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIReplaceDlg::SetReplaceScope(UIReplaceDlg::ReplaceScope rs)
// Description: Set the replace scope in the Replace dialog box.
// Return: BOOL
// Param: rs
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIReplaceDlg::FindNext(void)
// Description: Perform the find operation by clicking the Find Next button in the Replace dialog.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIReplaceDlg::Replace(void)
// Description: Perform the replace operation by clicking the Replace button in the Replace dialog.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIReplaceDlg::ReplaceAll(void)
// Description: Perform the replace all operation by clicking the Replace All button in the Replace dialog.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIImgEdit::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIImgEdit::ClickInGraphTB ( int nButton, int cX, int cY )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: nButton
// Param: cX
// Param: cY
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIImgEdit::ClickImgTool ( int nImgTool )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: nImgTool
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIImgEdit::ClickColorMode( int nColor, int  nButton)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: nColor
// Param: nButton
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void  UIImgEdit::SetColor(int nColor, int nButton /* VK_LBUTTON */)   //REVIEW: Use CM_FOREGROUND or CM_BACKGROUND instead of button constants.
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: nColor
// Param: nButton
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIImgEdit::GetPane(int nPane)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: nPane
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIImgEdit::ClickMouse(int nButton, int nPane, int cX, int cY, int nMag /*=1*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: nButton
// Param: nPane
// Param: cX
// Param: cY
// Param: nMag
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIImgEdit::DragMouse(int nButton, int nPane, int cX1, int cY1, int cX2, int cY2, int nMag /*=1*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: nButton
// Param: nPane
// Param: cX1
// Param: cY1
// Param: cX2
// Param: cY2
// Param: nMag
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIImgEdit::FontDialog(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIImgEdit::SetFont(LPCSTR szFontName /*=NULL*/, int nSize /*=-1*/, int nStyle /*=-1*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: szFontName
// Param: nSize
// Param: nStyle
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIImgEdit::IsStandalone(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIImgEdit::GetEditorType(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIMenEdit::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIMenEdit::GetMenuBar(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIResBrowser::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIResBrowser::SelectFolder(int nFolder)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: nFolder
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIResBrowser::SelectFolder(LPCSTR szFolder)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szFolder
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIResBrowser::OpenFolder(int nOpen)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: nOpen
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIResBrowser::FindResource(LPCSTR szId, int nFolder)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szId
// Param: nFolder
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIResBrowser::FindResource(LPCSTR szId, LPCSTR szFolder /*=NULL*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szId
// Param: szFolder
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIResEditor::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIResEditor::IsValidType(LPCSTR szType) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: szType
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIResEditor::ExportResource(LPCSTR szFileName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: szFileName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIResTableEditor::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIResTableEditor::OnUpdate(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIResTableEditor::SelectLine(int line, BOOL bMulti /*=FALSE*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: line
// Param: bMulti
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIResTableEditor::GetCaption(int line /*=-1*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: line
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIResTableEditor::GetId(int line /*=-1*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: line
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIResTableEditor::GetCurLine(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIResTableEditor::GetLineCount(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIStrEdit::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIStrEdit::AddString(LPCSTR szCaption, LPCSTR szId /*=NULL*/, BOOL bIdFirst /*=FALSE*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szCaption
// Param: szId
// Param: bIdFirst
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIStrEdit::EditString(LPCSTR szCaption /*=NULL*/, LPCSTR szId /*=NULL*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: szCaption
// Param: szId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIStrEdit::FindString(LPCSTR szCaption /*=NULL*/, LPCSTR szId /*=0*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: szCaption
// Param: szId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIStrEdit::GetString(int line /*=-1*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: line
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UISymbolBrowser::CountSymbols(BOOL bReadOnly)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: bReadOnly
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIVerEdit::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::SelectDependenciesGroup(CString Group /* = ""*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Group
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::SelectDependentFile(CString File,CString Group /* = ""*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: File
// Param: Group
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::NewGroup(CString Name)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Name
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COProject::ActivateProjWnd()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::UpdateDependencies(int All/* = 1*/)      //USE ALL = 0 FOR UPDATING FILE DEPENDENCES ONLY
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: All
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::Close(int iSave)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iSave
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::GetErrorCount()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::GetWarningCount()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::VerifyBuild(BOOL LogErrors, int * iErr, int * iWarn,  BOOL WrnsAsErrs /*= FALSE*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: LogErrors
// Param: Param The parameter description(s) for this function are not available.
// Param: int
// Param: iWarn
// Param: WrnsAsErrs
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::WaitUntilBuildDone(int Min)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Min
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::New(PROJOPTIONS &ProjOpts)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: &ProjOpts
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::New(LPCSTR szProjName, int ProjType,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szProjName
// Param: ProjType
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::BuildNew(LPCSTR szProjName, int ProjType,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szProjName
// Param: ProjType
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::NewAppWiz(APPWZOPTIONS &AppWizOpts)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: &AppWizOpts
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::NewAppWiz(LPCSTR projname, LPCSTR projdir, int platform)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: projname
// Param: projdir
// Param: platform
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::Open(LPCSTR szProjName, int iMethod, BOOL LogWarning /* = TRUE */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szProjName
// Param: iMethod
// Param: LogWarning
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::Save(int wait /* FALSE */, LPCSTR file /* NULL */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: wait
// Param: file
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::AddFiles(LPCSTR szFileName, LPCSTR szGrpName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szFileName
// Param: szGrpName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::RemoveFiles(LPCSTR szFileNames, LPCSTR szGrpName )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szFileNames
// Param: szGrpName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::RemoveAll(LPCSTR szGrpName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szGrpName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::DeleteMakeFile()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::DeleteFromProjectDir(LPCSTR strDelTarget)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: strDelTarget
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::RemoveIntermediateDir()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::RemoveTargetDir()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::AddTarget(LPCSTR Name, int Type , BOOL Debug/* =FALSE*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Name
// Param: Type
// Param: Debug
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::AddTarget(LPCSTR Name, LPCSTR CopyFrom)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Name
// Param: CopyFrom
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::SetTarget(LPCSTR Target)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Target
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::DeleteTarget(LPCSTR Target)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Target
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::RenameTarget(LPCSTR OldName, LPCSTR NewName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: OldName
// Param: NewName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: LPCSTR COProject::GetTarget(int Target /* = 0 Active target */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: LPCSTR
// Param: Target
// Param: target
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: COProject::Execute(int iRebuild)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: COProject::Execute(int
// Param: iRebuild
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::Build(int iWait)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iWait
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::RebuildAll(int iWait)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iWait
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::StopBuild()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString COProject::GetProjectItemProp(int P_PropID)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: P_PropID
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::SelectFile(LPCSTR szFile, LPCSTR szGrp)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szFile
// Param: szGrp
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::SelectGroup(LPCSTR szGrpName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szGrpName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::SetProjProperty(PROJ_PROP_CATEGORIES iCategory,UINT iCtrlId, UINT iNewValue )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iCategory
// Param: iCtrlId
// Param: iNewValue
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::SetProjProperty(PROJ_PROP_CATEGORIES iCategory,UINT iCtrlId, LPCSTR szNewValue )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iCategory
// Param: iCtrlId
// Param: szNewValue
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::GetProjProperty(PROJ_PROP_CATEGORIES iCategory,UINT iCtrlId,CString szValue)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iCategory
// Param: iCtrlId
// Param: szValue
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString COProject::GetProjProperty(PROJ_PROP_CATEGORIES iCategory,UINT iCtrlId)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: iCategory
// Param: iCtrlId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  COProject::GetGroupProperty(PROJ_PROP_CATEGORIES  iCategory,LPCSTR szGrpName ,UINT iCtrlId)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iCategory
// Param: szGrpName
// Param: iCtrlId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString COProject::GetGroupProperty(PROJ_PROP_CATEGORIES  iCategory,LPCSTR szGrpName ,UINT iCtrlId,CString szValue)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: iCategory
// Param: szGrpName
// Param: iCtrlId
// Param: szValue
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::SetGroupProperty(PROJ_PROP_CATEGORIES  iCategory,LPCSTR szGrpName ,UINT iCtrlId, UINT iNewValue )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iCategory
// Param: szGrpName
// Param: iCtrlId
// Param: iNewValue
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::SetGroupProperty(PROJ_PROP_CATEGORIES  iCategory,LPCSTR szGrpName ,UINT iCtrlId, LPCSTR szNewValue )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iCategory
// Param: szGrpName
// Param: iCtrlId
// Param: szNewValue
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::GetFileProperty(PROJ_PROP_CATEGORIES iCategory,LPCSTR szGrpName ,LPCSTR szFileName,UINT iCtrlId)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iCategory
// Param: szGrpName
// Param: szFileName
// Param: iCtrlId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString COProject::GetFileProperty(PROJ_PROP_CATEGORIES iCategory,LPCSTR szGrpName ,LPCSTR szFileName,UINT iCtrlId,CString szValue)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: iCategory
// Param: szGrpName
// Param: szFileName
// Param: iCtrlId
// Param: szValue
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::SetFileProperty(PROJ_PROP_CATEGORIES iCategory,LPCSTR szGrpName, LPCSTR szFileName ,UINT iCtrlId, UINT iNewValue )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iCategory
// Param: szGrpName
// Param: szFileName
// Param: iCtrlId
// Param: iNewValue
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::SetFileProperty(PROJ_PROP_CATEGORIES iCategory,LPCSTR szGrpName, LPCSTR szFileName ,UINT iCtrlId, LPCSTR szNewValue )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iCategory
// Param: szGrpName
// Param: szFileName
// Param: iCtrlId
// Param: szNewValue
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::SetOption(INT iCategory,UINT iCtrlId, LPCSTR szNewValue)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iCategory
// Param: iCtrlId
// Param: szNewValue
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: INT COProject::SetOption(INT iCategory, UINT iCtrlId, UINT iNewValue)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: INT
// Param: iCategory
// Param: iCtrlId
// Param: iNewValue
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString MyGetLabel(UINT id)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: id
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::MakeProjectExternal(LPCSTR sName/* =NULL*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: sName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void COProject::SetPathMembers()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::SetPlatform(int platform)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: platform
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::SetRemotePath(LPCSTR remote_file,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: remote_file
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::SetAdditionalDLLs(LPCSTR szDLLs)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szDLLs
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString COProject::GetRemoteTarget(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::SetBuildCommand(LPCSTR command)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: command
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int ExecuteShellCMD(char *cmd, ...) {                   // Args should be char*, last one=NULL!
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: cmd
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::UpdateRemoteFile(LPCSTR local_file /* NULL */,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: local_file
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::SetLocalTarget(LPCSTR localfile)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: localfile
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COProject::SetOutputTarget(LPCSTR outfile)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: outfile
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: // this function is taken directly from uwbframe.cpp because it does not belong there
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: The return value description for this function is not available.
// Param: Param The parameter description(s) for this function are not available.
// Param: taken
// Param: from
// Param: because
// Param: does
// Param: belong
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: // this function is taken directly from uwbframe.cpp because it does not belong there
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: The return value description for this function is not available.
// Param: Param The parameter description(s) for this function are not available.
// Param: taken
// Param: from
// Param: because
// Param: does
// Param: belong
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UISqlDataSources::Display(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int  UISqlDataSources::Name(CString ds) 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: ds
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UISqlDataSources::Close(int OK /* = 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: OK
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UISqlServerLogIn::ID(CString ID)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: ID
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UISqlServerLogIn::Pw(CString pw)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: pw
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UISqlServerLogIn::Close(int OK/* = 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: OK
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UISelectTables::Name(CString tbName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: tbName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UISelectTables::Name(int index /*= 1*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: index
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UISelectTables::Close(int OK /* = 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: OK
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UISelectRecordSet::Close(int OK /* = 1*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: OK
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: UIDataBaseDlgs *UISelectRecordSet::New() 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: UIDataBaseDlgs*
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIDataBaseDlgs::WaitForSources() 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIDataBaseDlgs::WaitForLogin() 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIDataBaseDlgs::WaitForTables()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIAppWizard::GetPage(HWND hwnd /*=NULL*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: hwnd
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIAppWizard::ExpectPage(int nPage)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: nPage
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: LPCSTR UIAppWizard::ExpectedTitle(int nPage) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: LPCSTR
// Param: nPage
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIAppWizard::Create(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIAppWizard::SetAppType(UINT id)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: id
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIAppWizard::SetDBOptions(UINT id)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: id
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIAppWizard::SetOLEOptions(UINT id)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: id
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIAppWizard::SetProjOptions(UINT id)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: id
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIAppWizard::SelectClass(int n)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIAppWizard::SelectClass(LPCSTR sz)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: sz
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIAppWizard::GetClassName(void)		// AACK! This is the same name as a Windows API
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIAppWizard::GetBaseClass(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIAppWizard::GetSourceFile(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIAppWizard::GetHeaderFile(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIClassWizard::Display() 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIClassWizard::Close() 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIClassWizard::AddFunction(int ClassIndex, int FuncIndex, int ObjectIndex)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: ClassIndex
// Param: FuncIndex
// Param: ObjectIndex
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIClassWizard::AddClass(int TypeIndex,CString Name,  CString DotH, CString DotCPP) 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: TypeIndex
// Param: Name
// Param: DotH
// Param: DotCPP
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIClassWizard::EditCode()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIClassWizard::GetClassFile()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIClassWizard::GetActiveClass()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIAddClassDlg::Show()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIAddClassDlg::SetType(int Type) 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Type
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIAddClassDlg::SetName(CString Name)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Name
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIAddClassDlg::SetHeader(CString DotH)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: DotH
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIAddClassDlg::SetCPP(CString DotCPP)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: DotCPP
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIAddClassDlg::Create()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIAddClassDlg::CheckOle()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIAddClassDlg::CheckOleCreateable(CString ExtName) 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: ExtName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIAddClassDlg::CheckAddToGallery(BOOL bCheck /*= TRUE */)
// Description: Checks or unchecks the Add To Object Gallery check box.
// Return: int
// Param: If bCheck is TRUE it makes sure the check box is check. Otherwise it uncheck it if necessary.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIAddClassDlg::AttachDlgID(int index /*= 1 */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: index
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIAddClassDlg::AttachDlgID(CString Name) 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Name
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIProjectTarget::New(LPCSTR Name, int Type, BOOL Debug)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Name
// Param: Type
// Param: Debug
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIProjectTarget::New(LPCSTR Name, LPCSTR Target)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Name
// Param: Target
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIProjectTarget::Delete(LPCSTR DelName) 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: DelName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIProjectTarget::Rename(LPCSTR OldName, LPCSTR NewName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: OldName
// Param: NewName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIProjectTarget::Select(LPCSTR SelName, BOOL LogWarning/* = TRUE */) 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: SelName
// Param: LogWarning
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIProjectTarget::Show()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIProjectTarget::Close()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIProjectTarget::SetTarget(LPCSTR Target) 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: Target
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: LPCSTR UIProjectTarget::GetTarget(int Index /* = 0*/) 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: LPCSTR
// Param: Index
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIProjectFiles::AddFile(LPCSTR szFileName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: szFileName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIProjectFiles::AddAllFiles(LPCSTR szType /* UIPF_FOT_SOURCE */, LPCSTR szProjFilesPath /* NULL */)   
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: szType
// Param: szProjFilesPath
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIProjectFiles::Close(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIProjOptionsTabDlg::Display() 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIProjOptionsTabDlg::SelectFile (CString szFile,CString szGrp, CString szTarget ) 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szFile
// Param: szGrp
// Param: szTarget
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIProjOptionsTabDlg::SelectGroup(CString szGrp, CString szTarget) 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szGrp
// Param: szTarget
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIProjOptionsTabDlg::SelectTarget(CString szTarget) 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szTarget
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int GetCompilerCategory(UINT iCtrlId)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iCtrlId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIProjOptionsTabDlg::SetCompilerOption(UINT iCtrlId, int iNewValue)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iCtrlId
// Param: iNewValue
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIProjOptionsTabDlg::SetCompilerOption(UINT iCtrlId, LPCSTR szNewValue)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iCtrlId
// Param: szNewValue
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIProjOptionsTabDlg::GetCompilerOption( UINT iCtrlId )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iCtrlId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: LPCSTR UIProjOptionsTabDlg::GetCompilerOptionStr( UINT iCtrlId )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: LPCSTR
// Param: iCtrlId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIProjOptionsTabDlg::ShowCompilerTab(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int GetLinkerCategory(UINT iCtrlId)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iCtrlId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIProjOptionsTabDlg::SetLinkerOption(UINT iCtrlId, int iNewValue)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iCtrlId
// Param: iNewValue
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIProjOptionsTabDlg::SetLinkerOption(UINT iCtrlId, LPCSTR szNewValue)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iCtrlId
// Param: szNewValue
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIProjOptionsTabDlg::GetLinkerOption( UINT iCtrlId )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iCtrlId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: LPCSTR UIProjOptionsTabDlg::GetLinkerOptionStr( UINT iCtrlId )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: LPCSTR
// Param: iCtrlId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIProjOptionsTabDlg::ShowLinkerTab(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIOGalleryDlg::Display() 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIOGalleryDlg::SelectPage( LPTSTR szPageName )	// REVIEW: Is HWND a good return value?
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: szPageName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIOGalleryDlg::SelectPage( UINT nPage )	// REVIEW: Is HWND a good return value?
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: nPage
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIOGalleryDlg::DisplayProperties( void )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIOGalleryDlg::CloseProperties( void )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: UINT UIOGalleryDlg::GetPageCount(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: UINT
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: LPTSTR UIOGalleryDlg::GetActivePageText(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: LPTSTR
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIOGalleryDlg::ActivateFirstPage(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIOGalleryDlg::ActivateNextPage( BOOL bRight /* TRUE */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: bRight
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIOGalleryDlg::DeleteOGDatabase(LPTSTR szPath /* = NULL */) 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: szPath
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::OpenConnectionDlg(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::OpenSettingsDlg(PLATFORM_TYPE platform, 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: platform
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::CloseAllDlgs(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetPlatformCore(PLATFORM_TYPE platform)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: platform
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetConnectionCore(CONNECTION_TYPE connection,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: connection
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetZoneCore(LPCSTR zone, PLATFORM_TYPE platform)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: zone
// Param: platform
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetMachineNameCore(LPCSTR machine_name, 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: machine_name
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetPasswordCore(LPCSTR password, CONNECTION_TYPE connection,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: password
// Param: connection
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetConnectorCore(CONNECTOR_TYPE connector, 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: connector
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetBaudRateCore(BAUD_RATE_TYPE baud_rate, 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: baud_rate
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetDataBitsCore(DATA_BITS_TYPE data_bits, 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: data_bits
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetParityCore(PARITY_TYPE parity,     PLATFORM_TYPE platform)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: parity
// Param: platform
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetStopBitsCore(STOP_BITS_TYPE stop_bits, 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: stop_bits
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetFlowControlCore(FLOW_CONTROL_TYPE flow_control, 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: flow_control
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetIPAddressCore(LPCSTR ip_address, PLATFORM_TYPE platform)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: ip_address
// Param: platform
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: //	REVIEW: kept old code around in case we need to back out
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: The return value description for this function is not available.
// Param: kept
// Param: code
// Param: in
// Param: we
// Param: to
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::GetRegistryValue(HKEY hKeyRegistry, 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: hKeyRegistry
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::OpenRegistryToCafe(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::OpenRegistryToPlatform(PLATFORM_TYPE platform)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: platform
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::OpenRegistryToConnection(PLATFORM_TYPE platform,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: platform
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::CloseRegistryFromCafe(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::CloseRegistryFromPlatform(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::CloseRegistryFromConnection(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CONNECTOR_TYPE COConnection::TranslateUserConnector(CString connector_str)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CONNECTOR_TYPE
// Param: connector_str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BAUD_RATE_TYPE COConnection::TranslateUserBaudRate(CString baud_rate_str)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BAUD_RATE_TYPE
// Param: baud_rate_str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: DATA_BITS_TYPE COConnection::TranslateUserDataBits(CString data_bits)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: DATA_BITS_TYPE
// Param: data_bits
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: PARITY_TYPE COConnection::TranslateUserParity(CString parity_str)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: PARITY_TYPE
// Param: parity_str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: STOP_BITS_TYPE COConnection::TranslateUserStopBits(CString stop_bits)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: STOP_BITS_TYPE
// Param: stop_bits
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: FLOW_CONTROL_TYPE COConnection::TranslateUserFlowControl(CString flow_control_str)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: FLOW_CONTROL_TYPE
// Param: flow_control_str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetPlatform(PLATFORM_TYPE platform /* PLATFORM_USER */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: platform
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetConnection(CONNECTION_TYPE connection /* CONNECTION_USER */,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: connection
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetZone(LPCSTR zone /* ZONE_USER */,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: zone
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetMachineName(LPCSTR machine_name /* MACHINE_NAME_USER */,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: machine_name
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetPassword(LPCSTR password /* PASSWORD_USER */,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: password
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetConnector(CONNECTOR_TYPE connector /* CONNECTOR_USER */,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: connector
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetBaudRate(BAUD_RATE_TYPE baud_rate /* BAUD_RATE_USER */,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: baud_rate
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetDataBits(DATA_BITS_TYPE data_bits /* DATA_BITS_USER */,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: data_bits
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetParity(PARITY_TYPE parity /* PARITY_USER */,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: parity
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetStopBits(STOP_BITS_TYPE stop_bits /* STOP_BITS_USER */,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: stop_bits
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetFlowControl(FLOW_CONTROL_TYPE flow_control /* FLOW_CONTROL_USER */,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: flow_control
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetIPAddress(LPCSTR ip_address /* IP_ADDRESS_USER */,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: ip_address
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetAll(PLATFORM_TYPE platform /* PLATFORM_USER */,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: platform
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetAll(PLATFORM_TYPE platform, CONNECTION_TYPE connection,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: platform
// Param: connection
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetAll(PLATFORM_TYPE platform, CONNECTION_TYPE connection,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: platform
// Param: connection
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetAll(PLATFORM_TYPE platform, CONNECTION_TYPE connection,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: platform
// Param: connection
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetAll(PLATFORM_TYPE platform, CONNECTION_TYPE connection,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: platform
// Param: connection
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetAll(PLATFORM_TYPE platform, CONNECTION_TYPE connection,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: platform
// Param: connection
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::SetAllSerialCore(PLATFORM_TYPE platform, 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: platform
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: PLATFORM_TYPE COConnection::GetTruePlatform(PLATFORM_TYPE platform)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: PLATFORM_TYPE
// Param: platform
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CONNECTION_TYPE COConnection::GetTrueConnection(CONNECTION_TYPE connection,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CONNECTION_TYPE
// Param: connection
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: PLATFORM_TYPE COConnection::GetPlatformCore(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: PLATFORM_TYPE
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CONNECTION_TYPE COConnection::GetConnectionCore(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CONNECTION_TYPE
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: PLATFORM_TYPE COConnection::GetPlatform(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: PLATFORM_TYPE
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CONNECTION_TYPE COConnection::GetConnection(PLATFORM_TYPE platform /* PLATFORM_CURRENT */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CONNECTION_TYPE
// Param: platform
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::GetUserPlatforms(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COConnection::GetUserConnections(PLATFORM_TYPE platform /* PLATFORM_USER */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: platform
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString COConnection::GetUserRemoteLocalPath(PLATFORM_TYPE platform 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: platform
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString COConnection::GetUserRemoteSharePath(PLATFORM_TYPE platform
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void COWorkSpace::CloseAllWindows(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COWorkSpace::IsToolbarVisible(UINT id)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: id
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COWorkSpace::IsDockWindowVisible(UINT id)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: id
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int COWorkSpace::ShowToolbar(UINT id, BOOL bShow /*=TRUE*/)	  //	REVIEW(enriquep): Use enum for id
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: id
// Param: bShow
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COWorkSpace::IsWindowDocked(UINT id, int nLocation)   // (enriquep)	 REVIEW: Use enum for id
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: id
// Param: nLocation
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COWorkSpace::IsToolbarDocked(UINT id, int nLocation)   // (enriquep)	 REVIEW: Use enum for id
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: id
// Param: nLocation
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COWorkSpace::ShowPropPage(BOOL bShow)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: bShow
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString COWorkSpace::GetStatusText(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COWorkSpace::WaitForStatusText(LPCSTR sz, DWORD dwMilliSeconds, BOOL bExact /*=TRUE*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: sz
// Param: dwMilliSeconds
// Param: bExact
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COWorkSpace::VerifyCaretPosition( int nRow, int nCol, LPCSTR szErrTxt )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: nRow
// Param: nCol
// Param: szErrTxt
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COWorkSpace::AddTool(CString strMenuText,  
// Description: Add a Tool to the Tools menu
// Return: BOOL
// Param: CString strMenuText Name and shortcut to appear on tools menu
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL COWorkSpace::DeleteTools(int Number)
// Description: Delete a number of Tools from the Tools menu
// Return: BOOL
// Param: int Number Number of tools to delete
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIFileDlg::SetName(LPCSTR sz)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: sz
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIFileDlg::SetPath(LPCSTR sz)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: sz
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIFileDlg::OK(BOOL bOverwrite)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: bOverwrite
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIFileDlg::GetDlgItem(UINT id) const
// Description: Get the HWND of a particular item (referred to by ID) in the dialog.
// Return: The HWND of the dialog item specified by the id parameter.
// Param: id The id of the item in the dialog.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: LPCSTR UIFileDlg::GetLabel(UINT id) const
// Description: Get the label associated with a control on the dialog (specified by id).
// Return: LPCSTR
// Param: id The id of the item in the dialog.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIFileDlg::GetExtensionDialog(void) const
// Description: This function gets the HWND of the extension dialog associated with this common dialog. Extensions to common dialogs are implemented as child dialogs of the main dialog.
// Return: HWND of the extension dialog. NULL if it doesn't exist.
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIFileSaveAsDlg::VerifyUnique(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND  UIFileOpenDlg::Display(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIFileOpenDlg::VerifyUnique(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIFileOpenDlg::SetEditor(EOpenAs oa)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: oa
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIFileOpenDlg::SetReadOnly(BOOL b)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: Param The parameter description(s) for this function are not available.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIFontDlg::VerifyUnique(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIFontDlg::SetName(LPCSTR szName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: szName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIFontDlg::SetSize(int nSize)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: nSize
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIFontDlg::SetStyle(int nStyle)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: nStyle
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UICustomizeTabDlg::Display() 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UICustomizeTabDlg::AddTBButton(int nButtonType, HWND hwndToolbar /* = NULL */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: nButtonType
// Param: hwndToolbar
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UICustomizeTabDlg::GetCurrentMiniPage()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDockWindow::AttachActive(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDockWindow::Find(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDockWindow::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDockWindow::IsActive(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIDockWindow::Close(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIConnection::Settings(CString title) 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: title
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIConnection::SetPlatform(LPCSTR platform)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: platform
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIConnection::SetConnection(LPCSTR connection)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: connection
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIConnection::GetPlatform(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIConnection::GetConnection(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIConnectionSettings::SetZone(LPCSTR zone)	
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: zone
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIConnectionSettings::SetMachineName(LPCSTR machine_name)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: machine_name
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIConnectionSettings::SetConnector(LPCSTR connector)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: connector
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIConnectionSettings::SetBaudRate(LPCSTR baud_rate)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: baud_rate
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIConnectionSettings::SetDataBits(LPCSTR data_bits)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: data_bits
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIConnectionSettings::SetParity(LPCSTR parity)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: parity
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIConnectionSettings::SetStopBits(LPCSTR stop_bits)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: stop_bits
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIConnectionSettings::SetFlowControl(LPCSTR flow_control)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: flow_control
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIConnectionSettings::SetIPAddress(LPCSTR ip_address)	
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: ip_address
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIConnectionSettings::SetPassword(LPCSTR password, 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: password
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIConnectionSettings::Close(void)								
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIOptionsTabDlg::Display() 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIOptionsTabDlg::AddDirectory( LPCSTR szNewDir, int iDirType, int iPlatform)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: szNewDir
// Param: iDirType
// Param: iPlatform
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIOutput::Activate(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UITabbedDialog::VerifyClass(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: INT UITabbedDialog::SetOption(INT iTab, UINT iCtrlId, UINT iNewValue) 
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: INT
// Param: iTab
// Param: iCtrlId
// Param: iNewValue
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UITabbedDialog::SetOption(INT iTab,UINT iCtrlId, LPCSTR szNewValue)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iTab
// Param: iCtrlId
// Param: szNewValue
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UITabbedDialog::GetOption(INT iTab, UINT iCtrlId)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: iTab
// Param: iCtrlId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: LPCSTR UITabbedDialog::GetOptionStr(INT iTab, UINT iCtrlId)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: LPCSTR
// Param: iTab
// Param: iCtrlId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UITabbedDialog::ShowPage(int iCtrlID, int iTabCnt)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: iCtrlID
// Param: iTabCnt
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UITabbedDialog::ShowPage(LPCSTR szTabCaption)
// Description: Activates the page specified that has a Tab caption specified by szTabCaption.(EnriqueP)
// Return: HWND
// Param: szTabCaption, contains the Tab caption text that is to be activated.
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UITabbedDialog::GetCurrentPage() const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UITabbedDialog::GetCurrentMiniPage() const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UITabbedDialog::IsControlInCurrentPage(UINT iCtrlId) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: iCtrlId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: LPCSTR UITabbedDialog::GetLabel(UINT nCtrlId) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: LPCSTR
// Param: nCtrlId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UITabbedDialog::ActivateNextPage( BOOL bRight /* TRUE */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: bRight
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UITabbedDialog::ShowNextPage(int iCtrlID)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: iCtrlID
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UITabbedDialog::GetDlgItem(UINT id) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: id
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBDialog::Close(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBDialog::Help(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBMessageBox::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIMainFrm::OnUpdate(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIMainFrm::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIMainFrm::DoCommand( UINT id, DC_METHOD method)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: id
// Param: method
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIMainFrm::IsCommandEnabled(UINT id)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: id
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIProperties::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIProperties::GetCurrentPage(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIProperties::GetTitle(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIProperties::GetPage(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIProperties::SetPage(LPCSTR szPage)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: szPage
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIProperties::GetLabel(UINT id) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: id
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIProperties::Close(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UITBarDialog::Display(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIToolbar::DisplayTBDlg(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIToolbar::ShowTB(int nTbId, BOOL bShow)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: nTbId
// Param: bShow
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: LPCSTR UIToolbar::GetTBText(int nTbId)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: LPCSTR
// Param: nTbId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIToolbar::IsDocked(HWND hWnd, int nLocation)   // (EnriqueP)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: hWnd
// Param: nLocation
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIWBFrame::OnUpdate(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::Find(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::IsValid(void) const
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::IsDebug(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::IsActive(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::IsAlert(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::CreateNewFile(LPCSTR szFileType)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: szFileType
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::OpenFile(LPCSTR szFileName, LPCSTR szChDir /*=NULL*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: szFileName
// Param: szChDir
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::SaveFileAs(LPCSTR szFileName, BOOL bOverwrite /*=TRUE*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: szFileName
// Param: bOverwrite
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::CloseEditor(HWND hwnd /*=NULL*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: hwnd
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::CloseProject(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIWBFrame::CloseAllWindows(void)   // REVIEW (EnriqueP): Move to CWorkSpace?
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::GetActiveEditor(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::SetActiveEditor(HWND hwndEditor)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: hwndEditor
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::GetToolbar(int nTbId)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: nTbId
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::ShowDockWindow(UINT id, BOOL bShow /*=TRUE*/) // REVIEW (EnriqueP): Move to CWorkSpace
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: id
// Param: bShow
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::IsWindowDocked(HWND hWnd, int nLocation)   // (enriquep)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: hWnd
// Param: nLocation
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIWBFrame::GetEditorCurPos( EGECP x, HWND hwndEditor /*=NULL*/ )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: x
// Param: hwndEditor
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::CreateNewResource(LPCSTR szResType)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: szResType
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::ImportResource(LPCSTR szFileName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: szFileName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIWBFrame::ExportResource(LPCSTR szFileName, BOOL bOverwrite /*=FALSE*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: szFileName
// Param: bOverwrite
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::ShowPropPage(BOOL bShow)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: bShow
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIWBFrame::GetProperty(int nProp)   // REVIEW (EnriqueP): Move to CWorkSpace?
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: nProp
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIWBFrame::GetProjPath(void)   // REVIEW (EnriqueP): Move to CWorkSpace?
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: void UIWBFrame::SelectProjItem(int item, LPCSTR szName)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: void
// Param: item
// Param: szName
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIWBFrame::GetItemProperty(int nProp)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: nProp
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::CanWeBuild(void )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIWBFrame::GetErrorCount(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIWBFrame::GetWarningCount(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::BrowseSymbols(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::AppWizard(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::ClassWizard(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::QuickWatch(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::ProjectProperties(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::FindInFilesDlg(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::Breakpoints(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::Exceptions(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::Threads(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::GoTo(LPCSTR str)		
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::GoToLine(LPCSTR szLine)		// REVIEW: Why the duplicate function?
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: szLine
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::GoToLine(int nLine)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: nLine
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::Options(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::GetStatusBar(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: CString UIWBFrame::GetStatusText(void)		  // REVIEW (EnriqueP): Move to CWorkSpace
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: CString
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::WaitForStatusText(LPCSTR sz, DWORD dwMilliSeconds, BOOL bExact /*=TRUE*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: sz
// Param: dwMilliSeconds
// Param: bExact
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::VerifyFile(LPCSTR szfile)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: szfile
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::VerifyCaretPosition( int nRow, int nCol, LPCSTR szErrTxt )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: nRow
// Param: nCol
// Param: szErrTxt
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::FVerifyClipboardText( CString stMatch )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: stMatch
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::FVerifySelection( CString stTest )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: stTest
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::FVerifyLine( CString stTest )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: stTest
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::AddTBButton(int nButtonType, HWND hwndToolbar /* = NULL */)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: nButtonType
// Param: hwndToolbar
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::SetToolbarCombo(LPCSTR str /*NULL*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::Break(int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::Go(int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::Restart(int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::StopDebugging(int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::StepInto(int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::StepOver(int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::StepOut(int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::StepToCursor(int WAIT)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: WAIT
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::ToggleBreakpoint(void)             //REVIEW: Add extra functionality to make worthwhile.
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::ToggleBreakpointAtLine(int line)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: line
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::SetNextStatement(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: UINT UIWBFrame::GetIDEState(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: UINT
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::Wait(int option,BOOL bCheckDebuggeeWindow /*TRUE*/)  		//TODO: needs to be more robust (time-limits, FALSE returns, etc.)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: option
// Param: bCheckDebuggeeWindow
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::WaitForBreak(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::WaitForTermination(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::WaitForRun(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::WaitForException(void)		// exception must be hit within five minutes
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::DoDebuggeeKeys(CString str)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::DoDebuggeeCmd(CString str)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: str
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::CreateNewProject(LPCSTR szProjName, int ProjType,
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: szProjName
// Param: ProjType
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::BuildProject(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::DeleteProject(LPCSTR szProjName, LPCSTR szDir)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: szProjName
// Param: szDir
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::VerifyBuildOutput()
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::VerifyProjectRan(LPCSTR szProject)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: szProject
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::VerifySubstringAtLine( LPCSTR stSubstring)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: stSubstring
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: int UIWBFrame::GetMemoryWidth(void)			//must only set width with SetMemoryWidth!			
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: int
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: MEM_FORMAT UIWBFrame::GetMemoryFormat(void)		//must only set format with SetMemoryFormat!
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: MEM_FORMAT
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::SetMemoryWidth(int width)	// sets fixed width
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: width
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::SetMemoryFormat(MEM_FORMAT format)	
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: format
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::WaitOnWndWithCtrl(INT ID, DWORD dwMillSec )
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: ID
// Param: dwMillSec
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::FileOpenDlg(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: HWND UIWBFrame::FileSaveAsDlg(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: HWND
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: BOOL UIWBFrame::GetPcodeSwitch(void)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: BOOL
// Param: void, takes no parameters 
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: SHL_API LPCSTR GetLocString(UINT id, int nOffset /*=-1*/)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: SHL_API
// Param: id
// Param: nOffset
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: SHL_API LPCSTR GetSysLocString(UINT id)
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: SHL_API
// Param: id
// END_HELP_COMMENT
// BEGIN_HELP_COMMENT
// Function: SHL_API int GetUserTargetPlatforms(void)	
// Description: The description for this function is not available. Please see the appropriate component owner for a description of this function.
// Return: SHL_API
// Param: void, takes no parameters 
// END_HELP_COMMENT
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Src\Tools\TestWiz\readme.txt ===
********************  TEST WIZARDS README *************************
INTRODUCTION


Q: What is Test Wizard?
A: It is a custom App Wizard extension DLL that is used to create CAFE automated tests.

Q: Who needs this tool?
A: Anybody who wants to write a new CAFE test script.

Q: What advandages does Test Wizard have?
A: The start up time to create a new test is greatly reduced since it automatically generates a CAFE type makefile and all the necessary source files, hiding all of the grunge work so the user is able to focus on writing the test cases instead of worrying about the underlying support code. 
It also provides an intuitive UI to the CAFE API's so that the user can get a headstart on writing the script.

Q: What kind of documentation is available?
A: This readme.txt file briefly explains how to install and use the Test Wizard.
You can also read TIPS.TXT for troubleshooting Test Wizard or refer to CUSTAPI.TXT to learn how to customize what API's, Categories, Areas and Subareas get displayed in the Script Dialog.
CUSTAPI.TXT also explains the general format of APIDATA.TXT which is used internally by Test Wizard.

Q: Who do I contact for support, bug reports or feature requests?
A: EnriqueP or IvanL

**************  INSTALLING TEST WIZARD  *********************8

**** Tree Diagram


CAFE
     TOOLS
	  TESTWIZ
                   BIN  (contains the files you need: testwiz.dll and apidata.txt )
		   SRC 	( source files, you can ghost these out)

To install the Test Wizard:
1.Create a new APPWIZ subdirectory under your IDE\BIN directory. You must use a debug version of the IDE.( A version of test wizard will soon be available that will run with the retail IDE).
2. Copy all the files in the TESTWIZ\BIN directory to IDE\BIN\APPWIZ

To Use the Test Wiz:
1.  Start IDE; File.New; select New Project
2. Specify the name of your new test and the path to the new location.
3. Select "testwiz.dll" from 'Project Type' drop down; <Create>.
4. The next dialog is self explanatory.  
     You can either skip <Edit Script> and simply create the project skeleton by pressing "Finish" (I recommend this for now)
OR
    You can click on  <Edit Script> if you want to use the API dialog to start writing your test.(There is a limited number of API's available at this point)
5. After you are done reading the confirmation dialog hit "OK"

The test wizard will create a new project with all the correct Project settings and source files. If you build this project you should get a working automation test exe.

If you run into a problem using testwiz or building the resulting project please refer to TIPS.TXT for some trouble shooting tips:
 

if you would like to add your own API's to the test wizards UI please read CUSTAPI.TXT to learn how to customize the test wizard:
 
 
 Any feedback and bugs reports are welcome. Feel free to contact EnriqueP if you have any questions,

 Thanks and Happy coding!
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Src\Tools\TestWiz\tips.txt ===
TEST WIZARD TROUBLE SHOOTING TIPS

This document contains tips for trouble shooting the most common Test Wizard Problems.

*************** USING TEST WIZARD  **************

PROBLEM: "Project Type" drop down does not list TESTWIZ.DLL

SOLUTION: Make sure TESTWIZ.DLL is placed in the APPWIZ directory which is under the IDE's BIN directory. You should have something like this:
C:\IDE\BIN\APPWIZ\TESTWIZ.DLL
		  APIDATA.TXT

*If you don't have an APPWIZ directory create one.

PROBLEM:Running Test wizard asserts or crashes before the first dialog is shown.

SOLUTION 1: Make sure the binaries that live in IDE\BIN are debug. The retail version of the IDE can't load testwiz.dll.  
Soon a new retail version of testwiz.dll  will be checked in that will work with the release IDE.

SOLUTION 2: Your MFCAPPWZ.DLL in the IDE\BIN directory may be out of sync.  If ssyncing to the latest does not fix the problem please let EnriqueP know so he can update TESTWIZ.DLL.


PROBLEM: "Can't Open API document file" alert comes up.

SOLUTION: Make sure APIDATA.TXT is placed in IDE\BIN\APPWIZ.

PROBLEM: The Scripts Dialog displays bogus data in its listboxes.

SOLUTION: Verify the APIDATA.TXT has valid data and the data is written in a valid format. See CUSTAPI.TXT for a brief explanation of the format.

****** BUILDING TEST WIZARD GENERATED TESTS **********

PROBLEM: Compiler errors "Can't find *.h or *.cpp file"

SOLUTION: Use the Tools.Options.Directories dialog to add all the CAFE include files:
C:\CAFE\CAFE\SRC
C:\CAFE\CAFE\INC
C:\CAFE\CAFE\WB
C:\CAFE\CAFE\WB\SYM

*Also make sure you have the MFC include paths correct.

PROBLEM: Linker errors "Can't find *.lib"

SOLUTION 1: Use the Tools.Options.Directories dialog to add all the CAFE libs : 
C:\CAFE\CAFE\LIB\X86
		 ALPHA
		 MIPS

SOLUTION 2: Make sure your CAFE libs are built and up to date. If they need rebuilding run NMAKE from the \CAFE\CAFE\SRC directory.  Use the switch DEBUG=1 (or =0) depending on the type of libs you need.
Also create the WB lib by running NMAKE from \CAFE\CAFE\WB


PROBLEM: Other Compiler errors such as "undeclared symbol".

SOLUTION: If you added API's while using the test wizard, it is possible that you might need to declare variables for  API parameters or fix any typos you might have introduced.

**************  Executing the tests  *****************
You should be able to launch both V3 and V2 IDE versions for debug or retail versions.  Make sure your Workbench Info settings point to the correct IDE.

************* FOR MORE INFO   ********
Read the Readme.txt file
Contact EnriqueP or IvanL
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Src\Tools\TestWiz\Bin\apidata.txt ===
CATEGORY Build
 	AREA Project
	 	SUBAREA Options
		SUBAREA File I/O
			API int COProject::New( PROJOPTIONS &stOptions) 
			API int COProject::New(params); Creates new project of the specified type
				PARAM	LPCSTR szProjName
				PARAM	int ProjType
				PARAM	LPCSTR szDir = NULL
				PARAM	LPCSTR szNewSubDir = NULL
				PARAM	int ProjFileOpt = CNP_ADD_FILES_MYSELF
				PARAM	LPCSTR szProjFilesPath = NULL
				PARAM	LPCSTR szRemotePath = NULL
				PARAM	LPCSTR szRemoteFile = NULL
			API int COProject::Save(void)
			API	int COProject::Close( int iSave = 0)
		SUBAREA	Window
			API BOOL COProject::ActivateProjWnd(void) 
		SUBAREA Build Commands
			API int COProject::Build( int iWait = 3), Builds current project and waits iWait seconds
			API int COProject::RebuildAll(int iWait)  
			API int COProject::StopBuild( void)
			API int COProject::VerifyBuild( params ), Verifies if a build was successful
		   		PARAM	BOOL LogErrors = FALSE
				PARAM	int* iErr= NULL
				PARAM	int* iWarn = NULL
				PARAM	BOOL WrnsAsErrs = FALSE
		   	API int COProject::GetErrorCount( void) 
			API int COProject::GetWarningCount( void) 

 	AREA Debugger
		SUBAREA Starting / Stopping
		    API BOOL CODebug::Go( params), Starts or continues debug session
				PARAM	LPCSTR symbol = NULL
				PARAM	LPCSTR line = NULL
				PARAM	LPCSTR function = NULL
				PARAM	int WAIT=WAIT_FOR_BREAK
	        API BOOL CODebug::Restart( LPCSTR path = NULL)	, Starts debugging from begining of the program
			API BOOL CODebug::StopDebugging( int WAIT=ASSUME_NORMAL_TERMINATION), Stops debug session
		SUBAREA Stepping
	        API BOOL CODebug::ValidateSteppingMode( StepMode mode) Validates...
	        API BOOL CODebug::StepInto( params)
				PARAM	int count = 1
				PARAM	LPCSTR symbol = NULL
				PARAM	LPCSTR line = NULL
				PARAM	LPCSTR function = NULL
				PARAM	int WAIT=WAIT_FOR_BREAK
		SUBAREA Breakpoints
			API bp* COBreakpoints::SetBreakpoint( LPCSTR location = NULL, int passcount = 0)

CATEGORY Editors
	AREA Source Editor
		SUBAREA File I/O  
			API	int COSource::Create(LPCSTR szSaveAs = NULL)
			API int COSource::Open(LPCSTR szFileName, LPCSTR szChDir = NULL, EOpenAs oa = OA_AUTO), Opens a file
			API virtual int COSource::Close(BOOL bSaveChanges = FALSE)
			API virtual int COSource::Save(void)
			API virtual int COSource::SaveAs(LPCSTR szFileName, BOOL bOverWrite = FALSE)
			API virtual BOOL COSource::AttachActiveEditor(void), Attaches Editor
		SUBAREA Editor Attributes
			API BOOL GetReadOnly(void)
		SUBAREA Selection Operations
			API int COSource::GetCurrentLine(void)
			API int COSource::GetCurrentColumn(void), Returns the column at the current cursor position
			API CString COSource::GetSelectedText(void)
			API void COSource::SelectText( params)
				PARAM  	int line1
				PARAM  	int column1
				PARAM  	int line2
				PARAM	int column2
				PARAM	BOOL bColumnSelect = SELECT_NORMAL
			API void COSource::SetCursor( int line, int column)
			API void COSource::InsertText( LPCSTR szText, int line, int column)
			API void COSource::TypeTextAtCursor( LPCSTR szText)
		SUBAREA Search Operations
			API void COSource::Find( LPCSTR szText = NULL, BOOL bFromTop = FALSE), Finds the text shown in toolbar combo box
			API void COSource::Replace( params)
				PARAM  LPCSTR szOld = NULL
				PARAM  LPCSTR szNew = NULL
				PARAM  BOOL bWholeWord = FALSE
				PARAM  BOOL bExpression = FALSE
				PARAM  BOOL bCase = FALSE
	AREA	Resource Editors
		SUBAREA File IO
			API int COResScript::Open( params), Opens an RC file
				PARAM	LPCSTR szFileName
				PARAM	LPCSTR szChDir = NULL
			API virtual int COResScript::Save(void)
		SUBAREA Dialog Editor
			API int COResScript::CreateResource( UINT idResType), Creates a new resource of the specified type
			API	BOOL  UIDlgEdit::DropControl( int nControl, int cX, int cY), Drops a dialog control at the specified dialog coordinates

CATEGORY Wizards
	AREA   AppWizard   
	    SUBAREA Creation,    
	        API HWND UIAppWizard::Create( void)
	    	API HWND UIAppWizard::ConfirmCreate( void)
	    SUBAREA Initialization
	    	API void UIAppWizard::SetName( LPCSTR szName = CoolszName ), Sets the Name of the Project to create.
		    API void UIAppWizard::SetDir( LPCSTR szName=e:\ ), Specifies the directory where the project will be created.
		    API void UIAppWizard::SetSubDir( LPCSTR szName ), Specifies subdir
		    API void UIAppWizard::SetPlatform( UINT iPlatform ) , specifies platform
	        API void UIAppWizard::SetAppType( UINT id )	, specifies target type
	    	API void UIAppWizard::SetDBOptions( UINT id )  , specifies debbuger options
	    	API void UIAppWizard::SetOLEOptions( UINT id )  , OLE options
	    	API void UIAppWizard::SetProjOptions( UINT id ) , Project options
	    	API void UIAppWizard::SelectClass( UINT n )	  
	    	API void UIAppWizard::SelectClass( LPCSTR sz )	   
	    	API CString UIAppWizard::GetClassName( void)
	    	API CString UIAppWizard::GetBaseClass( void)
	    	API CString UIAppWizard::GetSourceFile( void)
	    	API CString UIAppWizard::GetHeaderFile( void)
	    SUBAREA Navigation
	    	API int UIAppWizard::NextPage( void)
	    	API int UIAppWizard::PrevPage( void)
	    	API int UIAppWizard::Finish( void)
	    	API HWND UIAppWizard::Cancel( void)
 
	CATEGORY Common Utilities
	AREA  IDE
		SUBAREA Mouse
			API void ClickMouse(int nButton,HWND hwnd, int cX,  int cY)
			API void DragMouse(int nButton,HWND hwnd1,int cX1,int cY1, HWND hwnd2,int cX2,int cY2)
			API BOOL ScreenToClient(HWND hwnd, CRect* pRect)
			API BOOL ClientToScreen(HWND hwnd, CRect* pRect)
		SUBAREA Commands
		   	API int DoMenu( params) 
		   	 	PARAM   LPCSTR szMenu      
		   	API BOOL DoSingleMenu( params)
		   		PARAM	LPCSTR szMenu   
		SUBAREA Keyboard
	    	API  void DoKeysSlow(LPCSTR szKeys, WORD wMilliseconds = 0, BOOL bLiteral = FALSE)
		SUBAREA Window Operations
	AREA File Operations
		SUBAREA File Compare / Search
			API int CompareFiles( LPCSTR strSource, LPCSTR strTarget, int nStart), Verifies if two files are identical
			API int FindStrInFile(LPCSTR szFileName, LPCSTR szStr, int nStart = 1)
		SUBAREA File Delete / Copy
			API void KillFile( LPCSTR szPathName, LPCSTR szFileName = NULL, BOOL bIgnoreReadOnly = FALSE)
			API BOOL KillAllFiles(LPCSTR szPathName, BOOL bRemoveDir = TRUE), Deletes all the files in the specified directory
			API void CopyTree(LPCSTR szFrom, LPCSTR szTo)
	AREA Process Control
		SUBAREA Delays
			API void MilliSleep( DWORD milliseconds )
  	AREA  MS Test   
	    SUBAREA Keyboard
			API static int CMSTest::DoKeys ( LPCSTR sz, BOOL bLiteral = FALSE)
	    SUBAREA Mouse
	    SUBAREA Window Operations
	    SUBAREA Control Operations
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Src\Tools\TestWiz\Src\Template\file.txt ===
This is a file.

SAFE_ROOT is $$SAFE_ROOT$$.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\Box\Sniff\Bin\Control.txt ===
[Microsoft Windows 98 4.10 Build 2222  English PRE]
d:\windows\system\	mfc30.dll	3.2.0.0	335,872	04-23-1999 22:22:00	0x5d78ebc1
d:\windows\system\	mfc40.dll	4.1.0.6140	933,888	04-23-1999 22:22:00	0x1d87779b
d:\windows\system\	mfc42.dll	6.0.8447.0	995,383	04-23-1999 22:22:00	0xe9f90051
d:\windows\system\	mfcans32.dll	3.2.1.0	159,744	04-23-1999 22:22:00	0x7aadc835
d:\windows\system\	mfcd30.dll	3.2.0.0	69,632	04-23-1999 22:22:00	0x75f606b5
d:\windows\system\	mfcn30.dll	3.2.0.0	36,864	04-23-1999 22:22:00	0xc57bc5f3
d:\windows\system\	mfco30.dll	3.2.0.0	151,552	04-23-1999 22:22:00	0xddbe105f
d:\windows\system\	mfcuia32.dll	3.0.0.0	24,576	04-23-1999 22:22:00	0xe3fd1527
d:\windows\system\	mfcuiw32.dll	3.0.0.0	24,576	04-23-1999 22:22:00	0xdcad4e83
d:\windows\system\	msvcirt.dll	6.0.8168.0	77,878	06-17-1998 00:00:00	0x0571d0e6
d:\windows\system\	msvcrt.dll	6.0.8397.0	266,293	04-23-1999 22:22:00	0xa7f18460
d:\windows\system\	msvcrt20.dll	2.11.0.0	274,432	04-23-1999 22:22:00	0x5394b9bd
d:\windows\system\	msvcrt40.dll	4.22.0.0	344,064	04-23-1999 22:22:00	0xf585b5cf



[Microsoft Windows 98 4.10 Build 2222  English POST]
d:\windows\system\	atl.dll	3.0.8449.0	73,785	06-01-1999 00:00:00	0x7534f6d2
d:\windows\system\	mfc30.dll	3.2.0.0	335,872	04-23-1999 22:22:00	0x5d78ebc1
d:\windows\system\	mfc40.dll	4.1.0.6140	933,888	04-23-1999 22:22:00	0x1d87779b
d:\windows\system\	mfc42.dll	6.0.8665.0	995,383	10-27-1999 00:00:00	0x0433dbda
d:\windows\system\	mfc42.map	-	797,548	03-06-2000 00:00:00	0xcdc35067
d:\windows\system\	mfc42.pdb	-	8,024,064	10-27-1999 00:00:00	0xa0ce1aaf
d:\windows\system\	mfc42d.dll	6.0.8665.0	929,844	10-27-1999 00:00:00	0xb9a57824
d:\windows\system\	mfc42d.map	-	758,192	10-27-1999 00:00:00	0x4df26cb8
d:\windows\system\	mfc42d.pdb	-	3,944,448	10-27-1999 00:00:00	0x15e15b2a
d:\windows\system\	mfcans32.dll	3.2.1.0	159,744	04-23-1999 22:22:00	0x7aadc835
d:\windows\system\	mfcd30.dll	3.2.0.0	69,632	04-23-1999 22:22:00	0x75f606b5
d:\windows\system\	mfcd42d.dll	6.0.8665.0	274,485	10-27-1999 00:00:00	0xb2cf96b9
d:\windows\system\	mfcd42d.map	-	233,088	10-27-1999 00:00:00	0xfd0db4fc
d:\windows\system\	mfcd42d.pdb	-	2,052,096	10-27-1999 00:00:00	0x9f5c6b6a
d:\windows\system\	mfcn30.dll	3.2.0.0	36,864	04-23-1999 22:22:00	0xc57bc5f3
d:\windows\system\	mfcn42d.dll	6.0.8665.0	41,013	10-27-1999 00:00:00	0x73526128
d:\windows\system\	mfcn42d.map	-	55,273	10-27-1999 00:00:00	0x31102616
d:\windows\system\	mfcn42d.pdb	-	1,454,080	10-27-1999 00:00:00	0x42f12275
d:\windows\system\	mfco30.dll	3.2.0.0	151,552	04-23-1999 22:22:00	0xddbe105f
d:\windows\system\	mfco42d.dll	6.0.8665.0	798,773	10-27-1999 00:00:00	0x59dfe7ee
d:\windows\system\	mfco42d.map	-	826,034	10-27-1999 00:00:00	0x2e1d53fb
d:\windows\system\	mfco42d.pdb	-	4,395,008	10-27-1999 00:00:00	0xc36025d8
d:\windows\system\	mfcuia32.dll	3.0.0.0	24,576	04-23-1999 22:22:00	0xe3fd1527
d:\windows\system\	mfcuiw32.dll	3.0.0.0	24,576	04-23-1999 22:22:00	0xdcad4e83
d:\windows\system\	msvcirt.dll	6.0.8168.0	77,878	06-17-1998 00:00:00	0x0571d0e6
d:\windows\system\	msvcp60.dll	6.0.8168.0	401,462	06-17-1998 00:00:00	0x667d9a74
d:\windows\system\	msvcrt.dll	6.0.8797.0	278,581	03-07-2000 00:00:00	0xd19a6d29
d:\windows\system\	msvcrt.pdb	-	2,507,776	03-07-2000 00:00:00	0x57801f25
d:\windows\system\	msvcrt20.dll	2.11.0.0	274,432	04-23-1999 22:22:00	0x5394b9bd
d:\windows\system\	msvcrt40.dll	4.22.0.0	344,064	04-23-1999 22:22:00	0xf585b5cf
d:\windows\system\	msvcrtd.dll	6.0.8797.0	434,252	03-07-2000 00:00:00	0x192baed0



[Microsoft Windows NT 4.0 Build 1381 Service Pack 4 English PRE]
d:\winnt\system32\	mfc40.dll	4.1.0.6139	924,432	10-14-1996 02:38:00	0x0d7138b9
d:\winnt\system32\	mfc40u.dll	4.1.0.6139	924,432	10-14-1996 02:38:00	0x158efbe4
d:\winnt\system32\	mfc42.dll	4.2.0.6068	1,011,472	10-14-1996 02:38:00	0x621db28a
d:\winnt\system32\	mfc42u.dll	4.2.0.6068	1,009,936	10-14-1996 02:38:00	0x6a3813ed
d:\winnt\system32\	msvcirt.dll	6.0.8168.0	77,878	06-17-1998 00:00:00	0x0571d0e6
d:\winnt\system32\	msvcrt.dll	6.0.8397.0	266,293	02-02-1999 00:00:00	0xa7f18460
d:\winnt\system32\	msvcrt20.dll	2.11.0.0	253,952	10-14-1996 02:38:00	0x84e1a906
d:\winnt\system32\	msvcrt40.dll	4.2000.0.6172	65,024	10-14-1996 02:38:00	0xfb05f7b0



[Microsoft Windows NT 4.0 Build 1381 Service Pack 4 English POST]
d:\winnt\system32\	atl.dll	3.0.8449.0	58,938	06-01-1999 00:00:00	0x2d1835a8
d:\winnt\system32\	mfc40.dll	4.1.0.6140	924,432	06-01-1999 00:00:00	0xdb65e9ee
d:\winnt\system32\	mfc40u.dll	4.1.0.6140	924,432	06-01-1999 00:00:00	0x38c607ff
d:\winnt\system32\	mfc42.dll	6.0.8665.0	995,383	10-27-1999 00:00:00	0x0433dbda
d:\winnt\system32\	mfc42.map	-	797,548	03-06-2000 00:00:00	0xcdc35067
d:\winnt\system32\	mfc42.pdb	-	8,024,064	10-27-1999 00:00:00	0xa0ce1aaf
d:\winnt\system32\	mfc42d.dll	6.0.8665.0	929,844	10-27-1999 00:00:00	0xb9a57824
d:\winnt\system32\	mfc42d.map	-	758,192	10-27-1999 00:00:00	0x4df26cb8
d:\winnt\system32\	mfc42d.pdb	-	3,944,448	10-27-1999 00:00:00	0x15e15b2a
d:\winnt\system32\	mfc42u.dll	6.0.8665.0	995,384	10-27-1999 00:00:00	0xdbcb1452
d:\winnt\system32\	mfcd42d.dll	6.0.8665.0	274,485	10-27-1999 00:00:00	0xb2cf96b9
d:\winnt\system32\	mfcd42d.map	-	233,088	10-27-1999 00:00:00	0xfd0db4fc
d:\winnt\system32\	mfcd42d.pdb	-	2,052,096	10-27-1999 00:00:00	0x9f5c6b6a
d:\winnt\system32\	mfcn42d.dll	6.0.8665.0	41,013	10-27-1999 00:00:00	0x73526128
d:\winnt\system32\	mfcn42d.map	-	55,273	10-27-1999 00:00:00	0x31102616
d:\winnt\system32\	mfcn42d.pdb	-	1,454,080	10-27-1999 00:00:00	0x42f12275
d:\winnt\system32\	mfco42d.dll	6.0.8665.0	798,773	10-27-1999 00:00:00	0x59dfe7ee
d:\winnt\system32\	mfco42d.map	-	826,034	10-27-1999 00:00:00	0x2e1d53fb
d:\winnt\system32\	mfco42d.pdb	-	4,395,008	10-27-1999 00:00:00	0xc36025d8
d:\winnt\system32\	msvcirt.dll	6.0.8168.0	77,878	06-17-1998 00:00:00	0x0571d0e6
d:\winnt\system32\	msvcp60.dll	6.0.8168.0	401,462	06-17-1998 00:00:00	0x667d9a74
d:\winnt\system32\	msvcrt.dll	6.0.8797.0	278,581	03-07-2000 00:00:00	0xd19a6d29
d:\winnt\system32\	msvcrt.pdb	-	2,507,776	03-07-2000 00:00:00	0x57801f25
d:\winnt\system32\	msvcrt20.dll	2.11.0.0	253,952	10-14-1996 02:38:00	0x84e1a906
d:\winnt\system32\	msvcrt40.dll	4.2000.0.6172	65,024	10-14-1996 02:38:00	0xfb05f7b0
d:\winnt\system32\	msvcrtd.dll	6.0.8797.0	434,252	03-07-2000 00:00:00	0x192baed0



[Microsoft Windows 2000 5.0 Build 2195  English PRE]
d:\winnt\system32\	atl.dll	3.0.8449.0	58,938	12-07-1999 12:00:00	0xb861b1c2
d:\winnt\system32\	mfc40.dll	4.1.0.6140	924,432	12-07-1999 12:00:00	0xceec13d6
d:\winnt\system32\	mfc40u.dll	4.1.0.6140	924,432	12-07-1999 12:00:00	0x63275e8c
d:\winnt\system32\	mfc42.dll	6.0.8665.0	995,383	12-07-1999 12:00:00	0x365b5bd0
d:\winnt\system32\	mfc42u.dll	6.0.8665.0	995,384	12-07-1999 12:00:00	0xe3aad0c7
d:\winnt\system32\	msvcirt.dll	6.1.8637.0	77,878	12-07-1999 12:00:00	0x7066536b
d:\winnt\system32\	msvcp50.dll	5.0.0.7051	565,760	12-07-1999 12:00:00	0x730f273a
d:\winnt\system32\	msvcrt.dll	6.1.8637.0	295,000	12-07-1999 12:00:00	0x770c8856
d:\winnt\system32\	msvcrt20.dll	2.12.0.0	253,952	12-07-1999 12:00:00	0xe34ef083
d:\winnt\system32\	msvcrt40.dll	4.2000.0.6201	65,024	12-07-1999 12:00:00	0x58920db6
d:\winnt\system32\dllcache\	atl.dll	3.0.8449.0	58,938	12-07-1999 04:00:00	0xb861b1c2
d:\winnt\system32\dllcache\	mfc40.dll	4.1.0.6140	924,432	12-07-1999 04:00:00	0xceec13d6
d:\winnt\system32\dllcache\	mfc40u.dll	4.1.0.6140	924,432	12-07-1999 04:00:00	0x63275e8c
d:\winnt\system32\dllcache\	mfc42.dll	6.0.8665.0	995,383	12-07-1999 04:00:00	0x365b5bd0
d:\winnt\system32\dllcache\	mfc42u.dll	6.0.8665.0	995,384	12-07-1999 04:00:00	0xe3aad0c7
d:\winnt\system32\dllcache\	msvcirt.dll	6.1.8637.0	77,878	12-07-1999 04:00:00	0x7066536b
d:\winnt\system32\dllcache\	msvcp50.dll	5.0.0.7051	565,760	12-07-1999 04:00:00	0x730f273a
d:\winnt\system32\dllcache\	msvcrt.dll	6.1.8637.0	295,000	12-07-1999 04:00:00	0x770c8856
d:\winnt\system32\dllcache\	msvcrt20.dll	2.12.0.0	253,952	12-07-1999 04:00:00	0xe34ef083
d:\winnt\system32\dllcache\	msvcrt40.dll	4.2000.0.6201	65,024	12-07-1999 04:00:00	0x58920db6

[Microsoft Windows 2000 5.0 Build 2195  English POST]
d:\winnt\system32\	atl.dll	3.0.8449.0	58,938	12-07-1999 04:00:00	0xb861b1c2
d:\winnt\system32\	mfc40.dll	4.1.0.6140	924,432	12-07-1999 04:00:00	0xceec13d6
d:\winnt\system32\	mfc40u.dll	4.1.0.6140	924,432	12-07-1999 04:00:00	0x63275e8c
d:\winnt\system32\	mfc42.dll	6.0.8665.0	995,383	12-07-1999 04:00:00	0x365b5bd0
d:\winnt\system32\	mfc42.map	-	797,056	06-17-1998 00:00:00	0x823c705e
d:\winnt\system32\	mfc42.pdb	-	8,015,872	06-17-1998 00:00:00	0x69c9f344
d:\winnt\system32\	mfc42d.dll	6.0.8168.0	929,844	06-17-1998 00:00:00	0x523500e9
d:\winnt\system32\	mfc42d.map	-	757,357	06-17-1998 00:00:00	0x723a9f44
d:\winnt\system32\	mfc42d.pdb	-	3,944,448	06-17-1998 00:00:00	0xe5670915
d:\winnt\system32\	mfc42u.dll	6.0.8665.0	995,384	12-07-1999 04:00:00	0xe3aad0c7
d:\winnt\system32\	mfcd42d.dll	6.0.8168.0	274,485	06-17-1998 00:00:00	0x61938a9a
d:\winnt\system32\	mfcd42d.map	-	233,088	06-17-1998 00:00:00	0xbdedcd67
d:\winnt\system32\	mfcd42d.pdb	-	2,052,096	06-17-1998 00:00:00	0x2fce90bc
d:\winnt\system32\	mfcn42d.dll	6.0.8168.0	41,013	06-17-1998 00:00:00	0x9605d8a8
d:\winnt\system32\	mfcn42d.map	-	55,273	06-17-1998 00:00:00	0x3024e3e9
d:\winnt\system32\	mfcn42d.pdb	-	1,454,080	06-17-1998 00:00:00	0x4c98e2ae
d:\winnt\system32\	mfco42d.dll	6.0.8168.0	798,773	06-17-1998 00:00:00	0x9a3a0700
d:\winnt\system32\	mfco42d.map	-	823,939	06-17-1998 00:00:00	0x47db26f2
d:\winnt\system32\	mfco42d.pdb	-	4,395,008	06-17-1998 00:00:00	0xcb630508
d:\winnt\system32\	msvcirt.dll	6.1.8637.0	77,878	12-07-1999 04:00:00	0x7066536b
d:\winnt\system32\	msvcp50.dll	5.0.0.7051	565,760	12-07-1999 04:00:00	0x730f273a
d:\winnt\system32\	msvcp60.dll	6.0.8168.0	401,462	06-17-1998 00:00:00	0x667d9a74
d:\winnt\system32\	msvcrt.dll	6.1.8637.0	295,000	12-07-1999 04:00:00	0x770c8856
d:\winnt\system32\	msvcrt.pdb	-	2,434,048	06-17-1998 00:00:00	0x3994f404
d:\winnt\system32\	msvcrt20.dll	2.12.0.0	253,952	12-07-1999 04:00:00	0xe34ef083
d:\winnt\system32\	msvcrt40.dll	4.2000.0.6201	65,024	12-07-1999 04:00:00	0x58920db6
d:\winnt\system32\	msvcrtd.dll	6.0.8168.0	385,100	06-17-1998 00:00:00	0x6d23054b
d:\winnt\system32\dllcache\	atl.dll	3.0.8449.0	58,938	12-07-1999 04:00:00	0xb861b1c2
d:\winnt\system32\dllcache\	mfc40.dll	4.1.0.6140	924,432	12-07-1999 04:00:00	0xceec13d6
d:\winnt\system32\dllcache\	mfc40u.dll	4.1.0.6140	924,432	12-07-1999 04:00:00	0x63275e8c
d:\winnt\system32\dllcache\	mfc42.dll	6.0.8665.0	995,383	12-07-1999 04:00:00	0x365b5bd0
d:\winnt\system32\dllcache\	mfc42u.dll	6.0.8665.0	995,384	12-07-1999 04:00:00	0xe3aad0c7
d:\winnt\system32\dllcache\	msvcirt.dll	6.1.8637.0	77,878	12-07-1999 04:00:00	0x7066536b
d:\winnt\system32\dllcache\	msvcp50.dll	5.0.0.7051	565,760	12-07-1999 04:00:00	0x730f273a
d:\winnt\system32\dllcache\	msvcrt.dll	6.1.8637.0	295,000	12-07-1999 04:00:00	0x770c8856
d:\winnt\system32\dllcache\	msvcrt20.dll	2.12.0.0	253,952	12-07-1999 04:00:00	0xe34ef083
d:\winnt\system32\dllcache\	msvcrt40.dll	4.2000.0.6201	65,024	12-07-1999 04:00:00	0x58920db6

[Microsoft Windows 2000 5.0 Build 2195 Service Pack 1 English PRE]
d:\winnt\system32\	atl.dll	3.0.8449.0	58,938	12-07-1999 04:00:00	0xb861b1c2
d:\winnt\system32\	mfc40.dll	4.1.0.6140	924,432	12-07-1999 04:00:00	0xceec13d6
d:\winnt\system32\	mfc40u.dll	4.1.0.6140	924,432	12-07-1999 04:00:00	0x63275e8c
d:\winnt\system32\	mfc42.dll	6.0.8665.0	995,383	12-07-1999 04:00:00	0x365b5bd0
d:\winnt\system32\	mfc42u.dll	6.0.8665.0	995,384	12-07-1999 04:00:00	0xe3aad0c7
d:\winnt\system32\	msvcirt.dll	6.1.8637.0	77,878	12-07-1999 04:00:00	0x7066536b
d:\winnt\system32\	msvcp50.dll	5.0.0.7051	565,760	12-07-1999 04:00:00	0x730f273a
d:\winnt\system32\	msvcrt.dll	6.1.8637.0	295,000	12-07-1999 04:00:00	0x770c8856
d:\winnt\system32\	msvcrt20.dll	2.12.0.0	253,952	12-07-1999 04:00:00	0xe34ef083
d:\winnt\system32\	msvcrt40.dll	4.2000.0.6201	65,024	12-07-1999 04:00:00	0x58920db6
d:\winnt\system32\dllcache\	atl.dll	3.0.8449.0	58,938	12-07-1999 04:00:00	0xb861b1c2
d:\winnt\system32\dllcache\	mfc40.dll	4.1.0.6140	924,432	12-07-1999 04:00:00	0xceec13d6
d:\winnt\system32\dllcache\	mfc40u.dll	4.1.0.6140	924,432	12-07-1999 04:00:00	0x63275e8c
d:\winnt\system32\dllcache\	mfc42.dll	6.0.8665.0	995,383	12-07-1999 04:00:00	0x365b5bd0
d:\winnt\system32\dllcache\	mfc42u.dll	6.0.8665.0	995,384	12-07-1999 04:00:00	0xe3aad0c7
d:\winnt\system32\dllcache\	msvcirt.dll	6.1.8637.0	77,878	12-07-1999 04:00:00	0x7066536b
d:\winnt\system32\dllcache\	msvcp50.dll	5.0.0.7051	565,760	12-07-1999 04:00:00	0x730f273a
d:\winnt\system32\dllcache\	msvcrt.dll	6.1.8637.0	295,000	12-07-1999 04:00:00	0x770c8856
d:\winnt\system32\dllcache\	msvcrt20.dll	2.12.0.0	253,952	12-07-1999 04:00:00	0xe34ef083
d:\winnt\system32\dllcache\	msvcrt40.dll	4.2000.0.6201	65,024	12-07-1999 04:00:00	0x58920db6



[Microsoft Windows 2000 5.0 Build 2195 Service Pack 1 English POST]
d:\winnt\system32\	atl.dll	3.0.8449.0	58,938	12-07-1999 04:00:00	0xb861b1c2
d:\winnt\system32\	mfc40.dll	4.1.0.6140	924,432	12-07-1999 04:00:00	0xceec13d6
d:\winnt\system32\	mfc40u.dll	4.1.0.6140	924,432	12-07-1999 04:00:00	0x63275e8c
d:\winnt\system32\	mfc42.dll	6.0.8665.0	995,383	12-07-1999 04:00:00	0x365b5bd0
d:\winnt\system32\	mfc42.map	-	797,548	03-06-2000 00:00:00	0xcdc35067
d:\winnt\system32\	mfc42.pdb	-	8,024,064	10-27-1999 00:00:00	0xa0ce1aaf
d:\winnt\system32\	mfc42d.dll	6.0.8665.0	929,844	10-27-1999 00:00:00	0xb9a57824
d:\winnt\system32\	mfc42d.map	-	758,192	10-27-1999 00:00:00	0x4df26cb8
d:\winnt\system32\	mfc42d.pdb	-	3,944,448	10-27-1999 00:00:00	0x15e15b2a
d:\winnt\system32\	mfc42u.dll	6.0.8665.0	995,384	12-07-1999 04:00:00	0xe3aad0c7
d:\winnt\system32\	mfcd42d.dll	6.0.8665.0	274,485	10-27-1999 00:00:00	0xb2cf96b9
d:\winnt\system32\	mfcd42d.map	-	233,088	10-27-1999 00:00:00	0xfd0db4fc
d:\winnt\system32\	mfcd42d.pdb	-	2,052,096	10-27-1999 00:00:00	0x9f5c6b6a
d:\winnt\system32\	mfcn42d.dll	6.0.8665.0	41,013	10-27-1999 00:00:00	0x73526128
d:\winnt\system32\	mfcn42d.map	-	55,273	10-27-1999 00:00:00	0x31102616
d:\winnt\system32\	mfcn42d.pdb	-	1,454,080	10-27-1999 00:00:00	0x42f12275
d:\winnt\system32\	mfco42d.dll	6.0.8665.0	798,773	10-27-1999 00:00:00	0x59dfe7ee
d:\winnt\system32\	mfco42d.map	-	826,034	10-27-1999 00:00:00	0x2e1d53fb
d:\winnt\system32\	mfco42d.pdb	-	4,395,008	10-27-1999 00:00:00	0xc36025d8
d:\winnt\system32\	msvcirt.dll	6.1.8637.0	77,878	12-07-1999 04:00:00	0x7066536b
d:\winnt\system32\	msvcp50.dll	5.0.0.7051	565,760	12-07-1999 04:00:00	0x730f273a
d:\winnt\system32\	msvcp60.dll	6.0.8972.0	401,462	08-29-2000 00:00:00	0x7f386569
d:\winnt\system32\	msvcrt.dll	6.1.8637.0	295,000	12-07-1999 04:00:00	0x770c8856
d:\winnt\system32\	msvcrt.pdb	-	2,507,776	03-07-2000 00:00:00	0x57801f25
d:\winnt\system32\	msvcrt20.dll	2.12.0.0	253,952	12-07-1999 04:00:00	0xe34ef083
d:\winnt\system32\	msvcrt40.dll	4.2000.0.6201	65,024	12-07-1999 04:00:00	0x58920db6
d:\winnt\system32\	msvcrtd.dll	6.0.8797.0	434,252	03-07-2000 00:00:00	0x192baed0
d:\winnt\system32\dllcache\	atl.dll	3.0.8449.0	58,938	12-07-1999 04:00:00	0xb861b1c2
d:\winnt\system32\dllcache\	mfc40.dll	4.1.0.6140	924,432	12-07-1999 04:00:00	0xceec13d6
d:\winnt\system32\dllcache\	mfc40u.dll	4.1.0.6140	924,432	12-07-1999 04:00:00	0x63275e8c
d:\winnt\system32\dllcache\	mfc42.dll	6.0.8665.0	995,383	12-07-1999 04:00:00	0x365b5bd0
d:\winnt\system32\dllcache\	mfc42u.dll	6.0.8665.0	995,384	12-07-1999 04:00:00	0xe3aad0c7
d:\winnt\system32\dllcache\	msvcirt.dll	6.1.8637.0	77,878	12-07-1999 04:00:00	0x7066536b
d:\winnt\system32\dllcache\	msvcp50.dll	5.0.0.7051	565,760	12-07-1999 04:00:00	0x730f273a
d:\winnt\system32\dllcache\	msvcrt.dll	6.1.8637.0	295,000	12-07-1999 04:00:00	0x770c8856
d:\winnt\system32\dllcache\	msvcrt20.dll	2.12.0.0	253,952	12-07-1999 04:00:00	0xe34ef083
d:\winnt\system32\dllcache\	msvcrt40.dll	4.2000.0.6201	65,024	12-07-1999 04:00:00	0x58920db6


[Microsoft Windows Millennium 4.90 Build 2534  English PRE]
d:\windows\system\	atl.dll	3.0.8449.0	73,785	06-02-2000 08:11:00	0x5e871adf
d:\windows\system\	mfc30.dll	3.2.0.0	335,872	06-02-2000 08:11:00	0x14428034
d:\windows\system\	mfc40.dll	4.1.0.6140	933,888	06-02-2000 08:11:00	0x5cb9d29c
d:\windows\system\	mfc42.dll	6.0.8665.0	995,383	06-02-2000 08:11:00	0x0433dbda
d:\windows\system\	mfcans32.dll	3.2.1.0	159,744	06-02-2000 08:11:00	0xeb0a9b16
d:\windows\system\	mfcd30.dll	3.2.0.0	69,632	06-02-2000 08:11:00	0x06145c19
d:\windows\system\	mfcn30.dll	3.2.0.0	36,864	06-02-2000 08:11:00	0x12bf966e
d:\windows\system\	mfco30.dll	3.2.0.0	151,552	06-02-2000 08:11:00	0x142ef39c
d:\windows\system\	mfcuia32.dll	3.0.0.0	24,576	06-02-2000 08:11:00	0xeadc42bd
d:\windows\system\	mfcuiw32.dll	3.0.0.0	24,576	06-02-2000 08:11:00	0x0cc7bbb3
d:\windows\system\	msvcirt.dll	6.1.8637.0	77,878	06-02-2000 08:11:00	0xd4e66e85
d:\windows\system\	msvcp50.dll	5.0.0.7022	643,072	06-02-2000 08:11:00	0x3d0f98ce
d:\windows\system\	msvcp60.dll	6.0.8168.0	401,462	06-02-2000 08:11:00	0x869e05c4
d:\windows\system\	msvcrt.dll	6.1.8637.0	290,869	06-02-2000 08:11:00	0x35d8b51b
d:\windows\system\	msvcrt20.dll	2.11.0.0	274,432	06-02-2000 08:11:00	0x28d035d6
d:\windows\system\	msvcrt40.dll	4.22.0.0	344,064	06-02-2000 08:11:00	0x4ea25493



[Microsoft Windows Millennium 4.90 Build 2534  English POST]
d:\windows\system\	atl.dll	3.0.8449.0	73,785	06-02-2000 08:11:00	0x5e871adf
d:\windows\system\	mfc30.dll	3.2.0.0	335,872	06-02-2000 08:11:00	0x14428034
d:\windows\system\	mfc40.dll	4.1.0.6140	933,888	06-02-2000 08:11:00	0x5cb9d29c
d:\windows\system\	mfc42.dll	6.0.8665.0	995,383	06-02-2000 08:11:00	0x0433dbda
d:\windows\system\	mfc42.map	-	797,548	03-06-2000 00:00:00	0xcdc35067
d:\windows\system\	mfc42.pdb	-	8,024,064	10-27-1999 00:00:00	0xa0ce1aaf
d:\windows\system\	mfc42d.dll	6.0.8665.0	929,844	10-27-1999 00:00:00	0xb9a57824
d:\windows\system\	mfc42d.map	-	758,192	10-27-1999 00:00:00	0x4df26cb8
d:\windows\system\	mfc42d.pdb	-	3,944,448	10-27-1999 00:00:00	0x15e15b2a
d:\windows\system\	mfcans32.dll	3.2.1.0	159,744	06-02-2000 08:11:00	0xeb0a9b16
d:\windows\system\	mfcd30.dll	3.2.0.0	69,632	06-02-2000 08:11:00	0x06145c19
d:\windows\system\	mfcd42d.dll	6.0.8665.0	274,485	10-27-1999 00:00:00	0xb2cf96b9
d:\windows\system\	mfcd42d.map	-	233,088	10-27-1999 00:00:00	0xfd0db4fc
d:\windows\system\	mfcd42d.pdb	-	2,052,096	10-27-1999 00:00:00	0x9f5c6b6a
d:\windows\system\	mfcn30.dll	3.2.0.0	36,864	06-02-2000 08:11:00	0x12bf966e
d:\windows\system\	mfcn42d.dll	6.0.8665.0	41,013	10-27-1999 00:00:00	0x73526128
d:\windows\system\	mfcn42d.map	-	55,273	10-27-1999 00:00:00	0x31102616
d:\windows\system\	mfcn42d.pdb	-	1,454,080	10-27-1999 00:00:00	0x42f12275
d:\windows\system\	mfco30.dll	3.2.0.0	151,552	06-02-2000 08:11:00	0x142ef39c
d:\windows\system\	mfco42d.dll	6.0.8665.0	798,773	10-27-1999 00:00:00	0x59dfe7ee
d:\windows\system\	mfco42d.map	-	826,034	10-27-1999 00:00:00	0x2e1d53fb
d:\windows\system\	mfco42d.pdb	-	4,395,008	10-27-1999 00:00:00	0xc36025d8
d:\windows\system\	mfcuia32.dll	3.0.0.0	24,576	06-02-2000 08:11:00	0xeadc42bd
d:\windows\system\	mfcuiw32.dll	3.0.0.0	24,576	06-02-2000 08:11:00	0x0cc7bbb3
d:\windows\system\	msvcirt.dll	6.1.8637.0	77,878	06-02-2000 08:11:00	0xd4e66e85
d:\windows\system\	msvcp50.dll	5.0.0.7022	643,072	06-02-2000 08:11:00	0x3d0f98ce
d:\windows\system\	msvcp60.dll	6.0.8168.0	401,462	06-02-2000 08:11:00	0x869e05c4
d:\windows\system\	msvcrt.dll	6.1.8637.0	290,869	06-02-2000 08:11:00	0x35d8b51b
d:\windows\system\	msvcrt.pdb	-	2,507,776	03-07-2000 00:00:00	0x57801f25
d:\windows\system\	msvcrt20.dll	2.11.0.0	274,432	06-02-2000 08:11:00	0x28d035d6
d:\windows\system\	msvcrt40.dll	4.22.0.0	344,064	06-02-2000 08:11:00	0x4ea25493
d:\windows\system\	msvcrtd.dll	6.0.8797.0	434,252	03-07-2000 00:00:00	0x192baed0



[Microsoft Windows 2000 5.1 Build 2250  English PRE]
d:\windows\system32\	atl.dll	3.0.8449.0	58,938	06-29-2000 01:36:04	0xca76e430
d:\windows\system32\	mfc40.dll	4.1.0.6140	924,432	06-30-2000 11:52:36	0xb48f251a
d:\windows\system32\	mfc40u.dll	4.1.0.6140	924,432	06-30-2000 11:52:38	0x6716c711
d:\windows\system32\	mfc42.dll	6.0.8665.0	995,383	06-30-2000 11:52:38	0xc144f970
d:\windows\system32\	mfc42u.dll	6.0.8665.0	995,384	06-29-2000 01:36:12	0xc477ff94
d:\windows\system32\	msvcirt.dll	6.1.8637.0	77,878	06-29-2000 01:36:18	0xb19c73fa
d:\windows\system32\	msvcp50.dll	5.0.0.7051	565,760	06-29-2000 01:36:18	0x964bd8bf
d:\windows\system32\	msvcp60.dll	6.0.8168.0	401,462	06-30-2000 11:53:00	0x10516cf0
d:\windows\system32\	msvcrt.dll	6.1.8637.0	295,000	01-26-2000 11:46:06	0x770c8856
d:\windows\system32\	msvcrt20.dll	2.12.0.0	253,952	06-30-2000 11:53:00	0xfacd6970
d:\windows\system32\	msvcrt40.dll	4.2000.0.6201	65,024	06-29-2000 01:36:18	0x6380d077


[Microsoft Windows 2000 5.1 Build 2250  English POST]
d:\windows\system32\	atl.dll	3.0.8449.0	58,938	06-29-2000 01:36:04	0xca76e430
d:\windows\system32\	mfc40.dll	4.1.0.6140	924,432	06-30-2000 11:52:36	0xb48f251a
d:\windows\system32\	mfc40u.dll	4.1.0.6140	924,432	06-30-2000 11:52:38	0x6716c711
d:\windows\system32\	mfc42.dll	6.0.8665.0	995,383	06-30-2000 11:52:38	0xc144f970
d:\windows\system32\	mfc42.map	-	797,548	03-06-2000 00:00:00	0xcdc35067
d:\windows\system32\	mfc42.pdb	-	8,024,064	10-27-1999 00:00:00	0xa0ce1aaf
d:\windows\system32\	mfc42d.dll	6.0.8665.0	929,844	10-27-1999 00:00:00	0xb9a57824
d:\windows\system32\	mfc42d.map	-	758,192	10-27-1999 00:00:00	0x4df26cb8
d:\windows\system32\	mfc42d.pdb	-	3,944,448	10-27-1999 00:00:00	0x15e15b2a
d:\windows\system32\	mfc42u.dll	6.0.8665.0	995,384	06-29-2000 01:36:12	0xc477ff94
d:\windows\system32\	mfcd42d.dll	6.0.8665.0	274,485	10-27-1999 00:00:00	0xb2cf96b9
d:\windows\system32\	mfcd42d.map	-	233,088	10-27-1999 00:00:00	0xfd0db4fc
d:\windows\system32\	mfcd42d.pdb	-	2,052,096	10-27-1999 00:00:00	0x9f5c6b6a
d:\windows\system32\	mfcn42d.dll	6.0.8665.0	41,013	10-27-1999 00:00:00	0x73526128
d:\windows\system32\	mfcn42d.map	-	55,273	10-27-1999 00:00:00	0x31102616
d:\windows\system32\	mfcn42d.pdb	-	1,454,080	10-27-1999 00:00:00	0x42f12275
d:\windows\system32\	mfco42d.dll	6.0.8665.0	798,773	10-27-1999 00:00:00	0x59dfe7ee
d:\windows\system32\	mfco42d.map	-	826,034	10-27-1999 00:00:00	0x2e1d53fb
d:\windows\system32\	mfco42d.pdb	-	4,395,008	10-27-1999 00:00:00	0xc36025d8
d:\windows\system32\	msvcirt.dll	6.1.8637.0	77,878	06-29-2000 01:36:18	0xb19c73fa
d:\windows\system32\	msvcp50.dll	5.0.0.7051	565,760	06-29-2000 01:36:18	0x964bd8bf
d:\windows\system32\	msvcp60.dll	6.0.8168.0	401,462	06-30-2000 11:53:00	0x10516cf0
d:\windows\system32\	msvcrt.dll	6.1.8637.0	295,000	01-26-2000 11:46:06	0x770c8856
d:\windows\system32\	msvcrt.pdb	-	2,507,776	03-07-2000 00:00:00	0x57801f25
d:\windows\system32\	msvcrt20.dll	2.12.0.0	253,952	06-30-2000 11:53:00	0xfacd6970
d:\windows\system32\	msvcrt40.dll	4.2000.0.6201	65,024	06-29-2000 01:36:18	0x6380d077
d:\windows\system32\	msvcrtd.dll	6.0.8797.0	434,252	03-07-2000 00:00:00	0x192baed0



[Microsoft Windows 2000 5.1 Build 2254  English PRE]
d:\windows\system32\	atl.dll	3.0.8449.0	58,938	07-28-2000 07:58:00	0x47a0d97f
d:\windows\system32\	mfc40.dll	4.1.0.6140	924,432	07-28-2000 07:58:10	0x703fcfb8
d:\windows\system32\	mfc40u.dll	4.1.0.6140	924,432	07-28-2000 07:58:10	0xea83929e
d:\windows\system32\	mfc42.dll	6.0.8665.0	995,383	07-28-2000 07:58:10	0x82b64aaf
d:\windows\system32\	mfc42u.dll	6.0.8665.0	995,384	07-28-2000 07:58:10	0x8e2787b6
d:\windows\system32\	msvcirt.dll	6.1.8637.0	77,878	07-28-2000 07:58:20	0x1d3e7f23
d:\windows\system32\	msvcp50.dll	5.0.0.7051	565,760	07-28-2000 07:58:20	0x0e270cd7
d:\windows\system32\	msvcp60.dll	6.0.8168.0	401,462	07-28-2000 07:58:20	0x91441e31
d:\windows\system32\	msvcrt.dll	6.1.8637.0	295,000	03-29-2000 16:26:00	0x770c8856
d:\windows\system32\	msvcrt20.dll	2.12.0.0	253,952	07-28-2000 07:58:20	0xb7efbc68
d:\windows\system32\	msvcrt40.dll	4.2000.0.6201	65,024	07-28-2000 07:58:20	0x816126a3

[Microsoft Windows 2000 5.1 Build 2254  English POST]
d:\windows\system32\	atl.dll	3.0.8449.0	58,938	07-28-2000 07:58:00	0x47a0d97f
d:\windows\system32\	mfc40.dll	4.1.0.6140	924,432	07-28-2000 07:58:10	0x703fcfb8
d:\windows\system32\	mfc40u.dll	4.1.0.6140	924,432	07-28-2000 07:58:10	0xea83929e
d:\windows\system32\	mfc42.dll	6.0.8665.0	995,383	07-28-2000 07:58:10	0x82b64aaf
d:\windows\system32\	mfc42.map	-	797,548	03-06-2000 00:00:00	0xcdc35067
d:\windows\system32\	mfc42.pdb	-	8,024,064	10-27-1999 00:00:00	0xa0ce1aaf
d:\windows\system32\	mfc42d.dll	6.0.8665.0	929,844	10-27-1999 00:00:00	0xb9a57824
d:\windows\system32\	mfc42d.map	-	758,192	10-27-1999 00:00:00	0x4df26cb8
d:\windows\system32\	mfc42d.pdb	-	3,944,448	10-27-1999 00:00:00	0x15e15b2a
d:\windows\system32\	mfc42u.dll	6.0.8665.0	995,384	07-28-2000 07:58:10	0x8e2787b6
d:\windows\system32\	mfcd42d.dll	6.0.8665.0	274,485	10-27-1999 00:00:00	0xb2cf96b9
d:\windows\system32\	mfcd42d.map	-	233,088	10-27-1999 00:00:00	0xfd0db4fc
d:\windows\system32\	mfcd42d.pdb	-	2,052,096	10-27-1999 00:00:00	0x9f5c6b6a
d:\windows\system32\	mfcn42d.dll	6.0.8665.0	41,013	10-27-1999 00:00:00	0x73526128
d:\windows\system32\	mfcn42d.map	-	55,273	10-27-1999 00:00:00	0x31102616
d:\windows\system32\	mfcn42d.pdb	-	1,454,080	10-27-1999 00:00:00	0x42f12275
d:\windows\system32\	mfco42d.dll	6.0.8665.0	798,773	10-27-1999 00:00:00	0x59dfe7ee
d:\windows\system32\	mfco42d.map	-	826,034	10-27-1999 00:00:00	0x2e1d53fb
d:\windows\system32\	mfco42d.pdb	-	4,395,008	10-27-1999 00:00:00	0xc36025d8
d:\windows\system32\	msvcirt.dll	6.1.8637.0	77,878	07-28-2000 07:58:20	0x1d3e7f23
d:\windows\system32\	msvcp50.dll	5.0.0.7051	565,760	07-28-2000 07:58:20	0x0e270cd7
d:\windows\system32\	msvcp60.dll	6.0.8168.0	401,462	07-28-2000 07:58:20	0x91441e31
d:\windows\system32\	msvcrt.dll	6.1.8637.0	295,000	03-29-2000 16:26:00	0x770c8856
d:\windows\system32\	msvcrt.pdb	-	2,507,776	03-07-2000 00:00:00	0x57801f25
d:\windows\system32\	msvcrt20.dll	2.12.0.0	253,952	07-28-2000 07:58:20	0xb7efbc68
d:\windows\system32\	msvcrt40.dll	4.2000.0.6201	65,024	07-28-2000 07:58:20	0x816126a3
d:\windows\system32\	msvcrtd.dll	6.0.8797.0	434,252	03-07-2000 00:00:00	0x192baed0
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\Debugger\bin\Core\src\tmplates\watch.txt ===
+	TemplateObject._Tr																		{...}
+	TemplateObject																			{...}
	TemplateObject._Tr.allocator															{...}
+	TemplateObject._Tr.key_compare															{...}
	TemplateObject._Tr.key_compare.std::binary_function<unsigned long, unsigned long, bool>	{...}
+	TemplateObject._Tr._Head																0x00000000
	TemplateObject._Tr._Head->_Left															CXX0030: Error: expression cannot be evaluated
	TemplateObject._Tr._Head->_Parent														CXX0030: Error: expression cannot be evaluated
	TemplateObject._Tr._Head->_Right														CXX0030: Error: expression cannot be evaluated
+	TemplateObject._Tr._Head->_Value														{...}
	TemplateObject._Tr._Head->_Value.first													CXX0030: Error: expression cannot be evaluated
+	TemplateObject._Tr._Head->_Value.second													{...}
	TemplateObject._Tr._Head->_Value.second.m_Type											CXX0030: Error: expression cannot be evaluated
	TemplateObject._Tr._Head->_Color														CXX0030: Error: expression cannot be evaluated
	TemplateObject._Tr._Multi																0 ''
	TemplateObject._Tr._Size																0
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\Debugger\bin\Core\src\tmplates\bug1.txt ===
#include <iostream>
#include <string>
#include <vector>

using namespace std;

#pragma warning (disable : 4786 )

typedef vector<string> VectorOfStrings;

static int parse_args( VectorOfStrings &Args, const string &ArgString);

void main(void)
{
	VectorOfStrings vs;
	string s("Tst1213 4 1");
	size_t counter;

	parse_args( vs, s );

	for( counter=0; counter<vs.size(); counter++)
	{
		cout << "Arg" << counter << " = " << vs[counter] << endl;
	}

}

static int parse_args( VectorOfStrings &Args, const string &ArgString)
{
	// contents removed...
	return 0;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\Debugger\bin\EditContinue\src\ecapp\ReadMe.txt ===
========================================================================
       MICROSOFT FOUNDATION CLASS LIBRARY : ecmfcapp
========================================================================


AppWizard has created this ecmfcapp application for you.  This application
not only demonstrates the basics of using the Microsoft Foundation classes
but is also a starting point for writing your application.

This file contains a summary of what you will find in each of the files that
make up your ecmfcapp application.

ecmfcapp.h
    This is the main header file for the application.  It includes other
    project specific headers (including Resource.h) and declares the
    CEcmfcappApp application class.

ecmfcapp.cpp
    This is the main application source file that contains the application
    class CEcmfcappApp.

ecmfcapp.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
	Developer Studio.

res\ecmfcapp.ico
    This is an icon file, which is used as the application's icon.  This
    icon is included by the main resource file ecmfcapp.rc.

res\ecmfcapp.rc2
    This file contains resources that are not edited by Microsoft 
	Developer Studio.  You should place all resources not
	editable by the resource editor in this file.

ecmfcapp.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

/////////////////////////////////////////////////////////////////////////////

For the main frame window:

MainFrm.h, MainFrm.cpp
    These files contain the frame class CMainFrame, which is derived from
    CMDIFrameWnd and controls all MDI frame features.

res\Toolbar.bmp
    This bitmap file is used to create tiled images for the toolbar.
    The initial toolbar and status bar are constructed in the
    CMainFrame class.  Edit this toolbar bitmap along with the
    array in MainFrm.cpp to add more toolbar buttons.

/////////////////////////////////////////////////////////////////////////////

AppWizard creates one document type and one view:

ecmfcappDoc.h, ecmfcappDoc.cpp - the document
    These files contain your CEcmfcappDoc class.  Edit these files to
    add your special document data and to implement file saving and loading
    (via CEcmfcappDoc::Serialize).

ecmfcappView.h, ecmfcappView.cpp - the view of the document
    These files contain your CEcmfcappView class.
    CEcmfcappView objects are used to view CEcmfcappDoc objects.

res\ecmfcappDoc.ico
    This is an icon file, which is used as the icon for MDI child windows
    for the CEcmfcappDoc class.  This icon is included by the main
    resource file ecmfcapp.rc.


/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named ecmfcapp.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

If your application uses MFC in a shared DLL, and your application is 
in a language other than the operating system's current language, you
will need to copy the corresponding localized resources MFC40XXX.DLL
from the Microsoft Visual C++ CD-ROM onto the system or system32 directory,
and rename it to be MFCLOC.DLL.  ("XXX" stands for the language abbreviation.
For example, MFC40DEU.DLL contains resources translated to German.)  If you
don't do this, some of the UI elements of your application will remain in the
language of the operating system.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\Debugger\Ee\coverage.txt ===
our ee suite specifically tests most operators. i call these
"targetted operators". other operators are used in the expressions
being evaluated, but they aren't the operator being tested. i call
these "incidental" operators. of course, targetted operators get
a lot more coverage than incidental operators. that is expected.
but the incidental operators get enough coverage that we should
consider creating tests for un-covered operators before enhancing
the coverage for incidental operators. that is the primary
reason i made this list: so we know what we have covered and how
much.

8^'   michma


targetted operators		meaning
-------------------		-------
&&				logical AND
=				assignment)
&=				bit-wise AND assignment
&				bit-wise AND
~				complement
casting				int, float, double, short, long, signed, unsigned
/				divide
==				equal to
>=				greater than or equal to
>				greater than
<=				less than or equal to
<<=				left-shift assignment
<<				left-shift
<				less than
-				subtract
-				unary minus
!=				not equal to
!				bit-wise NOT
||				logical	OR
|=				bit-wise OR assignment
|				bit-wise OR
--				decrement (post-fix only)
++				increment (pre-fix only)
+				add
?				boolean
%				remainder
%=				remainder assignment
>>=				right-shift assignment
>>				right-shift
*				mutliply
^				logical exclusive OR
^=				logical exclusive OR assignment

incidental operators	meaning
--------------------	-------
[]			subscript, including nested (i.e. a1[a2[i]]) and two dimensional (i.e. a[i1][i2])
*			dereference pointer
**			dereference pointer to pointer
()			function call
()			parentheses (order of operation)
->			access field of pointer to struct, including nested (i.e. v->f1->f2)
.			access field of static struct
().			access field of static struct returned by function
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\Debugger\Ee\todo.txt ===
from \\lang2\qaslm\src\cxx\can\cvscc.41\testsrc\sec5

NOTE: all tests at the root of this path are too trivial to worry about.


SUB-DIRECTORY 5_1
-----------------


p05085.c	superfluous class qualifiers	evaluate/call the following:
												pobj->a_class::a_class()
												pobj->a_class::~a_class()
												pobj->a_class::func()
												obj.a_class::a_class()
												obj.a_class::~a_class()
												obj.a_class::func()


p05126.c	destructor						evaluate/call the following:
												pobj->~a_class()
												obj.~a_class()


p05157.c	globally scoped enums			define:
												enum global_enum{x = 0};
												enum local_enum{x = 1};
											evaluate:
												::x, from local scope
											verify:
												::x refers to global_enum, not local_enum


p05158.c	nested classes					define:
												
												struct A {
													static int fA();
													struct B {
														static int fB();
														struct C {
															static int fC();
															struct D {
																static int fD();
															};
														};
													};
												};

												int A::fA() { return 1; }
												int A::B::fB() { return 2; }
												int A::B::C::fC() { return 3; }
												int A::B::C::D::fD() { return 4; }

												A			a;
												A::B		b;
												A::B::C		c;
												A::B::C::D	d;

											evaluate:
												a.fA()
												b.fB()
												c.fC()
												d.fD()


p05179.c	returning this pointer			define:
												class a_class
													{
													public:
														a_class *func(void){return this;}
													} obj;
													
											evaluate/call:
												obj.func()

											verify:
												obj.func() == &obj									
												type of obj.func() = a_class *


p05180.c	accessing types hidden			define:
			by other types
												class a_class	// global scope
													{
													int x;
													};

												class a_class	// local scope
													{
													int y;
													}

												::a_class obj;	// local scope

											verify:
												obj.x is accessible


p05181.c	parenthesized l-values			define:
												int x;
											verify:
												(x) can be assigned


p05182.c	:: and inheritance/statics		define:
												
												class base_class
													{
													public:
														static long x;
													};

												class derived_class : public base_class
													{
													public:
														static long y;
													} dobj;

												long base::x;
												long derived::y;

											verify:
												base_class::x can be assigned
												derived_class::y can be assigned
												derived_classs::y == dobj.y
												type of derived_class::y is long
												derived_class::x == dobj.x
												derived_class::x can be assigned
												type of derived_class::x is long


p05183.c	accessing types hidden			define:
			by non-type names					
												class x
													{
													public:
														static int m;
													};
													
												x::m = 1;
												
												int x = 0;		// local scope
												
											verify:
											
												x::m is accessible

												
SUB-DIRECTORY 5_10
------------------

												
p05151.c	equality of pointers			define:
			to member variables										
												struct a_struct
													{
													int m1;
													int m2;
													};

												int a_struct::*p1 = &a_struct::m1;
												int a_struct::*p2 = &a_struct::m2;

											verify:
												p1 == p2 returns FALSE
												p1 != p2 returns TRUE


p05152.c	equality of pointers			define:
			to member functions										
												struct a_struct
														{
														void func1() {}
														void func2() {}
														};

												void (a_struct::*p1)(void) = &a_struct::func1;
												void (a_struct::*p1)(void) = &a_struct::func2;

											verify:
												p1 == p2 returns FALSE
												p1 != p2 returns TRUE


p05330.c	type of result of != and		TODO: do we support the "bool" type?	
			== operators is bool			currently we return "int" as the type.


p05331.c	relational operators have		verify:
			higher precedence than				1 != 2 >= 1
			equality operators						parses as 
												1 != (2 >= 1)
												
												
p05332.c	implicit conversion of			define:
			enums to numeric types				enum enum_type{x = 1, y = 2};
			by equality operators				enum_type enum_var1 = x;
												enum_type enum_var2 = y;										
											evaluate:
												enum_var1 == enum_var2
												enum_var1 != enum_var2


p05333.c	use equality operators			define:
			on pointers to functions			void func1() {}          
			and pointers to variables			void func2() {}
												void (*pfunc1)() = func;            
												void (*pfunc2)() = func;
												char data[2];
												char *pdata0 = &data[0];
												char *pdata1 = &data[1];
											verify:
												pfunc1 != pfunc2 == TRUE
												pfunc1 == pfunc2 == FALSE
												pdata0 != pdata1 == TRUE
												pdata0 == pdata1 == FALSE


p05334.C	use equality operators to		define:
			compare pointer to members			class a_class
			to 0.									{
													public:
														int m_i;
													};
											verify:
												&a_class::m_i == 0 is allowed
												&a_class::m_i != 0 is allowed


SUB-DIRECTORY 5_11
------------------


p05337.c	equality operator has			verify:
			higher precedence than				1 & 3 == 1
			bit-wise AND operator					parses as
												1 & (3 == 1)


p05338.c	implicit conversion of			define:
			enums to numeric types				enum{zero, one, two} enum_var = one;
			by bit-wise AND operator		verify:
												1 & enum_var == 1

			also, test bit-wise AND			verify:
			between a number and its			1 & ~1 == 0
			complement
			
			
SUB-DIRECTORY 5_12
------------------


p05340.c	implicit conversion of			define:
			enums to numeric types				enum{zero, one, two} enum_var = two;
			by bit-wise 0R operator			verify:
												1 ^ enum_var == 3

			also, test bit-wise OR			verify:
			between a number and itself			1 ^ 1 == 0


p05341.c	bit-wise AND operator			verify:
			has higher precedence				3 ^ 2 & 1
			than bit-wise exclusive					parses as
			OR operator							3 ^ (2 & 1)
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\Debugger\Lfn\readme.txt ===
How to run the DBG Filename test
				================================

This runs just like any other CAFE v3 test. There are two DLLs checked into
WinRel and WinDebug directories. The .STF files are in the ..\v3\filename (root)
directory. All the sources and projects that are necessary for this test to run is in ..\WinDebug\src
and ..\WinRel\src directories.

This is a generic test that driven by a data file named 'Names.TXT'. This contains
all filenames that need to be tested. You can add interesting file/path names to this file. This file is
supposed to be a growing file. If one finds a interesting case please add that case to this file. This
way every time this test is run your case is executed automatically. Note that a separate Names.Txt
files are checked-in to the ..\Winrel\src and ..\windebug\src directories. So, if you want your case to
be executed in both debug and release versions please add that to both .txt files. This file can not
contain empty lines. You can use the '#' in the first column to make a particular line a comment line.
See 'Names.TXT' for examples.

For every filename in the 'Names.TXT' file, the following tests were performed:

1) Create a new appwizz app with one source file with the specified name.
	If a leading pathname exist, it will create this new project in this specified path.
2) Build project
3) Set breakpoints on the file with the specified filename.
4) Debug.Go
5) Check Registers window test
6) Check Callstack window test
7) Set stepping mode
8) Quickwatch test
9) Memory test
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\Debugger\Lfn\bin\src\names.txt ===
##################################################
# A '#' character in the first column make the line a comment line.
##  <comment/example> A simple filename test
##################################################
file2
##################################################
##  <comment/example> A simple path/filename test
##################################################
dir1\dir2\file2
####################################################################################
##	<comment> This section contains filenames that produced bugs in the product.
##		These are duplicated from the sections bellow for ease of use.
####################################################################################
#<bug>#dir 1\dir 2\file2		bug# 10095
#<bug>#dir 1\dir 2\"file 2"		bug# 10095
#<bug>#"file2,"			bug# 10161
#<bug>#"fi,le2"			bug# 10161
#<bug>#",file2"			bug# 10161
#<bug>#"filr2{}"			bug# 10161
#<bug>#"fi{l}e2"			bug# 10161
#<bug>#"{}file2"			bug# 10161
#<bug>#h܂Ȃ2Ah		bug# 10161
#<bug>#h܂Ȃ2,h		bug# 10161
#<bug>#hƁA΂2h		bug# 10161
#<bug>#hA2h			bug# 10161
#<bug>#"o  p"			bug# 10161
#<bug>#"{}e2"			bug# 10161
#<bug>#"{pӂ2"		bug# 10161
####################################
##  <comment> Special character tests
####################################
filr2=
fi=le2
=file2
filr2;
fi;le2
;file2
#<bug>#"filr2,"			Bug# 10161
#<bug>#"fi,le2"			Bug# 10161
#<bug>#",file2"			Bug# 10161
filr2+
fi+le2
+file2
filr2&
fi&le2
&file2
filr2#
fi#le2
##########################################################################################
##file2         '#' This will not be tested since # in column 1 is taken as a comment line
##########################################################################################
filr2^
fi^le2
^file2
filr2[]
fi[l]e2
[]file2
#<bug>#"filefilr2()"			Bug# 10161
#<bug>#"fi(l)e2"			Bug# 10161
#<bug>#"()file2"			Bug# 10161
filr2!
fi!le2
!file2
filr2`
fi`le2
`file2
filr2@
fi@le2
@file2
filr2_
fi_le2
_file2
filr2-
fi-le2
-file2
filr2'
fi'le2
'file2
filr2%
fi%le2
%file2
filr2$
fi$le2
$file2
filr2~
fi~le2
~file2
filr2.file2
fi.le2.fil.e2
#<by design>#.file2			Doesn't work /w starting /w '.'
"file 2"
"file 2 2"
"[ file2 ]"
#########################################
## <comment> Special/interesting filenames
#########################################
'file2'
`file2`
file2.exe
file2.com
file2.cmd
file2.bat
file2.sys
file2.drv
file2.c
file2.cpp
file2.h
file2.bsc
file2.pdb
file2.mak
file2.rc
################################
## <comment> Long filename tests
################################
ThisIsaLongFilename
"This is a long filename with spaces"
ThisIsaLong[Filename]
'ThisIsaLongFilename'
ThisIsaLongFilename
NewPolyDraw\step0\file2
##############################
##  <comment> Long path tests
##############################
dir1\dir2\dir3\dir4\dir5\dir6\dir7\file2
dir1\dir2\dir3\dir4\dir5\dir6\dir7\dir1\dir2\dir3\dir4\dir5\dir6\dir7\file2
############################################
##	<comment> Some High ASCII characters
############################################
fille__A
_d+__
_d+__
_______________
_______
_++++++++-
---+---++
-+-+--++++++++
___
_;PP


~zy
~zy\
 \\zy\
##################################
## <comment> Japanese filenames
##################################
#܂Ȃ
#킭炟
#߂
#Q
#߁킟Q
#=Â߂2
#filr2;
#fiG2
#;2
#h܂Ȃ2Ah
#h܂Ȃ2,h
#hƁA΂2h
#hA2h
#2+
#{2
#+ႄ2
#킻&
#2
#&ӂaaa2
#aaa2#
#aaa2
#<by design>#2         '#' This will not be tested since # in column 1 is taken as a comment line
#^
#fiO
#^
#uv
#[]您
#[]
#<bug>#"a@ӂQh	bug# 10095
#<bug>#"o  p"			Bug# 10161
#<bug>#"{}e2"			Bug# 10161
#<bug>#"{pӂ2"		Bug# 10161
#<bug>#Ƃۂ()			Bug# 10161
#<bug>#fiilje			Bug# 10161
#<bug>#(j2				Bug# 10161
#rje2!
#fI傧
#!fi2
#ÂÂÂ2`
#܂e2
#eQ2
#ӂ
#fi@
#@le2
#₭Q
#fi_ӂ
#_Q2
#[
#fi-Q
#[ǂǂ
#܂΂f
#fi'΂
#'Â2
#ς烔
#fiӂ
#%Â
#Q
#fi$łꂤ
#
#ӂہP
#fi~ۂ
#~
#B
#ۂBBꂤB͂ӂ
#<by design>#.ӂ			Doesn't work /w starting /w '.'
#<bug>#h܂@Qh		 bug# 10095
#<bug>#hWX@@h	 bug# 10095
#<bug>#[ ۂ ]			 bug# 10095
##########################################
## <comment> Special/interesting filenames
##########################################
#ff
#eꂤe
#ӂ.exe
#ނ.com
#܂Ȃ.cmd
#.bat
#.sys
#ۂ.drv
#ӂ.c
#ӂQ.cpp
#.h
#ۂ.bsc
#.pdb
#.mak
#.rc
#################################
## <comment> Long filename tests
#################################
ꂾۂۂԂłقۂ
#<bug>#hꂪیꂧ@΂́@ӂۂǂ@p܂@͂ςh	 bug# 10095
#<bug>#h[@Kp@]h				bug# 10095
'ӂۂق'
##############################
##  <comment> Long path tests
##############################
ÂPÂQÂRSÂTUۂVۂW
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\Debugger\SdiSniff\Bin\readme.txt ===
What does SDI sniff do?


	SDI sniff accept the following params (in SDI.stf file):
-BPTABLE=<sdibp.def>	name of the connection & breakpoint definition file
-APPNAME=<ODBCMT>	name of the C++ project (supposed to be find in $(APPNAME) subdirectory of this directory) to work on
-APPCMD=<servername /r>	command line parameters for $(APPNAME) app for debug session in test#4
-DEBUGCOUNT=<1>		number of debug sessions in test#4
-LEGO=<0>		bool switch to disable test#4 (enabled by default)


	The connection & breakpoint definition file (SDIBP.DEF by default) defines miltiple connections to the SQL datasources. Refer to the default DIBP.DEF for the syntax description:
		-file datasource (if prepended by DSN=). Its DSN file is built on the fly from its description, or
		-registry datasource (its HKCU\Software\ODBC entries must be registered separately)
	Each connection consist of one line connection description & multiple lines of breakpoint descriptions. Each breakpoint defines:
		-name of stored proc (or table/trigger) where BP shld be set
		-line text on which BP shld be set
		-number of times BP shld be hit during each debug session of test#4

1. Add a database project to the C++ project
	- Open the C++ project specified by $(APPNAME) 
	- File.New.Project Workspace.Database "$(APPNAME)1" add to existing workspace
	- For each connection from connection definition file:
		-insert.New Connection (from .DSN file created on the fly or from registry Data Source)
		-fill the Login dialog appropriately
	- For each BP in connection definition file:
		-open its Stored Proc/Trigger from Data View
		-find the text BP shld be set on, then set BP
		-if BP shld be hit 0 times - disable it
	- Save & Close the workspace

2. Verify SQL breakpoints & build the C++ project
	- Reopen the workspace & reenter passwords for data connections if necessary
	- Verify the BPs entered in test#1 still exists
	- Rebuild C++ project
	- Close the workspace

3. Direct Database Debuging
	- Reopen the workspace & reenter passwords for data connections if necessary
	- For every Stored Proc in which BPs were entered in test#1 (including disabled BPs):
		-open SP from Data View
		-start DDD & step twice
		-run & verify the BP was hit
		-debug.Stop Debygging
	- Close the workspace

4. Mixed C++/SQL debugging
	- Reopen the workspace & reenter passwords for data connections if necessary
	- Set the active project to C++ project
	- Set Debug.Command line params to $(APPCMD)
	- For $(DEBUGCOUNT) number of times:
		-debug.Go
		-check the current IP source line when any BP hit & confirm one of SQL BPs entered in test#1 was hit
		-continue Debug.Go until all BPs from test#1 were hit
		-debug.Stop Debugging
	- Close the workspace
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\Debugger\SdiSniff\Bin\loopnt.src\chriskoz.txt ===
2
DSN=TESTchriskoz0;DATABASE=PUBS;UID=SA;PWD=
dbo.looptest 0, 3
DSN=TESTchriskoz0;DATABASE=PUBS;UID=SA;PWD=
sp_update_employee
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\Debugger\SdiSniff\Bin\loopnt.src\chriskoz1.txt ===
2
DSN=TESTchriskoz1;DATABASE=PUBS;UID=SA;PWD=
dbo.looptest 0, 3
DSN=TESTchriskoz1;DATABASE=PUBS;UID=SA;PWD=
sp_update_employee
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\Debugger\SdiSniff\Bin\loopnt.src\simple.txt ===
1
DRIVER={SQL Server};SERVER=chriskoz0;DATABASE=PUBS;UID=SA;PWD=
dbo.testp
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ENT\DataSniff\Bin\readme.txt ===
What does Data sniff do?


	Data sniff accept the following params (in data.stf file):
-DSN=<sql.def>		name of the connection definition file
-DESIGNTABLE=<sales>	name of the table which would be created & modified in Designers test
-DESIGNERS=<0>		bool switch to enable the Designers test (disabled by default)

	The connection definition file (SQL.DEF by default) defines miltiple connections to the SQL datasources. Refer to the default SQL.DEF for the syntax description. Each connection can be:
		-file datasource (if prepended by DSN=). Its DSN file is built on the fly from its description, or
		-registry datasource (its HKCU\Software\ODBC entries must be registered separately)
	Each connection consist of one line connection description & multiple lines of objecsts descriptions of types:
		TABLE - table name & its owner
		TRIGGER - trigger name & the table it's on
		DIAGRAM - diagram name & the tables in it
		VIEW - view name & its owner
		ADHOC - file name of the ODBC query (shld have SQL extention)
		PROC - stored procedure & its parameters for execution
		NEWPROC - name of the new stored procedure, its parameters & file name where its text resides (shld be TSQ extention)



1. Create a database project
	- File.New.Project Workspace.Database "Data Base Proj"
	- For each connection from connection definition file:
		-insert.New Connection (from .DSN file created on the fly or from registry Data Source)
		-fill the Login dialog appropriately
	- Save & Close the workspace

2. Designers test
	- Open the workspace & reenter password if necessary
	- Open & execute the SQL script specified by -DESIGNTABLE subsuite param (sales.sql by default, .SQL extention is always assumed). The script should create & populate the correct table which is the subject of this test: default name is sales$(MACHINE) - look into sales.sql file to see what the safe script shld do.
2a - new diagram:
	- Create new diagram
	- Drag the created table (default sales$(MACHINE)) onto its surface
	- Expand the table grid to show the column properties
	- Add new column of type char
	- Save the new diagram (default name "sales$(MACHINE) diagram")
	- Verify the Data View displays the column added to the table
2b - new view:
	- Create new view (the query document opens)
	- Set focus on the Diagram pane
	- Drag the table (default sales$(MACHINE)) onto Diagram pane
	- Select all (*) column for the query
	- Run the query & verify the number of rows is the same as the amount of data populated the table from SQL script
	- Save the new view (default name "sales$(MACHINE) view")
	- Verify the Data View displays the new view
2c - new query:
	- Create new local query (the query document opens)
	- Set focus on the Diagram pane
	- Drag the table (default sales$(MACHINE)) onto Diagram pane
	- Select all (*) column for the query
	- Add GROUP BY clause to the query
	- Run the query & verify it displays the number of records which populated the table from SQL script
	- Save the local (default name "sales$(MACHINE) query")
	- Verify the query was added to the File View
	- Save & Close the workspace

3. Verify Non-text objects (TABLE, DIAGRAM, VIEW)
	- Open the workspace & reenter password if necessary
	- For each object in connection definition file:
		-find the object in Data View & check its properties
		-open the object as a default document (query from tables & views)
		-for DIAGRAM: check the existance of tables specified in object description
		-for TABLE & VIEW:
			change the query by adding "Group by" option
			verify the syntax of the new query
			run the query (TODO & verify the result is the number of original rows)
	- Close the workspace

4. Verify text objects (PROC, NEWPROC, TRIGGER, ADHOC)
	- Open the workspace & reenter password if necessary
	- For each object in connection definition file:
		-find the object in Data View & check its properties
		-for existing objects (PROC, TRIGGER) open the object as a text document
		-for non-existing objects (NEWPROC, ADHOC)
			delete the old object from Data View if exists in database
			open the script file (.SQL or .TSQ) as specified in object description
			run the script file (in NEWPROC case, it shld create an SP in Data View)
		-for stored procedures (PROC & NEWPROC) run it with the params specified in object description
	- Close the workspace
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ParamHlp\Sniff\Bin\baseln\WIN32API.txt ===
__WSAFDIsSet
_hread
_hwrite
_lclose
_lcreat
_llseek
_lopen
_lread
_lwrite
AbnormalTermination
AbortDoc
AbortPath
AbortPrinter
AbortSystemShutdown
ACCELERATEABSDI
accept
AcceptEx
AccessCheck
AccessCheckAndAuditAlarm
AccessCheckByType
AccessCheckByTypeAndAuditAlarm
AccessCheckByTypeResultList
AccessCheckByTypeResultListAndAuditAlarm
acmDriverAdd
acmDriverClose
acmDriverDetails
acmDriverEnum
acmDriverID
acmDriverMessage
acmDriverOpen
acmDriverPriority
acmDriverRemove
acmFilterChoose
acmFilterDetails
acmFilterEnum
acmFilterTagDetails
acmFilterTagEnum
acmFormatChoose
acmFormatDetails
acmFormatEnum
acmFormatSuggest
acmFormatTagDetails
acmFormatTagEnum
acmGetVersion
acmMetrics
acmStreamClose
acmStreamConvert
acmStreamMessage
acmStreamOpen
acmStreamPrepareHeader
acmStreamReset
acmStreamSize
acmStreamUnprepareHeader
AcsLan
ActivateKeyboardLayout
AddAccessAllowedAce
AddAccessAllowedAceEx
AddAccessAllowedObjectAce
AddAccessDeniedAce
AddAccessDeniedAceEx
AddAccessDeniedObjectAce
AddAce
AddAtom
AddAuditAccessAce
AddAuditAccessAceEx
AddAuditAccessObjectAce
AddFontResource
AddForm
AddJob
AddMonitor
AddPort
AddPrinter
AddPrinterConnection
AddPrinterDriver
AddPrinterDriverEx
AddPrintProcessor
AddPrintProvidor
AdjustTokenGroups
AdjustTokenPrivileges
AdjustWindowRect
AdjustWindowRectEx
ADsBuildEnumerator
ADsBuildVarArrayInt
ADsBuildVarArrayStr
ADsEnumerateNext
ADsFreeEnumerator
ADsGetLastError
ADsGetObject
ADsOpenObject
ADsSetLastError
AdvancedDocumentProperties
AllocateAndInitializeSid
AllocateLocallyUniqueId
AllocConsole
AlphaBlend
AngleArc
AnimatePalette
AnimateWindow
AnyPopup
AppendMenu
Arc
ArcTo
AreAllAccessesGranted
AreAnyAccessesGranted
AreFileApisANSI
ArrangeIconicWindows
AssignProcessToJobObject
AttachThreadInput
auxGetDevCaps
auxGetNumDevs
auxGetVolume
auxOutMessage
auxSetVolume
AVIBuildFilter
AVIClearClipboard
AVIFileAddRef
AVIFileCreateStream
AVIFileEndRecord
AVIFileExit
AVIFileGetStream
AVIFileInfo
AVIFileInit
AVIFileOpen
AVIFileReadData
AVIFileRelease
AVIFileWriteData
AVIGetFromClipboard
AVIMakeCompressedStream
AVIMakeFileFromStreams
AVIMakeStreamFromClipboard
AVIPutFileOnClipboard
AVISave
AVISaveOptions
AVISaveOptionsFree
AVISaveV
AVIStreamAddRef
AVIStreamBeginStreaming
AVIStreamCreate
AVIStreamEndStreaming
AVIStreamFindSample
AVIStreamGetFrame
AVIStreamGetFrameClose
AVIStreamGetFrameOpen
AVIStreamInfo
AVIStreamLength
AVIStreamOpenFromFile
AVIStreamRead
AVIStreamReadData
AVIStreamReadFormat
AVIStreamRelease
AVIStreamSampleToTime
AVIStreamSetFormat
AVIStreamStart
AVIStreamTimeToSample
AVIStreamWrite
AVIStreamWriteData
BackupEventLog
BackupRead
BackupSeek
BackupWrite
Beep
BeginDeferWindowPos
BeginPaint
BeginPath
BeginUpdateResource
bind
BindImage
BindImageEx
BindMoniker
BitBlt
BringWindowToTop
BroadcastSystemMessage
BuildCommDCB
BuildCommDCBAndTimeouts
BuildDisplayTable
BuildExplicitAccessWithName
BuildSecurityDescriptor
BuildTrusteeWithName
BuildTrusteeWithSid
CallMsgFilter
CallNamedPipe
CallNextHookEx
CallWindowProc
CancelDC
CancelDeviceWakeupRequest
CancelIo
CancelOverlappedAccess
CancelWaitableTimer
capCreateCaptureWindow
capGetDriverDescription
CascadeWindows
CertAddCertificateContextToStore
CertAddCRLContextToStore
CertAddCTLContextToStore
CertAddEncodedCertificateToStore
CertAddEncodedCRLToStore
CertAddEncodedCTLToStore
CertAddSerializedElementToStore
CertAlgIdToOID
CertCloseStore
CertCompareCertificate
CertCompareCertificateName
CertCompareIntegerBlob
CertComparePublicKeyInfo
CertCreateCertificateContext
CertCreateCRLContext
CertCreateCTLContext
CertDeleteCertificateFromStore
CertDeleteCRLFromStore
CertDeleteCTLFromStore
CertDuplicateCertificateContext
CertDuplicateCRLContext
CertDuplicateCTLContext
CertDuplicateStore
CertEnumCertificateContextProperties
CertEnumCertificatesInStore
CertEnumCRLContextProperties
CertEnumCTLContextProperties
CertEnumCTLsInStore
CertFindAttribute
CertFindCertificateInStore
CertFindCTLInStore
CertFindExtension
CertFindRDNAttr
CertFindSubjectInCTL
CertFreeCertificateContext
CertFreeCRLContext
CertFreeCTLContext
CertGetCertificateContextProperty
CertGetCRLContextProperty
CertGetCRLFromStore
CertGetCTLContextProperty
CertGetIntendedKeyUsage
CertGetIssuerCertificateFromStore
CertGetSubjectCertificateFromStore
CertIsRDNAttrsInCertificateName
CertNameToStr
CertOIDToAlgId
CertOpenStore
CertOpenSystemStore
CertRDNValueToStr
CertSaveStore
CertSerializeCertificateStoreElement
CertSerializeCRLStoreElement
CertSerializeCTLStoreElement
CertSetCertificateContextProperty
CertSetCRLContextProperty
CertSetCTLContextProperty
CertStrToName
CertVerifyCRLRevocation
CertVerifyCRLTimeValidity
CertVerifyCTLUsage
CertVerifyRevocation
CertVerifySubjectCertificateContext
CertVerifyTimeValidity
CertVerifyValidityNesting
ChangeClipboardChain
ChangeDisplaySettings
ChangeIdleRoutine
ChangeServiceConfig
ChangeServiceConfig2
char_array_from_ndr
char_from_ndr
CharLower
CharLowerBuff
CharNext
CharNextExA
CharPrev
CharPrevExA
CharToOem
CharToOemBuff
CharUpper
CharUpperBuff
CheckDlgButton
CheckMenuItem
CheckMenuRadioItem
CheckParameters
CheckParms
CheckRadioButton
CheckSumMappedFile
ChildWindowFromPoint
ChildWindowFromPointEx
ChooseColor
ChooseFont
ChoosePixelFormat
Chord
ClearCommBreak
ClearCommError
ClearEventLog
ClientToScreen
ClipCursor
CloseClipboard
CloseDesktop
CloseDriver
CloseEnhMetaFile
CloseEventLog
CloseFigure
CloseHandle
CloseIMsgSession
ClosePrinter
CloseRaw
CloseServiceHandle
closesocket
CloseWindow
CloseWindowStation
CLSIDFromProgID
CLSIDFromString
cmc_act_on
cmc_free
cmc_list
cmc_logoff
cmc_logon
cmc_look_up
cmc_query_configuration
cmc_read
cmc_send
cmc_send_documents
CoAddRefServerProcess
CoBuildVersion
CoCopyProxy
CoCreateFreeThreadedMarshaler
CoCreateGuid
CoCreateInstance
CoCreateInstanceEx
CoDisconnectObject
CoDosDateTimeToFileTime
CoFileTimeNow
CoFileTimeToDosDateTime
CoFreeAllLibraries
CoFreeLibrary
CoFreeUnusedLibraries
CoGetCallContext
CoGetClassObject
CoGetCurrentProcess
CoGetInstanceFromFile
CoGetInstanceFromIStorage
CoGetInterfaceAndReleaseStream
CoGetMalloc
CoGetMarshalSizeMax
CoGetStandardMarshal
CoGetTreatAsClass
CoImpersonateClient
CoInitialize
CoInitializeEx
CoInitializeSecurity
CoIsHandlerConnected
CoIsOle1Class
CoLoadLibrary
CoLockObjectExternal
CoMarshalHresult
CoMarshalInterface
CoMarshalInterTheadInterfaceInStream
CombineRgn
CombineTransform
CommandLineToArgvW
CommConfigDialog
CommDlgExtendedError
CompareFileTime
CompareString
ConfigurePort
connect
ConnectNamedPipe
ConnectToPrinterDlg
ContinueDebugEvent
ControlService
ConvertAccessToSecurityDescriptor
ConvertDefaultLocale
ConvertSecurityDescriptorToAccess
ConvertSecurityDescriptorToAccessNamed
ConvertThreadToFiber
ConvertToAutoInheritPrivateObjectSecurity
CopyAcceleratorTable
CopyCursor
CopyEnhMetaFile
CopyFile
CopyFileEx
CopyIcon
CopyImage
CopyMemory
CopyRect
CopySid
CoQueryAuthenticationServices
CoQueryClientBlanket
CoQueryProxyBlanket
CoRegisterChannelHook
CoRegisterClassObject
CoRegisterMallocSpy
CoRegisterMessageFilter
CoRegisterPSClsid
CoRegisterSurrogate
CoReleaseMarshalData
CoReleaseServerProcess
CoResumeClassObjects
CoRevertToSelf
CoRevokeClassObject
CoRevokeMallocSpy
CoSetProxyBlanket
CoSuspendClassObjects
CoSwitchCallContext
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
CoTreatAsClass
CoUninitialize
CoUnmarshalHresult
CoUnmarshalInterface
CountClipboardFormats
CreateAcceleratorTable
CreateAntiMoniker
CreateBindCtx
CreateBitmap
CreateBitmapIndirect
CreateBrushIndirect
CreateCaret
CreateClassMoniker
CreateCompatibleBitmap
CreateCompatibleDC
CreateConsoleScreenBuffer
CreateCursor
CreateDataAdviseHolder
CreateDataCache
CreateDC
CreateDesktop
CreateDialogIndirectParam
CreateDialogParam
CreateDIBitmap
CreateDIBPatternBrush
CreateDIBPatternBrushPt
CreateDIBSection
CreateDirectory
CreateDirectoryEx
CreateDiscardableBitmap
CreateDispTypeInfo
CreateEditableStream
CreateEllipticRgn
CreateEllipticRgnIndirect
CreateEnhMetaFile
CreateErrorInfo
CreateEvent
CreateFiber
CreateFile
CreateFileMapping
CreateFileMoniker
CreateFont
CreateFontIndirect
CreateGenericComposite
CreateHalftonePalette
CreateHardLink
CreateHatchBrush
CreateIC
CreateIcon
CreateIconFromResource
CreateIconFromResourceEx
CreateIconIndirect
CreateILockBytesOnHGlobal
CreateIoCompletionPort
CreateIProp
CreateItemMoniker
CreateJobObject
CreateMailslot
CreateMappedBitmap
CreateMDIWindow
CreateMenu
CreateMutex
CreateNamedPipe
CreateOleAdviseHolder
CreatePalette
CreatePatternBrush
CreatePen
CreatePenIndirect
CreatePipe
CreatePointerMoniker
CreatePolygonRgn
CreatePolyPolygonRgn
CreatePopupMenu
CreatePrivateObjectSecurity
CreatePrivateObjectSecurityEx
CreateProcess
CreateProcessAsUser
CreatePropertySheetPage
CreateRectRgn
CreateRectRgnIndirect
CreateRemoteThread
CreateRoundRectRgn
CreateScalableFontResource
CreateSemaphore
CreateService
CreateSolidBrush
CreateStatusWindow
CreateStdDispatch
CreateStreamOnHGlobal
CreateTable
CreateTapePartition
CreateThread
CreateToolbarEx
CreateTypeLib
CreateUpDownControl
CreateWaitableTimer
CreateWindow
CreateWindowEx
CreateWindowStation
CryptAcquireContext
CryptCreateHash
CryptDecodeMessage
CryptDecodeObject
CryptDecrypt
CryptDecryptAndVerifyMessageSignature
CryptDecryptMessage
CryptDeriveKey
CryptDestroyHash
CryptDestroyKey
CryptEncodeObject
CryptEncrypt
CryptEncryptMessage
CryptEnumOIDFunction
CryptExportKey
CryptExportPublicKeyInfo
CryptExportPublicKeyInfoEx
CryptFreeOIDFunctionAddress
CryptGenKey
CryptGenRandom
CryptGetDefaultOIDDllList
CryptGetDefaultOIDFunctionAddress
CryptGetHashParam
CryptGetKeyParam
CryptGetMessageCertificates
CryptGetMessageSignerCount
CryptGetOIDFunctionAddress
CryptGetOIDFunctionValue
CryptGetProvParam
CryptGetUserKey
CryptHashCertificate
CryptHashData
CryptHashMessage
CryptHashPublicKeyInfo
CryptHashSessionKey
CryptHashToBeSigned
CryptImportKey
CryptImportPublicKeyInfo
CryptImportPublicKeyInfoEx
CryptInitOIDFunctionSet
CryptInstallOIDFunctionAddress
CryptMsgCalculateEncodedLength
CryptMsgClose
CryptMsgControl
CryptMsgCountersign
CryptMsgCountersignEncoded
CryptMsgEncodeAndSignCTL
CryptMsgGetAndVerifySigner
CryptMsgGetParam
CryptMsgOpenToDecode
CryptMsgOpenToEncode
CryptMsgSignCTL
CryptMsgUpdate
CryptMsgVerifyCountersignatureEncoded
CryptRegisterDefaultOIDFunction
CryptRegisterOIDFunction
CryptReleaseContext
CryptSetHashParam
CryptSetKeyParam
CryptSetOIDFunctionValue
CryptSetProvider
CryptSetProvParam
CryptSignAndEncodeCertificate
CryptSignAndEncryptMessage
CryptSignCertificate
CryptSignHash
CryptSignMessage
CryptUnregisterDefaultOIDFunction
CryptUnregisterOIDFunction
CryptVerifyCertificateSignature
CryptVerifyDetachedMessageHash
CryptVerifyDetachedMessageSignature
CryptVerifyMessageHash
CryptVerifyMessageSignature
CryptVerifySignature
data_from_ndr
data_into_ndr
data_size_ndr
DceErrorInqText
DdeAbandonTransaction
DdeAccessData
DdeAddData
DdeClientTransaction
DdeCmpStringHandles
DdeConnect
DdeConnectList
DdeCreateDataHandle
DdeCreateStringHandle
DdeDisconnect
DdeDisconnectList
DdeEnableCallback
DdeFreeDataHandle
DdeFreeStringHandle
DdeGetData
DdeGetLastError
DdeImpersonateClient
DdeInitialize
DdeKeepStringHandle
DdeNameService
DdePostAdvise
DdeQueryConvInfo
DdeQueryNextServer
DdeQueryString
DdeReconnect
DdeSetQualityOfService
DdeSetUserHandle
DdeUnaccessData
DdeUninitialize
DebugActiveProcess
DebugBreak
DecryptFile
DefDlgProc
DefDriverProc
DeferWindowPos
DefFrameProc
DefineDosDevice
DefMDIChildProc
DefScreenSaverProc
DefWindowProc
DeinitMapiUtil
DeleteAce
DeleteAtom
DeleteCriticalSection
DeleteDC
DeleteEnhMetaFile
DeleteFiber
DeleteFile
DeleteForm
DeleteMenu
DeleteMonitor
DeleteObject
DeletePort
DeletePrinter
DeletePrinterConnection
DeletePrinterData
DeletePrinterDataEx
DeletePrinterDriver
DeletePrinterDriverEx
DeletePrinterKey
DeletePrintProcessor
DeletePrintProvidor
DeleteService
DeregisterEventSource
DeregisterIdleRoutine
DescribePixelFormat
DestroyAcceleratorTable
DestroyCaret
DestroyCursor
DestroyIcon
DestroyMenu
DestroyPrivateObjectSecurity
DestroyPropertySheetPage
DestroyWindow
DeviceCapabilities
DeviceIoControl
DialogBoxIndirectParam
DialogBoxParam
DisableThreadLibraryCalls
DisconnectNamedPipe
DispatchMessage
DispGetIDsOfNames
DispGetParam
DispInvoke
DlgDirList
DlgDirListComboBox
DlgDirSelectComboBoxEx
DlgDirSelectEx
DllCanUnloadNow
DllGetClassObject
DocumentProperties
DocumentPropertySheets
DoDragDrop
DosDateTimeToFileTime
DosDateTimeToVariantTime
double_array_from_ndr
double_from_ndr
DPtoLP
DragAcceptFiles
DragDetect
DragFinish
DragQueryFile
DragQueryPoint
DrawAnimatedRects
DrawCaption
DrawDibBegin
DrawDibChangePalette
DrawDibClose
DrawDibDraw
DrawDibEnd
DrawDibGetBuffer
DrawDibGetPalette
DrawDibOpen
DrawDibProfileDisplay
DrawDibRealize
DrawDibSetPalette
DrawDibStart
DrawDibStop
DrawDibTime
DrawEdge
DrawEscape
DrawFocusRect
DrawFrameControl
DrawIcon
DrawIconEx
DrawInsert
DrawMenuBar
DrawState
DrawStatusText
DrawText
DrawTextEx
DriverCallback
DrvGetModuleHandle
DsGetDcName
DsGetSiteName
DsValidateSubnetName
DuplicateHandle
DuplicateIcon
DuplicateToken
DuplicateTokenEx
EditStreamClone
EditStreamCopy
EditStreamCut
EditStreamPaste
EditStreamSetInfo
EditStreamSetName
Ellipse
EmptyClipboard
EnableEUDC
EnableIdleRoutine
EnableMenuItem
EnableScrollBar
EnableWindow
EncryptFile
EndDeferWindowPos
EndDialog
EndDoc
EndDocPrinter
EndPage
EndPagePrinter
EndPaint
EndPath
EndUpdateResource
EnterCriticalSection
enum_from_ndr
EnumCalendarInfo
EnumChildWindows
EnumClipboardFormats
EnumDateFormats
EnumDependentServices
EnumDesktops
EnumDesktopWindows
EnumDisplayMonitors
EnumDisplaySettings
EnumEnhMetaFile
EnumFontFamilies
EnumFontFamiliesEx
EnumFonts
EnumForms
EnumJobs
EnumMonitors
EnumObjects
EnumPorts
EnumPrinterData
EnumPrinterDataEx
EnumPrinterDrivers
EnumPrinterKey
EnumPrinters
EnumPrintProcessorDatatypes
EnumPrintProcessors
EnumProps
EnumPropsEx
EnumProtocols
EnumResourceLanguages
EnumResourceNames
EnumResourceTypes
EnumServicesStatus
EnumSystemCodePages
EnumSystemLocales
EnumThreadWindows
EnumTimeFormats
EnumWindows
EnumWindowStations
EqualPrefixSid
EqualRect
EqualRgn
EqualSid
EraseTape
Escape
EscapeCommFunction
ExcludeClipRect
ExcludeUpdateRgn
ExitProcess
ExitThread
ExitWindows
ExitWindowsEx
ExpandEnvironmentStrings
ExtCreatePen
ExtCreateRegion
ExtEscape
ExtFloodFill
ExtractAssociatedIcon
ExtractIcon
ExtractIconEx
ExtSelectClipRgn
ExtTextOut
FatalAppExit
FatalExit
FBadColumnSet
FBadEntryList
FBadProp
FBadPropTag
FBadRestriction
FBadRglpNameID
FBadRglpszW
FBadRow
FBadRowSet
FBadSortOrderSet
FBinFromHex
FEqualNames
FileTimeToDosDateTime
FileTimeToLocalFileTime
FileTimeToSystemTime
FillConsoleOutputAttribute
FillConsoleOutputCharacter
FillMemory
FillPath
FillRect
FillRgn
FindAtom
FindClose
FindCloseChangeNotification
FindClosePrinterChangeNotification
FindDebugInfoFile
FindExecutable
FindExecutableImage
FindFirstChangeNotification
FindFirstFile
FindFirstFileEx
FindFirstFreeAce
FindFirstPrinterChangeNotification
FindNextChangeNotification
FindNextFile
FindNextPrinterChangeNotification
FindResource
FindResourceEx
FindText
FindWindow
FindWindowEx
FlashWindow
FlashWindowEx
FlattenPath
float_array_from_ndr
float_from_ndr
FlushConsoleInputBuffer
FlushFileBuffers
FlushInstructionCache
FlushViewOfFile
FoldString
FormatMessage
FPropCompareProp
FPropContainsProp
FPropExists
FrameRect
FrameRgn
FreeConsole
FreeDDElParam
FreeEnvironmentStrings
FreeLibrary
FreeLibraryAndExitThread
FreePadrlist
FreePrinterNotifyInfo
FreePropVariantArray
FreeProws
FreeSid
FtAddFt
FtgRegisterIdleRoutine
FtMulDw
FtMulDwDw
FtNegFt
FtSubFt
GdiComment
GdiFlush
GdiGetBatchLimit
GdiSetBatchLimit
GenerateConsoleCtrlEvent
GetAcceptExSockaddrs
GetAccessPermissionsForObject
GetAce
GetAclInformation
GetACP
GetActiveObject
GetActiveWindow
GetAddressByName
GetArcDirection
GetAspectRatioFilterEx
GetAsyncKeyState
GetAtomName
GetAttribIMsgOnIStg
GetAuditedPermissionsFromAcl
GetBinaryType
GetBitmapDimensionEx
GetBkColor
GetBkMode
GetBoundsRect
GetBrushOrgEx
GetCapture
GetCaretBlinkTime
GetCaretPos
GetCharABCWidths
GetCharABCWidthsFloat
GetCharacterPlacement
GetCharWidth
GetCharWidth32
GetCharWidthFloat
GetClassFile
GetClassInfo
GetClassInfoEx
GetClassLong
GetClassName
GetClassWord
GetClientRect
GetClipboardData
GetClipboardFormatName
GetClipboardOwner
GetClipboardSequenceNumber
GetClipboardViewer
GetClipBox
GetClipCursor
GetClipRgn
GetColorAdjustment
GetCommandLine
GetCommConfig
GetCommMask
GetCommModemStatus
GetCommProperties
GetCommState
GetCommTimeouts
GetCompressedFileSize
GetComputerName
GetConsoleCP
GetConsoleCursorInfo
GetConsoleMode
GetConsoleOutputCP
GetConsoleScreenBufferInfo
GetConsoleTitle
GetConvertStg
GetCPInfo
GetCPInfoEx
GetCurrencyFormat
GetCurrentDirectory
GetCurrentFiber
GetCurrentHwProfile
GetCurrentObject
GetCurrentPositionEx
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetCursor
GetCursorPos
GetDateFormat
GetDC
GetDCBrushColor
GetDCEx
GetDCOrgEx
GetDCPenColor
GetDefaultCommConfig
GetDesktopWindow
GetDeviceCaps
GetDevicePowerState
GetDialogBaseUnits
GetDIBColorTable
GetDIBits
GetDiskFreeSpace
GetDiskFreeSpaceEx
GetDlgCtrlID
GetDlgItem
GetDlgItemInt
GetDlgItemText
GetDoubleClickTime
GetDriverModuleHandle
GetDriveType
GetEffectiveClientRect
GetEffectiveRightsFromAcl
GetEnhMetaFile
GetEnhMetaFileBits
GetEnhMetaFileDescription
GetEnhMetaFileHeader
GetEnhMetaFilePaletteEntries
GetEnvironmentStrings
GetEnvironmentVariable
GetErrorInfo
GetExceptionCode
GetExceptionInformation
GetExitCodeProcess
GetExitCodeThread
GetExpandedName
GetExplicitEntriesFromAcl
GetFiberData
GetFileAttributes
GetFileAttributesEx
GetFileInformationByHandle
GetFileSecurity
GetFileSize
GetFileTime
GetFileTitle
GetFileType
GetFileVersionInfo
GetFileVersionInfoSize
GetFocus
GetFontAssocStatus
GetFontData
GetFontLanguageInfo
GetFontUnicodeRanges
GetForegroundWindow
GetForm
GetFullPathName
GetGlyphIndicies
GetGlyphOutline
GetGraphicsMode
GetGuiResources
GetHandleInformation
GetHGlobalFromILockBytes
GetHGlobalFromStream
gethostbyaddr
gethostbyname
gethostname
GetIconInfo
GetImageConfigInformation
GetImageUnusedHeaderBytes
GetInputState
GetInstance
GetJob
GetKernelObjectSecurity
GetKerningPairs
GetKeyboardLayout
GetKeyboardLayoutList
GetKeyboardLayoutName
GetKeyboardState
GetKeyboardType
GetKeyNameText
GetKeyState
GetLargestConsoleWindowSize
GetLastActivePopup
GetLastError
GetLengthSid
GetLocaleInfo
GetLocalTime
GetLogicalDrives
GetLogicalDriveStrings
GetLongPathName
GetMailslotInfo
GetMapMode
GetMenu
GetMenuContextHelpId
GetMenuDefaultItem
GetMenuItemCount
GetMenuItemID
GetMenuItemInfo
GetMenuItemRect
GetMessage
GetMessageExtraInfo
GetMessagePos
GetMessageTime
GetMetaFile
GetMetaRgn
GetMiterLimit
GetModuleFileName
GetModuleHandle
GetMonitorInfo
GetMouseMovePoints
GetNameByType
GetNamedPipeHandleState
GetNamedPipeInfo
GetNamedSecurityInfo
GetNamedSecurityInfoEx
GetNearestColor
GetNearestPaletteIndex
GetNextDlgGroupItem
GetNextDlgTabItem
GetNextWindow
GetNumberFormat
GetNumberOfConsoleInputEvents
GetNumberOfConsoleMouseButtons
GetNumberOfEventLogRecords
GetObject
GetObjectType
GetOEMCP
GetOldestEventLogRecord
GetOpenClipboardWindow
GetOpenFileName
GetOpenFileNamePreview
GetOutlineTextMetrics
GetOverlappedAccessResults
GetOverlappedResult
GetPaletteEntries
GetParent
GetPath
getpeername
GetPixel
GetPixelFormat
GetPolyFillMode
GetPrinter
GetPrinterData
GetPrinterDataEx
GetPrinterDriver
GetPrinterDriverDirectory
GetPrintProcessorDirectory
GetPriorityClass
GetPriorityClipboardFormat
GetPrivateObjectSecurity
GetPrivateProfileInt
GetPrivateProfileSection
GetPrivateProfileSectionNames
GetPrivateProfileString
GetPrivateProfileStruct
GetProcAddress
GetProcessAffinityMask
GetProcessHeap
GetProcessHeaps
GetProcessPriorityBoost
GetProcessShutdownParameters
GetProcessTimes
GetProcessVersion
GetProcessWindowStation
GetProcessWorkingSetSize
GetProfileInt
GetProfileSection
GetProfileString
GetProp
getprotobyname
getprotobynumber
GetQueuedCompletionStatus
GetQueueStatus
GetRasterizerCaps
GetRegionData
GetRgnBox
GetROP2
GetRunningObjectTable
GetSaveFileName
GetSaveFileNamePreview
GetScrollInfo
GetScrollPos
GetScrollRange
GetSecurityDescriptorControl
GetSecurityDescriptorDacl
GetSecurityDescriptorGroup
GetSecurityDescriptorLength
GetSecurityDescriptorOwner
GetSecurityDescriptorSacl
GetSecurityInfo
GetSecurityInfoEx
getservbyname
getservbyport
GetService
GetServiceDisplayName
GetServiceKeyName
GetShortPathName
GetSidIdentifierAuthority
GetSidLengthRequired
GetSidSubAuthority
GetSidSubAuthorityCount
getsockname
getsockopt
GetStartupInfo
GetStdHandle
GetStockObject
GetStretchBltMode
GetStringTypeA
GetStringTypeEx
GetStringTypeW
GetSubMenu
GetSysColor
GetSysColorBrush
GetSystemDefaultLangID
GetSystemDefaultLCID
GetSystemDirectory
GetSystemInfo
GetSystemMenu
GetSystemMetrics
GetSystemPaletteEntries
GetSystemPaletteUse
GetSystemPowerStatus
GetSystemTime
GetSystemTimeAdjustment
GetSystemTimeAsFileTime
GetTabbedTextExtent
GetTapeParameters
GetTapePosition
GetTapeStatus
GetTempFileName
GetTempPath
GetTextAlign
GetTextCharacterExtra
GetTextCharset
GetTextCharsetInfo
GetTextColor
GetTextExtentExPoint
GetTextExtentPoint
GetTextExtentPoint32
GetTextFace
GetTextMetrics
GetThreadContext
GetThreadDesktop
GetThreadLocale
GetThreadPriority
GetThreadPriorityBoost
GetThreadSelectorEntry
GetThreadTimes
GetTickCount
GetTimeFormat
GetTimestampForLoadedLibrary
GetTimeZoneInformation
GetTokenInformation
GetTopWindow
GetTrusteeForm
GetTrusteeName
GetTrusteeType
GetTypeByName
GetUpdateRect
GetUpdateRgn
GetUserDefaultLangID
GetUserDefaultLCID
GetUserName
GetUserObjectInformation
GetUserObjectSecurity
GetVersion
GetVersionEx
GetViewportExtEx
GetViewportOrgEx
GetVolumeInformation
GetWindow
GetWindowContextHelpId
GetWindowDC
GetWindowExtEx
GetWindowLong
GetWindowOrgEx
GetWindowPlacement
GetWindowRect
GetWindowRgn
GetWindowsDirectory
GetWindowText
GetWindowTextLength
GetWindowThreadProcessId
GetWinMetaFileBits
GetWorldTransform
glAccum
glAddSwapHintRectWIN
glAlphaFunc
glArrayElement
glBegin
glBitmap
glBlendFunc
glCallList
glCallLists
glClear
glClearAccum
glClearColor
glClearDepth
glClearIndex
glClearStencil
glClipPlane
glColor3b
glColor3bv
glColor3d
glColor3dv
glColor3f
glColor3fv
glColor3i
glColor3iv
glColor3s
glColor3sv
glColor3ub
glColor3ubv
glColor3ui
glColor3uiv
glColor3us
glColor3usv
glColor4b
glColor4bv
glColor4d
glColor4dv
glColor4f
glColor4fv
glColor4i
glColor4iv
glColor4s
glColor4sv
glColor4ub
glColor4ubv
glColor4ui
glColor4uiv
glColor4us
glColor4usv
glColorMask
glColorMaterial
glColorPointerEXT
glCopyPixels
glCullFace
glDeleteLists
glDepthFunc
glDepthMask
glDepthRange
glDisable
glDrawArraysEXT
glDrawBuffer
glDrawPixels
glEdgeFlag
glEdgeFlagPointerEXT
glEdgeFlagv
glEnable
glEnd
glEndList
glEvalCoord1d
glEvalCoord1dv
glEvalCoord1f
glEvalCoord1fv
glEvalCoord2d
glEvalCoord2dv
glEvalCoord2f
glEvalCoord2fv
glEvalMesh1
glEvalMesh2
glEvalPoint1
glEvalPoint2
glFeedbackBuffer
glFinish
glFlush
glFogf
glFogfv
glFogi
glFogiv
glFrontFace
glFrustum
glGenLists
glGetBooleanv
glGetClipPlane
glGetDoublev
glGetError
glGetFloatv
glGetIntegerv
glGetLightfv
glGetLightiv
glGetMapdv
glGetMapfv
glGetMapiv
glGetMaterialfv
glGetMaterialiv
glGetPixelMapfv
glGetPixelMapuiv
glGetPixelMapusv
glGetPointervEXT
glGetPolygonStipple
glGetString
glGetTexEnvfv
glGetTexEnviv
glGetTexGendv
glGetTexGenfv
glGetTexGeniv
glGetTexImage
glGetTexLevelParameterfv
glGetTexLevelParameteriv
glGetTexParameterfv
glGetTexParameteriv
glHint
glIndexd
glIndexdv
glIndexf
glIndexfv
glIndexi
glIndexiv
glIndexMask
glIndexPointEXT
glIndexs
glIndexsv
glInitNames
glIsEnabled
glIsList
glLightf
glLightfv
glLighti
glLightiv
glLightModelf
glLightModelfv
glLightModeli
glLightModeliv
glLineStipple
glLineWidth
glListBase
glLoadIdentity
glLoadMatrixd
glLoadMatrixf
glLoadName
glLogicOp
glMap1d
glMap1f
glMap2d
glMap2f
glMapGrid1d
glMapGrid1f
glMapGrid2d
glMapGrid2f
glMaterialf
glMaterialfv
glMateriali
glMaterialiv
glMatrixMode
glMultMatrixd
glMultMatrixf
glNewList
glNormal3b
glNormal3bv
glNormal3d
glNormal3dv
glNormal3f
glNormal3fv
glNormal3i
glNormal3iv
glNormal3s
glNormal3sv
glNormalPointerEXT
GlobalAddAtom
GlobalAlloc
GlobalDeleteAtom
GlobalDiscard
GlobalFindAtom
GlobalFlags
GlobalFree
GlobalGetAtomName
GlobalHandle
GlobalLock
GlobalMemoryStatus
GlobalReAlloc
GlobalSize
GlobalUnlock
glOrtho
glPassThrough
glPixelMapfv
glPixelMapuiv
glPixelMapusv
glPixelStoref
glPixelStorei
glPixelTransferf
glPixelTransferi
glPixelZoom
glPointSize
glPolygonMode
glPolygonStipple
glPopAttrib
glPopMatrix
glPopName
glPushAttrib
glPushMatrix
glPushName
glRasterPos2d
glRasterPos2dv
glRasterPos2f
glRasterPos2fv
glRasterPos2i
glRasterPos2iv
glRasterPos2s
glRasterPos2sv
glRasterPos3d
glRasterPos3dv
glRasterPos3f
glRasterPos3fv
glRasterPos3i
glRasterPos3iv
glRasterPos3s
glRasterPos3sv
glRasterPos4d
glRasterPos4dv
glRasterPos4f
glRasterPos4fv
glRasterPos4i
glRasterPos4iv
glRasterPos4s
glRasterPos4sv
glReadBuffer
glReadPixels
glRectd
glRectdv
glRectf
glRectfv
glRecti
glRectiv
glRects
glRectsv
glRenderMode
glRotated
glRotatef
glScaled
glScalef
glScissor
glSelectBuffer
glShadeModel
glStencilFunc
glStencilMask
glStencilOp
glTexCoord1d
glTexCoord1dv
glTexCoord1f
glTexCoord1fv
glTexCoord1i
glTexCoord1iv
glTexCoord1s
glTexCoord1sv
glTexCoord2d
glTexCoord2dv
glTexCoord2f
glTexCoord2fv
glTexCoord2i
glTexCoord2iv
glTexCoord2s
glTexCoord2sv
glTexCoord3d
glTexCoord3dv
glTexCoord3f
glTexCoord3fv
glTexCoord3i
glTexCoord3iv
glTexCoord3s
glTexCoord3sv
glTexCoord4d
glTexCoord4dv
glTexCoord4f
glTexCoord4fv
glTexCoord4i
glTexCoord4iv
glTexCoord4s
glTexCoord4sv
glTexCoordPointerEXT
glTexEnvf
glTexEnvfv
glTexEnvi
glTexEnviv
glTexGend
glTexGendv
glTexGenf
glTexGenfv
glTexGeni
glTexGeniv
glTexImage1D
glTexImage2D
glTexParameterf
glTexParameterfv
glTexParameteri
glTexParameteriv
glTranslated
glTranslatef
gluBeginCurve
gluBeginPolygon
gluBeginSurface
gluBeginTrim
gluBuild1DMipmaps
gluBuild2DMipmaps
gluCylinder
gluDeleteNurbsRenderer
gluDeleteQuadric
gluDeleteTess
gluDisk
gluEndCurve
gluEndPolygon
gluEndSurface
gluEndTrim
gluErrorString
gluErrorUnicodeStringEXT
gluGetNurbsProperty
gluGetString
gluGetTessProperty
gluLoadSamplingMatrices
gluLookAt
gluNewNurbsRenderer
gluNewQuadric
gluNewTess
gluNextContour
gluNurbsCallback
gluNurbsCurve
gluNurbsProperty
gluNurbsSurface
gluOrtho2D
gluPartialDisk
gluPerspective
gluPickMatrix
gluProject
gluPwlCurve
gluQuadricCallback
gluQuadricDrawStyle
gluQuadricNormals
gluQuadricOrientation
gluQuadricTexture
gluScaleImage
gluSphere
gluTessBeginContour
gluTessBeginPolygon
gluTessCallback
gluTessEndContour
gluTessEndPolygon
gluTessNormal
gluTessProperty
gluTessVertex
gluUnProject
glVertex2d
glVertex2dv
glVertex2f
glVertex2fv
glVertex2i
glVertex2iv
glVertex2s
glVertex2sv
glVertex3d
glVertex3dv
glVertex3f
glVertex3fv
glVertex3i
glVertex3iv
glVertex3s
glVertex3sv
glVertex4d
glVertex4dv
glVertex4f
glVertex4fv
glVertex4i
glVertex4iv
glVertex4s
glVertex4sv
glVertexPointerEXT
glViewport
GradientFill
GrayString
HeapAlloc
HeapCompact
HeapCreate
HeapDestroy
HeapFree
HeapLock
HeapReAlloc
HeapSize
HeapUnlock
HeapValidate
HeapWalk
HexFromBin
HideCaret
HiliteMenuItem
HrAddColumnsEx
HrAllocAdviseSink
HrComposeEID
HrComposeMsgID
HrDecomposeEID
HrDecomposeMsgID
HrDispatchNotifications
HrEntryIDFromSz
HrGetOneProp
HrIStorageFromStream
HrQueryAllRows
HrSetOneProp
HrSzFromEntryID
HrThisThreadAdviseSink
HrValidateIPMSubtree
htonl
htons
I_BrowserDebugTrace
I_BrowserQueryOtherDomains
I_BrowserQueryStatistics
I_BrowserResetNetlogonState
I_BrowserResetStatistics
I_BrowserServerEnum
I_NetLogonControl
I_NetLogonControl2
I_RpcAllocate
I_RpcBindingCopy
I_RpcBindingInqDynamicEndpoint
I_RpcBindingInqTransportType
I_RpcBindingIsClientLocal
I_RpcClearMutex
I_RpcDeleteMutex
I_RpcFree
I_RpcFreeBuffer
I_RpcGetAssociationContext
I_RpcGetBuffer
I_RpcGetCurrentCallHandle
I_RpcIfInqTransferSyntaxes
I_RpcMapWin32Status
I_RpcMonitorAssociation
I_RpcNsBindingSetEntryName
I_RpcNsGetBuffer
I_RpcNsRaiseException
I_RpcNsSendReceive
I_RpcPauseExecution
I_RpcReBindBuffer
I_RpcRequestMutex
I_RpcSendReceive
I_RpcServerRegisterForwardFunction
I_RpcSetAssociationContext
I_RpcSsDontSerializeContext
I_RpcStopMonitorAssociation
I_UuidCreate
ICClose
ICCompress
ICCompressorChoose
ICCompressorFree
ICDecompress
ICDecompressEx
ICDecompressExBegin
ICDecompressExQuery
ICDraw
ICDrawBegin
ICDrawSuggestFormat
ICGetDisplayFormat
ICGetInfo
ICImageCompress
ICImageDecompress
ICInfo
ICInstall
ICLocate
ICOpen
ICOpenFunction
ICRemove
ICSendMessage
ICSeqCompressFrame
ICSeqCompressFrameEnd
ICSeqCompressFrameStart
ICSetState
ICSetStatusProc
IIDFromString
ImageAddCertificate
ImageDirectoryEntryToData
ImageEnumerateCertificates
ImageGetCertificateData
ImageGetCertificateHeader
ImageGetDigestStream
ImagehlpApiVersion
ImagehlpApiVersionEx
ImageList_Add
ImageList_AddMasked
ImageList_BeginDrag
ImageList_Create
ImageList_Destroy
ImageList_DragEnter
ImageList_DragLeave
ImageList_DragMove
ImageList_DragShowNolock
ImageList_Draw
ImageList_DrawEx
ImageList_EndDrag
ImageList_GetBkColor
ImageList_GetDragImage
ImageList_GetIcon
ImageList_GetIconSize
ImageList_GetImageCount
ImageList_GetImageInfo
ImageList_LoadImage
ImageList_Merge
ImageList_Read
ImageList_Remove
ImageList_Replace
ImageList_ReplaceIcon
ImageList_SetBkColor
ImageList_SetDragCursorImage
ImageList_SetIconSize
ImageList_SetImageCount
ImageList_SetOverlayImage
ImageList_Write
ImageLoad
ImageNtHeader
ImageRemoveCertificate
ImageRvaToSection
ImageRvaToVa
ImageUnload
ImmAssociateContext
ImmAssociateContextEx
ImmConfigureIME
ImmCreateContext
ImmDestroyContext
ImmDisableIME
ImmEnumRegisterWord
ImmEscape
ImmGetCandidateList
ImmGetCandidateListCount
ImmGetCandidateWindow
ImmGetCompositionFont
ImmGetCompositionString
ImmGetCompositionWindow
ImmGetContext
ImmGetConversionList
ImmGetConversionStatus
ImmGetDefaultIMEWnd
ImmGetDescription
ImmGetGuideLine
ImmGetIMEFileName
ImmGetImeMenuItems
ImmGetOpenStatus
ImmGetProperty
ImmGetRegisterWordStyle
ImmGetStatusWindowPos
ImmGetVirtualKey
ImmInstallIME
ImmIsIME
ImmIsUIMessage
ImmNotifyIME
ImmRegisterWord
ImmReleaseContext
ImmSetCandidateWindow
ImmSetCompositionFont
ImmSetCompositionString
ImmSetCompositionWindow
ImmSetConversionStatus
ImmSetOpenStatus
ImmSetStatusWindowPos
ImmSimulateHotKey
ImmUnregisterWord
ImpersonateDdeClientWindow
ImpersonateLoggedOnUser
ImpersonateNamedPipeClient
ImpersonateSelf
IMPGetIME
IMPQueryIME
IMPSetIME
inet_addr
inet_ntoa
InflateRect
InitAtomTable
InitCommonControls
InitializeAcl
InitializeCriticalSection
InitializeCriticalSectionAndSpinCount
InitializeSecurityDescriptor
InitializeSid
InitiateSystemShutdown
InSendMessage
InsertMenu
InsertMenuItem
InterlockedCompareExchange
InterlockedDecrement
InterlockedExchange
InterlockedExchangeAdd
InterlockedIncrement
IntersectClipRect
IntersectRect
InvalidateRect
InvalidateRgn
InvertRect
InvertRgn
ioctlsocket
IsAccelerator
IsBadCodePtr
IsBadHugeReadPtr
IsBadHugeWritePtr
IsBadReadPtr
IsBadStringPtr
IsBadWritePtr
IsCharAlpha
IsCharAlphaNumeric
IsCharLower
IsCharUpper
IsChild
IsClipboardFormatAvailable
IsDBCSLeadByte
IsDBCSLeadByteEx
IsDebuggerPresent
IsDialogMessage
IsDlgButtonChecked
IsEqualGUID
IsIconic
IsMenu
IsPermitted
IsProcessorFeaturePresent
IsRectEmpty
IsTextUnicode
IsValidAcl
IsValidCodePage
IsValidLocale
IsValidSecurityDescriptor
IsValidSid
IsWindow
IsWindowEnabled
IsWindowUnicode
IsWindowVisible
IsZoomed
joyGetDevCaps
joyGetNumDevs
joyGetPos
joyGetPosEx
joyGetThreshold
joyReleaseCapture
joySetCapture
joySetThreshold
keybd_event
KillTimer
LAUNCHWIZARDENTRY
LBItemFromPt
LCMapString
LeaveCriticalSection
LHashValOfNameSys
lineAccept
lineAddProvider
lineAddToConference
lineAgentSpecific
lineAnswer
lineBlindTransfer
lineClose
lineCompleteCall
lineCompleteTransfer
lineConfigDialog
lineConfigDialogEdit
lineConfigProvider
LineDDA
lineDeallocateCall
lineDevSpecific
lineDevSpecificFeature
lineDial
lineDrop
lineForward
lineGatherDigits
lineGenerateDigits
lineGenerateTone
lineGetAddressCaps
lineGetAddressID
lineGetAddressStatus
lineGetAgentActivityList
lineGetAgentCaps
lineGetAgentGroupList
lineGetAgentStatus
lineGetAppPriority
lineGetCallInfo
lineGetCallStatus
lineGetConfRelatedCalls
lineGetCountry
lineGetDevCaps
lineGetDevConfig
lineGetIcon
lineGetID
lineGetLineDevStatus
lineGetMessage
lineGetNewCalls
lineGetNumRings
lineGetProviderList
lineGetRequest
lineGetStatusMessages
lineGetTranslateCaps
lineHandoff
lineHold
lineInitialize
lineInitializeEx
lineMakeCall
lineMonitorDigits
lineMonitorMedia
lineMonitorTones
lineNegotiateAPIVersion
lineNegotiateExtVersion
lineOpen
linePark
linePickup
linePrepareAddToConference
lineProxyMessage
lineProxyResponse
lineRedirect
lineRegisterRequestRecipient
lineReleaseUserUserInfo
lineRemoveFromConference
lineRemoveProvider
lineSecureCall
lineSendUserUserInfo
lineSetAgentActivity
lineSetAgentGroup
lineSetAgentState
lineSetAppPriority
lineSetAppSpecific
lineSetCallData
lineSetCallParams
lineSetCallPrivilege
lineSetCallQualityOfService
lineSetCallTreatment
lineSetCurrentLocation
lineSetDevConfig
lineSetLineDevStatus
lineSetMediaControl
lineSetMediaMode
lineSetNumRings
lineSetStatusMessages
lineSetTerminal
lineSetTollList
lineSetupConference
lineSetupTransfer
lineShutdown
lineSwapHold
LineTo
lineTranslateAddress
lineTranslateDialog
lineUncompleteCall
lineUnhold
lineUnpark
listen
LoadAccelerators
LoadBitmap
LoadCursor
LoadCursorFromFile
LoadIcon
LoadImage
LoadKeyboardLayout
LoadLibrary
LoadLibraryEx
LoadMenu
LoadMenuIndirect
LoadModule
LoadRegTypeLib
LoadResource
LoadString
LoadTypeLib
LocalAlloc
LocalDiscard
LocalFileTimeToFileTime
LocalFlags
LocalFree
LocalHandle
LocalLock
LocalReAlloc
LocalSize
LocalUnlock
LockFile
LockFileEx
LockResource
LockServiceDatabase
LockWindowUpdate
Login
LogonUser
Logout
long_array_from_ndr
long_from_ndr
long_from_ndr_temp
LookupAccountName
LookupAccountSid
LookupIconIdFromDirectory
LookupIconIdFromDirectoryEx
LookupPrivilegeDisplayName
LookupPrivilegeName
LookupPrivilegeValue
LookupSecurityDescriptorParts
LPropCompareProp
LPtoDP
LSEnumProviders
LSFreeHandle
LSGetMessage
LSQuery
LSRelease
LSRequest
lstrcat
lstrcmp
lstrcmpi
lstrcpy
lstrcpyn
lstrlen
LSUpdate
LZClose
LZCopy
LZInit
LZOpenFile
LZRead
LZSeek
MakeAbsoluteSD
MakeDragList
MakeSelfRelativeSD
MakeSuredirectoryPathExists
MapAndLoad
MapDebugInformation
MapDialogRect
MapFileAndCheckSumA
MapFileAndCheckSumW
MapGenericMask
MAPIAddress
MAPIAddress (VB)
MAPIAdminProfiles
MAPIAllocateBuffer
MAPIAllocateMore
MAPIDeInitIdle
MAPIDeleteMail
MAPIDeleteMail (VB)
MAPIDetails
MAPIDetails (VB)
MAPIFindNext
MAPIFindNext (VB)
MAPIFreeBuffer
MAPIFreeBuffer (Simple MAPI)
MAPIGetDefaultMalloc
MAPIInitialize
MAPIInitIdle
MAPILogoff
MAPILogoff (VB)
MAPILogon
MAPILogon (VB)
MAPILogonEx
MAPIOpenFormMgr
MAPIOpenLocalFormContainer
MAPIReadMail
MAPIReadMail (VB)
MAPIResolveName
MAPIResolveName (VB)
MAPISaveMail
MAPISaveMail (VB)
MAPISendDocuments
MAPISendDocuments (VB)
MAPISendMail
MAPISendMail (VB)
MAPIUninitialize
MapStorageSCode
MapViewOfFile
MapViewOfFileEx
MapVirtualKey
MapVirtualKeyEx
MapWindowPoints
MaskBlt
mciGetCreatorTask
mciGetDeviceID
mciGetErrorString
mciGetYieldProc
mciSendCommand
mciSendString
mciSetYieldProc
MCIWndCreate
MCIWndRegisterClass
MenuHelp
MenuItemFromPoint
MesBufferHandleReset
MesDecodeBufferHandleCreate
MesDecodeIncrementalHandleCreate
MesEncodeDynBufferHandleCreate
MesEncodeFixedBufferHandleCreate
MesEncodeIncrementalHandleCreate
MesHandleFree
MesIncrementalHandleReset
MesInqProcEncodingId
MessageBeep
MessageBox
MessageBoxEx
MessageBoxIndirect
MibEntryCreate
MibEntryDelete
MibEntryGet
MibEntryGetFirst
MibEntryGetNext
MibEntrySet
midiConnect
midiDisconnect
midiInAddBuffer
midiInClose
midiInGetDevCaps
midiInGetErrorText
midiInGetID
midiInGetNumDevs
midiInMessage
midiInOpen
midiInPrepareHeader
midiInReset
midiInStart
midiInStop
midiInUnprepareHeader
midiOutCacheDrumPatches
midiOutCachePatches
midiOutClose
midiOutGetDevCaps
midiOutGetErrorText
midiOutGetID
midiOutGetNumDevs
midiOutGetVolume
midiOutLongMsg
midiOutMessage
midiOutOpen
midiOutPrepareHeader
midiOutReset
midiOutSetVolume
midiOutShortMsg
midiOutUnprepareHeader
midiStreamClose
midiStreamOpen
midiStreamOut
midiStreamPause
midiStreamPosition
midiStreamProperty
midiStreamRestart
midiStreamStop
midl_allocate
MIDL_user_allocate
MIDL_wchar_strcpy
MIDL_wchar_strlen
mixerClose
mixerGetControlDetails
mixerGetDevCaps
mixerGetID
mixerGetLineControls
mixerGetLineInfo
mixerGetNumDevs
mixerMessage
mixerOpen
mixerSetControlDetails
MkParseDisplayName
mmioAdvance
mmioAscend
mmioClose
mmioCreateChunk
mmioDescend
mmioFlush
mmioGetInfo
mmioInstallIOProc
mmioOpen
mmioRead
mmioRename
mmioSeek
mmioSendMessage
mmioSetBuffer
mmioSetInfo
mmioStringToFOURCC
mmioWrite
mmsystemGetVersion
ModifyWorldTransform
MonikerCommonPrefixWith
MonikerRelativePathTo
MonitorFromPoint
MonitorFromRect
MonitorFromWindow
mouse_event
MoveFile
MoveFileEx
MoveMemory
MoveToEx
MoveWindow
MprAdminBufferFree
MprAdminConnectionClearStats
MprAdminConnectionEnum
MprAdminConnectionGetInfo
MprAdminGetErrorString
MprAdminGetPDCServer
MprAdminInterfaceConnect
MprAdminInterfaceCreate
MprAdminInterfaceDelete
MprAdminInterfaceDisconnect
MprAdminInterfaceEnum
MprAdminInterfaceGetHandle
MprAdminInterfaceQueryUpdateResult
MprAdminInterfaceTransportAdd
MprAdminInterfaceTransportGetInfo
MprAdminInterfaceTransportRemove
MprAdminInterfaceTransportSetInfo
MprAdminInterfaceUpdateRoutes
MprAdminIsServiceRunning
MprAdminMIBBufferFree
MprAdminMIBEntryCreate
MprAdminMIBEntryDelete
MprAdminMIBEntryGet
MprAdminMIBEntryGetFirst
MprAdminMIBEntryGetNext
MprAdminMIBEntryGetTrapInfo
MprAdminMIBEntrySet
MprAdminMIBEntrySetTrapInfo
MprAdminMIBServerConnect
MprAdminMIBServerDisconnect
MprAdminPortClearStats
MprAdminPortDisconnect
MprAdminPortEnum
MprAdminPortGetInfo
MprAdminPortReset
MprAdminServerConnect
MprAdminServerDisconnect
MprAdminServerGetInfo
MprAdminTransportGetInfo
MprAdminTransportSetInfo
MprAdminUserGetInfo
MprAdminUserSetInfo
MprConfigBufferFree
MprConfigFilterCreate
MprConfigFilterDelete
MprConfigFilterEnum
MprConfigFilterGetHandle
MprConfigFilterGetInfo
MprConfigFilterSetInfo
MprConfigInterfaceCreate
MprConfigInterfaceDelete
MprConfigInterfaceEnum
MprConfigInterfaceGetHandle
MprConfigInterfaceGetInfo
MprConfigInterfaceSetInfo
MprConfigInterfaceTransportAdd
MprConfigInterfaceTransportEnum
MprConfigInterfaceTransportGetHandle
MprConfigInterfaceTransportGetInfo
MprConfigInterfaceTransportRemove
MprConfigInterfaceTransportSetInfo
MprConfigServerBackup
MprConfigServerConnect
MprConfigServerDisconnect
MprConfigServerGetInfo
MprConfigServerRestore
MprConfigTransportCreate
MprConfigTransportDelete
MprConfigTransportEnum
MprConfigTransportGetHandle
MprConfigTransportGetInfo
MprConfigTransportSetInfo
MsgWaitForMultipleObjects
MsgWaitForMultipleObjectsEx
MsiCloseAllHandles
MsiCloseHandle
MsiCollectUserInfo
MsiConfigureFeature
MsiConfigureProduct
MsiCreateRecord
MsiDatabaseApplyTransform
MsiDatabaseCommit
MsiDatabaseExport
MsiDatabaseGenerateTransform
MsiDatabaseGetPrimaryKeys
MsiDatabaseImport
MsiDatabaseIsTablePersistent
MsiDatabaseMerge
MsiDatabaseOpenView
MsiDoAction
MsiEnableLog
MsiEnableUIPreview
MsiEnumClients
MsiEnumComponentQualifiers
MsiEnumComponents
MsiEnumFeatures
MsiEnumProducts
MsiEvaluateCondition
MsiFormatRecord
MsiGetActiveDatabase
MsiGetComponentState
MsiGetDatabaseState
MsiGetFeatureCost
MsiGetFeatureInfo
MsiGetFeatureState
MsiGetFeatureUsage
MsiGetFeatureValidStates
MsiGetLanguage
MsiGetMode
MsiGetProductCode
MsiGetProductInfo
MsiGetProductProperty
MsiGetProperty
MsiGetSourcePath
MsiGetSummaryInformation
MsiGetTargetPath
MsiGetUserInfo
MsiInstallMissingComponent
MsiInstallMissingFile
MsiInstallProduct
MsiLocateComponent
MsiOpenDatabase
MsiOpenPackage
MsiOpenProduct
MsiPreviewBillboard
MsiPreviewDialog
MsiProcessMessage
MsiProvideComponent
MsiProvideQualifiedComponent
MsiQueryFeatureState
MsiQueryProductState
MsiRecordClearData
MsiRecordDataSize
MsiRecordGetFieldCount
MsiRecordGetInteger
MsiRecordGetString
MsiRecordIsNull
MsiRecordReadStream
MsiRecordSetInteger
MsiRecordSetStream
MsiRecordSetString
MsiReinstallFeature
MsiReinstallProduct
MsiSequence
MsiSetComponentState
MsiSetExternalUI
MsiSetFeatureState
MsiSetInstallLevel
MsiSetInternalUI
MsiSetMode
MsiSetProperty
MsiSetTargetPath
MsiSummaryInfoGetProperty
MsiSummaryInfoGetPropertyCount
MsiSummaryInfoPersist
MsiSummaryInfoSetProperty
MsiUseFeature
MsiVerifyPackage
MsiViewClose
MsiViewExecute
MsiViewFetch
MsiViewGetColumnInfo
MsiViewGetError
MsiViewModify
MulDiv
MultiByteToWideChar
MultinetGetConnectionPerformance
NDdeGetErrorString
NDdeGetShareSecurity
NDdeGetTrustedShare
NDdeIsValidAppTopicList
NDdeIsValidShareName
NDdeSetShareSecurity
NDdeSetTrustedShare
NDdeShareAdd
NDdeShareDel
NDdeShareEnum
NDdeShareGetInfo
NDdeShareSetInfo
NDdeTrustedShareEnum
NDRCContextBinding
NDRCContextMarshall
NDRCContextUnmarshall
NDRcopy
NDRSContextMarshall
NDRSContextUnmarshall
NetAccessAdd
NetAccessCheck
NetAccessDel
NetAccessEnum
NetAccessGetInfo
NetAccessGetUserPerms
NetAccessSetInfo
NetAlertRaise
NetAlertRaiseEx
NetApiBufferAllocate
NetApiBufferFree
NetApiBufferReallocate
NetApiBufferSize
NetApipBufferAllocate
NetAuditClear
NetAuditRead
NetAuditWrite
Netbios
NetConfigGet
NetConfigGetAll
NetConfigSet
NetConnectionEnum
NetDfsAdd
NetDfsEnum
NetDfsGetInfo
NetDfsRemove
NetDfsSetInfo
NetErrorLogClear
NetErrorLogRead
NetErrorLogWrite
NetFileClose
NetFileEnum
NetFileGetInfo
NetGetAnyDCName
NetGetDCName
NetGetDisplayInformationIndex
NetGroupAdd
NetGroupAddUser
NetGroupDel
NetGroupDelUser
NetGroupEnum
NetGroupGetInfo
NetGroupGetUsers
NetGroupSetInfo
NetGroupSetUsers
NetHandleGetInfo
NetHandleSetInfo
NetLocalGroupAdd
NetLocalGroupAddMember
NetLocalGroupAddMembers
NetLocalGroupDel
NetLocalGroupDelMember
NetLocalGroupDelMembers
NetLocalGroupEnum
NetLocalGroupGetInfo
NetLocalGroupGetMembers
NetLocalGroupSetInfo
NetLocalGroupSetMembers
NetMessageBufferSend
NetMessageNameAdd
NetMessageNameDel
NetMessageNameEnum
NetMessageNameGetInfo
NetQueryDisplayInformation
NetRemoteComputerSupports
NetRemoteTOD
NetReplExportDirAdd
NetReplExportDirDel
NetReplExportDirEnum
NetReplExportDirGetInfo
NetReplExportDirLock
NetReplExportDirSetInfo
NetReplExportDirUnlock
NetReplGetInfo
NetReplImportDirAdd
NetReplImportDirDel
NetReplImportDirEnum
NetReplImportDirGetInfo
NetReplImportDirLock
NetReplImportDirUnlock
NetReplSetInfo
NetScheduleJobAdd
NetScheduleJobDel
NetScheduleJobEnum
NetScheduleJobGetInfo
NetServerDiskEnum
NetServerEnum
NetServerGetInfo
NetServerSetInfo
NetServerTransportAdd
NetServerTransportDel
NetServerTransportEnum
NetServiceControl
NetServiceEnum
NetServiceGetInfo
NetServiceInstall
NetSessionDel
NetSessionEnum
NetSessionGetInfo
NetShareAdd
NetShareCheck
NetShareDel
NetShareDelSticky
NetShareEnum
NetShareEnumSticky
NetShareGetInfo
NetShareSetInfo
NetStatisticsGet
NetStatisticsGet2
NetUseAdd
NetUseDel
NetUseEnum
NetUseGetInfo
NetUserAdd
NetUserChangePassword
NetUserDel
NetUserEnum
NetUserGetGroups
NetUserGetInfo
NetUserGetLocalGroups
NetUserModalsGet
NetUserModalsSet
NetUserSetGroups
NetUserSetInfo
NetWkstaGetInfo
NetWkstaSetInfo
NetWkstaTransportAdd
NetWkstaTransportDel
NetWkstaTransportEnum
NetWkstaUserEnum
NetWkstaUserGetInfo
NetWkstaUserSetInfo
NotifyBootConfigStatus
NotifyChangeEventLog
NSPGetServiceClassInfo
NSPInstallServiceClass
NSPLookupServiceBegin
NSPLookupServiceEnd
NSPLookupServiceNext
NSPRemoveServiceClass
NSPSetService
NSPStartup
ntohl
ntohs
OaBuildVersion
ObjectCloseAuditAlarm
ObjectDeleteAuditAlarm
ObjectOpenAuditAlarm
ObjectPrivilegeAuditAlarm
OemKeyScan
OemToChar
OemToCharBuff
OffsetClipRgn
OffsetRect
OffsetRgn
OffsetViewportOrgEx
OffsetWindowOrgEx
OleBuildVersion
OleConvertIStorageToOLESTREAM
OleConvertIStorageToOLESTREAMEx
OleConvertOLESTREAMToIStorage
OleConvertOLESTREAMToIStorageEx
OleCreate
OleCreateDefaultHandler
OleCreateEmbeddingHelper
OleCreateEx
OleCreateFontIndirect
OleCreateFromData
OleCreateFromDataEx
OleCreateFromFile
OleCreateFromFileEx
OleCreateLink
OleCreateLinkEx
OleCreateLinkFromData
OleCreateLinkFromDataEx
OleCreateLinkToFile
OleCreateLinkToFileEx
OleCreateMenuDescriptor
OleCreatePictureIndirect
OleCreatePropertyFrame
OleCreatePropertyFrameIndirect
OleCreateStaticFromData
OleDestroyMenuDescriptor
OleDoAutoConvert
OleDraw
OleDuplicateData
OleFlushClipboard
OleGetAutoConvert
OleGetClipboard
OleGetIconOfClass
OleGetIconOfFile
OleIconToCursor
OleInitialize
OleIsCurrentClipboard
OleIsRunning
OleLoad
OleLoadFromStream
OleLoadPicture
OleLockRunning
OleMetafilePictFromIconAndLabel
OleNoteObjectVisible
OleQueryCreateFromData
OleQueryLinkFromData
OleRegEnumFormatEtc
OleRegEnumVerbs
OleRegGetMiscStatus
OleRegGetUserType
OleRun
OleSave
OleSaveToStream
OleSetAutoConvert
OleSetClipboard
OleSetContainedObject
OleSetMenuDescriptor
OleTranslateAccelerator
OleTranslateColor
OleUIAddVerbMenu
OleUIBusy
OleUICanConvertOrActivateAs
OleUIChangeIcon
OleUIChangeSource
OleUIConvert
OleUIEditLinks
OleUIInsertObject
OleUIObjectProperties
OleUIPasteSpecial
OleUIPromptUser
OleUIUpdateLinks
OleUninitialize
OpenBackupEventLog
OpenClipboard
OpenDesktop
OpenDriver
OpenEvent
OpenEventLog
OpenFile
OpenFileMapping
OpenIcon
OpenIMsgOnIStg
OpenIMsgSession
OpenInputDesktop
OpenJobObject
OpenMutex
OpenPrinter
OpenProcess
OpenProcessToken
OpenRaw
OpenSCManager
OpenSemaphore
OpenService
OpenStreamOnFile
OpenThreadToken
OpenTnefStream
OpenTnefStreamEx
OpenWaitableTimer
OpenWindowStation
OutputDebugString
PackDDElParam
PageSetupDlg
PaintDesktop
PaintRgn
PatBlt
PathToRegion
PeekConsoleInput
PeekMessage
PeekNamedPipe
phoneClose
phoneConfigDialog
phoneDevSpecific
phoneGetButtonInfo
phoneGetData
phoneGetDevCaps
phoneGetDisplay
phoneGetGain
phoneGetHookSwitch
phoneGetIcon
phoneGetID
phoneGetLamp
phoneGetMessage
phoneGetRing
phoneGetStatus
phoneGetStatusMessages
phoneGetVolume
phoneInitialize
phoneInitializeEx
phoneNegotiateAPIVersion
phoneNegotiateExtVersion
phoneOpen
phoneSetButtonInfo
phoneSetData
phoneSetDisplay
phoneSetGain
phoneSetHookSwitch
phoneSetLamp
phoneSetRing
phoneSetStatusMessages
phoneSetVolume
phoneShutdown
Pie
PlayEnhMetaFile
PlayEnhMetaFileRecord
PlaySound
PlgBlt
PolyBezier
PolyBezierTo
PolyDraw
Polygon
Polyline
PolylineTo
PolyPolygon
PolyPolyline
PolyTextOut
PostMessage
PostQueuedCompletionStatus
PostQuitMessage
PostThreadMessage
PpropFindProp
PR_RTF_IN_SYNC
PrepareTape
PrintDlg
PrinterMessageBox
PrinterProperties
PrivilegeCheck
PrivilegedServiceAuditAlarm
ProgIDFromCLSID
PropCopyMore
PropertySheet
PropVariantClear
PropVariantCopy
PtInRect
PtInRegion
PtVisible
PulseEvent
PurgeComm
QueryDosDevice
QueryInformationJobObject
QueryPathOfRegTypeLib
QueryPerformanceCounter
QueryPerformanceFrequency
QueryServiceConfig
QueryServiceConfig2
QueryServiceLockStatus
QueryServiceObjectSecurity
QueryServiceStatus
QueueUserAPC
RaiseException
RasAdminFreeBuffer
RasAdminGetErrorString
RasAdminGetUserAccountServer
RasAdminPortClearStatistics
RasAdminPortDisconnect
RasAdminPortEnum
RasAdminPortGetInfo
RasAdminServerGetInfo
RasAdminUserGetInfo
RasAdminUserSetInfo
RasConnectionNotification
RasCreatePhonebookEntry
RasDeleteEntry
RasDial
RasDialDlg
RasEditPhonebookEntry
RasEntryDlg
RasEnumAutodialAddresses
RasEnumConnections
RasEnumDevices
RasEnumEntries
RasGetAutodialAddress
RasGetAutodialEnable
RasGetAutodialParam
RasGetConnectStatus
RasGetCountryInfo
RasGetCredentials
RasGetEntryDialParams
RasGetEntryProperties
RasGetErrorString
RasGetProjectionInfo
RasGetSubEntryHandle
RasGetSubEntryProperties
RasHangUp
RasMonitorDlg
RasPhonebookDlg
RasRenameEntry
RasSecurityDialogComplete
RasSecurityDialogGetInfo
RasSecurityDialogReceive
RasSecurityDialogSend
RasSetAutodialAddress
RasSetAutodialEnable
RasSetAutodialParam
RasSetCredentials
RasSetEntryDialParams
RasSetEntryProperties
RasSetSubEntryProperties
RasValidateEntryName
ReadClassStg
ReadClassStm
ReadConsole
ReadConsoleInput
ReadConsoleOutput
ReadConsoleOutputAttribute
ReadConsoleOutputCharacter
ReadDirectoryChangesW
ReadEventLog
ReadFile
ReadFileEx
ReadFileScatter
ReadFmtUserTypeStg
ReadPrinter
ReadProcessMemory
ReadRaw
RealizePalette
ReBaseImage
Rectangle
RectInRegion
RectVisible
recv
recvfrom
RedrawWindow
RegCloseKey
RegConnectRegistry
RegCreateKey
RegCreateKeyEx
RegDeleteKey
RegDeleteValue
RegEnumKey
RegEnumKeyEx
RegEnumValue
RegFlushKey
RegGetKeySecurity
RegisterActiveObject
RegisterClass
RegisterClassEx
RegisterClipboardFormat
RegisterDialogClasses
RegisterDragDrop
RegisterEventSource
RegisterHotKey
RegisterServiceCtrlHandler
RegisterTypeLib
RegisterWindowMessage
RegLoadKey
RegNotifyChangeKeyValue
RegOpenKey
RegOpenKeyEx
RegQueryInfoKey
RegQueryMultipleValues
RegQueryValue
RegQueryValueEx
RegReplaceKey
RegRestoreKey
RegSaveKey
RegSetKeySecurity
RegSetValue
RegSetValueEx
RegUnLoadKey
ReleaseCapture
ReleaseDC
ReleaseMutex
ReleaseSemaphore
ReleaseStgMedium
RemoveDirectory
RemoveFontResource
RemoveMenu
RemovePrivateCvSymbolic
RemoveProp
RemoveRelocations
ReplaceText
ReplyMessage
ReportEvent
RequestDeviceWakeup
RequestWakeupLatency
ResetDC
ResetEvent
ResetPrinter
ResizePalette
RestoreDC
ResumeThread
ReuseDDElParam
RevertToSelf
RevokeActiveObject
RevokeDragDrop
RoundRect
RpcAbnormalTermination
RpcBindingCopy
RpcBindingFree
RpcBindingFromStringBinding
RpcBindingInqAuthClient
RpcBindingInqAuthInfo
RpcBindingInqObject
RpcBindingReset
RpcBindingServerFromClient
RpcBindingSetAuthInfo
RpcBindingSetObject
RpcBindingToStringBinding
RpcBindingVectorFree
RpcCancelThread
RpcEndExcept
RpcEndFinally
RpcEpRegister
RpcEpRegisterNoReplace
RpcEpResolveBinding
RpcEpUnregister
RpcExcept
RpcExceptionCode
RpcFinally
RpcIfIdVectorFree
RpcIfInqId
RpcImpersonateClient
RpcMacSetYieldInfo
RpcMgmtEnableIdleCleanup
RpcMgmtEpEltInqBegin
RpcMgmtEpEltInqDone
RpcMgmtEpEltInqNext
RpcMgmtEpUnregister
RpcMgmtInqComTimeout
RpcMgmtInqDefaultProtectLevel
RpcMgmtInqIfIds
RpcMgmtInqServerPrincName
RpcMgmtInqStats
RpcMgmtIsServerListening
RpcMgmtSetAuthorizationFn
RpcMgmtSetCancelTimeout
RpcMgmtSetComTimeout
RpcMgmtSetServerStackSize
RpcMgmtStatsVectorFree
RpcMgmtStopServerListening
RpcMgmtWaitServerListen
RpcNetworkInqProtseqs
RpcNetworkIsProtseqValid
RpcNsBindingExport
RpcNsBindingImportBegin
RpcNsBindingImportDone
RpcNsBindingImportNext
RpcNsBindingInqEntryName
RpcNsBindingLookupBegin
RpcNsBindingLookupDone
RpcNsBindingLookupNext
RpcNsBindingSelect
RpcNsBindingUnexport
RpcNsEntryExpandName
RpcNsEntryObjectInqBegin
RpcNsEntryObjectInqDone
RpcNsEntryObjectInqNext
RpcNsGroupDelete
RpcNsGroupMbrAdd
RpcNsGroupMbrInqBegin
RpcNsGroupMbrInqDone
RpcNsGroupMbrInqNext
RpcNsGroupMbrRemove
RpcNsMgmtBindingUnexport
RpcNsMgmtEntryCreate
RpcNsMgmtEntryDelete
RpcNsMgmtEntryInqIfIds
RpcNsMgmtHandleSetExpAge
RpcNsMgmtInqExpAge
RpcNsMgmtSetExpAge
RpcNsProfileDelete
RpcNsProfileEltAdd
RpcNsProfileEltInqBegin
RpcNsProfileEltInqDone
RpcNsProfileEltInqNext
RpcNsProfileEltRemove
RpcObjectInqType
RpcObjectSetInqFn
RpcObjectSetType
RpcProtseqVectorFree
RpcRaiseException
RpcRevertToSelf
RpcRevertToSelfEx
RpcServerInqBindings
RpcServerInqIf
RpcServerListen
RpcServerRegisterAuthInfo
RpcServerRegisterIf
RpcServerRegisterIfEx
RpcServerUnregisterIf
RpcServerUseAllProtseqs
RpcServerUseAllProtseqsEx
RpcServerUseAllProtseqsIf
RpcServerUseAllProtseqsIfEx
RpcServerUseProtseq
RpcServerUseProtseqEp
RpcServerUseProtseqEpEx
RpcServerUseProtseqEx
RpcServerUseProtseqIf
RpcServerUseProtseqIfEx
RpcSmAllocate
RpcSmClientFree
RpcSmDestroyClientContext
RpcSmDisableAllocate
RpcSmEnableAllocate
RpcSmFree
RpcSmGetThreadHandle
RpcSmSetClientAllocFree
RpcSmSetThreadHandle
RpcSmSwapClientAllocFree
RpcSsAllocate
RpcSsDestroyClientContext
RpcSsDisableAllocate
RpcSsDontSerializeContext
RpcSsEnableAllocate
RpcSsFree
RpcSsGetThreadHandle
RpcSsSetClientAllocFree
RpcSsSetThreadHandle
RpcSsSwapClientAllocFree
RpcStringBindingCompose
RpcStringBindingParse
RpcStringFree
RpcTestCancel
RpcTryExcept
RpcTryFinally
RpcWinSetYieldInfo
RpcWinSetYieldTimeout
RTFSync
RtmAddRoute
RtmBlockDeleteRoutes
RtmCloseEnumerationHandle
RtmCreateEnumerationHandle
RtmDeleteRoute
RtmDequeueRouteChangeMessage
RtmDeregisterClient
RtmEnumerateGetNextRoute
RtmGetFirstRoute
RtmGetNetworkCount
RtmGetNextRoute
RtmGetRouteAge
RtmIsRoute
RtmRegisterClient
RxNetAccessAdd
RxNetAccessDel
RxNetAccessEnum
RxNetAccessGetInfo
RxNetAccessGetUserPerms
RxNetAccessSetInfo
RxRemoteApi
SafeArrayAccessData
SafeArrayAllocData
SafeArrayAllocDescriptor
SafeArrayCopy
SafeArrayCopyData
SafeArrayCreate
SafeArrayCreateVector
SafeArrayDestroy
SafeArrayDestroyData
SafeArrayDestroyDescriptor
SafeArrayGetDim
SafeArrayGetElement
SafeArrayGetElemsize
SafeArrayGetLBound
SafeArrayGetUBound
SafeArrayLock
SafeArrayPtrOfIndex
SafeArrayPutElement
SafeArrayRedim
SafeArrayUnaccessData
SafeArrayUnlock
SaveDC
ScaleViewportExtEx
ScaleWindowExtEx
SCardAddReaderToGroup
SCardBeginTransaction
SCardCancel
SCardConnect
SCardControl
SCardDisconnect
SCardEndTransaction
SCardEstablishContext
SCardForgetCardType
SCardForgetReader
SCardForgetReaderGroup
SCardFreeMemory
SCardGetAttrib
SCardGetProviderId
SCardGetStatusChange
SCardIntroduceCardType
SCardIntroduceReader
SCardIntroduceReaderGroup
SCardListCards
SCardListInterfaces
SCardListReaderGroups
SCardListReaders
SCardLocateCards
SCardReconnect
SCardReleaseContext
SCardRemoveReaderFromGroup
SCardSetAttrib
SCardState
SCardTransmit
ScBinFromHexBounded
ScCopyNotifications
ScCopyProps
ScCountNotifications
ScCountProps
ScCreateConversationIndex
ScDupPropset
ScheduleJob
ScInitMapiUtil
ScLocalPathFromUNC
ScMAPIXFromCMC
ScMAPIXFromSMAPI
ScreenSaverConfigureDialog
ScreenSaverProc
ScreenToClient
ScRelocNotifications
ScRelocProps
ScrollConsoleScreenBuffer
ScrollDC
ScrollWindow
ScrollWindowEx
ScUNCFromLocalPath
SearchPath
SearchTreeForFile
select
SelectClipPath
SelectClipRgn
SelectObject
SelectPalette
send
SendDlgItemMessage
SendDriverMessage
SendIMEMessageEx
SendInput
SendMessage
SendMessageCallback
SendMessageTimeout
SendNotifyMessage
sendto
SetAbortProc
SetAclInformation
SetActiveWindow
SetArcDirection
SetAttribIMsgOnIStg
SetBitmapDimensionEx
SetBkColor
SetBkMode
SetBoundsRect
SetBrushOrgEx
SetCapture
SetCaretBlinkTime
SetCaretPos
SetClassLong
SetClassWord
SetClipboardData
SetClipboardViewer
SetColorAdjustment
SetCommBreak
SetCommConfig
SetCommMask
SetCommState
SetCommTimeouts
SetComputerName
SetConsoleActiveScreenBuffer
SetConsoleCP
SetConsoleCtrlHandler
SetConsoleCursorInfo
SetConsoleCursorPosition
SetConsoleMode
SetConsoleOutputCP
SetConsoleScreenBufferSize
SetConsoleTextAttribute
SetConsoleTitle
SetConsoleWindowInfo
SetConvertStg
SetCriticalSectionSpinCount
SetCurrentDirectory
SetCursor
SetCursorPos
SetDCBrushColor
SetDCPenColor
SetDebugErrorLevel
SetDefaultCommConfig
SetDIBColorTable
SetDIBits
SetDIBitsToDevice
SetDlgItemInt
SetDlgItemText
SetDoubleClickTime
SetEndOfFile
SetEnhMetaFileBits
SetEntriesInAccessList
SetEntriesInAcl
SetEntriesInAuditList
SetEnvironmentVariable
SetErrorInfo
SetErrorMode
SetEvent
SetFileApisToANSI
SetFileApisToOEM
SetFileAttributes
SetFilePointer
SetFileSecurity
SetFileTime
SetFocus
SetForegroundWindow
SetForm
SetGraphicsMode
SetHandleCount
SetHandleInformation
SetImageConfigInformation
SetInformationJobObject
SetJob
SetKernelObjectSecurity
SetKeyboardState
SetLastError
SetLastErrorEx
SetLocaleInfo
SetLocalTime
SetMailslotInfo
SetMapMode
SetMapperFlags
SetMenu
SetMenuContextHelpId
SetMenuDefaultItem
SetMenuItemBitmaps
SetMenuItemInfo
SetMessageExtraInfo
SetMessageWaitingIndicator
SetMetaRgn
SetMiterLimit
SetNamedPipeHandleState
SetNamedSecurityInfo
SetNamedSecurityInfoEx
SetPaletteEntries
SetParent
SetPixel
SetPixelFormat
SetPixelV
SetPolyFillMode
SetPort
SetPrinter
SetPrinterData
SetPrinterDataEx
SetPriorityClass
SetPrivateObjectSecurity
SetPrivateObjectSecurityEx
SetProcessAffinityMask
SetProcessPriorityBoost
SetProcessShutdownParameters
SetProcessWindowStation
SetProcessWorkingSetSize
SetProp
SetRect
SetRectEmpty
SetRectRgn
SetROP2
SetScrollInfo
SetScrollPos
SetScrollRange
SetSecurityDescriptorControl
SetSecurityDescriptorDacl
SetSecurityDescriptorGroup
SetSecurityDescriptorOwner
SetSecurityDescriptorSacl
SetSecurityInfo
SetSecurityInfoEx
SetService
SetServiceBits
SetServiceObjectSecurity
SetServiceStatus
setsockopt
SetStdHandle
SetStretchBltMode
SetSysColors
SetSystemCursor
SetSystemPaletteUse
SetSystemPowerState
SetSystemTime
SetSystemTimeAdjustment
SetTapeParameters
SetTapePosition
SetTextAlign
SetTextCharacterExtra
SetTextColor
SetTextJustification
SetThreadAffinityMask
SetThreadContext
SetThreadDesktop
SetThreadExecutionState
SetThreadIdealProcessor
SetThreadLocale
SetThreadPriority
SetThreadPriorityBoost
SetThreadToken
SetTimer
SetTimeZoneInformation
SetTokenInformation
SetUnhandledExceptionFilter
SetupAddInstallSectionToDiskSpaceList
SetupAddSectionToDiskSpaceList
SetupAddToDiskSpaceList
SetupAddToSourceList
SetupCancelTemporarySourceList
SetupCloseFileQueue
SetupCloseInfFile
SetupComm
SetupCommitFileQueue
SetupCopyError
SetupCreateDiskSpaceList
SetupDecompressOrCopyFile
SetupDefaultQueueCallback
SetupDeleteError
SetupDestroyDiskSpaceList
SetupFindFirstLine
SetupFindNextLine
SetupFindNextMatchLine
SetupFreeSourceList
SetupGetBinaryField
SetupGetFieldCount
SetupGetFileCompressionInfo
SetupGetInfFileList
SetupGetInflnformation
SetupGetIntField
SetupGetLineByIndex
SetupGetLineCount
SetupGetLineText
SetupGetMultiSzField
SetupGetSourceFileLocation
SetupGetSourceFileSize
SetupGetSourceInfo
SetupGetStringField
SetupGetTargetPath
SetupInitDefaultQueueCallback
SetupInitDefaultQueueCallbackEx
SetupInitializeFileLog
SetupInstallFile
SetupInstallFileEx
SetupInstallFilesFromInfSection
SetupInstallFromInfSection
SetupInstallServicesFromInfSection
SetupIterateCabinet
SetupLogError
SetupLogFile
SetupOpenAppendInfFile
SetupOpenFileQueue
SetupOpenInfFile
SetupOpenMasterInf
SetupPromptForDisk
SetupPromptReboot
SetupQueryDrivesInDiskSpaceList
SetupQueryFileLog
SetupQueryInfFileInformation
SetupQueryInfVersionInformation
SetupQuerySourceList
SetupQuerySpaceRequiredOnDrive
SetupQueueCopy
SetupQueueCopySection
SetupQueueDefaultCopy
SetupQueueDelete
SetupQueueDeleteSection
SetupQueueRename
SetupQueueRenameSection
SetupRemoveFileLogEntry
SetupRemoveFromDiskSpaceList
SetupRemoveFromSourceList
SetupRemoveInstallSectionFromDiskSpaceList
SetupRemoveSectionFromDiskSpaceList
SetupRenameError
SetupScanFileQueue
SetupSetDirectoryId
SetupSetPlatformPathOverride
SetupSetSourceList
SetupTermDefaultQueueCallback
SetupTerminateFileLog
SetUserObjectInformation
SetUserObjectSecurity
SetViewportExtEx
SetViewportOrgEx
SetVolumeLabel
SetWaitableTimer
SetWindowContextHelpId
SetWindowExtEx
SetWindowLong
SetWindowOrgEx
SetWindowPlacement
SetWindowPos
SetWindowRgn
SetWindowsHookEx
SetWindowText
SetWinMetaFileBits
SetWorldTransform
SHAddToRecentDocs
SHAppBarMessage
SHBrowseForFolder
SHChangeNotify
Shell_NotifyIcon
ShellAbout
ShellExecute
ShellExecuteEx
SHFileOperation
SHFreeNameMappings
SHGetDataFromIDList
SHGetDesktopFolder
SHGetFileInfo
SHGetInstanceExplorer
SHGetMalloc
SHGetPathFromIDList
SHGetSpecialFolderLocation
SHLoadInProc
short_array_from_ndr
short_from_ndr
short_from_ndr_temp
ShowCaret
ShowCursor
ShowHideMenuCtl
ShowOwnedPopups
ShowScrollBar
ShowWindow
ShowWindowAsync
shutdown
SignalObjectAndWait
SizeofResource
Sleep
SleepEx
sndPlaySound
SnmpCleanup
SnmpClose
SnmpContextToStr
SnmpCountVbl
SnmpCreatePdu
SnmpCreateSession
SnmpCreateVbl
SnmpDecodeMsg
SnmpDeleteVb
SnmpDuplicatePdu
SnmpDuplicateVbl
SnmpEncodeMsg
SnmpEntityToStr
SnmpFreeContext
SnmpFreeDescriptor
SnmpFreeEntity
SnmpFreePdu
SnmpFreeVbl
SnmpGetLastError
SnmpGetPduData
SnmpGetRetransmitMode
SnmpGetRetry
SnmpGetTimeout
SnmpGetTranslateMode
SnmpGetVb
SnmpMgrClose
SnmpMgrGetTrap
SnmpMgrOidToStr
SnmpMgrOpen
SnmpMgrRequest
SnmpMgrStrToOid
SnmpMgrTrapListen
SnmpOidCompare
SnmpOidCopy
SnmpOidToStr
SnmpOpen
SnmpRecvMsg
SnmpRegister
SnmpSendMsg
SnmpSetPduData
SnmpSetRetransmitMode
SnmpSetRetry
SnmpSetTimeout
SnmpSetTranslateMode
SnmpSetVb
SnmpStartup
SnmpStrToContext
SnmpStrToEntity
SnmpStrToOid
SnmpSvcGetUptime
SnmpSvcSetLogLevel
SnmpSvcSetLogType
SnmpUtilAsnAnyCpy
SnmpUtilAsnAnyFree
SnmpUtilDbgPrint
SnmpUtilMemAlloc
SnmpUtilMemFree
SnmpUtilMemReAlloc
SnmpUtilOctetsCmp
SnmpUtilOctetsCpy
SnmpUtilOctetsFree
SnmpUtilOctetsNCmp
SnmpUtilOidAppend
SnmpUtilOidCmp
SnmpUtilOidCpy
SnmpUtilOidFree
SnmpUtilOidNCmp
SnmpUtilPrintAsnAny
SnmpUtilVarBindCpy
SnmpUtilVarBindFree
SnmpUtilVarBindListCpy
SnmpUtilVarBindListFree
socket
SplitSymbols
StackWalk
StartDoc
StartDocPrinter
StartPage
StartPagePrinter
StartService
StartServiceCtrlDispatcher
StgCreateDocfile
StgCreateDocfileOnILockBytes
StgCreateStorageEx
StgGetIFillLockBytesOnFile
StgGetIFillLockBytesOnILockBytes
StgIsStorageFile
StgIsStorageILockBytes
StgOpenAsyncDocfileOnIFillLockBytes
StgOpenStorage
StgOpenStorageEx
StgOpenStorageOnILockBytes
StgSetTimes
StretchBlt
StretchDIBits
StringFromCLSID
StringFromGUID2
StringFromIID
StrokeAndFillPath
StrokePath
SubtractRect
SuspendThread
SwapBuffers
SwapMouseButton
SwitchDesktop
SwitchToFiber
SwitchToThread
SymCleanup
SymEnumerateModules
SymEnumerateSymbols
SymFunctionTableAccess
SymGetModuleBase
SymGetModuleInfo
SymGetOptions
SymGetSearchPath
SymGetSymFromAddr
SymGetSymFromName
SymGetSymNext
SymGetSymPrev
SymInitialize
SymLoadModule
SymRegisterCallback
SymSetOptions
SymSetSearchPath
SymUnDName
SymUnloadModule
SysAllocString
SysAllocStringByteLen
SysAllocStringLen
SysFreeString
SysReAllocString
SysReAllocStringLen
SysStringByteLen
SysStringLen
SystemParametersInfo
SystemTimeToFileTime
SystemTimeToTzSpecificLocalTime
SystemTimeToVariantTime
SzFindCh
SzFindLastCh
SzFindSz
TabbedTextOut
tapiGetLocationInfo
tapiRequestMakeCall
TerminateJobObject
TerminateProcess
TerminateThread
TextOut
TileWindows
timeBeginPeriod
timeEndPeriod
timeGetDevCaps
timeGetSystemTime
timeGetTime
timeKillEvent
timeSetEvent
TlsAlloc
TlsFree
TlsGetValue
TlsSetValue
ToAscii
ToAsciiEx
ToUnicode
ToUnicodeEx
TraceDeregister
TraceDump
TraceDumpEx
TracePrintf
TracePrintfEx
TracePuts
TracePutsEx
TraceRegister
TraceRegisterEx
TraceVprintf
TraceVprintfEx
TrackMouseEvent
TrackPopupMenu
TrackPopupMenuEx
TransactNamedPipe
TranslateAccelerator
TranslateCharsetInfo
TranslateMDISysAccel
TranslateMessage
TransmitCommChar
TransmitFile
TransparentBlt
tree_into_ndr
tree_peek_ndr
tree_size_ndr
TrusteeAccessToObject
TryEnterCriticalSection
UFromSz
UlAddRef
UlFromSzHex
UlPropSize
UlRelease
UlValidateParameters
UlValidateParms
UnDecorateSymbolName
UnhandledExceptionFilter
UnhookWindowsHookEx
UnionRect
UnloadKeyboardLayout
UnlockFile
UnlockFileEx
UnlockServiceDatabase
UnMapAndLoad
UnmapDebugInformation
UnmapViewOfFile
UnpackDDElParam
UnrealizeObject
UnregisterClass
UnregisterHotKey
UpdateColors
UpdateDebugInfoFile
UpdateDebugInfoFileEx
UpdateResource
UpdateWindow
UserHandleGrantAccess
UuidCompare
UuidCreate
UuidCreateNil
UuidEqual
UuidFromString
UuidHash
UuidIsNil
UuidToString
ValidateParameters
ValidateParms
ValidateRect
ValidateRgn
VarBoolFromCy
VarBoolFromDate
VarBoolFromDec
VarBoolFromDisp
VarBoolFromI1
VarBoolFromI2
VarBoolFromI4
VarBoolFromR4
VarBoolFromR8
VarBoolFromStr
VarBoolFromUI1
VarBoolFromUI2
VarBoolFromUI4
VarBstrFromBool
VarBstrFromCy
VarBstrFromDate
VarBstrFromDisp
VarBstrFromI1
VarBstrFromI2
VarBstrFromI4
VarBstrFromR4
VarBstrFromR8
VarBstrFromUI1
VarBstrFromUI2
VarBstrFromUI4
VarCyFromBool
VarCyFromDate
VarCyFromDec
VarCyFromDisp
VarCyFromI1
VarCyFromI2
VarCyFromI4
VarCyFromR4
VarCyFromR8
VarCyFromStr
VarCyFromUI1
VarCyFromUI2
VarCyFromUI4
VarDateFromBool
VarDateFromCy
VarDateFromDec
VarDateFromDisp
VarDateFromI1
VarDateFromI2
VarDateFromI4
VarDateFromR4
VarDateFromR8
VarDateFromStr
VarDateFromUdate
VarDateFromUI1
VarDateFromUI2
VarDateFromUI4
VarDecFromBool
VarDecFromCy
VarDecFromDate
VarDecFromDisp
VarDecFromI1
VarDecFromI2
VarDecFromI4
VarDecFromR4
VarDecFromR8
VarDecFromStr
VarDecFromUI1
VarDecFromUI2
VarDecFromUI4
VarI1FromBool
VarI1FromCy
VarI1FromDate
VarI1FromDec
VarI1FromDisp
VarI1FromI2
VarI1FromI4
VarI1FromR4
VarI1FromR8
VarI1FromStr
VarI1FromUI1
VarI1FromUI2
VarI1FromUI4
VarI2FromBool
VarI2FromCy
VarI2FromDate
VarI2FromDec
VarI2FromDisp
VarI2FromI1
VarI2FromI4
VarI2FromR4
VarI2FromR8
VarI2FromStr
VarI2FromUI1
VarI2FromUI2
VarI2FromUI4
VarI4FromBool
VarI4FromCy
VarI4FromDate
VarI4FromDec
VarI4FromDisp
VarI4FromI1
VarI4FromI2
VarI4FromR4
VarI4FromR8
VarI4FromStr
VarI4FromUI1
VarI4FromUI2
VarI4FromUI4
VariantChangeType
VariantChangeTypeEx
VariantClear
VariantCopy
VariantCopyInd
VariantInit
VariantTimeToDosDateTime
VariantTimeToSystemTime
VarNumFromParseNum
VarParseNumFromStr
VarR4FromBool
VarR4FromCy
VarR4FromDate
VarR4FromDec
VarR4FromDisp
VarR4FromI1
VarR4FromI2
VarR4FromI4
VarR4FromR8
VarR4FromStr
VarR4FromUI1
VarR4FromUI2
VarR4FromUI4
VarR8FromBool
VarR8FromCy
VarR8FromDate
VarR8FromDec
VarR8FromDisp
VarR8FromI1
VarR8FromI2
VarR8FromI4
VarR8FromR4
VarR8FromStr
VarR8FromUI1
VarR8FromUI2
VarR8FromUI4
VarUdateFromDate
VarUI1FromBool
VarUI1FromCy
VarUI1FromDate
VarUI1FromDec
VarUI1FromDisp
VarUI1FromI1
VarUI1FromI2
VarUI1FromI4
VarUI1FromR4
VarUI1FromR8
VarUI1FromStr
VarUI1FromUI2
VarUI1FromUI4
VarUI2FromBool
VarUI2FromCy
VarUI2FromDate
VarUI2FromDec
VarUI2FromDisp
VarUI2FromI1
VarUI2FromI2
VarUI2FromI4
VarUI2FromR4
VarUI2FromR8
VarUI2FromStr
VarUI2FromUI1
VarUI2FromUI4
VarUI4FromBool
VarUI4FromCy
VarUI4FromDate
VarUI4FromDec
VarUI4FromDisp
VarUI4FromI1
VarUI4FromI2
VarUI4FromI4
VarUI4FromR4
VarUI4FromR8
VarUI4FromStr
VarUI4FromUI1
VarUI4FromUI2
VectorFromBstr
VerFindFile
VerInstallFile
VerLanguageName
VerQueryValue
VirtualAlloc
VirtualAllocEx
VirtualFree
VirtualFreeEx
VirtualLock
VirtualProtect
VirtualProtectEx
VirtualQuery
VirtualQueryEx
VirtualUnlock
VkKeyScan
VkKeyScanEx
WaitCommEvent
WaitForDebugEvent
WaitForInputIdle
WaitForMultipleObjects
WaitForMultipleObjectsEx
WaitForSingleObject
WaitForSingleObjectEx
WaitMessage
WaitNamedPipe
waveInAddBuffer
waveInClose
waveInGetDevCaps
waveInGetErrorText
waveInGetID
waveInGetNumDevs
waveInGetPosition
waveInMessage
waveInOpen
waveInPrepareHeader
waveInReset
waveInStart
waveInStop
waveInUnprepareHeader
waveOutBreakLoop
waveOutClose
waveOutGetDevCaps
waveOutGetErrorText
waveOutGetID
waveOutGetNumDevs
waveOutGetPitch
waveOutGetPlaybackRate
waveOutGetPosition
waveOutGetVolume
waveOutMessage
waveOutOpen
waveOutPause
waveOutPrepareHeader
waveOutReset
waveOutRestart
waveOutSetPitch
waveOutSetPlaybackRate
waveOutSetVolume
waveOutUnprepareHeader
waveOutWrite
wglCopyContext
wglCreateContext
wglCreateLayerContext
wglDeleteContext
wglDescribeLayerPlane
wglGetCurrentContext
wglGetCurrentDC
wglGetLayerPaletteEntries
wglGetProcAddress
wglMakeCurrent
wglRealizeLayerPalette
wglSetLayerPaletteEntries
wglShareLists
wglSwapLayerBuffers
wglUseFontBitmaps
wglUseFontOutlines
WideCharToMultiByte
WidenPath
WindowFromDC
WindowFromPoint
WinExec
WinHelp
WinLoadTrustProvider
WINNLSEnableIME
WINNLSGetEnableStatus
WINNLSGetIMEHotkey
WinSubmitCertificate
WinVerifyTrust
WNetAddConnection
WNetAddConnection2
WNetAddConnection3
WNetCancelConnection
WNetCancelConnection2
WNetCloseEnum
WNetConnectionDialog
WNetConnectionDialog1
WNetDisconnectDialog
WNetDisconnectDialog1
WNetEnumResource
WNetGetConnection
WNetGetLastError
WNetGetNetworkInformation
WNetGetProviderName
WNetGetUniversalName
WNetGetUser
WNetOpenEnum
WNetUseConnection
WPUCloseEvent
WPUCloseSocketHandle
WPUCloseThread
WPUCreateEvent
WPUCreateSocketHandle
WPUFDiSet
WPUGetProviderPath
WPUGetQOSTemplate
WPUModifyIFSHandle
WPUOpenCurrentThread
WPUPostMessage
WPUQueryBlockingCallback
WPUQuerySocketHandleContext
WPUQueueApc
WPUResetEvent
WPUSetEvent
WrapCompressedRTFStream
WrapStoreEntryID
WriteClassStg
WriteClassStm
WriteConsole
WriteConsoleInput
WriteConsoleOutput
WriteConsoleOutputAttribute
WriteConsoleOutputCharacter
WriteFile
WriteFileEx
WriteFileGather
WriteFmtUserTypeStg
WritePrinter
WritePrivateProfileSection
WritePrivateProfileString
WritePrivateProfileStruct
WriteProcessMemory
WriteProfileSection
WriteProfileString
WriteRaw
WriteTapemark
WSAAccept
WSAAddressToString
WSAAsyncGetHostByAddr
WSAAsyncGetHostByName
WSAAsyncGetProtoByName
WSAAsyncGetProtoByNumber
WSAAsyncGetServByName
WSAAsyncGetServByPort
WSAAsyncSelect
WSACancelAsyncRequest
WSACancelBlockingCall
WSACleanup
WSACloseEvent
WSAConnect
WSACreateEvent
WSADuplicateSocket
WSAEnumNameSpaceProviders
WSAEnumNetworkEvents
WSAEnumProtocols
WSAEventSelect
WSAGetLastError
WSAGetOverlappedResult
WSAGetQOSByName
WSAGetServiceClassInfo
WSAGetServiceClassNameByServiceClassId
WSAHtonl
WSAHtons
WSAInstallServiceClass
WSAIoctl
WSAIsBlocking
WSAJoinLeaf
WSALookupServiceBegin
WSALookupServiceEnd
WSALookupServiceNext
WSANtohl
WSANtohs
WSAProviderConfigChange
WSApSetPostRoutine
WSARecv
WSARecvDisconnect
WSARecvEx
WSARecvFrom
WSARemoveServiceClass
WSAResetEvent
WSASend
WSASendDisconnect
WSASendTo
WSASetBlockingHook
WSASetEvent
WSASetLastError
WSASetService
WSASocket
WSAStartup
WSAStringToAddress
WSAUnhookBlockingHook
WSAWaitForMultipleEvents
WSCDeinstallProvider
WSCEnableNSProvider
WSCEnumProtocols
WSCGetProviderPath
WSCInstallNameSpace
WSCInstallProvider
WSCInstallQOSTemplate
WSCRemoveQOSTemplate
WSCUnInstallNameSpace
WSCWriteProviderOrder
WSPAccept
WSPAddressToString
WSPAsyncSelect
WSPBind
WSPCancelBlockingCall
WSPCleanup
WSPCloseSocket
WSPConnect
WSPDuplicateSocket
WSPEnumNetworkEvents
WSPEventSelect
WSPGetOverlappedResult
WSPGetPeerName
WSPGetQOSByName
WSPGetSockName
WSPGetSockOpt
WSPIoctl
WSPJoinLeaf
WSPListen
WSPRecv
WSPRecvDisconnect
WSPRecvFrom
wsprintf
WSPSelect
WSPSend
WSPSendDisconnect
WSPSendTo
WSPSetSockOpt
WSPShutdown
WSPSocket
WSPStartup
WSPStringToAddress
wvsprintf
ZeroMemory
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ParamHlp\Sniff\BinD\baseln\WIN32API.txt ===
__WSAFDIsSet
_hread
_hwrite
_lclose
_lcreat
_llseek
_lopen
_lread
_lwrite
AbnormalTermination
AbortDoc
AbortPath
AbortPrinter
AbortSystemShutdown
ACCELERATEABSDI
accept
AcceptEx
AccessCheck
AccessCheckAndAuditAlarm
AccessCheckByType
AccessCheckByTypeAndAuditAlarm
AccessCheckByTypeResultList
AccessCheckByTypeResultListAndAuditAlarm
acmDriverAdd
acmDriverClose
acmDriverDetails
acmDriverEnum
acmDriverID
acmDriverMessage
acmDriverOpen
acmDriverPriority
acmDriverRemove
acmFilterChoose
acmFilterDetails
acmFilterEnum
acmFilterTagDetails
acmFilterTagEnum
acmFormatChoose
acmFormatDetails
acmFormatEnum
acmFormatSuggest
acmFormatTagDetails
acmFormatTagEnum
acmGetVersion
acmMetrics
acmStreamClose
acmStreamConvert
acmStreamMessage
acmStreamOpen
acmStreamPrepareHeader
acmStreamReset
acmStreamSize
acmStreamUnprepareHeader
AcsLan
ActivateKeyboardLayout
AddAccessAllowedAce
AddAccessAllowedAceEx
AddAccessAllowedObjectAce
AddAccessDeniedAce
AddAccessDeniedAceEx
AddAccessDeniedObjectAce
AddAce
AddAtom
AddAuditAccessAce
AddAuditAccessAceEx
AddAuditAccessObjectAce
AddFontResource
AddForm
AddJob
AddMonitor
AddPort
AddPrinter
AddPrinterConnection
AddPrinterDriver
AddPrinterDriverEx
AddPrintProcessor
AddPrintProvidor
AdjustTokenGroups
AdjustTokenPrivileges
AdjustWindowRect
AdjustWindowRectEx
ADsBuildEnumerator
ADsBuildVarArrayInt
ADsBuildVarArrayStr
ADsEnumerateNext
ADsFreeEnumerator
ADsGetLastError
ADsGetObject
ADsOpenObject
ADsSetLastError
AdvancedDocumentProperties
AllocateAndInitializeSid
AllocateLocallyUniqueId
AllocConsole
AlphaBlend
AngleArc
AnimatePalette
AnimateWindow
AnyPopup
AppendMenu
Arc
ArcTo
AreAllAccessesGranted
AreAnyAccessesGranted
AreFileApisANSI
ArrangeIconicWindows
AssignProcessToJobObject
AttachThreadInput
auxGetDevCaps
auxGetNumDevs
auxGetVolume
auxOutMessage
auxSetVolume
AVIBuildFilter
AVIClearClipboard
AVIFileAddRef
AVIFileCreateStream
AVIFileEndRecord
AVIFileExit
AVIFileGetStream
AVIFileInfo
AVIFileInit
AVIFileOpen
AVIFileReadData
AVIFileRelease
AVIFileWriteData
AVIGetFromClipboard
AVIMakeCompressedStream
AVIMakeFileFromStreams
AVIMakeStreamFromClipboard
AVIPutFileOnClipboard
AVISave
AVISaveOptions
AVISaveOptionsFree
AVISaveV
AVIStreamAddRef
AVIStreamBeginStreaming
AVIStreamCreate
AVIStreamEndStreaming
AVIStreamFindSample
AVIStreamGetFrame
AVIStreamGetFrameClose
AVIStreamGetFrameOpen
AVIStreamInfo
AVIStreamLength
AVIStreamOpenFromFile
AVIStreamRead
AVIStreamReadData
AVIStreamReadFormat
AVIStreamRelease
AVIStreamSampleToTime
AVIStreamSetFormat
AVIStreamStart
AVIStreamTimeToSample
AVIStreamWrite
AVIStreamWriteData
BackupEventLog
BackupRead
BackupSeek
BackupWrite
Beep
BeginDeferWindowPos
BeginPaint
BeginPath
BeginUpdateResource
bind
BindImage
BindImageEx
BindMoniker
BitBlt
BringWindowToTop
BroadcastSystemMessage
BuildCommDCB
BuildCommDCBAndTimeouts
BuildDisplayTable
BuildExplicitAccessWithName
BuildSecurityDescriptor
BuildTrusteeWithName
BuildTrusteeWithSid
CallMsgFilter
CallNamedPipe
CallNextHookEx
CallWindowProc
CancelDC
CancelDeviceWakeupRequest
CancelIo
CancelOverlappedAccess
CancelWaitableTimer
capCreateCaptureWindow
capGetDriverDescription
CascadeWindows
CertAddCertificateContextToStore
CertAddCRLContextToStore
CertAddCTLContextToStore
CertAddEncodedCertificateToStore
CertAddEncodedCRLToStore
CertAddEncodedCTLToStore
CertAddSerializedElementToStore
CertAlgIdToOID
CertCloseStore
CertCompareCertificate
CertCompareCertificateName
CertCompareIntegerBlob
CertComparePublicKeyInfo
CertCreateCertificateContext
CertCreateCRLContext
CertCreateCTLContext
CertDeleteCertificateFromStore
CertDeleteCRLFromStore
CertDeleteCTLFromStore
CertDuplicateCertificateContext
CertDuplicateCRLContext
CertDuplicateCTLContext
CertDuplicateStore
CertEnumCertificateContextProperties
CertEnumCertificatesInStore
CertEnumCRLContextProperties
CertEnumCTLContextProperties
CertEnumCTLsInStore
CertFindAttribute
CertFindCertificateInStore
CertFindCTLInStore
CertFindExtension
CertFindRDNAttr
CertFindSubjectInCTL
CertFreeCertificateContext
CertFreeCRLContext
CertFreeCTLContext
CertGetCertificateContextProperty
CertGetCRLContextProperty
CertGetCRLFromStore
CertGetCTLContextProperty
CertGetIntendedKeyUsage
CertGetIssuerCertificateFromStore
CertGetSubjectCertificateFromStore
CertIsRDNAttrsInCertificateName
CertNameToStr
CertOIDToAlgId
CertOpenStore
CertOpenSystemStore
CertRDNValueToStr
CertSaveStore
CertSerializeCertificateStoreElement
CertSerializeCRLStoreElement
CertSerializeCTLStoreElement
CertSetCertificateContextProperty
CertSetCRLContextProperty
CertSetCTLContextProperty
CertStrToName
CertVerifyCRLRevocation
CertVerifyCRLTimeValidity
CertVerifyCTLUsage
CertVerifyRevocation
CertVerifySubjectCertificateContext
CertVerifyTimeValidity
CertVerifyValidityNesting
ChangeClipboardChain
ChangeDisplaySettings
ChangeIdleRoutine
ChangeServiceConfig
ChangeServiceConfig2
char_array_from_ndr
char_from_ndr
CharLower
CharLowerBuff
CharNext
CharNextExA
CharPrev
CharPrevExA
CharToOem
CharToOemBuff
CharUpper
CharUpperBuff
CheckDlgButton
CheckMenuItem
CheckMenuRadioItem
CheckParameters
CheckParms
CheckRadioButton
CheckSumMappedFile
ChildWindowFromPoint
ChildWindowFromPointEx
ChooseColor
ChooseFont
ChoosePixelFormat
Chord
ClearCommBreak
ClearCommError
ClearEventLog
ClientToScreen
ClipCursor
CloseClipboard
CloseDesktop
CloseDriver
CloseEnhMetaFile
CloseEventLog
CloseFigure
CloseHandle
CloseIMsgSession
ClosePrinter
CloseRaw
CloseServiceHandle
closesocket
CloseWindow
CloseWindowStation
CLSIDFromProgID
CLSIDFromString
cmc_act_on
cmc_free
cmc_list
cmc_logoff
cmc_logon
cmc_look_up
cmc_query_configuration
cmc_read
cmc_send
cmc_send_documents
CoAddRefServerProcess
CoBuildVersion
CoCopyProxy
CoCreateFreeThreadedMarshaler
CoCreateGuid
CoCreateInstance
CoCreateInstanceEx
CoDisconnectObject
CoDosDateTimeToFileTime
CoFileTimeNow
CoFileTimeToDosDateTime
CoFreeAllLibraries
CoFreeLibrary
CoFreeUnusedLibraries
CoGetCallContext
CoGetClassObject
CoGetCurrentProcess
CoGetInstanceFromFile
CoGetInstanceFromIStorage
CoGetInterfaceAndReleaseStream
CoGetMalloc
CoGetMarshalSizeMax
CoGetStandardMarshal
CoGetTreatAsClass
CoImpersonateClient
CoInitialize
CoInitializeEx
CoInitializeSecurity
CoIsHandlerConnected
CoIsOle1Class
CoLoadLibrary
CoLockObjectExternal
CoMarshalHresult
CoMarshalInterface
CoMarshalInterTheadInterfaceInStream
CombineRgn
CombineTransform
CommandLineToArgvW
CommConfigDialog
CommDlgExtendedError
CompareFileTime
CompareString
ConfigurePort
connect
ConnectNamedPipe
ConnectToPrinterDlg
ContinueDebugEvent
ControlService
ConvertAccessToSecurityDescriptor
ConvertDefaultLocale
ConvertSecurityDescriptorToAccess
ConvertSecurityDescriptorToAccessNamed
ConvertThreadToFiber
ConvertToAutoInheritPrivateObjectSecurity
CopyAcceleratorTable
CopyCursor
CopyEnhMetaFile
CopyFile
CopyFileEx
CopyIcon
CopyImage
CopyMemory
CopyRect
CopySid
CoQueryAuthenticationServices
CoQueryClientBlanket
CoQueryProxyBlanket
CoRegisterChannelHook
CoRegisterClassObject
CoRegisterMallocSpy
CoRegisterMessageFilter
CoRegisterPSClsid
CoRegisterSurrogate
CoReleaseMarshalData
CoReleaseServerProcess
CoResumeClassObjects
CoRevertToSelf
CoRevokeClassObject
CoRevokeMallocSpy
CoSetProxyBlanket
CoSuspendClassObjects
CoSwitchCallContext
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
CoTreatAsClass
CoUninitialize
CoUnmarshalHresult
CoUnmarshalInterface
CountClipboardFormats
CreateAcceleratorTable
CreateAntiMoniker
CreateBindCtx
CreateBitmap
CreateBitmapIndirect
CreateBrushIndirect
CreateCaret
CreateClassMoniker
CreateCompatibleBitmap
CreateCompatibleDC
CreateConsoleScreenBuffer
CreateCursor
CreateDataAdviseHolder
CreateDataCache
CreateDC
CreateDesktop
CreateDialogIndirectParam
CreateDialogParam
CreateDIBitmap
CreateDIBPatternBrush
CreateDIBPatternBrushPt
CreateDIBSection
CreateDirectory
CreateDirectoryEx
CreateDiscardableBitmap
CreateDispTypeInfo
CreateEditableStream
CreateEllipticRgn
CreateEllipticRgnIndirect
CreateEnhMetaFile
CreateErrorInfo
CreateEvent
CreateFiber
CreateFile
CreateFileMapping
CreateFileMoniker
CreateFont
CreateFontIndirect
CreateGenericComposite
CreateHalftonePalette
CreateHardLink
CreateHatchBrush
CreateIC
CreateIcon
CreateIconFromResource
CreateIconFromResourceEx
CreateIconIndirect
CreateILockBytesOnHGlobal
CreateIoCompletionPort
CreateIProp
CreateItemMoniker
CreateJobObject
CreateMailslot
CreateMappedBitmap
CreateMDIWindow
CreateMenu
CreateMutex
CreateNamedPipe
CreateOleAdviseHolder
CreatePalette
CreatePatternBrush
CreatePen
CreatePenIndirect
CreatePipe
CreatePointerMoniker
CreatePolygonRgn
CreatePolyPolygonRgn
CreatePopupMenu
CreatePrivateObjectSecurity
CreatePrivateObjectSecurityEx
CreateProcess
CreateProcessAsUser
CreatePropertySheetPage
CreateRectRgn
CreateRectRgnIndirect
CreateRemoteThread
CreateRoundRectRgn
CreateScalableFontResource
CreateSemaphore
CreateService
CreateSolidBrush
CreateStatusWindow
CreateStdDispatch
CreateStreamOnHGlobal
CreateTable
CreateTapePartition
CreateThread
CreateToolbarEx
CreateTypeLib
CreateUpDownControl
CreateWaitableTimer
CreateWindow
CreateWindowEx
CreateWindowStation
CryptAcquireContext
CryptCreateHash
CryptDecodeMessage
CryptDecodeObject
CryptDecrypt
CryptDecryptAndVerifyMessageSignature
CryptDecryptMessage
CryptDeriveKey
CryptDestroyHash
CryptDestroyKey
CryptEncodeObject
CryptEncrypt
CryptEncryptMessage
CryptEnumOIDFunction
CryptExportKey
CryptExportPublicKeyInfo
CryptExportPublicKeyInfoEx
CryptFreeOIDFunctionAddress
CryptGenKey
CryptGenRandom
CryptGetDefaultOIDDllList
CryptGetDefaultOIDFunctionAddress
CryptGetHashParam
CryptGetKeyParam
CryptGetMessageCertificates
CryptGetMessageSignerCount
CryptGetOIDFunctionAddress
CryptGetOIDFunctionValue
CryptGetProvParam
CryptGetUserKey
CryptHashCertificate
CryptHashData
CryptHashMessage
CryptHashPublicKeyInfo
CryptHashSessionKey
CryptHashToBeSigned
CryptImportKey
CryptImportPublicKeyInfo
CryptImportPublicKeyInfoEx
CryptInitOIDFunctionSet
CryptInstallOIDFunctionAddress
CryptMsgCalculateEncodedLength
CryptMsgClose
CryptMsgControl
CryptMsgCountersign
CryptMsgCountersignEncoded
CryptMsgEncodeAndSignCTL
CryptMsgGetAndVerifySigner
CryptMsgGetParam
CryptMsgOpenToDecode
CryptMsgOpenToEncode
CryptMsgSignCTL
CryptMsgUpdate
CryptMsgVerifyCountersignatureEncoded
CryptRegisterDefaultOIDFunction
CryptRegisterOIDFunction
CryptReleaseContext
CryptSetHashParam
CryptSetKeyParam
CryptSetOIDFunctionValue
CryptSetProvider
CryptSetProvParam
CryptSignAndEncodeCertificate
CryptSignAndEncryptMessage
CryptSignCertificate
CryptSignHash
CryptSignMessage
CryptUnregisterDefaultOIDFunction
CryptUnregisterOIDFunction
CryptVerifyCertificateSignature
CryptVerifyDetachedMessageHash
CryptVerifyDetachedMessageSignature
CryptVerifyMessageHash
CryptVerifyMessageSignature
CryptVerifySignature
data_from_ndr
data_into_ndr
data_size_ndr
DceErrorInqText
DdeAbandonTransaction
DdeAccessData
DdeAddData
DdeClientTransaction
DdeCmpStringHandles
DdeConnect
DdeConnectList
DdeCreateDataHandle
DdeCreateStringHandle
DdeDisconnect
DdeDisconnectList
DdeEnableCallback
DdeFreeDataHandle
DdeFreeStringHandle
DdeGetData
DdeGetLastError
DdeImpersonateClient
DdeInitialize
DdeKeepStringHandle
DdeNameService
DdePostAdvise
DdeQueryConvInfo
DdeQueryNextServer
DdeQueryString
DdeReconnect
DdeSetQualityOfService
DdeSetUserHandle
DdeUnaccessData
DdeUninitialize
DebugActiveProcess
DebugBreak
DecryptFile
DefDlgProc
DefDriverProc
DeferWindowPos
DefFrameProc
DefineDosDevice
DefMDIChildProc
DefScreenSaverProc
DefWindowProc
DeinitMapiUtil
DeleteAce
DeleteAtom
DeleteCriticalSection
DeleteDC
DeleteEnhMetaFile
DeleteFiber
DeleteFile
DeleteForm
DeleteMenu
DeleteMonitor
DeleteObject
DeletePort
DeletePrinter
DeletePrinterConnection
DeletePrinterData
DeletePrinterDataEx
DeletePrinterDriver
DeletePrinterDriverEx
DeletePrinterKey
DeletePrintProcessor
DeletePrintProvidor
DeleteService
DeregisterEventSource
DeregisterIdleRoutine
DescribePixelFormat
DestroyAcceleratorTable
DestroyCaret
DestroyCursor
DestroyIcon
DestroyMenu
DestroyPrivateObjectSecurity
DestroyPropertySheetPage
DestroyWindow
DeviceCapabilities
DeviceIoControl
DialogBoxIndirectParam
DialogBoxParam
DisableThreadLibraryCalls
DisconnectNamedPipe
DispatchMessage
DispGetIDsOfNames
DispGetParam
DispInvoke
DlgDirList
DlgDirListComboBox
DlgDirSelectComboBoxEx
DlgDirSelectEx
DllCanUnloadNow
DllGetClassObject
DocumentProperties
DocumentPropertySheets
DoDragDrop
DosDateTimeToFileTime
DosDateTimeToVariantTime
double_array_from_ndr
double_from_ndr
DPtoLP
DragAcceptFiles
DragDetect
DragFinish
DragQueryFile
DragQueryPoint
DrawAnimatedRects
DrawCaption
DrawDibBegin
DrawDibChangePalette
DrawDibClose
DrawDibDraw
DrawDibEnd
DrawDibGetBuffer
DrawDibGetPalette
DrawDibOpen
DrawDibProfileDisplay
DrawDibRealize
DrawDibSetPalette
DrawDibStart
DrawDibStop
DrawDibTime
DrawEdge
DrawEscape
DrawFocusRect
DrawFrameControl
DrawIcon
DrawIconEx
DrawInsert
DrawMenuBar
DrawState
DrawStatusText
DrawText
DrawTextEx
DriverCallback
DrvGetModuleHandle
DsGetDcName
DsGetSiteName
DsValidateSubnetName
DuplicateHandle
DuplicateIcon
DuplicateToken
DuplicateTokenEx
EditStreamClone
EditStreamCopy
EditStreamCut
EditStreamPaste
EditStreamSetInfo
EditStreamSetName
Ellipse
EmptyClipboard
EnableEUDC
EnableIdleRoutine
EnableMenuItem
EnableScrollBar
EnableWindow
EncryptFile
EndDeferWindowPos
EndDialog
EndDoc
EndDocPrinter
EndPage
EndPagePrinter
EndPaint
EndPath
EndUpdateResource
EnterCriticalSection
enum_from_ndr
EnumCalendarInfo
EnumChildWindows
EnumClipboardFormats
EnumDateFormats
EnumDependentServices
EnumDesktops
EnumDesktopWindows
EnumDisplayMonitors
EnumDisplaySettings
EnumEnhMetaFile
EnumFontFamilies
EnumFontFamiliesEx
EnumFonts
EnumForms
EnumJobs
EnumMonitors
EnumObjects
EnumPorts
EnumPrinterData
EnumPrinterDataEx
EnumPrinterDrivers
EnumPrinterKey
EnumPrinters
EnumPrintProcessorDatatypes
EnumPrintProcessors
EnumProps
EnumPropsEx
EnumProtocols
EnumResourceLanguages
EnumResourceNames
EnumResourceTypes
EnumServicesStatus
EnumSystemCodePages
EnumSystemLocales
EnumThreadWindows
EnumTimeFormats
EnumWindows
EnumWindowStations
EqualPrefixSid
EqualRect
EqualRgn
EqualSid
EraseTape
Escape
EscapeCommFunction
ExcludeClipRect
ExcludeUpdateRgn
ExitProcess
ExitThread
ExitWindows
ExitWindowsEx
ExpandEnvironmentStrings
ExtCreatePen
ExtCreateRegion
ExtEscape
ExtFloodFill
ExtractAssociatedIcon
ExtractIcon
ExtractIconEx
ExtSelectClipRgn
ExtTextOut
FatalAppExit
FatalExit
FBadColumnSet
FBadEntryList
FBadProp
FBadPropTag
FBadRestriction
FBadRglpNameID
FBadRglpszW
FBadRow
FBadRowSet
FBadSortOrderSet
FBinFromHex
FEqualNames
FileTimeToDosDateTime
FileTimeToLocalFileTime
FileTimeToSystemTime
FillConsoleOutputAttribute
FillConsoleOutputCharacter
FillMemory
FillPath
FillRect
FillRgn
FindAtom
FindClose
FindCloseChangeNotification
FindClosePrinterChangeNotification
FindDebugInfoFile
FindExecutable
FindExecutableImage
FindFirstChangeNotification
FindFirstFile
FindFirstFileEx
FindFirstFreeAce
FindFirstPrinterChangeNotification
FindNextChangeNotification
FindNextFile
FindNextPrinterChangeNotification
FindResource
FindResourceEx
FindText
FindWindow
FindWindowEx
FlashWindow
FlashWindowEx
FlattenPath
float_array_from_ndr
float_from_ndr
FlushConsoleInputBuffer
FlushFileBuffers
FlushInstructionCache
FlushViewOfFile
FoldString
FormatMessage
FPropCompareProp
FPropContainsProp
FPropExists
FrameRect
FrameRgn
FreeConsole
FreeDDElParam
FreeEnvironmentStrings
FreeLibrary
FreeLibraryAndExitThread
FreePadrlist
FreePrinterNotifyInfo
FreePropVariantArray
FreeProws
FreeSid
FtAddFt
FtgRegisterIdleRoutine
FtMulDw
FtMulDwDw
FtNegFt
FtSubFt
GdiComment
GdiFlush
GdiGetBatchLimit
GdiSetBatchLimit
GenerateConsoleCtrlEvent
GetAcceptExSockaddrs
GetAccessPermissionsForObject
GetAce
GetAclInformation
GetACP
GetActiveObject
GetActiveWindow
GetAddressByName
GetArcDirection
GetAspectRatioFilterEx
GetAsyncKeyState
GetAtomName
GetAttribIMsgOnIStg
GetAuditedPermissionsFromAcl
GetBinaryType
GetBitmapDimensionEx
GetBkColor
GetBkMode
GetBoundsRect
GetBrushOrgEx
GetCapture
GetCaretBlinkTime
GetCaretPos
GetCharABCWidths
GetCharABCWidthsFloat
GetCharacterPlacement
GetCharWidth
GetCharWidth32
GetCharWidthFloat
GetClassFile
GetClassInfo
GetClassInfoEx
GetClassLong
GetClassName
GetClassWord
GetClientRect
GetClipboardData
GetClipboardFormatName
GetClipboardOwner
GetClipboardSequenceNumber
GetClipboardViewer
GetClipBox
GetClipCursor
GetClipRgn
GetColorAdjustment
GetCommandLine
GetCommConfig
GetCommMask
GetCommModemStatus
GetCommProperties
GetCommState
GetCommTimeouts
GetCompressedFileSize
GetComputerName
GetConsoleCP
GetConsoleCursorInfo
GetConsoleMode
GetConsoleOutputCP
GetConsoleScreenBufferInfo
GetConsoleTitle
GetConvertStg
GetCPInfo
GetCPInfoEx
GetCurrencyFormat
GetCurrentDirectory
GetCurrentFiber
GetCurrentHwProfile
GetCurrentObject
GetCurrentPositionEx
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetCursor
GetCursorPos
GetDateFormat
GetDC
GetDCBrushColor
GetDCEx
GetDCOrgEx
GetDCPenColor
GetDefaultCommConfig
GetDesktopWindow
GetDeviceCaps
GetDevicePowerState
GetDialogBaseUnits
GetDIBColorTable
GetDIBits
GetDiskFreeSpace
GetDiskFreeSpaceEx
GetDlgCtrlID
GetDlgItem
GetDlgItemInt
GetDlgItemText
GetDoubleClickTime
GetDriverModuleHandle
GetDriveType
GetEffectiveClientRect
GetEffectiveRightsFromAcl
GetEnhMetaFile
GetEnhMetaFileBits
GetEnhMetaFileDescription
GetEnhMetaFileHeader
GetEnhMetaFilePaletteEntries
GetEnvironmentStrings
GetEnvironmentVariable
GetErrorInfo
GetExceptionCode
GetExceptionInformation
GetExitCodeProcess
GetExitCodeThread
GetExpandedName
GetExplicitEntriesFromAcl
GetFiberData
GetFileAttributes
GetFileAttributesEx
GetFileInformationByHandle
GetFileSecurity
GetFileSize
GetFileTime
GetFileTitle
GetFileType
GetFileVersionInfo
GetFileVersionInfoSize
GetFocus
GetFontAssocStatus
GetFontData
GetFontLanguageInfo
GetFontUnicodeRanges
GetForegroundWindow
GetForm
GetFullPathName
GetGlyphIndicies
GetGlyphOutline
GetGraphicsMode
GetGuiResources
GetHandleInformation
GetHGlobalFromILockBytes
GetHGlobalFromStream
gethostbyaddr
gethostbyname
gethostname
GetIconInfo
GetImageConfigInformation
GetImageUnusedHeaderBytes
GetInputState
GetInstance
GetJob
GetKernelObjectSecurity
GetKerningPairs
GetKeyboardLayout
GetKeyboardLayoutList
GetKeyboardLayoutName
GetKeyboardState
GetKeyboardType
GetKeyNameText
GetKeyState
GetLargestConsoleWindowSize
GetLastActivePopup
GetLastError
GetLengthSid
GetLocaleInfo
GetLocalTime
GetLogicalDrives
GetLogicalDriveStrings
GetLongPathName
GetMailslotInfo
GetMapMode
GetMenu
GetMenuContextHelpId
GetMenuDefaultItem
GetMenuItemCount
GetMenuItemID
GetMenuItemInfo
GetMenuItemRect
GetMessage
GetMessageExtraInfo
GetMessagePos
GetMessageTime
GetMetaFile
GetMetaRgn
GetMiterLimit
GetModuleFileName
GetModuleHandle
GetMonitorInfo
GetMouseMovePoints
GetNameByType
GetNamedPipeHandleState
GetNamedPipeInfo
GetNamedSecurityInfo
GetNamedSecurityInfoEx
GetNearestColor
GetNearestPaletteIndex
GetNextDlgGroupItem
GetNextDlgTabItem
GetNextWindow
GetNumberFormat
GetNumberOfConsoleInputEvents
GetNumberOfConsoleMouseButtons
GetNumberOfEventLogRecords
GetObject
GetObjectType
GetOEMCP
GetOldestEventLogRecord
GetOpenClipboardWindow
GetOpenFileName
GetOpenFileNamePreview
GetOutlineTextMetrics
GetOverlappedAccessResults
GetOverlappedResult
GetPaletteEntries
GetParent
GetPath
getpeername
GetPixel
GetPixelFormat
GetPolyFillMode
GetPrinter
GetPrinterData
GetPrinterDataEx
GetPrinterDriver
GetPrinterDriverDirectory
GetPrintProcessorDirectory
GetPriorityClass
GetPriorityClipboardFormat
GetPrivateObjectSecurity
GetPrivateProfileInt
GetPrivateProfileSection
GetPrivateProfileSectionNames
GetPrivateProfileString
GetPrivateProfileStruct
GetProcAddress
GetProcessAffinityMask
GetProcessHeap
GetProcessHeaps
GetProcessPriorityBoost
GetProcessShutdownParameters
GetProcessTimes
GetProcessVersion
GetProcessWindowStation
GetProcessWorkingSetSize
GetProfileInt
GetProfileSection
GetProfileString
GetProp
getprotobyname
getprotobynumber
GetQueuedCompletionStatus
GetQueueStatus
GetRasterizerCaps
GetRegionData
GetRgnBox
GetROP2
GetRunningObjectTable
GetSaveFileName
GetSaveFileNamePreview
GetScrollInfo
GetScrollPos
GetScrollRange
GetSecurityDescriptorControl
GetSecurityDescriptorDacl
GetSecurityDescriptorGroup
GetSecurityDescriptorLength
GetSecurityDescriptorOwner
GetSecurityDescriptorSacl
GetSecurityInfo
GetSecurityInfoEx
getservbyname
getservbyport
GetService
GetServiceDisplayName
GetServiceKeyName
GetShortPathName
GetSidIdentifierAuthority
GetSidLengthRequired
GetSidSubAuthority
GetSidSubAuthorityCount
getsockname
getsockopt
GetStartupInfo
GetStdHandle
GetStockObject
GetStretchBltMode
GetStringTypeA
GetStringTypeEx
GetStringTypeW
GetSubMenu
GetSysColor
GetSysColorBrush
GetSystemDefaultLangID
GetSystemDefaultLCID
GetSystemDirectory
GetSystemInfo
GetSystemMenu
GetSystemMetrics
GetSystemPaletteEntries
GetSystemPaletteUse
GetSystemPowerStatus
GetSystemTime
GetSystemTimeAdjustment
GetSystemTimeAsFileTime
GetTabbedTextExtent
GetTapeParameters
GetTapePosition
GetTapeStatus
GetTempFileName
GetTempPath
GetTextAlign
GetTextCharacterExtra
GetTextCharset
GetTextCharsetInfo
GetTextColor
GetTextExtentExPoint
GetTextExtentPoint
GetTextExtentPoint32
GetTextFace
GetTextMetrics
GetThreadContext
GetThreadDesktop
GetThreadLocale
GetThreadPriority
GetThreadPriorityBoost
GetThreadSelectorEntry
GetThreadTimes
GetTickCount
GetTimeFormat
GetTimestampForLoadedLibrary
GetTimeZoneInformation
GetTokenInformation
GetTopWindow
GetTrusteeForm
GetTrusteeName
GetTrusteeType
GetTypeByName
GetUpdateRect
GetUpdateRgn
GetUserDefaultLangID
GetUserDefaultLCID
GetUserName
GetUserObjectInformation
GetUserObjectSecurity
GetVersion
GetVersionEx
GetViewportExtEx
GetViewportOrgEx
GetVolumeInformation
GetWindow
GetWindowContextHelpId
GetWindowDC
GetWindowExtEx
GetWindowLong
GetWindowOrgEx
GetWindowPlacement
GetWindowRect
GetWindowRgn
GetWindowsDirectory
GetWindowText
GetWindowTextLength
GetWindowThreadProcessId
GetWinMetaFileBits
GetWorldTransform
glAccum
glAddSwapHintRectWIN
glAlphaFunc
glArrayElement
glBegin
glBitmap
glBlendFunc
glCallList
glCallLists
glClear
glClearAccum
glClearColor
glClearDepth
glClearIndex
glClearStencil
glClipPlane
glColor3b
glColor3bv
glColor3d
glColor3dv
glColor3f
glColor3fv
glColor3i
glColor3iv
glColor3s
glColor3sv
glColor3ub
glColor3ubv
glColor3ui
glColor3uiv
glColor3us
glColor3usv
glColor4b
glColor4bv
glColor4d
glColor4dv
glColor4f
glColor4fv
glColor4i
glColor4iv
glColor4s
glColor4sv
glColor4ub
glColor4ubv
glColor4ui
glColor4uiv
glColor4us
glColor4usv
glColorMask
glColorMaterial
glColorPointerEXT
glCopyPixels
glCullFace
glDeleteLists
glDepthFunc
glDepthMask
glDepthRange
glDisable
glDrawArraysEXT
glDrawBuffer
glDrawPixels
glEdgeFlag
glEdgeFlagPointerEXT
glEdgeFlagv
glEnable
glEnd
glEndList
glEvalCoord1d
glEvalCoord1dv
glEvalCoord1f
glEvalCoord1fv
glEvalCoord2d
glEvalCoord2dv
glEvalCoord2f
glEvalCoord2fv
glEvalMesh1
glEvalMesh2
glEvalPoint1
glEvalPoint2
glFeedbackBuffer
glFinish
glFlush
glFogf
glFogfv
glFogi
glFogiv
glFrontFace
glFrustum
glGenLists
glGetBooleanv
glGetClipPlane
glGetDoublev
glGetError
glGetFloatv
glGetIntegerv
glGetLightfv
glGetLightiv
glGetMapdv
glGetMapfv
glGetMapiv
glGetMaterialfv
glGetMaterialiv
glGetPixelMapfv
glGetPixelMapuiv
glGetPixelMapusv
glGetPointervEXT
glGetPolygonStipple
glGetString
glGetTexEnvfv
glGetTexEnviv
glGetTexGendv
glGetTexGenfv
glGetTexGeniv
glGetTexImage
glGetTexLevelParameterfv
glGetTexLevelParameteriv
glGetTexParameterfv
glGetTexParameteriv
glHint
glIndexd
glIndexdv
glIndexf
glIndexfv
glIndexi
glIndexiv
glIndexMask
glIndexPointEXT
glIndexs
glIndexsv
glInitNames
glIsEnabled
glIsList
glLightf
glLightfv
glLighti
glLightiv
glLightModelf
glLightModelfv
glLightModeli
glLightModeliv
glLineStipple
glLineWidth
glListBase
glLoadIdentity
glLoadMatrixd
glLoadMatrixf
glLoadName
glLogicOp
glMap1d
glMap1f
glMap2d
glMap2f
glMapGrid1d
glMapGrid1f
glMapGrid2d
glMapGrid2f
glMaterialf
glMaterialfv
glMateriali
glMaterialiv
glMatrixMode
glMultMatrixd
glMultMatrixf
glNewList
glNormal3b
glNormal3bv
glNormal3d
glNormal3dv
glNormal3f
glNormal3fv
glNormal3i
glNormal3iv
glNormal3s
glNormal3sv
glNormalPointerEXT
GlobalAddAtom
GlobalAlloc
GlobalDeleteAtom
GlobalDiscard
GlobalFindAtom
GlobalFlags
GlobalFree
GlobalGetAtomName
GlobalHandle
GlobalLock
GlobalMemoryStatus
GlobalReAlloc
GlobalSize
GlobalUnlock
glOrtho
glPassThrough
glPixelMapfv
glPixelMapuiv
glPixelMapusv
glPixelStoref
glPixelStorei
glPixelTransferf
glPixelTransferi
glPixelZoom
glPointSize
glPolygonMode
glPolygonStipple
glPopAttrib
glPopMatrix
glPopName
glPushAttrib
glPushMatrix
glPushName
glRasterPos2d
glRasterPos2dv
glRasterPos2f
glRasterPos2fv
glRasterPos2i
glRasterPos2iv
glRasterPos2s
glRasterPos2sv
glRasterPos3d
glRasterPos3dv
glRasterPos3f
glRasterPos3fv
glRasterPos3i
glRasterPos3iv
glRasterPos3s
glRasterPos3sv
glRasterPos4d
glRasterPos4dv
glRasterPos4f
glRasterPos4fv
glRasterPos4i
glRasterPos4iv
glRasterPos4s
glRasterPos4sv
glReadBuffer
glReadPixels
glRectd
glRectdv
glRectf
glRectfv
glRecti
glRectiv
glRects
glRectsv
glRenderMode
glRotated
glRotatef
glScaled
glScalef
glScissor
glSelectBuffer
glShadeModel
glStencilFunc
glStencilMask
glStencilOp
glTexCoord1d
glTexCoord1dv
glTexCoord1f
glTexCoord1fv
glTexCoord1i
glTexCoord1iv
glTexCoord1s
glTexCoord1sv
glTexCoord2d
glTexCoord2dv
glTexCoord2f
glTexCoord2fv
glTexCoord2i
glTexCoord2iv
glTexCoord2s
glTexCoord2sv
glTexCoord3d
glTexCoord3dv
glTexCoord3f
glTexCoord3fv
glTexCoord3i
glTexCoord3iv
glTexCoord3s
glTexCoord3sv
glTexCoord4d
glTexCoord4dv
glTexCoord4f
glTexCoord4fv
glTexCoord4i
glTexCoord4iv
glTexCoord4s
glTexCoord4sv
glTexCoordPointerEXT
glTexEnvf
glTexEnvfv
glTexEnvi
glTexEnviv
glTexGend
glTexGendv
glTexGenf
glTexGenfv
glTexGeni
glTexGeniv
glTexImage1D
glTexImage2D
glTexParameterf
glTexParameterfv
glTexParameteri
glTexParameteriv
glTranslated
glTranslatef
gluBeginCurve
gluBeginPolygon
gluBeginSurface
gluBeginTrim
gluBuild1DMipmaps
gluBuild2DMipmaps
gluCylinder
gluDeleteNurbsRenderer
gluDeleteQuadric
gluDeleteTess
gluDisk
gluEndCurve
gluEndPolygon
gluEndSurface
gluEndTrim
gluErrorString
gluErrorUnicodeStringEXT
gluGetNurbsProperty
gluGetString
gluGetTessProperty
gluLoadSamplingMatrices
gluLookAt
gluNewNurbsRenderer
gluNewQuadric
gluNewTess
gluNextContour
gluNurbsCallback
gluNurbsCurve
gluNurbsProperty
gluNurbsSurface
gluOrtho2D
gluPartialDisk
gluPerspective
gluPickMatrix
gluProject
gluPwlCurve
gluQuadricCallback
gluQuadricDrawStyle
gluQuadricNormals
gluQuadricOrientation
gluQuadricTexture
gluScaleImage
gluSphere
gluTessBeginContour
gluTessBeginPolygon
gluTessCallback
gluTessEndContour
gluTessEndPolygon
gluTessNormal
gluTessProperty
gluTessVertex
gluUnProject
glVertex2d
glVertex2dv
glVertex2f
glVertex2fv
glVertex2i
glVertex2iv
glVertex2s
glVertex2sv
glVertex3d
glVertex3dv
glVertex3f
glVertex3fv
glVertex3i
glVertex3iv
glVertex3s
glVertex3sv
glVertex4d
glVertex4dv
glVertex4f
glVertex4fv
glVertex4i
glVertex4iv
glVertex4s
glVertex4sv
glVertexPointerEXT
glViewport
GradientFill
GrayString
HeapAlloc
HeapCompact
HeapCreate
HeapDestroy
HeapFree
HeapLock
HeapReAlloc
HeapSize
HeapUnlock
HeapValidate
HeapWalk
HexFromBin
HideCaret
HiliteMenuItem
HrAddColumnsEx
HrAllocAdviseSink
HrComposeEID
HrComposeMsgID
HrDecomposeEID
HrDecomposeMsgID
HrDispatchNotifications
HrEntryIDFromSz
HrGetOneProp
HrIStorageFromStream
HrQueryAllRows
HrSetOneProp
HrSzFromEntryID
HrThisThreadAdviseSink
HrValidateIPMSubtree
htonl
htons
I_BrowserDebugTrace
I_BrowserQueryOtherDomains
I_BrowserQueryStatistics
I_BrowserResetNetlogonState
I_BrowserResetStatistics
I_BrowserServerEnum
I_NetLogonControl
I_NetLogonControl2
I_RpcAllocate
I_RpcBindingCopy
I_RpcBindingInqDynamicEndpoint
I_RpcBindingInqTransportType
I_RpcBindingIsClientLocal
I_RpcClearMutex
I_RpcDeleteMutex
I_RpcFree
I_RpcFreeBuffer
I_RpcGetAssociationContext
I_RpcGetBuffer
I_RpcGetCurrentCallHandle
I_RpcIfInqTransferSyntaxes
I_RpcMapWin32Status
I_RpcMonitorAssociation
I_RpcNsBindingSetEntryName
I_RpcNsGetBuffer
I_RpcNsRaiseException
I_RpcNsSendReceive
I_RpcPauseExecution
I_RpcReBindBuffer
I_RpcRequestMutex
I_RpcSendReceive
I_RpcServerRegisterForwardFunction
I_RpcSetAssociationContext
I_RpcSsDontSerializeContext
I_RpcStopMonitorAssociation
I_UuidCreate
ICClose
ICCompress
ICCompressorChoose
ICCompressorFree
ICDecompress
ICDecompressEx
ICDecompressExBegin
ICDecompressExQuery
ICDraw
ICDrawBegin
ICDrawSuggestFormat
ICGetDisplayFormat
ICGetInfo
ICImageCompress
ICImageDecompress
ICInfo
ICInstall
ICLocate
ICOpen
ICOpenFunction
ICRemove
ICSendMessage
ICSeqCompressFrame
ICSeqCompressFrameEnd
ICSeqCompressFrameStart
ICSetState
ICSetStatusProc
IIDFromString
ImageAddCertificate
ImageDirectoryEntryToData
ImageEnumerateCertificates
ImageGetCertificateData
ImageGetCertificateHeader
ImageGetDigestStream
ImagehlpApiVersion
ImagehlpApiVersionEx
ImageList_Add
ImageList_AddMasked
ImageList_BeginDrag
ImageList_Create
ImageList_Destroy
ImageList_DragEnter
ImageList_DragLeave
ImageList_DragMove
ImageList_DragShowNolock
ImageList_Draw
ImageList_DrawEx
ImageList_EndDrag
ImageList_GetBkColor
ImageList_GetDragImage
ImageList_GetIcon
ImageList_GetIconSize
ImageList_GetImageCount
ImageList_GetImageInfo
ImageList_LoadImage
ImageList_Merge
ImageList_Read
ImageList_Remove
ImageList_Replace
ImageList_ReplaceIcon
ImageList_SetBkColor
ImageList_SetDragCursorImage
ImageList_SetIconSize
ImageList_SetImageCount
ImageList_SetOverlayImage
ImageList_Write
ImageLoad
ImageNtHeader
ImageRemoveCertificate
ImageRvaToSection
ImageRvaToVa
ImageUnload
ImmAssociateContext
ImmAssociateContextEx
ImmConfigureIME
ImmCreateContext
ImmDestroyContext
ImmDisableIME
ImmEnumRegisterWord
ImmEscape
ImmGetCandidateList
ImmGetCandidateListCount
ImmGetCandidateWindow
ImmGetCompositionFont
ImmGetCompositionString
ImmGetCompositionWindow
ImmGetContext
ImmGetConversionList
ImmGetConversionStatus
ImmGetDefaultIMEWnd
ImmGetDescription
ImmGetGuideLine
ImmGetIMEFileName
ImmGetImeMenuItems
ImmGetOpenStatus
ImmGetProperty
ImmGetRegisterWordStyle
ImmGetStatusWindowPos
ImmGetVirtualKey
ImmInstallIME
ImmIsIME
ImmIsUIMessage
ImmNotifyIME
ImmRegisterWord
ImmReleaseContext
ImmSetCandidateWindow
ImmSetCompositionFont
ImmSetCompositionString
ImmSetCompositionWindow
ImmSetConversionStatus
ImmSetOpenStatus
ImmSetStatusWindowPos
ImmSimulateHotKey
ImmUnregisterWord
ImpersonateDdeClientWindow
ImpersonateLoggedOnUser
ImpersonateNamedPipeClient
ImpersonateSelf
IMPGetIME
IMPQueryIME
IMPSetIME
inet_addr
inet_ntoa
InflateRect
InitAtomTable
InitCommonControls
InitializeAcl
InitializeCriticalSection
InitializeCriticalSectionAndSpinCount
InitializeSecurityDescriptor
InitializeSid
InitiateSystemShutdown
InSendMessage
InsertMenu
InsertMenuItem
InterlockedCompareExchange
InterlockedDecrement
InterlockedExchange
InterlockedExchangeAdd
InterlockedIncrement
IntersectClipRect
IntersectRect
InvalidateRect
InvalidateRgn
InvertRect
InvertRgn
ioctlsocket
IsAccelerator
IsBadCodePtr
IsBadHugeReadPtr
IsBadHugeWritePtr
IsBadReadPtr
IsBadStringPtr
IsBadWritePtr
IsCharAlpha
IsCharAlphaNumeric
IsCharLower
IsCharUpper
IsChild
IsClipboardFormatAvailable
IsDBCSLeadByte
IsDBCSLeadByteEx
IsDebuggerPresent
IsDialogMessage
IsDlgButtonChecked
IsEqualGUID
IsIconic
IsMenu
IsPermitted
IsProcessorFeaturePresent
IsRectEmpty
IsTextUnicode
IsValidAcl
IsValidCodePage
IsValidLocale
IsValidSecurityDescriptor
IsValidSid
IsWindow
IsWindowEnabled
IsWindowUnicode
IsWindowVisible
IsZoomed
joyGetDevCaps
joyGetNumDevs
joyGetPos
joyGetPosEx
joyGetThreshold
joyReleaseCapture
joySetCapture
joySetThreshold
keybd_event
KillTimer
LAUNCHWIZARDENTRY
LBItemFromPt
LCMapString
LeaveCriticalSection
LHashValOfNameSys
lineAccept
lineAddProvider
lineAddToConference
lineAgentSpecific
lineAnswer
lineBlindTransfer
lineClose
lineCompleteCall
lineCompleteTransfer
lineConfigDialog
lineConfigDialogEdit
lineConfigProvider
LineDDA
lineDeallocateCall
lineDevSpecific
lineDevSpecificFeature
lineDial
lineDrop
lineForward
lineGatherDigits
lineGenerateDigits
lineGenerateTone
lineGetAddressCaps
lineGetAddressID
lineGetAddressStatus
lineGetAgentActivityList
lineGetAgentCaps
lineGetAgentGroupList
lineGetAgentStatus
lineGetAppPriority
lineGetCallInfo
lineGetCallStatus
lineGetConfRelatedCalls
lineGetCountry
lineGetDevCaps
lineGetDevConfig
lineGetIcon
lineGetID
lineGetLineDevStatus
lineGetMessage
lineGetNewCalls
lineGetNumRings
lineGetProviderList
lineGetRequest
lineGetStatusMessages
lineGetTranslateCaps
lineHandoff
lineHold
lineInitialize
lineInitializeEx
lineMakeCall
lineMonitorDigits
lineMonitorMedia
lineMonitorTones
lineNegotiateAPIVersion
lineNegotiateExtVersion
lineOpen
linePark
linePickup
linePrepareAddToConference
lineProxyMessage
lineProxyResponse
lineRedirect
lineRegisterRequestRecipient
lineReleaseUserUserInfo
lineRemoveFromConference
lineRemoveProvider
lineSecureCall
lineSendUserUserInfo
lineSetAgentActivity
lineSetAgentGroup
lineSetAgentState
lineSetAppPriority
lineSetAppSpecific
lineSetCallData
lineSetCallParams
lineSetCallPrivilege
lineSetCallQualityOfService
lineSetCallTreatment
lineSetCurrentLocation
lineSetDevConfig
lineSetLineDevStatus
lineSetMediaControl
lineSetMediaMode
lineSetNumRings
lineSetStatusMessages
lineSetTerminal
lineSetTollList
lineSetupConference
lineSetupTransfer
lineShutdown
lineSwapHold
LineTo
lineTranslateAddress
lineTranslateDialog
lineUncompleteCall
lineUnhold
lineUnpark
listen
LoadAccelerators
LoadBitmap
LoadCursor
LoadCursorFromFile
LoadIcon
LoadImage
LoadKeyboardLayout
LoadLibrary
LoadLibraryEx
LoadMenu
LoadMenuIndirect
LoadModule
LoadRegTypeLib
LoadResource
LoadString
LoadTypeLib
LocalAlloc
LocalDiscard
LocalFileTimeToFileTime
LocalFlags
LocalFree
LocalHandle
LocalLock
LocalReAlloc
LocalSize
LocalUnlock
LockFile
LockFileEx
LockResource
LockServiceDatabase
LockWindowUpdate
Login
LogonUser
Logout
long_array_from_ndr
long_from_ndr
long_from_ndr_temp
LookupAccountName
LookupAccountSid
LookupIconIdFromDirectory
LookupIconIdFromDirectoryEx
LookupPrivilegeDisplayName
LookupPrivilegeName
LookupPrivilegeValue
LookupSecurityDescriptorParts
LPropCompareProp
LPtoDP
LSEnumProviders
LSFreeHandle
LSGetMessage
LSQuery
LSRelease
LSRequest
lstrcat
lstrcmp
lstrcmpi
lstrcpy
lstrcpyn
lstrlen
LSUpdate
LZClose
LZCopy
LZInit
LZOpenFile
LZRead
LZSeek
MakeAbsoluteSD
MakeDragList
MakeSelfRelativeSD
MakeSuredirectoryPathExists
MapAndLoad
MapDebugInformation
MapDialogRect
MapFileAndCheckSumA
MapFileAndCheckSumW
MapGenericMask
MAPIAddress
MAPIAddress (VB)
MAPIAdminProfiles
MAPIAllocateBuffer
MAPIAllocateMore
MAPIDeInitIdle
MAPIDeleteMail
MAPIDeleteMail (VB)
MAPIDetails
MAPIDetails (VB)
MAPIFindNext
MAPIFindNext (VB)
MAPIFreeBuffer
MAPIFreeBuffer (Simple MAPI)
MAPIGetDefaultMalloc
MAPIInitialize
MAPIInitIdle
MAPILogoff
MAPILogoff (VB)
MAPILogon
MAPILogon (VB)
MAPILogonEx
MAPIOpenFormMgr
MAPIOpenLocalFormContainer
MAPIReadMail
MAPIReadMail (VB)
MAPIResolveName
MAPIResolveName (VB)
MAPISaveMail
MAPISaveMail (VB)
MAPISendDocuments
MAPISendDocuments (VB)
MAPISendMail
MAPISendMail (VB)
MAPIUninitialize
MapStorageSCode
MapViewOfFile
MapViewOfFileEx
MapVirtualKey
MapVirtualKeyEx
MapWindowPoints
MaskBlt
mciGetCreatorTask
mciGetDeviceID
mciGetErrorString
mciGetYieldProc
mciSendCommand
mciSendString
mciSetYieldProc
MCIWndCreate
MCIWndRegisterClass
MenuHelp
MenuItemFromPoint
MesBufferHandleReset
MesDecodeBufferHandleCreate
MesDecodeIncrementalHandleCreate
MesEncodeDynBufferHandleCreate
MesEncodeFixedBufferHandleCreate
MesEncodeIncrementalHandleCreate
MesHandleFree
MesIncrementalHandleReset
MesInqProcEncodingId
MessageBeep
MessageBox
MessageBoxEx
MessageBoxIndirect
MibEntryCreate
MibEntryDelete
MibEntryGet
MibEntryGetFirst
MibEntryGetNext
MibEntrySet
midiConnect
midiDisconnect
midiInAddBuffer
midiInClose
midiInGetDevCaps
midiInGetErrorText
midiInGetID
midiInGetNumDevs
midiInMessage
midiInOpen
midiInPrepareHeader
midiInReset
midiInStart
midiInStop
midiInUnprepareHeader
midiOutCacheDrumPatches
midiOutCachePatches
midiOutClose
midiOutGetDevCaps
midiOutGetErrorText
midiOutGetID
midiOutGetNumDevs
midiOutGetVolume
midiOutLongMsg
midiOutMessage
midiOutOpen
midiOutPrepareHeader
midiOutReset
midiOutSetVolume
midiOutShortMsg
midiOutUnprepareHeader
midiStreamClose
midiStreamOpen
midiStreamOut
midiStreamPause
midiStreamPosition
midiStreamProperty
midiStreamRestart
midiStreamStop
midl_allocate
MIDL_user_allocate
MIDL_wchar_strcpy
MIDL_wchar_strlen
mixerClose
mixerGetControlDetails
mixerGetDevCaps
mixerGetID
mixerGetLineControls
mixerGetLineInfo
mixerGetNumDevs
mixerMessage
mixerOpen
mixerSetControlDetails
MkParseDisplayName
mmioAdvance
mmioAscend
mmioClose
mmioCreateChunk
mmioDescend
mmioFlush
mmioGetInfo
mmioInstallIOProc
mmioOpen
mmioRead
mmioRename
mmioSeek
mmioSendMessage
mmioSetBuffer
mmioSetInfo
mmioStringToFOURCC
mmioWrite
mmsystemGetVersion
ModifyWorldTransform
MonikerCommonPrefixWith
MonikerRelativePathTo
MonitorFromPoint
MonitorFromRect
MonitorFromWindow
mouse_event
MoveFile
MoveFileEx
MoveMemory
MoveToEx
MoveWindow
MprAdminBufferFree
MprAdminConnectionClearStats
MprAdminConnectionEnum
MprAdminConnectionGetInfo
MprAdminGetErrorString
MprAdminGetPDCServer
MprAdminInterfaceConnect
MprAdminInterfaceCreate
MprAdminInterfaceDelete
MprAdminInterfaceDisconnect
MprAdminInterfaceEnum
MprAdminInterfaceGetHandle
MprAdminInterfaceQueryUpdateResult
MprAdminInterfaceTransportAdd
MprAdminInterfaceTransportGetInfo
MprAdminInterfaceTransportRemove
MprAdminInterfaceTransportSetInfo
MprAdminInterfaceUpdateRoutes
MprAdminIsServiceRunning
MprAdminMIBBufferFree
MprAdminMIBEntryCreate
MprAdminMIBEntryDelete
MprAdminMIBEntryGet
MprAdminMIBEntryGetFirst
MprAdminMIBEntryGetNext
MprAdminMIBEntryGetTrapInfo
MprAdminMIBEntrySet
MprAdminMIBEntrySetTrapInfo
MprAdminMIBServerConnect
MprAdminMIBServerDisconnect
MprAdminPortClearStats
MprAdminPortDisconnect
MprAdminPortEnum
MprAdminPortGetInfo
MprAdminPortReset
MprAdminServerConnect
MprAdminServerDisconnect
MprAdminServerGetInfo
MprAdminTransportGetInfo
MprAdminTransportSetInfo
MprAdminUserGetInfo
MprAdminUserSetInfo
MprConfigBufferFree
MprConfigFilterCreate
MprConfigFilterDelete
MprConfigFilterEnum
MprConfigFilterGetHandle
MprConfigFilterGetInfo
MprConfigFilterSetInfo
MprConfigInterfaceCreate
MprConfigInterfaceDelete
MprConfigInterfaceEnum
MprConfigInterfaceGetHandle
MprConfigInterfaceGetInfo
MprConfigInterfaceSetInfo
MprConfigInterfaceTransportAdd
MprConfigInterfaceTransportEnum
MprConfigInterfaceTransportGetHandle
MprConfigInterfaceTransportGetInfo
MprConfigInterfaceTransportRemove
MprConfigInterfaceTransportSetInfo
MprConfigServerBackup
MprConfigServerConnect
MprConfigServerDisconnect
MprConfigServerGetInfo
MprConfigServerRestore
MprConfigTransportCreate
MprConfigTransportDelete
MprConfigTransportEnum
MprConfigTransportGetHandle
MprConfigTransportGetInfo
MprConfigTransportSetInfo
MsgWaitForMultipleObjects
MsgWaitForMultipleObjectsEx
MsiCloseAllHandles
MsiCloseHandle
MsiCollectUserInfo
MsiConfigureFeature
MsiConfigureProduct
MsiCreateRecord
MsiDatabaseApplyTransform
MsiDatabaseCommit
MsiDatabaseExport
MsiDatabaseGenerateTransform
MsiDatabaseGetPrimaryKeys
MsiDatabaseImport
MsiDatabaseIsTablePersistent
MsiDatabaseMerge
MsiDatabaseOpenView
MsiDoAction
MsiEnableLog
MsiEnableUIPreview
MsiEnumClients
MsiEnumComponentQualifiers
MsiEnumComponents
MsiEnumFeatures
MsiEnumProducts
MsiEvaluateCondition
MsiFormatRecord
MsiGetActiveDatabase
MsiGetComponentState
MsiGetDatabaseState
MsiGetFeatureCost
MsiGetFeatureInfo
MsiGetFeatureState
MsiGetFeatureUsage
MsiGetFeatureValidStates
MsiGetLanguage
MsiGetMode
MsiGetProductCode
MsiGetProductInfo
MsiGetProductProperty
MsiGetProperty
MsiGetSourcePath
MsiGetSummaryInformation
MsiGetTargetPath
MsiGetUserInfo
MsiInstallMissingComponent
MsiInstallMissingFile
MsiInstallProduct
MsiLocateComponent
MsiOpenDatabase
MsiOpenPackage
MsiOpenProduct
MsiPreviewBillboard
MsiPreviewDialog
MsiProcessMessage
MsiProvideComponent
MsiProvideQualifiedComponent
MsiQueryFeatureState
MsiQueryProductState
MsiRecordClearData
MsiRecordDataSize
MsiRecordGetFieldCount
MsiRecordGetInteger
MsiRecordGetString
MsiRecordIsNull
MsiRecordReadStream
MsiRecordSetInteger
MsiRecordSetStream
MsiRecordSetString
MsiReinstallFeature
MsiReinstallProduct
MsiSequence
MsiSetComponentState
MsiSetExternalUI
MsiSetFeatureState
MsiSetInstallLevel
MsiSetInternalUI
MsiSetMode
MsiSetProperty
MsiSetTargetPath
MsiSummaryInfoGetProperty
MsiSummaryInfoGetPropertyCount
MsiSummaryInfoPersist
MsiSummaryInfoSetProperty
MsiUseFeature
MsiVerifyPackage
MsiViewClose
MsiViewExecute
MsiViewFetch
MsiViewGetColumnInfo
MsiViewGetError
MsiViewModify
MulDiv
MultiByteToWideChar
MultinetGetConnectionPerformance
NDdeGetErrorString
NDdeGetShareSecurity
NDdeGetTrustedShare
NDdeIsValidAppTopicList
NDdeIsValidShareName
NDdeSetShareSecurity
NDdeSetTrustedShare
NDdeShareAdd
NDdeShareDel
NDdeShareEnum
NDdeShareGetInfo
NDdeShareSetInfo
NDdeTrustedShareEnum
NDRCContextBinding
NDRCContextMarshall
NDRCContextUnmarshall
NDRcopy
NDRSContextMarshall
NDRSContextUnmarshall
NetAccessAdd
NetAccessCheck
NetAccessDel
NetAccessEnum
NetAccessGetInfo
NetAccessGetUserPerms
NetAccessSetInfo
NetAlertRaise
NetAlertRaiseEx
NetApiBufferAllocate
NetApiBufferFree
NetApiBufferReallocate
NetApiBufferSize
NetApipBufferAllocate
NetAuditClear
NetAuditRead
NetAuditWrite
Netbios
NetConfigGet
NetConfigGetAll
NetConfigSet
NetConnectionEnum
NetDfsAdd
NetDfsEnum
NetDfsGetInfo
NetDfsRemove
NetDfsSetInfo
NetErrorLogClear
NetErrorLogRead
NetErrorLogWrite
NetFileClose
NetFileEnum
NetFileGetInfo
NetGetAnyDCName
NetGetDCName
NetGetDisplayInformationIndex
NetGroupAdd
NetGroupAddUser
NetGroupDel
NetGroupDelUser
NetGroupEnum
NetGroupGetInfo
NetGroupGetUsers
NetGroupSetInfo
NetGroupSetUsers
NetHandleGetInfo
NetHandleSetInfo
NetLocalGroupAdd
NetLocalGroupAddMember
NetLocalGroupAddMembers
NetLocalGroupDel
NetLocalGroupDelMember
NetLocalGroupDelMembers
NetLocalGroupEnum
NetLocalGroupGetInfo
NetLocalGroupGetMembers
NetLocalGroupSetInfo
NetLocalGroupSetMembers
NetMessageBufferSend
NetMessageNameAdd
NetMessageNameDel
NetMessageNameEnum
NetMessageNameGetInfo
NetQueryDisplayInformation
NetRemoteComputerSupports
NetRemoteTOD
NetReplExportDirAdd
NetReplExportDirDel
NetReplExportDirEnum
NetReplExportDirGetInfo
NetReplExportDirLock
NetReplExportDirSetInfo
NetReplExportDirUnlock
NetReplGetInfo
NetReplImportDirAdd
NetReplImportDirDel
NetReplImportDirEnum
NetReplImportDirGetInfo
NetReplImportDirLock
NetReplImportDirUnlock
NetReplSetInfo
NetScheduleJobAdd
NetScheduleJobDel
NetScheduleJobEnum
NetScheduleJobGetInfo
NetServerDiskEnum
NetServerEnum
NetServerGetInfo
NetServerSetInfo
NetServerTransportAdd
NetServerTransportDel
NetServerTransportEnum
NetServiceControl
NetServiceEnum
NetServiceGetInfo
NetServiceInstall
NetSessionDel
NetSessionEnum
NetSessionGetInfo
NetShareAdd
NetShareCheck
NetShareDel
NetShareDelSticky
NetShareEnum
NetShareEnumSticky
NetShareGetInfo
NetShareSetInfo
NetStatisticsGet
NetStatisticsGet2
NetUseAdd
NetUseDel
NetUseEnum
NetUseGetInfo
NetUserAdd
NetUserChangePassword
NetUserDel
NetUserEnum
NetUserGetGroups
NetUserGetInfo
NetUserGetLocalGroups
NetUserModalsGet
NetUserModalsSet
NetUserSetGroups
NetUserSetInfo
NetWkstaGetInfo
NetWkstaSetInfo
NetWkstaTransportAdd
NetWkstaTransportDel
NetWkstaTransportEnum
NetWkstaUserEnum
NetWkstaUserGetInfo
NetWkstaUserSetInfo
NotifyBootConfigStatus
NotifyChangeEventLog
NSPGetServiceClassInfo
NSPInstallServiceClass
NSPLookupServiceBegin
NSPLookupServiceEnd
NSPLookupServiceNext
NSPRemoveServiceClass
NSPSetService
NSPStartup
ntohl
ntohs
OaBuildVersion
ObjectCloseAuditAlarm
ObjectDeleteAuditAlarm
ObjectOpenAuditAlarm
ObjectPrivilegeAuditAlarm
OemKeyScan
OemToChar
OemToCharBuff
OffsetClipRgn
OffsetRect
OffsetRgn
OffsetViewportOrgEx
OffsetWindowOrgEx
OleBuildVersion
OleConvertIStorageToOLESTREAM
OleConvertIStorageToOLESTREAMEx
OleConvertOLESTREAMToIStorage
OleConvertOLESTREAMToIStorageEx
OleCreate
OleCreateDefaultHandler
OleCreateEmbeddingHelper
OleCreateEx
OleCreateFontIndirect
OleCreateFromData
OleCreateFromDataEx
OleCreateFromFile
OleCreateFromFileEx
OleCreateLink
OleCreateLinkEx
OleCreateLinkFromData
OleCreateLinkFromDataEx
OleCreateLinkToFile
OleCreateLinkToFileEx
OleCreateMenuDescriptor
OleCreatePictureIndirect
OleCreatePropertyFrame
OleCreatePropertyFrameIndirect
OleCreateStaticFromData
OleDestroyMenuDescriptor
OleDoAutoConvert
OleDraw
OleDuplicateData
OleFlushClipboard
OleGetAutoConvert
OleGetClipboard
OleGetIconOfClass
OleGetIconOfFile
OleIconToCursor
OleInitialize
OleIsCurrentClipboard
OleIsRunning
OleLoad
OleLoadFromStream
OleLoadPicture
OleLockRunning
OleMetafilePictFromIconAndLabel
OleNoteObjectVisible
OleQueryCreateFromData
OleQueryLinkFromData
OleRegEnumFormatEtc
OleRegEnumVerbs
OleRegGetMiscStatus
OleRegGetUserType
OleRun
OleSave
OleSaveToStream
OleSetAutoConvert
OleSetClipboard
OleSetContainedObject
OleSetMenuDescriptor
OleTranslateAccelerator
OleTranslateColor
OleUIAddVerbMenu
OleUIBusy
OleUICanConvertOrActivateAs
OleUIChangeIcon
OleUIChangeSource
OleUIConvert
OleUIEditLinks
OleUIInsertObject
OleUIObjectProperties
OleUIPasteSpecial
OleUIPromptUser
OleUIUpdateLinks
OleUninitialize
OpenBackupEventLog
OpenClipboard
OpenDesktop
OpenDriver
OpenEvent
OpenEventLog
OpenFile
OpenFileMapping
OpenIcon
OpenIMsgOnIStg
OpenIMsgSession
OpenInputDesktop
OpenJobObject
OpenMutex
OpenPrinter
OpenProcess
OpenProcessToken
OpenRaw
OpenSCManager
OpenSemaphore
OpenService
OpenStreamOnFile
OpenThreadToken
OpenTnefStream
OpenTnefStreamEx
OpenWaitableTimer
OpenWindowStation
OutputDebugString
PackDDElParam
PageSetupDlg
PaintDesktop
PaintRgn
PatBlt
PathToRegion
PeekConsoleInput
PeekMessage
PeekNamedPipe
phoneClose
phoneConfigDialog
phoneDevSpecific
phoneGetButtonInfo
phoneGetData
phoneGetDevCaps
phoneGetDisplay
phoneGetGain
phoneGetHookSwitch
phoneGetIcon
phoneGetID
phoneGetLamp
phoneGetMessage
phoneGetRing
phoneGetStatus
phoneGetStatusMessages
phoneGetVolume
phoneInitialize
phoneInitializeEx
phoneNegotiateAPIVersion
phoneNegotiateExtVersion
phoneOpen
phoneSetButtonInfo
phoneSetData
phoneSetDisplay
phoneSetGain
phoneSetHookSwitch
phoneSetLamp
phoneSetRing
phoneSetStatusMessages
phoneSetVolume
phoneShutdown
Pie
PlayEnhMetaFile
PlayEnhMetaFileRecord
PlaySound
PlgBlt
PolyBezier
PolyBezierTo
PolyDraw
Polygon
Polyline
PolylineTo
PolyPolygon
PolyPolyline
PolyTextOut
PostMessage
PostQueuedCompletionStatus
PostQuitMessage
PostThreadMessage
PpropFindProp
PR_RTF_IN_SYNC
PrepareTape
PrintDlg
PrinterMessageBox
PrinterProperties
PrivilegeCheck
PrivilegedServiceAuditAlarm
ProgIDFromCLSID
PropCopyMore
PropertySheet
PropVariantClear
PropVariantCopy
PtInRect
PtInRegion
PtVisible
PulseEvent
PurgeComm
QueryDosDevice
QueryInformationJobObject
QueryPathOfRegTypeLib
QueryPerformanceCounter
QueryPerformanceFrequency
QueryServiceConfig
QueryServiceConfig2
QueryServiceLockStatus
QueryServiceObjectSecurity
QueryServiceStatus
QueueUserAPC
RaiseException
RasAdminFreeBuffer
RasAdminGetErrorString
RasAdminGetUserAccountServer
RasAdminPortClearStatistics
RasAdminPortDisconnect
RasAdminPortEnum
RasAdminPortGetInfo
RasAdminServerGetInfo
RasAdminUserGetInfo
RasAdminUserSetInfo
RasConnectionNotification
RasCreatePhonebookEntry
RasDeleteEntry
RasDial
RasDialDlg
RasEditPhonebookEntry
RasEntryDlg
RasEnumAutodialAddresses
RasEnumConnections
RasEnumDevices
RasEnumEntries
RasGetAutodialAddress
RasGetAutodialEnable
RasGetAutodialParam
RasGetConnectStatus
RasGetCountryInfo
RasGetCredentials
RasGetEntryDialParams
RasGetEntryProperties
RasGetErrorString
RasGetProjectionInfo
RasGetSubEntryHandle
RasGetSubEntryProperties
RasHangUp
RasMonitorDlg
RasPhonebookDlg
RasRenameEntry
RasSecurityDialogComplete
RasSecurityDialogGetInfo
RasSecurityDialogReceive
RasSecurityDialogSend
RasSetAutodialAddress
RasSetAutodialEnable
RasSetAutodialParam
RasSetCredentials
RasSetEntryDialParams
RasSetEntryProperties
RasSetSubEntryProperties
RasValidateEntryName
ReadClassStg
ReadClassStm
ReadConsole
ReadConsoleInput
ReadConsoleOutput
ReadConsoleOutputAttribute
ReadConsoleOutputCharacter
ReadDirectoryChangesW
ReadEventLog
ReadFile
ReadFileEx
ReadFileScatter
ReadFmtUserTypeStg
ReadPrinter
ReadProcessMemory
ReadRaw
RealizePalette
ReBaseImage
Rectangle
RectInRegion
RectVisible
recv
recvfrom
RedrawWindow
RegCloseKey
RegConnectRegistry
RegCreateKey
RegCreateKeyEx
RegDeleteKey
RegDeleteValue
RegEnumKey
RegEnumKeyEx
RegEnumValue
RegFlushKey
RegGetKeySecurity
RegisterActiveObject
RegisterClass
RegisterClassEx
RegisterClipboardFormat
RegisterDialogClasses
RegisterDragDrop
RegisterEventSource
RegisterHotKey
RegisterServiceCtrlHandler
RegisterTypeLib
RegisterWindowMessage
RegLoadKey
RegNotifyChangeKeyValue
RegOpenKey
RegOpenKeyEx
RegQueryInfoKey
RegQueryMultipleValues
RegQueryValue
RegQueryValueEx
RegReplaceKey
RegRestoreKey
RegSaveKey
RegSetKeySecurity
RegSetValue
RegSetValueEx
RegUnLoadKey
ReleaseCapture
ReleaseDC
ReleaseMutex
ReleaseSemaphore
ReleaseStgMedium
RemoveDirectory
RemoveFontResource
RemoveMenu
RemovePrivateCvSymbolic
RemoveProp
RemoveRelocations
ReplaceText
ReplyMessage
ReportEvent
RequestDeviceWakeup
RequestWakeupLatency
ResetDC
ResetEvent
ResetPrinter
ResizePalette
RestoreDC
ResumeThread
ReuseDDElParam
RevertToSelf
RevokeActiveObject
RevokeDragDrop
RoundRect
RpcAbnormalTermination
RpcBindingCopy
RpcBindingFree
RpcBindingFromStringBinding
RpcBindingInqAuthClient
RpcBindingInqAuthInfo
RpcBindingInqObject
RpcBindingReset
RpcBindingServerFromClient
RpcBindingSetAuthInfo
RpcBindingSetObject
RpcBindingToStringBinding
RpcBindingVectorFree
RpcCancelThread
RpcEndExcept
RpcEndFinally
RpcEpRegister
RpcEpRegisterNoReplace
RpcEpResolveBinding
RpcEpUnregister
RpcExcept
RpcExceptionCode
RpcFinally
RpcIfIdVectorFree
RpcIfInqId
RpcImpersonateClient
RpcMacSetYieldInfo
RpcMgmtEnableIdleCleanup
RpcMgmtEpEltInqBegin
RpcMgmtEpEltInqDone
RpcMgmtEpEltInqNext
RpcMgmtEpUnregister
RpcMgmtInqComTimeout
RpcMgmtInqDefaultProtectLevel
RpcMgmtInqIfIds
RpcMgmtInqServerPrincName
RpcMgmtInqStats
RpcMgmtIsServerListening
RpcMgmtSetAuthorizationFn
RpcMgmtSetCancelTimeout
RpcMgmtSetComTimeout
RpcMgmtSetServerStackSize
RpcMgmtStatsVectorFree
RpcMgmtStopServerListening
RpcMgmtWaitServerListen
RpcNetworkInqProtseqs
RpcNetworkIsProtseqValid
RpcNsBindingExport
RpcNsBindingImportBegin
RpcNsBindingImportDone
RpcNsBindingImportNext
RpcNsBindingInqEntryName
RpcNsBindingLookupBegin
RpcNsBindingLookupDone
RpcNsBindingLookupNext
RpcNsBindingSelect
RpcNsBindingUnexport
RpcNsEntryExpandName
RpcNsEntryObjectInqBegin
RpcNsEntryObjectInqDone
RpcNsEntryObjectInqNext
RpcNsGroupDelete
RpcNsGroupMbrAdd
RpcNsGroupMbrInqBegin
RpcNsGroupMbrInqDone
RpcNsGroupMbrInqNext
RpcNsGroupMbrRemove
RpcNsMgmtBindingUnexport
RpcNsMgmtEntryCreate
RpcNsMgmtEntryDelete
RpcNsMgmtEntryInqIfIds
RpcNsMgmtHandleSetExpAge
RpcNsMgmtInqExpAge
RpcNsMgmtSetExpAge
RpcNsProfileDelete
RpcNsProfileEltAdd
RpcNsProfileEltInqBegin
RpcNsProfileEltInqDone
RpcNsProfileEltInqNext
RpcNsProfileEltRemove
RpcObjectInqType
RpcObjectSetInqFn
RpcObjectSetType
RpcProtseqVectorFree
RpcRaiseException
RpcRevertToSelf
RpcRevertToSelfEx
RpcServerInqBindings
RpcServerInqIf
RpcServerListen
RpcServerRegisterAuthInfo
RpcServerRegisterIf
RpcServerRegisterIfEx
RpcServerUnregisterIf
RpcServerUseAllProtseqs
RpcServerUseAllProtseqsEx
RpcServerUseAllProtseqsIf
RpcServerUseAllProtseqsIfEx
RpcServerUseProtseq
RpcServerUseProtseqEp
RpcServerUseProtseqEpEx
RpcServerUseProtseqEx
RpcServerUseProtseqIf
RpcServerUseProtseqIfEx
RpcSmAllocate
RpcSmClientFree
RpcSmDestroyClientContext
RpcSmDisableAllocate
RpcSmEnableAllocate
RpcSmFree
RpcSmGetThreadHandle
RpcSmSetClientAllocFree
RpcSmSetThreadHandle
RpcSmSwapClientAllocFree
RpcSsAllocate
RpcSsDestroyClientContext
RpcSsDisableAllocate
RpcSsDontSerializeContext
RpcSsEnableAllocate
RpcSsFree
RpcSsGetThreadHandle
RpcSsSetClientAllocFree
RpcSsSetThreadHandle
RpcSsSwapClientAllocFree
RpcStringBindingCompose
RpcStringBindingParse
RpcStringFree
RpcTestCancel
RpcTryExcept
RpcTryFinally
RpcWinSetYieldInfo
RpcWinSetYieldTimeout
RTFSync
RtmAddRoute
RtmBlockDeleteRoutes
RtmCloseEnumerationHandle
RtmCreateEnumerationHandle
RtmDeleteRoute
RtmDequeueRouteChangeMessage
RtmDeregisterClient
RtmEnumerateGetNextRoute
RtmGetFirstRoute
RtmGetNetworkCount
RtmGetNextRoute
RtmGetRouteAge
RtmIsRoute
RtmRegisterClient
RxNetAccessAdd
RxNetAccessDel
RxNetAccessEnum
RxNetAccessGetInfo
RxNetAccessGetUserPerms
RxNetAccessSetInfo
RxRemoteApi
SafeArrayAccessData
SafeArrayAllocData
SafeArrayAllocDescriptor
SafeArrayCopy
SafeArrayCopyData
SafeArrayCreate
SafeArrayCreateVector
SafeArrayDestroy
SafeArrayDestroyData
SafeArrayDestroyDescriptor
SafeArrayGetDim
SafeArrayGetElement
SafeArrayGetElemsize
SafeArrayGetLBound
SafeArrayGetUBound
SafeArrayLock
SafeArrayPtrOfIndex
SafeArrayPutElement
SafeArrayRedim
SafeArrayUnaccessData
SafeArrayUnlock
SaveDC
ScaleViewportExtEx
ScaleWindowExtEx
SCardAddReaderToGroup
SCardBeginTransaction
SCardCancel
SCardConnect
SCardControl
SCardDisconnect
SCardEndTransaction
SCardEstablishContext
SCardForgetCardType
SCardForgetReader
SCardForgetReaderGroup
SCardFreeMemory
SCardGetAttrib
SCardGetProviderId
SCardGetStatusChange
SCardIntroduceCardType
SCardIntroduceReader
SCardIntroduceReaderGroup
SCardListCards
SCardListInterfaces
SCardListReaderGroups
SCardListReaders
SCardLocateCards
SCardReconnect
SCardReleaseContext
SCardRemoveReaderFromGroup
SCardSetAttrib
SCardState
SCardTransmit
ScBinFromHexBounded
ScCopyNotifications
ScCopyProps
ScCountNotifications
ScCountProps
ScCreateConversationIndex
ScDupPropset
ScheduleJob
ScInitMapiUtil
ScLocalPathFromUNC
ScMAPIXFromCMC
ScMAPIXFromSMAPI
ScreenSaverConfigureDialog
ScreenSaverProc
ScreenToClient
ScRelocNotifications
ScRelocProps
ScrollConsoleScreenBuffer
ScrollDC
ScrollWindow
ScrollWindowEx
ScUNCFromLocalPath
SearchPath
SearchTreeForFile
select
SelectClipPath
SelectClipRgn
SelectObject
SelectPalette
send
SendDlgItemMessage
SendDriverMessage
SendIMEMessageEx
SendInput
SendMessage
SendMessageCallback
SendMessageTimeout
SendNotifyMessage
sendto
SetAbortProc
SetAclInformation
SetActiveWindow
SetArcDirection
SetAttribIMsgOnIStg
SetBitmapDimensionEx
SetBkColor
SetBkMode
SetBoundsRect
SetBrushOrgEx
SetCapture
SetCaretBlinkTime
SetCaretPos
SetClassLong
SetClassWord
SetClipboardData
SetClipboardViewer
SetColorAdjustment
SetCommBreak
SetCommConfig
SetCommMask
SetCommState
SetCommTimeouts
SetComputerName
SetConsoleActiveScreenBuffer
SetConsoleCP
SetConsoleCtrlHandler
SetConsoleCursorInfo
SetConsoleCursorPosition
SetConsoleMode
SetConsoleOutputCP
SetConsoleScreenBufferSize
SetConsoleTextAttribute
SetConsoleTitle
SetConsoleWindowInfo
SetConvertStg
SetCriticalSectionSpinCount
SetCurrentDirectory
SetCursor
SetCursorPos
SetDCBrushColor
SetDCPenColor
SetDebugErrorLevel
SetDefaultCommConfig
SetDIBColorTable
SetDIBits
SetDIBitsToDevice
SetDlgItemInt
SetDlgItemText
SetDoubleClickTime
SetEndOfFile
SetEnhMetaFileBits
SetEntriesInAccessList
SetEntriesInAcl
SetEntriesInAuditList
SetEnvironmentVariable
SetErrorInfo
SetErrorMode
SetEvent
SetFileApisToANSI
SetFileApisToOEM
SetFileAttributes
SetFilePointer
SetFileSecurity
SetFileTime
SetFocus
SetForegroundWindow
SetForm
SetGraphicsMode
SetHandleCount
SetHandleInformation
SetImageConfigInformation
SetInformationJobObject
SetJob
SetKernelObjectSecurity
SetKeyboardState
SetLastError
SetLastErrorEx
SetLocaleInfo
SetLocalTime
SetMailslotInfo
SetMapMode
SetMapperFlags
SetMenu
SetMenuContextHelpId
SetMenuDefaultItem
SetMenuItemBitmaps
SetMenuItemInfo
SetMessageExtraInfo
SetMessageWaitingIndicator
SetMetaRgn
SetMiterLimit
SetNamedPipeHandleState
SetNamedSecurityInfo
SetNamedSecurityInfoEx
SetPaletteEntries
SetParent
SetPixel
SetPixelFormat
SetPixelV
SetPolyFillMode
SetPort
SetPrinter
SetPrinterData
SetPrinterDataEx
SetPriorityClass
SetPrivateObjectSecurity
SetPrivateObjectSecurityEx
SetProcessAffinityMask
SetProcessPriorityBoost
SetProcessShutdownParameters
SetProcessWindowStation
SetProcessWorkingSetSize
SetProp
SetRect
SetRectEmpty
SetRectRgn
SetROP2
SetScrollInfo
SetScrollPos
SetScrollRange
SetSecurityDescriptorControl
SetSecurityDescriptorDacl
SetSecurityDescriptorGroup
SetSecurityDescriptorOwner
SetSecurityDescriptorSacl
SetSecurityInfo
SetSecurityInfoEx
SetService
SetServiceBits
SetServiceObjectSecurity
SetServiceStatus
setsockopt
SetStdHandle
SetStretchBltMode
SetSysColors
SetSystemCursor
SetSystemPaletteUse
SetSystemPowerState
SetSystemTime
SetSystemTimeAdjustment
SetTapeParameters
SetTapePosition
SetTextAlign
SetTextCharacterExtra
SetTextColor
SetTextJustification
SetThreadAffinityMask
SetThreadContext
SetThreadDesktop
SetThreadExecutionState
SetThreadIdealProcessor
SetThreadLocale
SetThreadPriority
SetThreadPriorityBoost
SetThreadToken
SetTimer
SetTimeZoneInformation
SetTokenInformation
SetUnhandledExceptionFilter
SetupAddInstallSectionToDiskSpaceList
SetupAddSectionToDiskSpaceList
SetupAddToDiskSpaceList
SetupAddToSourceList
SetupCancelTemporarySourceList
SetupCloseFileQueue
SetupCloseInfFile
SetupComm
SetupCommitFileQueue
SetupCopyError
SetupCreateDiskSpaceList
SetupDecompressOrCopyFile
SetupDefaultQueueCallback
SetupDeleteError
SetupDestroyDiskSpaceList
SetupFindFirstLine
SetupFindNextLine
SetupFindNextMatchLine
SetupFreeSourceList
SetupGetBinaryField
SetupGetFieldCount
SetupGetFileCompressionInfo
SetupGetInfFileList
SetupGetInflnformation
SetupGetIntField
SetupGetLineByIndex
SetupGetLineCount
SetupGetLineText
SetupGetMultiSzField
SetupGetSourceFileLocation
SetupGetSourceFileSize
SetupGetSourceInfo
SetupGetStringField
SetupGetTargetPath
SetupInitDefaultQueueCallback
SetupInitDefaultQueueCallbackEx
SetupInitializeFileLog
SetupInstallFile
SetupInstallFileEx
SetupInstallFilesFromInfSection
SetupInstallFromInfSection
SetupInstallServicesFromInfSection
SetupIterateCabinet
SetupLogError
SetupLogFile
SetupOpenAppendInfFile
SetupOpenFileQueue
SetupOpenInfFile
SetupOpenMasterInf
SetupPromptForDisk
SetupPromptReboot
SetupQueryDrivesInDiskSpaceList
SetupQueryFileLog
SetupQueryInfFileInformation
SetupQueryInfVersionInformation
SetupQuerySourceList
SetupQuerySpaceRequiredOnDrive
SetupQueueCopy
SetupQueueCopySection
SetupQueueDefaultCopy
SetupQueueDelete
SetupQueueDeleteSection
SetupQueueRename
SetupQueueRenameSection
SetupRemoveFileLogEntry
SetupRemoveFromDiskSpaceList
SetupRemoveFromSourceList
SetupRemoveInstallSectionFromDiskSpaceList
SetupRemoveSectionFromDiskSpaceList
SetupRenameError
SetupScanFileQueue
SetupSetDirectoryId
SetupSetPlatformPathOverride
SetupSetSourceList
SetupTermDefaultQueueCallback
SetupTerminateFileLog
SetUserObjectInformation
SetUserObjectSecurity
SetViewportExtEx
SetViewportOrgEx
SetVolumeLabel
SetWaitableTimer
SetWindowContextHelpId
SetWindowExtEx
SetWindowLong
SetWindowOrgEx
SetWindowPlacement
SetWindowPos
SetWindowRgn
SetWindowsHookEx
SetWindowText
SetWinMetaFileBits
SetWorldTransform
SHAddToRecentDocs
SHAppBarMessage
SHBrowseForFolder
SHChangeNotify
Shell_NotifyIcon
ShellAbout
ShellExecute
ShellExecuteEx
SHFileOperation
SHFreeNameMappings
SHGetDataFromIDList
SHGetDesktopFolder
SHGetFileInfo
SHGetInstanceExplorer
SHGetMalloc
SHGetPathFromIDList
SHGetSpecialFolderLocation
SHLoadInProc
short_array_from_ndr
short_from_ndr
short_from_ndr_temp
ShowCaret
ShowCursor
ShowHideMenuCtl
ShowOwnedPopups
ShowScrollBar
ShowWindow
ShowWindowAsync
shutdown
SignalObjectAndWait
SizeofResource
Sleep
SleepEx
sndPlaySound
SnmpCleanup
SnmpClose
SnmpContextToStr
SnmpCountVbl
SnmpCreatePdu
SnmpCreateSession
SnmpCreateVbl
SnmpDecodeMsg
SnmpDeleteVb
SnmpDuplicatePdu
SnmpDuplicateVbl
SnmpEncodeMsg
SnmpEntityToStr
SnmpFreeContext
SnmpFreeDescriptor
SnmpFreeEntity
SnmpFreePdu
SnmpFreeVbl
SnmpGetLastError
SnmpGetPduData
SnmpGetRetransmitMode
SnmpGetRetry
SnmpGetTimeout
SnmpGetTranslateMode
SnmpGetVb
SnmpMgrClose
SnmpMgrGetTrap
SnmpMgrOidToStr
SnmpMgrOpen
SnmpMgrRequest
SnmpMgrStrToOid
SnmpMgrTrapListen
SnmpOidCompare
SnmpOidCopy
SnmpOidToStr
SnmpOpen
SnmpRecvMsg
SnmpRegister
SnmpSendMsg
SnmpSetPduData
SnmpSetRetransmitMode
SnmpSetRetry
SnmpSetTimeout
SnmpSetTranslateMode
SnmpSetVb
SnmpStartup
SnmpStrToContext
SnmpStrToEntity
SnmpStrToOid
SnmpSvcGetUptime
SnmpSvcSetLogLevel
SnmpSvcSetLogType
SnmpUtilAsnAnyCpy
SnmpUtilAsnAnyFree
SnmpUtilDbgPrint
SnmpUtilMemAlloc
SnmpUtilMemFree
SnmpUtilMemReAlloc
SnmpUtilOctetsCmp
SnmpUtilOctetsCpy
SnmpUtilOctetsFree
SnmpUtilOctetsNCmp
SnmpUtilOidAppend
SnmpUtilOidCmp
SnmpUtilOidCpy
SnmpUtilOidFree
SnmpUtilOidNCmp
SnmpUtilPrintAsnAny
SnmpUtilVarBindCpy
SnmpUtilVarBindFree
SnmpUtilVarBindListCpy
SnmpUtilVarBindListFree
socket
SplitSymbols
StackWalk
StartDoc
StartDocPrinter
StartPage
StartPagePrinter
StartService
StartServiceCtrlDispatcher
StgCreateDocfile
StgCreateDocfileOnILockBytes
StgCreateStorageEx
StgGetIFillLockBytesOnFile
StgGetIFillLockBytesOnILockBytes
StgIsStorageFile
StgIsStorageILockBytes
StgOpenAsyncDocfileOnIFillLockBytes
StgOpenStorage
StgOpenStorageEx
StgOpenStorageOnILockBytes
StgSetTimes
StretchBlt
StretchDIBits
StringFromCLSID
StringFromGUID2
StringFromIID
StrokeAndFillPath
StrokePath
SubtractRect
SuspendThread
SwapBuffers
SwapMouseButton
SwitchDesktop
SwitchToFiber
SwitchToThread
SymCleanup
SymEnumerateModules
SymEnumerateSymbols
SymFunctionTableAccess
SymGetModuleBase
SymGetModuleInfo
SymGetOptions
SymGetSearchPath
SymGetSymFromAddr
SymGetSymFromName
SymGetSymNext
SymGetSymPrev
SymInitialize
SymLoadModule
SymRegisterCallback
SymSetOptions
SymSetSearchPath
SymUnDName
SymUnloadModule
SysAllocString
SysAllocStringByteLen
SysAllocStringLen
SysFreeString
SysReAllocString
SysReAllocStringLen
SysStringByteLen
SysStringLen
SystemParametersInfo
SystemTimeToFileTime
SystemTimeToTzSpecificLocalTime
SystemTimeToVariantTime
SzFindCh
SzFindLastCh
SzFindSz
TabbedTextOut
tapiGetLocationInfo
tapiRequestMakeCall
TerminateJobObject
TerminateProcess
TerminateThread
TextOut
TileWindows
timeBeginPeriod
timeEndPeriod
timeGetDevCaps
timeGetSystemTime
timeGetTime
timeKillEvent
timeSetEvent
TlsAlloc
TlsFree
TlsGetValue
TlsSetValue
ToAscii
ToAsciiEx
ToUnicode
ToUnicodeEx
TraceDeregister
TraceDump
TraceDumpEx
TracePrintf
TracePrintfEx
TracePuts
TracePutsEx
TraceRegister
TraceRegisterEx
TraceVprintf
TraceVprintfEx
TrackMouseEvent
TrackPopupMenu
TrackPopupMenuEx
TransactNamedPipe
TranslateAccelerator
TranslateCharsetInfo
TranslateMDISysAccel
TranslateMessage
TransmitCommChar
TransmitFile
TransparentBlt
tree_into_ndr
tree_peek_ndr
tree_size_ndr
TrusteeAccessToObject
TryEnterCriticalSection
UFromSz
UlAddRef
UlFromSzHex
UlPropSize
UlRelease
UlValidateParameters
UlValidateParms
UnDecorateSymbolName
UnhandledExceptionFilter
UnhookWindowsHookEx
UnionRect
UnloadKeyboardLayout
UnlockFile
UnlockFileEx
UnlockServiceDatabase
UnMapAndLoad
UnmapDebugInformation
UnmapViewOfFile
UnpackDDElParam
UnrealizeObject
UnregisterClass
UnregisterHotKey
UpdateColors
UpdateDebugInfoFile
UpdateDebugInfoFileEx
UpdateResource
UpdateWindow
UserHandleGrantAccess
UuidCompare
UuidCreate
UuidCreateNil
UuidEqual
UuidFromString
UuidHash
UuidIsNil
UuidToString
ValidateParameters
ValidateParms
ValidateRect
ValidateRgn
VarBoolFromCy
VarBoolFromDate
VarBoolFromDec
VarBoolFromDisp
VarBoolFromI1
VarBoolFromI2
VarBoolFromI4
VarBoolFromR4
VarBoolFromR8
VarBoolFromStr
VarBoolFromUI1
VarBoolFromUI2
VarBoolFromUI4
VarBstrFromBool
VarBstrFromCy
VarBstrFromDate
VarBstrFromDisp
VarBstrFromI1
VarBstrFromI2
VarBstrFromI4
VarBstrFromR4
VarBstrFromR8
VarBstrFromUI1
VarBstrFromUI2
VarBstrFromUI4
VarCyFromBool
VarCyFromDate
VarCyFromDec
VarCyFromDisp
VarCyFromI1
VarCyFromI2
VarCyFromI4
VarCyFromR4
VarCyFromR8
VarCyFromStr
VarCyFromUI1
VarCyFromUI2
VarCyFromUI4
VarDateFromBool
VarDateFromCy
VarDateFromDec
VarDateFromDisp
VarDateFromI1
VarDateFromI2
VarDateFromI4
VarDateFromR4
VarDateFromR8
VarDateFromStr
VarDateFromUdate
VarDateFromUI1
VarDateFromUI2
VarDateFromUI4
VarDecFromBool
VarDecFromCy
VarDecFromDate
VarDecFromDisp
VarDecFromI1
VarDecFromI2
VarDecFromI4
VarDecFromR4
VarDecFromR8
VarDecFromStr
VarDecFromUI1
VarDecFromUI2
VarDecFromUI4
VarI1FromBool
VarI1FromCy
VarI1FromDate
VarI1FromDec
VarI1FromDisp
VarI1FromI2
VarI1FromI4
VarI1FromR4
VarI1FromR8
VarI1FromStr
VarI1FromUI1
VarI1FromUI2
VarI1FromUI4
VarI2FromBool
VarI2FromCy
VarI2FromDate
VarI2FromDec
VarI2FromDisp
VarI2FromI1
VarI2FromI4
VarI2FromR4
VarI2FromR8
VarI2FromStr
VarI2FromUI1
VarI2FromUI2
VarI2FromUI4
VarI4FromBool
VarI4FromCy
VarI4FromDate
VarI4FromDec
VarI4FromDisp
VarI4FromI1
VarI4FromI2
VarI4FromR4
VarI4FromR8
VarI4FromStr
VarI4FromUI1
VarI4FromUI2
VarI4FromUI4
VariantChangeType
VariantChangeTypeEx
VariantClear
VariantCopy
VariantCopyInd
VariantInit
VariantTimeToDosDateTime
VariantTimeToSystemTime
VarNumFromParseNum
VarParseNumFromStr
VarR4FromBool
VarR4FromCy
VarR4FromDate
VarR4FromDec
VarR4FromDisp
VarR4FromI1
VarR4FromI2
VarR4FromI4
VarR4FromR8
VarR4FromStr
VarR4FromUI1
VarR4FromUI2
VarR4FromUI4
VarR8FromBool
VarR8FromCy
VarR8FromDate
VarR8FromDec
VarR8FromDisp
VarR8FromI1
VarR8FromI2
VarR8FromI4
VarR8FromR4
VarR8FromStr
VarR8FromUI1
VarR8FromUI2
VarR8FromUI4
VarUdateFromDate
VarUI1FromBool
VarUI1FromCy
VarUI1FromDate
VarUI1FromDec
VarUI1FromDisp
VarUI1FromI1
VarUI1FromI2
VarUI1FromI4
VarUI1FromR4
VarUI1FromR8
VarUI1FromStr
VarUI1FromUI2
VarUI1FromUI4
VarUI2FromBool
VarUI2FromCy
VarUI2FromDate
VarUI2FromDec
VarUI2FromDisp
VarUI2FromI1
VarUI2FromI2
VarUI2FromI4
VarUI2FromR4
VarUI2FromR8
VarUI2FromStr
VarUI2FromUI1
VarUI2FromUI4
VarUI4FromBool
VarUI4FromCy
VarUI4FromDate
VarUI4FromDec
VarUI4FromDisp
VarUI4FromI1
VarUI4FromI2
VarUI4FromI4
VarUI4FromR4
VarUI4FromR8
VarUI4FromStr
VarUI4FromUI1
VarUI4FromUI2
VectorFromBstr
VerFindFile
VerInstallFile
VerLanguageName
VerQueryValue
VirtualAlloc
VirtualAllocEx
VirtualFree
VirtualFreeEx
VirtualLock
VirtualProtect
VirtualProtectEx
VirtualQuery
VirtualQueryEx
VirtualUnlock
VkKeyScan
VkKeyScanEx
WaitCommEvent
WaitForDebugEvent
WaitForInputIdle
WaitForMultipleObjects
WaitForMultipleObjectsEx
WaitForSingleObject
WaitForSingleObjectEx
WaitMessage
WaitNamedPipe
waveInAddBuffer
waveInClose
waveInGetDevCaps
waveInGetErrorText
waveInGetID
waveInGetNumDevs
waveInGetPosition
waveInMessage
waveInOpen
waveInPrepareHeader
waveInReset
waveInStart
waveInStop
waveInUnprepareHeader
waveOutBreakLoop
waveOutClose
waveOutGetDevCaps
waveOutGetErrorText
waveOutGetID
waveOutGetNumDevs
waveOutGetPitch
waveOutGetPlaybackRate
waveOutGetPosition
waveOutGetVolume
waveOutMessage
waveOutOpen
waveOutPause
waveOutPrepareHeader
waveOutReset
waveOutRestart
waveOutSetPitch
waveOutSetPlaybackRate
waveOutSetVolume
waveOutUnprepareHeader
waveOutWrite
wglCopyContext
wglCreateContext
wglCreateLayerContext
wglDeleteContext
wglDescribeLayerPlane
wglGetCurrentContext
wglGetCurrentDC
wglGetLayerPaletteEntries
wglGetProcAddress
wglMakeCurrent
wglRealizeLayerPalette
wglSetLayerPaletteEntries
wglShareLists
wglSwapLayerBuffers
wglUseFontBitmaps
wglUseFontOutlines
WideCharToMultiByte
WidenPath
WindowFromDC
WindowFromPoint
WinExec
WinHelp
WinLoadTrustProvider
WINNLSEnableIME
WINNLSGetEnableStatus
WINNLSGetIMEHotkey
WinSubmitCertificate
WinVerifyTrust
WNetAddConnection
WNetAddConnection2
WNetAddConnection3
WNetCancelConnection
WNetCancelConnection2
WNetCloseEnum
WNetConnectionDialog
WNetConnectionDialog1
WNetDisconnectDialog
WNetDisconnectDialog1
WNetEnumResource
WNetGetConnection
WNetGetLastError
WNetGetNetworkInformation
WNetGetProviderName
WNetGetUniversalName
WNetGetUser
WNetOpenEnum
WNetUseConnection
WPUCloseEvent
WPUCloseSocketHandle
WPUCloseThread
WPUCreateEvent
WPUCreateSocketHandle
WPUFDiSet
WPUGetProviderPath
WPUGetQOSTemplate
WPUModifyIFSHandle
WPUOpenCurrentThread
WPUPostMessage
WPUQueryBlockingCallback
WPUQuerySocketHandleContext
WPUQueueApc
WPUResetEvent
WPUSetEvent
WrapCompressedRTFStream
WrapStoreEntryID
WriteClassStg
WriteClassStm
WriteConsole
WriteConsoleInput
WriteConsoleOutput
WriteConsoleOutputAttribute
WriteConsoleOutputCharacter
WriteFile
WriteFileEx
WriteFileGather
WriteFmtUserTypeStg
WritePrinter
WritePrivateProfileSection
WritePrivateProfileString
WritePrivateProfileStruct
WriteProcessMemory
WriteProfileSection
WriteProfileString
WriteRaw
WriteTapemark
WSAAccept
WSAAddressToString
WSAAsyncGetHostByAddr
WSAAsyncGetHostByName
WSAAsyncGetProtoByName
WSAAsyncGetProtoByNumber
WSAAsyncGetServByName
WSAAsyncGetServByPort
WSAAsyncSelect
WSACancelAsyncRequest
WSACancelBlockingCall
WSACleanup
WSACloseEvent
WSAConnect
WSACreateEvent
WSADuplicateSocket
WSAEnumNameSpaceProviders
WSAEnumNetworkEvents
WSAEnumProtocols
WSAEventSelect
WSAGetLastError
WSAGetOverlappedResult
WSAGetQOSByName
WSAGetServiceClassInfo
WSAGetServiceClassNameByServiceClassId
WSAHtonl
WSAHtons
WSAInstallServiceClass
WSAIoctl
WSAIsBlocking
WSAJoinLeaf
WSALookupServiceBegin
WSALookupServiceEnd
WSALookupServiceNext
WSANtohl
WSANtohs
WSAProviderConfigChange
WSApSetPostRoutine
WSARecv
WSARecvDisconnect
WSARecvEx
WSARecvFrom
WSARemoveServiceClass
WSAResetEvent
WSASend
WSASendDisconnect
WSASendTo
WSASetBlockingHook
WSASetEvent
WSASetLastError
WSASetService
WSASocket
WSAStartup
WSAStringToAddress
WSAUnhookBlockingHook
WSAWaitForMultipleEvents
WSCDeinstallProvider
WSCEnableNSProvider
WSCEnumProtocols
WSCGetProviderPath
WSCInstallNameSpace
WSCInstallProvider
WSCInstallQOSTemplate
WSCRemoveQOSTemplate
WSCUnInstallNameSpace
WSCWriteProviderOrder
WSPAccept
WSPAddressToString
WSPAsyncSelect
WSPBind
WSPCancelBlockingCall
WSPCleanup
WSPCloseSocket
WSPConnect
WSPDuplicateSocket
WSPEnumNetworkEvents
WSPEventSelect
WSPGetOverlappedResult
WSPGetPeerName
WSPGetQOSByName
WSPGetSockName
WSPGetSockOpt
WSPIoctl
WSPJoinLeaf
WSPListen
WSPRecv
WSPRecvDisconnect
WSPRecvFrom
wsprintf
WSPSelect
WSPSend
WSPSendDisconnect
WSPSendTo
WSPSetSockOpt
WSPShutdown
WSPSocket
WSPStartup
WSPStringToAddress
wvsprintf
ZeroMemory
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ProjBld\core\bin\src\hello.v4\readme.txt ===
//this is readme.txt
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ProjBld\core\bin\src\mfcawdll\ReadMe.txt ===
========================================================================
       MICROSOFT FOUNDATION CLASS LIBRARY : mfcawdll
========================================================================


AppWizard has created this mfcawdll DLL for you.  This DLL not only
demonstrates the basics of using the Microsoft Foundation classes but
is also a starting point for writing your DLL.

This file contains a summary of what you will find in each of the files that
make up your mfcawdll DLL.

mfcawdll.h
	This is the main header file for the DLL.  It declares the
	CMfcawdllApp class.

mfcawdll.cpp
	This is the main DLL source file.  It contains the class CMfcawdllApp.


mfcawdll.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
	Developer Studio.

res\mfcawdll.rc2
    This file contains resources that are not edited by Microsoft 
	Developer Studio.  You should place all resources not
	editable by the resource editor in this file.

mfcawdll.def
    This file contains information about the DLL that must be
    provided to run with Microsoft Windows.  It defines parameters
    such as the name and description of the DLL.  It also exports
	functions from the DLL.

mfcawdll.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named mfcawdll.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ProjBld\core\bin\src\mfcawex2\hlp\AfxOleCl.rtf ===
{\rtf1\ansi \deff0\deflang1024{\fonttbl{\f0\froman Times New Roman;}{\f1\froman Symbol;}{\f2\fswiss Arial;}{\f3\froman Tms Rmn;}{\f4\fswiss Helv;}{\f5\fswiss MS Sans Serif;}{\f6\fswiss Helvetica;}{\f7\froman Tms Roman;}} {\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue127;\red0\green127\blue127;\red0\green127\blue0; \red127\green0\blue127;\red127\green0\blue0;\red127\green127\blue0;\red127\green127\blue127;\red192\green192\blue192;}{\stylesheet{\s244 \f3\fs16\up6\lang1033 \sbasedon0\snext0 footnote reference;}{\s245 \f3\fs20\lang1033  \sbasedon0\snext245 footnote text;}{\s246\li720 \i\f3\fs20\lang1033 \sbasedon0\snext255 heading 9;}{\s247\li720 \i\f3\fs20\lang1033 \sbasedon0\snext255 heading 8;}{\s248\li720 \i\f3\fs20\lang1033 \sbasedon0\snext255 heading 7;}{\s249\li720  \f3\fs20\ul\lang1033 \sbasedon0\snext255 heading 6;}{\s250\li720 \b\f3\fs20\lang1033 \sbasedon0\snext255 heading 5;}{\s251\li360 \f3\ul\lang1033 \sbasedon0\snext255 heading 4;}{\s252\li360 \b\f3\lang1033 \sbasedon0\snext255 heading 3;}{\s253\sb120  \b\f4\lang1033 \sbasedon0\snext0 heading 2;}{\s254\sb240 \b\f4\ul\lang1033 \sbasedon0\snext0 heading 1;}{\s255\li720 \f3\fs20\lang1033 \sbasedon0\snext255 Normal Indent;}{\f3\fs20\lang1033 \snext0 Normal;}{\s2\fi-240\li480\sb80\tx480 \f6\lang1033  \sbasedon0\snext2 nscba;}{\s3\fi-240\li240\sa20 \f6\lang1033 \sbasedon0\snext3 j;}{\s4\li480\sa20 \f6\lang1033 \sbasedon0\snext4 ij;}{\s5\sb80\sa20 \f6\lang1033 \sbasedon0\snext5 btb;}{\s6\fi-240\li2400\sb20\sa20 \f6\fs20\lang1033 \sbasedon0\snext6 ctcb;} {\s7\fi-240\li480\sa40\tx480 \f6\lang1033 \sbasedon0\snext7 ns;}{\s8\sa120 \f6\fs28\lang1033 \sbasedon0\snext8 TT;}{\s9\fi-240\li2400\sa20 \f6\lang1033 \sbasedon0\snext9 crtj;}{\s10\fi-240\li480\tx480 \f6\lang1033 \sbasedon0\snext10 nsca;}{\s11\sa20  \f6\lang1033 \sbasedon0\snext11 bt;}{\s12\li240\sb120\sa40 \f6\lang1033 \sbasedon0\snext12 Hf;}{\s13\li240\sb120\sa40 \f6\lang1033 \sbasedon0\snext13 Hs;}{\s14\li480\sb120\sa40 \f6\lang1033 \sbasedon0\snext14 RT;}{\s15\fi-2160\li2160\sb240\sa80\tx2160  \f6\lang1033 \sbasedon0\snext15 c;}{\s16\li2160\sa20 \f6\lang1033 \sbasedon0\snext16 ct;}{\s17\li240\sa20 \f6\lang1033 \sbasedon0\snext17 it;}{\s18\li480 \f6\fs20\lang1033 \sbasedon0\snext18 nsct;}{\s19\fi-160\li400\sb80\sa40 \f6\lang1033  \sbasedon0\snext19 nscb;}{\s20\fi-2640\li2880\sb120\sa40\brdrb\brdrs\brdrw15 \brdrbtw\brdrs\brdrw15 \tx2880 \f6\lang1033 \sbasedon0\snext20 HC2;}{\s21\fi-2640\li2880\sb120\sa20\tx2880 \f6\lang1033 \sbasedon0\snext21 C2;}{\s22\fi-240\li2400\sa20  \f6\fs20\lang1033 \sbasedon0\snext22 ctc;}{\s23\li2160\sb160 \f6\lang1033 \sbasedon0\snext23 crt;}{\s24\li480\sb20\sa40 \f6\lang1033 \sbasedon0\snext24 or;}{\s25\fi-259\li360\sb40\sa40\tx360 \f5\fs20\lang1033 \sbasedon0\snext25 Ln1;}{\s26\li115\sb80\sa80  \f5\fs20\lang1033 \sbasedon0\snext0 *Intro;}{\s27\li115\sb80\sa80\keepn \b\f5\lang1033 \sbasedon252\snext26 *Title;}{\s28\fi-245\li360\sb80 \f5\fs20\lang1033 \snext28 *Jl;}{\s29\li360\sb40\sa40 \f5\fs20\lang1033 \snext0 Lp1;}{ \s30\fi-1800\li1915\sb60\sl-240\tx1915 \f5\fs20\lang1033 \sbasedon0\snext30 Tph;}{\s31\li115\sb120\sa80 \b\f5\fs20\lang1033 \snext25 Proch;}}{\info{\title AFXOLECL}{\subject MFC OLE Client RTF Help}{\author AFX}{\creatim\yr1992\mo10\dy7\hr12\min38} {\version1}{\edmins202}{\nofpages1}{\nofwords65536}{\nofchars65536}{\vern16433}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0 \widowctrl\ftnbj \sectd \linex0\endnhere \pard\plain \sl240 \f3\fs20\lang1033 {\f4 \page }{\f4 # {\footnote \pard\plain \sl240 \f3\fs20\lang1033 # HID_EDIT_PASTE_LINK}}{\fs16\up6 ${\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 $} Paste Link command}}{\f4  }{\b\f4 Paste Link command (Edit menu)}{\f4  \par }{\f4  \par }{\f4 << Write a topic here that talks about the kinds of objects you expect users to embed in your application's documents. >>}{\f4  \par }{\f4 \page }{\fs16\up6 #{\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 #} HID_OLE_EDIT_LINKS}}{\fs16\up6 K{\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 K} objects: embedding}}{\fs16\up6 ${\footnote \pard\plain \s245  \f3\fs20\lang1033 {\fs16\up6 $} Edit Links command}}{\f4  }{\b\f4 Links command (Edit menu)}{\f4  \par }\pard\plain \s26 \f5\fs20\lang1033  \par Use this command to display a  {\uldb Links dialog box}{\v AFX_HIDD_EDITLINKS} which lets you edit links between your document and other documents. \par \pard\plain \f3\fs20\lang1033  \par \pard\plain \s26 \f5\fs20\lang1033 This command is unavailable if you have no links in your document. \par \pard\plain \sl240 \f3\fs20\lang1033 {\f4 \page }{\fs16\up6 #{\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 #} AFX_HIDD_EDITLINKS}}{\fs16\up6 ${\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 $} Links dialog box}} {\b\f4  Links dialog box}{\f4  \par }\pard  \par \pard \sl240 {\f4 << Write a topic here that discusses the Links dialog box. >>}{\f4 \page }{\fs16\up6 #{\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 #} HID_OLE_VERB_1}}{\f4  }{\fs16\up6 ${\footnote \pard\plain \s245 \f3\fs20\lang1033 { \fs16\up6 $} Object verb}}{\f4  }{\b\f4 Object verb (Edit menu)}{\f4  }{\f4  \par }{\f4  \par }{\f4 << Write a topic here that discusses Object verb. >>}{\f4  \par }{\f4  \par }{\b\f4 Shortcut}{\b\f4  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f4 Mouse:}{\f4 \tab }{\f4 Double-click the object with the left mouse button.}{\f4  \par }\pard \sl240 {\f4 \page }{\fs16\up6 #{\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 #} HID_OLE_INSERT_NEW}}{\f4  }{\fs16\up6 K{\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 K} objects: embedding}}{\f4  }{\fs16\up6 ${\footnote  \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 $} Insert Object command}}{\f4  }{\b\f4 Insert New Object command (Edit menu)} \par {\f4  \par }{\f4 Inserts and embeds an object, such as a chart or an equation in a document. The application in which the object was created becomes active on the screen.}{\f4  \par }{\f4  \par }{\f4 Select the object you want to insert into your document using the }{\f4\uldb Insert New Object dialog box}{\v\f4\uldb AFX_}{\v\f4\uldb HIDD_INSERTOBJECT}{\f4 .}{\f4  \par }{\f4 \page }{\f4 #{\footnote \pard\plain \sl240 \f3\fs20\lang1033 # AFX_HIDD_INSERTOBJECT}}{\fs16\up6 ${\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 $} Insert new object dialog box}}{\f4  }{\b\f4 Insert New Object dialog box}{\b\f4  \par }{\b\f4  \par }{\f4 << Write a topic here that discusses the Insert New Object dialog box. >>}{\f4  \par }{\f4  \par }{\f4 \page }{\f4 #{\footnote \pard\plain \sl240 \f3\fs20\lang1033 # {\f7 AFX_HIDD_CHANGEICON}}}{\fs16\up6 ${\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 $} Change icon dialog box}}{\f4  }{\b\f4 Change Icon dialog box}{\b\f4  \par }{\b\f4  \par }{\f4 << Write a topic here that discusses the Change Icon dialog box. >>}{\f4  \par }{\f4  \par }{\f4 \page }{\f4 #{\footnote \pard\plain \sl240 \f3\fs20\lang1033 # {\f7 AFX_HIDD_CONVERT}}}{\fs16\up6 ${\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 $} Convert dialog box}}{\f4  }{\b\f4 Convert dialog box}{\b\f4  \par }{\b\f4  \par }{\f4 << Write a topic here that discusses the Convert dialog box. >>}{\f4  \par }{\f4  \par }{\f4 \page }{\f4 #{\footnote \pard\plain \sl240 \f3\fs20\lang1033 # {\f7 AFX_HIDD_PASTESPECIAL}{\f4  }}}{\fs16\up6 ${\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 $} Paste Special dialog}}{\f4  }{\b\f4 Paste Special dialog box}{\b\f4  \par }{\b\f4  \par }{\f4 << Write a topic here that discusses the Paste Special dialog box. >>}{\f4  \par }{\f4  \par }{\f4  \par }{\f4                                    }{\f4  \par }{\f4  }{\f4  \par } \par }
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ProjBld\core\bin\src\mfcawex2\hlp\mfcawex2.LOG ===
Microsoft (R) Help Compiler
HCRTF 4.01.0951
Copyright (c) Microsoft Corp 1990 - 1995. All rights reserved.
mfcawex2.hpj
    HC3025: Warning: topic #1 of D:\idetest\proj_bld\core\bin\src\mfcawex2\hlp\.\afxcore.rtf : 
	Jump to undefined Topic ID: "menu_record".
    HC1010: Note: 
	The following mapped Topic IDs were not used in any topic:
	AFX_HIDP_GET_NOT_SUPPORTED
	HID_RECORD_FIRST
	HID_EDIT_SELECT_ALL
	HIDR_MFCAWETYPE_SRVR_IP
	AFX_HIDP_SQL_NO_DATA_FOUND
	AFX_HIDP_SQL_EMPTY_COLUMN_LIST
	AFX_HIDP_SQL_ODBC_LOAD_FAILED
	AFX_HIDP_FAILED_TO_CREATE
	AFX_HIDD_BUSY
	AFX_HIDP_ARCH_NONE
	HID_RECORD_LAST
	HID_RECORD_NEXT
	HID_RECORD_PREV
	AFX_HIDD_OBJECTPROPERTIES
	AFX_HIDP_FILE_TOO_MANY_OPEN
	AFX_HIDP_FILE_ACCESS_DENIED
	AFX_HIDP_ASK_TO_DISCARD
	AFX_HIDP_SQL_FIELD_SCHEMA_MISMATCH
	AFX_HIDP_SQL_LOCK_MODE_NOT_SUPPORTED
	HID_FORMAT_FONT
	AFX_HIDP_FILE_HARD_IO
	HIDP_OLE_INIT_FAILED
	AFX_HIDD_CHANGESOURCE
	AFX_HIDP_FILE_NOT_FOUND
	AFX_HIDW_DOCKBAR_TOP
	AFX_HIDP_DAO_DFX_BIND
	HID_CANCEL_EDIT_CNTR
	HID_CANCEL_EDIT_SRVR
	AFX_HIDP_SQL_ODBC_V2_REQUIRED
	AFX_HIDP_SQL_NO_ROWS_AFFECTED
	HID_OLE_EDIT_CONVERT
	HIDR_MFCAWETYPE_SRVR_EMB
	AFX_HIDP_SQL_SQL_CONFORMANCE
	AFX_HIDP_SQL_RECORDSET_READONLY
	AFX_HIDP_PARSE_RADIO_BUTTON
	HIDR_MFCAWETYPE_CNTR_IP
	HID_EDIT_PASTE_SPECIAL
	AFX_HIDP_DAO_ROWTOOSHORT
	AFX_HIDP_SQL_INCORRECT_ODBC
	AFX_HIDP_NO_ERROR_AVAILABLE
	AFX_HIDW_DOCKBAR_BOTTOM
	AFX_HIDP_FILE_DIR_FULL
	AFX_HIDP_DAO_BADBINDINFO
	AFX_HIDP_SQL_UPDATE_DELETE_FAILED
	AFX_HIDP_PARSE_DATETIME
	HID_OLE_EDIT_CHANGE_ICON
	AFX_HIDP_ARCH_ENDOFFILE
	AFX_HIDP_SQL_SQL_NO_TOTAL
	AFX_HIDP_SQL_CONNECT_FAIL
	AFX_HIDP_SQL_API_CONFORMANCE
	HID_OLE_EDIT_PROPERTIES
	AFX_HIDP_FILE_DISKFULL
	AFX_HIDW_DOCKBAR_LEFT
	AFX_HIDP_FILE_REMOVE_CURRENT
	AFX_HIDP_ARCH_BADCLASS
	AFX_HIDP_SQL_NO_POSITIONED_UPDATES
	AFX_HIDP_ARCH_BADINDEX
	HID_WIZBACK
	HID_WIZNEXT
	AFX_HIDP_PARSE_CURRENCY
	AFX_HIDP_FILE_NONE
	AFX_HIDP_FAILED_TO_CONVERT
	HID_HELP_FINDER
	AFX_HIDP_FILE_EOF
	AFX_HIDP_FILE_LOCKING
	AFX_HIDP_SQL_ILLEGAL_MODE
	AFX_HIDD_PREVIEW_TOOLBAR
	AFX_HIDP_SQL_NO_CURRENT_RECORD
	AFX_HIDP_FILE_BAD_PATH
	AFX_HIDP_FILE_BAD_SEEK
	AFX_HIDP_SQL_ROW_UPDATE_NOT_SUPPORTED
	AFX_HIDP_FAILED_MAPI_LOAD
	AFX_HIDP_FAILED_MAPI_SEND
	AFX_HIDP_FILE_SHARING
	HID_FILE_PRINT_DIRECT
	AFX_HIDP_SQL_DYNASET_NOT_SUPPORTED
	AFX_HIDP_SQL_ROW_FETCH
	AFX_HIDP_SET_NOT_SUPPORTED
	AFX_HIDP_ARCH_BADSCHEMA
	AFX_HIDD_FILEBROWSE
	AFX_HIDP_SQL_DATA_TRUNCATED
	HID_WIZFINISH
	AFX_HIDP_INVALID_MAPI_DLL
	AFX_HIDD_PREVIEW_SHORTTOOLBAR
	AFX_HIDP_DAO_OBJECT_NOT_OPEN
	AFX_HIDP_ARCH_WRITEONLY
	AFX_HIDP_SQL_MULTIPLE_ROWS_AFFECTED
	AFX_HIDP_DAO_ENGINE_INITIALIZATION
	AFX_HIDW_DOCKBAR_FLOAT
	AFX_HIDW_DOCKBAR_RIGHT
	AFX_HIDP_PARSE_BYTE
	AFX_HIDP_PARSE_UINT
	AFX_HIDP_ARCH_GENERIC
	AFX_HIDP_SQL_SNAPSHOT_NOT_SUPPORTED
	AFX_HIDP_FILE_GENERIC
	AFX_HIDP_FILE_INVALID_FILE
	AFX_HIDP_ARCH_READONLY
	AFX_HIDP_SQL_RECORDSET_FORWARD_ONLY
	AFX_HIDP_SQL_DYNAMIC_CURSOR_NOT_SUPPORTED
	HIDP_FAILED_TO_CREATE
	AFX_HIDP_DAO_COLUMNUNAVAILABLE
84	Topics
50	Jumps
18	Keywords
21	Bitmaps


File size: 41,755
Phrase+Zeck compression decreased help file by 15,321 bytes.
Compile time: 0 minutes, 4 seconds
1 note, 1 warning
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ProjBld\core\bin\src\mfcawex2\ReadMe.txt ===
========================================================================
       MICROSOFT FOUNDATION CLASS LIBRARY : mfcawex2
========================================================================


AppWizard has created this mfcawex2 application for you.  This application
not only demonstrates the basics of using the Microsoft Foundation classes
but is also a starting point for writing your application.

This file contains a summary of what you will find in each of the files that
make up your mfcawex2 application.

mfcawex2.h
    This is the main header file for the application.  It includes other
    project specific headers (including Resource.h) and declares the
    CMfcawex2App application class.

mfcawex2.cpp
    This is the main application source file that contains the application
    class CMfcawex2App.

mfcawex2.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
	Developer Studio.

res\mfcawex2.ico
    This is an icon file, which is used as the application's icon.  This
    icon is included by the main resource file mfcawex2.rc.

res\mfcawex2.rc2
    This file contains resources that are not edited by Microsoft 
	Developer Studio.  You should place all resources not
	editable by the resource editor in this file.

mfcawex2.reg
    This is an example .REG file that shows you the kind of registration
    settings the framework will set for you.  You can use this as a .REG
    file to go along with your application or just delete it and rely
    on the default RegisterShellFileTypes registration.

mfcawex2.odl
    This file contains the Object Description Language source code for the
    type library of your application.

mfcawex2.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

/////////////////////////////////////////////////////////////////////////////

For the main frame window:

MainFrm.h, MainFrm.cpp
    These files contain the frame class CMainFrame, which is derived from
    CMDIFrameWnd and controls all MDI frame features.

res\Toolbar.bmp
    This bitmap file is used to create tiled images for the toolbar.
    The initial toolbar and status bar are constructed in the
    CMainFrame class.  Edit this toolbar bitmap along with the
    array in MainFrm.cpp to add more toolbar buttons.

res\IToolbar.bmp
	This bitmap file is used to create tiled images for the toolbar
	when your server application is in-place activated inside another
	container.  This toolbar is constructed in the CInPlaceFrame
	class.  This bitmap is similar to the bitmap in res\Toolbar.bmp
	except that it has many non-server commands removed.

/////////////////////////////////////////////////////////////////////////////

AppWizard creates one document type and one view:

mfcawex2Doc.h, mfcawex2Doc.cpp - the document
    These files contain your CMfcawex2Doc class.  Edit these files to
    add your special document data and to implement file saving and loading
    (via CMfcawex2Doc::Serialize).

mfcawex2View.h, mfcawex2View.cpp - the view of the document
    These files contain your CMfcawex2View class.
    CMfcawex2View objects are used to view CMfcawex2Doc objects.

res\mfcawex2Doc.ico
    This is an icon file, which is used as the icon for MDI child windows
    for the CMfcawex2Doc class.  This icon is included by the main
    resource file mfcawex2.rc.

/////////////////////////////////////////////////////////////////////////////

AppWizard has also created classes specific to OLE

CntrItem.h, CntrItem.cpp - this class is used to
	manipulate OLE objects.  They are usually displayed by your
	CMfcawex2View class and serialized as part of your CMfcawex2Doc class.

SrvrItem.h, SrvrItem.cpp - this class is used to
	connect your CMfcawex2Doc class to the OLE system, and optionally
	provide links to your document.
IpFrame.h, IpFrame.cpp - this class is derived
	from COleIPFrameWnd and controls all frame features during
	in-place activation.
/////////////////////////////////////////////////////////////////////////////

Help Support:

MakeHelp.bat
    Use this batch file to create your application's Help file, hlp\mfcawex2.hLP.

hlp\mfcawex2.hpj
    This file is the Help Project file used by the Help compiler to create
    your application's Help file.

hlp\*.bmp
    These are bitmap files required by the standard Help file topics for
    Microsoft Foundation Class Library standard commands.

hlp\*.rtf
    This file contains the standard help topics for standard MFC
    commands and screen objects.

/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named mfcawex2.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

If your application uses MFC in a shared DLL, and your application is 
in a language other than the operating system's current language, you
will need to copy the corresponding localized resources MFC40XXX.DLL
from the Microsoft Visual C++ CD-ROM onto the system or system32 directory,
and rename it to be MFCLOC.DLL.  ("XXX" stands for the language abbreviation.
For example, MFC40DEU.DLL contains resources translated to German.)  If you
don't do this, some of the UI elements of your application will remain in the
language of the operating system.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ProjBld\core\bin\src\mfcawex2\hlp\AfxCore.rtf ===
{\rtf1\ansi \deff0\deflang1033{\fonttbl{\f0\froman\fcharset0\fprq2 Tms Rmn;}{\f1\froman\fcharset2\fprq2 Symbol;}{\f2\fswiss\fcharset0\fprq2 Helv;}{\f3\fmodern\fcharset0\fprq1 Courier;} {\f4\froman\fcharset0\fprq2 Times New Roman;}{\f5\fswiss\fcharset0\fprq2 Arial;}{\f6\froman\fcharset0\fprq2 MS Serif;}{\f7\fswiss\fcharset0\fprq2 MS Sans Serif;}{\f8\froman\fcharset0\fprq2 Times;}{\f9\fswiss\fcharset0\fprq2 Helvetica{\*\falt Arial};} {\f10\fswiss\fcharset0\fprq2 System;}{\f11\fmodern\fcharset0\fprq1 Courier New;}{\f12\froman\fcharset0\fprq2 New York;}{\f13\fswiss\fcharset0\fprq2 Geneva;}{\f14\fmodern\fcharset0\fprq1 Fixedsys;}{\f15\fmodern\fcharset255\fprq1 Terminal;} {\f16\fswiss\fcharset0\fprq2 Small Fonts;}{\f17\fswiss\fcharset0\fprq2 MS Dialog;}{\f18\fswiss\fcharset0\fprq2 MS Dialog Light;}{\f19\fswiss\fcharset0\fprq2 MS SystemEx;}{\f20\fnil\fcharset2\fprq2 Marlett;}{\f21\fnil\fcharset2\fprq2 Wingdings;} {\f22\fmodern\fcharset2\fprq1 MS LineDraw;}{\f23\fdecor\fcharset0\fprq2 Algerian;}{\f24\fswiss\fcharset0\fprq2 Arial Rounded MT Bold;}{\f25\froman\fcharset0\fprq2 Bookman Old Style;}{\f26\fdecor\fcharset0\fprq2 Braggadocio;} {\f27\fswiss\fcharset0\fprq2 Britannic Bold;}{\f28\fscript\fcharset0\fprq2 Brush Script MT;}{\f29\fswiss\fcharset0\fprq2 Century Gothic;}{\f30\fdecor\fcharset0\fprq2 Colonna MT;}{\f31\fdecor\fcharset0\fprq2 Desdemona;} {\f32\froman\fcharset0\fprq2 Footlight MT Light;}{\f33\fswiss\fcharset0\fprq2 Impact;}{\f34\fdecor\fcharset0\fprq2 Kino MT;}{\f35\froman\fcharset0\fprq2 Wide Latin;}{\f36\fscript\fcharset0\fprq2 Matura MT Script Capitals;} {\f37\fdecor\fcharset0\fprq2 Playbill;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128; \red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar \fs20 \snext0 Normal;}{\s1\sb240\nowidctlpar \b\f2\ul  \sbasedon0\snext0 heading 1;}{\s2\sb120\nowidctlpar \b\f2 \sbasedon0\snext0 heading 2;}{\s3\li360\nowidctlpar \b \sbasedon0\snext17 heading 3;}{\s4\li360\nowidctlpar \ul \sbasedon0\snext17 heading 4;}{\s5\li720\nowidctlpar \b\fs20 \sbasedon0\snext17  heading 5;}{\s6\li720\nowidctlpar \fs20\ul \sbasedon0\snext17 heading 6;}{\s7\li720\nowidctlpar \i\fs20 \sbasedon0\snext17 heading 7;}{\s8\li720\nowidctlpar \i\fs20 \sbasedon0\snext17 heading 8;}{\s9\li720\nowidctlpar \i\fs20 \sbasedon0\snext17  heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive\f0\fs16\up6\lang1033 \sbasedon10 footnote reference;}{\s16\nowidctlpar \fs20 \sbasedon0\snext16 footnote text;}{\s17\li720\nowidctlpar \fs20 \sbasedon0\snext17 Normal Indent;}{ \s18\fi-240\li480\sb80\nowidctlpar\tx480 \f9 \sbasedon0\snext18 nscba;}{\s19\fi-240\li240\sa20\nowidctlpar \f9 \sbasedon0\snext19 j;}{\s20\li480\sa20\nowidctlpar \f9 \sbasedon0\snext20 ij;}{\s21\sb80\sa20\nowidctlpar \f9 \sbasedon0\snext21 btb;}{ \s22\fi-240\li2400\sb20\sa20\nowidctlpar \f9\fs20 \sbasedon0\snext22 ctcb;}{\s23\fi-240\li480\sa40\nowidctlpar\tx480 \f9 \sbasedon0\snext23 ns;}{\s24\sa120\nowidctlpar \f9\fs28 \sbasedon0\snext24 TT;}{\s25\fi-240\li2400\sa20\nowidctlpar \f9  \sbasedon0\snext25 crtj;}{\s26\fi-240\li480\nowidctlpar\tx480 \f9 \sbasedon0\snext26 nsca;}{\s27\sa20\nowidctlpar \f9 \sbasedon0\snext27 bt;}{\s28\li240\sb120\sa40\nowidctlpar \f9 \sbasedon0\snext28 Hf;}{\s29\li240\sb120\sa40\nowidctlpar \f9  \sbasedon0\snext29 Hs;}{\s30\li480\sb120\sa40\nowidctlpar \f9 \sbasedon0\snext30 RT;}{\s31\fi-2160\li2160\sb240\sa80\nowidctlpar\tx2160 \f9 \sbasedon0\snext31 c;}{\s32\li2160\sa20\nowidctlpar \f9 \sbasedon0\snext32 ct;}{\s33\li240\sa20\nowidctlpar \f9  \sbasedon0\snext33 it;}{\s34\li480\nowidctlpar \f9\fs20 \sbasedon0\snext34 nsct;}{\s35\fi-160\li400\sb80\sa40\nowidctlpar \f9 \sbasedon0\snext35 nscb;}{\s36\fi-2640\li2880\sb120\sa40\nowidctlpar\brdrb\brdrs\brdrw15 \brdrbtw\brdrs\brdrw15 \tx2880 \f9  \sbasedon0\snext36 HC2;}{\s37\fi-2640\li2880\sb120\sa20\nowidctlpar\tx2880 \f9 \sbasedon0\snext37 C2;}{\s38\fi-240\li2400\sa20\nowidctlpar \f9\fs20 \sbasedon0\snext38 ctc;}{\s39\li2160\sb160\nowidctlpar \f9 \sbasedon0\snext39 crt;}{ \s40\li480\sb20\sa40\nowidctlpar \f9 \sbasedon0\snext40 or;}{\s41\fi-259\li360\sb40\sa40\nowidctlpar\tx360 \f7\fs20 \sbasedon0\snext41 Ln1;}{\s42\li115\sb80\sa80\nowidctlpar \f7\fs20 \sbasedon0\snext0 *Intro;}{\s43\li115\sb80\sa80\keepn\nowidctlpar \b\f7  \sbasedon3\snext42 *Title;}{\s44\fi-245\li360\sb80\nowidctlpar \f7\fs20 \snext44 *Jl;}{\s45\li360\sb40\sa40\nowidctlpar \f7\fs20 \snext0 Lp1;}{\s46\fi-1800\li1915\sb60\sl-240\slmult0\nowidctlpar\tx1915 \f7\fs20 \sbasedon0\snext46 Tph;}{ \s47\li115\sb120\sa80\nowidctlpar \b\f7\fs20 \snext41 Proch;}{\*\cs48 \additive\super \sbasedon10 endnote reference;}}{\info{\title AFXCORE}{\subject MFC Core RTF Help}{\author AFX}{\creatim\yr1992\mo10\dy7\hr11\min4}{\version1}{\edmins1}{\nofpages0} {\nofwords0}{\nofchars0}{\vern49221}}\widowctrl\ftnbj\aenddoc\hyphcaps0 \fet0\sectd \linex576\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3 \pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}} {\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \sl240\slmult0\widctlpar  \fs20 {\cs15\fs16\up6 #{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 #} main_index}}{\fs16\up6   }{\b\f2\fs24\up6 <<YourApp>> Help Index}{\b\f2  \par }{\f9  \par }{\b\f2 How To ... \par }{\f2 \tab <<add your application-specific "how to" topics here>>}{\f9\ulw  \par  \par }{\b\f2 Commands \par }{\f2 \tab }{\f2\uldb File menu}{\v\f2 menu_file}{\f2  \par \tab }{\f2\uldb Edit menu}{\v\f2 menu_edit}{\f2\uldb  \par }{\f2 \tab }{\f2\uldb Record menu}{\v\f2 menu_record}{\f2  \par \tab }{\f2\uldb View menu}{\v\f2 menu_view}{\f2  \par \tab }{\f2\uldb Window menu}{\v\f2 menu_window}{\f2  \par \tab }{\f2\uldb Help menu}{\v\f2 menu_help}{\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} menu_file}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar  \fs20 {\cs15\fs16\up6 $} File menu commands}}{\f2  }{\b\f2 File menu commands}{\f2  \par  \par The File menu offers the following commands: \par  \par }\trowd \trgaph108\trleft-108 \cellx1302\cellx8622 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb New}{\v\f2 HID_FILE_NEW}{\f2 \cell Creates a new document.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1302\cellx8622 \pard  \sl240\slmult0\widctlpar\intbl {\f2\uldb Open}{\v\f2 HID_FILE_OPEN}{\f2\uldb \cell }{\f2 Opens an existing document.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Close}{\v\f2 HID_FILE_CLOSE}{\f2\uldb \cell }{\f2  Closes an opened document.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Save}{\v\f2 HID_FILE_SAVE}{\f2\uldb \cell }{\f2 Saves an opened document using the same file name.\cell }\pard \widctlpar\intbl {\f2 \row  }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Save As}{\v\f2 HID_FILE_SAVE_AS}{\f2\uldb \cell }{\f2 Saves an opened document to a specified file name.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Print}{\v\f2  HID_FILE_PRINT}{\f2\uldb \cell }{\f2 Prints a document.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Print Preview}{\v\f2 HID_FILE_PRINT_PREVIEW}{\f2\uldb \cell }{\f2  Displays the document on the screen as it would appear printed.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Print Setup}{\v\f2 HID_FILE_PRINT_SETUP}{\f2\uldb \cell }{\f2 Selects a printer and printer connection. \cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Send...}{\v\f2 HID_FILE_SEND_MAIL}{\f2\uldb \cell }{\f2 Sends the active document through electronic mail.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd  \trgaph108\trleft-108 \cellx1302\cellx8622 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Exit}{\v\f2 HID_APP_EXIT}{\f2 \tab  \par }{\f2\uldb \cell }{\f2 Exits <<YourApp>>.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} menu_edit}}{\b\f2 Edit menu commands}{\f2  \par  \par The Edit menu offers the following commands: \par }\pard \fi-720\li720\sl240\slmult0\widctlpar {\f2  \par }\trowd \trgaph108\trleft-108 \cellx1497\cellx10212 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Undo}{\v\f2 HID_EDIT_UNDO}{\f2 \cell Reverse previous editing operation.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1497 \cellx10212 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Cut}{\v\f2 HID_EDIT_CUT}{\f2\uldb \cell }{\f2 Deletes data from the document and moves it to the clipboard.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb  Copy}{\v\f2 HID_EDIT_COPY}{\f2\uldb \cell }{\f2 Copies data from the document to the clipboard.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Paste}{\v\f2 HID_EDIT_PASTE}{\f2\uldb \cell }{\f2  Pastes data from the clipboard into the document.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Paste Link}{\v\f2 HID_EDIT_PASTE_LINK}{\f2\uldb \cell }{\f2  Pastes from the clipboard a link to data in another application.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Insert New Object}{\v\f2\uldb HID_OLE_INSERT_NEW}{\f2\uldb \cell }{\f2  Inserts and embeds an object, such as a chart or an equation in a document.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1497\cellx10212 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Links}{\v\f2 HID_OLE_EDIT_LINKS}{ \f2\uldb \cell }{\f2 List and edit links to embedded documents.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \fi-720\li720\sl240\slmult0\widctlpar {\f2  \par }\pard \sl240\slmult0\widctlpar {\f2 \tab \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} menu_view}}{\b\f2 View menu commands}{\f2  \par  \par The View menu offers the following commands: \par  \par }\trowd \trgaph108\trleft-108 \cellx1272\cellx7452 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Toolbar}{\v\f2 HID_VIEW_TOOLBAR}{\f2\uldb \cell }{\f2 Shows or hides the toolbar.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108  \cellx1272\cellx7452 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Status Bar}{\v\f2 HID_VIEW_STATUS_BAR}{\f2\uldb \cell }\pard \fi-720\li720\sl240\slmult0\widctlpar\intbl {\f2 Shows or hides the status bar. \par }\pard \sl240\slmult0\widctlpar\intbl {\f2 \cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} menu_window}}{\b\f2  Window menu commands}{\f2  \par  \par The Window menu offers the following commands, which enable you to arrange multiple views of multiple documents in the application window: \par  \par }\trowd \trgaph108\trleft-108 \cellx1572\cellx7752 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb New Window}{\v\f2 HID_WINDOW_NEW}{\f2\uldb \cell }{\f2 Creates a new window that views the same document.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd  \trgaph108\trleft-108 \cellx1572\cellx7752 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Cascade}{\v\f2 HID_WINDOW_CASCADE}{\f2\uldb \cell }{\f2 Arranges windows in an overlapped fashion.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0 \widctlpar\intbl {\f2\uldb Tile}{\v\f2 HID_WINDOW_TILE}{\f2\uldb \cell }{\f2 Arranges windows in non-overlapped tiles.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Arrange Icons}{\v\f2 HID_WINDOW_ARRANGE}{ \f2\uldb \cell }\pard \fi-720\li720\sl240\slmult0\widctlpar\intbl {\f2 Arranges icons of closed windows.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Split}{\v\f2 HID_WINDOW_SPLIT}{\f2\uldb \cell }\pard  \fi-720\li720\sl240\slmult0\widctlpar\intbl {\f2 Split the active window into panes.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1572\cellx7752 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Window 1, 2, ...}{\v\f2  HID_WINDOW_ALL}{\f2\uldb \cell }\pard \fi-720\li720\sl240\slmult0\widctlpar\intbl {\f2 Goes to specified window.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \fi-720\li720\sl240\slmult0\widctlpar {\f2  \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} menu_help}}{\b\f2 Help menu commands}{\f2  \par  \par The Help menu offers the following commands, which provide you assistance with this application:  \par  \par }\trowd \trgaph108\trleft-108 \cellx1077\cellx7257 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Help Topics}{\v\f2 HID_HELP_INDEX}{\f2\uldb \cell }\pard \fi-720\li720\sl240\slmult0\widctlpar\intbl {\f2  Offers you an index to topics on which you can get help.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1077\cellx7257 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb About}{\v\f2 HID_APP_ABOUT}{\f2\uldb \cell }\pard  \fi-720\li720\sl240\slmult0\widctlpar\intbl {\f2 Displays the version number of this application.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \fi-720\li720\sl240\slmult0\widctlpar {\f2  \par  \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_NEW}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{\cs15\fs16\up6 $ {\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} File New command}}{\f2  }{\b\f2 New command (File menu)}{\f2  \par  \par Use this command to create a new document in <<YourApp>>.  Select the type of new file you want to create in the }{\f2\uldb File New dialog box}{\v AFX_HIDD_NEWTYPEDLG}.  {\f2  << Remove previous sentence if your application supports only one document type. >> \par  \par You can open an existing document with the }{\f2\uldb Open command}{\v HID_FILE_OPEN}{\f2 . \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc filenew.bmp\} \par Keys:\tab CTRL+N \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_NEWTYPEDLG}}{\b\f2 File New dialog box \par }{\f2  \par << Delete this help topic if your application supports only one document type. >> \par  \par Specify the type of document you wish to create: \par << List your application's document types here >>\page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_OPEN}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{ \cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} File Open command}}{\f2  }{\b\f2 Open command (File menu)}{\f2  \par  \par Use this command to open an existing document in a new window.  You can open multiple documents at once.  Use the Window menu to switch among the multiple open documents.  See }{\f2\uldb Window 1, 2, ... command}{\v\f2 HID_WINDOW_ALL}{\f2 . \par  \par You can create new documents with the }{\f2\uldb New command}{\v HID_FILE_NEW}{\f2 . \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc fileopen.bmp\} \par Keys:\tab CTRL+O \par }\pard \li360\sl240\slmult0\widctlpar {\f2  \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_FILEOPEN}}{\b\f2 File Open dialog box \par }{\f2  \par The following options allow you to specify which file to open: \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 File Name \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Type or select the filename you want to open.  This box lists files with the extension you select in the List Files of Type box.  \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 List Files of Type \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Select the type of file you want to open: \par << List your application's file types here. >> \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Drives \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Select the drive in which <<YourApp>> stores the file that you want to open.  \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Directories \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Select the directory in which <<YourApp>> stores the file that you want to open. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Network... \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Choose this button to connect to a network location, assigning it a new drive letter.  \par  \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_CLOSE}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{\cs15\fs16\up6 $ {\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} File Close command}}{\f2  }{\b\f2 Close command (File menu)}{\f2  \par  \par Use this command to close all windows containing the active document.  <<YourApp>> suggests that you save changes to your document before you close it.  If you close a document without saving, you lose all changes made since the last time you saved it.  B efore closing an untitled document, <<YourApp>> displays the }{\f2\uldb Save As dialog box}{\v AFX_HIDD_FILESAVE}{\f2  and suggests that you name and save the document. \par  \par You can also close a document by using the Close icon on the document's window, as shown below: \par \{bml scmenu.bmp\} \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_SAVE}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar  \fs20 {\cs15\fs16\up6 $} File Save command}}{\f2  }{\b\f2 Save command (File menu)}{\f2  \par  \par Use this command to save the active document to its current name and directory.  When you save a document for the first time, <<YourApp>> displays the }{\f2\uldb Save As dialog box}{\v AFX_HIDD_FILESAVE}{\f2   so you can name your document.  If you want to change the name and directory of an existing document before you save it, choose the }{\f2\uldb Save As command}{\v HID_FILE_SAVE_AS}{\f2 . \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc filesave.bmp\} \par Keys:\tab CTRL+S \par }\pard \li360\sl240\slmult0\widctlpar {\f2  \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_SAVE_AS}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain  \s16\widctlpar \fs20 {\cs15\fs16\up6 $} File Save As command}}{\f2  }{\b\f2 Save As command (File menu)}{\f2  \par  \par Use this command to save and name the active document.  <<YourApp>> displays the }{\f2\uldb Save As dialog box}{\v AFX_HIDD_FILESAVE}{\f2  so you can name your document.   \par  \par To save a document with its existing name and directory, use the }{\f2\uldb Save command}{\v HID_FILE_SAVE}{\f2 . \par  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_SEND_MAIL}}{\b\f2 Send command (File menu)}{\f2  \par  \par Use this command to send the active document through electronic mail.  This command presents a mail window with the active document attached to it.  You may then fill out the To: field, Subject: field, etc., and add text to the body of the message if you  wish.  When you are finished you may click the "Send" button to send the message. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_FILESAVE}}{\b\f2 File Save As dialog box \par }{\f2  \par The following options allow you to specify the name and location of the file you're about to save: \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 File Name \par }\pard \li360\sl240\slmult0\widctlpar {\f2  Type a new filename to save a document with a different name.  A filename can contain up to eight characters and an extension of up to three characters.  <<YourApp>> adds the extension you specify in the Save File As Type box. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Drives \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Select the drive in which you want to store the document. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Directories \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Select the directory in which you want to store the document. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Network... \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Choose this button to connect to a network location, assigning it a new drive letter.  \par  \par }\pard \sl240\slmult0\widctlpar {\f2 << Add other File Save As dialog box options depending on which ones your application chooses via the OFN_ flags of the OPENFILENAME structure used by the CFileDialog. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_MRU_FILE1}}{\f2  }{\cs15\fs16\up6 K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{\cs15\fs16\up6 ${\footnote  \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} File 1, 2, 3, 4 command}}{\f2  }{\b\f2 1, 2, 3, 4 command (File menu)}{\f2  \par  \par Use the numbers and filenames listed at the bottom of the File menu to open the last four documents you closed.  Choose the number that corresponds with the document you want to open. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_APP_EXIT}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} exit}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 { \cs15\fs16\up6 $} File Exit command}}{\f2  }{\b\f2 Exit command (File menu)}{\f2  \par  \par Use this command to end your <<YourApp>> session.  You can also use the Close command on the application Control menu.  <<YourApp>> prompts you to save documents with unsaved changes. \par } \par {\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Mouse:\tab Double-click the application's Control menu button. \par \tab \{bmc appexit.bmp\} \par Keys:\tab ALT+F4 \par }\pard \sl240\slmult0\widctlpar \page {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_UNDO}}{\b\f2 Undo/Can't Undo command (Edit menu)}{\f2  \par  \par << Your application's user interface for Undo may differ from the one described below.  Modify this help text accordingly. >> \par  \par Use this command to reverse the last editing action, if possible.   The name of the command changes, depending on what the last action was.  The Undo command changes to Can't Undo on the menu if you cannot reverse your last action. \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc editundo.bmp\} \par Keys:\tab CTRL+Z or \par \tab ALT-BACKSPACE\tab  \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_REDO}}{\b\f2 Redo command (Edit menu)}{\f2  \par  \par << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_CUT}}{\b\f2 Cut command (Edit menu)}{\f2  \par  \par Use this command to remove the currently selected data from the document and put it on the clipboard.  This command is unavailable if there is no data currently selected. \par  \par Cutting data to the clipboard replaces the contents previously stored there. \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc editcut.bmp\} \par Keys:\tab CTRL+X \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_COPY}}{\b\f2 Copy command (Edit menu)}{\f2  \par  \par Use this command to copy selected data onto the clipboard.  This command is unavailable if there is no data currently selected. \par  \par Copying data to the clipboard replaces the contents previously stored there. \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc editcopy.bmp\} \par Keys:\tab CTRL+C \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_PASTE}}{\b\f2 Paste command (Edit menu)}{\f2  \par  \par Use this command to insert a copy of the clipboard contents at the insertion point.  This command is unavailable if the clipboard is empty. \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc editpast.bmp\} \par Keys:\tab CTRL+V \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_VIEW_TOOLBAR}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} toolbar}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20  {\cs15\fs16\up6 $} View Toolbar command}}{\f2  }{\b\f2 Toolbar command (View menu)}{\f2  \par  \par Use this command to display and hide the Toolbar, which includes buttons for some of the most common commands in <<YourApp>>, such as File Open.  A check mark appears next to the menu item when the Toolbar is displayed. \par  \par See }{\f2\uldb Toolbar}{\v\f2 AFX_HIDW_TOOLBAR}{\f2  for help on using the toolbar. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDW_TOOLBAR}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} toolbar}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20  {\cs15\fs16\up6 $} toolbar}}{\f2  }{\b\f2 Toolbar}{\f2  \par \{bml hlptbar.bmp\} \par  \par The toolbar is displayed across the top of the application window, below the menu bar.  The toolbar provides quick mouse access to many tools used in <<YourApp>>, \par  \par To hide or display the Toolbar, choose Toolbar from the View menu (ALT, V, T). \par  \par << Add or remove toolbar buttons from the list below according to which ones your application offers. >> \par  \par }\pard \sl240\slmult0\widctlpar\brdrb\brdrs\brdrw15\brsp20 \tx1080 {\b\f2 Click\tab To}{\f2  \par }\pard \fi-1080\li1080\sl240\slmult0\widctlpar\tx1080 {\f2 \{bmc filenew.bmp\}\tab Open a new document. \par  \par \{bmc fileopen.bmp\}\tab Open an existing document.  <<YourApp>> displays the Open dialog box, in which you can locate and open the desired file. \par  \par \{bmc filesave.bmp\}\tab Save the active document or template with its current name.  If you have not named the document, <<YourApp>> displays the Save As dialog box. \par  \par \{bmc fileprnt.bmp\}\tab Print the active document. \par  \par \{bmc editcut.bmp\}\tab Remove selected data from the document and stores it on the clipboard. \par  \par \{bmc editcopy.bmp\}\tab Copy the selection to the clipboard. \par  \par \{bmc editpast.bmp\}\tab Insert the contents of the clipboard at the insertion point. \par  \par \{bmc editundo.bmp\}\tab Reverse the last editing.  Note:  You cannot undo some actions. \par  \par \{bmc recfirst.bmp\}\tab Go to the first record in the current selection. \par  \par \{bmc recprev.bmp\}\tab Go to the previous record in the current selection. \par  \par \{bmc recnext.bmp\}\tab Go to the next record in the current selection. \par  \par \{bmc reclast.bmp\}\tab Go to the last record in the current selection. \par  \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_VIEW_STATUS_BAR}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} status bar}}{\f2  }{\cs15\fs16\up6 $ {\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} View Status Bar Command}}{\b\f2 Status Bar command (View menu) \par }{\f2  \par Use this command to display and hide the Status Bar, which describes the action to be executed by the selected menu item or depressed toolbar button, and keyboard latch state. A check mark appears next to the menu item when the Status Bar is displayed. \par  \par See }{\f2\uldb Status Bar}{\v\f2 AFX_HIDW_STATUS_BAR}{\f2  for help on using the status bar. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDW_STATUS_BAR}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} status bar}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \sl240\slmult0 \widctlpar \fs20 {\cs15\fs16\up6 $} status bar}}{\b\f2 Status Bar}{\f2  \par \{bml hlpsbar.bmp\} \par  \par The status bar is displayed at the bottom of the <<YourApp>> window.  To display or hide the status bar, use the Status Bar command in the View menu. \par  \par The left area of the status bar describes actions of menu items as you use the arrow keys to navigate through menus.  This area similarly shows messages that describe the actions of toolbar buttons as you depress them, before releasing them.  If after vie wing the description of the toolbar button command you wish not to execute the command, then release the mouse button while the pointer is off the toolbar button. \par  \par The right areas of the status bar indicate which of the following keys are latched down: \par  \par }\pard \sl240\slmult0\widctlpar\tx1440 {\b\f2 Indicator\tab Description}{\f2  \par }\pard \fi-1440\li1440\sa120\sl240\slmult0\widctlpar\tx1440 {\f2 CAP\tab The Caps Lock key is latched down. \par NUM\tab The Num Lock key is latched down. \par SCRL\tab The Scroll Lock key is latched down. \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_NEW}}{\b\f2 New command (Window menu)}{\f2  \par  \par Use this command to open a new window with the same contents as the act ive window.  You can open multiple document windows to display different parts or views of a document at the same time.  If you change the contents in one window, all other windows containing the same document reflect those changes.  When you open a new w indow, it becomes the active window and is displayed on top of all other open windows. \par  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_CASCADE}}{\b\f2 Cascade command (Window menu)}{\f2  \par  \par Use this command to arrange multiple opened windows in an overlapped fashion.  \par  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_TILE}}{\b\f2 Tile command (Window menu)}{\f2  \par  \par Use this command to arrange multiple opened windows in a non-overlapped fashion. \par  \par  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_TILE_HORZ}}{\b\f2 Tile Horizontal command (Window menu)}{\f2  \par  \par Use this command to vertically arrange multiple opened windows in a non-overlapped fashion. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_TILE_VERT}}{\b\f2 Tile Vertical command (Window menu)}{\f2  \par  \par Use this command to arrange multiple opened windows side by side. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_ARRANGE}}{\b\f2 Window Arrange Icons Command}{\f2  \par  \par Use this command to arrange the icons for minimized windows at the bottom of the main window.  If there is an open document window at the bottom of the main window, then some or all of the icons may not be visible because they will be underneath this docu ment window.\page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_SPLIT}}{\b\f2 Split Command (Window menu) \par  \par }{\f2 Use this command to split the active window into panes.  You may then use the mouse or the keyboard arrows to move the splitter bars.  When you are finished, press the mouse button or enter to le ave the splitter bars in their new location.  Pressing escape keeps the splitter bars in their original location.  << In a single document interface application, this command will appear on the View menu. >>\page }{\cs15\fs16\up6 #{\footnote \pard\plain  \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_ALL}}{\b\f2 1, 2, ... command (Window menu)}{\f2  \par  \par <<YourApp>> displays a list of currently open document windows at the bottom of the Window menu.  A check mark appears in front of the document name of the active window.  Choose a document from this list to make its window active.   \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_HELP_INDEX}}{\b\f2 Index command (Help menu) \par }{\f2  \par Use this command to display the opening screen of Help.  From the opening screen, you can jump to step-by-step instructions for using <<YourApp>> and various types of reference information.   \par  \par Once you open Help, you can click the Contents button whenever you want to return to the opening screen. \par  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_HELP_USING}}{\b\f2 Using Help command (Help menu) \par }{\f2  \par Use this command for instructions about using Help. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_APP_ABOUT}}{\b\f2 About command (Help menu) \par }{\f2  \par Use this command to display the copyright notice and version number of your copy of <<YourApp>>. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_CONTEXT_HELP}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Help Using Help Command}}{\b\f2 Context Help command  \par }{\f2 \{bml curhelp.bmp\} \par  \par Use the Context Help command to obtain help on some portion of <<YourApp>>.  When you choose the Toolbar's Context Help button, the mouse pointer will change to an arrow and question mark.  Then click somewhere in the <<YourApp>> window, such as another T oolbar button.  The Help topic will be shown for the item you clicked. \par  \par }{\b\f2 Shortcut \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Keys:\tab SHIFT+F1 \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_HT_CAPTION}}{\b\f2 Title Bar} \par  \par {\f2 << Show your application's title bar here. >> \par  \par }\pard\plain \s42\fi-360\li360\widctlpar\tx360 \f7\fs20 {\f2 The title bar is located along the top of a window.  It contains the name of the application and document. \par }\pard\plain \widctlpar \fs20 {\f2  \par }\pard\plain \s42\fi-360\li360\widctlpar\tx360 \f7\fs20 {\f2 To move the window, drag the title bar.  Note: You can also move dialog boxes by dragging their title bars. \par }\pard\plain \widctlpar \fs20 {\f2  \par }\pard \fi-360\li360\widctlpar\tx360 {\f2 A title bar may contain the following elements: \par }\pard\plain \s41\fi-360\li360\sb40\sa40\widctlpar\tx360 \f7\fs20 {\f2 \{bmc bullet.bmp\}\tab Application Control-menu button \par \{bmc bullet.bmp\}\tab Document Control-menu button \par \{bmc bullet.bmp\}\tab Maximize button \par \{bmc bullet.bmp\}\tab Minimize button \par \{bmc bullet.bmp\}\tab Name of the application \par \{bmc bullet.bmp\}\tab Name of the document \par \{bmc bullet.bmp\}\tab Restore button \par }\pard\plain \sl240\slmult0\widctlpar \fs20 {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 #} scrollbars}}{\f2  }{\b\f2 Scroll bars}{\f2  \par  \par Displayed at the right and bottom edges of the document window.  The scroll boxes inside the scroll bars indicate your vertical and horizontal location in the document.  You can use the mouse to scroll to other parts of the document. \par  \par << Describe the actions of the various parts of the scrollbar, according to how they behave in your application. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_SIZE}}{\b\f2 Size command (System menu)} \par  \par {\f2 Use this command to display a four-headed arrow so you can size the active window with the arrow keys. \par \{bml curarw4.bmp\} \par  \par After the pointer changes to the four-headed arrow: \par }\pard \fi-360\li360\sb60\sl240\slmult0\widctlpar {\f2 1.\tab Press one of the DIRECTION keys (left, right, up, or down arrow key) to move the pointer to the border you want to move.   \par 2.\tab Press a DIRECTION key to move the border. \par 3.\tab Press ENTER when the window is the size you want. \par }\pard \sl240\slmult0\widctlpar {\f2  \par Note:  This command is unavailable if you maximize the window. \par } \par {\b\f2 Shortcut}{\b  \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Mouse:\tab Drag the size bars at the corners or edges of the window. \par }\pard \li360\sl240\slmult0\widctlpar {\f2  \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_MOVE}}{\b\f2 Move command (Control menu) \par }{\f2  \par Use this command to display a four-headed arrow so you can move the active window or dialog box with the arrow keys. \par \{bmc curarw4.bmp\} \par  \par Note:  This command is unavailable if you maximize the window. \par  \par }{\b\f2 Shortcut \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Keys:\tab CTRL+F7 \par  \par }\pard \sl240\slmult0\widctlpar\tx1440 {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_MINIMIZE}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} System Minimize Command} }{\b\f2 Minimize command (application Control menu) \par }\pard \sl240\slmult0\widctlpar {\f2  \par Use this command to reduce the <<YourApp>> window to an icon. \par }\pard \fi-360\li360\sl240\slmult0\widctlpar {\b  \par }{\b\f2 Shortcut}{\f2  \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Mouse:\tab Click the minimize icon \{bmc scmin.bmp\} on the title bar. \par Keys:\tab ALT+F9 \par }\pard \fi-360\li1080\sl240\slmult0\widctlpar  \par \pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_MAXIMIZE}}{\b\f2 Maximize command (System menu) \par }{\f2  \par Use this command to enlarge the active window to fill the available space. \par }\pard \fi-360\li360\sl240\slmult0\widctlpar {\b\f2  \par Shortcut}{\f2  \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Mouse:\tab Click the maximize icon \{bmc scmax.bmp\} on the title bar; or double-click the title bar. \par Keys:\tab CTRL+F10 enlarges a document window. \par }\pard \fi-360\li1080\sl240\slmult0\widctlpar  \par \pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_NEXTWINDOW}}{\b\f2 Next Window command (document Control menu) \par }{\f2  \par Use this command to switch to the next open document window.  <<YourApp>> determines which window is next according to the order in which you opened the windows. \par  \par }{\b\f2 Shortcut \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Keys:\tab CTRL+F6 \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_PREVWINDOW}}{\b\f2 Previous Window command (document Control menu) \par }{\f2  \par Use this command to switch to the previous open document window.  <<YourApp>> determines which window is previous according to the order in which you opened the windows. \par  \par }{\b\f2 Shortcut \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Keys:\tab SHIFT+CTRL+F6 \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_CLOSE}}{\b\f2 Close command (Control menus) \par }{\f2  \par Use this command to close the active window or dialog box. \par  \par Double-clicking a Control-menu box is the same as choosing the Close command. \par \{bml appexit.bmp\} \par  \par Note:  If you have multiple windows open for a single document, the Close command on the document Control menu closes only one window at a time.  You can close all windows at once with the Close command on the File menu. \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Keys: \tab CTRL+F4 closes a document window \par \tab ALT+F4 closes the <<YourType>> window or dialog box \par }\pard \sl240\slmult0\widctlpar {\f2 \tab \tab \tab \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_RESTORE}}{\b\f2 Restore command (Control menu) \par }{\f2  \par Use this command to return the active window to its size and position before you chose the Maximize or Minimize command. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_TASKLIST}}{\b\f2 Switch to command (application Control menu) \par }{\f2  \par Use this command to display a list of all open applications.  Use this "Task List" to switch to or close an application on the list. \par  \par }{\b\f2 Shortcut \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Keys:\tab CTRL+ESC \par }\pard \sl240\slmult0\widctlpar {\f2  \par }{\b\f2 Dialog Box Options \par }{\f2 When you choose the Switch To command, you will be presented with a dialog box with the following options: \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Task List \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Select the application you want to switch to or close. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Switch To \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Makes the selected application active. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 End Task \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Closes the selected application. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Cancel \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Closes the Task List box. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Cascade \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Arranges open applications so they overlap and you can see each title bar.  This option does not affect applications reduced to icons. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Tile \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Arranges open applications into windows that do not overlap.  This option does not affect applications reduced to icons. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Arrange Icons \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Arranges the icons of all minimized applications across the bottom of the screen. \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_VIEW_RULER}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} View Ruler Command}}{\b\f2  Ruler command (View menu) \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_FONT}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Choose Font Dialog}}{\b\f2 Choose Font dialog box \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_COLOR}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Choose Color Dialog}}{\b\f2 Choose Color dialog box \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_FIND}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Edit Find Command}}{\b\f2 Find command (Edit menu) \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_FIND}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Find Dialog}}{\b\f2 Find dialog box \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_REPLACE}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Edit Replace Command}}{\b\f2 Replace command (Edit menu) \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_REPLACE}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Replace Dialog}}{\b\f2 Replace dialog box \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_REPEAT}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Edit Repeat Command}}{\b\f2 Repeat command (Edit menu) \par  \par }{\f2 Use this command to repeat the last editing command carried out.  The Repeat menu item changes to Can't Repeat if you cannot repeat your last action. \par  \par }{\b\f2 Shortcut \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Key:\tab F4 \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_CLEAR}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Edit Clear Command}}{\b\f2 Clear command (Edit menu) \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_CLEAR_ALL}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Edit Clear All}}{\b\f2 Clear All command (Edit menu) \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_NEXT_PANE}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Next Pane Command}}{\b\f2 Next Pane \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_PREV_PANE}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Prev Pane Command}}{\b\f2 Prev Pane \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HIDR_DOC1TYPE}}{\b\f2 Modifying the Document \par }{\f2  \par << Write application-specific help here that provides an overview of how the user should modify a document using your application.   \par  \par If your application supports multiple document types and you want to have a distinct help topic for each, then use the help context i.d. generated by running the MAKEHELP.BAT file produced by AppWizard.  Alternatively, run MAKEHM as follows: \par  \par \tab makehm IDR_HIDR_,0x2000 resource.h \par  \par If the IDR_ symbol for one of your document types is, for example, IDR_CHARTTYPE, then the help context i.d. generated by MAKEHM will be HIDR_CHARTTYPE. \par  \par Note, AppWizard defines the HIDR_DOC1TYPE help context i.d. used by this help topic for the first document type supported by your appl ication.  AppWizard produces an alias in the .HPJ file for your application, mapping HIDR_DOC1TYPE to the HIDR_ produced by MAKEHM for that document type. >> \par  \par \page  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_HT_NOWHERE}}{\b\f2 No Help Available} \par  \par {\f2 No help is available for this area of the window. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDP_default \par }}{\f2  }{\b\f2 No Help Available \par } \par {\f2 No help is available for this message box. \par } \par {\f2 << If you wish to author help specific  to each message box prompt, then remove the AFX_HIDP_xxx values from the [ALIAS] section of your .HPJ file, and author a topic for each AFX_HIDP_xxx value.  For example, AFX_HIDP_INVALID_FILENAME is the help topic for the Invalid Filename message box. >> \par  \par }\pard \widctlpar  \par }
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ProjBld\core\bin\src\mfcawex2\hlp\AfxPrint.rtf ===
{\rtf1\ansi \deff0\deflang1024{\fonttbl{\f0\froman Times New Roman;}{\f1\froman Symbol;}{\f2\fswiss Arial;}{\f3\froman Tms Rmn;}{\f4\fswiss Helv;}{\f5\fswiss Helvetica;}{\f6\fswiss MS Sans Serif;}} {\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue127;\red0\green127\blue127;\red0\green127\blue0; \red127\green0\blue127;\red127\green0\blue0;\red127\green127\blue0;\red127\green127\blue127;\red192\green192\blue192;}{\stylesheet{\s244 \f3\fs16\up6\lang1033 \sbasedon0\snext0 footnote reference;}{\s245 \f3\fs20\lang1033  \sbasedon0\snext245 footnote text;}{\s246\li720 \i\f3\fs20\lang1033 \sbasedon0\snext255 heading 9;}{\s247\li720 \i\f3\fs20\lang1033 \sbasedon0\snext255 heading 8;}{\s248\li720 \i\f3\fs20\lang1033 \sbasedon0\snext255 heading 7;}{\s249\li720  \f3\fs20\ul\lang1033 \sbasedon0\snext255 heading 6;}{\s250\li720 \b\f3\fs20\lang1033 \sbasedon0\snext255 heading 5;}{\s251\li360 \f3\ul\lang1033 \sbasedon0\snext255 heading 4;}{\s252\li360 \b\f3\lang1033 \sbasedon0\snext255 heading 3;}{\s253\sb120  \b\f4\lang1033 \sbasedon0\snext0 heading 2;}{\s254\sb240 \b\f4\ul\lang1033 \sbasedon0\snext0 heading 1;}{\s255\li720 \f3\fs20\lang1033 \sbasedon0\snext255 Normal Indent;}{\f3\fs20\lang1033 \snext0 Normal;}{\s2\fi-240\li480\sb80\tx480 \f5\lang1033  \sbasedon0\snext2 nscba;}{\s3\fi-240\li240\sa20 \f5\lang1033 \sbasedon0\snext3 j;}{\s4\li480\sa20 \f5\lang1033 \sbasedon0\snext4 ij;}{\s5\sb80\sa20 \f5\lang1033 \sbasedon0\snext5 btb;}{\s6\fi-240\li2400\sb20\sa20 \f5\fs20\lang1033 \sbasedon0\snext6 ctcb;} {\s7\fi-240\li480\sa40\tx480 \f5\lang1033 \sbasedon0\snext7 ns;}{\s8\sa120 \f5\fs28\lang1033 \sbasedon0\snext8 TT;}{\s9\fi-240\li2400\sa20 \f5\lang1033 \sbasedon0\snext9 crtj;}{\s10\fi-240\li480\tx480 \f5\lang1033 \sbasedon0\snext10 nsca;}{\s11\sa20  \f5\lang1033 \sbasedon0\snext11 bt;}{\s12\li240\sb120\sa40 \f5\lang1033 \sbasedon0\snext12 Hf;}{\s13\li240\sb120\sa40 \f5\lang1033 \sbasedon0\snext13 Hs;}{\s14\li480\sb120\sa40 \f5\lang1033 \sbasedon0\snext14 RT;}{\s15\fi-2160\li2160\sb240\sa80\tx2160  \f5\lang1033 \sbasedon0\snext15 c;}{\s16\li2160\sa20 \f5\lang1033 \sbasedon0\snext16 ct;}{\s17\li240\sa20 \f5\lang1033 \sbasedon0\snext17 it;}{\s18\li480 \f5\fs20\lang1033 \sbasedon0\snext18 nsct;}{\s19\fi-160\li400\sb80\sa40 \f5\lang1033  \sbasedon0\snext19 nscb;}{\s20\fi-2640\li2880\sb120\sa40\brdrb\brdrs\brdrw15 \brdrbtw\brdrs\brdrw15 \tx2880 \f5\lang1033 \sbasedon0\snext20 HC2;}{\s21\fi-2640\li2880\sb120\sa20\tx2880 \f5\lang1033 \sbasedon0\snext21 C2;}{\s22\fi-240\li2400\sa20  \f5\fs20\lang1033 \sbasedon0\snext22 ctc;}{\s23\li2160\sb160 \f5\lang1033 \sbasedon0\snext23 crt;}{\s24\li480\sb20\sa40 \f5\lang1033 \sbasedon0\snext24 or;}{\s25\fi-259\li360\sb40\sa40\tx360 \f6\fs20\lang1033 \sbasedon0\snext25 Ln1;}{\s26\li115\sb80\sa80  \f6\fs20\lang1033 \sbasedon0\snext0 *Intro;}{\s27\li115\sb80\sa80\keepn \b\f6\lang1033 \sbasedon252\snext26 *Title;}{\s28\fi-245\li360\sb80 \f6\fs20\lang1033 \snext28 *Jl;}{\s29\li360\sb40\sa40 \f6\fs20\lang1033 \snext0 Lp1;}{ \s30\fi-1800\li1915\sb60\sl-240\tx1915 \f6\fs20\lang1033 \sbasedon0\snext30 Tph;}{\s31\li115\sb120\sa80 \b\f6\fs20\lang1033 \snext25 Proch;}}{\info{\title AFXPRINT}{\subject MFC Print RTF Help}{\author AFX}{\creatim\yr1992\mo10\dy7\hr12\min33}{\version1} {\edmins46}{\nofpages1}{\nofwords65536}{\nofchars65536}{\vern16433}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0 \widowctrl\ftnbj \sectd \linex0\endnhere \pard\plain \sl240 \f3\fs20\lang1033 {\f4 \page }{\f4 #{\footnote  \pard\plain \sl240 \f3\fs20\lang1033 # HID_FILE_PRINT}}{\fs16\up6 K{\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 K} printing and print preview}}{\f4  }{\fs16\up6 ${\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 $} File Print command} }{\f4  }{\b\f4 Print command (File menu)}{\b\f4  \par }{\f4  \par }{\f4 Use this command to print a document.   This command presents a }{\f4\uldb Print dialog box}{\v AFX_HIDD_PRINT}{\f4  , where you may specify the range of pages to be printed, the number of copies, the destination printer, and other printer setup options.}{\b\f4  \par }{\b\f4  \par }{\b\f4 Shortcuts}{\b\f4  \par }\pard \fi-1080\li1440\sl240\tx1440 {\f4 Toolbar:}{\f4 \tab }{\f4 \{}{\f4 bmc }{\f4 fileprnt.bmp}{\f4 \}}{\f4  \par }{\f4 Keys:}{\f4 \tab }{\f4 CTRL+P}{\f4  \par }\pard \sl240 {\f4  \par }{\f4 \page }{\f4 #{\footnote \pard\plain \sl240 \f3\fs20\lang1033 # AFX_HIDD_PRINT}}{\b\f4 Print }{\b\f4 dialog box}{\b\f4  \par }{\f4  \par }{\f4 The following options allow you to specify how the document should be printed:}{\f4  \par }\pard \sb60\sl240 {\b\f4 Printer}{\b\f4  \par }\pard \li360\sl240 {\f4 This is the active printer and printer connection.  Choose the Setup option to change the printer and printer connection.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Setup}{\b\f4  \par }\pard \li360\sl240 {\f4 Displays a }{\f4\uldb Print Setup dialog box}{\v AFX_HIDD_PRINTSETUP}{\f4 , so  you can select a printer and printer connection.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Print Range}{\b\f4  \par }\pard \li360\sl240 {\f4 Specify the pages you want to print:}{\f4  \par }\trowd \trgaph108\trleft402 \cellx1647\cellx8622\pard \sl240\intbl {\b\f4 All}{\b\f4 \cell }{\f4 Prints the entire document.}{\f4 \cell }\pard \intbl {\f4 \row }\trowd \trgaph108\trleft402 \cellx1647\cellx8622\pard \sl240\intbl {\b\f4 Selection}{\b\f4  \cell }{\f4 Prints the currently selected text.}{\f4 \cell }\pard \intbl {\f4 \row }\trowd \trgaph108\trleft402 \cellx1647\cellx8622\pard \sl240\intbl {\b\f4 Pages}{\b\f4 \cell }{\f4 Prints the range of pages you specify in }{\f4 the From and To boxes.}{ \f4 \cell }\pard \intbl {\f4 \row }\pard \sb60\sl240 {\b\f4 Copies}{\b\f4  \par }\pard \li360\sl240 {\f4 Specify the number of copies you want to print for the above page range.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Collate Copies}{\b\f4  \par }\pard \li360\sl240 {\f4 Prints copies in page number order, instead of separated multiple copies of each page.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Print Quality}{\b\f4  \par }\pard \li360\sl240 {\f4 Select the quality of the printing.  Generally, lower quality printing takes less time to produce.}{\f4  \par }\pard \sl240 {\f4 \page }{\f4 #{\footnote \pard\plain \sl240 \f3\fs20\lang1033 # AFX_HIDD_PRINTDLG}}{\b\f4 P}{\b\f4 rint Progress Dialog}{\b\f4  \par }{\f4  \par }{\f4 The Printing dialog box is shown during the time that <<YourApp>> is sending output to the printer.  The page number indicates the progre}{\f4 ss of the printing.}{\f4  \par }{\f4  \par }{\f4 To abort printing, choose Cancel.}{\f4  \par }{\f4  \par }{\f4 \page }{\f4 #{\footnote \pard\plain \sl240 \f3\fs20\lang1033 # HID_FILE_PRINT_PREVIEW}}{\fs16\up6 K{\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 K} printing and print preview}}{\f4  }{\fs16\up6 ${\footnote \pard\plain \s245  \f3\fs20\lang1033 {\fs16\up6 $} File Print Preview command}}{\f4  }{\b\f4 Print Preview command (File menu)}{\f4  \par }{\f4  \par }{\f4 Use this command to display the active document as it would appear when printed.  When you choose this command, the main window will be replaced with a print preview window in which one or two pages will be displayed in their printed format.  The }{ \f4\uldb print preview toolbar}{\v\f4 AFX_HIDW_PREVIEW_BAR}{\f4  offers you options to view either one or two pages at a time; move back and forth through the document; zoom in and out of pages; and initiate a print job.}{\f4  \par }{\f4 \page }{\f4 #{\footnote \pard\plain \sl240 \f3\fs20\lang1033 # AFX_HIDW_PREVIEW_BAR}}{\fs16\up6 K{\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 K} printing and print preview}}{\f4  }{\fs16\up6 ${\footnote \pard\plain \s245  \f3\fs20\lang1033 {\fs16\up6 $} print preview toolbar}}{\f4  }{\b\f4 Print Preview toolbar}{\b\f4  \par }{\f4  \par }{\f4 The print preview toolbar offers you the following options:}{\f4  \par }\pard \sb60\sl240 {\b\f4 Print}{\b\f4  \par }\pard \li360\sl240 {\f4 Bring up the print dialog box, to start a print job.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Next Page}{\b\f4  \par }\pard \li360\sl240 {\f4 Preview the next printed page.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Prev Page}{\b\f4  \par }\pard \li360\sl240 {\f4 Preview the previous printed page.}{\f4  \par }\pard \sb60\sl240 {\b\f4 One Page / Two Page}{\b\f4  \par }\pard \li360\sl240 {\f4 Preview one or two printed pages at a time.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Zoom In}{\b\f4  \par }\pard \li360\sl240 {\f4 Take a closer look at the printed page.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Zoom Out}{\b\f4  \par }\pard \li360\sl240 {\f4 Take a larger look at the printed page.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Close}{\b\f4  \par }\pard \li360\sl240 {\f4 Return from print preview to the editing window.}{\f4  \par }\pard \sl240 {\f4  \par }{\f4 \page }{\f4 #{\footnote \pard\plain \sl240 \f3\fs20\lang1033 # HID_FILE_PRINT_SETUP}}{\fs16\up6 K{\footnote \pard\plain \s245 \f3\fs20\lang1033 {\fs16\up6 K} printing and print preview}}{\f4  }{\fs16\up6 ${\footnote \pard\plain \s245  \f3\fs20\lang1033 {\fs16\up6 $} File Print Setup command}}{\f4  }{\b\f4 Print Setup command (File menu)}{\b\f4  \par }{\f4  \par }{\f4 Use this command to select a printer and a printer connection.  This command presents a }{\f4\uldb Print Setup dialog box}{\v AFX_HIDD_PRINTSETUP}{\f4 , where you specify the printer and its connection.}{\b\f4  \par }{\f4 \page }{\f4 #{\footnote \pard\plain \sl240 \f3\fs20\lang1033 # AFX_HIDD_PRINTSETUP}}{\b\f4 Print}{\b\f4  Setup dialog box}{\b\f4  \par }{\f4  \par }{\f4 The following options allow you to select the destination printer and its connection.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Printer}{\b\f4  \par }\pard \li360\sl240 {\f4  Select the printer you want to use.  Choose the Default Printer; or choose the Specific Printer option and select one of the current installed printers shown in the box.  You install printers and configure ports using the Windows Control Panel. }{\f4  \par }\pard \sb60\sl240 {\b\f4 Orientation}{\b\f4  \par }\pard \li360\sl240 {\f4 Choose Portrait or Landscape.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Paper Size}{\b\f4  \par }\pard \li360\sl240 {\f4 Select the size of paper that the document is to be printed on.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Paper Source}{\b\f4  \par }\pard \li360\sl240 {\f4 Some printers offer multiple trays for different paper sources.  Specify the tray here.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Options}{\b\f4  \par }\pard \li360\sl240 {\f4 Displays a dialog box where you can make additional choices about printing, specific to the type of printer you have selected.}{\f4  \par }\pard \sb60\sl240 {\b\f4 Network...}{\b\f4  \par }\pard \li360\sl240 {\f4 Choose this button to connect to a network location, assigning it a new drive letter.}{\f4  \par }\pard \sl240 {\f4 \page }{\f4 #{\footnote \pard\plain \sl240 \f3\fs20\lang1033 # HID_FILE_PAGE_SETUP}}{\f4 ${\footnote \pard\plain \sl240 \f3\fs20\lang1033 $ File Page Setup Command}}{\b\f4 Page Setup command (File menu)}{\b\f4  \par }{\b\f4  \par }{\f4 << Write application-specific help here. >>}{\f4  \par }\pard  \par }
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ProjBld\core\bin\src\mfcawex2\hlp\AfxOleSv.rtf ===
{\rtf1\ansi \deff0\deflang1024{\fonttbl{\f0\froman Times New Roman;}{\f1\froman Symbol;}{\f2\fswiss Arial;}{\f3\fswiss Helv;}{\f4\fswiss Helvetica;}{\f5\fswiss MS Sans Serif;}}{\colortbl;\red0\green0\blue0; \red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue127;\red0\green127\blue127;\red0\green127\blue0;\red127\green0\blue127; \red127\green0\blue0;\red127\green127\blue0;\red127\green127\blue127;\red192\green192\blue192;}{\stylesheet{\s244 \fs16\up6\lang1033 \sbasedon0\snext0 footnote reference;}{\s245 \fs20\lang1033 \sbasedon0\snext245 footnote text;}{\s246\li720  \i\fs20\lang1033 \sbasedon0\snext255 heading 9;}{\s247\li720 \i\fs20\lang1033 \sbasedon0\snext255 heading 8;}{\s248\li720 \i\fs20\lang1033 \sbasedon0\snext255 heading 7;}{\s249\li720 \fs20\ul\lang1033 \sbasedon0\snext255 heading 6;}{\s250\li720  \b\fs20\lang1033 \sbasedon0\snext255 heading 5;}{\s251\li360 \ul\lang1033 \sbasedon0\snext255 heading 4;}{\s252\li360 \b\lang1033 \sbasedon0\snext255 heading 3;}{\s253\sb120 \b\f3\lang1033 \sbasedon0\snext0 heading 2;}{\s254\sb240 \b\f3\ul\lang1033  \sbasedon0\snext0 heading 1;}{\s255\li720 \fs20\lang1033 \sbasedon0\snext255 Normal Indent;}{\fs20\lang1033 \snext0 Normal;}{\s2\fi-240\li480\sb80\tx480 \f4\lang1033 \sbasedon0\snext2 nscba;}{\s3\fi-240\li240\sa20 \f4\lang1033 \sbasedon0\snext3 j;}{ \s4\li480\sa20 \f4\lang1033 \sbasedon0\snext4 ij;}{\s5\sb80\sa20 \f4\lang1033 \sbasedon0\snext5 btb;}{\s6\fi-240\li2400\sb20\sa20 \f4\fs20\lang1033 \sbasedon0\snext6 ctcb;}{\s7\fi-240\li480\sa40\tx480 \f4\lang1033 \sbasedon0\snext7 ns;}{\s8\sa120  \f4\fs28\lang1033 \sbasedon0\snext8 TT;}{\s9\fi-240\li2400\sa20 \f4\lang1033 \sbasedon0\snext9 crtj;}{\s10\fi-240\li480\tx480 \f4\lang1033 \sbasedon0\snext10 nsca;}{\s11\sa20 \f4\lang1033 \sbasedon0\snext11 bt;}{\s12\li240\sb120\sa40 \f4\lang1033  \sbasedon0\snext12 Hf;}{\s13\li240\sb120\sa40 \f4\lang1033 \sbasedon0\snext13 Hs;}{\s14\li480\sb120\sa40 \f4\lang1033 \sbasedon0\snext14 RT;}{\s15\fi-2160\li2160\sb240\sa80\tx2160 \f4\lang1033 \sbasedon0\snext15 c;}{\s16\li2160\sa20 \f4\lang1033  \sbasedon0\snext16 ct;}{\s17\li240\sa20 \f4\lang1033 \sbasedon0\snext17 it;}{\s18\li480 \f4\fs20\lang1033 \sbasedon0\snext18 nsct;}{\s19\fi-160\li400\sb80\sa40 \f4\lang1033 \sbasedon0\snext19 nscb;}{\s20\fi-2640\li2880\sb120\sa40\brdrb\brdrs\brdrw15  \brdrbtw\brdrs\brdrw15 \tx2880 \f4\lang1033 \sbasedon0\snext20 HC2;}{\s21\fi-2640\li2880\sb120\sa20\tx2880 \f4\lang1033 \sbasedon0\snext21 C2;}{\s22\fi-240\li2400\sa20 \f4\fs20\lang1033 \sbasedon0\snext22 ctc;}{\s23\li2160\sb160 \f4\lang1033  \sbasedon0\snext23 crt;}{\s24\li480\sb20\sa40 \f4\lang1033 \sbasedon0\snext24 or;}{\s25\fi-259\li360\sb40\sa40\tx360 \f5\fs20\lang1033 \sbasedon0\snext25 Ln1;}{\s26\li115\sb80\sa80 \f5\fs20\lang1033 \sbasedon0\snext0 *Intro;}{\s27\li115\sb80\sa80\keepn  \b\f5\lang1033 \sbasedon252\snext26 *Title;}{\s28\fi-245\li360\sb80 \f5\fs20\lang1033 \snext28 *Jl;}{\s29\li360\sb40\sa40 \f5\fs20\lang1033 \snext0 Lp1;}{\s30\fi-1800\li1915\sb60\sl-240\tx1915 \f5\fs20\lang1033 \sbasedon0\snext30 Tph;}{ \s31\li115\sb120\sa80 \b\f5\fs20\lang1033 \snext25 Proch;}}{\info{\author David Broman}{\operator David Broman}{\creatim\yr1993\mo11\dy4\hr18\min38}{\revtim\yr1993\mo11\dy4\hr18\min50}{\version5}{\edmins32}{\nofpages0}{\nofwords65536}{\nofchars65536} {\vern16433}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0 \widowctrl\ftnbj \sectd \linex0\endnhere \pard\plain \sl240 \fs20\lang1033 {\f3 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_FILE_UPDATE}}{\fs16\up6 ${\footnote  \pard\plain \s245 \fs20\lang1033 {\fs16\up6 $} Update command}}{\f3  }{\b\f3 Update command (File menu)}{\f3  \par }{\f3  \par }\pard {\f3 << Write a topic here that discusses the Update command. >>}{\f3  \par }\pard \sl240 {\f3 \page }{\f3 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HID_FILE_SAVE_COPY_AS}}{\fs16\up6 ${\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 $} Save Copy As... command}}{\f3  }{\b\f3 Save Copy As... command (File menu)}{\f3  \par }{\f3  \par }\pard {\f3 << Write a topic here that discusses the Save Copy As... command. >>}{\f3  \par }\pard \sl240 {\f3 \page }{\f3 #{\footnote \pard\plain \sl240 \fs20\lang1033 # AFX_HIDW_RESIZE_BAR}}{\fs16\up6 ${\footnote \pard\plain \s245 \fs20\lang1033 {\fs16\up6 $} Embedded object resize bar}}{\f3  }{\b\f3 Embedded Object Resize Bar}{\b\f3  \par }{\f3  \par }\pard {\f3 << Write a topic here that discusses the }{\f3 embedded object resize bar. >>}{\f3  \par }{\f3 \page }                         \par }
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ProjBld\core\bin\src\mfcawex2\new\hlp\AfxPrint.rtf ===
#K $ Print command (File menu) Use this command to print a document.   This command presents a Print dialog boxAFX_HIDD_PRINT, where you may specify the range of pages to be printed, the number of copies, the destination printer, and other printer setup options.Test Shortcuts Toolbar: {bmc fileprnt.bmp} Keys: CTRL+P #Print dialog box The following options allow you to specify how the document should be printed: Printer This is the active printer and printer connection.  Choose the Setup option to change the printer and printer connection. Setup Displays a Print Setup dialog boxAFX_HIDD_PRINTSETUP, so  you can select a printer and printer connection. Print Range Specify the pages you want to print: Prints the entire document. Selection Prints the currently selected text. Pages Prints the range of pages you specify in the From and To boxes. Copies Specify the number of copies you want to print for the above page range. Collate Copies Prints copies in page number order, instead of separated multiple copies of each page. Print Quality Select the quality of the printing.  Generally, lower quality printing takes less time to produce. #Print Progress Dialog The Printing dialog box is shown during the time that <<YourApp>> is sending output to the printer.  The page number indicates the progress of the printing. To abort printing, choose Cancel. #K $ Print Preview command (File menu) Use this command to display the active document as it would appear when printed.  When you choose this command, the main window will be replaced with a print preview window in which one or two pages will be displayed in their printed format.  The print preview toolbarAFX_HIDW_PREVIEW_BAR offers you options to view either one or two pages at a time; move back and forth through the document; zoom in and out of pages; and initiate a print job. #K $ Print Preview toolbar The print preview toolbar offers you the following options: Print Bring up the print dialog box, to start a print job. Next Page Preview the next printed page. Prev Page Preview the previous printed page. One Page / Two Page Preview one or two printed pages at a time. Zoom In Take a closer look at the printed page. Zoom Out Take a larger look at the printed page. Close Return from print preview to the editing window. #K $ Print Setup command (File menu) Use this command to select a printer and a printer connection.  This command presents a Print Setup dialog boxAFX_HIDD_PRINTSETUP, where you specify the printer and its connection. #Print Setup dialog box The following options allow you to select the destination printer and its connection. Printer Select the printer you want to use.  Choose the Default Printer; or choose the Specific Printer option and select one of the current installed printers shown in the box.  You install printers and configure ports using the Windows Control Panel.  Orientation Choose Portrait or Landscape. Paper Size Select the size of paper that the document is to be printed on. Paper Source Some printers offer multiple trays for different paper sources.  Specify the tray here. Options Displays a dialog box where you can make additional choices about printing, specific to the type of printer you have selected. Network... Choose this button to connect to a network location, assigning it a new drive letter. #$Page Setup command (File menu) << Write application-specific help here. >> # HID_FILE_PRINT K printing and print preview $ File Print command # AFX_HIDD_PRINT # AFX_HIDD_PRINTDLG # HID_FILE_PRINT_PREVIEW K printing and print preview $ File Print Preview command # AFX_HIDW_PREVIEW_BAR K printing and print preview $ print preview toolbar # HID_FILE_PRINT_SETUP K printing and print preview $ File Print Setup command # AFX_HIDD_PRINTSETUP # HID_FILE_PAGE_SETUP $ File Page Setup Command AFXPRINT MFC Print RTF Help Normal.dot Yefim Sigal Microsoft Word 8.0 AFXPRINT Title _PID_GUID Microsoft Word Document MSWordDoc Word.Document.8
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ProjBld\core\bin\src\mfcawex3\ReadMe.txt ===
========================================================================
       MICROSOFT FOUNDATION CLASS LIBRARY : mfcawex3
========================================================================


AppWizard has created this mfcawex3 application for you.  This application
not only demonstrates the basics of using the Microsoft Foundation classes
but is also a starting point for writing your application.

This file contains a summary of what you will find in each of the files that
make up your mfcawex3 application.

mfcawex3.h
    This is the main header file for the application.  It includes other
    project specific headers (including Resource.h) and declares the
    CMfcawex3App application class.

mfcawex3.cpp
    This is the main application source file that contains the application
    class CMfcawex3App.

mfcawex3.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
	Developer Studio.

res\mfcawex3.ico
    This is an icon file, which is used as the application's icon.  This
    icon is included by the main resource file mfcawex3.rc.

res\mfcawex3.rc2
    This file contains resources that are not edited by Microsoft 
	Developer Studio.  You should place all resources not
	editable by the resource editor in this file.

mfcawex3.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.


/////////////////////////////////////////////////////////////////////////////

AppWizard creates one dialog class:

mfcawex3Dlg.h, mfcawex3Dlg.cpp - the dialog
    These files contain your CMfcawex3Dlg class.  This class defines
    the behavior of your application's main dialog.  The dialog's
    template is in mfcawex3.rc, which can be edited in Microsoft
	Developer Studio.


/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named mfcawex3.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

If your application uses MFC in a shared DLL, and your application is 
in a language other than the operating system's current language, you
will need to copy the corresponding localized resources MFC40XXX.DLL
from the Microsoft Visual C++ CD-ROM onto the system or system32 directory,
and rename it to be MFCLOC.DLL.  ("XXX" stands for the language abbreviation.
For example, MFC40DEU.DLL contains resources translated to German.)  If you
don't do this, some of the UI elements of your application will remain in the
language of the operating system.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ProjBld\core\bin\src\mfcawexe\ReadMe.txt ===
========================================================================
       MICROSOFT FOUNDATION CLASS LIBRARY : mfcawexe
========================================================================


AppWizard has created this mfcawexe application for you.  This application
not only demonstrates the basics of using the Microsoft Foundation classes
but is also a starting point for writing your application.

This file contains a summary of what you will find in each of the files that
make up your mfcawexe application.

mfcawexe.h
    This is the main header file for the application.  It includes other
    project specific headers (including Resource.h) and declares the
    CMfcawexeApp application class.

mfcawexe.cpp
    This is the main application source file that contains the application
    class CMfcawexeApp.

mfcawexe.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
	Developer Studio.

res\mfcawexe.ico
    This is an icon file, which is used as the application's icon.  This
    icon is included by the main resource file mfcawexe.rc.

res\mfcawexe.rc2
    This file contains resources that are not edited by Microsoft 
	Developer Studio.  You should place all resources not
	editable by the resource editor in this file.

mfcawexe.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

/////////////////////////////////////////////////////////////////////////////

For the main frame window:

MainFrm.h, MainFrm.cpp
    These files contain the frame class CMainFrame, which is derived from
    CMDIFrameWnd and controls all MDI frame features.

res\Toolbar.bmp
    This bitmap file is used to create tiled images for the toolbar.
    The initial toolbar and status bar are constructed in the
    CMainFrame class.  Edit this toolbar bitmap along with the
    array in MainFrm.cpp to add more toolbar buttons.

/////////////////////////////////////////////////////////////////////////////

AppWizard creates one document type and one view:

mfcawexeDoc.h, mfcawexeDoc.cpp - the document
    These files contain your CMfcawexeDoc class.  Edit these files to
    add your special document data and to implement file saving and loading
    (via CMfcawexeDoc::Serialize).

mfcawexeView.h, mfcawexeView.cpp - the view of the document
    These files contain your CMfcawexeView class.
    CMfcawexeView objects are used to view CMfcawexeDoc objects.

res\mfcawexeDoc.ico
    This is an icon file, which is used as the icon for MDI child windows
    for the CMfcawexeDoc class.  This icon is included by the main
    resource file mfcawexe.rc.


/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named mfcawexe.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

If your application uses MFC in a shared DLL, and your application is 
in a language other than the operating system's current language, you
will need to copy the corresponding localized resources MFC40XXX.DLL
from the Microsoft Visual C++ CD-ROM onto the system or system32 directory,
and rename it to be MFCLOC.DLL.  ("XXX" stands for the language abbreviation.
For example, MFC40DEU.DLL contains resources translated to German.)  If you
don't do this, some of the UI elements of your application will remain in the
language of the operating system.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ProjBld\core\bin\src\mfcaxcw\ReadMe.txt ===
========================================================================
		ActiveX Control DLL : MFCAXCW
========================================================================

ControlWizard has created this project for your MFCAXCW ActiveX Control
DLL, which contains 1 control.

This skeleton project not only demonstrates the basics of writing an
ActiveX Control, but is also a starting point for writing the specific
features of your control.

This file contains a summary of what you will find in each of the files
that make up your MFCAXCW ActiveX Control DLL.

mfcaxcw.mak
	The Visual C++ project makefile for building your ActiveX Control.

mfcaxcw.h
	This is the main include file for the ActiveX Control DLL.  It
	includes other project-specific includes such as resource.h.

mfcaxcw.cpp
	This is the main source file that contains code for DLL initialization,
	termination and other bookkeeping.

mfcaxcw.rc
	This is a listing of the Microsoft Windows resources that the project
	uses.  This file can be directly edited with the Visual C++ resource
	editor.

mfcaxcw.def
	This file contains information about the ActiveX Control DLL that
	must be provided to run with Microsoft Windows.

mfcaxcw.clw
	This file contains information used by ClassWizard to edit existing
	classes or add new classes.  ClassWizard also uses this file to store
	information needed to generate and edit message maps and dialog data
	maps and to generate prototype member functions.

mfcaxcw.odl
	This file contains the Object Description Language source code for the
	type library of your control.

/////////////////////////////////////////////////////////////////////////////
Mfcaxcw control:

MfcaxcwCtl.h
	This file contains the declaration of the CMfcaxcwCtrl C++ class.

MfcaxcwCtl.cpp
	This file contains the implementation of the CMfcaxcwCtrl C++ class.

MfcaxcwPpg.h
	This file contains the declaration of the CMfcaxcwPropPage C++ class.

MfcaxcwPpg.cpp
	This file contains the implementation of the CMfcaxcwPropPage C++ class.

MfcaxcwCtl.bmp
	This file contains a bitmap that a container will use to represent the
	CMfcaxcwCtrl control when it appears on a tool palette.  This bitmap
	is included by the main resource file mfcaxcw.rc.

/////////////////////////////////////////////////////////////////////////////
Other standard files:

stdafx.h, stdafx.cpp
	These files are used to build a precompiled header (PCH) file
	named stdafx.pch and a precompiled types (PCT) file named stdafx.obj.

resource.h
	This is the standard header file, which defines new resource IDs.
	The Visual C++ resource editor reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

ControlWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ProjBld\Edit-n-go\Bin\appwiz.v2\readme.txt ===
========================================================================
       MICROSOFT FOUNDATION CLASS LIBRARY : DEF
========================================================================


AppWizard has created this DEF application for you.  This application
not only demonstrates the basics of using the Microsoft Foundation classes
but is also a starting point for writing your application.

This file contains a summary of what you will find in each of the files that
make up your DEF application.


DEF.MAK
    This project file is compatible with the Visual C++ development
	environment. 

    It is also compatible with the NMAKE program provided with Visual C++. 

    To build a debug version of the program from the MS-DOS prompt, type
nmake /f DEF.MAK CFG="Win32 Debug"
    or
nmake /f DEF.MAK CFG="Macintosh Debug"
    or to build a release version of the program, type
nmake /f DEF.MAK CFG="Win32 Release"
    or
nmake /f DEF.MAK CFG="Macintosh Release"

DEF.H
    This is the main header file for the application.  It includes other
    project specific headers (including RESOURCE.H) and declares the
    CDefApp application class.

DEF.CPP
    This is the main application source file that contains the application
    class CDefApp.

DEF.RC
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in the
    Visual C++ development environment.

DEF_MAC.R
    This file contains all of the Macintosh-specific resources for
    your application.  For example, it contains the SIZE resource which you
    can edit if you wish to change the memory partition size.  You can
    also edit the FREF and BNDL resources when adding new document
    types.

RES\DEF.ICO
    This is an icon file, which is used as the application's icon.  This
    icon is included by the main resource file DEF.RC.

RES\DEF.RC2
    This file contains resources that are not edited by the Visual C++
	development environment.  You should place all resources not
	editable by the resource editor in this file.


DEF.CLW
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

/////////////////////////////////////////////////////////////////////////////

For the main frame window:

mainfrm.H, mainfrm.CPP
    These files contain the frame class CMainFrame, which is derived from
    CMDIFrameWnd and controls all MDI frame features.

RES\TOOLBAR.BMP
    This bitmap file is used to create tiled images for the toolbar.
    The initial toolbar and status bar are constructed in the
    CMainFrame class.  Edit this toolbar bitmap along with the
    array in mainfrm.CPP to add more toolbar buttons.

/////////////////////////////////////////////////////////////////////////////

AppWizard creates one document type and one view:

defdoc.H, defdoc.CPP - the document
    These files contain your CDefDoc class.  Edit these files to
    add your special document data and to implement file saving and loading
    (via CDefDoc::Serialize).

defview.H, defview.CPP - the view of the document
    These files contain your CDefView class.
    CDefView objects are used to view CDefDoc objects.
    
RES\defdoc.ICO
    This is an icon file, which is used as the icon for MDI child windows
    for the CDefDoc class.  This icon is included by the main
    resource file DEF.RC.



/////////////////////////////////////////////////////////////////////////////
Other standard files:

STDAFX.H, STDAFX.CPP
    These files are used to build a precompiled header (PCH) file
    named DEF.PCH and a precompiled types file named STDAFX.OBJ.

RESOURCE.H
    This is the standard header file, which defines new resource IDs.
    Visual C++ reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ProjBld\Edit-n-go\Bin\spyxx.v4\commctrl.txt ===
------------------------------------------------------------------
class: 			BUTTONLISTBOX

styles:			BLS_NOSCROLL
				BLS_NUMBUTTONS
				BLS_VERTICAL

messages:		BL_ADDBUTTON
				BL_DELETEBUTTON
				BL_GETCARETINDEX
				BL_GETCOUNT
				BL_GETCURSEL
				BL_GETITEMDATA
				BL_GETITEMRECT
				BL_GETTEXT
				BL_GETTEXTLEN
				BL_GETTOPINDEX
				BL_INSERTBUTTON
				BL_RESETCONTENT
				BL_SETCARETINDEX
				BL_SETCURSEL
				BL_SETITEMDATA
				BL_SETTOPINDEX

				NM_CLICK
				NM_DBLCLK
				NM_KILLFOCUS
				NM_OUTOFMEMORY
				NM_RCLICK
				NM_RDBLCLK
				NM_RETURN
				NM_SETFOCUS

notifications:	BLN_CLICKED
				BLN_KILLFOCUS
				BLN_SELCANCEL
				BLN_SELCHANGE
				BLN_SETFOCUS

------------------------------------------------------------------

class:			WC_HEADER				"SysHeader32"

styles:			HDS_HORZ
				HDS_BUTTONS

messages:		HDM_GETITEMCOUNT
				HDM_INSERTITEM
				HDM_DELETEITEM
				HDM_GETITEM   
				HDM_SETITEM   
				HDM_LAYOUT    

				NM_CLICK
				NM_DBLCLK
				NM_KILLFOCUS
				NM_OUTOFMEMORY
				NM_RCLICK
				NM_RDBLCLK
				NM_RETURN
				NM_SETFOCUS

notifications:	HDN_ITEMCHANGING   
				HDN_ITEMCHANGED    
				HDN_ITEMCLICK      
				HDN_ITEMDBLCLICK   
				HDN_DIVIDERCLICK   
				HDN_DIVIDERDBLCLICK
				HDN_BEGINTRACK     
				HDN_ENDTRACK       
				HDN_TRACK          

------------------------------------------------------------------

class:			TOOLBARCLASSNAME		"ToolbarWindow32"

styles:			TBSTYLE_BUTTON
				TBSTYLE_SEP
				TBSTYLE_CHECK
				TBSTYLE_GROUP
				TBSTYLE_CHECKGROUP
				TBSTYLE_TOOLTIPS
				TBSTYLE_WRAPABLE

messages:		TB_ENABLEBUTTON
				TB_CHECKBUTTON
				TB_PRESSBUTTON
				TB_HIDEBUTTON
				TB_INDETERMINATE
				TB_ISBUTTONENABLED
				TB_ISBUTTONCHECKED
				TB_ISBUTTONPRESSED
				TB_ISBUTTONHIDDEN
				TB_ISBUTTONINDETERMINATE
				TB_SETSTATE
				TB_GETSTATE
				TB_ADDBITMAP
				TB_ADDBUTTONS
				TB_INSERTBUTTON
				TB_DELETEBUTTON
				TB_GETBUTTON
				TB_BUTTONCOUNT
				TB_COMMANDTOINDEX
				TB_SAVERESTORE
				TB_CUSTOMIZE
				TB_ADDSTRING
				TB_GETITEMRECT		
				TB_BUTTONSTRUCTSIZE	
				TB_SETBUTTONSIZE	
				TB_SETBITMAPSIZE	
				TB_AUTOSIZE		
				TB_SETBUTTONTYPE	
				TB_GETTOOLTIPS		
				TB_SETTOOLTIPS		
				TB_SETPARENT		
				TB_WRAP			

				NM_CLICK
				NM_DBLCLK
				NM_KILLFOCUS
				NM_OUTOFMEMORY
				NM_RCLICK
				NM_RDBLCLK
				NM_RETURN
				NM_SETFOCUS

notifications:	TBN_GETBUTTONINFO	
				TBN_BEGINDRAG		
				TBN_ENDDRAG		
				TBN_BEGINADJUST		
				TBN_ENDADJUST		
				TBN_RESET		
				TBN_QUERYINSERT		
				TBN_QUERYDELETE		
				TBN_TOOLBARCHANGE	
				TBN_CUSTHELP		

------------------------------------------------------------------

class:			TOOLTIPS_CLASS			"tooltips_class32"

styles:			TTS_ALWAYSTIP           
				TTS_NOPREFIX            

messages:		TTM_ACTIVATE		
				TTM_SETDELAYTIME	
				TTM_ADDTOOL		
				TTM_DELTOOL		
				TTM_NEWTOOLRECT		
				TTM_RELAYEVENT		
				TTM_GETTOOLINFO    	
				TTM_SETTOOLINFO    	
				TTM_HITTEST             
				TTM_GETTEXT             
				TTM_UPDATETIPTEXT       
				TTM_GETTOOLCOUNT        
				TTM_ENUMTOOLS           

				NM_CLICK
				NM_DBLCLK
				NM_KILLFOCUS
				NM_OUTOFMEMORY
				NM_RCLICK
				NM_RDBLCLK
				NM_RETURN
				NM_SETFOCUS

notifications:	TTN_NEEDTEXT	

------------------------------------------------------------------

class:			STATUSCLASSNAME			"msctls_statusbar32"

styles:			SBT_OWNERDRAW
				SBT_NOBORDERS
				SBT_POPOUT	 
				HBT_SPRING	 

messages:		SB_SETTEXT		
				SB_GETTEXT		
				SB_GETTEXTLENGTH	
				SB_SETPARTS		
				SB_SETBORDERS		
				SB_GETPARTS		
				SB_GETBORDERS		
				SB_SETMINHEIGHT		
				SB_SIMPLE		
				SB_GETRECT              

				NM_CLICK
				NM_DBLCLK
				NM_KILLFOCUS
				NM_OUTOFMEMORY
				NM_RCLICK
				NM_RDBLCLK
				NM_RETURN
				NM_SETFOCUS

------------------------------------------------------------------

class:			TRACKBAR_CLASS			"msctls_trackbar32"

styles:			TBS_AUTOTICKS           
				TBS_VERT                
				TBS_HORZ                
				TBS_TOP			
				TBS_BOTTOM		
				TBS_LEFT		
				TBS_RIGHT		
				TBS_BOTH		
				TBS_NOTICKS		
				TBS_ENABLESELRANGE	

messages:		TBM_GETPOS              
				TBM_GETRANGEMIN         
				TBM_GETRANGEMAX         
				TBM_GETTIC              
				TBM_SETTIC              
				TBM_SETPOS              
				TBM_SETRANGE            
				TBM_SETRANGEMIN         
				TBM_SETRANGEMAX         
				TBM_CLEARTICS           
				TBM_SETSEL              
				TBM_SETSELSTART         
				TBM_SETSELEND           
				TBM_GETPTICS            
				TBM_GETTICPOS           
				TBM_GETNUMTICS          
				TBM_GETSELSTART         
				TBM_GETSELEND  	        
				TBM_CLEARSEL  	        
				TBM_SETTICFREQ		
				TBM_SETPAGESIZE         
				TBM_GETPAGESIZE         
				TBM_SETLINESIZE         
				TBM_GETLINESIZE         
				TBM_GETTHUMBRECT        
				TBM_GETCHANNELRECT      

				NM_CLICK
				NM_DBLCLK
				NM_KILLFOCUS
				NM_OUTOFMEMORY
				NM_RCLICK
				NM_RDBLCLK
				NM_RETURN
				NM_SETFOCUS

notifications:	TB_LINEUP		
				TB_LINEDOWN		
				TB_PAGEUP		
				TB_PAGEDOWN		
				TB_THUMBPOSITION	
				TB_THUMBTRACK		
				TB_TOP			
				TB_BOTTOM		
				TB_ENDTRACK             

------------------------------------------------------------------

class:			UPDOWN_CLASS			"msctls_updown32"

styles:			UDS_WRAP		
				UDS_SETBUDDYINT		
				UDS_ALIGNRIGHT		
				UDS_ALIGNLEFT		
				UDS_AUTOBUDDY		
				UDS_ARROWKEYS		
				UDS_HORZ                
				UDS_NOTHOUSANDS		

messages:		UDM_SETRANGE		
				UDM_GETRANGE		
				UDM_SETPOS		
				UDM_GETPOS		
				UDM_SETBUDDY		
				UDM_GETBUDDY		
				UDM_SETACCEL		
				UDM_GETACCEL		
				UDM_SETBASE		
				UDM_GETBASE		
				UDM_DELTAPOS		

				NM_CLICK
				NM_DBLCLK
				NM_KILLFOCUS
				NM_OUTOFMEMORY
				NM_RCLICK
				NM_RDBLCLK
				NM_RETURN
				NM_SETFOCUS

------------------------------------------------------------------

class:			PROGRESS_CLASS			"msctls_progress32"

styles:			PBS_SHOWPERCENT		
				PBS_SHOWPOS		

messages:		PBM_SETRANGE         
				PBM_SETPOS           
				PBM_DELTAPOS         
				PBM_SETSTEP          
				PBM_STEPIT	     

				NM_CLICK
				NM_DBLCLK
				NM_KILLFOCUS
				NM_OUTOFMEMORY
				NM_RCLICK
				NM_RDBLCLK
				NM_RETURN
				NM_SETFOCUS

------------------------------------------------------------------

class:			HOTKEY_CLASS			"msctls_hotkey32"

messages:		HKM_SETHOTKEY         
				HKM_GETHOTKEY         
				HKM_SETRULES         

				NM_CLICK
				NM_DBLCLK
				NM_KILLFOCUS
				NM_OUTOFMEMORY
				NM_RCLICK
				NM_RDBLCLK
				NM_RETURN
				NM_SETFOCUS

------------------------------------------------------------------

class:			WC_LISTVIEW				"SysListView32"

styles:			LVS_ICON            
				LVS_REPORT          
				LVS_SMALLICON       
				LVS_LIST            
				LVS_TYPEMASK        
				LVS_SINGLESEL       
				LVS_SORTASCENDING   
				LVS_SORTDESCENDING  
				LVS_SHAREIMAGELISTS 
				LVS_NOLABELWRAP     
				LVS_AUTOARRANGE     
				LVS_EDITLABELS      
				LVS_NOITEMDATA      
				LVS_NOSCROLL        
				LVS_TYPESTYLEMASK   
				LVS_ALIGNTOP        
				LVS_ALIGNBOTTOM     
				LVS_ALIGNLEFT       
				LVS_ALIGNRIGHT      
				LVS_ALIGNMASK       
				LVS_OWNERDRAWFIXED  
				LVS_NOCOLUMNHEADER  
				LVS_NOSORTHEADER    

messages:		LVM_GETBKCOLOR      
				LVM_SETBKCOLOR      
				LVM_GETIMAGELIST    
				LVM_SETIMAGELIST    
				LVM_GETITEMCOUNT    
				LVM_GETITEM         
				LVM_SETITEM         
				LVM_INSERTITEM         
				LVM_DELETEITEM      
				LVM_DELETEALLITEMS  
				LVM_GETCALLBACKMASK 
				LVM_SETCALLBACKMASK 
				LVM_GETNEXTITEM     
				LVM_FINDITEM        
				LVM_GETITEMRECT     
				LVM_SETITEMPOSITION 
				LVM_GETITEMPOSITION 
				LVM_GETSTRINGWIDTH  
				LVM_HITTEST     
				LVM_ENSUREVISIBLE   
				LVM_SCROLL          
				LVM_REDRAWITEMS     
				LVM_ARRANGE         
				LVM_EDITLABEL       
				LVM_GETEDITCONTROL  
				LVM_GETCOLUMN       
				LVM_SETCOLUMN       
				LVM_INSERTCOLUMN    
				LVM_DELETECOLUMN    
				LVM_GETCOLUMNWIDTH  
				LVM_SETCOLUMNWIDTH  
				LVM_CREATEDRAGIMAGE        
				LVM_GETVIEWRECT     
				LVM_GETTEXTCOLOR      
				LVM_SETTEXTCOLOR      
				LVM_GETTEXTBKCOLOR      
				LVM_SETTEXTBKCOLOR      
				LVM_GETTOPINDEX         
				LVM_GETCOUNTPERPAGE     
				LVM_GETORIGIN           
				LVM_UPDATE     
				LVM_SETITEMSTATE                
				LVM_GETITEMSTATE                
				LVM_GETITEMTEXT                 
				LVM_SETITEMTEXT                 
				LVM_SETITEMCOUNT                 
				LVM_SORTITEMS                    

				NM_CLICK
				NM_DBLCLK
				NM_KILLFOCUS
				NM_OUTOFMEMORY
				NM_RCLICK
				NM_RDBLCLK
				NM_RETURN
				NM_SETFOCUS

notifications:	LVN_ITEMCHANGING        
				LVN_ITEMCHANGED         
				LVN_INSERTITEM          
				LVN_DELETEITEM          
				LVN_DELETEALLITEMS      
				LVN_BEGINLABELEDIT      
				LVN_ENDLABELEDIT        
				LVN_COLUMNCLICK         
				LVN_BEGINDRAG           
				LVN_ENDDRAG             
				LVN_BEGINRDRAG          
				LVN_ENDRDRAG            
				LVN_PEN                 
				LVN_GETDISPINFO         
				LVN_SETDISPINFO         
				LVN_KEYDOWN	

------------------------------------------------------------------

class:			WC_TREEVIEW				"SysTreeView32"

styles:			TVS_HASBUTTONS      
				TVS_HASLINES        
				TVS_LINESATROOT     
				TVS_EDITLABELS      
				TVS_DISABLEDRAGDROP 

messages:		TVM_INSERTITEM      
				TVM_DELETEITEM      
				TVM_EXPAND	    
				TVM_GETITEMRECT     
				TVM_GETCOUNT        
				TVM_GETINDENT       
				TVM_SETINDENT       
				TVM_GETIMAGELIST    
				TVM_SETIMAGELIST    
				TVM_GETNEXTITEM	    
				TVM_SELECTITEM      
				TVM_GETITEM         
				TVM_SETITEM         
				TVM_EDITLABEL       
				TVM_GETEDITCONTROL  
				TVM_GETVISIBLECOUNT 
				TVM_HITTEST         
				TVM_CREATEDRAGIMAGE  
				TVM_SORTCHILDREN     
				TVM_ENSUREVISIBLE    
				TVM_SORTCHILDRENCB   

				NM_CLICK
				NM_DBLCLK
				NM_KILLFOCUS
				NM_OUTOFMEMORY
				NM_RCLICK
				NM_RDBLCLK
				NM_RETURN
				NM_SETFOCUS

notifications:	TVN_SELCHANGING     
				TVN_SELCHANGED      
				TVN_GETDISPINFO     
				TVN_SETDISPINFO     
				TVN_ITEMEXPANDING   
				TVN_ITEMEXPANDED    
				TVN_BEGINDRAG       
				TVN_BEGINRDRAG      
				TVN_DELETEITEM      
				TVN_BEGINLABELEDIT  
				TVN_ENDLABELEDIT    
				TVN_KEYDOWN         

------------------------------------------------------------------

class:			WC_TABCONTROL			"SysTabControl32"

styles:			TCS_FORCEICONLEFT       
				TCS_FORCELABELLEFT      
				TCS_SHAREIMAGELISTS     
				TCS_TABS		
				TCS_BUTTONS		
				TCS_SINGLELINE		
				TCS_MULTILINE		
				TCS_RIGHTJUSTIFY	
				TCS_FIXEDWIDTH		
				TCS_RAGGEDRIGHT		
				TCS_FOCUSONBUTTONDOWN   
				TCS_OWNERDRAWFIXED      
				TCS_TOOLTIPS            
				TCS_FOCUSNEVER          

messages:		TCM_GETBKCOLOR      
				TCM_SETBKCOLOR      
				TCM_GETIMAGELIST    
				TCM_SETIMAGELIST    
				TCM_GETITEMCOUNT    
				TCM_GETITEM         
				TCM_SETITEM         
				TCM_INSERTITEM         
				TCM_DELETEITEM      
				TCM_DELETEALLITEMS  
				TCM_GETITEMRECT     
				TCM_GETCURSEL     
				TCM_SETCURSEL     
				TCM_HITTEST     
				TCM_SETITEMEXTRA    
				TCM_GETTEXTCOLOR      
				TCM_SETTEXTCOLOR      
				TCM_GETTEXTBKCOLOR      
				TCM_SETTEXTBKCOLOR      
				TCM_ADJUSTRECT	
				TCM_SETITEMSIZE	
				TCM_REMOVEIMAGE         
				TCM_SETPADDING          
				TCM_GETROWCOUNT         
				TCM_GETTOOLTIPS		
				TCM_SETTOOLTIPS		
				TCM_GETCURFOCUS     

				NM_CLICK
				NM_DBLCLK
				NM_KILLFOCUS
				NM_OUTOFMEMORY
				NM_RCLICK
				NM_RDBLCLK
				NM_RETURN
				NM_SETFOCUS

notifications:	TCN_SELCHANGE	    
				TCN_SELCHANGING     

------------------------------------------------------------------

class:			ANIMATE_CLASS			"SysAnimate32"

styles:			ACS_CENTER          
				ACS_TRANSPARENT     
				ACS_AUTOPLAY        

messages:		ACM_OPEN    
				ACM_PLAY            
				ACM_STOP            

				NM_CLICK
				NM_DBLCLK
				NM_KILLFOCUS
				NM_OUTOFMEMORY
				NM_RCLICK
				NM_RDBLCLK
				NM_RETURN
				NM_SETFOCUS

notifications:	ACN_START   
				ACN_STOP    

------------------------------------------------------------------
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ProjBld\Sniff\Bin\ProjBld\readme.txt ===
What does ProjBld sniff do?

1. Create an application project
	- File.New.Project Workspace.Application "Hello"
	- Insert source files {hello.cpp, hello1.cpp, hello.rc}
	- Close the workspace

2. Verify build setting options
	- Open the created application in step 1
	- Set Intermidate directory to EXEInt
	- Set Output directory to EXEOut
	- Add testing.lib to additional library to link
	- Set the Options.Directories binaries to use the fake compiler tool
	- Build the project
	- Verify the result by checking the buildres.out file
	- Close the workspace

3. Verify Subprojects
	- Insert Dynamic-Linking Library "DLL" as a subproject of "Hello"
	- Insert source files for "DLL" project {dll.cpp, hello1.cpp}
	- Set the Options.Directories binaries to use the fake compiler tool
	- Build the project
	- Verify that project DLL is built first by checking the buildres.out file
	- Close the workspace

4. Verify file dependencies
	- Open the created application in step 1
	- Remove the fake compiler tool directory so the real compiler tool will be used for this test case
	- Touch hello1.h
	- Build the project
	- Verify that hello.cpp is rebuilt (by checking hello.obj timestamp)
	- Insert source file foo.cpp
	- Build the project
	- Verify that foo.pp is built
	- Touch foo.h
	- Verify that foo.cpp is rebuilt
	- Finally make sure UpdateAllDependencies works
	- Close the workspace

5. Verify custom build rules at target level
	- Open the created application in step 1
	- Add custom build rule for Win32 Release target
		BuildCommand=echo "TargetName = $(TargetName)" > .\$(OutDir)\echo.out
		OutputFile=$(OutDir)\echo.out
	- Build the project
	- Verify that echo.out file is generated.
	- Close the workspace

6. Load an external makefile - need improvement - no verification at all for this test case
	- Open an external makefile
	- Set Debug option
	- Set Build Cmd
	- Build the project
	- Close the workspace
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\ProjBld\Sniff\Bin\ProjBld\src\Hello.v4\readme.txt ===
//this is readme.txt
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\System\Sniff\Bin\dbcs.txt ===
abcdefghijklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWXYZ
        
ACEGI JLNPR TVXZ\ nqtwz @BDFH
   ͂Ђӂւ 

`abcdefghijklmnopqrstuvwxy
PQRSTUVWXO
 \ {  N Ol  S  ~\
\n\t\a\r
the end
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\Wizards\classvw\todo.txt ===
Todo: 
- Add baseline file info for whether a member definition should exist.  Make sure you can't
  jump to it.
- Handle nested classes.
- Verify a class with no members, has no members.
- Localize strings used in uiwrkspc.cpp and classview.cpp.
- Handle the case where a project currently exists.  I could make it a SubSuite 
  cleanup, but I don't know if that's the best idea.
- Remove Sleep from search for Globals node.  A one second delay was added to
  work around bug #12747
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\Wizards\components\readme.txt ===
this snap test does the following:

- creates a default mfc appwiz project
- randomly adds one of each type of component from the component gallery
- builds and verifies there were no errors

contact michma for further info.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\Wizards\Sniff\bin\aw_base\readme.txt ===
========================================================================
       MICROSOFT FOUNDATION CLASS LIBRARY : Edit
========================================================================


AppWizard has created this Edit application for you.  This application
not only demonstrates the basics of using the Microsoft Foundation classes
but is also a starting point for writing your application.

This file contains a summary of what you will find in each of the files that
make up your Edit application.

Edit.h
    This is the main header file for the application.  It includes other
    project specific headers (including Resource.h) and declares the
    CEditApp application class.

Edit.cpp
    This is the main application source file that contains the application
    class CEditApp.

Edit.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
	Developer Studio.

res\Edit.ico
    This is an icon file, which is used as the application's icon.  This
    icon is included by the main resource file Edit.rc.

res\Edit.rc2
    This file contains resources that are not edited by Microsoft 
	Developer Studio.  You should place all resources not
	editable by the resource editor in this file.

Edit.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.


/////////////////////////////////////////////////////////////////////////////

AppWizard creates one dialog class:

EditDlg.h, EditDlg.cpp - the dialog
    These files contain your CEditDlg class.  This class defines
    the behavior of your application's main dialog.  The dialog's
    template is in Edit.rc, which can be edited in Microsoft
	Developer Studio.


/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named Edit.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

If your application uses MFC in a shared DLL, and your application is 
in a language other than the operating system's current language, you
will need to copy the corresponding localized resources MFC40XXX.DLL
from the Microsoft Visual C++ CD-ROM onto the system or system32 directory,
and rename it to be MFCLOC.DLL.  ("XXX" stands for the language abbreviation.
For example, MFC40DEU.DLL contains resources translated to German.)  If you
don't do this, some of the UI elements of your application will remain in the
language of the operating system.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\Wizards\wizardsnap\custwiz\readme.txt ===
========================================================================
                    CUSTOM APPWIZARD: APWIZTES
========================================================================


AppWizard has created a APWIZTES DLL for you.  This DLL is the starting point
for writing your custom AppWizard.  It demonstrates the basics of creating a
custom AppWizard.

This file contains a summary of what you will find in each of the files that
make up your APWIZTES DLL.


APWIZTES.MAK
    This project file is compatible with the Visual C++ development
    environment.  It is also compatible with the NMAKE program provided with
    Visual C++.

    To build a debug version of the program from the MS-DOS prompt, type
    nmake /f APWIZTES.MAK CFG="Win32 Debug".

    To build a release version of the program, type
    nmake /f APWIZTES.MAK CFG="Win32 Release".

APWIZTES.CPP
    This file is the main DLL source file that contains the definition of
    DllMain().  It also exports the function GetCustomAppWizClass(), which
    returns a pointer to the one instance of this custom AppWizard's
    CCustomAppWiz-derived class.

APWIZTES.H
    This file is the main header file for the DLL.  It includes your 
    RESOURCE.H file.

APWIZTES.RC
    This file is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes all of your custom AppWizard's templates as
    custom resources of type "TEMPLATE".  These resources are pointers to the
    files in your project's TEMPLATE directory.  This file can be directly
    edited in the Visual C++ development environment.  However, you will
    probably want to edit your templates by opening the template files directly
    in the source editor rather than by editing the "TEMPLATE" resources from
    the Visual C++ resource editor.

APWIZTES.CLW
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

/////////////////////////////////////////////////////////////////////////////
Custom AppWizard Interface:

APWIZAW.H, APWIZAW.CPP - the CCustomAppWiz class
    These files contain your CCustomAppWiz-derived class,
    CApwiztesAppWiz.  This class contains virtual member functions which
    MFCAPWZ.DLL calls to initialize your custom AppWizard and to query which
    step to pop up at a given time.  This class also contains m_Dictionary,
    a CMapStringToString member variable, which maps template macro names
    to their values.

/////////////////////////////////////////////////////////////////////////////
Dialogs:

CHOOSER.H, CHOOSER.CPP - the dialog chooser
    These files contain your CDialogChooser class.  The class maintains
    pointers to each of your steps, keeps track of which step is currently
    up, and handles calls to your custom AppWizard class's member functions
    Next(...) and Back(...).

CSTM*DLG.H, CSTM*DLG.CPP - the dialog classes
    These files contain the dialog classes for all of your custom AppWizard's
    new steps.  They derive from CAppWizStepDlg and override
    CAppWizStepDlg::OnDismiss.

/////////////////////////////////////////////////////////////////////////////
Help Support:

MAKEHELP.BAT
    Use this batch file to create your custom AppWizard's Help file,
    APWIZTES.HLP.

APWIZTES.HPJ
    This file is the Help Project file used by the Help compiler to create
    your custom AppWizard's Help file.

HLP\APWIZTES.RTF
    This file contains an empty topic for each new step you generated.
    You may fill out the topics using any rich-text-format
    editor such as Microsoft Word.

/////////////////////////////////////////////////////////////////////////////
Template Files:

TEMPLATE\
    Put your template files in this directory.  Template files are stored
    in your custom AppWizard as custom resources of type "TEMPLATE", and are
    used by your custom AppWizard to determine the contents of the files it
    generates. When you add a new template file to this directory, you must
    import that file as a "TEMPLATE" custom resource into apwiztes.rc.  Be
    sure to select the "External File" checkbox on the custom resource's
    property page.

TEMPLATE\CONFIRM.INF
    In this template you should put a description of the project your
    custom AppWizard generates.  The file uses template macros to customize the
    text to reflect which options were selected by the custom AppWizard user.
    When the custom AppWizard user clicks the "Finish" button, MFCAPWZ.DLL
    parses this template and sends the output to the New Project Information
    dialog.

TEMPLATE\NEWPROJ.INF
    This template lists all of the templates other than CONFIRM.INF and
    NEWPROJ.INF which your custom AppWizard will use to generate a project.
    After MFCAPWZ.DLL parses this template, the output lists the other
    templates to be parsed and what the output files should be called.  See
    the documentation on custom AppWizards for a more complete description
    of this template and the project generation process in general.

You have also been provided with copies of the templates used by AppWizard
to generate an executable.  You are free to modify any of these templates
to customize them any way you like.  For example, you may wish to change
the source code tabbing style, or to include your company's copyright
message at the top of each source code file.  If you delete any of these
templates, AppWizard's copy of the template will automatically be used
when your custom AppWizard generates projects.

/////////////////////////////////////////////////////////////////////////////
Other Standard Files:

STDAFX.H, STDAFX.CPP
    These files are used to build a precompiled header (PCH) file
    named APWIZTES.PCH and a precompiled types file named STDAFX.OBJ.

RESOURCE.H
    This is the standard header file, which defines new resource IDs.
    Visual C++ reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Other Notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\Tests\Wizards\wizardsnap\custwiz\hlp\apwiztes.rtf ===
{\rtf1\ansi \deff0\deflang1024{\fonttbl{\f0\froman Times New Roman;}{\f1\froman Symbol;}{\f2\fswiss Arial;}{\f3\fswiss Helv;}{\f4\fswiss Helvetica;}{\f5\fswiss MS Sans Serif;}}{\colortbl;\red0\green0\blue0; \red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue127;\red0\green127\blue127;\red0\green127\blue0;\red127\green0\blue127; \red127\green0\blue0;\red127\green127\blue0;\red127\green127\blue127;\red192\green192\blue192;}{\stylesheet{\s244 \fs16\up6\lang1033 \sbasedon0\snext0 footnote reference;}{\s245 \fs20\lang1033 \sbasedon0\snext245 footnote text;}{\s246\li720  \i\fs20\lang1033 \sbasedon0\snext255 heading 9;}{\s247\li720 \i\fs20\lang1033 \sbasedon0\snext255 heading 8;}{\s248\li720 \i\fs20\lang1033 \sbasedon0\snext255 heading 7;}{\s249\li720 \fs20\ul\lang1033 \sbasedon0\snext255 heading 6;}{\s250\li720  \b\fs20\lang1033 \sbasedon0\snext255 heading 5;}{\s251\li360 \ul\lang1033 \sbasedon0\snext255 heading 4;}{\s252\li360 \b\lang1033 \sbasedon0\snext255 heading 3;}{\s253\sb120 \b\f3\lang1033 \sbasedon0\snext0 heading 2;}{\s254\sb240 \b\f3\ul\lang1033  \sbasedon0\snext0 heading 1;}{\s255\li720 \fs20\lang1033 \sbasedon0\snext255 Normal Indent;}{\fs20\lang1033 \snext0 Normal;}{\s2\fi-240\li480\sb80\tx480 \f4\lang1033 \sbasedon0\snext2 nscba;}{\s3\fi-240\li240\sa20 \f4\lang1033 \sbasedon0\snext3 j;}{ \s4\li480\sa20 \f4\lang1033 \sbasedon0\snext4 ij;}{\s5\sb80\sa20 \f4\lang1033 \sbasedon0\snext5 btb;}{\s6\fi-240\li2400\sb20\sa20 \f4\fs20\lang1033 \sbasedon0\snext6 ctcb;}{\s7\fi-240\li480\sa40\tx480 \f4\lang1033 \sbasedon0\snext7 ns;}{\s8\sa120  \f4\fs28\lang1033 \sbasedon0\snext8 TT;}{\s9\fi-240\li2400\sa20 \f4\lang1033 \sbasedon0\snext9 crtj;}{\s10\fi-240\li480\tx480 \f4\lang1033 \sbasedon0\snext10 nsca;}{\s11\sa20 \f4\lang1033 \sbasedon0\snext11 bt;}{\s12\li240\sb120\sa40 \f4\lang1033  \sbasedon0\snext12 Hf;}{\s13\li240\sb120\sa40 \f4\lang1033 \sbasedon0\snext13 Hs;}{\s14\li480\sb120\sa40 \f4\lang1033 \sbasedon0\snext14 RT;}{\s15\fi-2160\li2160\sb240\sa80\tx2160 \f4\lang1033 \sbasedon0\snext15 c;}{\s16\li2160\sa20 \f4\lang1033  \sbasedon0\snext16 ct;}{\s17\li240\sa20 \f4\lang1033 \sbasedon0\snext17 it;}{\s18\li480 \f4\fs20\lang1033 \sbasedon0\snext18 nsct;}{\s19\fi-160\li400\sb80\sa40 \f4\lang1033 \sbasedon0\snext19 nscb;}{\s20\fi-2640\li2880\sb120\sa40\brdrb\brdrs\brdrw15  \brdrbtw\brdrs\brdrw15 \tx2880 \f4\lang1033 \sbasedon0\snext20 HC2;}{\s21\fi-2640\li2880\sb120\sa20\tx2880 \f4\lang1033 \sbasedon0\snext21 C2;}{\s22\fi-240\li2400\sa20 \f4\fs20\lang1033 \sbasedon0\snext22 ctc;}{\s23\li2160\sb160 \f4\lang1033  \sbasedon0\snext23 crt;}{\s24\li480\sb20\sa40 \f4\lang1033 \sbasedon0\snext24 or;}{\s25\fi-259\li360\sb40\sa40\tx360 \f5\fs20\lang1033 \sbasedon0\snext25 Ln1;}{\s26\li115\sb80\sa80 \f5\fs20\lang1033 \sbasedon0\snext0 *Intro;}{\s27\li115\sb80\sa80\keepn  \b\f5\lang1033 \sbasedon252\snext26 *Title;}{\s28\fi-245\li360\sb80 \f5\fs20\lang1033 \snext28 *Jl;}{\s29\li360\sb40\sa40 \f5\fs20\lang1033 \snext0 Lp1;}{\s30\fi-1800\li1915\sb60\sl-240\tx1915 \f5\fs20\lang1033 \sbasedon0\snext30 Tph;}{ \s31\li115\sb120\sa80 \b\f5\fs20\lang1033 \snext25 Proch;}}{\info{\author David Broman}{\operator David Broman}{\creatim\yr1993\mo11\dy4\hr18\min38}{\revtim\yr1993\mo11\dy4\hr18\min50}{\version5}{\edmins78}{\nofpages0}{\nofwords65536}{\nofchars65536} {\vern16433}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0 \widowctrl\ftnbj \sectd \linex0\endnhere \pard\plain \sl240 \fs20\lang1033 {\f3 #{\footnote \pard\plain \sl240 \fs20\lang1033 # HIDD_CUSTOM1}}{\fs16\up6  }{\plain  \b\f3\up6\lang1033 Custom D}{\plain \b\f3\up6\lang1033 i}{\plain \b\f3\up6\lang1033 alog 1}{\f3  \par }\pard {\f3 << Write a topic here that discusses your custom AppWizard's step 1>>}{\f3  \par }{\f3 \page } \par }
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\xtests\debugger\bin\core\src\tmplates\bug1.txt ===
#include <iostream>
#include <string>
#include <vector>

using namespace std;

#pragma warning (disable : 4786 )

typedef vector<string> VectorOfStrings;

static int parse_args( VectorOfStrings &Args, const string &ArgString);

void main(void)
{
	VectorOfStrings vs;
	string s("Tst1213 4 1");
	size_t counter;

	parse_args( vs, s );

	for( counter=0; counter<vs.size(); counter++)
	{
		cout << "Arg" << counter << " = " << vs[counter] << endl;
	}

}

static int parse_args( VectorOfStrings &Args, const string &ArgString)
{
	// contents removed...
	return 0;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\cafe6\xtests\debugger\bin\core\src\tmplates\watch.txt ===
+	TemplateObject._Tr																		{...}
+	TemplateObject																			{...}
	TemplateObject._Tr.allocator															{...}
+	TemplateObject._Tr.key_compare															{...}
	TemplateObject._Tr.key_compare.std::binary_function<unsigned long, unsigned long, bool>	{...}
+	TemplateObject._Tr._Head																0x00000000
	TemplateObject._Tr._Head->_Left															CXX0030: Error: expression cannot be evaluated
	TemplateObject._Tr._Head->_Parent														CXX0030: Error: expression cannot be evaluated
	TemplateObject._Tr._Head->_Right														CXX0030: Error: expression cannot be evaluated
+	TemplateObject._Tr._Head->_Value														{...}
	TemplateObject._Tr._Head->_Value.first													CXX0030: Error: expression cannot be evaluated
+	TemplateObject._Tr._Head->_Value.second													{...}
	TemplateObject._Tr._Head->_Value.second.m_Type											CXX0030: Error: expression cannot be evaluated
	TemplateObject._Tr._Head->_Color														CXX0030: Error: expression cannot be evaluated
	TemplateObject._Tr._Multi																0 ''
	TemplateObject._Tr._Size																0
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktest\VTRuntime\readme.txt ===
To setup Visual Test 6.5 support on your box without requiring a full install of Visual Test 6.5.

1. Run runtime.exe
2. Run VTAddons.exe
3. Run vt6.reg
4. Reboot box for settings to properly install


If your test code has include files (*.inc), you will need to copy them to the

	"c:\program files\VT_RUN\Include"

directory in order for Visual Test engine to find them.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktools\Producer\buildnum.txt ===
This is the main build number text file for all .rc files.


Build Number: 2616


The next build number will be at least 2617.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktools\Producer\DirectMusic Producer eula.rtf ===
This software is subject to the terms and conditions of the Microsoft License and NonDisclosure Agreement for Microsoft DirectX 8.0 Pre-Release Code, a copy of which is provided below for your convenience.  If you have not signed a Microsoft License and NonDisclosure Agreement for this software, you are not authorized to install, copy or otherwise use this software.  MICROSOFT CORPORATION NON-DISCLOSURE AGREEMENT (PRE-RELEASE VERSION OF DIRECTX SDK 8.0 ) This is a legal agreement between you, either an individual or an entity ( Recipient ), and Microsoft Corporation ( Microsoft ).  If you do not agree to the terms of this Agreement, promptly return this CD-ROM and the accompanying items, including written materials and binders or other containers, (collectively the  Software ) to Microsoft.  GRANT OF LICENSE. Microsoft grants to Recipient a limited, non-exclusive, nontransferable, royalty-free license to make and use up to three (3) copies of the executable code of the Software CPUs located on Recipient s premises at the address provided below, only for the purpose of developing and testing prerelease versions of computer software applications, and to provide feedback thereon to Microsoft.  Recipient must acquire the final commercial release of the DirectX in order to develop and distribute versions of Recipient s computer software applications which operate with the final commercial release of DirectX.  Development and distribution of such computer software applications shall be governed by the license agreement accompanying the final commercial release of the DirectX.  Recipient  acknowledges that Microsoft will not be obligated to make the Software available as a final commercial product. All other rights are reserved to Microsoft.  Recipient shall not rent, lease, sell, sublicense, assign, or otherwise transfer the Software, including any accompanying printed materials.  Recipient shall not reverse engineer, decompile or disassemble the Software except to the extent that this restriction is expressly prohibited by applicable law.  Microsoft and its suppliers shall retain title and all ownership rights to the Software. Recipient agrees to provide reasonable feedback to Microsoft, including but not limited to usability, bug reports, and test results, with respect to the Software testing.  Recipient will use reasonable efforts to review and comment on all documentation supplied. All bug reports, test results, and other feedback made by Recipient shall be the property of Microsoft and may be used by Microsoft for any purpose.  Due to the nature of the development work, Microsoft is not certain as to when errors or discrepancies in the Software may be corrected. Recipient may disclose the Software only to its employees who have a need to know in order to accomplish the purposes identified in Section 1(a) and such employees  use of the Software shall take place solely at Recipient s site.  Recipient will have executed appropriate written agreements with its employees sufficient to enable it to comply with the terms of this Agreement.  Recipient agrees that, for a period of up to six (6) months after commercial release of the Software, it will maintain a list of all employees who have had access hereunder to the Software or related information. TERM OF AGREEMENT.  The term of this Agreement shall commence on Recipient s installation of the Software and shall continue until terminated by Microsoft in writing at any time, with or without cause.  This Agreement will terminate without notice upon the commercial release of the Software.  Upon the termination of this Agreement, Recipient shall promptly return to Microsoft, or certify destruction of, all full or partial copies of the Software and related materials provided my Microsoft. Section 5 shall survive termination or expiration of this Agreement with respect to any information that has not been made public by Microsoft as of the commercial release of the Software. COST OF TESTING. There is no charge to Recipient for testing of the Software. Microsoft shall bear all transportation expenses relating to the shipment of the Software to the Recipient s place of business and Recipient will pay any return transportation expenses. PRODUCT MAINTENANCE.   Microsoft is not obligated to provide maintenance, technical support or updates to Recipient for Software licensed pursuant to this Agreement.  However, Microsoft may, in its sole discretion, provide further pre-release versions, technical support, updates and/or supplements of any Software and/or related information ( Updates ) to Recipient hereunder, in which case such Updates shall also be deemed to be included in the Software, and therefore governed by this Agreement, unless other terms of use are provided by Microsoft with such Updates. In no event shall Microsoft be obligated to provide Recipient, free of charge, a copy of the commercial release version of the Software in connection with Recipient s participation in the testing program.  Microsoft is not obligated to make any Software commercially available. CONFIDENTIALITY.  The Software and related information is proprietary and confidential information to Microsoft and its suppliers.  Recipient agrees not to disclose or provide the Software, documentation, or any related information (including the Software features or the results of use or testing) to any third party or use the Software for any purpose other than as provided in  this Agreement.  However, Recipient may disclose confidential information in accordance with judicial or other governmental order, provided Recipient shall give Microsoft reasonable written notice prior to such disclosure and shall comply with any applicable protective order or equivalent.  Further, Recipient shall not be obligated to maintain the confidentiality of information which Recipient can prove (i) is already known to Recipient without an obligation to maintain the same as confidential; (ii) becomes publicly known through no wrongful act of Recipient; (iii) is rightfully received from a third party without breach of an obligation of confidentiality owed to Microsoft; or (iv) is independently developed by Recipient.  This provision shall survive the termination or expiration of this Agreement with respect to any information that has not been made public by Microsoft as of the commercial release of the Software. INTELLECTUAL PROPERTY RIGHTS.  All title and intellectual property rights in and to the Software (including but not limited to any images, photographs, animations, video, audio, music, text and  applets  incorporated into the Software), and any copies Recipient is permitted to make herein are owned by Microsoft or its suppliers. All title and intellectual property rights in and to the content which may be accessed through use of the Software are the property of the respective content owner and may be protected by applicable copyright or other intellectual property laws and treaties. This Agreement grants Recipient no rights to use such content. If this Software contains documentation which is provided only in electronic form, Recipient may print one copy of such electronic  documentation. Recipient may not copy the printed materials accompanying the Software. All rights not expressly granted are reserved by Microsoft. DISCLAIMER OF WARRANTIES.  The Software is deemed accepted by Recipient. The Software constitutes pre-release code and may be changed substantially before commercial release. To the maximum extent permitted by applicable law, Microsoft and its suppliers provide the Software and any (if any) support services related to the Software ( Support Services ) AS IS AND WITH ALL FAULTS, and hereby disclaim all warranties and conditions, either express, implied or statutory, including, but not limited to, any (if any) implied warranties or conditions of merchantability, of fitness for a particular purpose, of lack of viruses, of accuracy or completeness of responses, of results, and of lack of negligence or lack of workmanlike effort, all with regard to the Software, and the provision of or failure to provide Support Services.  ALSO, THERE IS NO WARRANTY OR CONDITION OF TITLE, QUIET ENJOYMENT, QUIET POSSESSION, CORRESPONDENCE TO DESCRIPTION OR NON-INFRINGEMENT, WITH REGARD TO THE SOFTWARE.  The entire risk as to the quality of or arising out of use or performance of the Software and documentation remains with Recipient. EXCLUSION OF INCIDENTAL, CONSEQUENTIAL AND CERTAIN OTHER DAMAGES.  To the maximum extent permitted by applicable law, in no event shall Microsoft or its suppliers be liable for any special, incidental, indirect, or consequential damages whatsoever (including, but not limited to, damages for loss of profits or confidential or other information, for business interruption, for personal injury, for loss of privacy, for failure to meet any duty including of good faith or of reasonable care, for negligence, and for any other pecuniary or other loss whatsoever) arising out of or in any way related to the use of or inability to use the Software, the provision of or failure to provide Support Services, or otherwise under or in connection with any provision of Agreement, even in the event of the fault, tort (including negligence), strict liability, breach of contract or breach of warranty of Microsoft or any supplier, and even if Microsoft or any supplier has been advised of the possibility of such damages.  Because some states/jurisdictions do not allow the exclusion or limitation of liability for consequential or incidental damages, the above limitation may not apply to Recipient. LIMITATION OF LIABILITY AND REMEDIES.  Notwithstanding any damages that Recipient might incur for any reason whatsoever (including, without limitation, all damages referenced above and all direct or general damages), the entire liability of Microsoft and any of its suppliers under any provision of this Agreement and Recipient s exclusive remedy for all of the foregoing shall be limited to the greater of the amount actually paid by Recipient for the Software or Five Dollars (US$5.00).  The foregoing limitations, exclusions and disclaimers (including Section 6 and 7 above) shall apply to the maximum extent permitted by applicable law, even if any remedy fails its essential purpose. GOVERNING LAW; ATTORNEYS FEES.   This Agreement shall be construed and controlled by the laws of the State of Washington, and Recipient consents to exclusive jurisdiction and venue in the federal courts sitting in King County, Washington, unless no federal jurisdiction exists, in which case Recipient consents to exclusive jurisdiction and venue in the Superior Court of King County, Washington.  Recipient waives all defenses of lack of personal jurisdiction and forum non conveniens.  Process may be served on either party in the manner authorized by applicable law or court rule.  If either party employs attorneys to enforce any rights arising out of or relating to this Agreement, the prevailing party shall be entitled to recover its reasonable attorneys' fees, costs and other expenses. U.S. GOVERNMENT RESTRICTED RIGHTS.   This Software is provided with RESTRICTED RIGHTS.  Use, duplication, or disclosure by the Government is subject to restrictions as set forth in subparagraph (c)(1)(ii) of The Rights in Technical Data and Computer Software clause of DFARS 252.227-7013 or subparagraphs (c)(i) and (2) of the Commercial Computer Software   Restricted Rights at 48 CFR 52.227-19, as applicable.  Manufacturer is Microsoft Corporation, One Microsoft Way, Redmond, WA  98052-6399.   EXPORT RESTRICTIONS.  Recipient acknowledges that Software is of U.S.-origin.  Recipient agrees to comply with all applicable international and national laws that apply to these products, including the U.S. Export Administration Regulations, as well as end-user, end-use and country destination restrictions issued by U.S. and other governments. For additional information on exporting Microsoft products, see http://www.microsoft.com/exporting/.  RESTRICTIONS: APPLICABLE LAWS; PRIVACY.  Recipient shall comply with all applicable laws and regulations governing the use of the Software including, but not limited to, the Children s Online Privacy Protection Act ( COPPA ).  COPPA regulates the online collection of personal information from children under the age of 13.  More information on COPPA is available online at http://www.ftc.gov/bcp/conline/pubs/buspubs/coppa.htm. Should you have any questions concerning this Agreement, or if you desire to contact Microsoft for any reason, please write: Microsoft Corporation, Attn: DirectX Team, One Microsoft Way, Redmond, WA  98052-6399.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktools\Producer\lasthist.txt ===
12/14/101;2:42p
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktools\Producer\DebugRebase.txt ===
Framework\Debug\DMUSProd.exe
Conductor\Debug\Conductor.dll
DLSDesigner\Debug\DLSDesigner.ocx
DLSDesigner\ADSREnvelope\Debug\ADSREnvelope.ocx
RegionKeyboard\Debug\RegionKeyboard.ocx
CommandStripMgr\Debug\CommandStripMgr.dll
ChordStripMgr\Debug\ChordStripMgr.dll
ChordMapStripMgr\Debug\ChordMapStripMgr.dll
MIDIStripMgr\Debug\MIDIStripMgr.dll
SignPostStripMgr\Debug\SignPostStripMgr.dll
PersonalityDesigner\Debug\ChordMapDesigner.ocx
Timeline\Debug\Timeline.dll
SegmentDesigner\Debug\SegmentDesigner.ocx
LyricStripMgr\Debug\LyricStripMgr.dll
StyleRefStripMgr\Debug\StyleRefStripMgr.dll
PersRefStripMgr\Debug\ChordMapRefStripMgr.dll
BandStripMgr\Debug\BandStripMgr.dll
TempoStripMgr\Debug\TempoStripMgr.dll
SequenceStripMgr\Debug\SequenceStripMgr.dll
MuteStripMgr\Debug\MuteStripMgr.dll
TimeSigStripMgr\Debug\TimeSigStripMgr.dll
ScriptDesigner\Debug\ScriptDesigner.ocx
ScriptStripMgr\Debug\ScriptStripMgr.dll
SegmentStripMgr\Debug\SegmentStripMgr.dll
ContainerDesigner\Debug\ContainerDesigner.ocx
AudioPathDesigner\Debug\AudioPathDesigner.ocx
WaveStripMgr\Debug\WaveStripMgr.dll
MarkerStripMgr\Debug\MarkerStripMgr.dll
ToolGraphDesigner\Debug\ToolGraphDesigner.ocx
ParamStripMgr\Debug\ParamStripMgr.dll
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktools\Producer\DMUSProd.INI ===
[Custom]
Wallpaper=DMUSProd.bmp
[BarSettings-Summary]
Bars=16
ScreenCX=1024
ScreenCY=768
[BarSettings-Bar0]
BarID=59393
[BarSettings-Bar1]
BarID=59419
Bars=13
Bar#0=0
Bar#1=59392
Bar#2=59456
Bar#3=0
Bar#4=59457
Bar#5=129
Bar#6=0
Bar#7=59458
Bar#8=0
Bar#9=59459
Bar#10=0
Bar#11=59462
Bar#12=0
[BarSettings-Bar2]
BarID=59422
Bars=4
Bar#0=0
Bar#1=59460
Bar#2=59461
Bar#3=0
[BarSettings-Bar3]
BarID=59420
Bars=3
Bar#0=0
Bar#1=133
Bar#2=0
[BarSettings-Bar4]
BarID=59392
XPos=-2
YPos=-2
Docking=1
MRUDockID=0
MRUDockLeftPos=-2
MRUDockTopPos=-2
MRUDockRightPos=222
MRUDockBottomPos=30
MRUFloatStyle=8196
MRUFloatXPos=-1
MRUFloatYPos=0
[BarSettings-Bar5]
BarID=129
XPos=254
YPos=28
Docking=1
MRUDockID=59419
MRUDockLeftPos=254
MRUDockTopPos=28
MRUDockRightPos=457
MRUDockBottomPos=60
MRUFloatStyle=8196
MRUFloatXPos=-1
MRUFloatYPos=0
[BarSettings-Bar6]
BarID=133
XPos=-2
YPos=-2
Docking=1
MRUDockID=0
MRUDockLeftPos=-2
MRUDockTopPos=-2
MRUDockRightPos=157
MRUDockBottomPos=512
MRUFloatStyle=4
MRUFloatXPos=-1
MRUFloatYPos=0
[BarSettings-Bar7]
BarID=142
Visible=0
XPos=-3
YPos=-3
Docking=1
MRUDockID=0
MRUDockLeftPos=0
MRUDockTopPos=0
MRUDockRightPos=0
MRUDockBottomPos=0
MRUFloatStyle=4096
MRUFloatXPos=-1
MRUFloatYPos=0
[BarSettings-Bar8]
BarID=59456
XPos=220
YPos=-2
Docking=1
MRUDockID=59419
MRUDockLeftPos=220
MRUDockTopPos=-2
MRUDockRightPos=627
MRUDockBottomPos=30
MRUFloatStyle=8196
MRUFloatXPos=-1
MRUFloatYPos=0
[BarSettings-Bar9]
BarID=59457
XPos=-2
YPos=28
Docking=1
MRUDockID=59419
MRUDockLeftPos=-2
MRUDockTopPos=28
MRUDockRightPos=256
MRUDockBottomPos=60
MRUFloatStyle=8196
MRUFloatXPos=-1
MRUFloatYPos=-427147919
[BarSettings-Bar10]
BarID=59458
XPos=-2
YPos=58
Docking=1
MRUDockID=0
MRUDockLeftPos=-2
MRUDockTopPos=58
MRUDockRightPos=64
MRUDockBottomPos=90
MRUFloatStyle=8196
MRUFloatXPos=-1
MRUFloatYPos=727
[BarSettings-Bar11]
BarID=59459
XPos=-2
YPos=88
Docking=1
MRUDockID=0
MRUDockLeftPos=-2
MRUDockTopPos=88
MRUDockRightPos=855
MRUDockBottomPos=120
MRUFloatStyle=8196
MRUFloatXPos=-1
MRUFloatYPos=0
[BarSettings-Bar12]
BarID=59460
XPos=-2
YPos=-2
Docking=1
MRUDockID=59422
MRUDockLeftPos=-2
MRUDockTopPos=-2
MRUDockRightPos=485
MRUDockBottomPos=30
MRUFloatStyle=8196
MRUFloatXPos=-1
MRUFloatYPos=0
[BarSettings-Bar13]
BarID=59461
XPos=483
YPos=-2
Docking=1
MRUDockID=59422
MRUDockLeftPos=483
MRUDockTopPos=-2
MRUDockRightPos=815
MRUDockBottomPos=30
MRUFloatStyle=8196
MRUFloatXPos=-1
MRUFloatYPos=0
[BarSettings-Bar14]
BarID=59462
Visible=0
XPos=-3
YPos=189
Docking=1
MRUDockID=0
MRUDockLeftPos=-3
MRUDockTopPos=189
MRUDockRightPos=232
MRUDockBottomPos=221
MRUFloatStyle=8196
MRUFloatXPos=-1
MRUFloatYPos=0
[BarSettings-Bar15]
BarID=59423
Horz=1
Floating=1
XPos=433
YPos=332
Bars=3
Bar#0=0
Bar#1=142
Bar#2=0
[ProjectTree]
DockWidth=159
DockHeight=514
FloatWidth=159
FloatHeight=299
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktools\Producer\dmusprod.txt ===
DirectMusic Producer for Xbox Beta 1

Hello and welcome to the Xbox Beta 1 release of DirectMusic Producer, the suite 
of authoring tools for DirectMusic and Xbox audio content.  This release introduces
some new Xbox-specific features not found in previous releases. Being a Beta 
release, there will be some issues and bugs to work around.  We'll apologize in 
advance.  

DirectMusic Producer for Xbox provides tools for both audio content authoring and
content auditioning on the Xbox audio hardware. It can be used solely for DLS
instrument management (triggered from an external sequencer) or for complete DirectMusic
content implementations. For details on these and other common authoring scenarios, please
visit Xbox Audio Designers Corner at https://xds.xbox.com

We hope that you will find DirectMusic to be an exciting technology to explore. DirectMusic
introduces modes of creating, playing and interacting with music that have never before
been possible.  Don't be daunted by the sheer number of ways you can approach musical
performance - most people find a few good techniques that fit their creative needs and
build from there.  Have fun!

Setup
-----
The Producer setup will automatically uninstall any existing versions of
Producer found on your machine. It's recommended that you close Producer 
before attempting to install. Producer requires the DirectX8 (or later) version of
DirectMusic, as Producer functionality is built entirely on top of DirectMusic.
(The Producer installation process will prompt you to install the DirectX8 runtime bits,
if they are not already present.)  

DirectMusic Producer also requires IE4.0 (or higher).  You can uninstall IE
after installing, as there are some system files that are required for
Producer.

DirectMusic Producer Performance 
--------------------------------
Note that Producer is generally memory-intensive because of all of the editing, display,
and undo information that is processed.  The overall authoring experience will be 
improved by having a machine with a significant amount of memory.  Note also that 
a DirectMusic runtime performance is much more efficient by comparison. You can use Xbox
Performance Monitor (provided with the Xbox Development Kit) to profile your runtime
performance on the actual Xbox console.

Demo8 Sample Content
--------------------
A project of sample content can be found on the XDK CD at 
"DMusProdX\DemoContent\dmpdemocontent.exe".  The project will install to 
"My Documents\DMUSProducer\Demo8\" on your hard drive. See Chapter 3 of the Audio Best
Practices document on Audio Designers Corner (at https://xds.xbox.com) for a discussion of
the features demonstrated in these samples that apply differently to the Xbox than the PC.

New in DirectMusic Producer for Xbox
------------------------------------
For features that make use of Xbox audio hardware, make sure your Xbox and your content
authoring PC are hooked up to the same network, or are using an Xbox System Link cable.
Your Xbox should be running the Audio Console App, supplied on the XDK recovery disk.

1. Microsoft Xbox Synthesizer
You can choose the Microsoft Xbox Synthesizer as your default synthesizer from the MIDI/
Performance Options menu (the icon that looks like a MIDI port). All note and DLS data
will be sent to an XDK running the Audio Console Application, so you can hear your content
played by the actual Xbox hardware. Note that in this mode, the DirectMusic 'performance'
is still running on your PC within DirectMusic Producer. The Xbox is only being used as a
hardware "MIDI" device, so data in wave tracks will not be played.

2. Xbox Experimenter
To physically copy data to the Xbox and hear it played by a DirectMusic performance running
on the actual hardware, use the Xbox Experimenter. You can open Xbox Experimenter from
DirectMusic Producer's "Add-Ins" menu. First enter the name of your XDK from the Xbox menu,
then choose 'Xbox > Connect'. You can then change the default directory for content to be
copied to if you wish. Now drag a segment from the project tree into the Primary Segments
or Secondary Segments frame of Experimenter. This copies the segment to the XDK, as well
as any content the segment references (which will be displayed in the 'Referenced Files'
frame). Click the small play button next to a segment to begin playing it. You can set
several options for a segment by right clicking on it. If you edit your content in
DirectMusic Producer, you should generally resynchronize it (via 'Synchronize') before
attempting to play on the Xbox.

3. "Configure Xbox Synthesizer..." menu option
You can choose to hear your content played on either the Xbox, the PC, or both
simultaneously for comparison purposes.

4. Removed PC and Unsupported Features
We have removed support for PC-specific features that do not apply to Xbox:
 Audiopaths / Parameter Control Tracks: For XSS v1.0, only standard audiopaths (stereo,
  stereo + reverb, 3D, etc.) are supported. Custom audiopath configurations (.aud) are not
  yet supported. Effects DSP programs can be authored using the XGPImage tool, separately
  shipped with your XDK. Your developer can then route your (standard) audiopath's output
  to an effects path. Realtime effects parameter manipulation should be performed by the
  developer for XSS v1.0. We intend to add realtime effects support and authoring to
  DirectMusic in a future release.

 Compression support in DLS and Wave Tracks: Support for general Windows codecs has been
  removed from DLS collection authoring and wave tracks. Only PCM and Xbox ADPCM are
  supported by the Xbox hardware. A future release will add software WMA support for
  wave tracks only.

 General MIDI/GS Instruments: Unlike Windows DirectX, Xbox does not have a hard-coded
  general MIDI DLS collection. Bands that attempt to use GM/GS instruments generate an
  error or warning on Xbox. We have now removed such instruments from menus that let you 
  set the 'patch change' for a performance channel.

 DLS Conditional Configurations: A feature designed to allow audio to scale based on the
  features available on a particular Windows machine, DLS Conditional Configurations do
  not apply to the fixed hardware of the Xbox and are therefore not supported. The
  configuration editor (in DLS Designer) is disabled, and the Conditional Configuration
  Audition Toolbar feature of DirectMusic Producer 8.0 has been removed.

Compression
-----------
 Xbox ADPCM does not support 8-bit source files.
 The DLS format is limited to mono compression only. However, waves placed in wave tracks
may use stereo Xbox ADPCM compression.

Can lead to performance problems:
---------------------------------
 Generally, it is bad practice to write script routines with large loops.  Doing so 
  could cause the routine to take a long time to execute.  If such a routine is used in 
  the script track, it could stall the performance, causing the segments playback to 
  stall or skip.  Once a routine is called, it is executed to completion - even if the 
  segment that triggered it (via a script track) is stopped.  If such a routine is called
  directly from the application, it could stall the application, preventing it from
  performing other important tasks
 Curve reset duration is longer than the curve's segment by default.  In most cases
  this will have no impact but if you have problems with reset values it's something to
  watch out for.  
 When there are tempo changes in the vicinity of a wave in a wave track (e.g., via 
  controlling segments or starting in the middle of a segment) wave playback may be
  affected if the segment is not played from the start.

Not intuitive:
--------------
 Lyrics and script error messages will not appear in the Message Window if the segment 
  playing does not have pchannel 1.  
 If any referenced segments in a segment trigger track fail to load, then the entire 
  track will fail to load (or play).  Likewise with wave tracks: if any referenced waves 
  fail to load the entire wave track will fail to load (or play).
 If wave edits are made in the Wave Editor while a segment references that wave in 
  a wave track, the wave could fall silent.  To work around this, force a redownload by
  stopping the segment and making another edit to the wave (alternately by reinitializing
  the performance by changing the sample rate of the synth).  
 Make sure to check "Super low latency" in MIDI/Performance Options before doing 
  Wave Export (in the Wave/MIDI Export Toolbar).
 Under certain circumstances recording, playback and/or cursor timing may become out of sync.
  A workaround is to change the default audiopath in the Transport Options Toolbar.
 The user can set latency for the DirectMusic synth in the MIDI/Performance Options dialog, 
  but DirectSound latency is added to this number and the combined latency is now displayed in 
  the Synth Status Toolbar.  Depending on the speed of your machine, it may take some tweaking 
  to find the point where latency is low enough for realtime input but high enough for solid 
  audio performance.  
 
Other Tips:
-----------
 You can usually switch to other music and sound applications without any
  conflicts by hitting the "toggle MIDI" button (it's in the Transport
  Options toolbar - the icon has music notes and is to the left of the MIDI 
  Options button).
 It is recommended that waves placed in DLS collections have sample rates
  between 188 Hz and 44 kHz. If a wave's sample rate happens to fall outside of
  these boundaries its pitch will be incorrect on playback on the Xbox (PC
  boundaries are different, generally a minimum of 4 kHz).
 Be very cautious when referencing files to external projects, as links can
  be easily broken (e.g., if the external project is not open at the 
  time that the referenced file is opened). 
 Watch out for MIDI files with GM or GS resets at the start of the file.
  Bands created from MIDI files are given a tick value of -1 (to start
  before the notes), and a GM/GS reset will override the band at that point.
 When two events are placed at exactly the same point in time, DirectMusic makes 
  no guarantee about which will occur first.  With this in mind, very often 
  Bands in segments should have a negative offset to ensure that the proper 
  instrument settings will occur before the note start times. By default, bands 
  inserted into segments will have a start time of -1 in relation to the beat.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktools\Producer\XboxReleaseRebase.txt ===
Framework\Xbox_Release\DMUSProd.exe
Conductor\Xbox_Release\Conductor.dll
DLSDesigner\Xbox_Release\DLSDesigner.ocx
ScriptDesigner\Xbox_Release\ScriptDesigner.ocx
AudioPathDesigner\Xbox_Release\AudioPathDesigner.ocx
XboxAddin\Release\XboxAddin.ocx
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktools\Producer\XboxDebugRebase.txt ===
Framework\Xbox_Debug\DMUSProd.exe
Conductor\Xbox_Debug\Conductor.dll
DLSDesigner\Xbox_Debug\DLSDesigner.ocx
ScriptDesigner\Xbox_Debug\ScriptDesigner.ocx
AudioPathDesigner\Xbox_Debug\AudioPathDesigner.ocx
XboxAddin\Debug\XboxAddin.ocx
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktools\Producer\3rdParty\Readme.txt ===
DirectMusic Producer DX7 SDK

This CD contains all DirectMusic Producer DX7 SDK components.
__________________________________________________________________


Contents:

- CD Layout
- Getting Started
- Compiler Support
- Building Samples

__________________________________________________________________


CD LAYOUT

The following is a brief description of the directories found on this
CD.  

\Bin
    StripWizard.awx is a custom AppWizard that may be used with
    Visual C++ 6.0.

\Doc
    IDMUSPROD.HLP contains a complete reference to the DirectMusic
    Producer APIs. 

    \Word
       - This directory contains additional documentation to be viewed
         using Microsoft Word. 

\Include
    Contains include files for building DirectMusic Producer Components
    and Strips.
 
\Lib
    Contains library files for building DirectMusic Producer Components
    and Strips.
 
\Samples
    \LyricStripMgr
       - This directory contains a sample strip manager.

    \Shared
       - This directory contains shared source files that are used
         by the sample strip manager and strip editors created using
         StripWizard.awx.

__________________________________________________________________


GETTING STARTED:
    The "How To Write ..." documents located in the \Doc\Word directory
    contain high level overviews that explain how the various Producer 
    objects fit together.  They introduce the most common Producer
    interfaces and can help guide the reader through \Doc\IDMUSPROD.HLP.
    Reading those documents in conjuction with viewing \Doc\IDMUSPROD.HLP
    would be a great way to get up to speed quickly.

    To use the Strip Wizard, copy the file \bin\StripWizard.awx to
    \Microsoft Visual Studio\Common\MSDev98\Template.  In Visual C++'s
    New Projects dialog, "Strip AppWizard" will appear.  This wizard
    may be used to create a new strip editor that is functionally
    identical to the sample LyricStripMgr, but with a different name.
    For more information refer to the "Strip Wizard Usage Guidelines"
    section located in \Doc\Word\"How To Write DirectMusic Producer
    Dx7 Strip Editors.doc"

__________________________________________________________________


COMPILER SUPPORT

C/C++
=====

The sample strip (Samples\LyricStripMgr) was created with Visual
C++ 6.0.  We have included a Visual C++ project file (.dsp) for
Visual C++ 6.0.

When installing your compiler, we recommend installing with support 
for MFC and ATL.  The sample strip utilizes MFC and ATL.  Without
these components, the sample will not compile.

__________________________________________________________________


BUILDING SAMPLES\LYRICSTRIPMGR:

The include and library paths in the sample manager must be updated
to include the location your DirectX 7.0 SDK was installed in.  The
current settings (F:\mssdk\include and F:\mssdk\lib) may not match
the location where your DirectX 7.0 SDK is installed.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktools\Producer\ReleaseRebase.txt ===
Framework\Release\DMUSProd.exe
Conductor\Release\Conductor.dll
DLSDesigner\Release\DLSDesigner.ocx
DLSDesigner\ADSREnvelope\Release\ADSREnvelope.ocx
RegionKeyboard\Release\RegionKeyboard.ocx
CommandStripMgr\ReleaseMinSize\CommandStripMgr.dll
ChordStripMgr\ReleaseMinSize\ChordStripMgr.dll
ChordMapStripMgr\ReleaseMinSize\ChordMapStripMgr.dll
MIDIStripMgr\ReleaseMinSize\MIDIStripMgr.dll
SignPostStripMgr\Release\SignPostStripMgr.dll
PersonalityDesigner\Release\ChordMapDesigner.ocx
Timeline\ReleaseMinSize\Timeline.dll
SegmentDesigner\Release\SegmentDesigner.ocx
LyricStripMgr\Release\LyricStripMgr.dll
StyleRefStripMgr\Release\StyleRefStripMgr.dll
PersRefStripMgr\Release\ChordMapRefStripMgr.dll
BandStripMgr\Release\BandStripMgr.dll
TempoStripMgr\Release\TempoStripMgr.dll
SequenceStripMgr\Release\SequenceStripMgr.dll
MuteStripMgr\ReleaseMinSize\MuteStripMgr.dll
TimeSigStripMgr\Release\TimeSigStripMgr.dll
ScriptDesigner\Release\ScriptDesigner.ocx
ScriptStripMgr\Release\ScriptStripMgr.dll
SegmentStripMgr\Release\SegmentStripMgr.dll
ContainerDesigner\Release\ContainerDesigner.ocx
AudioPathDesigner\Release\AudioPathDesigner.ocx
WaveStripMgr\Release\WaveStripMgr.dll
MarkerStripMgr\Release\MarkerStripMgr.dll
ToolGraphDesigner\Release\ToolGraphDesigner.ocx
ParamStripMgr\Release\ParamStripMgr.dll
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktools\Producer\3rdParty\doc\word\How To Write DirectMusic Producer Strip Editors.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Internal How To Write DirectMusic Producer Strip Editors Title _PID_HLINKSHow To Write DirectMusic Producer Strip Editors James Dooley Blue Ribbon Spec Document.dot James Dooley Microsoft Word 9.0@\\red-prn-11\CORP0142 Ne00: winspool \\red-prn-11\CORP0142 \\red-prn-11\CORP0142 Letter \\red-prn-11\CORP0142 LetterIDATx 'NdFe t|,O~ :eLeb |(_=+_ ~cO}k ^({eM cnXYmV UJm7T8 6%ew" :1}R6= L9?#_ ^}M=Y?X? &iYSO )PyPc ]4r$W <sED.| rO>+\ =t"Q] Uj[cZ lzoK$ ^LlDMV iUz_s/ T:){% Hcz9) H0ZaL :syJj f+yM' jQc$b ZVh$r +,_y[ Z]5p( Rp-wu VbM=" _)ItoK JE'fc IhXBzK %s~N| xM`rv <t`Zt }(r rW/9xK L|W+7 k\wyM ;&8LS bZSSe2_ 0YW/_ ~ws)o @S|c| ]bziV x7ZvJ ({nC}: Gyi&/ K;M_OsB rd[Hg 0RU|_K 3C@o8X_( G26kd Da1k  ztrk  F06kd lnv6)*CPr QQcJIUL /q`.q_" kvTCh 7y(4< 1T&e] )>+_23 M1Z#5 ^n.,5^ )M';uXI IDATj mS!f~jhA0 Naz_R :wOrm ~DDdn>. "&e>+ ~jXfrzw ,`Ve^ 7[b]Y fG5Xc4 n>[6R fGyMl }%'Ag K$N<r fG5l^G 1^SDdV;SY xM=FSD 5k)3^ <y\g"" HsIJcJ "_l>7 Hy4-r 1^SDdV&N c4Ed. 1^SDdV 5kib/Vr l-UoV 1^SDd l}Z&4^ "_l>7 Y-r)u f-j/R ->W#5 wZmI# 'rkr} YmbP( lO<:, u.B6X yk@uK H(<ZB+ q{w*} w0Rl, }a8"#' A)|IN  "W/_ -4^(U =+d n TAHC?I U .Gz5 1V,W$ n(|#B L^<qD 9/S&/ mQz>u_ cr=>Ln %i/II i!|`eI ,T;ci YMz;kHw ipdDP &j5m" `BQAqi \+V*C [d.4[.S 4d|aixt3 a9Vtb <w`wK 3cza~ 5l67P N_4g,9 T3N_4 LzYw?^VISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Masters Page-1 Rectangle Circle _VPID_PREVIEWS _PID_LINKBASEVisio (TM) Drawing  Arial) s New RoWman) Wingd gPJ?@ ,uLih 51w1M 6C?=F fkhB1 2wTR1 Rectan th text  and conn ion poi nts. Can  be stre tched to y dimen pyright   1997 V isio Cor poration .  All | s reserv Shape.h lp!#9000 V/(!@`! +@j+@6+@ H@ZXc Generi c circle  with te xt and c onnectio n points Copyrigh  1997  Visio C orporati on.  All "s rese rved. Shape .hlp!#90 2H?%M !0"rJB! W@Z_$ \@Z@c zT!@? ?8--(P O(OC1>OPO 90Y_S ux#Ru OO.aF HC``/r/ HStrip M anager B)u^?g6 Ox,_%m <ULJ/ \/v'1 @z3%@ DMUSProd Mgr1 ( ^/p/jI !?3?y U?g?y? /=oOo??so ersist] /-/?/Q/ ?/?A? _OqOK_ /\_n_K/ DMUSPr ppPage?Object SOtrip mw's} bVPV8 L`jD`[Pd jv1tp gPS2j MUSProd- &?8?J?\?n? DOVOU bL?)a 9qFuncti onBar= /%/7/ oOodTi melineEd >oPobotj 9rTpAv IDropS ource jU1CN/ E?W?i?{?, 8OJO\O +_=_m Soeowo a)q".r "4rT1 \@AquA @]qiB @iquB ?TargetM oa/s/ 9:%G:%U?g? `@%M2 qA%vB%|B A_S_e_w_ 1oCoUogo MUSPro pPageO ]ofoxo 1(#6v Strip MKan z'qqc O0utO0<W4< 5oGoYos no AOSO eO MUSProd _jkd> O&NTr R_d_2Y-?V "M_y/q_ ersist /$/6/H/ QOcOuO A<!L! <"i #Q@H"c P&c ;_MT2UR WbT"aoso geObject xp3trY StripFPB% sq@TL6 X/j/P IDMUSP  /2/D/V/ O,O>O PObOtO O@_"ou L_^_ppT/ XojoW? tionBar BFOXO. +/=/E ?%?7? O!O3OEOq E_W_i_{_ ?Qocb odTimel ineEdit ],?m/so ?'?9?K? _ _P/D_V_ IDropS ource Xe@ao S?e?Y /`/r/ $Targ #O5OGOYM 5oGow IQYQ! =R|P= IR|PI URpP]VpPa pPag?eObjec  U4N 5l 6 0: 0e;>0< p(hah egment D esigner  Piad~ *0'0f4# @z3@KA (IDMU SProdNod  /1oD/V/@ Io[o= -???Q?c?u? "O4KswLB t_R_d_ ransport <?N?`?= HGjx| R/d/v/K :No?tifyCP-?io "O4Oc T{"+_ /O_a_s_ 4OFO! D/V/h/4 Persist?Stream ^?,9U96 /_A_S_eSVP "yQV~RV o1oCoUogoyo O:o.O; DMUSP eObject 6/H/Z/l/ 2?D4ZL2 O~_`o _0_&/T_f_F/ o*oh? imelineC allbackL vQ^Cy dovo- /(/:/ \F?X?2O|? COUO= cW]n_ o(o:o odNotif  o2oDo  ?*s"?4? F?X?j?|? @H-vN N#.'d 5_G_Y_/ onductor Tempo dSeci0ary Transpor <FdFO 0of?Tofo bzepze~ gm?entEdi eline ObOject ;qh@v V&VvV i;R4P R`?f`R`Ka \rw V q:OLA, _J'Zj Zpp%c IDM?USProd, //A/S C_U_g_ {1'al,bl2b 1Kew2 @/R/. ;?M?_?q3o +O=OOOaOsO _-_?_Q_c_u_ /;oMo_d ?MOA/Gv^ iIDropTa 1?C?I O+O=O (_:_L_ MUSProd `pPageOb O-O?OQOcOuO noLo^o eWindow C!@Ud  7h#D: 6Oau0 j8Direct Music TrWack MO_OqO o,o>oPo mFMv( b*?<?N?r2 S?w6wp 4@GOYOkO r>pHrF P<.!L =E*FO: XIDir ectMusic Track ?0/rs +~$E@ Persis tStream0 _!_3_E_ q9QIQ 9RfP  ER`PMV #29`;2 *H@"H@GA ^0I@d@"d@ 5H083 p$!\b Tsz k }`%h: /@z3@ ^xIDirect MusicTra I@RM` ~D"lR xRIcH lCBqPG KO_OoIDr _#_5_Up gD"rr hD"~r bjF`zF`rF`o UbF`ZF`RF`JF`UBF`:F`2F`*:o U=wp> Page-1 Basic Visio 00  Face Rectangl Circ# visPl mentSty|# DepthE Routing@ LineT Cleara?nceX Griddc BlocOkSiz Avenue Controls AsInputs7 Jump[ t[or- PlowOn al c= p left TimesB se'10O5 9d([51 (8X82 .1@)1@ I@tI@gI@\ I@PI@DI@8I@, I@ I@ /:/L/^/bjbjU How To Write DirectMusic Producer DX8 Strip Editors This document is confidential and contains highly sensitive information about Microsoft s product development plans. This is a proprietary work owned by Microsoft Corporation, and is maintained as a trade secret. Unless provided for under an appropriate Non-Disclosure Agreement, this document may be shared only with authorized personnel at Microsoft.  Discussion or transmission of this document (as well as any associated discussions about the contents of this document) to any unauthorized Microsoft personnel is specifically prohibited.  Complying with all applicable copyright laws is the responsibility of the user.  This document is Copyright   1999  2000 Microsoft Corporation. All rights Reserved. Without limiting the rights under copyright law, no part of this document may be reproduced, stored in or introduced into a retrieval system, or transmitted in any form or by any means (electronic, mechanical, photocopying, recording, or otherwise), or for any purpose, without the express written permission of Microsoft Corporation, One Microsoft Way, Redmond, WA 98052. Microsoft may have patents or pending patent applications, trademarks, copyrights, or other intellectual property rights covering subject matter in this document.  Except as expressly provided in any written license from Microsoft, the furnishing of this document does not give you any license to these patents, trademarks,  copyrights, or other intellectual property rights. Table of Contents  Introduction Overview Segment Designer Window Active Strip and Gutter Selected Strips Time Strip and Gutter Selection Track Groups Interfaces Strip Manager Implementation Guidelines System Registry Interfacing with the Timeline Interfacing with the Segment Designer Interfacing with the DirectMusic Track Interfacing with the Property Sheet Strip Implementation Guidelines Active Strip Edit Menu Functionality Drag and Drop Functionality Drawing Strip Wizard Usage Guidelines Overview Introduction  Overview A DirectMusic segment is simply a block of time containing a collection of tracks. For more information on how segments and tracks relate, please review the topic  DirectX Audio\Using DirectX Audio\Playing Sounds\Using Segments  in the DirectX API documentation. Producer s Segment Designer Component (SegmentDesigner.ocx) manages the editing of DirectMusic segment files.  The Segment Designer displays each DirectMusic track as a  strip  in a Timeline window.  The interaction between a DirectMusic Segment and its tracks is very similar to the interaction between the Producer Segment Designer and its strip managers. Strip managers are the editor modules that edit DirectMusic tracks.  The mechanism by which they interact with the Segment Designer is relatively simple: Strip managers are COM objects, typically hosted in DLLs (i.e. BandStripMgr.dll) that load into DirectMusic Producer s process space. The Segment Designer keeps track of which strip managers edit which DirectMusic tracks via the Windows registry. Strip manager objects are created by the COM CoCreateInstance call.  Each strip manager object provides its functionality through interfaces.  Each interface can be addressed via the standard COM QueryInterface call. Each strip manager is responsible for loading and saving its RIFF data chunks to a stream.  The Segment Designer manages the process of formatting these chunks into a complete Segment file. The remainder of this document explains how to create strip managers and strips that plug into Producer s Segment Designer. Segment Designer Window When the Segment Designer window is open, each strip is hosted within a Timeline object.  The Timeline manages the display and interaction between the strips, while the Segment Designer manages the persistence of data stored within the strip managers. When creating a new Segment, an empty Timeline window is displayed.  The only strips that are visible are the  Time Strip , which divides the segment into measures and beats, and the Time Signature strip. The user adds tracks to a segment by choosing  Add Track(s)...  from the Edit menu or the right-click menu, or pressing Ctrl+Ins.  The Segment Designer looks under the key [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\DMUSProducer\StripEditors] in the system registry for registered track types and then presents their names in the  Add New Tracks  dialog box. Once a strip exists in the Segment, the user may edit it with whatever facilities the strip provides. To remove a strip from the Segment, the user clicks on its gutter (the small gray box the left of the strip) then chooses  Delete Track(s)  from the Edit menu or the right-click menu, or presses Ctrl+Del.  All strips that have their gutters selected will then be removed. Strips do not have any inherent length   the length of the segment that contains them determines their length. If, when loading a segment, the Segment Designer encounters a strip without a registered Strip Manager, the strip displays via a default  Unknown Strip  manager that simply displays the number of bytes of data in the track. Active Strip and Gutter Selected Strips The rectangular button at the far left of each strip is called a  gutter .  The gutter is displayed in different colors, depending on the state of its corresponding strip. The active strip is displayed with a yellow gutter.  The active strip is the strip currently being edited.  It receives keyboard input and should display a property page to allow editing of its data. Gutter-selected strips are displayed with red gutters.  Gutter-selected strips are used with selections in the top time strip to allow for multiple-strip cut, copy, and paste operations. A strip that is both active and gutter-selected is displayed with an orange (yellow plus red) gutter. Time Strip and Gutter Selection The time strip is always displayed at the top of the Segment Designer window.  It allows a region of time to be selected, and is most often used in conjunction with the strip gutters to accomplish multiple-strip cut, copy, and paste.  For example, click on the gutters of several strips to gutter-select the strips.  Their gutters will turn red.  Now highlight a region of time in the time strip and see how the corresponding areas in the gutter-selected strips become highlighted.  Select Edit/Copy to place a copy of the data from the selected regions in all gutter-selected strips into the clipboard. Track Groups Within a segment, each strip manager belongs to one or more track groups.  The track group setting is a 32-bit number, where each bit represents a different track group.  Track groups are used for determining where a track retrieves data that it requires (such as chord or groove information), or for determining where a track provides data (such as chord or groove information).  For example, a style track in track group 3 looks for chords on a chord track belonging to track group 3.  By using different track groups, a composer could have up to 32 simultaneous time signatures or chords. Interfaces The following diagram shows the interfaces implemented by the Segment Designer object and the Timeline object and how they relate to the strips and strip managers.  The interfaces in bold type must be implemented for basic functionality to work.  The interfaces in normal type are strongly suggested, and are necessary to allow editing from the property page.  The interfaces in italic type are useful for more advanced functionality, such as drag and drop and customizations within the function bar area. For a more detailed explanation of these interfaces please refer to the Producer API reference, which is contained in IDMUSPROD.HLP.  After opening IDMUSPROD.HLP, click the  Index  button, type  interfaces  and then hit <Enter>.  A complete listing of Producer interfaces will be displayed.    EMBED Visio.Drawing.5   Strip Manager Implementation Guidelines System Registry DLLs are required to self-register their components.  MFC or ATL may take care of OLE specific entries, but the DLL must register/unregister the DirectMusic Producer specific entries for each control in DLLRegisterServer and DLLUnregisterServer respectively. Each strip manager must register itself as follows under: [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft] [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\DMUSProducer] [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\DMUSProducer\StripEditors] [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\DMUSProducer\StripEditors\ {EE279463-B2E5-11D1-888F-00C04FBF8D15}] Lyric Track StripManager= {EE279466-B2E5-11D1-888F-00C04FBF8D15} The key name under [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\ DMUSProducer\StripEditors] is the CLSID of the DirectMusic track the strip manager edits.  The default value of that key is the name displayed in the  Add New Tracks  dialog.  The value  StripManager  is the CLSID of the strip manager object. Each strip manager also needs to register itself as follows under: [HKEY_CLASSES_ROOT\CLSID\ {EE279466-B2E5-11d1-888F-00C04FBF8D15}] LyricMgr Class [HKEY_CLASSES_ROOT\CLSID\ {EE279466-B2E5-11d1-888F-00C04FBF8D15}\InProcServer32] C:\Program Files\DirectMusic Producer\LyricStripMgr.dll ThreadingModel= Apartment These keys are typically registered automatically by MFC or ATL helper code. Interfacing with the Timeline Strip Managers and Strips A strip manager  manages  the underlying data of one or more strips. A strip is what actually displays in the Segment Designer window.  It provides the UI a composer uses to edit and access data within the track. In most cases, one strip manager controls one strip, and all editing occurs through that one strip.  For tracks that contain more than one type of data, however, it may make more sense to implement more than one strip.  For example, a sequence contains both notes and curves and the sequence strip manager provides separate strips for editing each kind of data. Typically, a strip manager creates the strip(s) it manages once, when the strip manager is created.  Alternatively, it could create a strip each time it is added to the timeline, and delete the strip when the strip manager is removed from the timeline.  If the same strip is added and removed from the timeline repeatedly, it must be re-initialized by the strip manager each time it is added to the timeline.  Otherwise, the strip may erroneously think its gutter is selected or it may not know the current start and end selection points. Adding and Removing Strip Managers from the Timeline When a strip manager is added to the timeline, the property SMP_ITIMELINECTL is set with a pointer to the timeline via a call to IDMUSProdStripMgr::SetStripMgrProperty.  The strip manager should add its strip(s) to the timeline at this point.  It should also register for any notifications it would like to receive. When a strip manager is removed from the timeline, the property SMP_ITIMELINECTL is set to NULL via a call to IDMUSProdStripMgr::SetStripMgrProperty.  The strip manager should remove its strip(s) from the timeline at this point.  It should also unregister any previously registered notifications. The following example shows how the style strip manager handles SMP_ITIMELINECTL in its SetStripMgrProperty method: HRESULT CStyleRefMgr::SetStripMgrProperty(  STRIPMGRPROPERTY stripMgrProperty, VARIANT variant) AFX_MANAGE_STATE(AfxGetStaticModuleState( )); switch( stripMgrProperty ) case SMP_ITIMELINECTL: if( variant.vt != VT_UNKNOWN ) return E_INVALIDARG; if( m_pTimeline ) // We were previously attached to a timeline, so clean up m_pTimeline->RemovePropertyPageObject( (IDMUSProdPropPageObject *)this ); if ( m_pStyleRefStrip ) m_pTimeline->RemovePropertyPageObject( (IDMUSProdPropPageObject *)m_pStyleRefStrip ); m_pTimeline->RemoveStrip((IDMUSProdStrip*)m_pStyleRefStrip); // Timeline automatically removes us from notify lists m_pTimeline->Release(); m_pTimeline = NULL; if( V_UNKNOWN( &variant ) ) if( FAILED( V_UNKNOWN( &variant )->QueryInterface( IID_IDMUSProdTimeline, (void**)&m_pTimeline ) ) ) return E_FAIL; m_pTimeline->InsertStripAtDefaultPos( (IDMUSProdStrip *)m_pStyleRefStrip, CLSID_DirectMusicStyleTrack, m_dwGroupBits, 0 ); m_pTimeline->AddToNotifyList( (IDMUSProdStripMgr *)this, GUID_Segment_AllTracksAdded, m_dwGroupBits ); m_pTimeline->AddToNotifyList( (IDMUSProdStripMgr *)this, GUID_Segment_FrameworkMsg, m_dwGroupBits ); break; return S_OK; Notifications Strip managers use notifications to notify other strip managers in the segment that some type of data has changed or that some event has occurred.  For example, when the user changes the time signature in the time signature strip, it calls IDMUSProdTimeline::NotifyStripMgrs to notify all other strips in its track group that the time signature information has changed.  This allows the other strip managers to adjust their data to account for the new time signature. Strip managers must call IDMUSProdTimeline::AddToNotifyList once for each type of each notification they are interested in receiving.  The requested notifications are sent to the strip manager s IDMUSProdStripMgr::OnUpdate method. Here is a table of the notifications sent by each of the standard strip managers in DX8: Chord GUID_ChordParam   sent when a chord is inserted, deleted, or changes GUID_ChordKey   sent when the key changes GUID_ChordSharpsFlats   send when the key changes Signpost ChordMap Reference Groove Tempo GUID_TempoParam   sent when a tempo is inserted, deleted, or changes Style Reference GUID_TimeSignature   sent when a style is inserted, deleted, or changes GUID_Segment_NewStyleSelected   sent when a style changes Sequence GUID_Sequence_Notation_Change   sent when the user changes the notation type GUID_Sequence_Quantize   sent when the user optimizes all parts Time Signature GUID_TimeSignature GUID_Segment_BandTrackChange Lyric The Segment Designer sends notifications of its own.  Here is a table of the notifications it sends: GUID_Segment_AllTracksAdded Sent when the segment editor window is opened, after all strip managers are added. Sent after the user chooses to do an Undo or Redo, after all strip managers are removed and re-added. GUID_Segment_Length_Change Sent after the user chooses to do an Undo or Redo and the length changes, after all strip managers are removed and re-added, but before GUID_Segment_AllTracksAdded is sent. Sent after the user changes the length of the segment from the segment property page. Sent after the segment s length is changes as a result of changing a time signature in the track group the segment gets its time signature from. GUID_IDirectMusicStyle Sent when the user adds a new Style track, or when the user deletes a Style track. GUID_Segment_Start Sent when the segment starts playback. GUID_Segment_Stop Sent when the segment stops playback. GUID_Segment_RecordButton Sent when the record button state is changed (up/down). GUID_Segment_FrameworkMsg Sent when the segment node receives a framework message. GUID_Segment_WindowActive Sent when the segment editor s window is activated or deactivated. GUID_TimeSignature Sent when a Style or Time Signature track are added. GUID_Segment_CreateTrack Sent to a strip manager after the user uses the  Add New Tracks  menu item to add it. GUID_Segment_DeletedTrack Sent to a strip manager after the user uses the  Delete Tracks  menu item to remove it. The Timeline also sends a notification of its own: GUID_TimelineSetCursor Sent whenever the time cursor in the Timeline is moved. Interfacing with the Segment Designer Persisting Data The segment designer persists data to and from the strip manager by using the Load and Save methods of the IPersistStream interface.  The Load method is used to add data to the strip manager when the segment is first loaded, and to add data to the strip manager after an Undo or Redo operation.  The Save method is used to persist data back into the segment designer for use in the undo queue and for saving to a file on disk. When saving data, a strip manager should not save design-time data in a runtime file.  The type of save to do can be accessed by querying the stream for its type: // Structures for determining the stream type DMUSProdStreamInfo StreamInfo; FileType ftFileType = FT_RUNTIME; GUID guidDataFormat = GUID_CurrentVersion; // Get additional stream information IDMUSProdPersistInfo* pPersistInfo; if( SUCCEEDED ( pIStream->QueryInterface(     IID_IDMUSProdPersistInfo, (void **)&pPersistInfo ) ) ) pPersistInfo->GetStreamInfo( &StreamInfo ); ftFileType = StreamInfo.ftFileType; guidDataFormat = StreamInfo.guidDataFormat; pPersistInfo->Release(); ftFileType will contain the type of save to do.  It will contain either FT_RUNTIME or FT_DESIGN. In the future, the segment designer may support more than one file format.  For now, the only data format used by the Segment Designer is GUID_CurrentVersion.  A strip manager may wish to use GUID_DirectMusicObject when it persists itself to the DirectMusic Track object it edits. Handling Data Changes The strip manager should call IDMUSProdTimeline::OnDataChanged with a pointer to its IDMUSProdStripMgr interface when any of the data inside the strip manager changes.  This may occur when the user changes data within a strip, or when the data changes as a result of receiving a notification (e.g., a time signature change).  This ensures that the segment designer always has an up-to-date copy of the data for use in the undo and redo queues. The segment designer uses the timeline property TP_FREEZE_UNDO to collapse multiple changes into one item in the undo queue.  When this property is set to true, the segment designer does not add an item to the undo queue when OnDataChanged is called.  When this property is set to false, the segment designer adds an item to the undo queue when OnDataChanged is called. A strip manager is also responsible for updating its DirectMusic Track object whenever data within the strip changes. Undo and Redo During an Undo or Redo operation, the segment designer first removes all strip managers from the timeline and releases them (which should cause them to be deleted).  It then creates new strip managers, loads the data into them, then adds them back to the timeline. If a strip manager wants to customize the text displayed in the Undo and Redo menu items (highly recommended), it should support GUID_Segment_Undo_BSTR in its IsParamSupported and GetParam methods. Here is an example of how to handle this in GetParam: // Check if the segment is asking for a string to display in the // Undo and Redo edit menu items if( ::IsEqualGUID( guidType, GUID_Segment_Undo_BSTR ) ) // Ensure pData is valid if( pData == NULL ) // Invalid pData pointer   return failure code return E_POINTER; // Try and load our current undo string CComBSTR comBSTR; if( comBSTR.LoadString( m_nLastEdit ) ) // Succeeded - return the BSTR *(BSTR*)pData = comBSTR.Detach(); return S_OK; return E_FAIL; Interfacing with the DirectMusic Track Overview The Segment Designer will create the DirectMusic Track object that a strip manager is responsible for editing.  It will pass a pointer to this object by setting the strip manager s SMP_IDIRECTMUSICTRACK property with a pointer to the track s IDirectMusicTrack interface. A strip manager is responsible for ensuring the DirectMusic Track is always up-to-date with any changes made in the strip in the Segment Designer.  It is recommended that the track be updated any time the Segment Designer is updated. Example  The following code snippet shows how a typical track may be updated: // Create a memory stream to use IStream* pIMemStream = NULL; HRESULT hr = m_pDMProdFramework->AllocMemoryStream( FT_RUNTIME, GUID_DirectMusicObject, &pIMemStream ); if( SUCCEEDED ( hr ) ) // Ensure the stream is at the beginning StreamSeek( pIMemStream, 0, STREAM_SEEK_SET ); // Save ourself hr = Save(pIMemStream, FALSE); if ( SUCCEEDED( hr ) ) // Query the track for its IPersistStream interface IPersistStream* pIPersistStream = NULL; hr = m_pIDMTrack->QueryInterface(IID_IPersistStream, (void**)&pIPersistStream); if ( SUCCEEDED( hr ) ) // Seek back to the beginning of the stream StreamSeek( pIMemStream, 0, STREAM_SEEK_SET ); // Load the DirectMusic Track with the new data hr = pIPersistStream->Load(pIMemStream); // Release the track's IPersistStream interface pIPersistStream->Release(); // Release the reference to the memory stream pIMemStream->Release(); For the above code to work, the track must be able to safely reload itself during playback.  Using critical sections or another synchronization mechanism around data access in the track is highly recommended. Interfacing with the Property Sheet Overview The property sheet is where the user spends most of their time editing the data in a strip.  The property page is accessed via the interface IDMUSProdPropPageManager.  The property page accesses and updates data in the strip manager via the interface IDMUSProdPropPageObject. Data is typically passed through a structure returned in the GetData method, and set in the SetData method.  The intelligence for handling invalid data may be implemented either in the property page or in the strip manager.  Either way, the property page should correctly handle or disallow the user from moving an item to a beat or measure that doesn t exist (e.g., moving to the 5th or 0th beat of a 4/4 measure, or moving to measure 30 of a 15 bar segment). The property page that handles editing of the actual items within a strip is typically implemented with the strip manager as the property page object.  The property page that handles editing of strip-wide items, such as track group bits or key signature, is typically implemented with the strip as the property page object. Strip Implementation Guidelines Active Strip A strip becomes the active strip when the Timeline sends it the message WM_SETFOCUS.  It loses its active strip status when the Timeline sends it the message WM_KILLFOCUS. When the strip becomes active, it should tell the Timeline to display one of its property pages.  If nothing is selected in the strip, it is recommended to display the strip property page (track group bits property page).  When something is selected in the strip, it is recommended to display the strip manager s property page. The strip accomplishes this by calling the method IDMUSProdTimeline::SetPropertyPage with a pointer to the respective property page manager and property page object. When a strip receives the WM_KILLFOCUS message and loses focus, it should call IDMUSProdTimeline::RemovePropertyPageObject to ensure that its property page is no longer displayed.  This avoids confusing situations where one strip may be active, but the property page for another strip is still displayed. Edit Menu Functionality Strips hook into the main Edit menu (Cut, Copy, Paste, Insert, Delete, Select All) and the default right-click context menu by implementing the IDMUSProdTimelineEdit interface.  During a right-click context menu operation, the strip will receive the user s choice as a WM_COMMAND message in its IDMUSProdStrip::OnWMMessage method.  If the user chooses an item from the main Edit menu, the appropriate methods from IDMUSProdTimelineEdit will be called directly. The Timeline handles the main Edit menu in two different ways: If there is at least one gutter-selected strip, and there is a non-empty range selected in the time strip, the timeline will do a multiple strip edit operation.  Otherwise, the timeline will do a single strip edit operation on the active strip. The Insert operation is always performed on the active strip only, irrespective of the gutter selection state of the strips. Single Strip Edit operation For this, the timeline uses only the IDMUSProdTimelineEdit interface on the active strip to enable the correct items in the edit menu and to process them when the user chooses a menu item. NULL will be passed as the argument to the Cut, Copy, and Paste methods. Multiple Strip Cut, Copy, Paste For this, the timeline will coordinate moving data to and from the clipboard.  Before the edit menu is displayed, it will check through all gutter-selected strips to determine if any of them support each edit operation.  If at least one supports it, the timeline will enable the corresponding edit menu option.  When the user chooses an edit menu option, the timeline will query each gutter-selected strip to see if it supports the operation.  If the strip supports the operation, the timeline will then call the respective method. For the Cut operation, the timeline will first cut data from all strips that do not support time signature information (in vertically descending order), then it will cut the time signature information.  This allows the time signature information to be available when the data in the other strips is cut.  The timeline will pass to each gutter-selected strip s Cut method an IDMUSProdTimelineDataObject with the boundary information already set.  The strip must add its clipboard format to the object by calling the AddInternalClipFormat method.  It may add data by using the AddExternalClipFormat if the strip can provide its data in a format that is usable by other applications.  Most strips implement the Cut operation as a Copy operation followed by a Delete operation. For the Copy operation, the timeline will copy data from each gutter-selected strip in vertically descending order.  It will pass to each strip an IDMUSProdTimelineDataObject with the boundary information already set.  The strip must add its clipboard format to the object by calling the AddInternalClipFormat method.  It may add data by using the AddExternalClipFormat if the strip can provide its data in a format that is usable by other applications. For the Paste operation, the timeline will paste first to all gutter-selected strips that support time signature information, then to the rest of the gutter-selected strips.  This allows the time signature information to be available when the data is pasted into the other strips.  The timeline will pass to each gutter-selected strip s Paste method an IDMUSProdTimelineDataObject with the boundary information set.  The strip should then use the IsClipFormatAvailable method to query for its information, then call AttemptRead to actually get the data.  Since more than one strip of the same type may take part in a multiple strip operation, AttemptRead must be called only once for each clipboard type by each strip. When performing a multiple-strip cut or copy operation, a strip must return S_OK from its CanCopy and CanCut methods, even if nothing is selected in the strip.  The Cut and Copy method must also return S_OK and copy empty data to the clipboard.  This ensure data does not end up in the wrong position when the user copies and pastes multiple strips of the same type. Drag and Drop Functionality If a strip wishes to support drop functionality, it must implement the IDropTarget interface.  The Timeline will call the appropriate methods in this interface when the user drags an object over the strip.  The strip does not need to do any type of registration for drop functionality, other than supporting IID_IDropTarget  in QueryInterface. If a strip wishes to support drag functionality, it must implement the IDropSource interface. The strip does not need to do any type of registration for drop functionality, other than supporting IID_IDropSource in QueryInterface.  To start a drag and drop operation, the strip should use the DoDragDrop method, documented in the Platform SDK. To be consistent with the existing strips, a drag and drop operation should not start until the user moves the mouse cursor after clicking on an item.  This keeps a purposeless drag and drop operation from occurring when the user clicks on an item in the strip. Drawing The Timeline calls the method IDMUSProdStrip::Draw to allow a strip to display itself inside the Segment Designer.  The strip is passed a device context that has the clipping regions and vertical scrolling information built in.  Horizontal scrolling is accomplished by using the lXOffset parameter of this method to offset the strip s display by a pixel amount.  The Timeline always clears the background of the region the strip is asked to draw to the standard window background color.  It is recommended that a strip call IDMUSProdTimeline::DrawMusicLines to draw vertical bar and beat lines inside the strip. Most strips in the segment designer display their data on beat or measure boundaries.  This makes the display cleaner and makes it easier for the user to move data accurately to another beat or measure.  Even though the data may be stored in the file as at a certain number of clocks into the segment, during editing that number is converted to a measure and beat value plus an offset. When a strip s gutter is selected and there is a region of time selected in the time strip, the strip should draw the selected region in inverse video, with the start and end points snapped to the default granularity of the strip.  For strips that display with beat granularity, this may be accomplished by the following code: // Highlight the selected range if there is one. if(m_bGutterSelected && m_lGutterBeginSelect != m_lGutterEndSelect ) // Compute the start and end selection times long lBeginSelect = m_lGutterBeginSelect > m_lGutterEndSelect ? m_lGutterEndSelect : m_lGutterBeginSelect; long lEndSelect = m_lGutterBeginSelect > m_lGutterEndSelect ? m_lGutterBeginSelect : m_lGutterEndSelect; // Convert the start and end times to and from a measure plus beat time // This snaps the range we invert to the include the beat the start // and end times are within. long lMeasure, lBeat; m_pTempoMgr->m_pTimeline->ClocksToMeasureBeat( m_pTempoMgr->m_dwGroupBits, 0, lBeginSelect, &lMeasure, &lBeat ); m_pTempoMgr->m_pTimeline->MeasureBeatToPosition( m_pTempoMgr->m_dwGroupBits, 0, lMeasure, lBeat, &(rectHighlight.left)); m_pTempoMgr->m_pTimeline->ClocksToMeasureBeat( m_pTempoMgr->m_dwGroupBits, 0, lEndSelect, &lMeasure, &lBeat ); m_pTempoMgr->m_pTimeline->MeasureBeatToPosition( m_pTempoMgr->m_dwGroupBits, 0, lMeasure, (lBeat + 1), &(rectHighlight.right)); rectHighlight.left -= lXOffset; rectHighlight.right -= lXOffset; // Invert it. dc.InvertRect( &rectHighlight ); Strip Wizard Usage Guidelines Overview To use the Strip Wizard with Microsoft Visual C++ 6.0, copy the file \bin\StripWizard.awx to C:\Program Files\Microsoft Visual Studio\Common\MSDev98\Template.  In Visual C++'s New Projects dialog, "Strip AppWizard" will now appear.  This wizard may be used to create a new strip editor that is functionally identical to the sample LyricStripMgr, but with a different name and with different Class and Interface IDs. The project generated by the Strip AppWizard assumes that the files in the DirectMusic Producer SDK directory \samples\Shared will be copied to the directory ..\shared.  If this is not the case, the project s include path must be updated to point to the correct directory, and the files BaseMgr.cpp, BasePropPageManager.cpp, BaseStrip.cpp, GroupBitsPPG.cpp, RiffStrm.cpp, SelectedRegion.cpp, and StaticPropPageManager.cpp must be removed from the project and re-added from the correct location. The project also assumes that the files in the DirectMusic Producer SDK directory \include will be copied to the directory ..\include.  If this is not the case, the project s include path must be updated to point to the correct directory. Before the generated project will compile, the path to the include and library files for the DirectX 8.0 SDK must be added to each configuration. (footnote continued) How To Write DirectMusic Producer DX8 Strip Editors j6le; A^Yga j`UC< pa"IS c~^Z\ V)YvZ o&%x+ M@& ieO W;S`F N%*Z9` Fw1\< -"fZ%e jR"}{ Z^|4 &; ,BDd)Y ~yFeQi^a R_T,n8 #GBH  7ACD@ xb~%. Ox$EGqTg >|IZ<.) JLURU  iM1U yjZe)# oKmmj !qXl+O b6l!P.[| M6Q"= 54k:^& lIE.C0 '.O\D U2,UA 2~\xi l.OQ  1};c@3 w+tGD ,S^Qk M5]uPX 8p&LXd dC<&Q wiHPOW\ ~B!A< 2+gS` X+8-!]k f0.^= zAa": =)F:n spv*| /o9v-W n-B&=.# n,q`. K4QBZ |cf"t"k O(Y}K (yI!B( -/PUny(' &Vt,tfU $GnQ2 /rD2@B GDpb" *@~~z OE1|x $e6$;A ~hdEZ& XJ@an)}J jgUbJ C"Z?@ Pm~5f C)bNt w%{fT ~*d-r h|o`J+ FMG2N[ g ;\0Ru d8W5* 8+f:L )\JGcd$ euB0phT fO{1) s7"W> Xb3xgZ &]pBL @Cy!9 [nwo? Nx@LK .X4NP XKD`a D<NFr |RLG{} ?T|x/d~ %oVpA q"v`` {OFD'= )JI"k b~4R8 8;z'" ].%lk* 9zX_H qv:<q" RwLuH <n%ih -`~i6 !u[-`VqH (tNYA_ ^`pz] DE;~+ CmWyd yFzk] T@4B;.y G2M6| b@#EVW R#C)u m3VHC 0*HtZJht -B7WO ab,\y I(@cs $AW&C Xb{VY 6**7$L *,bUj ,vBf) E*hBs /D?DXVGN f^n~' @Ud<C 5me]k7{ QwphJ 2((E] zo'vL 4vvA9 *QADC 27X{ih YU4i/ 4DV}4 X~7j . .]Zo- wM^!Fj1 vkG5k T`Hc>j OpD$[ 6Mr[M] xC[(h WdN@xU Iy'|ct ^+/E  g%,`@ H{;e/ 6Y]F{ 6WF)J" XeD~) k`'CX pEgf" EwA!f WO+hp OK@CV Win1$< uZl7N  aE>@f& *6pJn p&QDcj, ?f,QZ sod $q 'Da0X mHSp0 NSDNG5c `(p6Gzk 8wW %b T:dNi ih_X,PV 3sCcF 060TjF ^%~PrD jOP*] jo?{' {X);} XAk$9 OK?[J <JEr1 aV:K6f! ^R$ir 4szKQ clH/, &j>!Y( DJehq xm7H% 9=B|u cB"_u n2NT4 )#xP* jKOe< 94:TF| GyT/d I;u6'3 @jr<  {d1)n +Ykd%sb0 y_)%z5*  FAy< oq2B] $}8\: !BUX*$" qY+sh lC1Rn+ WSE=# dJ$Px iF~+G# %.XJ& 1D*-; $!F2Z q+|D|$H XVD9(C@94 T9Yq6( D=`PS N<A@) _3_h$ Y{,<)H g?vs9 .TRe9j q\De  u+`QV 3K+-ut R MOj uYTo?S M3:|5 C+{s7 La3`W LSVa* D;Gxw ToX!& E#KM' Z67fo "O =e `1|Ai `?pSK }JZ@% k8T|x -@>*N# 2Ez#' C(eA` X)~S)$H NA_\# LB}5= *h}lV "DqX`"F \dIA[ RAqq0X &/F9t _y'|~8, t!mKuh q=b@L pRI}P 1\:hEJ lBVFK,> d~')(q 5|T?' qIs<! 3<4z# !$f4+ DK.j0 ;gd5% ,0'L6 Q|62C" `,=hK bp+9V ,)'<3Qe/ jGZ$Y <sn77 K'WU|` ]a9D5 MfyMt <_kAH `IzR& 91i?R @nlcW ,bAR^t =wHG,e7h 8%sns lD X>aa$ 2`"(s 3(3RK W.%P| .z's, ?nstS< R+*?6 no$I' =@7x} W~dm2o Kr(k] f3E+o.K'9 RLyKPn: UX\yX v\I*J 1QbR"SWg 7@fwW :HF8>0t0 D"I71 bLMH9 /Tl%' pz:{9Da oko^V -}bp3 eryND` 7[?]  }1YuRW b9PbBZ$ CB6D1 ;=S8n FXC.L LA2@!J !1EftA @x}Or 3Ar@p H1DN2 ,heAP| q78/EG g 3L/Lq4 .eIw| Y]HG` "Cyt1Df ,{2]| Rs^kt  X}yR; *K2/N </cLQ )|kV0 &*ji' i9)tL:D) ^3gJ. ?H+\! @,'`aA /tA+!}Zl uZ2TM u|y1) R3z(1 DCiJ*# *9Lbhe bu11:X LN~&& bip14x B_/Q+ IlA8g 7i8eH> /I8)X .8fbc` GL4KP MALv3 &Y`ju *i#L$ JS):S $W%C7 -jpAepQ m2 @K u@'=# MiP7a 3"48M Lv#T4 MX$ny p{\Th E!k</ _z0\2 7-ZJiR o5l{` HA 7q I`-L4 w,.T} f3{&3;&+ l[$xrY; GL'C0 Fipd3 4)#;) sj[hr 0C1M: ,9VTa w~9I; C5K;- ~>YXD ,Mjxt JsCZ_ ^/B7a ]y gzhEU [<h-{ *`t87 ;BB'(& `FHb`^ F4|j&Yd y zH$ I~ixIx Ta]+= Szxh` u2( = gc)Ob !"/v/ 1?]:VN: AuEvv^ Z=GLA%` C|V"D u8!kr $[xl+( 2]W|s;Q QeNOR .L&qa 7%0a\ 6hFi5 &WJe8s !EDk5[ C@ N> ^Pite !v8]L 8735m; f7U5\ !5Q+e ?y4{& 'zm-\ z8j2Q N0X(R *wNoK; nyjrv !D1%0 &J=fL lqN|qB& DJurh 1PM)`# ef(jKg 5kl[>Q w}h|0 0!ZRT -pA#A"xT @%l02 ],V`ck \-bQB Dw3{, XVk</5 A`]35 u]Q0f dEU"D 2yZ>)m Z4o G( ` +L#7 }%?F6K Xo;RAOIcu 23<+xC bi@- h NcB:C2 5[<b} {7PUf  E|-1 BFHe8 q%bM{ G$0ER: @?Bu7 puFEp $QEd-  #j~dT iBHJcK C%@HH >p"'k_ bew.E Cb"AOJ ,.S=q t4K,Ka -Y&Fg 1*s\& n'+1,< +,/21 O>EY{ 1ZvX#D bVJ7J }KdvY&B% A"V,8Zo' c^O## 6/bD' 4Y 6vm @!'9  j@`C5 Jm}rO u}gXE [s,xg @`D#J Xw ,V hN2OW/ $Xw~J N%4FC ptGh9 MGfmURz  VAV0X hE_e# #S}*[nN q%M5p GCXK^ Wk3QT es.9Q| Vt+<q E0bLx N .B0 OXcUJ (aTg5} iV3\M9 Fx<wi >Vxu5Vl0n @Nlz7 'tmPT [y2gl DN'yt[ s(8@| ?Q0\U 06`y{0% slvA& Y{%mg +ThKm c@X%z ]c@eT 9.QCF ]BA/t 7!0Ts j{ef/ u\}{, Pd*vI `X@9UH5 5sycv% I$'={$Yp^o5c 8"%qA 9[!(a} &s|SF o1SG: Ny{q4 ?*!jj/ ]fa-"M )G.2q nPC"_P #Gm#D .qrU3 $FT$4; JpuHAJ yC.f0 #w'Vi2U <>#Y " :(h%R1 eJ!At G9oAoB4 ;XWV: e*r\J PSm(X !pE:f JwSI< n$ssc &gO&c 2Gq'qc !-;&ZgR ((9B& Z$"40 <eb0Gt H6.8m i_2Tv A&dk/ HxN~82d  uezK= J-81go b=# (E %>4k1 9"^fF C(\b0 6c~%u k^I&J"lI XMHXF  k('" *cH~. n0P9Z cN)0- LZBo0 t7`GV dLO>W,e[Iu !5'im< P-tCd MlpK\ O?E2<_2 2eBZq }?[/eu |pr/pa* Y,h3q g9Xwf uIud'!<4z~ 0@$tBDm 6j"p! VLwY0 !.Ej2 nxN/7 iz^Z10% DN)VG 3<D(V A% ;> NEIWE "^x_[ 0I=2P F!VOwQ B@3w#F\ #t#((R +6+]v: V7i,B( ~m~XRD !y9~( <mgZZF vpo^|J< ~~2x\ =!Lp' $.!D! -U|8< Tn i(t ,mu,& H`q?9 KkJ[0h iVl`k ~y;Dz sqfBa r5`a  \BlmWH #:FJ+ Jr/I} =:gK* ep#H' etfM: 54j#B _km&I 4wBgY;A %G@V$ *F_mw JJ="E uGVor )Si'Z $CET~ jt(C{ GiwFk (Hnl2#? 3Du42 6"cBH= #g6Z/ s _]:,K !0H]7e 5KAI! 'EAF8 pI!Gg <D@'J R&N0  nd#D) 2[`[6g ;&1qw| xey p 0),~; p3}7#` V}}&Y Jg]w; l>O aT /fEiV RihoK+ ~d6EW w/$X- saU$x @yx2D JA&ET M5;b[M !`O\z^WU rEc,[ _A7J9 A88S" /H|}'%&0dZY aTA(rVH .<B,[h {3z{2 itSjh`I m*/>X v&FN9X 'Ki1s /xj#h< ,,>Lh~&R i56D# Mbr)/ `2/!P| 5!;(f )$IX1 pv>-f[ H>xr8 eL+y}S *9w ?@~8 w=pT)( 8` ]t3! pXThf J9`@rBl y-#,$ L,C3m'  9c#Q0m RQmmD r9|++hg] tDB%~{Slf* tbHG,(:+ DeAzhcB hMt<V A64.> DE+=u j4/5, N8A)# Lc3$jK mTaozn hxA3o 0pVKl 68V;w; @v1\h )`/`C- i;9KQ 7 N=t? nEprM 8/ZT\ BqE`I _q/7G MAm*xi ZT@%[ i,F ! nhLoF .+`V%  &Z<b= 'LVb'-4 t5vpU (>!E` 'PI0= y0D~KU@ 14LRJ^ XXC#@aSp3KeHu5 od<um $hf8X }Mu)$ rwH2842l y%5)J HLP7q= YGdID }cGDxy Y\Il:lm4 O5ndH2X1 )d:L= z|2.QCC :>s1>w *3E.* EG+[] @TiLt aswTLH*.N ytK\_ X_eMx4 }615n w$;la ^]Co, No*b1 `."5D2q WJLu*t% $">p# D?52F9 thCIM2 , s$'xjA .A*bA yzIPS 0+:ma` HK)L! y=%dVyj% (1G~% dDp 4 ny03" bbkIT HhGBya  !Q,M z#4Hj B>;V  [*wYh /\5n4o |!K>ol+ 2KO1T P(Jj+0 4)#^{ N+7z, cR)|4 Be,yi} }<"x|L h@avfS N02/; bUTib]227p 0PER@ E>fL: p%Wh1K IZH86R u(i>M l:_So;9 &s+-V dC@eQ Q;(`0 4Qr\`l lHS]| 0EoRr iz$VP r={5~ 3>]%gy $8NGBJ D#$G;ENRa w[ 6*NTD \3'8E rgYU4 S@hFy '*c.  zlYCe Do(y9 ^nML2 iQU8H tYP>B )end7 cBq$% `jzg> 14QyQ WbZ62{ v0;N+ 3^ieM R 0@;M? iE+P] J#aYE =V&9x= .^8;PTX hzsZ`X  :!<or N.*Uf D%XZM 1#{y#" PwoZ.\ 6Q&MH 7`)Q\' bY{jC c#Zgm h>}}W 1zP$I )H6XjtR XS}!= _C,Gm MvG@( .4m5u8mG !R%JM^& %@e#"C0 cPwK*' wB??x C#%di bF"74 tP_^]o. Q6<~E ,kBxO WLGzT w}DVa U-X4@~| q(<C2k8 6BA[X j33S+ hPa|E> YSS8x?Be" jZ{rlSj 2<fH! /~Un" &7~n( tt"k1 n7 &n#o `/xl[_ EHfuN@ YeT)>> &}4Vz A:LS{ \1#h' >\n;@ *,NL| ;?3K[ XSq*: tiF/I ZDA%4cm .t8G/ A<Dbl i>Gq  3rB /Q3C |p{H1 eR[.D Xj-@%eS! ?JQ6w WY]:A avKH; he$?a)X X.[EVF{7 Hh1LX a}Z2E1f PJr<f 1}>1l| O0+~s3[ s|\,) GJ:|e frTtT 1.fwO h6}u@ i[$ b] \+[GP |i8E-$= 5WB'Iq |@AZS c5q=8 *0/~( IF(A8 3QqnZ[e 4^q*l }w%cgj2(MY ,\R#]iE@=: q "nm}F> x@.%=. &By&U< |J%t# k3 vP o"X0n \Po m. Z)Gn' 81{f*_ %xl"]P 5,vIB r!Hgf =VFU* y &3)fc `L *W EiU@^`3T ,LC[[n R#V9;t +kyyt t)1PY Rk;n-: HSJIV u}:Qc 32WCh &l8$s!U-a 03r>% ~$#+ D* T{C.jh H`BdO &8tVVjY e2t`K6 GuYOd \aCbp `/H/d 0I3vP (^r>, b0 nnF) _f]xP9 'k#q-r6 Va0,B7 4 lELhr ^WnqR K?pu5 }5qT6S hN(GW CDS X XZ)X4 *Jp&iK( 'T.XF^ x[DV# =>W+3 *'?&- K|O4& 9x$7B y4ul2 :Iu7x #i\t_ s"^$S |&Rpa"QIL #o>`h 2WDyP @JlW0 4N=Ja <L_=M v6W#S5M3 0-z(j /3d&h ?kM#0 Dz+h{ @XrZX&6 g?K"S6 Ol#&p  8)f|F 6G$7S =m.0!@ (6"-: lxg5_ ;L#Q; %]oIL, h/9Xp 2GxtL (WOZMaEC5 cmKzx ^_s&J T4G2`F zmH_{ tb+lR (F&P@c" 7|N$h p8&3XK wiT!F Xn)9eTg^ C(Oh$ 0/,@5 bBxKuB C}f2] p4ug'M 6!h>! 45?%c xYv&v 5YJj? :]LC5AcugS II*`Q6 =vI"9L YHh~# x]A)Q {mg]N\ &RR(Y2 wb+>0 D#Km(FT hKAN. f<>3S> RX&Zu 2VwA* oq\iz }AXv@ `m{Z? (N">T2!'h ?VKVE v:A'rE E/EGE 8E]RC ,Te4L ?HNz| k#M@NNk5q =De)> ?x@;) 'pd*z zG"UTS pBChe qmu^J;'d nL[O5/ M-icW.7 FGnBwVFN 0y*d? &f(Ud 00s%0 v$za@X {9bca V;v%f F_yJ`I E<XaX Mx,&?_ yJBOf Cq03t l^!Q; ;`rm( ;;$y^I wE}n+& !]hwCt  gjh&W JVm42 ;EGWZ +*<lD 0">%) >5|U;< >t|o5 4B[KD VP!cmw PCs8o ka{I~ s_~?0 hZ3\WB $:b"t0 1wcQH *&064MB =Zj{'s :g*L& CA.1}x =l[eJ h4T0?A w)O9^zw "c Wi qM;]" &0~eL( n+TUw+ 1"mR* '-9jP f95@z Mpmi[ u|>/7* 7|/9- X"72f q`M:;8 c4i;6 d?Pacf h_H8Ut <@O\F Yw|m3Z 4r#q~ BI:HG O!z`EnI] cJ-+X: W&lQL eLU.4 jo)w$ :9H4h jKZH. h e#ac" (xeNZ 1EaNZ pE)/eK\ n^e0D&.^ o4i9[ 0as$H c`vn) ;7F37F3'F2 hb[t1-: b}s1>s2 iC>[C. d*<0Ma < Zs" PrAHS Kp.0/ 9-,eU No9CJ YW+j\ !wcub +{Xnb =+\w/( kp6I}St) }U&pP ?p~nvU $}Rbk 1-t(1a Gc(8F` (Tz*n D^[E0 Bm 2ae 3A6/3 >:Tt2MI\m IX^YW %pf0gY Z11Q:ZH BpvsG ZOT#U: bRx1j {LO]8 [P.M_34 AE:g\U v`h\k 76'zSkA0 Zq"c> t<`N# I;4rH bQdYRh Uo1dj iU.Ci y^y3G L5TsS7/ CF3Fi PT^l{ BE0%CG /S0\1W .z3K0 bt"(8 Bm$r$a DQ\jh2I LLj9${ HKb,g ow,DA 'V*^Q fFdz4# |?rZ\ iC Sv 'CsS} }C0Jm]  \C139 $ao%) EbY50hq 9VomZk ~oPqFvc !mQH[ #V*Wds( +:!** HRGOr HViA!h Bff(@? ~!w_2 Jqmt2 $:_{"A Vj%4OV Er`hs2f m0 PSA:! d15G'@ X-iVS -Jp,Dr @@qku q^yZE<st r}?*oQya sP4+:Y $XGD9 w(RR; 9,5'6 #j!X;]L ,q%z$ GE1Cw 'uH+V @ FG{ _oE82\<I 6tmlR!srWE: 7vo7A y%A!p *u!da A YVr>EVuyT} 8BKH J* spGzeF* CV&k7 5@^nEy q6F`K []e@? Sv7%0Xm b%@$ga hFAsm O(4JT A`J8} nMK~vZD ]vli  +>|M$ Dhv8B ZpqZ= ^"0\ ])( 5uNc"KMQ ,IusJ V}ge~ek "$v6Q 7tg3  KCTp* qhW:K2 ]\&b_ \t-ex !{a`I -mJluFb Z\??v 6g6[s v1#|v W='#$F &$I\QS HWHe$ d=y3/ -4fJzU EeM3d *y.F<D v%XE(t 1 Fi; CttLZ 4Iy*7 *LwP\SO N.bv_ Y2N,M T\Gq{ mLh5^ Rh\j`" 5hH#LP  g&_O ,\Q#P n:m;,[ (p$8u [M\0jL &-nOy{ #rkL92 L-:H-9[ /!d+2: (uAUT dQ;&hT t=U?U LHLIQ #~2H= 7 .*d\uT `cQ{S #RL`J @OUbf 2njA!H p ;~'I !T;U0 Nn`;3I Ij=o1JD` #I&Bo W;`z_<1 fgWVqDfd aLv=Y,Y ?>."hX EX;Q|v 3fWR3 Jj6]s X"4bp~ HVzY[; 0GCJ  _w%mv ZraFJA 7EV1_6zq+ \Ix,z ^m*[V D/fk6 k@r:% U1l_L km|'ZG 5,TrKs >WoAd @/D2qql z]q.B ]HudV GE9wi{ @4`SYV LF7E"E }`@ H epy@X 9p1EA ?bBcU )$&tK `J%FJ 5&F7gb eOeln BjS"8{DC4 *a.;! pewIF>ul[ A@z"T W~VUf^7 J6C8w xy l$ [EdBM+ Qy'l? :XIlZ ."`(Fz <DSy$ c>H | JqDwp8 #Pa6E I2DdV^ Q&icK%q` V+WA"D @m4kc" F(<2^g8= UC~Ei 4{i>:h(x }6%Cc 6lzu=q hg^edi +r!\1 S>YlN y|):E /JlT|a Db6L~s ]t`WqWL :!x$@f 6[a;! %/_ ' da AI?+ Q>L\TG& *C81>Z &D ER-d *V\[0 C3->"c DvNlg0 yS(=dL "m|B! ,**qx8 zJsM# qN8uq 0!LeC KJM7*=P -!Xu( zpOh: A)ER! (32NU. p,},s 0O'qL y${6J (~)@9 dc?NBA,@ hqPc(n ,H)p. )F0X)j /qK/I D%NE'G. c[LiQL O%6Ck ZlmbQ 3wfoZ M^+n\W c3;.<2 eFe\*) YJ>Ya% ,b<Am .+$hUV d3utS:  Y@@86 ]ZTy1QNA 1C(d@ aQpuu@Y (F*#k `kwr7 $fJARO &fc$`[;5L 7ugXH Pj-HJ\ GOX%v0 PND0: tkD:% )y~(<"y ;9$u#U.X\ ,m<8+e -t&6R {1a258QJ !@511z ;UUeI nv,y! 8Of;T .9SeR l.9FK ;WPa0 \jPv= weRve6 HQFq5 V<2Tm ec"[NA `2O)j8 ;fJP` Br$kb gCfdt* ^O72J bc!q`] EQ,"eX. Sz).  #[`Y? MmVn@EA YlOdMl kpDqj\ dPGlo A*Gl~  4|aq, =26;K ,/C?: (Havv P:ej>9 4adMB TyG1Mv UL|icrD X&QPv*7 brI<T!UhwT }${+bL C6y4m} 3BW`m =t$|H c0Qpw [V"H) v/ aV Gd)7A \Mv|qU[ O2>C: @5B;TK &TY\F '{{RWN gQ8N; 22CRF l}^?j 'RGIH ChDdC HH84eJp 73pa3 K;6X$ yCM*]v+ 5jRI^ {'`AP ;u$\_ /T3ew f!7T*R gp`x mK i7|+u 1+c#q T[JGp XD3iX$ sv%z4 :PtHQ( iLm). zh5!q ~Xu<C -p}zB m-RJe O.8WN 0m$$v r1c r f,@)p Nha,F\ P`pEUp `V~7eWJ o]spEx >/ >b V1S3$ v34lE sf,/g *y@&z [wWX7 EL])+df B&HBX ;5//1 >.YLj  bdX3 f.#Y^_ 1sk}$ 6%O1Y "*fdT* "hK*$ Sg;"  W6\:s pi0{G" `.]5v 8vOen 5pxfI FWe2K -Bk\' r@L{K xR-n* <#-3P -cg@B 5 B3x UQCQJti*b #}=w@| ^NomS [r,0# nc,.A el6.#T "[,*U XtR2$ @a}CoC?2 iw;Hb [D4s< .P%8$ Y<o8d P1J2I Ui[+K 2%q(9< hw8nz x#\I z ]&EKR ]?IZb trF=* `X4XY O!I)SG UjV(g ~<K_C9 J=&2[ g`ih=L p6c(X uiD^% e9-jl G$}B1, P2""\U J|8Q)u $qt&b v2+S7 t2p^^,~ S!p[9B '>UR1RD+ WV8)UD p,!qT H%p"7 trbf9 )jVb#B 3:vJ^j, Pk*\TZK 7ctK{ v MP}lh( a7Yw>P{ 1Ol[t ,MycMB' cd8r:[W (5ERo[ E/K-wkN Ldm-m +qA.= 0J7Nm 0v N[ D8yJ& oV>^i [EK9U A:~BF0 .Acba D).K] ]dE(e [Y"j4 r%cn7 f;Ewz ^)aAI .n-kj #S]sf bC&L] UIHF{.^ h/dJUg ILg7{ -uB'" sc{2f cWW?c; bf1>G '_71; f@(D! f:sZY N%Goi Oj7m_ [tF~}sW Co^UK 1*!OZ %LOVp' OQil` qhXm: 8nIRr ++ 9x ;G&02 +h$j)$' y2Tpm 5f=BY +J^\(j )+9<CzO cSW93 miT@? I#N5- lSe[O* t],7g !Qy.Y&O8 GQ^,~ IJ6@r u|a6* B=;,E A#,Zv, oFdkd 9Tv5)yC; S;t0u "" aw lg;$pmG 8,6%%j b-xDB }z(kB S6*_1 ;*"k^J#F MAc|| ,BlBC L:epy^x5 @Z3JY@ 1_<Gw dD2?|! E#3#F `^IND a&C;&BY 9A<pfG L>H`O3 MdGpc =,Wdl FD816 QITDyJY N3"BC* AI@$  LAZJ_i g<} G )-C$O 8;]Ij g^[Gsv fjNzWV }Net- )=t.@ r=HhZk;_p X[$JH k?;dC k:AbU h#N8e [SxPiea6 KJ-GA 1jh*k MBM!>"l OZs;+ g`[ds y<tmb X.*:z 8w6v<s 0|T?$ I90=z d#x/A$ viaRI L/A(G EB!4Bc tW4XOn v09d? [-]tP ,`Ti(l etEn= iFT!# X er( &2=&2 d)*h0 rO{rN rN[rN gco$A_ f@DpD@Hd g7 Cm G$Me%/ !G2@d 2a}v12 EF}&S| ddQ"IH Y/WzK' N2<Qib4"a- uMQ)RUbaRH &eJ:Xe NZE b{ rzWX? gpRk6V 6~iy!e -."{)& i)zD? ;6~@A `yj)l; P(1|c rCrA] w[8V1 N7Iyk 's53-G AF!pK  ?$fG 4(d6S# g$Mv)u %Zl`9 +`2)= _&0Qw &r%fd p3H~n*!K @hfIe FKRE#Ur 93'Lo dxn$*-SS y~'-K pz`48 1p/:ZkK" M.0"K0j hz[i0b$ 0~/h# |[e91 }\Bz#* t 8ymLxV _{n`> <$@\8JyA[ -^qIz 7s5:' K3Qha P=Bc@ ZGx^-vtiV Lt;\HJ$ +F/_`J A71< ! F\KNWAm -5wB$1 oC0YI)- f8YyX j7cijp :isP8 ,MA$p ~L^-PBN $$CH< mU9-K 9."aq Q9T%Z l+S"t y/8}w ( <*"v OK>&qP dE@fM #R,esS +^`M6  n{D; t@a@7 ,Z>UKu &|KD; i.U|@ p#cQ (_$ "CklF B}`ca eD6it2 iV=4Z 5*<@^d U~|}|h 6"B,2 n& PS ee68*9wr gP2tk~B JlFQg} N.UHU V<&26hL (+J}4% k*6f8 g3(*a3 f-&$G_!I "#8*c 6PQ9A \hJ1xu \_pz.c sp_1_M +I$f9o [&2$u QA1WH 4#A5]m gi~)Bm  LnOL$ EP@oE ? >j{uj+o E<w|% 9;H&"6 @3c#3g _T|L! DOS_) 4+9!Yc jK^1) v`U9nt aVl"fb .Ox$k& uda0n +R+YOU6 cd?}\  <BVj 8:OzmG ^L"cY dW^0m {6|wP Tfr*g 5x95g 8I;Hb@k L ]y.F iDj-[ <r[tP]IZ 9QFD,n, h{8eu ?<X L cszz; [[)qBo <%HrHs?l _,}tF j.c]1' j*6|l 62)@<3L~ AT#l} 4-{`Y? \wE?f 4kv$1Ki >r{x6 ,\?ld N!6"" V-GA+ ry!aH |++<1MgX  /x-A4 Rf*(Q Y+~ A mRUC_ jRW6> n),`l1 #ky;N} UI`vm uN>eP @RL3wu( ^HuNHUS yi/J, g`\$rR ?\[E9 p8\u@Gh &Z#\W j}X\h&  fty9N DW888 cdGM| M^?(v !B"*V  V,+z At$xd M=ebNI EsyKui* $d|,$Hi k51u9 h/<r= >GGSP LNnqb wSXt! ia$r~ +wGXJ {Bu{FK o7&LYF nP+_O ?@D@Rn NL<zy =RjgI k/D_> {fS[d~ )3nK0 (&)M0n uK]42 9b\[7FA {F8nq U<FB_ eEtL5 P}qV2^Y: 6.!+h 9edbk 8Eu<UY ^S'j* ks<S}r IxI84m (eOD2  6760 &ot0Lx NuCEm; Q1){O0BGl iH8S~Iq) N0O/* "=Q}& GXNdVH H8|)V +_hd]/ BDzDu Y-I85 L]x/H,2 |I3u& 1b(.5B h(l*d O}>jS hC|(0l jff?" (u\:7 G&Cyp _coF> 0YlXPX CGpeE Xen=C Rm`E^ !Aj")Jx xRc % 4My1p p1L\/s !da,G C%,o;x qiZww A@#)R Irb5mZ9{ 4RiM  -EjT+ 9/xyK 3gLd? /##9#Y aokj2 /g(^y bpe+a 43kwL& |5S]^gEn jPV1i m?/u. '<[1b;u <qK<x B)OzH a1bbh F4+Bx ig1q>  |ICV @8ZAa *xZ$rFJ]HQ \\EQ$ L8a8 ! V0}ap CsAn' 'eMdn( gY{(G | @Oa_ 2mu[0 m@qn~ )H!J1 =8~.|# j!e#5y 6\K'42 yA,J^ 3;IN8 $mVq65S zz!n^ d}$Ye "M|>( H5?HU >5#u=b )=@i! `'<A- L uW/p ()u^lcQ \rAauU $C'2p~ %uqKw h84Bz E/0iZ @#vXG HXarBP U_5MH gpx37 lDOBbfz f<>6q /)hEh8 T~Pb, @,Qs# P)XJK) Qr64E8  N0;F |* dq3 mUguyA Pw8OM Rmlbu S<~mT *UFy* #]xQ!N 7s8 ( 6Bdq5B Bh2w#o I4wPS c+hbf PeM.D0 <IgM4 oLk?-$ y<~@mKv c,E7H^ ;T+AD] 4]7$W s"t6e <R]Oh lTDOX &!5{0 rW622 9U;TcM BUwZ+E e:kxV3 A dNn . ^lpm. - >6[ B<F~vwg 0i xL7Z3 _pe~m! p5cQ\ `$8Q} /atHt" L&&Oi SPdru, (ZJvi Fmp%k DxzgnFG y B.r H4T0{ X(@b[Z [^+`s[ =4HxX?X FSU2Y, DXgIg xok8f VvtuI x/1Mu  ~&^i 8MXH7 VRj+j(2 m}LHy GTY|" ^s6)n- F+&H\ |ikub wV:@.9k 3HLAAPC  ->UI> 1CCmC G:x 4 i7 f| &SFE& 54Lz= M8F:y5.8is #ws'$\3 seEAv ?l|DRyh iF$C"V @@V&! AbYbZk pwepW( OtA^T) :y{75 !)z I KlD*` %/p8" V|!x.u9 ma<() .iC&i c%7vK &+=D*R d(r2N[ xb:#FNNX@ W0Ja{% c?)mx2 cy7%fA{ M9N2L KU9r.8=9 6?BCm {RCi{ tWy|- FtBmHG T@^J( r1FPb DWI%WZVL BRahl iEEb6Eq ;Mob0G rd%Y f p2/^C# QOCPF n"Ii\A  :G!f xX4V] JeS]iP -4n()| O6;`gug LOSA[ IjQ I +@QpZx, Y]_om DiX~Za vk#]$ DdZ)P0 yt"q^V lsgt.P ]|$,, |w2*[ }Mu\n_h 0K_u. ZrFrh  _G#;6 #$;u) S@,uA Lt,g5 MtZU<! 5YAkj eW6~AE 2No?@' 4o0Rw eMZ2' Sd_5*M% RV kE` Ov:PC B1+#<W  3'dKI }9:et $;+2C'i 4%gfA ]TqyGf Os0vQ` _ySY> GV\U3 qy&dV n2!H' C!_Dm ]8AUq 'AkJzd v`Wag ;ARBL$K Sir2Eq &b*~i 2TuiX E\IaSNL &k.JII (tEvn KWb6(- N:5RHL @aY X a#Bv> zA#l-)T 8`e"x z7>(B *b#1} YOZp6   oCrPN 9^c"w R|QZXEh T_I3^ X%Kb!B `CVEt2>pS[ Z5(PT ~K(oC iC{[q #GV\r$ )fG0,H QJy : |+}b52 v^ADr /O$|/i Q6qlL$ 4+=!A U`953 Cj\It-D Qt!B(6 CWhh!&5+ !%_Oj'"8j} )B8s+ s!qg. U4y+t <u`qM %JY{+p 8DALK JQU#tleRX FP<&Y ~0}aD *Q4,SR lnQ@( X\&oB PnK<Qc r5M/D W#! / R]\2H `yQlo]> :>%~B. PaNT& PaT%Q ua\e;  J13d Rw%A, 6 k)` Dbt*JY= xHo2H H\ZIm CL(j!3 "@"Or2 4'dHN rdxp{8A ^CaV#a Y(KC@ wJ{&9 ru!5e &\[>/w $Ey"+ :Y'w: Mb;,L Yh*%~B +_OCs Hao8Xn ;,!;. =ZG0m7X \,D'& >+)JbD H/Z9Y$4c |Dr~J ysD:G *5!K, ;Kh#l?I7]< H>O_4 Pkq+" O%\aE X>?F% X1#0( !adAe *"OO^ +)@fi )tNcY _XG~@ JD/#yU B'@i` q68y8 OJ=Cv u`Q+Xb '@ (j ]nL8` |qT_m zr#M9 )U5S9 PYw: Z wCF<< ,!cbPq0, u|"m$` ,C@yh #`Wb?{# 5Vx#AM :;Z4o s8rRCM n5/?U :(( B qx#z[ s\rVq %H_mu /=M1G]G /*?V` F-<xS m,@g) 7uV/R,} pT.D. TU$ v IbBt7` (5\@J7i G@TV*p Pl vHfg=m" agtNVsc k),%a xSKP9x. MC"G^  KX^cy OH{v+ /Q'.& gy=W& J'Yly AxAJv 7+Y!G o,{Ji *)cGP +>W9L UOgn`ZT 8Wfs m A@IN2 -hQ() M=.A`pY $4<Fr  c+)" K%A@.'? !<N2{r' GR/\6@ P0bDH W->$l M*S/+ H(@q~b -,Av3 D)ag( M6EgB bn3bsd m}D^9 QaNB;4 viSN_ cj#Bh- %/IPo &6S0Lb &q?#"w F+"@_ z"F`3 O}k7< &P*{b s.U}18 vO](G Q!I4. -%C:zP U \7W BD2(& fD4?E j!Q;G  vNas 2)a`J [WKOj #?45aW 5bjA%y Z:R#/ 2+0?Q h;*O= zAt6p\n _=)nl\ */Uiyn VIeE4n ;/cB)6f J8jjF &2/"0 /.aYw {HANA rMIqj1t [X<kh 5F`GW5F @n_ya +c/D"% ;A=Kjr ?4g#m ywHc_ &t?AP s=FYu *N(ap ee"C zV '58$F1" :$:0a5! OQg6d -a"-k g"vNq ^+bkg< ^)X*2 Wv@@Pl# S~9_3p (E:An%@, nH+|# 2'7vn &g2,_ +%+*$$t >R+hN G~c3i ,!+pV k%@Cy KX20P 6.xII 'Xp|+"o-tk Hh"f% >l\Z6 (7XvP x= nc ,&-KI] T=DKN lio/^ N$)$_ O{ H< t@Q{&) fdA<T &}~yn U=}Nt7 !L>"=/ 024dd g^8$I  mP6A [g$,?u KVtXl :"u8f& (~Ns2l @qx"Z vn8Mo &wpwn` mUk78 $~:,Ab @LUGO ;uO.bU ]D)Y0 Gi;fN "I#n$ -PN9Rx  ~;&f@ qzGAd z6UgR 'hAA}Kd j>JLFi0 PFD`U ")|,6 O""rV6ES ,>U&R 9b\[7X $XESB aR%"F HP=Md SjI`H F7tG) %T`BA n\UdQ ^?f(rJ 1>PTu CW _wDss =RhTxI f0hab "+6U?% -?Gwv~ _Va7P CJzoe QsP2p L 0c$ ~bEqk KUHY:%x vZ@u(x a.YG!p E~2VT* L_fCO +iZii `|z(B Zo,I{ TBCJq p0#(1 -3W,gm) =_fWkdb fX &9 FDV?J riy=S @;ShIJ iRCCW$ |fyWK FcoEYVd` Y0j@k FMoZT sua*4 N=J$? %c2W,ft 2OxaT: Y3:)( J%v*a < N5= .Iv=O< 8g@&C Xt5HI C{dkj y(Z+U @wv.] !8&jJ  m.G> Lg!gy )WBhD$ j+8tM jq!I" Uk`_^ aJCjx XL{fQ ?s]qh 8$:DL 0$YJD q~dB5 i2XXy ^dB!* .dx&> ,IR$' Vs;t|n v*NM7: 398?[ pR#q^ I`C;% L`l2?] }}zW2% #6CH|/QUR 3WI^0 zYb/f J2);f)c ^5Rd2 ZpFhEYN eAS\@> <GPA" !h5@f hCF U CR9 h /[n&}q Pl'&f WBKe.n JL?f! HfHmI Wdu`x" -h/G0 "2k(1\ -nVnp T`jcJ ) _oa 'fRyS oH4Bi 'D@im -Fzsf vQ/h# %U_Er% lF|O! 36g I F|qK@$m #,Cc8 c<VGTH 8Kr!N o^21bVx 2d;~%{@ >A(GC o/#!d s@++[ ;z6Ab hb/.{ z!ypZ oz(0= Mqht. pBC4T v^=NJ #NcP  )mGG"3> LfoWI v Puw QpBEL$M ]gW]r (k\Ir` n$/O- O<xDZ Fs@x\ 3ah07 SFrcCD MF5rm j'}OKY .+sxs <p6Hm &X6@[ "(chL fSFM" +8_R,Mx y.N5YL- jt4y.P VG Ph l&.QD MlKaiy $%0W_~tp Y04ah) T!< { <qcnOh d`d%` h!+P: \\cP$XN E.=fy5, ?sa6Z/ 9Xv/y eyD ! \K>q( <%YS^ gr91Q ~Kvpg ;sC8;Y"> s0c|k K"KwL q1]0F yHN{< 6h$?8 xm!!V Uyr}$ h@+(!7 0=~Nh GC&n> uA^0\ ,Qhk7 ,f'ek8 "1D>q U97`| *zV1h:. j%6M6 }z~/_ g<bx= -S=nV@% `%?_m V(nti -~em'c 4mFj%v @=R-I (jY'L MzuU} !-"<f eA7S# o)]U> #a0)" qrBpB l7zFH J/0Xf$S 8bL!D Cq&z1 ]YfFD pUZ"n G)buK hJx.J oV;2j egt,0Lh IF+u< -p$:y s0Fp34D w"ohP lB=!O AB3q{ g*~;U hg63/ #Ra!|8= ,8q/SuP ZD#+h -P_6Q n.i*Q A<.76 q B9^ ^J"(= P5 F} &0>`)7T P}qLY :\\9(j L,M]4"@ Dya;z 0(..vM !f ds Edn8]@ lfzh& |3$fyu "qH|_ ?AN16 c,r,c& Wa<9!ws1 {6ryt Lx}*b ,,!Y)Y) Bfa}g m(2S* 5<BpFmmB mh>Vt\ K~MZ7 ][A.K*{ EKl;2O 2((U;PPdd y$[7P  *"lo i,=g" rpm)`= #e{L, byWW? "vN2'F1 So7dF bY;<) }U.A> -#3dr Rcphd }]$Fi ~/"[BF] 8-m3Z JxB8^y _m|.  3l*nW!U/s ;i+8a BVyG@ m@e)( u+M$B< )xqH>`P ]sM;C) 0BI0@ >judmb Dhi&_ J*XG{ >=$"{ %%oa\ ?onT # eAgH1F D3@&r$1%9~ 'Zh4/ XmO5pCH <s`YqN 5&*;~ 3VM^z3" 0)$dY Q/k`7; -LwmAB <w(T\H dGTULPK 4-[*. OJX1g R|F!= HXsHX 3fWyRv ?N2zIN=$ SHpd7] ~V~yY @:;Zu N6ORh eA7dn bscN` %2#z[ (v8#=c !]gO3xYT ,BIs> dd 8, =-'M!R ,iyB= O%>qh 83x;Hj: 6;#(i Li]_lj`X p)Sa< qz8:Mb k;OTv mA{S: lEzIj ?Z#<5 }JV`C ~eOog $$3~' lJ{MCs Vy<ZQOd )HycY a$7$v/ $d#b_ <<I\] 6/{;n jIfj\ O"N[Gk '"t(28w"d ,L?&| }0%U> }aAzM w%{/4 AgxFUu w`N6c) ^|ZBp 0[*lB :$D'Oa] a<-h~* Ec`O+ GVA_y /MwD* j5\<T 3Ar;) FrDWj7 Rgl$" ghL"l$ s08SHz r6PrZ P R\= m@nUP !gXRML T!nVR "C]i>N } YgN sgW*r bbQ`* qiKbo~ `-|Y+X[O 7"'np9 0[Cyb iw~Sl nSI2(`q 6!Etx|8 q0"O! `*K"&i 5e.pJ3 DBl%Y K&fTG PazHl^4 m#2Dv <$XIGZ o$;*Q $gAfd= uHK4 V `8f/1L%: `%Gr[ h5+O. t^.'1"M, (Fz0vz_ LPoW5 8MzRm }la(Ljv (lV}4\ !R7#c OQy$u pu =) CUX#T *Q1qQ .0hLU ,M4)j &D0dTv HV;|E3 @\98J P1v",X ;ch&N Q/"2 i q>p]3 80E5b 5V$4? d;f8' #dc8,[! 'D)ec @`~Y1J Ds?WZ P< vk*SJ (Kd}): qSQxI lfPnI @K?MQ( #vQ5$ )Tm6#3 H_Mn]B> mEbJ` r$;}2 >Zue1 ,9trf I+=sd 2^$t2X #G*Z}+ U1peA` p8LHKK 8!N&t- Nir#u B"%,_ lri[OG? #s^&w =!uqs Y[(g} cbD?t y&E{HmZ h4j0( h5ublUXH* ')f7=z  eFmT f#zW: qX@w<) jS1!!fJ B0'0( f)bn7 Ok0Fv 9b\[7FB! s!G|` faE?A ;ivNi 1fOJ:% ClST$ 1< T&;a- H%gH8 3Q.*Y uwJ-Pd X:PAh GX9&lu)$ -qDXxF<^ Qt9e<v  TJlE yB,}H ;g4H$ UKbG: 6yH~7k Kn%`) 0^8gPI fdgoA B.QP7 7+]&n&~ YUGR8 5bhI< x|\Gn* HV<ni1zZ a|^xA vg`W%. lf{y% vEx4: ok6 ( !M0|iA^ :ac+s v::~TM@ X7s#} f$Yh# p CtA G&A_)4 [|uJ'h9iv F}$Nq 4nBJ*T r,]xITFP smaZUl +kbjG1 @H)rA j%]jP *Roq.4 aq"%xcn i3b2Q ~!i(X*c RF~VP 5JA2)Yd (5a.3 e|4bZ d)<]= %9_l%t\ NdXbH tTaezN9 &BY5R zH0Dv.EBy KN+2c c{GY%s 6zo(UB2 )rjFR H2Cb])" "7-x@ 1h1U8 ngOd;C o4\WvQ ukUFI8!n2 .dv:^ NJ{AfJ 59IY0 C79"y x[7f' Y1J}N$ XF"l-L /- :J 5A:tY :TwBAts CU@ @  /ige^ ^p4r1 ]51!A 3*,UvC \YexH  fzb^ bj+}lp $2uuU`B #Xy]l Rr;uR $t@6` ~nZ<a (isSe ;1IE{ Z#bix T,O*S cGp^d hP3<d Lr,PX Eu`\x 4qmb!BD bV:eD Nsjy{ =b:J).i szr0Sn {4n>iU B`{~< !JvRwpYu/ 2=%\{_ (iU%rf NaR5/D cL0VE6 !9U\&& ?7l=.` t2n"  @bU(+ Gd%Bq $H8~Nw RH2-[5 hK~,Q O[L#n 4D@,P hJh`a i.Z(_,(% -H:_B$> `{$vW Y#1A4 V_wV]2 FExsQ% pYC|$SG 5orJb 5#yPZg m'Pcl 4O&<w3C &l(+K ?XupF hT>D3N# F.?]);*R C9FvL }1!Eb* SVF?fOIPnT q$!>2  !6/d- xI|A0d- WHE&0 R'rH9:w 'nw&^ `A+ji e9brF  DMd/% 2A`h]yE> a=#pt Npo1X eD"@E F-u_m 1U)3\ v L;1t +1s~Ds 1-HQW vFe8& 3>!}e u*TuU JL+Z^ 8BZ|th HN,0~ <p@Db ]~NyUf E@FKsY - D DeF `vdxo zA#s0C y4Jz| vRP>, JKC;N 6+'cw 7ZVh) +~IH( Sj]W$ J4p(V dH>Q^@dy# $M\9'r Ac$<$}Y =w{=2k WyDyq Y65jlSHY MT'"B ."S # fKCXrP IzKf$N7T 4j4X*  4L!4. 0l"O\ NBC?p +i0m' (y.!" }QQCu 7_!mE -)JzZr Z)|A) ZpqZ1 h#$uM 4v['h Hd!3J -&?9. WPvhH 8LQgax  2pI2n 6>W>tg  a.7  s?a!(v[ LV8Vi qshEX am!0U_  !".fR -PAGA X\h7R EShhm  eFc# {-HTh BDo]1 |=vc^H ?{v}) 6pqc\ 37b5F (aOC< gqbAF N#5%wP eB)4T !sNg. H66cy RVE`X <cTeM 2yUGd F!?"E 8#1a} &H2(a &2sR' U7:46 @SCiA p:4Ohdr aWnK(0xG zxde, W/@UEy 9"ZzM 0hitEH ~N9C{ P{T%SR j3aTP e0}%6 or"i/]! bKbw__2 }n% !3B ^`O,Q }(Q!24x L/oG9 88)Gq ][Y;H IGEcfz `8wU` 48VMuB 8[2PVr QGu#N +$*,k C//$v %!q.  ,RPEbwh K7T=N RLCXE R(Eeq/ FZ[$PO Md>rm @w){. [ ;y`DZ "#K(K 7T[!w <a,P% zg]3O &Hf]X I+Lq7H Y|}aX #&M<&E b7cvO G'"X" vI3!GD ~{CtkD m9%B( T#5jI <?mil O!3!QS- T6)Fb _S&Sa n~";k +JZy^;Z2 7?V-{ U-E7F .7=%\ q4(S) "DWrfe $O5ph ^$,dd L)XY" ,2NtFP 95-C( 2a2&R Cc/4ai AD2U- 5QT\(z _+. > )U/EQ6& qJ)'M |2Qnp6d @ 9!U\+u 0NpX/ hjA"b$ W?D|+AZ c8lUj3 p[Q}} )AlzVXI< MYPK@ vWJvWBz; \BAH  $I=eI hW4iq f'zBh +nHVn>*0 }{5pD '=<BtO =tIJ% y'y7yNl fL ;xEQ t80A8  *l.tR] BYa}- 9UXRnf 3X4,y* nxAMBc EVu1% Yw2+h E[LbM FAzl. ex'F.A >mk5sW nR#RZ. !3l?2. !s:+?7' Al z@ 8t7SOH; LtCFl U/+A*F EY#dg zaSJ! VE'Sj RPwkl u(EH$Z+ &JkLm uD(tD-4 #0#oJ $ 2Q*S 2f@'p& pEx)&K !=[!Q[!P 1omLr V#|G= \d%V11l K=oRB gRP/D 'z8FH8u !(0w= Z\T#-F ([q43q IlSkd C)U<6 jH?dW, EevVLR3 ZfB9T \zkPb hrjAl 494w" b8}\| F:tF> <q))v =8]rf rp/wB X@$1o aAibLC |!t{~k! ~5^3Q |t#EfnD M"SbV GBp[] m}7B. W0*yl H{#dPV ;`v^F7z ^>-NA_ I2\~"_" QM.qn !?2d/ 3LOu] $AXb8 "1N[U Ye9wq ;)^kg x*QG} %f(iQ q}_P: S&pnI V1^PL pa\2y (s`V%k l$e~D ,/%/:V 6VFEAS(GI !A/l1 PlxFx  lBWX (^JzFff mWysZ>h cOk=r( pu(P\ X$#(e 1 F[FvQ gIn_F )fo[! 1X!{Y aRl;P "R\l> (Zv}NV 0~H^T pMp3g  k1yN;2| _1k#/ g'.ZB )rXVM V*j@X 8\VB* sObGO k&%]># 36t|JQH $Oke( `@)iH:i Rmcrk |KqO|O "5#,L 5>AZ8 308w; /90;yp aA:?c6r> 2C_s6  `MtU}  qnE4O Dkr_: .S9f8 `"tc  BMt[b Y{@e\ -u,nA' V~"xH N5!HT -U$w2b `A[1c 77`J$gA D^|5[& 1@dp\ 0:IKG, DQ!0ip= |?Rn0> M*G4ER$Q&y 94It% @h9BH 1z}<A DLh~/ (P}o#OQA )(B[$ Nc&6UZb QWZO| {3v1& ~hcFR 0Nibxm _=F;@ lxA5rH FaI$% fMxX\ <`>:O " 'j1 !B@pF WS{Q= .41yPn+ 8TPl% 1,,,N q|3-O\ dN0?e{( <82.H4z UA2{*h f~{bA d[fjFZNKz zwggg :e0cOs #67\xj lx(bj }l1%, %ey)G bNEp/ta zCM0~ tvzc  : 6Cu c46Lz qptmB hGp9G cg2N4] "R%jIv .OY(IK{ s[Y"^ (Qx8= \q>(E{b &$2PXE *!7l4 (a@h(hVX3 :aMR. 8Z$GY @)ynE .KiX: 4$gU2 GCkp$x T\s'1 4Bde) jHB+6k <pX+1> Pm' y PC6*8 .K Y9"= V BO6i rv-&] nk1!X k6 ,) r)$:U @@5S8 XyB#N 'K~W# 0hYcE BR.rB N8p4{ |(m`) KW?Ua @2bNg0O3 ctOkg3 A&g;, blSWl RP&|z ty.nK j$y#X. 9lf;\\r wG?)ggI_ -zn#-=j f9}kE# ]>@V] fWegr /p4Zh; #q J/ vQfT@1 E|u9r2E }v&1qf [v@m?O Ltv"# Wy"Ws 9[:cf WL0/bRa9 #< 3F$*e <1UDP IER(aM> &jHDl KXG;y V|Z@9V idg6) 0\|AZ /=%7#+ uZc$L \sTCb 8s%JT &V0R6 f,7b\($ 7#HC1f ^#r"8R ~L#*b DJdn" eGE `/ (M]XJB) |:Gs` W@0]`4 G+"BT 'JXG_ o/n]K qA1]F $n]_|<5> (:#D* hOIa{ )vj)r 1=%ah M]uv' 2f5R\ gd'Vp b2\H  X#L`x fOWGb9 uOjbl @xk'' r(TGxEM !mlz(I P{7ht 3uU8#5U [V""`f' !T`2! )'`h$#h pxrHq rie:@aqq #(La4 ? EaX ?Ax:% __fk1 ONO0e K)>C# sj&fEgel kD"xOhD ;0+/[Dkp L1^$Xl 5xwqze (;}*3 K'bAL 1W?Wr $ugD' 50'"s LGVGI #?U@6 lSU4t M86q)lZ4 0:J[A J0xTK CYd!* GWr1AK &vz7D "q00" laby<EHX  #7g - TAO~4 kSyV%Y )%)Kb 7p hK C:$O\ }dE04 9[TR:o6 {Wnm( Y;E~'& &M>ZP Q P/0t {>LVm  4ez< 8<mx0 \p]gR u1-UuT mt/y @ #Z(0'3OQ xmBd  U$PVAX B&W>N cFn0{ 9QJd=, BFD59 <+I2tFZ nq,3t|  ZH{i> .dCr( HsnuV ;M9nP~E @e<n0 o<B*y Y2"$`6 WRLA^ y &K% :YA|H HwSh|S 2dhae TVuQP J1w86- 0K2yE r&jJ1 fIE5- ,Zf0rG -DP"m *N0B+6 "g2TB>  xJlEH +Il%I AK50= \+|!<n1 O9p4( B_@;1 k|#aB 6j EA +[rMG /s~p. X"-ar 3(`>$ Avvhi ~$U|' ,Y)w" ep9Njhk'q -Zjk- eggKkY Tjl'< qHQ(s 1 Xzjy 7_T#C n+|!k 6c4'8 &rC9cb &N2RK D`f0e k\*Q-RW[ <aFEC- $qs.BI n<915 fkS=c0=1u {zlvLX uG7]0~ xY~/BI  o0h$ {6hlPT G8*Qp ADj{*(v G\CUS +0h@6 gzW`O ?Pz1' &^`*Y 3qT@Pk- 0ew0%@ L^Ia!8 qY#MU v3&7 P w6IE*  x05c . ~ok >w@Uc w$"Y>K+ q"L5  JSu9U *}:~8@ fX1jC ![I`tq; {Zks= !rTqL g5Qqg W,B-/Z RG?}q _g5{/ Mb<,N<T ? B`S "!K.2E 1Pdjw VPaDI eA}J"Bf /G8^K 6l(3q (ZBz# 0GCr9 o{72-3;]R NoPsr%  TSs2k -&Oq:% Sb8204 xNe#!?  HNNA 2n9^q Z^z.@ {44+Z "'ohz~* #]dT9dV ~X&j9 <tOTt DdGyv \z'I?y x6g)J _RhZ{'  Q2M, lmN}/4 M}gA% vs_Ja u?wD@ gy_">x 4y,JE bgsn? q~upjE{e 6+OKJ r!j[^t K!&>8 :9spcG 9^icK )!Vd_m l!&n@ _Hr<bnY ,wgdT9 ?twu% $E8}qn, X1y-Mm pC@LMn T2zLB @0Zx7 $GbXs "[f?[q5U 8!%X2^` (ekl~ 1Uu3p, Qrf*@ o/Ecu #_o&4 Z&G$E8 O@*F! @'e^D  5'[tV H#ip q TSf*{ OZQ6]* LZT-NeK: L;g@5 HLFLB g:@SA |`3q| BSM=w*b 2VIryU  IL"8 < Z(BI!P ;9;p1H rAb9m 2}0@&H PnQu$T 3.{F, Tq{1r WCLJt  H(14 [tB*>B$ `:/K. {:iP} HSYN  f+`an !!k`5 |1e-( Z&sscM 6v8|H #wMT4 tqMFy DwP4DB 9pcdQ P10D$ !;sZ8 b[fEZh 'Y$pk 0ql/f t_yMfP @>RtJ D agx Ium`vE ^uh9S+ c\>*! A~ANZ U(>h0! `k,Tk-M e4spV@ Z.#[7 z$SXC tD:f1a l9 ou I L.E l{(g'5 Gky93/ Qk 7Pd BwLpG PZ8o1 O Nkf F#B0< hndOy p `Fe^o dP7!ctr P mM  IDc i mA4H&q2H% kFDp'  (N\'3 ye="E G6-<AN \#c6m wD{LK *k4n0 \s2K& 6VaQW '6FQ)* A<nA\Q1 ?_7L% ~00{O Zw7f$ 7h1nV lDh^2 P2y{" *p<u# 7#R'\ Po? A=vAa gM?s8PP&E# y4.5Q S3&"v Bg,BZ {3#{\ j)mln# Ep!GX y2 'S GnaD+| 7:@!" GMr+! V5$2Y aL 9e Kj1o91 ewwM> _;9p.e ]@~37 tUHE[ &-s%lY  B^L) 5\C*M yfMwyJ Gs![) -@$]\[ X8[=[ =4sU8 aa}b4 <a)bG aJDDW O&n{Vf D"6/zt (}^)g 0La_[5H %.dgzH U`bj&n F@1*;E \4i`? cE|KG MFSf? r6O!R@ `LF!% @x>qi ?(f,g 8Has\^ !%l&P8 >6%S0 Kw#?G *a:+$ rU^|; O)R=8{ OJ=SC "9Enq 3}l-d,| :EnNc 4!>BB thBS~ M|/|x gp@'  DT$[Y +z]3Gy 9"mc;Y 8wf?!kp OZPqA ~SQOE4xa F`Rad (\9}V z6i-) f87Rc j.@n* "vkgA 3EA8G ^HZ6R }\<[" Iuk/w"" ^lZ|-\ omX6A [vIK| ?{3;p h[sPf (-wF$b &O!P] [iNyj CF?3{ F/b]v jIx?9 oyCf# BtWd<+. ;i`XE Sfo_s uN=1H &`$,> ,Y\J^& 3?+`4 -+8cX C\8^= 84~)Fz 2WD2Z 'SKuBl <w/fA *i6qVi :J^-m )I5@Mn ")AEJ :EQFD !4@&X ->9sHZ DSL"Q 0UDLOZBpRa &K<JC o{a1[  j|>b $HpVa `-hD[kk y#zTy ,5Q=\+ rI%Y=D \bz;B% .:#qS S#p=0 )<a<K vMNuW /1I*m/ LL*h+GT %yQyD Q~@St <[3tg U9"pK v312= dJ#m! WPe*b !>Hh- @2 ;4 WI6xW !8$}1 j@Uo7 E'9]I8 /AnOt;> Ig'zr` :p)Z8[#-u "~z!z# 2%LP` mIp-^v \M6\# f%{!$e bC%g$ L~S": 9ytg/. Y >6vE Q`P=l [?El< d(/4- <lN3X AAj9@<MD_ Bby!1v K33de F[U|> ]5[d| !d|~U 7f9mf#C 9hV"H Mb|m>8N St9}' FoE|* XkVaX 7gj.PP~A 5fM4O B2U*$ E)vCJ &;:?/M iUKW6 )\@-P v&sSm *9M J< "r@rp bzH/- 6| Br j`f1%d $;UAvR J$%:' F 4jv; @&|f1 R "zbT $VI`k WYI+p5 M<qEb7a [$G<) b]wzF >VjP8 D:7-it )ytho1 lG#lx --3yf OCQLm ((Vi#j |pu+$ X0"dC t$s9%t "*25R(K9F !Q,~J V~TVE uA>d  }y'?  AP29#;~ 'xb|K{ wjdn0 3?1yX #]M&F 74m^j T*=(P *{4/9 *u@ j $2..W Q~(,</Q'M !UBl{V bK!1t Uljs] b&hp`BP #!J1%o- :Q(+M *RI0s +OKgO &R]On r($wE MIm=, F!O7/Q v#$(&KG HQx#&N Nd%J^B zHNxLL TKZ`9*k )ycpyb |-\Oz -'-8OB +$E%U #y~im _Y<ldQ 2\!)- ("Ia, WT!0\ E.Bx} \"xs:G cvj]` 6YqfNr p??Cv GNndA Iw`)B C#TW? TmvBHA &oO/g PAU,, >d8Tny 1^ZN8 6@D{6 $s]:1y 3UAX3 T7$#W -4rPP ev#]- of4fy^ N\U`: Sb1X4 /UE~L !~TFrB UpK`j R060^ YfB5o 8xh/(y\ rlU<Ga) `a<^R R2Vc\~ |'`AB ek-%` Er$I K` Aq%U% (*XzP {$b&&#fC4Y !E@R* K8)EGI e_%*H I*#_}fuIe; VmaZ^6 J/[q] ]Nq\dQ 3g4eH yyGIf 5>zqDdz z*f3t[P -@wgH *PC|$: Fi1E7 [^*r' pr*x| OB{vl?$ }  CYh ;*f=DK 9e00g*( b|Q3u5 @-)"4 3uNv( x2$~Rgo goF~* GoE@DHp !"{%| O7 4i ~ yJSI AMJZG FV#i3 "X.l* !6'a" w%r"x:  PGu@O QKfm* C?zJZ R#1/x tFOD& ^]X/*S Xj^0@ Mc6)L_? 7k2$\x h%cY&"" Ra(`u C"aaV eYYSAM G)W'4 /(fF{ 0 l3fg $;=;/ Q"3Wd pd'P3R W@7FQ#g7 EG)*> 3[-!5 zm"taG <*F_;Ad !>'?: Nxu04D lpW#; p'I`c I`Li@s oOX6~| zEkyf 4,l4$ JM@:g Cvc{J B\7>L 6BbXy K?n0F (MHDFoN }zs((2 $`XZ" Tb&_[ \du4| [tf#) kglkp) NvAJ. $ZT\/m -6w;4 p<(fb {*W/< F3[tV NxFLOa yEP*z9> jN6U` $Re*[ <MT)t _FD3= 3_A1A. *N:YW uE4vT bQ<gH qTA0+ +E7'` #+"by 3F":Y y`'8o xl6|x A*hVH \uK2e ui=7M a!fuz ?VAjt *4&H `R 8hs*6r \4ab=yB f-p1<Y r`R+$$H dT|;L F-p1<Y RF(UX8d I~QED L ;5T )|`JJ\ h+o{5h h?Iq+J :;d9r) ?/1<f UD$(x TQ3+vl KcSR] +"L|'=f :,^@Z1 &?As] Vh\`b gEJ-sXt pLZ%sD :aGt: 69r>`w p) V; o<Qfc 9|8bq g_i3N LMO*8 &T9S6 3u:lj )1{JP $$9jW ~&hs< \<rh  @D&Q. 21B@); #3+t1 f@jeop Fd%<?k 5pZq8E m2QodL q2nl49 W!aLt [-Xl6 !fdqb Sw"/< ;tA$(As x!CHO X.^`. Fp92b h\[,b X&3T$A 5M6m7 Ha:|`2 0qtuJ7 mX[SU q)#1M DCmlU?[? f(3*W &ypTd ?gxG` v"`LW E,U+G| n{LL! >y-BF3 !(935 1#Sg, -I+d8 P0`4r `#(eT u)wB9DB2. +]s>/5 4BOAJp gsZu5q l&y}l _Q&!( \ReFh elq*Zv` ,@KKAa S( k[ Qn9NY% [37^D sR{Yj *c{!2 e6bke !7C7k 1Iitit @E4F- <~b0wE TQ^22 -<8G[ 3bV"z 1aE$A tDCA!^ {'WE* LwfQ- /nU%2 Ckx{- L*-T3 fch>l J*>>DP +UhsA2X EzHQ0cpqhb 4=JR~W i;"nc# Mr &n=P fL+!HF bP&UWy ~Ow:1 #go,x j`6fJeb" vv~g&j ~VX631 TRvL*5oH eE^tY ^Bp:- mRG6ViW}2 x;yK< Emn;b z#B9m ?pAd3(GJ| !v|+; !8w85 a4"Xo <f~5P F$_bD qen#U 5 Ah;] h ,S.kBKR 1v,ZK `E[Rtg, rH5R" Q\t*M# A>J2X] G%pFL{ %P@^'C f+B3R ]ud2& rPC`? &KS % w3pA{ HYF_;(H -CNm!1" Z:idp/\ 7K*u1 |QC^TS u$<7Z <%G?r V]=4` F08"36 3`%7D( &JVFV )|b{s >&Y.e vI#[  !R@*n iEKpD ^5YYD 6wmB4 T(wvi T7HA$* O`FMrL' JEOSt ;& XYP)J ZB:5_ wbhA. Y&)J$|3n b$<`)y F"R4V FsND(1 "S|_T%2 Y3:DA y(y?NG8F[I[ ,NVDa ll`H{  &~kEw7S Ng,bGa /J@m7 rc4 c G}sB9 BSG0* %y(pp 8*I+R m;LGY qe#N# #;]T{ )@wXO ;?.U@ 6w1H} HHM@b Hc+Q3X #+&YfC y 0\AL [\1~z Pk\cr  `.x^~ nr,ca a9.l8 !7zDL sJDIH 2p0v4 [8-Q} o,W?96 QdA5g XlZcxK` %D's=G f\*!] tXhCh #%#d$D ,H;=R H<z:5 TM"u  ._ug$ Jk,t92! ?(Y[,Vg )]?%3 %kGR1% ]ux0Z* s a[x D}971 )5pwB 7UK16 C4jW} zs|Dsy 6T)tb) !;'_O ^0>I= 0I':- L&'r{/b 15OL*' hB9wZE iG O7 VM $dcd;B5 ?0mQY Z@+s1, ff0i* xn"Ue  X<~j: i\Oh?B\ mn%3O \3u~'6  t"AFJ Ex'n.== X5aqm `sOFgr  dU:-E mWp0J 2dK@- kNpE(DK Jj_"!kY ^bA6  6\~;b6 VV,@LL|$`z xxd!@ A8s,qA o,~zF fF+^P itKW? IAEFe 1"cW3 gppp5J <LYjy Yx7gII KKM.>A 4s/P{ AVU)72 [rD>O 6^,:6 /lpTN {T}hK5 l#A7w B>q+X PGO\H S/i0I5 mPS~xv~ 1(C+SH 5h6p1v GXt&C MlH4_% iwE$! 1am7P %5z DY ]!;5J4! 4SSa: Vj]?t WY' 0( |4HI@ ;]1H_L =LVy- CuozU nxAwZp T`dtS  ,hpF O8BAd bQ+p! 1qMC5 -}#LD /Mtd` Yfq4* NX!3$~ 'Z#4M ;+<B~ mn^x`9 "s<42 ?HS%r 1LLi:Je 46,KZ R8\E* \Vp3!y MZ#q] *EE$+QX; C#E:mN ?-85Y L2p?4 pY[NE |DC " FW9%T= _iZ|0 |.$K~ bu1i6  Y8I' :rQHP lx4wM} soi%18 Bc04^F @LWo(  h4@ue 0e@V@ rO`7S _=:D(_ qN[io |<1%? @ccFv i69mn 3@l?P :-79@hTJ _qnN| HV2tAI (jIad.7O WS^B9 UMO|K 00`uQ lfPN; -F$%` bbdt) Q)F6Ov +~$Qe Ho L2 .WAsE\$ 3&.6< uL.Cb k=J9Iy [1 ME lW)RC dmiex h"<l$U }dJ&l ^ZuP/! 6iPcNR ':fgw u[ `AZ qhdu/ @Ar^X f>23y D3Dxl #@te?S%L N("`\j I9FipRDm9 |O@dv )]=ahd /1oyh M\Bd/ *0PLC b9F!8D r*=c> P(6u~ %\3SD lO=fBu  F9=Vl Yq_ w  VW`~o dkD\& %g@{\ )Z4W| g1[@=s#J ea6x$ gb#<j  qm9%f t:bPy1 rLWX  ,1&PA l=Rxt z`$L[ @8dph 'H[@= \V4")< y%Qc7 f$lTi PovhO A0S#l TdA'l D8A;i ]v!CR -EL6^ Z (Di&b _?FZ@ ,HHE.xq6 \nwZB )hxV^. nKOfH V*W,* Z`.Yi ~ w @ A|#B?O E>U&U lP@nJ #F\0v 2bQ^) I33'9 }15}~?$Z T2Ql| L\PYN3* UU.TN Xoo"h 6Vf"y ~D;gX [j+%Tx MYI%6c S6C|-" H:GW- Yxlb< x2.4u kp&\q ,sde^ w.l+G TqaZjo 8`b`  ,5m-p Cz{keM 2Zq">c Nn(D/ n&RNN V)m5YA _9~OC eDnc;<[ e:wpn: hh=AM< c FA5 xCk_& y``.M> E,\V@ C|3.? AVp{R^ jwuXPg bM.U" sftnB 0$Zw$A_ uHa&8 gOtEM?N RD>(vN RZL)>  xldy ImP'< xa;p`Pp== 2/h}H V!)bI r4dJ` bB\QP\ T=T0G ,1"rb h%R>P EkUBl2 (XB3e 7wLH~ TD{X\, usxw1V {qdyfi6 6U%2\ \VwAQ th~EI !`o.FU tb0"J9Eri b-.#l !\Ayc 1wDZzT fgO!A8 w$992# m|#dt $H:eV @+(|j t].G4 z_H6{ 3U&`D|*\& y!9O5 FGQ4~ ipCkb 9pT`8, -fJgN 1 (8~ @1l#6u Z4:BBnE L'X(k K"28s1 !56m! N, r3( C581' XVR54I VL[>b Vegyg %b(0eM IMi&o c%]L[4 ii"&7 ti]n] w1Y:3h {~9%! W)@60 y1yZ<~ 4A` 8bUNr 'lN4R D4ddx e)>n2A3z@K P[9\av CPT:4= km8xD zV^]4 lT>:5 ?C5@r d7d8Az _'1@? gS2gP ~&^.W \D$rh. kc\Fl ]R=a# #&?IW c?!]dE dZ@o& 0=X*-0 1J\<a #,c$eM j"ohA dM'T3 Of{NO pB*5!c Oh<q:1 a+"G| Gay3q uYG:x M}y }D M-x!$ \u~+. ,b_sbKc D~'+Ana B1'j- yIGmP! Xuk='< ]@/!F `B/hLD viCPM v9tB--) 7~.I> {7KK" =377$$ %tjpY -;PBn ;/,aGJ Kud=/ m@/tf v]HNy A]f~6u<k B?m.A= wB{J` I#UoN2= Y!/lE AN`-4 ^!p{~V6/|w {T@L@X (0-5k&n# HR$.S vC"0n \R}VXF)pb @p+k\ O,2Gv vn*XN gNIgB :0.h3 ;{['Q,Q fPH#&- p*nFl e+'A" ThQPMv Yrkg0& $-A:)#8p \_5CA ma^ER .jTVh [\\`.C 7Qcfc Td:,u0Cn+!% F:1~|@ SE"D9 4=kr] (xv:d *I:-$ F@[qgVCP7 f=h-v$ /@Hl6Hp]. C^c . 9}Wj& &FfR24 %WHDc! AYI^8s72 MJ"Dn .%!O\C nj\<HR fO3s, _q|,< 'ul`P ;;L@P HKT=QM K#N~o KBU4E &HxT, ^6*~{>- (`~'2 :@(JE7 5]pH;@$A Ui\oZ  5Fp'y ;A'bt! D2)3P= ET4W$ OF'_$ sTn.R !Zx^4 i1qIs; iHH,=d v6l"QD 0VUb>P+%`V f0/5po riE@&OG 1Lb<&c |o&{=4 K'`ie MZvQC Zg!AU L7UlT ?JN@# 5P]M( &g\f` .!U,`A hKtAl& dwnji XQKu( 8lw'M #\eXO )**-% 45ZNk}n fi9_> v[>Em. KLShr % 11K "s %2 k`A\( t@"\X TE2:Sb d:yXH Pm6D' X\icu 56rW,| DEqD* K(xSH YJ\$o T,_W) _K n[> [:KW"\A- RJn`G?n qI4!o 5!M^\ -Qz!fl rX=)b>t 9y^|9/. cxfcvf\ ajn#L51 B9|?I w*J=Yo ]]VZ) BA3PN 3/Tk Z W+ Z, G"q5& i;X=t }nI]nIQnIEnI=nI9nI-nI)^I!^I rO)rO {)g$/ )yEC@ hOWz$ D|uD7*! `.$^8 cQkS6) Vr`8w TBt=` RMh:2 JA7%1 QHd`H lN_F) "vq;& aErV5x -mf!= hl9{' 'BuvO, b~D%> VRd!Y1 Cn$aS< r[xqt tD6D4 Jf|95 Ng P3" /`*?2th B@\hxk <Ubor OJd@8 `Cf9X <1x Q G?~Ln L_;ia L2Irp 0cBb}l #D9k5 A:j2A $w(0qX C`tBf +@0n$ ,A;[S uc-Y# 3Ni`zN $]-;M*! Ka_bMn  f$;Sr D(9r0L DXMKu q><:0 Zz}=F%b /TdF- rGy'PenV }gu's "Eac*S; #DV^1o jX[1/h =(hT(Aj\ 9dDM @O2p1 QCiy_ Zh,>LM= ^CaQE n&_z( HnNZTN klgY# 2k".b l#T}[ ob):] (p<V+ MxmOK N|4i@ :C6ato -C$z0 %OHYCS o(~o, <C,t% V4dn-  [|1"HB l1W0g ^Re,r -.4T( )M~Q" JH3,$ L:|2&+ qg\[M `ipq6 W`& M @\J/) d%ya% wo|Ps` )_*;C{D !WixXD HKqBe %R5'y  JC8?  .jFRVfEn /W3,| yIg'& G`-II-c E?]EU:r> )xgE,e~ z&Ym) 1hu;B w8.L1p"i ,HUIfw Fo*H> E$z;~E Uf'H=c PL@"b6$ %%M8[ bg~GN3}xN! haEQj@H Q_!s- X2] y ]uo>v"a QunaV ]g|cH =.=3< ~qL8k 5bR,X %b2+6 Jm4Z( <QOWIf '|Kj5 k}WS&Bs I XXz i0+{bt @Qq C% IJu)W6 <v18E {:q38 4:.m6g $A`r8V G(LH!ulU C@aPj Ml(]=\ `uwm" *R!0wx Z` \K 7v);3R +2m04 6EC9Z UYLR c~ G|m) e Eh5%@ /]qm-   v1@ (#}(Izs "5b0- Pe\Ph z9*x5F =!Y}gk] _qi>+ 2N;/"R eY_#E a[8\}M _lTkc gQa,8" bsS)52 0>K7H M\$yjI %kvH- Qb,T\H vYR[Q .{Bq5 }H\U[ xg"PS >M.|4 pxHvB 2`*-8 nZ+|c T\w:e{5 =qLZ? #FZ`_ BfGX~, \r7H)  rqSBM Tj+.5N #EGka| i)X@< 1ENVP< TS!XF Os]UL _AT {]  -1[c&cJ ] KN0 Z>46c i-/mIT U\.J]1 O_Ja`7 <I"%gVo7 s48_EN) (+Fc/ lyRJJJ O4aFv _;D'NQYS 4iB;F V(FCJ :LK4"4\ ;66;s ]cxCl 9S:(jv8 !7= M YTM?Z h!!05 l[:c[v k=8G*{Q %pkb@ BV9PP +q0mL iR"dZ(G /C1wWI bvf]44 Lw'r1 J0Aw' Ecj=F d\XB4E w\G'@ j4Q)^ <)&`@ >u6vGA u?3%# &J{ez0 C%J#! N]=bu }sJ;8 (Y2hD1 cY/xQ~kf4!& ;Qe|2. k #)p}0 sIn]X Fu=QVd -QU(5 vipqng H'TW5& TzUE^ lHgje U>"e&| 6v].,@ ^mre  i,[e" gx-n$R* oa}]z? l}#b&; nV]$w KlzN? 0NL]&TX$) 0e D!HY mn~@4 2]+@I. Sf\]j Q/'IK ^XHNHc 7=v Cw |(jf  I,ZmS g_M=t DV19x y6"u=h@xaGo E+l>5 UJRd0lr 5r {n xM:%>M; P[C8A |[ {s gE8l3 \S'v7@Sr `|MfF BSB/1J *`'BD ":c0Q RH>v( 8f#Ee '/7#5EL >"c@emfo4 {\Ib/G E'Q_c1 1$vvZ,W 0O3pD \(CPD E]-8V !%%@I,0 65i0$ ;rhUM zaQ|z _dp+{R 9Uzrn70yu  X i- ?)O1t _.1e` w*X-* jMty\ 9C_{hw MB9>G" 9 /Q?+ qE4BP VK&+f uuo>/ 8ax,RQ T=Vm{zD '.ii& 2+!@+9 mP{b)!& +p7X! 8 @/a _b%+W a!}x9!], zNsz! A1J<A O3:]>cQ DKD'2(4R /_|H$vT@ ,xq\X 2%_n7 V?TD? 1`Ivg Aan9K 'm(SkF Eq9Is &zYZ@ q,t:^T (C;L4 o  t2 qEi#< c:hFjL  ap]\T@"? \nB)b ^chOyE xl]w`$ '"Y," hH2:NW^ @l#^- 2BjnjpMIc |}HII{ u.tJq U?TmP5 Bs$AYXz T-p6Q Jr!dE h@>COa o3&z{ "vN>l @!=ZS dxb6;m ,pyo3 ?Kh,LE )]\N<@q Tk&~uX L~&k^ bikl) )7(.b a#8W3< jG>;K LAxe.)u Dt(H% 2I./R .=7-0 2k-o% 1%I~'k C$H!0\! fM}9` ~:"l&o <p2Kf &1GmP^ ?!u_fn CE:VF A].%2 $m*+d "NXP]h 4vXx|OY ?q~[H| {c?t9c )teK3 1!ep!e} Yjfav knvi%db {`|Y[f Py0Kb+ #Dw*x c0!Ep! <9h"^a {,quP j#L{ u e+WP)i4ma L-450 _(sS: K]4Dn :!(z! B5I#& iYuR[GR1@ {BCm6Ch/UY4 >J#3+ T"h$4 *n(Q1Bv 1?#}O d[iqW%D >r@O\ &2Bo( `@G6|xk 6i]N' E7OIW t4G3Zcb \ia.3 0q4O2{ rT|h) &"xq' )%'3Y Obb(6 \Q.T~ Z?6U/2"I j#AUgY M{@PN 3<&]g0 0Up*# 3DLEl8 |/XQ8 7p+|h FFX@U G@O6f 0p|fb l"6ox'& NKMm@e.b pe]!% QO&rP `FEG( Tr+NF k&wom Wc5t[ |5~>: VHrHs WO3vSAD ,=x6n iVGZt|F )u<j91 O8_TQ J|]I; xw<ed }FLK~ TD\g\@ I,x8W kCn!y{Zz`* 3d}9%z[r 7m~7y 2!`-$ 2h^gh 28@J*x6 mHeaA9 \ m->C>H v@ (! ]xNI!; a2=vip&Q 1Vb QB 1z`A" cI>GL KT`Qh Sp}?a MTh$ER T}$>z xHv>=9 WBQ"E_J ( gN~ ^sOQ. 6,0:B #r&e7z\ X5Rl/ a|qnK ,6[CX gfskv t5fVk{ lS*oJ6j eT`h7 &]Wo) :&s,u9 9K)<v Iwy(m -2(AK/C ivz"[A /@{p>c AHXbI b}qQS W?D$P *+/t9M#gA 'd'C)  fVKu KOq3*H @hZ2' xcG#v^ Xs]nwY x}iKn /jmt)E N=7e%O zbOKw qTG!L7 #5F:"nf AgS&'@V ]ZPSqc y;c}7 L;T,D5 \)abB kHj8| RODd.w .<VtX fXc8. !s@lQ Ih27d _hs2I BeS*T Ha["_ $o$Am z9'i$ @5'y)B B)OzH a1bbh F4+Bx ig1q>  |ICV @8ZAa *xZ$rFJ]HQ \\EQ$ L8a8 ! V0}ap CsAn' 'eMdn( gY{(G | @Oa_ 2mu[0 m@qn~ )H!J1 =8~.|# j!e#5y 6\K'42 yA,J^ 3;IN8 $mVq65S zz!n^ d}$Ye "M|>( H5?HU >5#u=b )=@i! `'<A- L uW/p ()u^lcQ \rAauU $C'2p~ %uqKw h84Bz E/0iZ @#vXG HXarBP U_5MH gpx37 lDOBbfz f<>6q /)hEh8 T~Pb, @,Qs# P)XJK) Qr64E8  N0;F |* dq3 mUguyA Pw8OM Rmlbu S<~mT *UFy* #]xQ!N 7s8 ( 6Bdq5B Bh2w#o I4wPS c+hbf PeM.D0 <IgM4 oLk?-$ y<~@mKv c,E7H^ ;T+AD] 4]7$W s"t6e <R]Oh lTDOX &!5{0 rW622 9U;TcM BUwZ+E e:kxV3 A dNn . ^lpm. - >6[ B<F~vwg 0i xL7Z3 _pe~m! p5cQ\ `$8Q} /atHt" L&&Oi SPdru, (ZJvi Fmp%k DxzgnFG y B.r H4T0{ X(@b[Z [^+`s[ =4HxX?X FSU2Y, DXgIg xok8f VvtuI x/1Mu  ~&^i 8MXH7 VRj+j(2 m}LHy GTY|" ^s6)n- F+&H\ |ikub wV:@.9k 3HLAAPC  ->UI> 1CCmC G:x 4 i7 f| &SFE& 54Lz= M8F:y5.8is #ws'$\3 seEAv ?l|DRyh iF$C"V @@V&! AbYbZk pwepW( OtA^T) :y{75 !)z I KlD*` %/p8" V|!x.u9 ma<() .iC&i c%7vK &+=D*R d(r2N[ xb:#FNNX@ W0Ja{% c?)mx2 cy7%fA{ M9N2L KU9r.8=9 6?BCm {RCi{ tWy|- FtBmHG T@^J( r1FPb DWI%WZVL BRahl iEEb6Eq ;Mob0G rd%Y f p2/^C# QOCPF n"Ii\A  :G!f xX4V] JeS]iP -4n()| O6;`gug LOSA[ IjQ I +@QpZx, Y]_om DiX~Za vk#]$ DdZ)P0 yt"q^V lsgt.P ]|$,, |w2*[ }Mu\n_h 0K_u. ZrFrh  _G#;6 #$;u) S@,uA Lt,g5 MtZU<! 5YAkj eW6~AE 2No?@' 4o0Rw eMZ2' Sd_5*M% RV kE` Ov:PC B1+#<W  3'dKI }9:et $;+2C'i 4%gfA ]TqyGf Os0vQ` _ySY> GV\U3 qy&dV n2!H' C!_Dm ]8AUq 'AkJzd v`Wag ;ARBL$K Sir2Eq &b*~i 2TuiX E\IaSNL &k.JII (tEvn KWb6(- N:5RHL @aY X a#Bv> zA#l-)T 8`e"x z7>(B *b#1} YOZp6   oCrPN 9^c"w R|QZXEh T_I3^ X%Kb!B `CVEt2>pS[ Z5(PT ~K(oC iC{[q #GV\r$ )fG0,H QJy : |+}b52 v^ADr /O$|/i Q6qlL$ 4+=!A U`953 Cj\It-D Qt!B(6 CWhh!&5+ !%_Oj'"8j} )B8s+ s!qg. U4y+t <u`qM %JY{+p 8DALK JQU#tleRX FP<&Y ~0}aD *Q4,SR lnQ@( X\&oB PnK<Qc r5M/D W#! / R]\2H `yQlo]> :>%~B. PaNT& PaT%Q ua\e;  J13d Rw%A, 6 k)` Dbt*JY= xHo2H H\ZIm CL(j!3 "@"Or2 4'dHN rdxp{8A ^CaV#a Y(KC@ wJ{&9 ru!5e &\[>/w $Ey"+ :Y'w: Mb;,L Yh*%~B +_OCs Hao8Xn ;,!;. =ZG0m7X \,D'& >+)JbD H/Z9Y$4c |Dr~J ysD:G *5!K, ;Kh#l?I7]< H>O_4 Pkq+" O%\aE X>?F% X1#0( !adAe *"OO^ +)@fi )tNcY _XG~@ JD/#yU B'@i` q68y8 OJ=Cv u`Q+Xb '@ (j ]nL8` |qT_m zr#M9 )U5S9 PYw: Z wCF<< ,!cbPq0, u|"m$` ,C@yh #`Wb?{# 5Vx#AM :;Z4o s8rRCM n5/?U :(( B qx#z[ s\rVq %H_mu /=M1G]G /*?V` F-<xS m,@g) 7uV/R,} pT.D. TU$ v IbBt7` (5\@J7i G@TV*p Pl vHfg=m" agtNVsc k),%a xSKP9x. MC"G^  KX^cy OH{v+ /Q'.& gy=W& J'Yly AxAJv 7+Y!G o,{Ji *)cGP +>W9L UOgn`ZT 8Wfs m A@IN2 -hQ() M=.A`pY $4<Fr  c+)" K%A@.'? !<N2{r' GR/\6@ P0bDH W->$l M*S/+ H(@q~b -,Av3 D)ag( M6EgB bn3bsd m}D^9 QaNB;4 viSN_ cj#Bh- %/IPo &6S0Lb &q?#"w F+"@_ z"F`3 O}k7< &P*{b s.U}18 vO](G Q!I4. -%C:zP U \7W BD2(& fD4?E j!Q;G  vNas 2)a`J [WKOj #?45aW 5bjA%y Z:R#/ 2+0?Q h;*O= zAt6p\n _=)nl\ */Uiyn VIeE4n ;/cB)6f J8jjF &2/"0 /.aYw {HANA rMIqj1t [X<kh 5F`GW5F @n_ya +c/D"% ;A=Kjr ?4g#m ywHc_ &t?AP s=FYu *N(ap ee"C zV '58$F1" :$:0a5! OQg6d -a"-k g"vNq ^+bkg< ^)X*2 Wv@@Pl# S~9_3p (E:An%@, nH+|# 2'7vn &g2,_ +%+*$$t >R+hN G~c3i ,!+pV k%@Cy KX20P 6.xII 'Xp|+"o-tk Hh"f% >l\Z6 (7XvP x= nc ,&-KI] T=DKN lio/^ N$)$_ O{ H< t@Q{&) fdA<T &}~yn U=}Nt7 !L>"=/ 024dd g^8$I  mP6A [g$,?u KVtXl :"u8f& (~Ns2l @qx"Z vn8Mo &wpwn` mUk78 $~:,Ab @LUGO ;uO.bU ]D)Y0 Gi;fN "I#n$ -PN9Rx  ~;&f@ qzGAd z6UgR 'hAA}Kd j>JLFi0 PFD`U ")|,6 O""rV6ES ,>U&R 9b\[7X $XESB aR%"F HP=Md SjI`H F7tG) %T`BA n\UdQ ^?f(rJ 1>PTu CW _wDss =RhTxI f0hab "+6U?% -?Gwv~ _Va7P CJzoe QsP2p L 0c$ ~bEqk KUHY:%x vZ@u(x a.YG!p E~2VT* L_fCO +iZii `|z(B Zo,I{ TBCJq p0#(1 -3W,gm) =_fWkdb fX &9 FDV?J riy=S @;ShIJ iRCCW$ |fyWK FcoEYVd` Y0j@k FMoZT sua*4 N=J$? %c2W,ft 2OxaT: Y3:)( J%v*a < N5= .Iv=O< 8g@&C Xt5HI C{dkj y(Z+U @wv.] !8&jJ  m.G> }_GDxy KQfuj 9a}eqH !.PLg laIfot #7a!C dW?I' qE~KaM RFamkh TO;,j SG~(M V-Wl@  [,F=) A5@@DWd ~j[3'W _T(d* +;Bg?u US8%_ P3Z}$h J3_ 5"JX9 i./#`8 %F`bF :2'bf .A4?M 'T5r( 2Q$)s QtS&HS& \|Rb] G35CT 5\W/FK 9pFP  PTZAS lV]0o 2qfa .Q ~:3WJ x\<".4 Ss(8b EYzU! pDAW& BAL3K  =<&Q (zj>` 1q\*U :7"5$ Y.$%L Y0u_T el^NDf t0fbY TAH*i{ 9(X=?a  |;?S #y_G* _/`q2| 6Ia1? y6sp_ ^[<PT% d3F}x:H feKAi r>H7oIvv 69XD+ +EBPA "A|'8S Dem#j dg.~Re aY1#+ 'kuDD 5Pq,f i!}E|B V:^F?z rsN7FM Z`sJA fuVnQS 5&|DcaF K~E~\ _8c6kmv bRupN X~}P` uJ s? AvqD$ @1L2i IVpf<K; U[.8@ @ dhx%P'38 ciZdY h"Vwn >Cs}bm+ dgP8eT ;Gp]B" LImT\ c$7;R? !a 5@"z c0kFjW U?hWp(d b]rK6 WRAx;] QHKRFL m)jW2 ~G_ B d3ee" &p.o9 SG#Uv  $||n ;J5Oc 7/sz2 FQ1wv J)MBO~ K!gv\T ko O) 8'LhQ 51_,"v f>!bWE lWEE" P D%5 f]SR% NAlTvO 3$z\1 ;t4tR GTM58Fs{14 pIp)G C8s.  J5>?s1, jH>k2 #Kyj,B b<(OUx z(Mp  S[- `O G2M@j Zk{N27 qa=oZ ]X&1K7J+ b-f`A P~tYT -o|Q. g~;P7G,& +2jJ3@ Y3.bm B3z-{? jc*Z9 q/%+x Ps<,- 7RbSAzP B6[1e "~):! t) Il p_nJl* ts8`! Mi`7_ tzov)E &K/8; DTac'w3 vYnR# "-uhD ` ~jfC C]<to sh9++ =K,q  !D3E<4 =N3>c _@~$4> s`3~%G! k\_zA e1KZe ;7?}C U4yU( 2l{,8 P^G%9 cX~cl d-)V] vcEOa ,zsW-4 weqejE /w/<d hQ,0B >-=9N !M28D m9s1K ]@aCnUP@ lfr#B %w=:-h N&XQj "@.xa MTJ-c BP!?n m7?b% MBd=k $|*k5 :"9'VB i%eg1b nT%nZ QT.RO Nso:e f~t}" $%x~y_ kbmi;" x:WMY< ^,_lM-E */L,` at@HP vwpW6 {v;wA Q%8-R[ YEp L *y_j6)U4f: ~~NQ. ]laYm`f :HP]B +(^7hMP -x`44 /#)?n cbEe1 jeqBQ Cv{ue e9"]z 9rdyi pqbek .%Z|= 11mAn /)B-) phC3iJ e:NPjCX]Y 4&V,V ,X5e= ;&\SN Jpq%Q )~ay` LG^oi@eK K.{-! !xd9^ Yc`iH7 p4<HZ [#!CmOa 97fkA= ;s"1D aLiu1 ]Lie6 e; 9` VHaI! *mV]! uQ<B6 #:gp| QbyTr <HS.3 YWH@~ nM=]mn  Vx'bY X9xZm[ }2hJZy eK8\'b (.\P( q6O[GmrV 5"8_:0j P>iWK =eKl`8% x#`hD hN!N4 ]e\i(C dbxBy Rr)Q t$) NH's"Pdb uAGKVe T0EmU$O Ne#UFQmS%a 9\15MUD $T7VD V8E;IBM h!<h# P0"@G J=},rVH SQGev I<Fb8 Tg)PDy Kz^{. @rEX+ !T@3L Y!r0A F5gF4 F4_F4GG* vM~0x&v@A` JVW`VL iI `7 lLl,E WsTYZ w6Poi 'c!kc 1R,1>bf$ K[\($ V1d(C $G9"9 rJSX ) U[>R3nnX TRb|P cPt^#s <w9X. "CbCd  +n<M -I"AL &ofOl WY-nk l:1Mh 7DiMP PxF|11 |]8tU >bRg.m <R7B!Z O|%igw |#B"C [Neks {[=`hR= L{CA"mcCQ] #Qc$$ pO(wj QEbl( 8F^2W =)8[B:: ">9`}}( %(e?h ygTqrc wlfc)5 XRaHtPM 7/oT<X \I:\R RIKV[ N'BREMF .?$C:OG [hf!" a]&yd_ F(ZOs [6>z> H6*." D?P>C :Y!Jt "0pv= PH|Q~ TXP> % VP=[C W)0`H 423h}0_ |D`qp RF*^_ y({.0 G}9.! PN|U| fEm 9lY1:=tS bi\s( GTO5e DLvZ&Y @Z*&: |N;%h &7_O' Q)hIUH .h'G3M %/$&= "fHHU ~C!&d Je#@dD u>{Mb ">,U) _C4<h l ]QwF`|It *4G^C xhQBs ,b}+= FZFIF 2`L0'JE W/.a0 %sj*o i'6rQ z2>DWt K'0|6 bED.C Hr+2t FG=~r' :MKwc G@3dIG |1*!b# oFj)@} &B(?g1 ]L#P:b%R ed;": f5.00 @\1AnM Oc4Q% lX?bs obK.8, yJj'< v'5c @ ^X\oG e<F2O 1U0XJX cH1_% Mq|h- s4<]) HM5)4CT -?bG& qtA8o U]H+q %{Q*8D> 0YqS7 @"I*_w  D3*5M <K<M'[ LuP`8 iO,6K7 p_l'WE %jn9C !EGZQ4\y $^"(Y|W )C^LD -i8m= 692Nr 5aqgc GOQTr-9 (FV,I XDTK> 3TU+Jye a&`4V :0E(KAj xP!qt bBSC" \.W[4 &K@Lb o/V6=q !BP_K) 9v^R$+ zlwhb& OM~<h ieyV,Zq (pyIA$ a@Qnm B$,[y ,P[O)E 4fdeAh V6zvw {||zY W-w^ Fe !J0!HC) LusC|P }9qJt i),tV DYb8fm %duUK +!K;- PC)[E/= X=(~2 J7`7n $iHs`M OoU^$2i R4Y7n 0 {XD tv["K5 >/F$Y v>[-A 1ss5+ &~>&) R`yExg kIt*hT jBn[4 kz6kA Ml*jw Ms?c( QG,JR la)TE gj(*$ HL>~G. s]eG` f/S4j hjz3~ $)DEZ6t +|A14 J+uF(  G0Y^e^ Uw/-MU- mRe,A Xy9Pv`<& 0x_`N &(j%e- ^%VRk2S VJip+ 2qWh* #RI}x| RZ%t=C W,)hX &&]=ddC 9.fCX /H{pc gY[pQ \@%`X, 9{g,? EkLSJ C_fXW/ 8k4@u [QNq)5&7 [ulQ} z.yrY -dac:- SrAqBE CSQQ3Q x}xubM ]2:*)U FL@kB #iM++ G_tJ"' A2hcL 9RYzz "n%F![ PBCd_ i0#I-O z6t0? y#x]L d`cRk 8` %# +mm4J <63B*7g[C 9b\[7X T.o7(lK 4+_B"y X2LfACL DvG`|E P{Tmj5 QV-3$ S#P@W @SQh@3 wB}qc B D e,a ml>g$ ;h>iO Z0Dq8 G()(e? U*E?D $4$H~ gkVCr9 {n8:P+ ^-DKY=M eg*k{ #-Rx[g 0^r4! ;iWP1 `PE{H .XF$5 p*(-;J a4|L| Xx&4\VB ,F3w+d R+O@@ $Lw[8W| RRg8Z q/YQL>~ "\SGyXVF NX4yW,3D b_m;Y PhKHu^ %ydq7e }'4HrN Y5B&9W HMN:g3 iLXlB I*(n-H K|#cQ@A 6u )SJ!J ?,vo> lfa6ZH  !VQT ~sfJ)~ (CZ^Kfy p@"9U !HDD =w 00Q"\ YtKh3 p/RMJr Yi~\X`4 G@g:#@ hf<i<  7p-E )@wXO UZhRg :K}c5 8V9X1 O%G(: Qb!UI3 BG5pH e7'4? /\Pzv |lK>4 MP|2(l WbHBQ ~RyZ, RH#=u AF9Gh #Z,rZ AvYW]Q]' i6kS0 <X\bg@& $yZXp5 ;M?%f ;B-aWD t`s}W k>v?Ox &~UYc= %p]YZ j-5Njj gAGJI bEe(Mr NK&\Ub  yyf3s ;ZzH8 Dq59% ,cWb+ &nrs\ ~Yu!S \qt*b &]]FQ /}:1q E7(3k! Z4O)BW y{2C<. g,i*l g+I2;$7 rM.;m; lYp!N| gm?c8 rwBMa@a %,9k#; pq8zyq Xg>}ty I2I*55 R<eFHs !f`Q; U\Yn$ PT4u} f{BnI 4-|!YA w`f\p #9p>;0 bwqa^CO {(;&:0) !-1Yc~ Hakyw 2]8z:  aBm} b",ZEWd8Pn X91:yO @8F5t <| =H @laL}M I zVL' q;]wW !5A2i iAfaM XTlsJ $61pZ DV;[B onse] 2:: 0+ S8n1- p8Ii<V r8T;L- @FSyc R8~0HJ r~wM| ;! `d __`O. 20ZLh Z.'{q%l {S& q B-]4[ aQ&51 aj<\H OnR?D bVlkT VpW?i Qg1#K $j1a' fyFDD }uOaS PtA|! N/Bt{ {E3T4 R}F-a; KgU\+ 0X*QI dcALC grUl7 Fi&B| %9V~, ,cJ"@ FdKW] bO7;rp0 !`MCp nd((@ \dY>9 RE9l2 E;=(A F.",K K`=,0c rP 2Ev1Uy c;*>__N 4h#po :[_hW pba#8 0faB6 rY$x(Y5. 6*|tZ b5dH3 E^AJ6 AtIwH &_1B- &Haum 8ndNy T:$a@hr w`{u6 Z^dT{ 7~/sVJw b(=++9 m63Yi_ V-x&1 iE%EDb o7X~# O$R=v 4XCVvt :0`9)= qHw'% =]:1s DQ:QP  MdPWie Y%Y!,i oUP3- w1Ue# A@4Ya W=,=) DTJQ,q X&cg" ld:);x EMz;Q A~[aHq c"V,J-#4 4ral3 8n\7-? ;PyP~ \c9E` rIr,R O<!C& z3p I", +^QK^ d;Wa@> 8laT~ 6O|<$p <V-S8{ "a=,7 S[!V$ VKa @t  qe{HZ8 zYSwdy rM0=w~ 9SA-r ^M8hq [+6KlV }sksV: !Daq; cb@aG `;"6)m aYXyJ| O#:#@ J1<1L !i8A| RTb#$F "L4(@Pw6 f.$YS s]vp7 TRI(^ Yzt_bq %#'I@ kyTt8 3x_B0 $08w7 %EeQb $<iTr fnXk+ >TnV1 / _ M~ b`WHy >mbhM4 ^o-aJ (.T"d bpP)E $B5yK UQTl! R@?ecs.D RrT{tfGr 978WcU -.PZ( DCApp- /[X:% I,u>pn_ ykX0I 8Q9#:7 Qd=*:h 4`}i.0  ~Pp&) @0bYlT8q 'J]S, Gd~.:( zIj]J;~ *[6t@ET o%'+ak &K*jP 5PB!= u{er'Z5 }jXFb S+q)# xs(,ZC %Tb3$-0?a [{v JC 8C!Za Z<`YQ \#@BM K.@Mx5 U\:s9i {v*fS E26?X. `-}{*O UV(s@ &v]Dy %a9Qc Io4Yv p|f(fp B;TH: }rGU2 <}izW Zwg45 | :h9 <GLVJZ VV[VH# D&CaRS #9c{$ =GD+[p/3Z A=H18 d3a!14 G<mIY Ag59" iTe(e s8v1V9 Ey18X 1QX#e K&#20 L<1!H[ n7,=J =eYBH B,n)`  *w)q< 51O-6=X_ u1Ebmf NxJ^J s>7g9 H:d37- H#b|] qO5Kz. /ggm[ kh~O(% h5m#6 9-1UJH j5<"+* p@(.s d&Q.p&LY Ud7ac |_BDWg0 <lK(4 .xy3/L :$)1r Ke{pa#W taO"% a'Lz^# g~ha{ KLf@s {e;Ys )"IHz" .#9*` a?L6^ (@L91y Fe/J{ 1m1D<SE x)+)z8 QbIref# .LO{) H"br5) lE &e dONRvr t4!Y-9G Y)J[| `er2PR  89pO"0 4%zCUK ,a4E[ :Wa ) aBBY7B[ J6MOCv3 [_zO v D75E:
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktools\Producer\3rdParty\doc\word\How To Write DirectMusic Producer Components.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Internal How To Write DirectMusic Producer Components Title _PID_GUID _PID_HLINKSHow To Write DirectMusic Producer Components Annette M. Crowley Blue Ribbon Spec Document.dot Annette Crowley Microsoft Word 8.0@\\RED-PRN-16\CORP0074 27/MC2 157.59.24.17 Ne01: winspool HP LaserJet 5Si \\RED-PRN-16\CORP0074 27/MC2 15 Letter \\RED-PRN-16\CORP0074 27/MC2 15 LetterIDATx 7:DA-(! )"rz*_ CKa5: ]NNN> o^=99y D0:FJmRj +krEn <{."G J%(*j: H+e5:F @5)O1 ?/o`p b2i;+UW- !%]5: Q8~(z& k~Mwt BA:q5Z g0<yZ0Qm 0Dm4u $5<Bc<v lcz`< CK'3uL.S 5#w6ot 3Ny4" ';/~'r oq8>a F)zJM I?q|"qp C@Oq! OED2Y 9~gpZ5 FW*$v zf=wob 3F%uU F?tn." 2i={N8S) 9UL;~C [*3.L @:^jG+ T>Jr= $Got73u` d"rqU :E5:A 8>aC?>- n"L&S t$Id; *]-NZ $fMgk uQitezV Ko}6.c d[$s6u C(A/<G ;*u"c })l>* "Tl^. IDATY ?zv$]'B 1 z/G \d:[f" d^jz; 1SGk3u >RSv0 {izG=Q *\!&~ Bgi'f c*2_L $GotKc d^mz; 1Gnkle ^n_<"f ewMSG InP3uX. r{IWb +Dh_  9_jk$ ,:IB% U >uh .;Z|^? U Tx/ </|o} &1k./ <*\mP ^*BYuN20 ->/^o ~&}v} .VRyG tL.32NE pav'u QAGquHqH: 5lumoB /n-G& +j1cA >8}!/ uABZD py}Pn uvln} YQGM* s&_iw SWm4+u Rs?r} ~6Zw<) f[AA. 6b~ye RDTBz )D[@W zD4!$> @mtg=, 111ts F.bvm hO677 OItkoO[ tC]*+u `*/eKmt ntg=L& ]Kxjv ptpoy Cbh30 R;u:tM @5fTd 3vyer IDATx 'NdFe t|,O~ :eLeb |(_=+_ ~cO}k ^({eM cnXYmV UJm7T8 6%ew" :1}R6= L9?#_ ^}M=Y?X? &iYSO )PyPc ]4r$W <sED.| rO>+\ =t"Q] Uj[cZ lzoK$ ^LlDMV iUz_s/ T:){% Hcz9) H0ZaL :syJj f+yM' jQc$b ZVh$r +,_y[ Z]5p( Rp-wu VbM=" _)ItoK JE'fc IhXBzK %s~N| xM`rv <t`Zt }(r rW/9xK L|W+7 k\wyM ;&8LS bZSSe2_ 0YW/_ ~ws)o @S|c| ]bziV x7ZvJ ({nC}: Gyi&/ K;M_OsB rd[Hg 0RU|_K 3C@o8X_( G26kd Da1k  ztrk  F06kd lnv6)*CPr QQcJIUL /q`.q_" kvTCh 7y(4< 1T&e] )>+_23 M1Z#5 ^n.,5^ )M';uXI IDATj mS!f~jhA0 Naz_R :wOrm ~DDdn>. "&e>+ ~jXfrzw ,`Ve^ 7[b]Y fG5Xc4 n>[6R fGyMl }%'Ag K$N<r fG5l^G 1^SDdV;SY xM=FSD 5k)3^ <y\g"" HsIJcJ "_l>7 Hy4-r 1^SDdV&N c4Ed. 1^SDdV 5kib/Vr l-UoV 1^SDd l}Z&4^ "_l>7 Y-r)u f-j/R ->W#5 wZmI# 'rkr} YmbP( lO<:, u.B6X yk@uK H(<ZB+ q{w*} w0Rl, }a8"#' A)|IN  "W/_ X]LTG bDD1!A (7aM< (>NvQl bcwcS+ sJ_3:v j!<=K >!n:>\ ^IOzVHP' x3OOp WNdvfo A^qv8 4HAlS vvgvfvfvvOP) />]%i n-qS+ j{?|?;4 }zdh  by,xw V]hTG #ZGgk W]H\G +4ynoQ 5_P4l q%WC2 ]z`ei {>;A  f-f5R C+tAw [i Zl" mjGDGi N%H>F wjsg>= vjr7ySE@ eSY;8p! UgG&R*( Sj+K] z-WKj @~9/' -aINaqV` %r_l# Vu9/9 yDNQr k?<>MK lMs@j QzG8Nw &A3jS I= o_b VMl[E |"$_8/Hl2 J<WZ(. 0Vb W *#bst2 %`4dSU TA_x, Fs1*c `-LgD_VgB_2 VAl[E e\5qd[Jr ;Ng1f JwFbN ^*uc|w9rnwy vX,$`-V 1}fkJQo: ~7X71q Kb8#< j&z<$Er z7XW* 5q=Ni>b ~6}cL gTlK4e S"nxT VMh\U y3w^_ g,ux; fqv_@ @Dv#x+ -W'N/c~ 0Pw;R* %u&j3 Xb^L. 9!OMsj >'^t( lD-F~D ]$l@pYTD sg$f0 DILb' *K}H| X46j, 77Y>v)lu.BE O^T(F >HyBOU Ob4rj zZM7N G9h&n &08^K7 (SiT!> :'@?:+ zo`5[ ]()Z_ R:jj0 bD/@, U1t^l oHf9  gDD%" tC$Mw Sccl$S -MI\z c:f*u jpZM^ 5$R9c X;~|a 1}w{- )n!7\/u/ UUTSRQ :L+b1=n ezg]K H6X1u dL$OW OOOKLg "|b06 Wau9lq XX)q, "l{5l| ]mN)0 4veMM G{IYk -Dy_X v}?\w rsP~zX d~Mku ?2XQaY %i2h1~ soy#t k5sq/^d: "`K%- yj8r' 7Euxau ;mPGr HG8/m IDATx WpPn4 4Y`oI\ ,2#[hUh |#.9b( n'.)O MIDATx Ca%OFI :YxvE ?1=[C7 ts%Z#VISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-=(P Q0*30 =l#1U ?6_HWL ponent O bject ordMap D esigner (9eBe.ocx) 8p5ptt-O?O_OqG ohIDMUS Prod(faoso l center op leftVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-"=(P :y0x1*y0"y0 q0J,30 lC@1\ 5f_xWL onent Ob le Desig (iboe.?ocx) H@AQC '`T7h4Cf DMUSProd Xf g*O<O@ ]_Uf@x_ /odPor tNotify ?!?3: l center op leftVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-=(P By0:y0x1* y0"y0 q0J30 Componen t Object Band Ed?itor (ianc .ocx) t]OoO '`T7h4 hIDMUS ProdXf g$O6O W_Ofr_ K/]/o- IFFEx l center op leftVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-=(P Q0*30 =l#1U ?6_HWL ponent O bject gm.aDesig (9dAe.?ocx) 6p3prt -O?O_OqG IDMUSProAd(f_oqo l center op leftVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-=(P ?0YR30 omponent  Object Conducto (uf.dll *1x** 3`TCh4Of hIDMUSP roddf ,/>/@ T/f/x/  n?ductor ?$?6< l center op leftVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-"=(P :y0x1*y0"y0 q0J,30 lC@1\ 5f_xWL onent Ob  Designe (i`me.ocOx) t]OoO k 8e) 7h4Cf hIDM?USProdXf g&O8O Y_Qft_ M/_/q- /odPortN otify l center op leftVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-=(P Q0*30 =l#1U ?6_HWL Type Obj dMap Fil es (.cdm ,G`p) esigner.?ocx) ?p<p{t-O?O_OqG +$_n_ vhIDMUSP rod(dhozo l center op leftVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-=(P Q0*30 =l#1U ?6_HWL ype Obje Band  Files (. bnd,C`p) (7aEditor .ocx) 5p2pqt-O?O_O0qG +$_n_ lhIDMUS Prod(d^opo l center op leftVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-=(P Q0*30 =l#1U ?6_HWL ype Obje DLS F iles (.d ls,B`p) 7`Designe r.ocx) 5p2pqt-O?O`_OqG +$_n_ lhIDMU SProd(d^opo l center op leftVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-=(P Q0*30 =l#1U ?6_HWL Type Obj ent File s (.sgt, (7dDe signer.o |:t.t =p:pyt-O?O_OqG +$_n_ thIDMUSPr od(dfoxo l center op leftVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-=(P Q0*30 =l#1U ?6_HWL Type Obj late Fil es (.tpl ,G`p) gmentDes igner.ocOx) ;pzt-O?O_OqG +H$_n_ IDMUSProAd(dgoyo l center op leftVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-=(P Q0*30 =l#1U ?6_HWL Type Obj e Files  (.sty,D`p (7bDesi gner.ocx ut-O?O_OqG +$_$n_ DMUSProd (dboto l center op leftVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-=( =l#1U ?B_TWL Condu ctor Too lbar Obj (4f.d |0t$t 3p0pot9OKOkO}G jhIDMUSP rod>d\ono l center op leftVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-=(P 32:?0 32rW041z ?@Y@jY@ %e@~_ ework Ob ject (DM USProd.e 7B)30 @@ECn@ e_w_En  '_*9V W?@JhB 8_JWP xjEQWp} 503j2 B_S?W `xupN Ooaoso  ileR?efChun O/OAOSOeOwOq o*o<n ?C~:`2 qrArRp MxbpKO]O //_A_S_ Loader C/U/g/ opSheet/ l center op leftVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-=(P By0:y0 x1*y0"y0 q0J30 l#1OU 4f_xWL Vi!rojec t Ob[a ooterSce nario_Ex pansion (DMUSX`d.?exe) t]OoO '`T7h4Cf __Wfz_ U/g/y-  Channe lName ?#?5: l center op leftVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-=(P 322?0 32rW041z *iPhQ =l#1U Node Ob ject (Pr Folder Shoote rScenari o_Expans d.exe) PpPag eObject # (File) Monster Cave.cdp .exe) /#/5/G(H wu$`R _@G/Y/ 'o9oKo 2nqo2 =oOoao pPageObj /&/8, 5OGOYO 3h8Q& 3/E/W/ `_r_= R?d?v? 4<0"zb0" nnelName NBaA% xNode Ob  (DocRo terCave (ChordMa pDesigne?r.ocx) Z/l/~/ >?P?b?t? o[ok_ /$/8_b /aoso pPageObj PersistS tream!?3?E?@W?i? O1OCO UOgOyO >oPobn) (x=p&O8OJO\OnOB _._@_ ProdTime lineCall /0/B/ OS?e? ranspor ?Ojjc0?B? *o<nx  Notif  eowo /oAo8 ',8 7/I/[/m/ ^?p?& ?nOHOX? _*_<_ 7X!?3?%O7O HNode Ob ject (Fi terCave. ?NO`OrG _+\>c _ K/+ "I*@pPa geObject 2ODOVOhOzO }a6"5# 09/K$ BW/i/ "v_/h W8?J? =OOOaOsO OK$rr #rrqs BoTofo l center op leftVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-"=(P 322?041: r32rW041z _041w l#1OU ?VohgL Editor  Object egment:M onsterCa (VtDes igner.ocOx) k R(u pT'x4 xIDMUS ProdHs E?W?i= OleObjec j*!o3oEo YBj@I S?He?w? O$O6O ?/?A> 1_C_U_ OleCo ntrolo 6OHOZOn _,_>_P_ OleInPla ceObject #o5o0 '/9/j >}%.?@?s 2>2O0 1J8_0 gBP2qO Activ `j_|_ l center op leftVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-=(P 2?041: 32rW0 +D!3Dm%S3 m`Uzm`rm`jm`bm`UZm`Rm`Jm`Bm`U:m`2m`*m`"m`U l#1OU ode Obje ct (Data LowLev (Styl eDesigne r.ocx) - Only  showing  first Pa ttern -  SProd$ $O6OHJ{ `/;oMo_m `pPage?Object fx{pO TofoxoC )Persis tStream ?%?7?I? O%O7OIO[OmO O*O<ONO" DMUSPro dTimelin eCallbac @X/j/ OfoF0{ _?q?z ransport toT?4 OOaOsO otifyCP_ ZOlOG /)/;/ onductor Tempo @_R_d\ uA Z?z ode Obje ct (File Monste rCave.tp o%o7oIo o5q<b aSBRC %h?z? IDMUS ProdNode O(O:O U_g_y_{ nt V@) 2)r{2 ageObjec ^opoP? k|@A, cRoot) onsterCa (Segm entDesig ner.ocx)pi @/R/d/v/ ?"V-? P.o@o IDMUS ProdZ #/5/2 "/"@  !;(P 9 H<A"\2 pPageObj O?a?s? dP76" 8@[OmO iPersist?Stream DMUSProd Timeline Callback L=-O$ ~dZ0WP> aBr@B ?[?m? O,O>O ansport %?7?I>AB 9_K_]_ Notify ?%?7? I?[?m? COUOgO{ '_9_K_]_ O/a/4 /#lI3o EoWoil" of?x? 4?F?X? K_]_o_{ 1`8u0 f2{Bf2) N/`/r/^ ?0?B? 6oHoZk SProdCon ductorTe o"o4ox `Q[2R _?q?" a=hR` CbTrCb) +_=_O_| IDMUSPro dSeconda ryTransp G'PV] *?<?N> @hfn@& _21XR KoCvfo  tEdiT l center op leftVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Page-1 _VPID_PREVIEWS _PID_LINKBASEannettec D:\Program Files\Visio\Solutions\Blank Drawing.vstVisio (TM) Drawing  Arial) Times  New Roma Wingd gPJ?@ 79?)f D-PRN-16 \CORP007 4 27/MC2 winspo \\RED -PRN-16\ CORP0074  27/MC2  157.59.2 ?H-=(P r322?041: W041z _041w )`r)`j)`b)`Z )`R)`J)`B)`: )`2)`*)`")` )pr)pj)pb)pZ )pR)pJ)pB)p: )p2)p*)p")p Node O bject (D ocRoot) MonsterC leDesign er.ocx) P2/D/ MUSProd` 3oEo  /$/8_b vDOVOhOzF /[omo `pPageOb rsistStr eam!?3?E?W?i? O!O3OEOWO >oPobn (x=p&O8OJO\O _._@_ MUSProdN otifySin Node Obj ect (Fol (Styl eDesigne?r.ocx) >d} Q o7?I?[?m? Motifr >/P/b/t&A >L+2RB+2\OnO /%/7/ o(o:l bKb\` l`U?g?y? 9OKO]OoO Data) andEdito0 _f/x/ BonusPt (Style Designe - Onl y showin g first  Motif -  _'_9_ @9%5w G_ Y_k_ MUSProd pPage N/`/r/ @gRS1& HOZOlO~FA( S2F%0 #_5_< "foxo R9RJP EXZPC/U/g/y/ /HlKR\bKR '?9?K?]? ersistSt Yoko}o o#o5o& DMUSProd NotifySi uu-~p#O5O @oRodm B#|33 BfSFW [rlpH gx|pZ 5UogoyoY#  pPag eObject ?&?8?J? O&O8OJO\O nO o1oCn!8 @?;fF 4OFOXO# Persi stStream @b/t/ h?z?@x DMUSPr odTimeli neCallba `OrOn ransp `OrOM ///A/ Pk/}/ OdNotify E_W_i]Gz_q o o2oDoVoP @f_x_ Conducto?rTempoN :/L/^/p/ P3">6 kO}OB ;_M_T R "1  RRRcP sP\/n/ @?R?d?v? ransport OLO^OpL /!/3/E/W/i/ @?R?d? _y/)_ `RsQi_ pJ`_a jrvrt Node O bject (F older) atterns (StyleDe signer.o Hp^p! t`_r^ QXIDM?USProd O"O4O@FO (_:_L_^_p_l _9?X+ ?`Fwo l center op leftHow To Write DirectMusic Producer DX7 Components This document is confidential and contains highly sensitive information about Microsoft s product development plans. This is a proprietary work owned by Microsoft Corporation, and is maintained as a trade secret. Unless provided for under an appropriate Non-Disclosure Agreement, this document may be shared only with authorized personnel at Microsoft.  Discussion or transmission of this document (as well as any associated discussions about the contents of this document) to any unauthorized Microsoft personnel is specifically prohibited.  Complying with all applicable copyright laws is the responsibility of the user.  This document is Copyright   1999 Microsoft Corporation. All rights Reserved. Without limiting the rights under copyright law, no part of this document may be reproduced, stored in or introduced into a retrieval system, or transmitted in any form or by any means (electronic, mechanical, photocopying, recording, or otherwise), or for any purpose, without the express written permission of Microsoft Corporation, One Microsoft Way, Redmond, WA 98052. Microsoft may have patents or pending patent applications, trademarks, copyrights, or other intellectual property rights covering subject matter in this document.  Except as expressly provided in any written license from Microsoft, the furnishing of this document does not give you any license to these patents, trademarks,  copyrights, or other intellectual property rights. Table of Contents  Introduction to DirectMusic Producer DirectMusic Producer Objects Overview Sample Work Session DirectMusic Producer Module/Component Implementation Guidelines Getting Started Nodes and Editors Plugging into Framework Functionality System Registry Exported Functions Implemented by DirectMusic Producer Modules DllCanUnloadNow() DllGetClassObject() DllRegisterServer() DllUnregisterServer() Introduction to DirectMusic Producer The DirectMusic Producer authoring environment is built around the concept of a visual workspace.  Typically, the author uses Producer to prepare content on a project by project basis.  For example, an author might be preparing a set of styles,  chordmaps, downloadable sounds and segments for use in a game. Producer allows the author to bundle the above mentioned content in one DirectMusic Producer project workspace. The Producer user interface is designed around a simple Framework.  Like most productivity applications, it has a menu bar, toolbars, and status bar.  In addition, the application incorporates a tree view to display all of the files in a given Project.  This is called the Project Tree.  The larger area to the right of the Project Tree is the Editor workspace.  Double-clicking on a node in the Project Tree causes the Editor workspace to open a visual editor for the item. The Project Tree manages assembling and selecting the files and objects within a project and the Editor workspace manages editing the files and objects. Project Tree The Project Tree displays lists of files organized into one or more projects.  Projects appear as left-most folders in the tree.  When expanded, project folders list the files and other folders they contain.  Every Producer project corresponds to a directory residing on disk and contains all of the files located in that entire directory tree.  Adding and removing files from a project affects the contents of the directory tree because the contents of a Producer project mirrors the files on disk.  If desired, Explorer can be used to place files into the directory tree of a Producer project.  Both Producer files and non-Producer files are displayed in the Project Tree.  Double-clicking on a Producer file in the Project Tree will load the file into Producer.  Double-clicking on a non-Producer file will open the application associated with its file extension. After a Producer file has been double-clicked and loaded, its node will display with a plus sign to indicate that the tree can be expanded to reveal additional objects embedded within the file.  For example, click on the plus sign next to a style and the style opens, exposing three folder items representing the style s bands, motifs, and patterns.  Click on the plus sign beside the band list node and another tier of items open below it, one for each band in the style. Double-clicking on one of the embedded nodes opens its editor. Upon creating a new project, Producer places an empty project folder in the Project Tree.  The user selects files to add to the project folder by either creating them or inserting them.  Producer knows what document types are available for creation and loading and presents these as options from the New and Insert Files into Project commands in the File menu.   Each project file may be saved individually, or all files may be saved at once with the Save and Save Project commands in the File menu.   To remove a file from the project, the user selects it and hits the delete key.   Editor Workspace The Editor workspace manages the actual editing space.  Whenever a Project Tree node embedded within a file is double-clicked, the Editor workspace opens the appropriate editor for the item.  For example, double-click on a pattern node within a style to open the pattern s editor. When an editor is activated, it in turn activates its menus and toolbars.  When it loses focus, it automatically removes these from sight. Each item has a unique editor.  The editor for a style pattern is a very different piece of real estate from the editor that is used to edit the parameters of a downloadable instrument.  In fact, the Framework knows nothing about how the editors work.  Instead, it relies on each object type to provide its own editor.  This is facilitated by the fact that Producer editors are all implemented in dynamically loaded code, called DirectMusic Producer Modules. Producer Modules The Producer Framework (DMUSProd.exe)  provides two relatively simple sets of functionality: Manage the visual workspace environment. Extend the functionality of Producer by way of the module mechanism. The vast majority of Producer s functionality resides in Modules.  To encompass a broad range of functionality without imposing unnecessary limitations, the module mechanism is remarkably simple: Producer Modules are DLLs that load into Producer s process space. Modules are comprised of one or more Producer Components.   Producer keeps track of which Components to load via the Windows registry. Producer keeps a run time list of currently loaded Components.  Each Component provides a set of zero or more COM interfaces representing specific sets of functionality.  These interfaces can be addressed via the standard COM QueryInterface call.  Some of these interfaces are known to many other Components, others are not. Producer provides a standard mechanism to access any interface from any Component, simply by requesting the interface by its GUID. The Producer Framework intentionally relegates all media dependent functionality to Producer Components.  Even hand shaking logic to allow multiple Components to use the same underlying music engine is implemented in a Component.  This guarantees that the Producer Framework does not embrace any specific media mechanisms that could not be changed, extended, or replaced over time.  Producer Modules that manage the editing of media types, such as styles or DLS instruments, typically group all related Components together, rather than placing them in separate DLLs.  Though not required, this can make internal management of tightly coupled objects easier.  For example, the different objects within a DLS instrument really represent different chunk types within one file. The remainder of this document describes the various tasks involved in building and integrating Producer Modules/Components into the Framework. DirectMusic Producer Objects Overview Producer Framework Object DMUSProd.exe manages the one and only Framework object.  This object is created during application launch and exists throughout the entire Producer work session. The Framework object is responsible for managing projects.  It owns the Project Tree and implements IDMUSProdFramework so that Producer Components can plug into its functionality. Producer Component Object Producer Components are standard registered COM objects that extend the functionality of Producer by way of the module mechanism. These objects must implement the IDMUSProdComponent interface and understand the IDMUSProdFramework interface. During Producer launch, the Framework object calls CoCreateInstance to obtain an IDMUSProdComponent interface pointer for each of the Producer Component CLSID's registered under: [HKEY_LOCAL_MACHINE\Software\Microsoft\DMUSProducer\Components] Producer Component objects exist until Producer shuts down. After all registered Producer Components have been instantiated, the Framework turns around and calls each Component s IDMUSProdComponent::Initialize method.  This method receives a pointer to the Framework s IDMUSProdFramework interface. Components are not required to create any other  standard  Producer objects.  The purpose of a Component may simply be to provide functionality to other Producer Components through custom interfaces.  However, IDMUSProdComponent::Initialize will more than likely create one or more of the following Producer objects:   Producer Menu object, Producer Toolbar object, Producer DocType object.  Producer Menu Object A Producer Menu object defines the behavior of a single menu item.  The object consists of a label, a context help string, a method to initialize its state, and a method to perform when selected.  A Menu object must implement IDMUSProdMenu.   After creation, the object s IDMUSProdMenu interface gets handed to the Framework via the Framework s IDMUSProdFramework::AddMenuItem method.  This method adds the menu item to the Framework s Add-Ins menu. IDMUSProdFramework::AddMenuItem provides a way for a Component, that otherwise has no UI, to hook into the Framework.  For example, a Component may want to place a menu item in the Framework's Add-Ins menu to provide a dialog that can be used to setup various options.   A Component determines the life span of a Menu object.  However, a typical Component using Menu objects would create its Menu(s) and call IDMUSProdFramework::AddMenuItem from within in its IDMUSProdComponent::Initialize method.  IDMUSProdComponent::CleanUp would then be used to call IDMUSProdFramework::RemoveMenuItem and delete the existing Menu object(s). Producer Toolbar Object Producer ToolBar objects are not tied to a specific editor.  They reside in the Framework's toolbar space and are accessible to all Components via custom interfaces. A Component determines the life span of a Toolbar object.  However, a typical Component using Toolbar objects would create its Toolbar(s) and call IDMUSProdFramework::AddToolbar from within in its IDMUSProdComponent::Initialize method.  IDMUSProdComponent::CleanUp would then be used to call IDMUSProdFramework::RemoveToolbar and delete the existing Menu object(s). Producer DocType Object A Producer Component can add additional document types to the Framework s File/New, File/Insert Files into Project and File/Save dialogs.  One DocType object must be created for each type of file that the Component wants to process.  These objects must implement IDMUSProdDocType. After creation, the object s IDMUSProdDocType interface gets handed to the Framework via the Framework s IDMUSProdFramework::AddDocType method.  This method registers the DocType with Producer so that it will appear in the Framework s File/New, File/Insert Files into Project and File/Save dialogs. DocType objects must be created and registered with the Framework from within their Component s IDMUSProdComponent::Initialize method.  These objects exist throughout the entire Producer work session. Producer Node Object Producer Node objects represent a unit of data that can be edited and moved around within Producer.  Originally, there was a one to one correspondence between Node objects and nodes in the Framework's Project Tree.  However, this is no longer the case.  A band in a segment's band track is an example of a node that does not display in the Project Tree.  Node objects which display in the Project Tree must call IDMUSProdFramework::AddNode and IDMUSProdFramework::RemoveNode as they are created and deleted. Node objects must implement IDMUSProdNode.  Also, since Producer does not understand the relationships between nodes, every Node object must take on the responsibility of managing its own children.  This means that every potential parent node must implement IDMUSProdNode::GetFirstChild and IDMUSProdNode::GetNextChild for the purpose of enumerating their children. The following list contains interfaces that a Node may implement on an  as needed  basis:  IDMUSProdPropPageObject, IDMUSProdSortNode, IDMUSProdReferenceNode, IDMUSProdNotifySink, IDMUSProdNodeDrop, IDMUSProdNotifyCPt, IDMUSProdTimelineCallback, IDMUSProdConductorTempo, IDMUSProdTransport, IDMUSProdSecondaryTransport, IpersistStream (required by DocRoot nodes). There are seven (7) types of Node objects: Project Folder, Directory Folder, File, DocRoot, Folder, Data, and Reference. Project Folder:  Project Folders are the left-most nodes in the Project Tree.  They represent an entire Producer project.  Project Folders exist as folders in Explorer, and the Project Tree provides an Explorer-like view of their sub-directories and files.  The Framework creates and manages Project Folder nodes. Directory Folder:  Project Folders may contain one or more Directory Folders, which are nothing more than sub-folders created for the purpose of organizing a project.  Directory Folders exist as folders in Explorer, and the Project Tree provides an Explorer-like view of their sub-directories and files.  The Framework creates and manages Directory Folder nodes. File:  There is a one-to-one correspondence between files in a project and File nodes.  The Framework creates and manages File nodes. DocRoot:  A DocRoot node is the one and only child node of a File node.  DocRoot nodes mark the place in the Project Tree hierarchy where responsibility shifts from the Framework to the Component.  DocRoot nodes must also implement IPersistStream. DocRoot nodes are important to the Framework's own internal representation of a file contained within a Producer Project for a couple of reasons: they provide the pathway to the actual data in a file, and they are used by the mechanism which sets up references for the purpose of linking files.  IDMUSProdDocType::OnFileNew and IDMUSProdDocType::OnFileOpen hand the Framework a pointer to the DocRoot node (file) just loaded into the Project Tree.  The Framework expects the DocRoot node to provide an IPersisStream interface so that it can handle file I/O appropriately. Folder:  A file in a Producer project may contain lists of objects.  For example, a style file contains lists of bands, motifs, and patterns.  These lists are placed in Folder nodes.  Folder node objects do not contain file data.  They simply represent lists of objects.  A style file contains the following three (3) Folder nodes:  'Bands', Motifs', and 'Patterns'.  Folder nodes exist as children under DocRoot nodes, other Folder nodes, or Data nodes. Data:  Data nodes represent chunks of data within a file.  They may or may not have children. Data nodes exist as children under DocRoot nodes, Folder nodes, or other Data nodes. Reference:  Files that may be referenced from within other files must be able to create a set of DocRoot/Folder/Data nodes to represent themselves in the Project Tree as well as create Reference nodes that other files can use to set up file links.  Reference nodes do not have children. They are simply nodes that point to other DocRoot nodes in the Project Tree.  Reference nodes must implement both IDMUSProdNode and IDMUSProdReferenceNode. Producer Editor Object Producer Editor objects are standard registered COM objects that manage the real estate used to edit a specific node s data.  Normally the node will appear in the Project Tree but this is not necessary.  A band in a segment's band track is an example of a node that does not display in the Project Tree.  Editors are opened one of two ways: double-clicking their corresponding node in the Project Tree, or via the IDMUSProdFramework::OpenEditor method. These objects must implement the IDMUSProdEditor, IOleObject, IViewObjectEx, IOleControl, IOleInPlaceObject and IOleInPlaceActiveObject interfaces. The following methods are called when opening an editor for a node:  IDMUSProdNode::GetEditorClsId   returns the CLSID of the node s editor OleCreate   creates an embedded Editor object IDMUSProdEditor::AttachObjects   hands IDMUSProdNode to the Editor object IOleObject::DoVerb - displays Editor object (OLEIVERB_SHOW) The Editor object is destroyed when the editor window closes. Producer PropSheet Object The Framework creates and manages the one and only Producer PropSheet object. This object is created during application launch and exists throughout the entire Producer work session.  The PropSheet object is nothing more than a property sheet control.  A Component uses the IDMUSProdPropSheet interface to interact with the Framework's PropSheet object. In order to use Producer s global property sheet control, Components must create a PropPageManager object for each set of pages that will be placed into the property sheet and a PropPageObject object for each object that will be displayed by those pages. Producer PropPageManager Object PropPageManager objects define a set of pages, or tabs, to be displayed in the Framework's global property sheet control.   IDMUSProdPropSheet::SetPageManager sets the current PropPageManager and places its pages into the Framework's global property sheet.  PropPageManager objects must implement the IDMUSProdPropPageManager interface. Producer PropPageObject Object A PropPageObject represents the data being displayed in the PropPageManager's pages.  PropPageObjects must implement the IDMUSProdPropPageObject interface.  Calls to IDMUSProdPropPageManager::SetObject set the PropPageManager's current object so that the same set of pages can be used to display data for different objects. Sample Work Session The following example shows a Producer work session in which three (3) files (MonsterCave.cdp, MonsterCave.stp, MonsterCave.tpp)  are open:  What  Producer  objects exist at this point in time?  When were they created?  The remainder of this section takes a look at the life cycle of Producer objects. Application Launch DMUSProd.exe creates the one and only Framework object.  The Framework is the first Producer object created during application launch:  EMBED Visio.Drawing.5   The Framework object exists throughout the entire work session and gets freed when DMUSProd.exe shuts down.   Once the Framework has been instantiated, DMUSProd.exe calls CoCreateInstance for each of the Producer Component CLSID s registered under: [HKEY_LOCAL_MACHINE\Software\Microsoft\DMUSProducer\Components] CoCreateInstance results in the creation of Producer Component objects.  Producer Components also exist throughout the entire work session.  They are created, of course, by the DLLs that manage them.  The following six (6) Components were created for the work session illustrated at the start of this section: The Conductor Component coordinates global access to the DirectMusic Engine for all Producer Components.  Components wishing to use Conductor must call IDMUSProdFramework::FindComponent using the IDMUSProdFramework interface pointer handed to them via their IDMUSProdComponent::Initialize method.  EMBED Visio.Drawing.5   The ChordMap Designer Component handles editing and file IO for ChordMap files.  EMBED Visio.Drawing.5   The Band Editor Component manages bands.  In the sample work session shown above, the Band Editor Component takes responsibility for loading, saving and editing bands in style files as well as bands in segment band tracks.  It implements IDMUSProdRIFFExt so that the Style Designer Component and band track can be handed an IDMUSProdNode pointer to a band node after handing the Band Editor Component a stream containing a band.  EMBED Visio.Drawing.5   The DLS Designer Component is responsible for loading, saving, and editing DLS Collection files.  It implements IDMUSProdPortNotify to receive notifications when the user changes the output port configuration.  EMBED Visio.Drawing.5   The Style Designer Component is responsible for loading, saving, and editing style files.  It implements IDMUSProdPortNotify to receive notifications when the user changes the output port configuration.  EMBED Visio.Drawing.5   The Segment Designer Component manages segment files.  EMBED Visio.Drawing.5   IDMUSProdFramework contains methods to enumerate the list of instantiated Component objects.   After the Framework loads all registered Producer Components, it turns around and calls each Component s IDMUSProdComponent::Initialize method.  In the work session shown above, the following DocType objects were created:  EMBED Visio.Drawing.5    EMBED Visio.Drawing.5    EMBED Visio.Drawing.5    EMBED Visio.Drawing.5    EMBED Visio.Drawing.5    EMBED Visio.Drawing.5   DocType objects exist throughout the entire Producer work session.   After creation, DocType s are handed to the Framework via the Framework s IDMUSProdFramework::AddDocType method.  IDMUSProdFramework contains methods to enumerate the list of the instantiated DocType objects.  In addition, the Conductor s IDMUSProdComponent::Initialize method creates six (6) Toolbar objects: Transport Controls, Transport Options, Output Status, Secondary Segment, Synth Status, and Wave/MIDI Export.  All six (6) toolbars exist throughout the Producer work session and support their own implementation of the IDMUSProdToolbar interface:  EMBED Visio.Drawing.5   At this point during application launch we have one Framework object (containing a PropSheet object), six (6) Producer Component objects, six (6) DocType objects, and six (6) Toolbar objects.  No other Producer objects are created until a project is either  created or loaded.  Our sample work session opens the ShooterScenario_Expansion project.  Project Open First, the Framework creates a Project object to manage the project.  EMBED Visio.Drawing.5   Since the code to open files resides in Component DLLs, the Framework takes on the responsilibty of routing File Open requests to the appropriate IDMUSProdDocType::OnFileOpen method.  IDMUSProdDocType::DoesExtensionMatch helps the Framework locate the DocType object that manages files with a file extension equal to the file about to be opened.  IDMUSProdDocType::OnFileOpen loads the file, creates corresponding Node object(s), and adds the Node(s) to the Project Tree. Project Tree  The following illustration shows the Producer objects behind the nodes in the Project Tree that were created as a result of opening the ShooterScenario_Expansion project:  EMBED Visio.Drawing.5    EMBED Visio.Drawing.5    EMBED Visio.Drawing.5   Editors The life of an Editor object coincides with its appearance in an open editor window. When the editor window closes, the Editor object gets destroyed.  Our sample work session shows an open editor for the MonsterCave template:  EMBED Visio.Drawing.5   DirectMusic Producer Module/Component Implementation Guidelines Getting Started Bare Minimum  DirectMusic Producer Modules are DLLs that contain one or more Producer Components.  Producer Components are standard COM objects created through CoCreateInstance that provide an IDMUSProdComponent interface. A Producer Module (DLL) must implement DllCanUnloadNow, DllGetClassObject, DllRegisterServer, and DllUnregisterServer as specified in the section  Exported Functions Implemented by DirectMusic Producer Modules .  The DLL must also implement an IDMUSProdComponent interface for each of its Components as well as register a CLSID for each Component as specified within the section titled  DirectMusic Producer Module/Component Implementation Guidelines\System Registry .  This paragraph mentions all of the required  housekeeping  tasks that must be done in order to get a Component plugged into Producer. Exported Functions Implemented by DirectMusic Producer Modules  contains sample code that further explains the purpose and contents of the DllCanUnloadNow, DllGetClassObject, DllRegisterServer, and DllUnregisterServer methods. Please refer to IDMUSPROD.HLP for more detailed information on implementing IDMUSProdComponent.  As you will discover, a Component s implementation of IDMUSProdComponent::Initialize is the place where the unique characteristics of a Component begin to take shape. Some Producer Interfaces IDMUSProdComponent is the only Producer interface whose implementation is mandatory.   If a Component works with files and wants the Framework to provide the UI to open and create new files, it should implement an IDMUSProdDocType interface for each type of file it supports.  A Component s IDMUSProdComponent::Initialize method should call IDMUSProdFramework::AddDocType to hand the Framework its IDMUSProdDocType interface(s). A Component should implement the IDMUSProdMenu interface and call IDMUSProdFramework::AddMenuItem from within its IDMUSProdComponent::Initialize method if it wants to add a menu item to the Framework Add-Ins  menu.  This interface provides a way for a Component, that otherwise has no UI, to hook into the Framework.  For example, a Component may want to place a menu item in the Framework Add-Ins  menu to provide some sort of dialog that can be used to display performance statistics. A Component should implement the IDMUSProdToolbar interface and call IDMUSProdFramework::AddToolbar from within its IDMUSProdComponent::Initialize method if it wants to add a toolbar to the Producer s application toolbar space. The IDMUSProdNode and IDMUSProdEditor interfaces should be implemented when a Component wants its objects to appear in the Framework s Project Tree.  IDMUSProdNode provides functionality for a node in the Project Tree and IDMUSProdEditor specifies behavior of the editor that is opened when a node is double-clicked. The Producer interfaces mentioned above simply provide a starting point.  They are the basic interfaces a Component should be aware of in order to plug into Producer.  The complete Producer API reference is contained in IDMUSPROD.HLP.  After opening IDMUSPROD.HLP select the  Index  tab, then type  interfaces  and hit <Enter>.  A complete list of Producer interfaces will be displayed.  In addition to  interfaces , other helpful index topics are  objects structures , and  types .  Also, many of the method descriptions in the API reference contain sample code. Custom Interfaces When applicable, a Component may implement custom interfaces to provide additional functionality to other Components.  For example, the Conductor Component exposes the IConductor interface to coordinate use of the DirectMusic Engine.  A Component provides access to its custom interfaces through calls to its IDMUSProdComponent::QueryInterface method. Nodes and Editors VC++ 6.0 MFC ActiveX ControlWizard can be used to create Producer Modules containing Components that provide editors for the nodes they place into the Framework s Project Tree.  One control should be created for each type of editor supported in the DLL. Since a control will function as a node s editor, an IDMUSProdEditor interface must be implemented for each control.  Also, the CLSID of the control is the CLSID that should be passed to the Framework via the IDMUSProdNode::GetEditorClsId method. The control s OnCreate method can create an in-place menu, an in-place toolbar, and a dialog.  The dialog is created as a child window to the control and manages all editing of the underlying object: // CBandCtrl Class class CBandCtrl : public COleControl friend class CBandDlg; DECLARE_DYNCREATE(CBandCtrl) // Constructor public: CBandCtrl(); // Attributes public: CBandDlg* m_pBandDlg; private: m_hWndContainer; HMENU m_hMenuInPlace; HANDLE m_hKeyStatusBar; CToolBar* m_pToolBar; CBand* m_pBand; CBandComponent* m_pComponent; // Overrides // ClassWizard generated virtual function overrides //{{AFX_VIRTUAL(CBandCtrl) public: virtual void OnDraw(CDC* pdc, const CRect& rcBounds, const CRect& rcInvalid); virtual void DoPropExchange(CPropExchange* pPX); virtual void OnResetState(); virtual HMENU OnGetInPlaceMenu(); virtual void OnHideToolBars(); virtual void OnShowToolBars(); virtual BOOL PreTranslateMessage(MSG* pMsg); //}}AFX_VIRTUAL // Implementation protected: ~CBandCtrl(); DECLARE_OLECREATE_EX(CBandCtrl)    // Class factory and guid DECLARE_OLETYPELIB(CBandCtrl)      // GetTypeInfo DECLARE_PROPPAGEIDS(CBandCtrl)     // Property page IDs DECLARE_OLECTLTYPE(CBandCtrl)  // Type name and misc status // Message maps //{{AFX_MSG(CBandCtrl) afx_msg int OnCreate(LPCREATESTRUCT lpCreateStruct); afx_msg void AboutBox(); afx_msg void OnEditProperties(); afx_msg void OnDestroy(); afx_msg void OnSize(UINT nType, int cx, int cy); afx_msg void OnEditUndo(); afx_msg void OnEditRedo(); afx_msg void OnUpdateEditUndo(CCmdUI* pCmdUI); afx_msg void OnUpdateEditRedo(CCmdUI* pCmdUI); afx_msg void OnSetFocus(CWnd* pOldWnd); afx_msg void OnHelpFinder(); //}}AFX_MSG DECLARE_MESSAGE_MAP() // Dispatch maps //{{AFX_DISPATCH(CBandCtrl) // NOTE - ClassWizard will add and remove member functions here. //    DO NOT EDIT what you see in these blocks of generated code ! //}}AFX_DISPATCH DECLARE_DISPATCH_MAP() // Event maps //{{AFX_EVENT(CBandCtrl) // NOTE - ClassWizard will add and remove member functions here. //    DO NOT EDIT what you see in these blocks of generated code ! //}}AFX_EVENT DECLARE_EVENT_MAP() // Interface Maps public: // IOleInPlaceActiveObject BEGIN_INTERFACE_PART(MyOleInPlaceActiveObject, IOleInPlaceActiveObject) INIT_INTERFACE_PART(COleControl, MyOleInPlaceActiveObject) STDMETHOD(GetWindow)(HWND*); STDMETHOD(ContextSensitiveHelp)(BOOL); STDMETHOD(TranslateAccelerator)(LPMSG); STDMETHOD(OnFrameWindowActivate)(BOOL); STDMETHOD(OnDocWindowActivate)(BOOL); STDMETHOD(ResizeBorder)(LPCRECT, LPOLEINPLACEUIWINDOW, BOOL); STDMETHOD(EnableModeless)(BOOL); END_INTERFACE_PART(MyOleInPlaceActiveObject)     // IDMUSProdEditor functions BEGIN_INTERFACE_PART(Editor, IDMUSProdEditor) STDMETHOD(AttachObjects)(IDMUSProdNode*); STDMETHOD(OnInitMenuFilePrint)(HMENU, UINT); STDMETHOD(OnFilePrint)(); STDMETHOD(OnInitMenuFilePrintPreview)(HMENU, UINT); STDMETHOD(OnFilePrintPreview)(); STDMETHOD(OnViewProperties)(); STDMETHOD(OnF1Help)(); END_INTERFACE_PART(Editor) DECLARE_INTERFACE_MAP() // Dispatch and event IDs public: enum { //{{AFX_DISP_ID(CBandCtrl) // NOTE: ClassWizard will add and remove enumeration elements here. //    DO NOT EDIT what you see in these blocks of generated code ! //}}AFX_DISP_ID // OnCreate method  int CBandCtrl::OnCreate(LPCREATESTRUCT lpCreateStruct)  AFX_MANAGE_STATE(_afxModuleAddrThis); if (COleControl::OnCreate(lpCreateStruct) == -1) return -1; if( m_pInPlaceFrame ) m_pInPlaceFrame->GetWindow( &m_hWndContainer ); // out of place active? if( m_bOpen ) m_hWndContainer = GetParent()->GetSafeHwnd(); // Cut down on flicker when redrawing Band editor ModifyStyle( 0, WS_CLIPCHILDREN, 0 ); CWnd* pWndParent = GetParent(); if( pWndParent ) pWndParent->ModifyStyle( 0, WS_CLIPCHILDREN, 0 ); // Load control's in-place menu m_hMenuInPlace = ::LoadMenu( theApp.m_hInstance, MAKEINTRESOURCE(IDR_BAND_EDITOR) ); // Create control's in-place toolbar CWnd* pWndParent = CWnd::FromHandle( m_hWndContainer ); if( pWndParent ) m_pToolBar = new CToolBar; m_pToolBar->Create( pWndParent ); m_pToolBar->LoadToolBar( IDR_BAND_EDITOR ); m_pToolBar->SetBarStyle( m_pToolBar->GetBarStyle() | CBRS_SIZE_DYNAMIC ); m_pToolBar->SetOwner( this ); // Create control's dialog m_pBandDlg = new CBandDlg(); if( m_pBandDlg == NULL ) return -1; m_pBandDlg->m_pBandCtrl = this; m_pBandDlg->Create( NULL, "WindowName", WS_CHILD | WS_VISIBLE, CRect( 0, 0, 800, 400 ), this, 888, NULL ); m_pBandDlg->OnInitialUpdate(); return 0; // OnSize method - Resize the dialog to fit the control void CBandCtrl::OnSize(UINT nType, int cx, int cy)  AFX_MANAGE_STATE(_afxModuleAddrThis); COleControl::OnSize(nType, cx, cy); m_pBandDlg->MoveWindow( 0, 0, cx, cy ); // OnDestroy method void CBandCtrl::OnDestroy()  AFX_MANAGE_STATE(_afxModuleAddrThis); COleControl::OnDestroy(); if( m_hMenuInPlace ) ::DestroyMenu( m_hMenuInPlace ); m_hMenuInPlace = NULL; if( m_pToolBar ) delete m_pToolBar; m_pToolBar = NULL; The control s OnGetInPlaceMenu method returns a handle to the menu that will be merged into the container's existing menu: // OnGetInPlaceMenu method HMENU CBandCtrl::OnGetInPlaceMenu()  return m_hMenuInPlace; The control s OnShowToolBars and OnHideToolBars methods prepare the editing environment by plugging into the Framework s status bar and displaying/removing the control s in-place toolbar: #define TOOLBAR_HEIGHT // OnShowToolBars method void CBandCtrl::OnShowToolBars()  AFX_MANAGE_STATE(_afxModuleAddrThis); BORDERWIDTHS border; CRect rectBorder; if( m_pInPlaceFrame == NULL ) return; m_pInPlaceFrame->SetActiveObject(&m_xMyOleInPlaceActiveObject, NULL); if( m_pInPlaceDoc != NULL ) m_pInPlaceDoc->SetActiveObject(&m_xMyOleInPlaceActiveObject, NULL); // Create status bar panes if they don't already exist if( m_hKeyStatusBar == NULL ) m_pBand->m_pComponent->m_pIFramework->SetNbrStatusBarPanes( 1, SBLS_EDITOR, &m_hKeyStatusBar ); m_pBand->m_pComponent->m_pIFramework->SetStatusBarPaneInfo( m_hKeyStatusBar, 0, SBS_SUNKEN, 15 ); // Show the controls  in-place toolbar if( m_pToolBar ) if( SUCCEEDED ( m_pInPlaceFrame->GetBorder(&rectBorder) ) ) border.top = TOOLBAR_HEIGHT; border.left = 0; border.right = 0; border.bottom = 0; if( SUCCEEDED (m_pInPlaceFrame->RequestBorderSpace(&border)) ) m_pInPlaceFrame->SetBorderSpace( &border ); m_pToolBar->MoveWindow( rectBorder.left,  rectBorder.top,  rectBorder.Width(),  TOOLBAR_HEIGHT ); m_pToolBar->ShowWindow( SW_SHOWNORMAL ); return; m_pInPlaceFrame->SetBorderSpace( NULL ); // OnHideToolBars method void CBandCtrl::OnHideToolBars()  AFX_MANAGE_STATE(_afxModuleAddrThis); ASSERT( m_pBand != NULL ); ASSERT( m_pBand->m_pComponent != NULL ); // Restore the Framework  status bar m_pBand->m_pComponent->m_pIFramework->RestoreStatusBar( m_hKeyStatusBar ); m_hKeyStatusBar = NULL; // Hide the control s in-place toolbar if( m_pToolBar ) BORDERWIDTHS border; border.top = 0; border.left = 0; border.right = 0; border.bottom = 0; if( SUCCEEDED ( m_pInPlaceFrame->RequestBorderSpace(&border) ) ) m_pInPlaceFrame->SetBorderSpace( &border ); m_pToolBar->ShowWindow( SW_HIDE ); return; m_pInPlaceFrame->SetBorderSpace( NULL ); Plugging into Framework Functionality Clipboard Use of the clipboard is handled through the following OLE API s:  OleSetClipboard, OleGetClipboard, OleFlushClipboard, and OleIsCurrentClipboard.   These API s use the OLE interface IDataObject to transfer data. Drag-and-Drop The Project Tree and Producer editors accept dropped objects from themselves and each other through the following OLE interfaces:  IDropSource, IDropTarget and IDataObject. Components should implement IDropSource and IDropTarget for each of their open editors and IDataObject for each object that is associated with a node in the Project Tree.  The node s IDataObject will also be associated with the node s open editor since they represent the same data.  IDataObject will be used for both drag-and-drop and clipboard operations.  Producer editors should call RegisterDragDrop() when they open and RevokeDragDrop() when they close.   They will then call DoDragDrop() when they detect the user has begun a drag-and-drop operation.  The Project Tree will call IDMUSProdNode::CreateDataObject to ask a node for its IDataObject when it detects that the user has initiated a drag-and-drop operation for a specific node.  Dropping a Producer object into the Project Tree will accomplish tasks such as duplicating a style, duplicating a band within a style, placing a clone of a band in another style, moving a band from style A to style B, and extracting a band from a  style so that it can be saved as a separate file.  Dropping a Producer object into an editor simply inserts the dropped object into the editor s object.  For example, one could drop a band on a style editor to insert that band into the style.  One could not, for example, drop a band on either a band editor or a pattern editor.   Persistence Data moves throughout Producer via implementations of IPersistStream.  File IO, drag-drop, and clipboard operations all use IPersistStream to manage the flow of data.  DocRoot nodes are required to implement IPersistStream so that the  Framework can take on the responsibility of file management and initiate file loading and saving. Producer does some interesting things with streams.  Streams must always be created through the Framework s IDMUSProdFramework::AllocFileStream or IDMUSProdFramework::AllocMemoryStream methods.  Why?  Because streams returned by these methods also implement the IDMUSProdPersistInfo interface and IDMUSProdPersistInfo provides additional information about the stream that must be communicated to an object before a save takes place.   For example, Producer creates both runtime and design versions of its files. Runtime files are compact and are the files distributed to end-users.  Design files are bulkier. They are meant for use within Producer because they store additional chunks of data containing UI state information.  IPersistStream::Save needs to know whether it is supposed to save a runtime version or a design version of itself.  IDMUSProdPersistInfo provides this kind of additional information about the stream.  A node s IPersistStream::Save method must call IStream::QueryInterface to obtain the IDMUSProdPersistInfo interface associated with the stream into which it is supposed to save data.  IDMUSProdPersistInfo:: GetStreamInfo returns information that must be used to determine the format/type of information the node is being asked to save into the stream.  More information can be found under IDMUSProdPersistInfo in IDMUSPROD.HLP. Progress Bar The IDMUSProdFramework interface provides access to the Framework s progress bar through the following five (5) methods:  StartProgressBar, SetProgressBarPos, SetProgressBarStep, StepProgressBar, and EndProgressBar. StartProgressBar should be called just before a lengthy process is about to begin and EndProgressBar should be called immediately after the process has completed.  SetProgressBarPos can be called during the lengthy process to update the status of the progress bar.  Alternatively, SetProgressBarStep and StepProgressBar can be used to update the position of the progress bar. The following code excerpt shows how to use the Framework s progress bar:  IDMUSProdFramework* pIFramework; HANDLE hKey; CString strPrompt = _T( "Preparing information" ); BSTR bstrPrompt = strPrompt.AllocSysString(); pIFramework->StartProgressBar( 0, 50, bstrPrompt, &hKey ); for( int i = 0 ;  i < 50 ;  i++ ) Sleep( 50 ); // measurable processing would occur here pIFramework->SetProgressBarPos( hKey, i ); pIFramework->EndProgressBar( hKey ); Right-Click Context Menu A Component should provide a context menu for each node it places in the Project Tree.  The Framework uses the following IDMUSProdNode methods to display and track this menu whenever a node is right-clicked: GetRightClickMenuId, OnRightClickMenuInit, and OnRightClickMenuSelect. A DocRoot node s context menu should be patterned after the following menu:  sub-menu will vary for each DocRoot node (i.e. Menu above shows the items that can be inserted into a style).   The context menu for other nodes should be patterned as follows: Context menus may have more/less menu items depending on the functionality of their corresponding node.  Items should remain ghosted when not applicable. Status Bar The IDMUSProdFramework interface provides access to the Framework s status bar through the following 4 methods:  SetNbrStatusBarPanes, SetStatusBarPaneInfo, SetStatusBarPaneText and RestoreStatusBar. If desired, a Producer editor may customize the Framework s status bar to contain editor specific information. SetNbrStatusBarPanes places one or more panes on the right side of the Framework s status bar.  The Framework continues to use the left side of the status bar for the progress bar and to display help text. One possible place to call SetNbrStatusBarPanes is during in-place activation, when the editor s toolbar is being displayed.  To do this, MFC OLE controls would call SetNbrStatusBarPanes from within the control s OnShowToolBars method.  RestoreStatusBar removes editor specific panes from the Framework s status bar and would be called from an MFC OLE control s OnHideToolBars method. SetStatusBarPaneInfo and SetStatusBarPaneText can be used to set the ID, style, width and text of each pane. The following example places two (2) panes on the right side of the Framework s status bar: IDMUSProdFramework* pIFramework; HANDLE hKey; pIFramework->SetNbrStatusBarPanes( 2, SBLS_EDITOR, &hKey ); BSTR bstrName = m_pStyle->m_strCategoryName.AllocSysString(); pIFramework->SetStatusBarPaneInfo( hKey, 0, SBS_NOBORDERS, 16 ); pIFramework->SetStatusBarPaneText( hKey, 0, bstrName, TRUE ); bstrName = m_pStyle->m_strName.AllocSysString(); pIFramework->SetStatusBarPaneInfo( hKey, 1, SBS_SUNKEN, 16 ); pIFramework->SetStatusBarPaneText( hKey, 1, bstrName, TRUE ); The IOleInPlaceFrame interface contains a method that places text in a container s status bar.  This method, IOleInPlaceFrame::SetStatusText,  should be used to place text on the left side of the Framework s status bar.  MFC OLE controls can find a pointer to this interface in the COleControl::m_pInPlaceFrame member variable.  The following line of code would place the text in bstrMsg on the left side of the Framework s status bar: m_pInPlaceFrame->SetStatusText( bstrMsg ); System Registry DLLs are required to self-register their components.  MFC automatically takes care of OLE specific entries (i.e. CBandCtrl::CBandCtrlFactory::UpdateRegistry), but the DLL must register/unregister the Producer specific entries for each control in DllRegisterServer and DllUnregisterServer respectively.  Each component must register itself as follows under  [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\DMUSProducer\Components]: REGEDIT4 [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\] [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\DMUSProducer] [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\DMUSProducer\Components] [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\DMUSProducer\Components\ {44207724-487B-11D0-89AC-00A0C9054129}] @="Band Editor" "Skip"=dword:00000000 Skip:  A non-zero value directs the Framework to bypass the Component during the Framework s launch.    may be helpful during testing when debugging multiple Components. In addition, each component must register itself under [HKEY_CLASSES_ROOT\CLSID]: REGEDIT4 [HKEY_CLASSES_ROOT\CLSID\ {44207724-487B-11D0-89AC-00A0C9054129}] @="Band Editor" [HKEY_CLASSES_ROOT\CLSID\ {44207721-487B-11D0-89AC-00A0C9054129}\InProcServer32] @="C:\\_SRC\\PRODUCER\\BANDEDITOR\\DEBUG\\BANDEDITOR.OCX" "ThreadingModel"="Apartment" Exported Functions Implemented by Producer Modules DllCanUnloadNow() DllCanUnloadNow must be implemented and exported from DLLs that are dynamically loaded through a call to the CoGetClassObject function.  The Producer Framework uses CoGetClassObject to load Producer Components.     OLE calls DllCanUnloadNow through a call to the CoFreeUnusedLibraries function.  DllCanUnloadNow determines whether the DLL from which it is exported is still in use.  A DLL is no longer in use when it is not managing any existing objects (the reference count on all of its objects is 0).  When DllCanUnloadNow returns S_OK, CoFreeUnusedLibraries safely frees the DLL.   Sample Code LONG g_lLock = 0; // g_lLock indicates whether or not any object in // the DLL is still in use.  // g_lLock is incremented in every AddRef() // in the DLL and decremented in every // Release() in the DLL. ///////////////////////////////////////////////////////////////////////////// DllCanUnloadNow STDAPI DllCanUnloadNow()     return ( g_lLock == 0 ) ? S_OK : S_FALSE; ///////////////////////////////////////////////////////////////////////////// DllCanUnloadNow   when using MFC STDAPI DllCanUnloadNow() AFX_MANAGE_STATE(_afxModuleAddrThis);     return AfxDllCanUnloadNow(); DllGetClassObject() DllGetClassObject is called from within the CoGetClassObject function when CoGetClassObject finds that the class object to be loaded is in a DLL.  The Producer Framework uses CoGetClassObject to load Producer Components. DllGetClassObject creates the class object and calls its QueryInterface method to retrieve a pointer to the interface requested in riid. Sample Code ///////////////////////////////////////////////////////////////////////////// CClassFactory // Class factory object for creating any object implemented by this DLL. typedef  HRESULT (__stdcall CreateInstanceFunc) (IUnknown *punkOuter, REFIID riid, void **ppv); class CClassFactory : public IClassFactory // IUnknown implementation protected:     ULONG m_dwRef; public:     STDMETHODIMP QueryInterface(REFIID riid, LPVOID *ppv)     {         if (IsEqualIID(riid, IID_IUnknown) ||             IsEqualIID(riid, IID_IClassFactory))         {             *ppv = (LPVOID) this;             AddRef();             return NOERROR;         }         else         {             *ppv = NULL;             return E_NOINTERFACE;         }     }     STDMETHODIMP_(ULONG) AddRef()     {         return ++m_dwRef;     }     STDMETHODIMP_(ULONG) Release()     {         if (--m_dwRef == 0L)         {             delete this;             return 0;         }         else             return m_dwRef;     } // IClassFactory implementation protected:     CreateInstanceFunc *m_pfunc;    // function that creates object  public:     STDMETHODIMP CreateInstance(LPUNKNOWN punkOuter, REFIID riid, LPVOID *ppv)     {         return (*m_pfunc)(punkOuter, riid, ppv);     }     STDMETHODIMP LockServer(BOOL fLock)     {         if( fLock )         {                      AfxOleLockApp();         else         {             AfxOleUnlockApp();         }         return NOERROR;     } // Construction     CClassFactory(CreateInstanceFunc *pfunc) : m_pfunc(pfunc) m_dwRef = 0; ///////////////////////////////////////////////////////////////////////////// CREATE_INSTANCE macro #define CREATE_INSTANCE( cls ) STDAPI \ cls##_CreateInstance( LPUNKNOWN /*punkOuter*/, REFIID riid, LPVOID *ppv ) \     HRESULT   hrReturn; \     cls* pthis; \     pthis = new cls; \     if( pthis == NULL ) \     { \         return E_OUTOFMEMORY; \     } \     hrReturn = pthis->QueryInterface( riid, ppv ); \     if( FAILED( hrReturn ) ) \     { \         delete pthis; \         *ppv = NULL; \     } \     return hrReturn; \ CREATE_INSTANCE( CBandComponent ) ///////////////////////////////////////////////////////////////////////////// DllGetClassObject STDAPI DllGetClassObject( REFCLSID rclsid, REFIID riid, LPVOID *ppv ) AFX_MANAGE_STATE(_afxModuleAddrThis); *ppv = NULL; if( !IsEqualIID(riid, IID_IUnknown)     &&  !IsEqualIID(riid, IID_IClassFactory) )         return E_NOINTERFACE; // point <pfunc> to a function that can create a new object instance     CreateInstanceFunc *pfunc; if( IsEqualCLSID(rclsid, CLSID_CBandComponent) )         pfunc = CBandComponent_CreateInstance; if( ( *ppv = static_cast<void*>( static_cast<IClassFactory *> ( new CClassFactory( pfunc ) ) ) ) == NULL ) return E_OUTOFMEMORY;     static_cast<IUnknown*>( *ppv )->AddRef(); // Objects created by VC++ 6.0 MFC ActiveX ControlWizard // must call AfxDllGetClassObject() else if( IsEqualCLSID(rclsid, CLSID_CBandEditor) ) AFX_MANAGE_STATE( AfxGetStaticModuleState() ); AfxDllGetClassObject( rclsid, riid, ppv ); if( *ppv == NULL ) return E_OUTOFMEMORY;     else         return E_FAIL;     return NOERROR; DllRegisterServer() This exported function creates the registry entries for all of the Components supported in the DLL.  It is invoked by regsvr32.exe.  For example, typing  Run regsvr32 C:\Producer\StyleDesigner.ocx  would result in DllRegisterServer being called to create the necessary registry entries for all of the Producer Components in StyleDesigner.ocx. DirectMusic Producer Module/Component Implementation Guidelines\System Registry  lists the Producer specific registry entries that DllRegisterServer must create for each Component.  Sample Code ///////////////////////////////////////////////////////////////////////////// SetRegString - Writes a string to system registry  static BOOL SetRegString( HKEY hKey, LPCTSTR lpSubKey, LPTSTR lpValueName, LPCTSTR lpszString ) HKEY  hKeyOpen; DWORD dwCbData; LONG  lResult; DWORD dwDisposition; BOOL  fSuccess = FALSE; lResult = RegCreateKeyEx( hKey, lpSubKey, 0, 0, REG_OPTION_NON_VOLATILE, KEY_ALL_ACCESS, NULL, &hKeyOpen, &dwDisposition ); if( lResult == ERROR_SUCCESS ) dwCbData = _tcslen(lpszString)+1; lResult = RegSetValueEx( hKeyOpen, lpValueName, 0, REG_SZ, (LPBYTE)lpszString, dwCbData); if( lResult == ERROR_SUCCESS ) fSuccess = TRUE; RegCloseKey( hKeyOpen ); return fSuccess; ///////////////////////////////////////////////////////////////////////////// SetRegDWORD - Writes a DWORD to system registry  static BOOL SetRegDWORD( HKEY hKey, LPCTSTR lpSubKey,    LPTSTR lpValueName, LPDWORD lpDWORD, BOOL fOverWrite ) HKEY  hKeyOpen; DWORD dwCbData; LONG  lResult; DWORD dwDisposition; DWORD dwType; BOOL  fSuccess = FALSE; lResult = RegCreateKeyEx( hKey, lpSubKey, 0, 0, REG_OPTION_NON_VOLATILE, KEY_ALL_ACCESS, NULL, &hKeyOpen, &dwDisposition ); if( lResult == ERROR_SUCCESS ) lResult = ::RegQueryValueEx( hKeyOpen, lpValueName, NULL, &dwType, NULL, NULL ); if( (lResult != ERROR_SUCCESS) ||  (dwType != REG_DWORD) ||  (fOverWrite == TRUE) ) dwCbData = sizeof( DWORD ); lResult = RegSetValueEx( hKeyOpen, lpValueName, 0, REG_DWORD, (LPBYTE)lpDWORD, dwCbData); if( lResult == ERROR_SUCCESS ) fSuccess = TRUE; fSuccess = TRUE; RegCloseKey( hKeyOpen ); return fSuccess; ///////////////////////////////////////////////////////////////////////////// RegisterComponents - Adds entries to system registry for Producer  // Components static BOOL RegisterComponents( void ) LPOLESTR psz; TCHAR    szRegPath[MAX_BUFFER]; TCHAR    szOCXPath[MAX_BUFFER]; TCHAR    szOCXLongPath[MAX_BUFFER]; TCHAR    szGuid[MID_BUFFER]; CString  strName; DWORD    dwSkip = 0; GetModuleFileName( theApp.m_hInstance, szOCXLongPath, MAX_BUFFER );  // This needs to be the short name, since the AfxRegister... functions // use the short name.  GetShortPathName( szOCXLongPath, szOCXPath, MAX_BUFFER); // Register Band Editor Component if( SUCCEEDED( StringFromIID(CLSID_BandComponent, &psz) ) )     { WideCharToMultiByte( CP_ACP, 0, psz, -1, szGuid, sizeof(szGuid), NULL, NULL ); CoTaskMemFree( psz ); strName.LoadString( IDS_BAND_COMPONENT_NAME ); _tcscpy( szRegPath, _T("CLSID") ); _tcscat( szRegPath, _T("\\") ); _tcscat( szRegPath, szGuid ); if(!(SetRegString(HKEY_CLASSES_ROOT, szRegPath, _T(""), strName))) return FALSE; _tcscat( szRegPath, _T("\\") ); _tcscat( szRegPath, _T("InProcServer32") ); if(!(SetRegString(HKEY_CLASSES_ROOT, szRegPath, _T(""), szOCXPath)) || !(SetRegString(HKEY_CLASSES_ROOT, szRegPath, _T("ThreadingModel"), _T("Apartment"))) ) return FALSE; _tcscpy( szRegPath,   _T("Software\\Microsoft\\DMUSProducer\\Components\\") ); _tcscat( szRegPath, szGuid ); if(!(SetRegString(HKEY_LOCAL_MACHINE, szRegPath, _T(""), strName)) || !(SetRegDWORD(HKEY_LOCAL_MACHINE, szRegPath, _T("Skip"), &dwSkip, FALSE)) ) return FALSE;     } return FALSE; return TRUE; ///////////////////////////////////////////////////////////////////////////// DllRegisterServer - Adds entries to the system registry STDAPI DllRegisterServer(void) AFX_MANAGE_STATE(_afxModuleAddrThis); if( !AfxOleRegisterTypeLib(AfxGetInstanceHandle(), _tlid) ) return ResultFromScode(SELFREG_E_TYPELIB); if( !COleObjectFactoryEx::UpdateRegistryAll(TRUE) ) return ResultFromScode(SELFREG_E_CLASS); if( !RegisterComponents() ) return ResultFromScode(SELFREG_E_FIRST+2); return NOERROR; DllUnregisterServer() This exported function removes all registry entries created by DllRegisterServer.  It is invoked by regsvr32.exe.  For example, typing  Run regsvr32 /u C:\Producer\StyleDesigner.ocx  would result in DllUnregisterServer being called to remove all registry entries created by the Style Designer DLL s DllRegisterServer function. Sample Code ///////////////////////////////////////////////////////////////////////////// // UnregisterComponents - Removes entries from the system registry for // Producer Components  static BOOL UnregisterComponents( void ) LPOLESTR psz; TCHAR    szRegPath[MAX_BUFFER]; TCHAR    szGuid[MID_BUFFER]; if( SUCCEEDED( StringFromIID(CLSID_BandComponent, &psz) ) )     {        WideCharToMultiByte( CP_ACP, 0, psz, -1, szGuid, sizeof(szGuid),   NULL, NULL ); CoTaskMemFree( psz ); _tcscpy( szRegPath, _T("CLSID\\") ); _tcscat( szRegPath, szGuid ); _tcscat( szRegPath, _T("\\") ); _tcscat( szRegPath, _T("InProcServer32") ); // First delete the subkey if( RegDeleteKey(HKEY_CLASSES_ROOT, szRegPath) != ERROR_SUCCESS ) return FALSE; _tcscpy( szRegPath, _T("CLSID\\") ); _tcscat( szRegPath, szGuid ); // Then the main key if( RegDeleteKey(HKEY_CLASSES_ROOT, szRegPath) != ERROR_SUCCESS ) return FALSE; _tcscpy( szRegPath,  _T("Software\\Microsoft\\DMUSProducer\\Components\\") ); _tcscat( szRegPath, szGuid ); if( RegDeleteKey(HKEY_LOCAL_MACHINE, szRegPath) != ERROR_SUCCESS ) return FALSE; return FALSE; return TRUE; ///////////////////////////////////////////////////////////////////////////// // DllUnregisterServer - Removes entries from the system registry STDAPI DllUnregisterServer(void) AFX_MANAGE_STATE(_afxModuleAddrThis); if (!AfxOleUnregisterTypeLib(_tlid, _wVerMajor, _wVerMinor)) return ResultFromScode(SELFREG_E_TYPELIB); if (!COleObjectFactoryEx::UpdateRegistryAll(FALSE)) return ResultFromScode(SELFREG_E_CLASS); if( !UnregisterComponents() ) return ResultFromScode(SELFREG_E_FIRST+2); return NOERROR; (footnote continued) How To Write DirectMusic Producer DX7 Components ~ytojgb] ~ytoje`[VQ }xsnic]X |wrmha\R jg-e; j`Te; w<WnA 7V`y3 cWs?y UDr3#% :whVvt v(vh&[ 1w2)" fr/ 2 uaXb% %QYe( o\Cmf} e@E\u qJG{b Jw@,W ]FJ%':@ 3}A>0QL "A5Q#r$ t1YYO uy#mN 5(V!4 eZ{JF Elac3 hbqKz0 [T}>$ ^(h][U 7B3H~ 7AvR; Yb@a} **`Pd)V<4]B fqMce CDt\J I,CBzY c$`T= wTD8A $@b7m G-62Qf5 'eWJwA! q<d\R >p>.a "^(+4 zed14 Pg:UA_" DPy9qb >[gcEd'a9C v8j5xSYq ^iTy3b D*P7@ &.R1u t1e d N|psS Ty[?/ t#'kK ,U`)` $/ez  nx(b4 KJqTy KEImR V'1S' xq,^u Jxp|! i`Kuw n"EEG UbjL# &:RYAS DP% So dgJ%j V^Ro_x5? TM'df x}3pt01 {P'!s !B]?"= 1.?f%} e2e7h R@i]G$' jCaB|6 z%|]m ty/=zj < (M% l84,l(H MjB'~ #qnfg .or{c c:%e; GeCt0w xqEzop PVn'P *vHpQ #U1Wy ~'h Q 5pq2j% ?Z5lP di3f?S3 i-g2+ Iq7e8 <1pP" d=cTn .=T{Sqj 3lWw( kNzZ  T;2HN {AEM_ BWbNb T u"* ,0 67 VtrCrlt #1geR "_'"%n 91voq OQP,V"A1 a@%k4 8(,@S &1nvXn 65'%L/r 7Xs4, hbJe)W[K U94sM Z>oe% ee,/7 BT.yE)M 4[J?i >)+%9Fx pWPTU" VY#]@ w8xX2JDEf. ?>F-} >)N^4V w@2W3 P@%|> OP_; ,` i|V3]:* pxnXk 0)K+X\ 2SoGA D(ND( 3gmKx g<T"{ KkTi3 :b3Li# 0U~dU w4A'w> f0?)`] !]USYy ujg~?C5 ZF:"g4S i`p|`M bKicR q>@;G @+5%` @8Wgq z1["c|D& s.Y ~3 T&];, aO0*C }bOny m4En` #9[!+ _@PaHt e4*__ nAbG)[ 99~C~ jbnwG oc/,r: !RjAS EzH~k {$TZ% ?OSq:& )Jsn} oLNoUA |,xD4 +"^7PZ s}ssgz ~r}0\ UhKc=Il) 5HvPH .j(!N ym??+ u51<~ `k~XL DN/?}b WQ|Mu mEABO P`RAS [Rob7 BS;BG euV$' 'BoPPx y+LIs% YQxvT vba#L qNZBv Xa(SJ \(JF) q{RrK @8v1z Ug({& {C5wl <lM/HL gssY7 o[-Ku 1qy=_ /P]p}, T:eX[s~ ys2JP M/#6}R M4\,x `+r?F Z@|KS Ja9%0 rX@9+ ({*GM4s [OeS  M1g>mT WHCD@ {Z#df Q5>OPM M:3bPONDE4 8c'^i  va3. H@i;G z+|sS T~]mF VgDG` lV7wp ~3mb| it_xJ *+t`n fR$Zz *h(lap" vy"%*8 [FIyk6f ].Pg;Ra4p !HN(" C0wob #bmX|-u x)MUV U`V@>tK Y=J*I [C;LH'L 48J5 V }FL79 _1vdE ;Iusg %X7LG  B57u4 coSftG.S 7F0pF j8L*pQ.7 a4i;mp $=2i= #~0"~ 8u&Tb aYym<B hX`"JQ 9,D,,!JZ 'eqWe os@"f Aqh"d (S2Db~NF d"RdP IU7if 2VuIiL eNP/. D|gF# O%dTP P:B-l!; 1qy&9 l]2]: ~1=-" df\4F lkb6T pPQ3% Zvr~T $3:tQ ?GJLvs@ c@n'a (G^_#  "-Dy@I ^ks6O =%B_<`! @0Sa)< +(l,(}x G([AZq D;M2F u)CAV#U|Vh f`pY@GO md$EJj ~+ usH. OX|k) 2\J#" #`V96| AOiv~u 4b$.N 0$[B%\K %UZ"j@ `E&l: EI%~| %0#0T w4 FmK $%#?Qs:B| x3o#L hr7Gk8%" }} !X jO_2X OqgW@ lLQX4K 9V+KL^p ZS Tbt &7 A|E LYz2%= p0h{S{4(#4()HU EYX54a& 2$W-\ bbV}| R(4f\ A0O=P@ YVf&dNuE AR_lB$5cP, C2BcXHw {GGb0 w?mWX 01w]V x[0[| 57}n`XA5J&! @ +HrV7 ''Xp7 :ycEqbc 034cS ,in/@ B\Xp@ *i}d+ (^(["g GtGY! OR bFc L;,I" |Q%zA !jmWO pF;%D !l(6@ ~@*{h Q3[<y Iu$%/_ i:FSs V8%,b( ;0y`*.S gzO$v fz;^] &`t;(4 xIEPsYB }B'q. `c:(JD st&Ull$O 'gEDCz HeRoV 8z[NU a"C3"l $:"FC H5![W q["r{ 9b\[7F@fB :OKE.7 G.k!:~ >Zd.`h `mnZI F4\c@ 1DhP3 w"D55lZ\ .Zx69wq- *Q`C/ &D@N! 9]iS}&GP Bdrz3 <$D '-m g`uBf $;r,\- Q8}j)b:Y( zEwBa XM0yD g ..t >h@"@Y ZJ>:kv ,%h(XD9q: ,/.VS X9n*@ v8(yf +.i&S +r $Uk w!tpB `-;R" (;%cx =q'.c K S`ShQ/ ciQ:! rV/t? H'9\! {=p]qpm p<.Op xa 4* BZ,$i #VGrT yJyb(~ j,@kU [f!`PD> fmDE$@ NoS+G 3bH4" y\yhXC )QJ0c rv!v"2e ]SD!v *.DDX Da7?1 J*"YM +oe\SE R-N(! DNeGB !hH(4 Qbr7V 8C0nX`mh _(:G- Q1CpM dyFJ,p ;cV1}! .;CNC ;!e7P /)?d> - <cW &5yRos wW@;Xl @ap4k ',.y'x6 #r* 6pG lhghp sH%,|>Z::; "9K4*, Z,d\# 8e=?_ {'v~s L )2b &~sb6, q\}ex% i6@vd YFe2ia Ob(_T /}!_o Q8w+? K\mzS o/o)N bjiUT ~d#H!!e bH*q=$ G:)#/ pgA-v tiV,p=9 1m>H1 ppP:" %& O{ )2hP  l^wxM U#9OE R6Qjd%  ' ge id|k"L EiP1[U JJzc|w !v;(" $b4'f^ `'8eL O#U$o DC@4Z1 _'#xQ' ]U%zvb z>)vX YIe-  L%bII BIWJ(M M$BEx "AruPS 10R*p \~TxK Jo9+4 IOho4#k*R J<06.k !;)Z> 4Eb{\ JbFy" X `I"x =Bj9+ S53f+t p(xIJ (@4(l [tb)_^ N5N6n Gpp[9 >==r^ @UGG^ *J)R3 s !<e 27X*! c\0BMs6 `&!&gn  8FrV m;y~|C M-$r` +dBlf {u&\W I[g.Kh5 P"b~< (h'Te NS a5 ,u\9K <8R<Z `D)d, pSHF( !tD@Bc- XFq*6i h'Jx6! &GI}r Odc'M KkpRr s6Z6h *ONI{ 8&yD4$] _TcmF ,mqN.@ 5a9Es vRi`@O FU&.6 I:QsA .1&4@A8~ h)7 T W:Eg1 S(WB% [0(R- &n/`s Snh^$ S*$t, 6aO@\ V0cXnK` LG=w> j;~#z Z>w_Au ]m/t~Bl jC~Kd 1!+j=g~ 0rr*h W$ddb| KH!2) --}Q. Xz?BL (177- HIxZB 1&D(8 f{H{$ y(4{wf L\z9? !u&b(Ej 0q$9E Z`'iE" x+HV!S 4v@1< rbM!@=4D %!f,3 pf(*@} NSHx2 D_Tf? r\GA[ .H{TJI o,B.a- G%1)& ^Qnd9x $L(Wy "1f]b+ Wj4{x }Ta!Eg [99lE C?a"! Xn0{( lNi7T E"@#1 x\Mw  JPWwf i2"m[/ 7{R05a p\~Dr 6ldn> Ag1h!D {DKOe GW-bkE n[IR[ qpTG! (]k#$ m0YZw *,ce3 ^HAi( US=A|( d<Q<p} ].$]9e f?* U-u Y8nCed ]N@8WZm$W <xj00 Mx[LZS KU?38   cF0b~ f`O#n_ '*9Wh QIG Y3 18_4? +"4C9( )23}q +(T). Xs7sFl NS3s9j w2K'ph 9:\T( BAx!D4 R1GIX9 Y\XPo?j BQG/J1 R-"$T O%>qh 83x;Hj: 6;#(i Li]_lj`X p)Sa< qz8:Mb k;OTv mA{S: lEzIj ?Z#<5 }JV`C ~eOog $$3~' lJ{MCs Vy<ZQOd )HycY a$7$v/ $d#b_ <<I\] 6/{;n jIfj\ O"N[Gk '"t(28w"d ,L?&| }0%U> }aAzM w%{/4 AgxFUu w`N6c) ^|ZBp 0[*lB :$D'Oa] a<-h~* Ec`O+ GVA_y /MwD* D,C Rm .j]JE Nnt`n 6n-ai bSPpu B"UI' 8u YgN ?69s@ wq_.| ~zQ?RA ;@>XnM (@$@z d<?iS HKqly n{]cJHa <Z]Tq YJi|F #(Hw@ '}f<$  *i''vn y6zca 3=RvX ElGp{8 iL4A\G N.@G" eJ&^L A*&QI Dh5)PK4 3E!xb 'Dfd@ Tyc[[pD AF(Jn \=LD& FBmy@ alFM} hw&tA &cvm^D Gf&W{b .;`&K ey3XKk 3.Jj=% (b! ,S p,YM`bx"w `nV]fD+eX U:Nnc^ 1Gq5v EIq~a OW?IL u)%?i=J $;H4D 4<F`D $N~ S &eE"p Cpv@$a> 5 2`L xDd@B R`iVB0^>2| 68, Zh+B 4d*2II', "4^?: !^, 5 jm'vi $)\G9 8N-wT `-}rcH)G T)YO~ UV.G, PBVEt 9b\[7FB! s!G|` faE?A ;ivNi 1fOJ:% ClST$ 1< T&;a- H%gH8 3Q.*Y uwJ-Pd X:PAh GX9&lu)$ oBMNg. B,58Ok ?tI_X V2gT@ (zBF\% AKls1 1A60r &W3po "/etc9 S`-$k A))7N x/%74 OlkV>" 08UiW Fr2g$f pGqrN tLyL; JALog P7s[3G` [dtA\ DC48T) l}vdg 5Aw1*)D ]<Dy@ =ldp2!X Sv`"NvA fDb<Mb  K1U6 r!T$D \  R| "~1N@LII w|_T= Au65eG 0x @_4 va^$rO JAfiE>  IdOI w"3p~ 2Xv"En @&w/kx *x!cH &7peh\E sMR[r 6~{pUOz .i&d< 3>^&2 X4elAO WVgjG ea-}0w #kY(J N3wu, k[8bK `?LF2^9z x@[8@ hn}(B {H@.g 11T&Q 8HAs: s; "vm N$S@F 0&V%] e`*<2 L'- N t:{?4${ 'h#vw Td%p^N g3^'h. frmy, ~)9u  ?7UMH DoO$%^6 Rlj[) x'6P7"}v% [147V ODhn[n X`XTh p"1#0 vZl@i0* `^c0j# H(kbb cIp_~6 A2v:0 B[`/O E.;n_ 6CnkO8n Q/gHw $ht/&2 $.;4/[ 6`:{^$s Kr+MG m'+`Q I~;+M wsZD7E^I D*+e;7 y/aw4 Ab7YB /fNR+ !R9%q uv`AB C>k]K >HQ1@w ,6Hm}. q|j+5Z BNvN8 (0z;o  ZdPd d-wm@bO =szs#D Kc{4b n!V6c 'c+Nd SZ$i, I[uG* Hto@# \XvC) ]f$Aoj A6l1z {9y6FjD (?45^ .-[_l2 N[p|zi T:KFH KHU#1 %;pTPAY Zun+v fml<W G8s'k bQ`$a 2ZjYO!Y &7ApK Bj1&e O4+h<a? eQ{H" $6*Gu_ wtr6!69"a u)D$>m {lMCd D7j1z xP4C` @LnAp 1}cRNI >Q,b{P fjbM[ w#k)T+j _(Cavjh3d ``H(8W 'F[PS OM8Ie 8dt,x q [on ,Kf'Eh  NVO* $CC=: uu,~dS #FM<5 v=:'cY X"#}. x ?Fx 8 !-$ xu/|Z A?$x6 GtklP b7c\\ xnI07$ *B6[n[h @SIb! wjV#K" :uxUB~h S8l<P R>cxI Lz9NU {zeK> E-CSCl -8$g< _nBS*Cw 53(w4T( yF2:%] iXPItr4 WnCk^M ',s>8S Y!/4}rE aI7Jy !f%6'  7I5R,C Qu0e98 zol%sf j@an7 l_.rn *=5So #|z)C %c#&YfP uWiw6 PDm`k (iS"X, & /xL Ifc%Ix jN|vg "<WSY ]n8uP }C6)| m`:!7 UptYTHM P5Y qz NTrZ{ }z$Ha q3 UH $:hH=c H3PO3 ;Y7%CF E<#q26 _Q0Sp U"&[W k_83f 5lCczh QqdF.d MIvzlY &'W$D J"yi2 snBQ! )}u\Vz sR3GiI -tv)R |aENe sj73s L$c&*QkD3w SIiNS ;0&4)v %cpS~2 \=,0Q6 c8(tG@ 6(H$x =W KGly xK"ot  O AM en.yVa qt:r" R*;;0' $D:OdPHJ; !TV]7  I8J7 2h@##P i"$G`X fTmWhS Jx|.b ~EU@2 -G"Dn ".E5   ~yGx- $p7$. zXk%?u` r"T\Qw *.IqJ 6Vce^ pIe<@ (|,8^ C{H s @|u'N SW0E8i r`};^< q7 Ju pSZc ` .t]N6 [C8X8 "NJff '~Pf< KHMl] #`,@v %3"V4B BU:@R 40*EF 'ndfgaM h"Bc4 RZe8o =|JPA CAn<te ecW&{ vU+4,b Gm?0R  /|nB7 AZ&Y{ ]>!m5u !~G7V %dVR% jR[R! *(^]AtK Cd=sK 8e#+vn f<q7g A1D7"H 4w-'X  @<Kq N1UZ q J}C>:%D I].Ydl. %45L  .F?@-Rz >gE09 A(FJ+) "y1Cj :-(We v04K= 4fXpg ^pPE^ d(~Rx=~f y5(HP (vL,g1 sP-#j2 X7$D* UB@Q: !jXql <hTq@ =DU:\ 1A!k1 !v*:XSy "%}K?< n{S0[ ba|O% "D;.> bvy7erf S\aJ6 #e[0an AQETD WM1d~j5Q 7{'Q* uD(QT Q KdU MNR'h ) BB50)| vhb[m !=#?!09# MF21yY9j- @0(kG @8bz` 9b\[FZ 0 :,2q( cUST: AZT3c P^=b1} hDU$g| {"=?L a0Ix8 -$;=I 8K[0C `&`$R <}kC*B }q}+ZP> 2<9u2 8yCHP= |+MA) Iy!Ih FCnif' WLg(CJdeS MpE*6 =Yx2(@ i0rlB HEG|Uw 3/;NG <"1Hc hmMb@ q;83C Q6LFI @P cE@3W  Y_$T BJo8_ +f$sX saV,. 3.:ZH M0LyF 9M)p9c/ 6v,34h v"`-`RW 2sdME Is|KM 'tvVb[ G9a5A'f &vPvZ u<}W? $8$2f 5B@ 11^J /X=h? /kp-aX sT9pG/ :=i09 |;`&M @\(3c _b3W% d_Y#f F[!3~ 3;Gk0K p%BQ{ ZA'@t lgG<? ~7BGdz o_3=  6+Lr#[ {O[%u H.Ojn 21BGXy 1fq(]kr iWPi-W r?6P}3rT p~7_0-< =/Jtc ?~D\R~ 4^M,r LxHqH 4;c25B X"D5Z b(oUb k>4)0 DE Jl! 5:?~-- (pCLt ,_:c< G)98j 4#({w +_mv,z g1Qlg HIfl} @bIw,~ PA ]P &gA(ft !<s^q (rXQ_ E!1Y3GC P R2h QWT)14 YsP"% ?E,HL f>|fI=_ b{<DX*j+ hFAbP r26"rx" IcLQO 1)_aCeT bFbf8 aV^3< "$4{E @nKtXB2 4pjX@)oxY B,A< s M%>gP A,nDp >L~I# h|ai# <Gepv [8cp. fcC<[ /-SUx v!Y)Ch pRt1G H7;,a f\3A~ _h^&O bbfvt C1o@} Gtz!6 s3zyb ZZ5l+SH"g FZtE=O@ Yl#h* Ao|N$CJ }uK_. P.rru 21CTf7 y;\!`0V nUF3JjJ 6e}tcn L3n_G $3jIe "81Fi q$.e0 aJcA_V *GF@> **qvNJ -RNZ? JO4I5 d<d}{.f *JR'u u*kqk pYU9f 0Wp/kK 5!%sa 1^LW4 W<(N' Iw<UN8h RhD'*3 eYPkSa jMlPVL 3b&Jc 2}D.  b:O+^o JQqI7 Mo3fM B Wp8 #2apo Z\{Bo "3RM ` U `\(LT(=u Ty,^]* oCG]: PYEi}A cD*X@ > [J` X$wYVn 6`,<LqA:a @[TcW C:v`[ U+]>z` %(X\G5 xZAM{R ArDj? x5Rqlz 2ijF( NMYnMo 3CLdi 0ZB3| sFQOJ !"^Y`K }iO^.B ,;[BN X.Yj/ Az>D|u %vQBpD 0-1H$ _0DpH qz$^C |e(nc vWD:E c!2F@" (DQ^B M{gQr ff6kn; -33G\ 4%&Y[2 1OFWuD z)) F NK1*7b  9xF3I I,RB$RH BF:!Q ->Z+N "`^ID !AN]om BZr}p q,|LM{ jaM.2 (W]J. :bHP6 %T`$D rr5.| :K)%g cNKjp S"OtNp rPb_fl A`'/> A%c~UJ` OWo>@ :$#UA CDKZ%r 8W><p c#/hJ/( h8[vaD 7gj.PP~A 5fM4O B2U*$ E)vCJ &;:?/M iUKW6 )\@-P v&sSm *9M J< "r@rp bzH/- 6| Br j`f1%d 8M)Tn(E u#(_d P56a" 4_oZ{ j#5[u- q=i<*x h5F9`mT "CTF} iY8ZW )+!*<} l$n-2 T@"\N NC&gR cS6@} P5G@9 `m{ZIm m2jmXb} fPBC8 ;Y::?2 GnDi` Cn,dK y,d<? msc}0M>A e*3l%l CmNid \/WUP *eH0xY Qi[vg RdGi(M-N Dp_e4 6%c$)b Pg)iW htLJ2V' x&}b  n(-#o T>WOA &M"SX 8/ZK{5 I7&Hh @|pJR g@p4J eqNXS BHt$k 5Ea$O} ]zsRp1J= -ad|E U]MLn g8cIB y#9`*[ kOUZx |"eDI<# #?X[7w Zh~"t= '!AEP X14+/ )9=4s )C{YV,x < s0Z 2j?"gNqdA Y)LA0 !cH*E jF4!^ R2!0/ w+2%l) b/BR3{ [?svhY] NVpVp] j|'f A m9^cd fN5x^q 2/c3I O~3;a  qE;OD?a 4n=Pj $y!"5z)@ Fq_7M fBfC| .(P6Y <|~o5 ^cO&7 xZMJI K,Z#ce 5y9j0 /o;JZ4 a |q: L)zhx" ,j<C[D 4(GzUZ E*$o0v .Y4e" ^\VH+ j!0%7 6x{Vu J%p`c BC/qxe Cd0!LM bA,MN )'2a# y/~xIp G*6f7a IDVX7a Ule@[ fVGXM W=X@f= Kr]5S jas`Un_z ,Zxuc ?Y,Q|Y B/dX7 /c(50 l/|G$ g~@+1m DSJ]*7 aIj2/ XM[&@ ?1'ra q)acm 4HsI0 ,~G8w q^HO( dA{ $ Y*:u= z8fGC xH'r[ u3-$> "PNl* gS-0^9 5^=j^ a)(qc [mHIF BQ \& ,K]Ao Q9@V@n)56 ^y()W kb&$G D A-}qF $TbI}& {LrhQ uP7,2 )/&?G R:Ps2 4{F}.P ^TJS  o0.eJ DTLCx nE&5>s +U~O8hl m~)+K $ZTc' pP3*d\/Q 6FnYy A1KKLR q\NIR ?`cHZ 0GFBw(V} Sqt1a B#;~A @s? 8 RL@%E0 ZTl/m $o2#Y'^ k(&EY zR<5eM ackk7 H,M6W huuZ0 uh xI| [^a2E }:IVZ =DzT, 9ADiV `BJgFZ:P ^0_J~ Zw^&7 Ix';t BO)xy XcywN vaxQY 3]vr# Vi&T. +:D63 w*m[Bj }JZ8p; dl_bx Q]|9~\ iYp$7 ;ico0 zF0bcF ,sScJ zy-K& Z!oT` AWp=#W  pEvgD^ dJAn| V)f A @+dlF Dsk=C cg%.yY q?uN9 Y](l: gu&al_ Z<_ST -./hlO "a#Yskw| ,H+~# 1k<PM LI)+w XUxQi=  @W:x:m LAKa(Vi O?$yS[ mGO!.= 3lo;O shN!c C4R?6 VZQ,q Ge1aR+ jRL63gD~%,/ xdORp \.f*Bj 9|2X- H*1,a M~rMH j(P@4L |;[An q\eU"< Q l:N :H#ab7 D@#]= \x,nS  k;rZb :x?.X jloBm! :c@`6 Bf[bk 0[`,b XA YE j&<JTCqG? OOfLR  !:ni #:Zq]s qwAG@ +cn=m3 @)u#* N0`eI v'A&(M ^@HbU H^l='*W N>A5A ";;gD1  X@P@( Wq91$ ^1j)~ <cbxq eSt\c /RP&u 4sd=o $Y3D3 RQw|5 `u-nb YY76hv :V'sX ^[k;mo #UB]; zZHR1 9vngv JrbQ2 FgRh.Db$ X<}Wh W.=C> EoDZ: L,")w hy,h% P|B,7( Zo{H] p&c0HI `2"E[ 4`f,_nA -`+RD |/cDO QrDs6 +jE,| ,&|/Z L$EV/ KbE3D] }4]r! OCT'a 'b1`^> `0%': fw +2 &w2 P[ 4y*H2 fpK%v TRD)JS e#bT. qVYtM1& c,QcQ [$PL1 \!P@{ =Lw3y ?*F~Vy ZaOY  ^DDz5p &jB>7R 6rLm} >AOD/ 09r 4 bY*w, 4{"tM &h %I ?s@h% V.pG1 e5` 3 ihb'9 "o\2: ra@!b V.Q/e@w @ (bk )AdN~ +T-!BC2wY >m07Q >0%-FU 7b5W7 HZ2VC 6Or3t@ ];,mqld' sE,p0 T+lbs >@Nt\ sp(HCo FUA(cV ;s$*5 :/Nsg aHP=QH X~Pp. YSKKRL ZG{m~l _lk@52 V7e5]* @yj]# nlZh& S1L3c G#%"7 [$[IUg WNF?8 sE8D  YX[&Wi'o\ ^N5Dq |b9@;F Ag<:Y q)J-P 0+!M9 E8TQG-^^ ~bFaa&E MMX|8 ?/d[hw6+.L ;59Vy0 Lo-@3 E*mxGc [1D+k "kLbo Jb+uL DySpC 2K(Y!0-5 -H%8B I ?@iA|%v M@#rg (45Y/ [Q1iU" 1LT!F aLYLQ l.y<H s.B&r| Vf:J~w c:1Tr bEO|  I|%6R eXimbr Q>XHE yroSSG2 y2|dJ yz]+" #}BT3 ";`:)9 >p&3% ,]" `Ul 6u<GS9* =&p)k 2r[\M mhe]D i[>Xwn8f~<D  V0]^>8 RpU%> 9!d`I\ ![r=YKD Pr)`{H I8ivQ @'il` i#m^S ^V8@{a E2[#k ldUhj m*R#u ajJ & ,<HSU w9DSu T5"C^ ;z=2S Dkb.*< w#B?C] m+/9" 0q9fW n?4G!|!( V^VQ? P*|*M Wp8`Z /"M;l `i6[/ t&@5P [<M~S9 2dZRd w*.Ez w$r~d ][ci6r |A)rq* %kWT_ w6K'|" ]$[o! 5K3uy @-+vma:zn C3QA3P?3J #i[#hY#e 7 G@2; ="j1T& @D&"4 \FZL{ bI>Ew xrO,t ICF(Q 19H`R; 5s'k4I SAQP, !_(-| a[ut4Tb nWj@q [dM<Sm| : y@D\C IU`"o 3-@@& .pV"q "8.9Z `ntT1Ju ^=p]G(' {E$>W F%IZK) q{W__ v9rtf\kKa ?P ZF *t;\w mVhs` E]yO(`XhQ/ \((p01 j*U)a( Tkq8Sy6o IhsR0 &xL5; UK\1G  (18r A8|v3% ~\/;x 6b8:H m$lD` [iegV mZTg, 4(o0_ UN^3t llmh$ o<(NF 9Y6HU. t=wRT m\.4* o@kMrY( x4s:c d*<1; C+3YE Hymw4n= .GNZGZ ZRn-b *7z.dC NXIE/3 FB?dz '.PY{ gCiVyc Tp'Led `Ih86L ys"Yv O4zV:NNz) d(z_6 B7$I: iPc,Gm /'J;_ kyv>qu  f$k> `=3`G @H$4u &A;Jlr Nw&WB DgwMx' 7i fO 2Fotx &mi_SX +,Z8- 'I>xR} 1_Pv] H&W`j "|+Fu#Q Y"5)?{k 49aL< cHPM$}V$ 3]=`\ FW$'+ v1]AeQP $S#ev W"1&d OEdmv} 8;ol7e RT-0Y Wu*]%V[2 Aa@9' N,!&| @DYqO Zse.H aE<`, cA*xQ 0$@*1h EB<ZC" kx65- AyW|b @WYi/ rK8xQ' UD0rl^ S\@A| y[M8f, 5JCBz "? V8 65]sQ /0q%\a W6wuE J*BccM^_[8Yp AUb6k .FNb-H t!Z%~ |9I=k* @_?{4 JrkI{ ;Y|jh H,>bH2 k[-m. ]*7Db8 !r]jn; 1s$N*v 9mc-y q1TU< BZE?$/ 1`j8@l6 IOZPc '%k"u /-%]q Dy0|k P uWZ S0'ZY }/Sea o;T{FS'D( AQ!#*4 bjLN~ 9$q?j uR;\T $e%F6 y,\,r e>^8}"u Au`#b< "ij!n `I+AinG %\]_. ~M=w[ 0(pm87Fy @z@p2*k OT5c  zdb@a ~)e*C& lO\ctG|*Q 8AlacL @4fIh <d:B^ t"/3h 'fJJ~p K\aB ~ 1_|a] (W`T# x0`KC ba2V| M|R69 )\)K= .3VQ9 Gc`&o %H[/1 a0IdTxu3 n"u^0 ^u7rS+4 &JX9h D1g.- d6Xg}C a8pL# KBf*% f3cjE 5rg*4k<m jbG7*Xf8 7'nbq& y13Z]+ N6DBw I4r2* (?Z%# )[~06 L94HpRcA  B)PR ((aYe %Z*I+Pon pL6mc ZhU2k# 7(aVS K4G3b !2e8su >~AQV bKbVa L_nc< 8/[cS1 0{5A:S :g@;z Oo<0& /TYdZm *cl ~ /CPdq @{T/T L@1b,b &kQxK E6s@( :$<GE`@E Rub27/ ,0"Y@ XZ8 j ;D(`I e&(!& \n3 U $yd!>P !%9oC (X{m. z%Hp! nvWI} 6[AL\ 0@5<* _,[Ff qQHT i R`j8W< )_u^"p RI:NX \ K,g 1P`~a#l` o-I3# T$Zzqe E\XRW C[YPi y`tIaGX 2mj/d $_:9Ar NN7PA \H(2c J_!s, THe#CA f_n1u -Y-#I j*W!z $"hd^ ]RH`Z b5?UId `oH?< ')-^K j"b6$ |}ric `mRHM cAXM" 8lGBvR8 ($^/? i)[FQ 1dOXr y[c%- to-B> ~?H+7V [VP9Pj :CZ#V M!BBg cdr3U M/3pE*0 Lj|zP9p 5 %BT (!$v? #a:jH$ A%axl 4`NgA 7v)/YB w:vlE6 @JxPD FJ_': v<@_\ z*qZZ qo'y4 YIS@Owik _a2>e=t Wmf@^ov Ha#0] tmwx<(Z P$hpB| ebbGn<H4\ AOj)j? -kw)I ?I3}o6rG ef!t^ f./s&+ tto// Vh@b>:X %DFVb x p_uE =ziYEK 739M4 V5.!xI k})y[ tHVu9 KHP T@ Dz3$I  ,nw"l M`tBc5 &W3'm `B6y! 2d)L' 1pX$8T &@f_,W obu#`| }3G6I H7[+2 @!F0cf729 !j\1} u3h.1 tsjd\| Y/2E< @p.dt" rWK*D .seTH QVWCC^ ~9;`=Yj E:vXK lk_&+xb v62JM <z244E 3Bg0v :HFg6 $rpm_ 1.ug^ :"~V` !P=8M3 =e6fz {z:t} "=rSE k',nb d(+D3 h|[Va cBcB1 (pO*Z yN[0*ti _}5|F &ZsH, lvLe]f 25T]H 0Baf[ \Vp3!y MZ#q] *EE$+QX; C#E:mN ?-85Y L2p?4 pY[NE |DC " FW9%T= _iZ|0 |.$K~ bu1i6  Y8I' :rQHP lx4wM} soi%18 Bc04^F @LWo(  h4@ue 0e@V@ rO`7S _=:D(_ qN[io |<1%? @ccFv i69mn 3@l?P :-79@hTJ _qnN| HV2tAI (jIad.7O WS^B9 UMO|K 00`uQ lfPN; -F$%` bbdt) Q)F6Ov +~$Qe Ho L2 .WAsE\$ 3&.6< uL.Cb k=J9Iy [1 ME lW)RC dmiex h"<l$U }dJ&l ^ZuP/! 6iPcNR ':fgw u[ `AZ qhdu/ @Ar^X f>23y D3Dxl #@te?S%L N("`\j I9FipRDm9 |O@dv )]=ahd /1oyh M\Bd/ *0PLC b9F!8D zwxyg 3zD - A5Bi" TYCa} @cC{0 cOL t ;gDNy J5BeH ^e.MW  ai'N P)R\G /?(#k PrJ0= LdBD| ;$F1t~ I`&tM N7l`C7* 6cR81 <\/d0 Hh8t.}& jyAkG 4;XJJ- P9+z& `8r7p;q D}BOxu "8tHGQ *MZ{>Ac/ Yl1-: w'(e, mUh*;b HE~YyU rHdRz m3.M( M_tHnj #N:NRf F2sW-Zu) [h%xL ^pZV% j`OR7  p_E} ->7G? t6D9!  'M&l> kC8b? LR=k",<) [wJ8x IW>6U) mdf36 5o%a5 H2a2): 4'x8A r}@ur gDrH4-S BW^(c ?PD 6e DsNJ" a`\ze v%E\} T&q&$ s`Ul` P`b<3yWJm.[K 82a|QYM <SD~g l[XDm <rZOC -a$ $ 9z'E  %.b0@ 9;`w; BK0*~ ~OpN^ i$IDv z%H2HaJ9Jq 4WvEB z@$"lo NV!sP et8y[ ^-`:n N"pDP ^~H"`"E {RB!  kGla4 ]#;[@( L@s1: mO'v,hewP Y3KIDb0I `lz9|& OA0%U @"lc)K>( e;@C! />m1{*I m!4/_S n8D~5 ,(Nju D!\\$j zheId Rz;$dy o9o8Ef` I: (x#y`;  Qo)d>?A %Z\D_J !% @H vT$0C i;}i} zf}U! {C$C# B-uIM Li&IKZ h0,22 *QEo] @W,[yQ B}l#x y& <.?} a6-Xj oEl\A[ 6\:.` 8>-ca H"08! 4,>{! @2iD# Cn"%vb Jrbf% fg_)[2 @3X<" JJM`8&2 gh?fw1` }UBiF0 A,:Be S$`;7 RJwRp <= yF Ggkn0 )30"Y\L fvv|V e0D4K ('TUZ\fyZM s}-*| PPiM, >rN"Dk M)B'x E'$zu h.,Fm I4ys@d BB%>[ Yp+[k] U'e0= c'52}' jrWo, [sZ|- PGU J bzyvF 0fL^M 1/dLB H,VV")+ :Y-lR] Ha-G% w<C4)o `<=mKT umh";=BX 4-C)L Lq;"Y :i'as |8B7c Me8bGY +'",;H P%@a? .+[r[lq F<U%!CGg p J0$ mPw%u V^HY#t ,LOi4@ N0A(w 7%qH- $Uo>y UB& [8K F$'xAc 3#  H(^ Pd@bWl voI+k, qqEve8 rbl4't $}91s |9uU? PV>=# hE`I8 1n2lf #'t2a  <=+1& ^(H_(2 qGcDs6 Ybwn= z3\e9 F9LQZ 39nEi 'H_q? x4_WJS Gy6WJy -!Era .^qhR ,"X4F TsvK} 0+EzdjH (9XkC0 ?B|P: uA+pn (6O[q, 3fI"K KY>g; /QO%T p~{;)  (` = 6Cl}F +'aNK gs>#r NK<T} c"4c) \aK\aJ\a [$;N#z 3]+"A cOi~o (hX$J cQkS6) Vr`8w TBt=` RMh:2 JA7%1 QHd`H lN_F) "vq;& aErV5x -mf!= hl9{' 'BuvO, b~D%> VRd!Y1 Cn$aS< r[xqt tD6D4 Jf|95 Ng P3" /`*?2th B@\hxk <Ubor OJd@8 `Cf9X <1x Q G?~Ln L_;ia L2Irp 0cBb}l #D9k5 A:j2A $w(0qX C`tBf +@0n$ ,A;[S uc-Y# 3Ni`zN $]-;M*! Ka_bMn  f$;Sr D(9r0L DXMKu q><:0 Zz}=F%b /TdF- rGy'PenV }gu's "Eac*S; #DV^1o jX[1/h =(hT(Aj\ 9dDM @O2p1 QCiy_ Zh,>LM= ^CaQE n&_z( HnNZTN klgY# 2k".b l#T}[ ob):] (p<V+ MxmOK N|4i@ :C6ato -C$z0 %OHYCS o(~o, <C,t% V4dn-  [|1"HB l1W0g ^Re,r -.4T( )M~Q" JH3,$ L:|2&+ ;c7LTZ C&Ee0j 0z0`= oXX$t xk0&o %R5'y  JC8?  _Y|p{| pehLq l'pLi! m%.)v )Ak8>` y/"|# z&Ym) %E!HV t5tc7M X]p^: YS+0g ^(TK( ;S!"F 3\wa!G <NPQ$2.\+ FbQ1A& h*y1g rDH3X "eCtg ^>Y%T 1T p`nhBF M74r_.wu &8y].2 z:Ob7 of\T]o 8=Oq9 &Uv{d7 xUrP\ IGpc9f Jm4z+ ,DC#y `M|c!  s!B vBc2BF M$MXX KjI_p ,#H0Teg T\w:e{5 =qLZ? #FZ`_ BfGX~, \r7H)  rqSBM Tj+.5N #EGka| i)X@< 1ENVP< TS!XF Os]UL _AT {]  -1[c&cJ ] KN0 ze2gs7 X2R2| wpaVQ yppM- uwyv0Mqk *TfkF<J MOC#P7 +a}Qr2 HA>2{ VT+ns m0>slS.m pD)rS NBQ`X \6$Q| {LZ-`| E`uG{ H44I. %!kqLu&Q .ngEl| ~k=,R iC6&5 ZA'7? U2@IV 5XiTnb :\u-e} "j)'y C|Y{NO IBfR59 EkphH IHNDY U3C/{< `Hf|8c V:bLe\Q [KmT4/ >Je[5H <J_L. ko\nj ys^<3>` 3a(864 `5N|*1 >"$Zx- X3Xd9w ;h2f&[ Ip4D6 b.l0s o[g*A 8bg'2 !sSg>a=1 5lPuU 6R'9. Nk@%62 83$FT 8V)+2 #T(?) #RuDI r%>0{ :qCQS \T<^tF t|gTrU HBexu GTfbmC 8Sr`: vNcj2 4`Ds8l] 8[{=h afbNL jm+DL7 VSUKX sCEs  `0,y]d( X3h*p dB],VE d&Gm>;a\ Ff4IN "PzjU :L~EZD -~^uU *52z3[  KFaN?` nH0"r ;,B_J Q"+2k\ Ct}p+ 1UE|l lv_8^ he}{%X k>. J )w)Z> ~qKWs cDAl~ Xbb@sw>5 2KA5j J6(HJ 9@efH }0W'x- F*~^v0 7kO{` WwJ&- z\FJ7u 5xvW1 ]MH'0zV 9|O=bE (j(*V}n |;W*k Gd;;0 PQ|#@C IttO^N8 QEVZ= 4fn]A ?2lxqH r] z0y_i u :Cc La0u(! la~jb '!rY$ FRKh!GI Y6ccu ^C5n8 /X\PqA Ce3K+ ';+2C` an<Zv `gI0U V"b9; o*pHB( e&(9fK^[R ^Jy DW @[D=? ,RCJ% eNc<emam $pBBc D~*\>? /:%Kw Sib-X?M;9 JH\Tn -iQl? RftbM: -H0\  YLZc% ]O0l" z*M<m y(B"Je| `%_5> 2K8g3 E,nkf5 +}A^n O4sG* `WqK1 mlI3=WJ# eYhc% mR-7m @]y8Mo .[U{e {`PWPGr 0Gev' 0fD9f TY,Xk 9|mrDP tqm)<@wMn #tZ}E ^QbJ< Y~OQu 3"@,{ V!KGC "lS(` zy&H$ FEHhR G  &!. 4s"(7 ,\kUn Fjn#( M'v@%. *i&?K Q+Ta#  P%"d R90et1 "CC"6 Sw..ZZ CWV$0 Eo2^! TU#MvB #w'm5;! [4?A> M6Po@ lL%HJ) Q~7{-1 |Tps[v[ m9q<Fh b,T:K 5*$#H iBX+9 5uRwdH NE8%4  kB^I <U)Xa p$nTk rvdl`# InK]s' +*=Vj /DCp. `|g=y :$q1(6 *]qW2L  }0A-~ cLV\: B/Jp'Cf rnh4*sDU xl5bX3  >9C9b" -6(y8 kP132 YF_- "` 0v1I!9 ci?1< %(;U5"! +F,)4f Wghrr USHR$ n=;y%z /.A!p f:?9ve =1Y%c 8cE1i ;`w\1]> .["!~ >)L1r .RTKO) F?L8l @HC?eY Ou!,Rfd0 yq:w_ mO*-8V)o A5KzFa `H?cX RjX@H 0F)fA czkjX q]Em" pyN/YR 1lPIL/ waWpQ<F.d =auU5 t!F}hL `^(h3P"F|A "+Xb. (iA2d (g(82 Nda@] 5Mk![-8C& F_CFx yi&z$a ~)q4Rw< @z/>mGq mScw#20n q8>70T~% ,8E#lE]_ h4N0hyx E.d2, rEnp=/B] ,50[bpI :AC^B'- _pEt: #eI#1{ Eq1$) tEDli V$y2A dGDTpG #Vg(z ]D=z^ QQ-zW Kc3f: CnJfJI I\}2>mm )D$]m 6Cc*E! T5[{F zpc(K KgG!V PV?W: >`E;$ d,xD `B HE3n. e8L/$ RVL'6 32wu|2 l}UZ: J",&T NB G#4 a(~8v /ro:U~ tb8"22 rgTr@X F\C}F fYcQB 'k1p!9-n 7o!/9^ H#Hi59 0wXD[ QR^.+ vI"0`+ +Cpq4 QXV`O _6rL7 ef(3y BLroDj, Fnr[@ Q|t_, \MPJ^pT F9o3xM ]m$$&( i*}cH s(&qB 2H,rL9 VzU\F tB`CL p~#"@ [BV?O* ?6C0vM g@:V' B)<wN 6Pd\> %z@e>@ )Np!Th \f?.3 &P{ r ?wVlB 9TNfB OL0'& 2ft?)d p&^>e !!~B> tCPOp }&)aJ` L+CT/ h4+2bB  "Ia3 x^Z4t oxrv|_9 'gn6( ?!<na, 7-V&- Yy`/) "Z%<z 7@:a;j)3jM1a >nwkcU okcKr $'KGN &,a1v AVG&H|ZpkC! ,t2,g )%'3Y Obb(6 \Q.T~ Z?6U/2"I j#AUgY M{@PN 3<&]g0 0Up*# 3DLEl8 |/XQ8 7p+|h FFX@U G@O6f 0p|fb l"6ox'& NKMm@e.b pe]!% QO&rP `FEG( Tr+NF k&wom Wc5t[ |5~>: VHrHs WO3vSAD ,=x6n iVGZt|F )u<j91 O8_TQ J|]I; xw<ed }FLK~ S@qXc "I^bY xy\sJ nMJud5#)pa {:/z1k u[S=e |SC3D M{,ury dUuhU p]+l=g poVv^T3 Fc(I" AG^fR 4L)uH azHT>SA S@Gi& s?$f|dy 1Ik$- C\?fM +kp h@ bqU]K% ~(T|8# eM=kk g"tSq r%qAF VB;?Tk "jxYn s#,q, V!`b) *Vva3 <azx+S: Gym*C* !)^o'f BDV=- wdM@? WEm}`y c_'|W 86r{} -ZnsS _g4K* :J`B&\hD&d w)VAL @hZ2' xcG#v^ Xs]nwY x}iKn /jmt)E N=7e%O zbOKw qTG!L7 #5F:"nf AgS&'@V {9^DO=> ;a-*q F:(cU 9E|5Sn i2)%F` N=I.2 VnY2K 7h`vh@ NSyKF +PzfcO? !Ns\| _w<r"6w zS\f& %BuzT B:;mPy +a +\R> 6n8lA{U[I FRobFI ?%QM:O um4E\" (%%mP OYuel (V<:VZ m,H;8 qmp2A |&3E< f2wcn v|O;)h %_ZV8 7j5*J1K QA-]x% v7\6?T DEkFT |Y.XA[ f[bRkrDl :-Em6 2-K'e ,FQLz "QCFqQe OJ]`* E}ZNAY =,j~E P"RUH K`8B< `0H-r& 8[Jr+9 8E~a$ `4&8S M'4\O+ fF`G3 Z~QDb eEeld< /\B@V pt<)? ;GtOo M4P`~ w9!mx'4 |"\?? eJXZK /~G=; 4_BtX :`7YqK =8pR; :E%Jw =Yc^]c* Bc++a3A -XzM] TXpAAn zd`~> q'9VC 6OJmc 8pL'3 qbc+-N{A6- Rh>r9F jQ4Ey |P?,+; e!WM_ ku:#$G uP0Y0| `.89X 0eJPi n2hrF ,!IWh %+A8g n^;h$ U+vX\ F@'v[ tkS9Q"1p g,N`R6 'T..< Hi'3* !z0%T8 !NxCu kHL!s0X9M >up'# Z$`#A /y1%@ M+ ^QX _]Ax7e}HIJ RMPK(6 bJefob h*O%eI DAYNX' HV'7+B^/ F^`KXJ [VZAV GNjP6 g@b<ML *=[ K N3dyz| DVl's zIo6W   *Vbt h#'(W= `uXx; @sS?A \wZd- Q6^(@ 4?gQ 6_ nymE$O FWT1C^U lhO&F#+ deo8CV1 y!xR$ AT1h% y@4ZM& c(kAk !4\Mr b,2#d '+ABE <CbwP Ia#MsF7 ]zolDa 0Z"ct@Z 8ky[Vb xj'td b#gj.KA 0GDs` qQw\,~ V-ydRZ %h] , js~MN J4/1F Y1;R. T}Av% ~9[T* 't-NW WpFQm LWsKWsJP uCN&g `tFKJ Z.nSoF! %`+ W= qu8Vr <4Sbb $Vwrq !T[;h8r- id7a- <5d^2 K=9!L _>RBYT dIc}ru F0YK&o ]F=Rr 'z6mt h9rW^ s%hP8 +%~DR ]aU>L 1q7X& [E44A /"{!" 8>=CS QxHcI (6=/e XfS~% TH3$F { 6vJ }c<)_ _8&.a Hl~)] (xW(P :2;vP BOE8_ d_U0P lS~3F 3C"RN ?~^Kuh ,N,$P \z>=WD :j\QN Oo?D6 8D?8QS eXxPL z))1@g {"9H/ fhPNH  F-a8V<% |(I 'v .;LH] "UAwX Zzej! o,^XtB X,I*H YBaR[ K#X/hy 8o1P% @h$WV <c%i$ oU5!N QL0o8 [#YzF A~fNI ><'UG %CtJ} +pg(A uQ$47 _3\[# Cqg?" eUTT)] IZX2T <v&i M OqL4% +Lk6q m/0G$ Z!Y^bD [>{>? FR^3$ 67?gR ay?bk=9 AH0"^ O| E3 ;}(3, 0~s:~ SYHvnro! zX@LnbM dd7Ay By6i! C&{ C W4.^T B$$?&! U W*A TBQ9S {hMO?/} B~Is[ sF0#= :&n d w(@}1 El%N~ R*%14` &[q<$L ,,@L+B\ wwWpz fYG>m </=B<2 Q{\sS7 @%!n,e[ \:)zs) yB><A &#'FP Yxru| 6u;Wi ."2l$> dS@Gm a2;!VW$ m}>i_ eXjnT (4X_z ewtE9 "%bYkW Lcrig DM04G F.g3A >iT=4 k($z0  !d0+c V1Bi; +UkA# %F <9 I"nUqF wIb ~ +/9Bx V=lel ::cd9 .AHH;h) VowQh &J:IP J~| + N1U52[O ZaE!i/lE KA Yo jMR&I ~-D*P[ lg=vO 2!Vz) ,,K4P hg-0O' Q,5Ky\h3_ TGKgI '$X?t5 nfSHA e>"pO :7V&u Z.'SN AuM~3. V5+f1L `_qE' 5@Iyr U+\I85jV RP+Yp (60-4 xJ#D#- lmq7: l]08! 9ikta d)j%J1/9 8J,M`! hu-WF ^Hcld >vI`* ;wYh>A E&p2< \6`"8^ e=XbN =FLz+2 ^"1R| -{\1p TgMH.S8% (bxPQ dY);9p avR'YB }pIBe fl,D'tAD0 QTY0% 2;~Uc6 |}w-( 'kCdu! ZN!S82 ~RI$#r JJ]?Gy 8=YEO C:Nra pl,"2 F~zML (*<3g 9`@Lw x}8SN F%Xa? AZkuW`t +Y&gI m"RiC7"a (CNx? xT\G] ^s /6 `9QDy rKPZQ tTq#D T,Q{G2 (|QLW| Wl.&f #@+p, VR5qF+ )Sk"p b282`X W,Jg*JS& O6@G0M J[?M7 ~Odq. f3X_&{ lj!64 Qz&|)r NT"@` Ej'0[ Ih|5rrU qa).a :BWLj PRZ\C1v R5F+6 w/We, eMF[i Q,Rc%/\ NR>bg x,M.!3B 7"/$`> -@D`- )SdVI= @!OU0 whKL'U! i{t1. 8X32YEA Gmipm. 6(p<I hG0?m 8?De~ mCGYw }o-,#7 1Uy-dh Gi=`V *}>!M`1 2u+En wSN T >9\KT `,PH8 N"Jsl B&Fa4$ a!ls@D 'tr&A( 2xb|H .zY{Ii/ X5QW7Y _8g5x2> 2H45v Yrae[ HP;ZD>X1 +hIzUJ #Ud"7i a+(EH WV}v% 9DWBm Tr<by$W? J;lxJ jULTZ. ]ZG8T% Is]K:p- WP2|l +6q:K3 ]1s4O J[P\%s J"KPuPi ax*;o@ 8y [)s .m[dP z6-Zer bjVZ, k3MN:H @.lR- 7t<{D )e98J w1/ . wTNlS byIGh 6(B7.P '1(j4 ]z19. ,8d-w Rs@ J V"[AK kSxS9 +A8p3 _,LeG^&\6Zx i&GrH !Q[6m :[N2r/ ,HvxJ, DrLX) Oy*ZY  '5I0> X6b6e:X bl~*j i.>'L M-U{%l ^g3SC /GH1^%5  oE7)'H -xr^`1ye O:QM@ !G\<> &Jy`g PErVD@ }s&lf M:|rk8 %E5F)B (]7j= /bRDw B;jcb Z01kn4y9  X$n%P -Q`(n 9@9.A ;wM G 6`0r6% DoM)p P>W@C  blgJ I Xeaup -e 7N L<X7j 8+72~2 4W[\T I{JP@Z I`Z:c Q:11!Y ~jab& dHh6t 6Z nH m5N{i i,6-? qmadT p06)"z FUI#l GK:hj 7rBrY( ,L(kV iB(ud 8dNQ0 e~R*ff] 6Yhi7" 8j3kgT1 FTyBTo \|RJ; \2W((  W^}]e E9_)E) 8D$NG IHKu5 ~0.ti iACjL *X)pWb RE[lV }_ZfG 8}bHd na%XxzV D8{8rs ."t~e\x ;'0EB\ "t(,+ CmASJ0 X\d=!B CSs~p <R_ldqF Xn @]1Xc} (G0\F"Ts.8Q yrG(+ TqDgYf )zhIZ 6L("} 4I>^:@ 3+DX6 %+:p( C*@ep%= BIn]N ($&B% Iz%I_ {:23[ &*U&G {D.q+J >s%CI oh?{f }%`Xf t5(w1v aS6Ac M9=4@SC 017]8 2!/(~Zg| %1bsD >y<}X ,3a`7${ [i,i4 9/Yr? Nh11@? 5b+Q: UQ+Z{ kG&2v \Z[gXnz 3{Y&Xa XQ'e5 DCam{ ?sue< tU?U( >c>wU#Ld db^8L !x=*V cKeF{ .wUBh 8IEmz }2KrB qBcxT 8r3"M E@NW9 |p6X< cP$-W `/uVL i0+=L! xTbY7 4']`GpI+ 7^$s$ Fa=`; +i)<n 9[r,Fs 7a\Z> KfA#D iq L@z _ne@2m af#CK7 aGMi[+i IX|c-D sK%)Qt q#nfc w^IrZ *o{h* &1K&3w 'b&}" @^+l2 _YUj} ]^!@^( !,BiE/ o~:#> /b>j} =_4V]DA 6B&d6X Q%re4 x8$T4p S@#^qcsP4r ")A2(cA FsTIC j|HfPv B@BK";  >o:08 s4a9_ v[oDV UdoII pn6OQ qBXR: A[zD$ !BgC& Az}]k fr Kt  ^d~DHK .TpM" \a^W6 (l$8C[ !F1&P _q)_p g0rVF :Xx29 j'+QR M~)/5S p96O" $i7m7 :JK0R 12L?T !VBr: g|H9bM% 0]s(t 4/<J: ?gpVQ =Jf3H 4"AFR TY[TRZ M_"]1 iBKh` "28bmLS] Yp,Sn #"Yy7 s>J`pe 42WvTQ[ oX7QOH If%NC|@ sBlkh( bw>f6; =#B'e \%D)5 i]`J: ,r+:eCs-f pR q~ qC!P;e ^0&6{ (Fi:= z@UG!%@ )<S^  /EM6t0 x%+qd 8uMUo n()Iu5 c<ydA P^Df"W 6JA_r cc[?SP Wqh~TM kq2xV6 ya;\W!&D '[dID x$Bv8 ^.si@Xv w3Y5W -9__D )mx~1 RiI[# mCS&k \QjVy Ev/)H} z$-N5 *o1qD `u?*LI =1[45fx>*  +i"z :cGbCS. d=fr_L s2TLf j=d#s* [izb- 4H6)l5 rb_)3 !pb9h %P(rRa`; (L[a$ ]#*WS )o.79 hF!&P vsBzT SBfUY $?`fH[ Z>)!k^ +6lJq k*3\R h71{I h9=?? =BA%B +Gl96 .f7mw &}! 4 6)od= HOJlK 'N^:U QP7"M@ VwB?Ynw2 N\r7# \wgO8 pA,". uQv0a k56Zk)T Hvmv%_ x#e4(Fe !Y$~y (TmF9 RNy L eN0z_ d>X)Q J6S$m &*.6@ (gey6G . 8G] d,e4)< Koftb TQ!.] o],\T bImhp IIFS3 :xV!\h CYpoW q)q3D MuBp"V tv:Ou c`&8h -p|9P R'54@: -{?gQ xHu4a 9/E:d BQ!J.. F#cSiGa ^_=ZXJG .~%U'Z :;&NI x/r)tV B[UI~ 4Aeb>8 *x@KH <=^|/x a++)v $D]{$j. }r-|p= *uYtU\ t$2eJO :(bH5 L3g'PsV&:3B %+P"4(Ud9 43Vt8+ ](: ] ~7]sSx '\_D` [jEsC1 dl,bh J83-B1V# ,{F)#_D7O ePKu? @xbh7 )j6dy [)&P6 59yp$ zOhmn3 ux/'$ BKs_>z n61<: }<IYM 2?_&( o/~/' %:P[* BQM# @* YD|\f Q+F8! c0/a) AF1Ml PC<8b7\ R&V0q .r$qY ut&hD +}FU# t.o6,$I 4I40g "/Lb& Yopyp se=kyt l30\0s h5=HT4 ;2tD. Oqx+eM 6r7k`< 7dkPK $1Zx;i als\` )S*u^ =K2BD @*m0k$ sWgf1X z1S$@ v5lvz Of~D@ d<q\vB ,-KFb u80_\ -K*!xp( BNQ!@ $Ya'D Q=d%G wb Mq 2'o){eR BQmUV Vu nc-r `/E|T  Vp4; Qh-J:~ -|g-z 75xzF $\Cd$ zS~^s 7x) J )DP@A dH&%] w7#;b@ !MAg, 2:!Ic ZvLm.# "6@T1 !D )R :ctE\$ tV.bU gl.(kl 6cStF B)DKP D56&e \#S4b W}E(- Rgh|"Y oqK"5 ~Mh4ch"V n vmsr V?m!H L.(qS d;Mh( Si>WV HxvOB ,<|Dd yJ,O| ,Pby[ SIU P! 8j^kYp H4314-`P O\'Cm RFEHJq A:B{\ fXj#i 5zF>> H}I4t l]"7E }R9?T ?b%@^ %Is<CR r(}~[t %JfDZ Pd9C# eL H%.1 Rr!Bt Co8~z mifE8 s*`nN i/![  plLI;tH L'3S3 8cNg"q .{9 l 3#;j? 6F"#U <zY(b }5E ] iFt8ohZQ 2;Uh$ q JR3f f4D!Y AV;p8 W&3cG s<a36 zhJ(tE3 >ElZy \z c-$ 9%!el snJK g C6*"A/(f& sg1k" $lfdXc EL08"] R$Q'] &1d3)SH XKNI*m@  0;hv e!/sW mlY:1> nOI6U OPb.  {+Al- 6h2]`a* #i-g| 5+rc[V EQc)d a*qstR3 OVeKS F?k%@ |icO\ !oBjm22 DihpAcpR dsk@`Q M,QE>_ n?Hz5A s:hY}"m 4:jr< *f8LA !"#SK#B< ]{SHG j/pMs 0``,\ ;y%mm x/28B &.rr3{y d{_sDL }u^Ny CP4)#2~ ;}r)7 %|*Z7 !xY$K7 Q[;OX( iV5njN JKCzYO sJqxx GEyK!) REWB? J<sTD;zz 4?WT>|p8 'wyvQ 4/ /e |#B"C [Neks {[=`hR= L{CA"mcCQ] #Qc$$ pO(wj QEbl( 8F^2W =)8[B:: ">9`}}( %(e?h ygTqrc wlfc)5 XRaHtPM 7/oT<X \I:\R RIKV[ N'BREMF .?$C:OG [hf!" a]&yd_ F(ZOs [6>z> H6*." D?P>C :Y!Jt "0pv= PH|Q~ TXP> % VP=[C W)0`H 423h}0_ |D`qp RF*^_ y({.0 G}9.! PN|U| fEm 9lY1:=tS bi\s( GTO5e ]&nyFI 'HhBu *K&:h $#{45!   $9q 'I=PO !%J48 AA`+1 L6HXN +-clH Ubnh| @0o;q' `xr..  6PE%O -x"c[( w6W;# -pjAa /9>qK Wk8A/ h6<+2d ;x^#FO G$a$6 OV=[/ B{@1g HK8mX PUjXN hJAxO c%;~h \>=C6] 5`P~2 3jsS& =lTc1K :vm5c a*I_1 g'.%c Y-x%"  FN)l P,RGYm =.UI} &;Ma51 o,D>z/ ml8m4(c O(YB|. i$B7Z d5!f{+ @}(V8 Lvc;a ;\Eb; _^A.Y- -0h'" j}mip *EuL@ Obf$t 3o$w< XO#wTyFm @}AP] NPr:! d$Jq\ 4#=eD1 CHT:BYI zY7(O ufjv+ A|Gb$ wOi0= vQax, _v6P" P j,A %U5[$ 'j_@, C^FE1> \YLg$5 k1qOo KM#hx #COu` CAJ>L3 pXZEk VxBmX -`B?z >l,$d !{}i% {4S7F mCqscarHLm IXk=4 A#_?H tapf+ )+tH2 Z&kS;;}! 0[<k. \+9zZ `RS32{ BPWC*E {C+j7Z  D.jI1 sJcgs~ K,'3xD "pXI  a("!=F Ib>%-tw1D 69I## xADD</` $Q4g'x 9b\[7X T.o7(lK 4+_B"y X2LfACL DvG`|E P{Tmj5 QV-3$ S#P@W @SQh@3 wB}qc B D e,a ml>g$ ;h>iO Z0Dq8 G()(e? U*E?D $4$H~ gkVCr9 pucp2 HR)-9 7%8e"<4qb ,rm/: RR@=N ~DaLQ !l:7C4  yADH JC:Qod Ut,vK hC|dp md[~7 }6..` ])[p5!U j5ey+/bP RFWtD= =ldp2!X Sv`"NvA fDb<Mb  K1U6 r!T$D \  R| "~1N@LII w|_T= Au65eG 0x @_4 va^$rO JAfiE>  IdOI w"3p~ 2Xv"En @&w/kx *x!cH &7peh\E sMR[r 6~{pUOz .i&d< 3>^&2 X4elAO WVgjG ea-}0w #kY(J N3wu, k[8bK `?LF2^9z x@[8@ hn}(B {H@.g 11T&Q 8HAs: s; "vm N$S@F 0&V%] e`*<2 L'- N t:{?4${ 'h#vw Td%p^N g3^'h. frmy, ~)9u  ?7UMH DoO$%^6 Rlj[) x'6P7"}v% [147V ODhn[n X`XTh p"1#0 vZl@i0* `^c0j# H(kbb cIp_~6 A2v:0 B[`/O E.;n_ 6CnkO8n Q/gHw $ht/&2 $.;4/[ 6`:{^$s Kr+MG m'+`Q I~;+M wsZD7E^I D*+e;7 y/aw4 Ab7YB /fNR+ !R9%q uv`AB C>k]K >HQ1@w ,6Hm}. q|j+5Z BNvN8 (0z;o  ZdPd d-wm@bO =szs#D Kc{4b n!V6c 'c+Nd SZ$i, I[uG* Hto@# \XvC) ]f$Aoj A6l1z {9y6FjD (?45^ .-[_l2 N[p|zi T:KFH KHU#1 %;pTPAY Zun+v fml<W G8s'k bQ`$a 2ZjYO!Y &7ApK Bj1&e O4+h<a? eQ{H" $6*Gu_ wtr6!69"a u)D$>m {lMCd D7j1z xP4C` @LnAp 1}cRNI >Q,b{P fjbM[ w#k)T+j _(Cavjh3d ``H(8W 'F[PS OM8Ie 8dt,x q [on ,Kf'Eh  NVO* $CC=: uu,~dS #FM<5 v=:'cY X"#}. x ?Fx 8 !-$ xu/|Z A?$x6 GtklP b7c\\ xnI07$ *B6[n[h @SIb! wjV#K" :uxUB~h S8l<P R>cxI Lz9NU {zeK> E-CSCl -8$g< _nBS*Cw 53(w4T( yF2:%] iXPItr4 WnCk^M ',s>8S Y!/4}rE aI7Jy !f%6'  7I5R,C Qu0e98 zol%sf j@an7 l_.rn *=5So #|z)C %c#&YfP uWiw6 PDm`k (iS"X, & /xL Ifc%Ix jN|vg "<WSY ]n8uP }C6)| m`:!7 UptYTHM P5Y qz NTrZ{ }z$Ha q3 UH $:hH=c H3PO3 ;Y7%CF E<#q26 _Q0Sp U"&[W k_83f 5lCczh QqdF.d MIvzlY &'W$D J"yi2 snBQ! )}u\Vz sR3GiI -tv)R |aENe sj73s L$c&*QkD3w SIiNS ;0&4)v %cpS~2 \=,0Q6 c8(tG@ 6(H$x =W KGly xK"ot  O AM en.yVa qt:r" R*;;0' $D:OdPHJ; !TV]7  I8J7 2h@##P i"$G`X fTmWhS Jx|.b ~EU@2 -G"Dn ".E5   ~yGx- $p7$. zXk%?u` r"T\Qw *.IqJ 6Vce^ pIe<@ (|,8^ C{H s @|u'N SW0E8i r`};^< q7 Ju pSZc ` .t]N6 [C8X8 "NJff '~Pf< KHMl] #`,@v %3"V4B BU:@R 40*EF 'ndfgaM h"Bc4 RZe8o =|JPA CAn<te ecW&{ vU+4,b Gm?0R  /|nB7 AZ&Y{ ]>!m5u !~G7V %dVR% jR[R! *(^]AtK Cd=sK 8e#+vn f<q7g A1D7"H 4w-'X  @<Kq N1UZ q J}C>:%D I].Ydl. %45L  .F?@-Rz >gE09 A(FJ+) "y1Cj :-(We v04K= 4fXpg ^pPE^ d(~Rx=~f y5(HP (vL,g1 sP-#j2 X7$D* UB@Q: !jXql <hTq@ =DU:\ 1A!k1 !v*:XSy "%}K?< n{S0[ ba|O% "D;.> bvy7erf S\aJ6 #e[0an AQETD WM1d~j5Q 7{'Q* uD(QT Q KdU MNR'h ) BB50)| vhb[m !=#?!09# MF21yY9j- @0(kG @8bz` 9b\[FZ 0 :,2q( cUST: AZT3c P^=b1} hDU$g| {"=?L a0Ix8 -$;=I 8K[0C `&`$R <}kC*B }q}+ZP> 2<9u2 8yCHP= |+MA) Iy!Ih FCnif' WLg(CJdeS MpE*6 =Yx2(@ i0rlB HEG|Uw 3/;NG <"1Hc hmMb@ q;83C Q6LFI @P cE@3W  Y_$T BJo8_ +f$sX saV,. 3.:ZH M0LyF 9M)p9c/ 6v,34h v"`-`RW 2sdME Is|KM 'tvVb[ G9a5A'f &vPvZ u<}W? $8$2f 5B@ 11^J /X=h? /kp-aX sT9pG/ :=i09 |;`&M gGLFM 7.y8\ Kg!p8D* p~@"h j"s+Z ;enr4c zC) 9 y3{(% %vH@Fhj M" 8guA HQR9& !jG$fA "4Gr*} rA3w0\' IxX=" &IA9< /Bc_& V3M\F U")KQ K=;|% S6u$m $/- Dd l>Rz7 C$sHFz IX)+> 6 8X. k~XtI h$nD2 IB0y^1 !#Itd@|r ~"eoh {)M/4 )+"@n[ `buUT \lt3. d19yX  H;c. 4Pnl< 0XcZ#'W R,PD- *t2uR LMlmo| DD<") J.MhW !}OOON *)}MRW1 `BBA} xH'$|l(o ur,B?0| X)EI] S<,{y (f(F}M HCbR>A 21NE8 SI[mU 2nm!p) 0HTA(@ ]-,n7 N]=s4 $I5v' k1\:f 4z*/R2e )~SW? K+|~x ",}V{+U p6$c-# Y55}.52= $*h6a zuml!6E I)If` a`=`@[ GL>36O ^>{B~v lF9{h oAbGBqoF R`8$$ Op:a`<R qH;HC' 'O1|f%&D LT'8H Z_J;#0 VNLD? teDf:c LoKqp 5>Uh{ 0!Qgn I{kA%5 /P,C  \4wbH  kNXLC K\Q$i %EeQb 8&fB4 :@{pc }1/o: &5STnu )3:tjM .CGu+ k@Hm| XXZLgw &lJ"2 5PQo- Uk8m:Tv /\y>T o`Ah\ GMtZj) [gG[|)Z!B# 5$~@A &L#to rvSlZ W_!gS Ef$W2 "MqS$ {kdYyZq ~86)4# B!ou)vI jUso$ )y17E Vguh# $6',n_? 9uMa] 8UQrc %*:4?T .>2;F }?^IC 9.xyS Juy%hp_ :AcwM S;P%S |wfUkR m"e@" 4ATAa dtaq0 04RMH? l['=G Zl1q7(v 609?S jez<Zp' ILhj`3 fMA6+ y=U_N !C*qRt& kj$J( *M":J $=%0Yt ='<C(
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\xdktools\Producer\3rdParty\doc\word\IDMUSProd.doc ===
{\rtf1\ansi \deff0\deflang1033

{\fonttbl
{\f0\froman Times New Roman;}
{\f2\fswiss Arial;}
{\f19\fmodern\fcharset0\fprq1 Courier New;}
}

{\colortbl;
\red0\green0\blue0;
\red0\green0\blue255;
\red0\green255\blue255;
\red0\green255\blue0;
\red255\green0\blue255;
\red255\green0\blue0;
\red255\green255\blue0;
\red255\green255\blue255;
\red0\green0\blue127;
\red0\green127\blue127;
\red0\green127\blue0;
\red127\green0\blue127;
\red127\green0\blue0;
\red127\green127\blue0;
\red127\green127\blue127;
\red192\green192\blue192;
}


{\stylesheet
{\s243\li-1800\sl-210\tqr\tx6960 \b\f2\fs19\lang1033 header;}
{\s251\sb160\sa40\sl-280\keepn \b\f2\lang1033 heading 4;}
{\s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 heading 3;}
{\s253\li-1800\sb160\sa60\sl-380\keepn \b\f0\fs34\lang1033 heading 2;}
{\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 heading 1;}
{\*\cs10 \additive Default Paragraph Font;}
{\sa160\sl240 \fs21\lang1033 Normal;}
{\s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 Ex;}
{\s44\li-1770\ri30\sb50\sl-80\brdrt\brdrs\brdrw15\brdrcf2 \fs12\lang1033 header rule;}
{\s45\li-1800\sa180\sl-440\keepn\tx0 \b\f2\fs40\up8\lang1033 Rh1;}
{\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Rmh;}
{\s50\sl-240\keepn \f0\fs21\lang1033 Term1;}
{\s53\li280\sl-240\keepn \f0\fs21\lang1033 Term2;}
{\s54\li280\sa80\sl-240 \f0\fs21\lang1033 Def1;}
{\s55\li560\sa80\sl-240 \f0\fs21\lang1033 Def2;}
{\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 Rule;}
{\s93\sl240 \fs21\lang1033 
Index Link;}
{\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 Table Text;}
}

\paperw12240\paperh15840\margl3330\margr1530\margt-2540\margb-2220\gutter420 
\facingp\deftab280\widowctrl\ftnbj 

\sectd \binfsxn1\binsxn1\linex0\headery1990\footery360\endnhere\titlepg 

{\headerl \pard\plain \s243\li-1800\sl-210\tqr\tx6960 \b\f2\fs19\lang1033 
{\field\flddirty{\*\fldinst PAGE}{\fldrslt 4}}{\expnd50  }Autoduck Output - 10/05/99\par 
\pard\plain \s44\li-1770\ri30\sb50\sl-80\brdrt\brdrs\brdrw15\brdrcf2 \fs12\lang1033 \par }

{\headerr \pard\plain \s243\li-1800\sl-210\tqr\tx6960 \b\f2\fs19\lang1033 
\tab Autoduck Output - 10/05/99{\expnd50   }
{\field\flddirty{\*\fldinst PAGE}{\fldrslt 3}}
\par \pard\plain \s44\li-1770\ri30\sb50\sl-80\brdrt\brdrs\brdrw15\brdrcf2 \fs12\lang1033 
\par }
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Component Object\par
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Represents a DirectMusic Producer plug-in module.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Supported Interfaces\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b IDMUSProdComponent}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Defines the startup and shut down behavior for a DirectMusic 
Producer Component. Implementation is required.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b IDMUSProdRIFFExt}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Components implementing IDMUSProdRIFFExt agree to load RIFF 
chunks and participate in the management of {\b Node}s for other Components.  For 
example, the Band Component implements IDMUSProdRIFFExt and provides file I/O and 
an editor for Bands in existing in Styles and Segment Band tracks. Implementation 
is optional.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 DirectMusic Producer Components are standard registered COM objects.  These objects 
must implement the {\b IDMUSProdComponent} interface and understand the 
{\b IDMUSProdFramework} interface.\par 
During DirectMusic Producer launch, the {\b Framework} object calls CoCreateInstance 
to obtain an {\b IDMUSProdComponent} interface pointer for each of the DirectMusic 
Producer Component CLSID's registered under:\par 
[HKEY_LOCAL_MACHINE\\Software\\Microsoft\\DMUSProducer\\Components]\par 
DirectMusic Producer Component objects exist until the DirectMusic Producer application 
shuts down.\par 
After all registered DirectMusic Producer Components have been instantiated, the 
Framework turns around and calls each Component's {\b IDMUSProdComponent::Initialize}
 
method.  This method receives a pointer to the Framework's {\b IDMUSProdFramework} 
interface.\par 
DirectMusic Producer Components are not required to create any other "standard" 
DirectMusic Producer objects. The purpose of a Component may simply be to provide 
functionality to other DirectMusic Producer Components through custom interfaces. 
However, {\b IDMUSProdComponent::Initialize}
 will more than likely create one or more 
of the following DirectMusic Producer objects:  {\b Menu} object, {\b Toolbar} object, 
{\b DocType} object.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 DocType Object\par
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Represents a type of document, or file.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Supported Interfaces\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b IDMUSProdDocType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Primary interface.  Implementation is required.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 A DirectMusic Producer {\b Component} can add additional document types to the 
{\b Framework}'s File New, File Open and File Save dialogs.  One DocType object must 
be created for each type of file that the Component wants to process.  These objects 
must implement {\b IDMUSProdDocType}.\par 
After creation, the object's {\b IDMUSProdDocType} interface gets handed to the Framework 
via the Framework's {\b IDMUSProdFramework::AddDocType}
 method.  This method registers 
the DocType with DirectMusic Producer so that it will appear in the Framework's File New, 
File Open and File Save dialogs.\par 
DirectMusic Producer DocType objects must be created and registered with the Framework 
from within their Component's {\b IDMUSProdComponent::Initialize}
 method.  These objects 
exist throughout the entire DirectMusic Producer work session.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Editor Object\par
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Represents a {\b Node}'s Editor.  Normally, the node will appear in the 
Project Tree but this is not necessary.  A Band in a Segment's Band track is 
an example of a node that does not display in the Project Tree.  Editors are 
opened one of two ways:  double-clicking its corresponding node in the Project 
Tree, or via the {\b IDMUSProdFramework::OpenEditor}
 method.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Supported Interfaces\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b IDMUSProdEditor}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Defines interaction with {\b Framework}.  Implementation is required.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b IOleObject}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Implementation is required.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b IViewObjectEx}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Implementation is required.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b IOleControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Implementation is required.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b IOleInPlaceObject}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Implementation is required.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b IOleInPlaceActiveObject}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Implementation is required.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 DirectMusic Producer Editors are standard registered COM objects.  These objects must 
implement the {\b IDMUSProdEditor}, {\b IOleObject}, {\b IViewObjectEx}, {\b IOleControl}, 
{\b IOleInPlaceObject} and {\b IOleInPlaceActiveObject} interfaces.\par 
The following methods are called when opening an editor for a node:\par 
1. {\b IDMUSProdNode::GetEditorClsId}
 - returns the CLSID of the node's editor\par 
2. {\b OleCreate} - creates an embedded Editor object\par 
3. {\b IDMUSProdEditor::AttachObjects}
 - hands IDMUSProdNode to the Editor object\par 
4. {\b IOleObject::DoVerb}
 - displays Editor object (OLEIVERB_SHOW)\par 
The DirectMusic Producer Editor object is destroyed when its parent window closes.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdNode}, {\b IDMUSProdFramework::OpenEditor}
, {\b IDMUSProdFramework::CloseEditor}
\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Framework Object\par
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Represents DMUSProd.exe.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Supported Interfaces\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b IDMUSProdFramework}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Provides the means for a DirectMusic Producer {\b Component} 
to plug into the DirectMusic Producer application.  Implemented by DirectMusic 
Producer.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b IDMUSProdFileRefChunk}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Methods to save and load Producer specific file 
reference RIFF chunks.  Implemented by DirectMusic Producer.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b IDMUSProdLoaderRefChunk}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Embeds file reference RIFF chunks into a stream for the 
purpose of enabling an implementation of IDirectMusicLoader to resolve file references. 
Implemented by DirectMusic Producer.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 DMUSProd.exe manages the one and only Framework object.  This object is created 
during application launch and exists throughout the entire DirectMusic Producer 
work session.\par 
The Framework object is responsible for managing DirectMusic Producer projects. 
It owns the Project Tree and implements {\b IDMUSProdFramework} so that DirectMusic 
Producer Components can plug into its functionality.  It also implements 
{\b IDMUSProdFileRefChunk} and {\b IDMUSProdLoaderRefChunk} to help Components 
manage file references.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdComponent Interface\par
\pard\plain \sa160\sl240 \fs21\lang1033 DirectMusic Producer Components extend the functionality of DirectMusic Producer by 
way of a module mechanism.  They are standard registered COM objects that implement 
{\b IDMUSProdComponent}.  The vast majority of Producer's functionality resides in 
{\b Component} objects.  The {\b IDMUSProdComponent} interface contains the methods 
to initialize and free a DirectMusic Producer Component.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Implementation of {\b IDMUSProdComponent} is mandatory.  The {\b Framework} object obtains 
a pointer to a Component's {\b IDMUSProdComponent} interface by passing the Component's 
CLSID to CoCreateInstance.  DirectMusic Producer calls CoCreateInstance for each of the 
Component CLSID's registered under:\par 
[HKEY_LOCAL_MACHINE\\Software\\Microsoft\\DMUSProducer\\Components].\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Based On\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IUnknown}\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b Component} Object, {\b Framework} Object, {\b IDMUSProdFramework}\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT Initialize}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Initializes the Component. Called during DirectMusic Producer launch.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT CleanUp}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Counterpart to Initialize method. Called during DirectMusic Producer exit.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetName}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns name of Component.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT AllocReferenceNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Allocates a reference Node of type {\i guidRefNodeId}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT OnActivateApp}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Notifies a Component that DirectMusic Producer is being 
activated or deactivated.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdComponent::AllocReferenceNode Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT AllocReferenceNode(}{\b GUID} {\i guidRefNodeId}{\b , IDMUSProdNode**} {\i ppIRefNode}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Allocates a reference {\b Node} of type {\i guidRefNodeId}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The reference Node was returned in {\i ppIRefNode}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppIRefNode} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i guidRefNodeId} is not valid.  For example, the Component may not 
know how to create a reference for that particular type of Node.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred and the reference Node was not returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i guidRefNodeId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Reference Node ID.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIRefNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the 
requested {\b IDMUSProdNode} interface. \tab If an error occurs, the implementation sets 
{\i ppIRefNode} to NULL.  On success, the caller is responsible for calling 
{\b IDMUSProdNode::Release}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Use {\b IDMUSProdReferenceNode::SetReferencedFile}
 to link the reference Node to a file.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example allocates a reference Node:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CMyComponent::AllocReferenceNode( GUID guidRefNodeId, IDMUSProdNode** ppIRefNode )\par 
\{\par 
\tab AFX_MANAGE_STATE(_afxModuleAddrThis);\par 
\par 
\tab if( ppIRefNode == NULL )\par 
\tab \{\par 
\tab \tab return E_POINTER;\par 
\tab \}\par 
\par 
\tab *ppIRefNode = NULL;\par 
\par 
\tab // Make sure Component can create Nodes of type guidRefNodeId\par 
\tab if( !( IsEqualGUID ( guidRefNodeId, GUID_StyleRefNode ) ) )\par 
\tab \{\par 
\tab \tab return E_INVALIDARG;\par 
\tab \}\par 
\par 
\tab // Create StyleRefNode\par 
\tab CStyleRef* pStyleRef = new CStyleRef( this );\par 
\tab if( pStyleRef == NULL )\par 
\tab \{\par 
\tab \tab return E_OUTOFMEMORY ;\par 
\tab \}\par 
\par 
\tab *ppIRefNode = (IDMUSProdNode *)pStyleRef;\par 
\par 
\tab return S_OK;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b Node} Object, {\b IDMUSProdComponent}, {\b IDMUSProdFileRefChunk}, {\b IDMUSProdNode}, {\b IDMUSProdReferenceNode}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdComponent::CleanUp Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT CleanUp(}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Notifies a DirectMusic Producer {\b Component} that the application is closing.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Clean up processing completed successfully.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Counterpart to {\b Initialize}.  The {\b Framework} calls this method 
once when DirectMusic Producer exits.\par 
Provides an opportunity for a DirectMusic Producer Component to release the objects 
it manages that contain references to itself.\par 
In addition, {\b CleanUp} must also remove all {\b Menu}s and 
{\b ToolBar}s that the Component added to the Framework.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example contains clean up processing for a DirectMusic Producer Component:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CMyComponent::CleanUp( void )\par 
\{\par 
\tab AFX_MANAGE_STATE(_afxModuleAddrThis);\par 
\par 
\tab CStyle *pStyle;\par 
\par 
\tab while( !m_lstStyles.IsEmpty() )\par 
\tab \{\par 
\tab \tab pStyle = static_cast<CStyle*>( m_lstStyles.RemoveHead() );\par 
\tab \tab pStyle->Release();\par 
\tab \}\par 
\par 
\tab return S_OK;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdComponent}, {\b Initialize}, {\b IDMUSProdFramework::RemoveMenuItem}
, {\b IDMUSProdFramework::RemoveToolBar}
\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdComponent::GetName Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetName(}{\b BSTR*} {\i pbstrName}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns the name of a DirectMusic Producer Component.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The name was returned successfully.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred and the name was not returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pbstrName}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out, retval] Pointer to the caller-allocated variable that 
receives the copy of the name.  The caller must free {\i pbstrName} with SysFreeString 
when it is no longer needed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The Framework uses this text, for example, when reporting errors during {\b Component} 
initialization.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example retrieves the name of a DirectMusic Producer Component:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 IDMUSProdComponent* pIComponent;\par 
CString strName;\par 
BSTR bstrName;\par 
\par 
pIComponent->GetName( &bstrName );\par 
strName = bstrName;\par 
::SysFreeString( bstrName );\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdComponent}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdComponent::Initialize Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT Initialize(}{\b IDMUSProdFramework*} {\i pIFramework}{\b , BSTR*} {\i pbstrErrMsg}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Initializes a DirectMusic Producer {\b Component} object.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The Component was successfully initialized.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pIFramework} or {\i pbstrErrMsg} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell The Component could not be initialized due to lack of memory.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell The Component could not be initialized for some reason other than 
lack of memory or invalid arguments.  {\i pbstrErrMsg} must briefly decribe the error.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIFramework}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b Framework} object's {\b IDMUSProdFramework} 
interface.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pbstrErrMsg}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out] Pointer to a brief string that describes the error. 
Only used when an error has occurred.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The {\b Framework} calls this method once during DirectMusic Producer startup.\par 
In addition to allocating necessary resources, a Component may use the following 
{\b IDMUSProdFramework} methods to further integrate itself into DirectMusic Producer: 
{\b IDMUSProdFramework::AddDocType}
, {\b IDMUSProdFramework::AddClipFormatForFile}
, 
{\b IDMUSProdFramework::AddNodeImageList}
, {\b IDMUSProdFramework::AddMenuItem}
, 
{\b IDMUSProdFramework::AddToolBar}
.\par 
Components which depend on other DirectMusic Producer Components should call 
{\b IDMUSProdFramework::FindComponent}
 from within their {\b Initialize} 
method to ensure the needed Components are available.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example initializes a DirectMusic Producer Component:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CMyComponent::Initialize( IDMUSProdFramework* pIFramework, BSTR* pbstrErrMsg )\par 
\{\par 
\tab AFX_MANAGE_STATE(_afxModuleAddrThis);\par 
\par 
\tab TCHAR achErrMsg[MID_BUFFER];\par 
\tab CString strErrMsg;\par 
\par 
\tab if( m_pIFramework )\tab \tab // already initialized\par 
\tab \{\par 
\tab \tab return S_OK;\par 
\tab \}\par 
\par 
\tab if( pIFramework == NULL\par 
\tab ||  pbstrErrMsg == NULL )\par 
\tab \{\par 
\tab \tab return E_INVALIDARG;\par 
\tab \}\par 
\par 
\tab m_pIFramework = pIFramework;\par 
\tab m_pIFramework->AddRef();\par 
\par 
\tab // Make sure all dependent DirectMusic Producer Components are available\par 
\tab // Get the IDMUSProdComponent interface for the Band component\par 
\tab if( !SUCCEEDED ( pIFramework->FindComponent( CLSID_BandComponent,  &m_pIBandComponent ) ) )\par 
\tab \{\par 
\tab \tab CleanUp();\par 
\tab \tab ::LoadString( theApp.m_hInstance, IDS_ERR_MISSING_BAND, achErrMsg, MID_BUFFER );\par 
\tab \tab strErrMsg = achErrMsg;\par 
\tab \tab *pbstrErrMsg = strErrMsg.AllocSysString();\par 
\tab \tab return E_FAIL;\par 
\tab \}\par 
\par 
\tab // Add applicable images to the Project Tree control's image list\par 
\tab if( !SUCCEEDED ( AddNodeImageLists() ) )\par 
\tab \{\par 
\tab \tab CleanUp();\par 
\tab \tab ::LoadString( theApp.m_hInstance, IDS_ERR_ADD_IMAGELIST, achErrMsg, MID_BUFFER );\par 
\tab \tab strErrMsg = achErrMsg;\par 
\tab \tab *pbstrErrMsg = strErrMsg.AllocSysString();\par 
\tab \tab return E_FAIL;\par 
\tab \}\par 
\par 
\tab // Add menu item to Framework's Add-Ins menu\par 
\tab if( !SUCCEEDED ( pIFramework->AddMenuItem( (IDMUSProdMenu *)this ) ) )\par 
\tab \{\par 
\tab \tab CleanUp();\par 
\tab \tab ::LoadString( theApp.m_hInstance, IDS_ERR_ADD_MENUITEM, achErrMsg, MID_BUFFER );\par 
\tab \tab strErrMsg = achErrMsg;\par 
\tab \tab *pbstrErrMsg = strErrMsg.AllocSysString();\par 
\tab \tab return E_FAIL;\par 
\tab \}\par 
\tab else\par 
\tab \{\par 
\tab \tab m_fMenuWasAdded = TRUE;\par 
\tab \}\par 
\par 
\tab // Register applicable doc types with the Framework\par 
\tab // Register doc types after all other initialization has completed successfully\par 
\tab m_pIDocType = new CStyleDocType( this );\par 
\tab if( m_pIDocType == NULL )\par 
\tab \{\par 
\tab \tab CleanUp();\par 
\tab \tab return E_OUTOFMEMORY;\par 
\tab \}\par 
\par 
\tab m_pIDocType->AddRef();\par 
\par 
\tab if( !SUCCEEDED ( pIFramework->AddDocType(m_pIDocType) ) )\par 
\tab \{\par 
\tab \tab CleanUp();\par 
\tab \tab ::LoadString( theApp.m_hInstance, IDS_ERR_ADD_DOCTYPE, achErrMsg, MID_BUFFER );\par 
\tab \tab strErrMsg = achErrMsg;\par 
\tab \tab *pbstrErrMsg = strErrMsg.AllocSysString();\par 
\tab \tab return E_FAIL;\par 
\tab \}\par 
\par 
\tab return S_OK;\par 
\}\par 
\par 
\par 
HRESULT CMyComponent::AddNodeImageLists( void )\par 
\{\par 
\tab CImageList lstImages;\par 
\tab HICON hIcon;\par 
\par 
\tab lstImages.Create( 16, 16, TRUE, 2, 0 );\par 
\par 
\tab hIcon = ::LoadIcon( theApp.m_hInstance, MAKEINTRESOURCE(IDR_STYLE_DOCTYPE) );\par 
\tab lstImages.Add( hIcon );\par 
\tab ::DeleteObject( hIcon );\par 
\tab hIcon = ::LoadIcon( theApp.m_hInstance, MAKEINTRESOURCE(IDI_STYLE_DOCTYPE_SEL) );\par 
\tab lstImages.Add( hIcon );\par 
\tab ::DeleteObject( hIcon );\par 
\par 
\tab if( !SUCCEEDED (m_pIFramework->AddNodeImageList( lstImages.Detach(), &m_nFirstStyleImage ) ) )\par 
\tab \{\par 
\tab \tab return E_FAIL;\par 
\tab \}\par 
\par 
\tab lstImages.Create( 16, 16, TRUE, 2, 0 );\par 
\par 
\tab hIcon = ::LoadIcon( theApp.m_hInstance, MAKEINTRESOURCE(IDI_PERSONALITY) );\par 
\tab lstImages.Add( hIcon );\par 
\tab ::DeleteObject( hIcon );\par 
\tab hIcon = ::LoadIcon( theApp.m_hInstance, MAKEINTRESOURCE(IDI_PERSONALITY_SEL) );\par 
\tab lstImages.Add( hIcon );\par 
\tab ::DeleteObject( hIcon );\par 
\par 
\tab if( !SUCCEEDED (m_pIFramework->AddNodeImageList( lstImages.Detach(), &m_nFirstPersonalityImage ) ) )\par 
\tab \{\par 
\tab \tab return E_FAIL;\par 
\tab \}\par 
\par 
\tab lstImages.Create( 16, 16, TRUE, 2, 0 );\par 
\par 
\tab hIcon = ::LoadIcon( theApp.m_hInstance, MAKEINTRESOURCE(IDI_FOLDER) );\par 
\tab lstImages.Add( hIcon );\par 
\tab ::DeleteObject( hIcon );\par 
\tab hIcon = ::LoadIcon( theApp.m_hInstance, MAKEINTRESOURCE(IDI_FOLDER_SEL) );\par 
\tab lstImages.Add( hIcon );\par 
\tab ::DeleteObject( hIcon );\par 
\par 
\tab if( !SUCCEEDED (m_pIFramework->AddNodeImageList( lstImages.Detach(), &m_nFirstFolderImage ) ) )\par 
\tab \{\par 
\tab \tab return E_FAIL;\par 
\tab \}\par 
\par 
\tab return S_OK;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b Component} Object, {\b Framework} Object, {\b IDMUSProdComponent}, {\b CleanUp}, {\b IDMUSProdFramework}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdComponent::OnActivateApp Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT OnActivateApp(}{\b BOOL} {\i fActivate}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Notifies a {\b Component} that DirectMusic Producer is being activated or deactivated.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell This method completed successfully.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_NOTIMPL\cell Not implemented.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i fActivate}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Specifies whether DirectMusic Producer is being activated 
or deactivated. This parameter is TRUE if the application is being activated; it 
is FALSE if the application is being deactivated.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The Framework calls this method when it receives a WM_ACTIVATEAPP message.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdComponent}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor Interface\par
\pard\plain \sa160\sl240 \fs21\lang1033 Coordinates global access to the DirectMusic Engine for other DirectMusic Producer components.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Based On\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IUnknown}\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetPerformanceEngine}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns an AddRef()'d reference to the 
IDirectMusicPerformance interface.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetPort}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns an AddRef()'d pointer to the first active 
port that supports DLS.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT RegisterTransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Adds a transport to the list of items in 
the Transport Control toolbar's combo box.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT UnRegisterTransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Removes a transport from the list of items 
in the Transport Control toolbar's combo box.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetActiveTransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Sets the owner of the Transport Control toolbar's 
controls to a specified transport.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT IsTransportPlaying}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Helps determine whether or not music is playing.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT PlayMIDIEvent}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Plays a MIDI event.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetBtnStates}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Sets the button states of a transport.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetTempo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Sets the tempo displayed in the Transport Control toolbar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT RegisterNotify}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Registers an interface to receive a specific notification 
from the performance engine.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT UnregisterNotify}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Stops a specific notification from being sent to an 
interface.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetTransportName}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Updates the name of a transport that is displayed in 
the Transport Control toolbar's combo box.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT TransportStopped}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Notifies Conductor that a transport has stopped 
playing.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetTransitionOptions}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns a structure containing the transition options 
set for the Transport Control toolbar's Transition button.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT RegisterSecondaryTransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Adds a secondary transport to the list of items in 
the Secondary Segment toolbar's combo boxes.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT UnRegisterSecondaryTransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Removes a secondary transport from the list of items in 
the Secondary Segment toolbar's combo boxes.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetSecondaryTransportName}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Update the name of a secondary transport that is 
displayed in the Secondary Segment toolbar's combo boxes.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT IsSecondaryTransportPlaying}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Helps determine whether or not a secondary segment 
is playing.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetPChannelThru}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Starts a thru connection from a specified MIDI input channel to a 
specified output PChannel.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT CancelPChannelThru}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Stops the thru connection from a specified MIDI input channel.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT IsTrackCursorEnabled}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Queries the state of the Transport Options toolbar's Track Cursor button.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdTransport}, {\b IDMUSProdSecondaryTransport}, {\b IDMUSProdNotifyCPt}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::CancelPChannelThru Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT CancelPChannelThru(}{\b DWORD} {\i dwInputChannel}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Stops the thru connection from the 
specified MIDI input channel.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation succeeded.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell No PChannel Thru is already active on that input channel\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_UNEXPECTED\cell The Performance engine does not exist.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell There is no DirectMusic MIDI input port.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i dwInputChannel} is greater than 15.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwInputChannel}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 MIDI Input channel number. Must be between 0 and 15, inclusive.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}, {\b SetPChannelThru}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::GetPerformanceEngine Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetPerformanceEngine(}{\b IUnknown**} {\i ppIPerformance}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function returns an AddRef()'d 
reference to the IDirectMusicPerformance interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation was successful\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell NULL was passed as {\i ppIPerformance}\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIPerformance}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Location of an IUnknown interface from 
which an IDirectMusicPerformance interface can be obtained. On success, the caller is responsible 
for calling {\b IUnknown::Release}
() when this pointer is no longer needed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::GetPort Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetPort(}{\b IUnknown**} {\i ppIPort}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function returns an AddRef()'d pointer to 
the first active port that supports DLS.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation was successful\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell A NULL was passed as {\i ppIPort}\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 DMUS_E_TYPE_UNSUPPORTED\cell No currently active port supports DLS.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 DMUS_E_TYPE_DISABLED\cell The output is currently disabled.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIPort}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Location of an IUnknown interface from which an 
IDirectMusicPort interface can be obtained. On success, the caller is responsible for calling 
{\b IUnknown::Release}
() when this pointer is no longer needed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::GetTransitionOptions Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetTransitionOptions(}{\b ConductorTransitionOptions*} {\i pTransitionOptions}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns a structure containing parameters 
defining what type of transition the user desires.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation succeeded.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell {\i pTransitionOptions} is NULL.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pTransitionOptions}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the {\b ConductorTransitionOptions} structure to fill in\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This method should be called in response to a call to the {\b IDMUSProdTransport::Transition}
 method.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}, {\b ConductorTransitionOptions}, {\b IDMUSProdTransport::Transition}
\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::IsSecondaryTransportPlaying Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT IsSecondaryTransportPlaying(}{\b IDMUSProdSecondaryTransport*} {\i pISecondaryTransport}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns S_OK if 
{\i pISecondaryTransport} is playing, and S_FALSE if it is not.  If {\i pISecondaryTransport} 
is NULL, returns S_OK if nothing is playing, and S_FALSE if something is playing.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell If {\i pISecondaryTransport} is not NULL, the transport is playing. 
Otherwise, no transport is playing.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell If {\i pISecondaryTransport} is not NULL, the transport is not playing. 
Otherwise, a transport is playing.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pISecondaryTransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the secondary transport to check. 
If NULL, check whether anything is playing.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}, {\b RegisterSecondaryTransport}, 
{\b UnRegisterSecondaryTransport}, {\b SetSecondaryTransportName}, 
{\b IDMUSProdSecondaryTransport}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::IsTrackCursorEnabled Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT IsTrackCursorEnabled(}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Queries the state of the Transport Options toolbar's Track Cursor button.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The Track Cursor button is down (Time cursor should be tracked).\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell The Track Cursor button is up (Time cursor should not be tracked).\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 When the Track Cursor button is down, the playing transport should display an indication 
of the current play position and the display should scroll to keep the current play position 
in view.  When the Track Cursor button is up, the display should not automatically scroll.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::IsTransportPlaying Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT IsTransportPlaying(}{\b IDMUSProdTransport*} {\i pITransport}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns S_OK if {\i pITransport} is playing, and 
S_FALSE if it is not.  If {\i pITransport} is NULL, returns S_OK if nothing is playing, and 
S_FALSE if something is playing.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell If {\i pITransport} is not NULL, the transport is playing.  Otherwise, no transport is playing.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell If {\i pITransport} is not NULL, the transport is not playing.  Otherwise, a transport is playing.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the transport to check.  If NULL, 
check whether any transport is playing.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This method will return S_OK if the Conductor thinks the {\i pITransport} is the currently 
playing transport.  This may not be the case, so ideally transports should query 
{\b IDirectMusicPerformance::IsPlaying}
\tab with their segment state to truly know 
if they are playing or not.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}, {\b RegisterTransport}, 
{\b UnRegisterTransport}, {\b SetActiveTransport}, 
{\b SetTransportName}, {\b TransportStopped}, 
{\b IDMUSProdTransport}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::PlayMIDIEvent Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT PlayMIDIEvent(}{\b BYTE} {\i bStatus}{\b , BYTE} {\i bData1}
{\b , BYTE} {\i bData2}
{\b , DWORD} {\i dwTime}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Play a MIDI event now, or in the future.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The event was successfully played or queued.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_UNEXPECTED\cell The Conductor was unable to initialize DirectMusic.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i bStatus}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Status byte\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i bData1}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Data byte 1\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i bData2}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Data byte 2\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwTime}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of milliseconds into the future to play this 
event.  If zero, play the event as soon as possible.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The MIDI event is played on PChannel 0.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::RegisterNotify Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT RegisterNotify(}{\b IDMUSProdNotifyCPt*} {\i pINotifyCPt}{\b , REFGUID} {\i rguidNotify}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Adds a notification type to the list of 
types that should be sent to this {\b IDMUSProdTransport} from the performance engine.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i pINotifyCPt} was successfully registered to received the specified notifications.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell {\i pINotifyCPt} is NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_UNEXPECTED\cell The Conductor was unable to initialize DirectMusic.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pINotifyCPt}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The notification interface to send the notification event to.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i rguidNotify}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The guid corresponding to the type of notifications to send.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The parameter {\i rguidNotify} is passed to the DirectMusic method 
{\b IDirectMusicPerformance::AddNotificationType}
.  Valid values are listed in the DirectX SDK 
documentation.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}, {\b UnregisterNotify}, {\b IDMUSProdNotifyCPt}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::RegisterSecondaryTransport Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT RegisterSecondaryTransport(}{\b {\b IDMUSProdSecondaryTransport}*} {\i pISecondaryTransport}{\b , IDMUSProdTransport*} {\i pITransport}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Add {\i pISecondaryTransport} 
to the Secondary Segment toolbar's combo boxes. \tab If {\i pISecondaryTransport} is already 
listed, increment its reference count.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The secondary segment transport was successfully added.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell {\i pISecondaryTransport} is NULL.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pISecondaryTransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the {\b IDMUSProdSecondaryTransport} 
interface to add to the Secondary Segment toolbar's combo boxes.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the {\b IDMUSProdTransport} interface to 
be removed from the Transport Control toolbar's combo box.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}, {\b UnRegisterSecondaryTransport}, 
{\b SetSecondaryTransportName}, {\b IsSecondaryTransportPlaying}, 
{\b IDMUSProdSecondaryTransport}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::RegisterTransport Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT RegisterTransport(}{\b IDMUSProdTransport*} {\i pITransport}{\b , DWORD} {\i dwFlags}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Add {\i pITransport} 
to the list of items in the Transport Control toolbar's combo box. 
If {\i pITransport} is already in the combo box, increment its reference count.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i pITransport} was successfully added.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and {\i pITransport} was not added to the Transport Control 
toolbar's combo box.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the {\b IDMUSProdTransport} interface which 
will be added to the Transport Control toolbar's combo box.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A combination of {\b ButtonStateFlags} determining the initial state of the 
transport buttons when this transport is active.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}, {\b UnRegisterTransport}, 
{\b SetActiveTransport}, {\b SetTransportName}, 
{\b IsTransportPlaying}, {\b TransportStopped}, 
{\b IDMUSProdTransport}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::SetActiveTransport Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetActiveTransport(}{\b IDMUSProdTransport*} {\i pITransport}{\b , DWORD} {\i dwFlags}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Sets {\i pITransport} as the active 
transport and uses {\i dwFlags} to set the initial state of the Transport Control buttons.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The active transport was successfully set.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pITransport} was not previously added by calling 
{\b RegisterTransport}.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the {\b IDMUSProdTransport} interface to 
set as active in the Transport Control toolbar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A combination of {\b ButtonStateFlags} determining the state of the 
transport buttons.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}, {\b RegisterTransport}, 
{\b UnRegisterTransport}, {\b SetTransportName}, 
{\b IsTransportPlaying}, {\b TransportStopped}, 
{\b IDMUSProdTransport}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::SetBtnStates Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetBtnStates(}{\b IDMUSProdTransport*} {\i pITransport}{\b , DWORD} {\i dwFlags}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Sets the button states of {\i pITransport} 
according to the flags in {\i dwFlags}.  The method is typically only used if the transport 
is not using the DirectMusic performance engine for playback, or if the transport needs to 
enable or disable the record button.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The button states were successfully set.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell {\i pITransport} is NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pITransport} is not the currently active or currently playing transport.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the transport to change the button states for.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A combination of {\b ButtonStateFlags} determining the state of the 
transport buttons.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}, {\b IDMUSProdTransport}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::SetPChannelThru Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetPChannelThru(}{\b DWORD} {\i dwInputChannel}{\b , DWORD} {\i dwPChannel}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Starts a thru connection from the 
specified MIDI input channel to the specified output PChannel.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation succeeded.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell Already thruing {\i dwInputChannel} to {\i dwPChannel}\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_UNEXPECTED\cell The Performance engine does not exist.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell There is no DirectMusic MIDI input port, {\i dwPChannel} does not exist in the 
current port configuration, or the port that {\i dwPChannel} plays on has a latency greater 
than 40ms.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i dwInputChannel} is greater than 15.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwInputChannel}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 MIDI Input channel number. Must be between 0 and 15, inclusive.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwPChannel}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Output PChannel number.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}, {\b CancelPChannelThru}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::SetSecondaryTransportName Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetSecondaryTransportName(}{\b IDMUSProdSecondaryTransport*} {\i pISecondaryTransport}{\b , BSTR} {\i bstrName}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Update the name displayed for 
{\i pISecondaryTransport} with the text in {\i bstrName}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Successfully set the name of {\i pISecondaryTransport} to {\i pbstrName}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell Either {\i pISecondaryTransport} or {\i bstrName} is NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pISecondaryTransport} was not previously added by calling {\b RegisterSecondaryTransport}.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pISecondaryTransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to an {\b IDMUSProdSecondaryTransport} 
interface.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i bstrName}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Text to display in the Secondary Segment toolbar's combo boxes 
for {\i pISecondaryTransport}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}, {\b RegisterSecondaryTransport}, 
{\b UnRegisterSecondaryTransport}, {\b IsSecondaryTransportPlaying}, 
{\b IDMUSProdSecondaryTransport}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::SetTempo Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetTempo(}{\b IDMUSProdTransport*} {\i pITransport}{\b , double} {\i dblTempo}
{\b , BOOL} {\i fEnable}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Sets the tempo displayed in the toolbar if 
{\i pITransport} is the transport that currently "owns" the toolbar.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The tempo was successfully set.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell {\i pITransport} is NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The transport does not currently "own" the toolbar, or {\i dblTempo} 
is out of range.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the transport that currently "owns" the toolbar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dblTempo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The tempo to change to, in the range DMUS_TEMPO_MIN to DMUS_TEMPO_MAX.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i fEnable}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 If TRUE, enable editing of the tempo.  If FALSE, disable editing of the tempo.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If {\i fEnable} is FALSE and {\i dblTempo} is negative, the tempo edit box will be 
display as empty and disabled.\line  
If a transport is currently playing, that transport "owns" the toolbar.  If no transport is currently 
playing, the active transport "owns" the toolbar.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}, {\b IDMUSProdTransport}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::SetTransportName Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetTransportName(}{\b IDMUSProdTransport*} {\i pITransport}{\b , BSTR} {\i bstrName}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Sets the name of {\i pITransport} 
to {\i bstrName}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Successfully set the name of {\i pITransport} to {\i pbstrName}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell Either {\i pITransport} or {\i bstrName} is NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pITransport} was not previously added by calling 
{\b RegisterTransport}.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to an {\b IDMUSProdTransport} interface.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i bstrName}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Text to display in the Transport Control toolbar's combo box for {\i pITransport}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}, {\b RegisterTransport}, 
{\b UnRegisterTransport}, {\b SetActiveTransport}, 
{\b IsTransportPlaying}, {\b TransportStopped}, 
{\b IDMUSProdTransport}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::TransportStopped Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT TransportStopped(}{\b IDMUSProdTransport*} {\i pITransport}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Notifies the Conductor that a transport has stopped playing.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation succeeded.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell {\i pITransport} is NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pITransport} does not point to the currently playing transport.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the transport that has stopped playing\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This method must be called when a transport stops playing so the Transport Control toolbar 
can switch from displaying a Stop button to displaying a Play button.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}, {\b RegisterTransport}, 
{\b UnRegisterTransport}, {\b SetActiveTransport}, 
{\b SetTransportName}, {\b IsTransportPlaying}, 
{\b IDMUSProdTransport}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::UnregisterNotify Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT UnregisterNotify(}{\b IDMUSProdNotifyCPt*} {\i pINotifyCPt}{\b , REFGUID} {\i rguidNotify}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Removes a notification type from the list of 
notifications that should be sent to this {\b IDMUSProdTransport}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i pINotifyCPt} was successfully removed from receiving the specified events\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell {\i pINotifyCPt} is NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_UNEXPECTED\cell The Conductor was unable to initialize DirectMusic.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\b RegisterNotify} was not previously called for this 
{\i pINotifyCPt} and {\i rguidNotify}.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pINotifyCPt}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The notification interface to stop sending notification events to\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i rguidNotify}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The guid corresponding to the type of notifications to stop sending\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}, {\b RegisterNotify}, {\b IDMUSProdNotifyCPt}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::UnRegisterSecondaryTransport Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT UnRegisterSecondaryTransport(}{\b IDMUSProdSecondaryTransport*} {\i pISecondaryTransport}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Remove {\i pISecondaryTransport} 
from the Secondary Segment toolbar's combo boxes, and stop it if it is playing.  If it was 
added more than once, remove one reference to it.  When all references are removed, 
it will then be removed from the Secondary Segment toolbar's combo boxes and stopped 
if it is playing.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i pISecondaryTransport} was successfully removed.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pISecondaryTransport} was not previously added via {\b RegisterSecondaryTransport}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell {\i pISecondaryTransport} is NULL.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pISecondaryTransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the {\b IDMUSProdSecondaryTransport} 
interface to be removed from the Secondary Segment toolbar's combo boxes.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}, {\b RegisterSecondaryTransport}, 
{\b SetSecondaryTransportName}, {\b IsSecondaryTransportPlaying}, 
{\b IDMUSProdSecondaryTransport}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductor::UnRegisterTransport Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT UnRegisterTransport(}{\b IDMUSProdTransport*} {\i pITransport}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Remove {\i pITransport} from 
the Transport Control toolbar's combo box, and stop it if it is playing.  If it was 
added more than once, remove one reference to it.  When all references are removed, 
it will then be removed from the Transport Control toolbar's combo box and stopped 
if it is playing.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i pITransport} was successfully removed.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell {\i pITransport} was not previously added via {\b RegisterTransport}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell {\i pITransport} is NULL.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the {\b IDMUSProdTransport} interface to 
be removed from the Transport Control toolbar's combo box.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}, {\b RegisterTransport}, 
{\b SetActiveTransport}, {\b SetTransportName}, 
{\b IsTransportPlaying}, {\b TransportStopped}, 
{\b IDMUSProdTransport}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductorTempo Interface\par
\pard\plain \sa160\sl240 \fs21\lang1033 The Conductor uses this interface to interact with the editors 
that need to use the functionality provided by the Tempo edit control in the transport toolbar.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetTempo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Called when the user changes the tempo in the tempo edit control.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetTempo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Called to get the tempo displayed in the tempo edit control.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Based On\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IUnknown}\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 To support tempo editing from the Transport Control toolbar, this interface must be supported 
by the same object that implements {\b IDMUSProdTransport}\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductor}, {\b IDMUSProdTransport}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductorTempo::GetTempo Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetTempo(}{\b double*} {\i pdblTempo}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is called to update the tempo 
displayed in the Transport toolbar's Tempo edit control.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Depending on the return code from this method, the tempo edit control 
will display and allow editing of the tempo, display and disallow editing of 
the tempo, or clear the display and disallow editing of the tempo.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation was successful, and the tempo should be editable.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell The operation was successful, but disallow editing of the tempo information.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_NOTIMPL\cell Clear the tempo edit control, and disallow editing of the tempo information.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdblTempo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the location to store the tempo in. 
The returned tempo should be within the range DMUS_TEMPO_MIN to DMUS_TEMPO_MAX.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductorTempo}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdConductorTempo::SetTempo Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetTempo(}{\b double} {\i dblTempo}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is called when the user changes 
the tempo displayed in the Tempo edit control.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation was successful\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dblTempo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The new tempo set by the user.  It is limited to the 
range DMUS_TEMPO_MIN to DMUS_TEMPO_MAX.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdConductorTempo}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdDocType Interface\par
\pard\plain \sa160\sl240 \fs21\lang1033 Additional document types can be added to the Framework's File New, File Open and File 
Save dialogs through creation of one or more {\b DocType} objects.  One DocType object must 
be created for each type of file that a DirectMusic Producer Component wants to process. 
DocType objects must implement the {\b IDMUSProdDocType} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 A Component's {\b IDMUSProdComponent::Initialize}
 method should register its DocType 
object(s) through call(s) to {\b IDMUSProdFramework::AddDocType}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Based On\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IUnknown}\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b DocType} Objects, {\b IDMUSProdFramework::AddDocType}
, {\b IDMUSProdNode}\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetResourceId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns HINSTANCE and resource ID for DocType's icon, 
accelerator table and string resource.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT DoesExtensionMatch}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns S_OK if specified file extension matches 
this DocType's extension.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT DoesIdMatch}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns S_OK if specified node ID is associated with this 
DocType.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT AllocNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Creates a new Node object and returns a pointer to its 
IDMUSProdNode interface.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT OnFileNew}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Creates a new file and adds the file's corresponding Node 
object(s) to the Project Tree.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT OnFileOpen}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Loads the specified stream and adds the corresponding 
Node object(s) to the Project Tree.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT OnFileSave}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Saves the file to the specified stream.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetListInfo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Fills a DMUSProdListInfo structure with information describing 
the object in {\i pIStream}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT IsFileTypeExtension}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Determines whether the specified extension 
is valid for the specified file type.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdDocType::AllocNode Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT AllocNode(}{\b REFGUID} {\i rguid}{\b , IDMUSProdNode**} {\i ppINode}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Creates a new {\b Node} object and returns a pointer 
to its {\b IDMUSProdNode} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The newly created object's {\b IDMUSProdNode} was returned in {\i ppINode}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppINode} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell Cannot create Node object of type {\i rguid}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i rguid}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Identifies type of Node object to create.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppINode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
{\b IDMUSProdNode} interface.  If an error occurs, the implementation sets {\i ppINode} 
to NULL.  On success, the caller is responsible for calling {\b IDMUSProdNode::Release}
 
when this pointer is no longer needed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The {\b AllocNode} method knows how to create new instances of one or more 
types of Node objects.  This method differs from {\b OnFileNew} in that it 
does not create a new file.  It simply provides an {\b IDMUSProdNode} interface to a newly 
created Node that can then be inserted within a file.  The newly created Node may have 
children.\par 
This method must call {\b IDMUSProdNode::AddRef}
 on {\i ppINode} before returning.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example creates a Band Node:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT STDMETHODCALLTYPE CBandDocType::AllocNode( REFGUID rguid, IDMUSProdNode** ppINode )\par 
\{\par 
\tab AFX_MANAGE_STATE(_afxModuleAddrThis);\par 
\par 
\tab ASSERT( m_pBandComponent != NULL );\par 
\par 
\tab if( ppINode == NULL )\par 
\tab \{\par 
\tab \tab return E_POINTER;\par 
\tab \}\par 
\par 
\tab *ppINode = NULL;\par 
\par 
\tab if( ::IsEqualGUID(rguid, GUID_BandNode) == FALSE )\par 
\tab \{\par 
\tab \tab return E_INVALIDARG;\par 
\tab \}\par 
\par 
\tab // Create a new Band\par 
\tab CBand* pBand = new CBand( m_pBandComponent );\par 
\tab if( pBand == NULL )\par 
\tab \{\par 
\tab \tab return E_OUTOFMEMORY ;\par 
\tab \}\par 
\par 
\tab pBand->AddRef();\par 
\tab *ppINode = (IDMUSProdNode *)pBand;\par 
\par 
\tab return S_OK;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \sa160\sl240 \fs21\lang1033 The {\b AllocNode} method knows how to create new instances of Node objects. 
This method differs from {\b OnFileNew} in that it does not create a new 
file.  It simply provides an {\b IDMUSProdNode} interface to a newly created Project Tree 
Node that can then be inserted within another file.\par 
A Style file contains Band Nodes.  The Style file's Band Nodes are actually created and 
managed by a different DirectMusic Producer Component.  When the Style Editor Component 
recognizes that the user wants to insert a new Band into a Style, it must locate the 
{\b IDMUSProdDocType} interface whose {\b AllocNode} method knows how to 
create Band Nodes. This is accomplished by calling {\b IDMUSProdFramework::FindDocTypeByNodeId}
. 
{\b IDMUSProdFramework::FindDocTypeByNodeId}
 enumerates the registered {\b IDMUSProdDocType} interfaces 
calling {\b DoesIdMatch} to find the requested {\b IDMUSProdDocType} interface.\par 
The following code inserts a new Band into the 'Bands' folder of a Style:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CStyleBands::InsertChildNode( IDMUSProdNode* pIChildNode )\par 
\{\par 
\tab AFX_MANAGE_STATE(_afxModuleAddrThis);\par 
\par 
\tab IDMUSProdDocType* pIDocType;\par 
\par 
\tab ASSERT( m_pStyleComponent != NULL );\par 
\tab ASSERT( m_pStyleComponent->m_pIFramework != NULL );\par 
\tab ASSERT( m_pStyle != NULL );\par 
\par 
\tab if( pIChildNode == NULL )\tab // Create a new Band\par 
\tab \{\par 
\tab \tab HRESULT hr;\par 
\par 
\tab \tab hr = m_pStyleComponent->m_pIFramework->FindDocTypeByNodeId( GUID_BandNode, &pIDocType );\par 
\tab \tab if( SUCCEEDED ( hr ) )\par 
\tab \tab \{\par 
\tab \tab \tab // Create a new Band\par 
\tab \tab \tab hr = pIDocType->AllocNode( GUID_BandNode, &pIChildNode );\par 
\tab \tab \tab if( !SUCCEEDED ( hr ) )\par 
\tab \tab \tab \{\par 
\tab \tab \tab \tab pIChildNode = NULL;\par 
\tab \tab \tab \}\par 
\par 
\tab \tab \tab pIDocType->Release();\par 
\tab \tab \}\par 
\par 
\tab \tab if( pIChildNode == NULL )\par 
\tab \tab \{\par 
\tab \tab \tab return E_OUTOFMEMORY;\par 
\tab \tab \}\par 
\tab \}\par 
\tab else\par 
\tab \{\par 
\tab \tab pIChildNode->AddRef();\par 
\tab \}\par 
\par 
\tab // add to CStyle Band list\par 
\tab m_lstBands.AddTail( pIChildNode );\par 
\par 
\tab // Set DocRoot node and parent Node of ALL children\par 
\tab theApp.SetNodePointers( pIChildNode, (IDMUSProdNode *)m_pStyle, (IDMUSProdNode *)this );\par 
\par 
\tab // Add Node to Project Tree\par 
\tab if( !SUCCEEDED ( m_pStyleComponent->m_pIFramework->AddNode(pIChildNode, (IDMUSProdNode *)this) ) )\par 
\tab \{\par 
\tab \tab DeleteChildNode( pIChildNode );\par 
\tab \tab return E_FAIL;\par 
\tab \}\par 
\par 
\tab m_pStyleComponent->m_pIFramework->SetModifiedFlag( (IDMUSProdNode *)this, TRUE );\par 
\par 
\tab return S_OK;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdDocType}, {\b IDMUSProdNode}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdDocType::DoesExtensionMatch Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT DoesExtensionMatch(}{\b BSTR} {\i bstrExt}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns S_OK if {\i bstrExt} matches 
this {\b DocType}'s file extension.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i bstrExt} matches the file extension of this DocType.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell {\i bstrExt} does not match the file extension of this DocType.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and {\i bstrExt} could not be checked against this DocType.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i bstrExt}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] File extension (i.e. ".sty").  This method must free 
{\i bstrExt} with SysFreeString when it is no longer needed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The {\b IDMUSProdDocType} interface provides methods for handling File New and File Open 
commands.  After the user has invoked File New or File Open, the Framework enumerates 
the registered {\b IDMUSProdDocType} interfaces calling {\b DoesExtensionMatch} 
to find the appropriate {\b IDMUSProdDocType} interface for the requested operation.  Once 
found, either {\b OnFileNew} or {\b OnFileOpen} are called to 
complete the user's request.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example determines whether or not the specified file extension matches 
this DocType:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CStyleDocType::DoesExtensionMatch( BSTR bstrExt )\par 
\{\par 
\tab AFX_MANAGE_STATE(_afxModuleAddrThis);\par 
\par 
\tab CString strExt = bstrExt;\par 
\tab ::SysFreeString( bstrExt );\par 
\par 
\tab CString strDocTypeExt;\par 
\tab TCHAR   achBuffer[MAX_BUFFER];\par 
\par 
\tab if( ::LoadString(theApp.m_hInstance, IDR_STYLE_DOCTYPE, achBuffer, MID_BUFFER) == 0 )\par 
\tab \{\par 
\tab \tab return E_FAIL;\par 
\tab \}\par 
\par 
\tab if( AfxExtractSubString(strDocTypeExt, achBuffer, CDocTemplate::filterExt) )\par 
\tab \{\par 
\tab \tab ASSERT( strDocTypeExt[0] == '.' );\par 
\par 
\tab \tab BOOL fContinue = TRUE;\par 
\tab \tab CString strDocExt;\par 
\tab \tab int nFindPos;\par 
\par 
\tab \tab nFindPos = strDocTypeExt.Find( _T(";") );\par 
\tab \tab while( fContinue )\par 
\tab \tab \{\par 
\tab \tab \tab if( nFindPos == -1 )\par 
\tab \tab \tab \{\par 
\tab \tab \tab \tab fContinue = FALSE;\par 
\par 
\tab \tab \tab \tab nFindPos = strDocTypeExt.Find( _T(".") );\par 
\tab \tab \tab \tab if( nFindPos != 0 )\par 
\tab \tab \tab \tab \{\par 
\tab \tab \tab \tab \tab break;\par 
\tab \tab \tab \tab \}\par 
\tab \tab \tab \tab strDocExt = strDocTypeExt;\par 
\tab \tab \tab \}\par 
\tab \tab \tab else\par 
\tab \tab \tab \{\par 
\tab \tab \tab \tab strDocExt = strDocTypeExt.Left( nFindPos );\par 
\tab \tab \tab \tab strDocTypeExt = strDocTypeExt.Right( strDocTypeExt.GetLength() - (nFindPos + 1) );\par 
\tab \tab \tab \}\par 
\par 
\tab \tab \tab if( _tcsicmp(strExt, strDocExt) == 0 )\par 
\tab \tab \tab \{\par 
\tab \tab \tab \tab return S_OK;\tab // extension matches\par 
\tab \tab \tab \}\par 
\par 
\tab \tab \tab nFindPos = strDocTypeExt.Find( _T(";") );\par 
\tab \tab \}\par 
\tab \}\par 
\par 
\tab return S_FALSE;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdDocType}, {\b IDMUSProdFramework::FindDocTypeByExtension}
\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdDocType::DoesIdMatch Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT DoesIdMatch(}{\b REFGUID} {\i rguid}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns S_OK if this {\b DocType} knows how 
to manage/allocate {\b Node}s of type {\i rguid}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i rguid} matches one of the node ID's supported by this DocType.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell {\i rguid} is not supported by this DocType.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and {\i rguid} could not be checked against this DocType.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i rguid}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Node ID.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 A GUID identifies a type of Node.  For example, all Style Nodes have the same 
GUID, or node ID.\par 
A DocType may be associated with more than one node ID, meaning that it knows how to 
process more than one type of Node object.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following {\b DoesIdMatch} method determines whether or not the specified 
ID is supported by the DocType object:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CBandDocType::DoesIdMatch( REFGUID rguid )\par 
\{\par 
\tab AFX_MANAGE_STATE(_afxModuleAddrThis);\par 
\par 
\tab if( ::IsEqualGUID(rguid, GUID_BandNode) )\par 
\tab \{\par 
\tab \tab return S_OK;\par 
\tab \}\par 
\par 
\tab return S_FALSE;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdDocType}, {\b IDMUSProdFramework::FindDocTypeByNodeId}
\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdDocType::GetListInfo Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetListInfo(}{\b IStream*} {\i pIStream}{\b , DMUSProdListInfo*} {\i pListInfo}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Fills a {\b DMUSProdListInfo} structure with information 
describing the object in {\i pIStream}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Information was successfully placed in the DMUSProdListInfo structure.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The address in either {\i pIStream} or {\i pListInfo} is not valid. 
For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred and the information was not returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIStream}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the stream from which the object should be 
loaded.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pListInfo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to a DMUSProdListInfo structure.  The caller must free 
pListInfo->bstrDescriptor and pListInfo->bstrName with SysFreeString when they are no longer 
needed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The {\b Framework} calls {\b GetListInfo} to retrieve information later returned 
by {\b IDMUSProdNode::GetNodeListInfo}
 for files that exist in the Project Tree but have not yet 
been loaded.\par 
Lists of specific types of Nodes can be built by calling {\b IDMUSProdProject::GetFirstFileByDocType}
 
and {\b IDMUSProdProject::GetNextFileByDocType}
.  After acquiring each {\b IDMUSProdNode} pointer, 
{\b IDMUSProdNode::GetNodeListInfo}
 can be called to obtain text for the combo box item. 
After a selection is made, {\b IDMUSProdFramework::FindDocRootNode}
 can be called to obtain an 
IDMUSProdNode pointer for the selected item.\par 
The caller must set DMUSProdListInfo.wSize to the size of the DMUSProdListInfo structure.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example fills a DMUSProdListInfo structure for a Style file:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CStyleDocType::GetListInfo( IStream* pIStream, DMUSProdListInfo* pListInfo)\par 
\{\par 
\tab AFX_MANAGE_STATE(_afxModuleAddrThis);\par 
\par 
\tab IDMUSProdRIFFStream* pIRiffStream;\par 
\tab MMCKINFO ckMain;\par 
\tab MMCKINFO ck;\par 
\tab HRESULT hr;\par 
\par 
\tab ASSERT( pIStream != NULL );\par 
\tab ASSERT( pListInfo != NULL );\par 
\par 
\tab if( pIStream == NULL\par 
\tab ||  pListInfo == NULL )\par 
\tab \{\par 
\tab \tab return E_INVALIDARG;\par 
\tab \}\par 
\par 
\tab hr = E_FAIL;\par 
\par 
\tab if( SUCCEEDED( AllocRIFFStream( pIStream, &pIRiffStream ) ) )\par 
\tab \{\par 
\tab \tab ckMain.fccType = FOURCC_STYLE_FORM;\par 
\par 
\tab \tab if( pIRiffStream->Descend( &ckMain, NULL, MMIO_FINDRIFF ) == 0 )\par 
\tab \tab \{\par 
\tab \tab \tab ck.ckid = FOURCC_STYLE;\par 
\par 
\tab \tab \tab if( pIRiffStream->Descend( &ck, &ckMain, MMIO_FINDCHUNK ) == 0 )\par 
\tab \tab \tab \{\par 
\tab \tab \tab \tab ioStyle iStyle;\par 
\tab \tab \tab \tab DWORD dwSize;\par 
\tab \tab \tab \tab DWORD dwByteCount;\par 
\par 
\tab \tab \tab \tab dwSize = min( ck.cksize, sizeof( iStyle ) );\par 
\tab \tab \tab \tab hr = pIStream->Read( &iStyle, dwSize, &dwByteCount );\par 
\tab \tab \tab \tab if( FAILED( hr )\par 
\tab \tab \tab \tab ||  dwByteCount != dwSize )\par 
\tab \tab \tab \tab \{\par 
\tab \tab \tab \tab \tab hr = E_FAIL;\par 
\tab \tab \tab \tab \}\par 
\tab \tab \tab \tab else\par 
\tab \tab \tab \tab \{\par 
\tab \tab \tab \tab \tab CString strName;\par 
\tab \tab \tab \tab \tab CString strDescriptor;\par 
\par 
\tab \tab \tab \tab \tab strName = iStyle.wstrName;\par 
\tab \tab \tab \tab \tab pListInfo->bstrName = strName.AllocSysString();\par 
\par 
\tab \tab \tab \tab \tab WORD wClicksPerBeat = iStyle.wClocksPerBeat / iStyle.wClocksPerClick;\par 
\tab \tab \tab \tab \tab strDescriptor.Format( "%d/%d", iStyle.wBPM, iStyle.wBeat );\par 
\tab \tab \tab \tab \tab if( !(wClicksPerBeat % 3) )\par 
\tab \tab \tab \tab \tab \{\par 
\tab \tab \tab \tab \tab \tab strDescriptor += _T("  3");\par 
\tab \tab \tab \tab \tab \}\par 
\tab \tab \tab \tab \tab pListInfo->bstrDescriptor = strDescriptor.AllocSysString();\par 
\par 
\tab \tab \tab \tab \tab hr = S_OK;\par 
\tab \tab \tab \tab \}\par 
\tab \tab \tab \}\par 
\tab \tab \}\par 
\par 
\tab \tab pIRiffStream->Release();\par 
\tab \}\par 
\par 
\tab return hr;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b Node} Object, {\b IDMUSProdDocType}, {\b IDMUSProdNode}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdDocType::GetResourceId Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetResourceId(}{\b HINSTANCE*} {\i phInstance}{\b , UINT*} {\i pnResourceId}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 A Component can call 
{\b IDMUSProdFramework::AddDocType}
 to add an additional {\b DocType} to the Framework's 
File New, FileOpen and File Save dialogs.  GetResourceId returns the HINSTANCE and 
resource ID storing the DocType's icon, accelerator table (if needed) and 
string resource.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell HINSTANCE and resource ID were returned in {\i phInstance} and {\i pnResourceId}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in either {\i phInstance} or {\i pnResourceId} is not valid. 
For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i phInstance}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out] Pointer to handle of the module containing the resources 
for this DocType.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pnResourceId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out] Pointer to ID of the resources used for this DocType.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The string resource consists of up to seven substrings separated by the '\\n' character 
(the '\\n' character is needed as a place holder if a substring is not included; however, 
trailing '\\n' characters are not necessary); these substrings describe the DocType:\par 
1. {\i windowTitle}   Name that appears in the application window's title bar (for example, 
"Style Editor").  Only used in SDI applications.\par 
2. {\i docName}   Root for the default document name (for example, "Style"). This root, 
plus a number, is used for the default name of a new document of this type whenever the 
user chooses the New command from the File menu (for example, "Style1" or "Style2"). 
If not specified, "Untitled" is used as the default.\par 
3. {\i fileName}\tab   Name of this DocType. If the application supports more than one type 
of document, this string is displayed in the File New dialog box (for example, "Style"). 
If not specified, the DocType is inaccessible using the File New command.\par 
4. {\i filterName}   Description of the DocType and a wildcard filter matching documents 
of this type. This string is displayed in the List Files Of Type drop-down list in the 
File Open dialog box (for example, "Style Files (*.sty;*.stp)").  If not specified, the 
DocType  is inaccessible using the File Open command.  Filters should include both the 
runtime and design-time extensions.\par 
5. {\i filterExt}  Extension for documents of this type (for example, ".sty;.stp"). If not 
specified, the DocType is inaccessible using the File Open command.  Filters should 
nclude both the runtime and design-time extensions.\par 
6. {\i regTypeId}   Identifier for the DocType to be stored in the registration database 
maintained by Windows.  This string is for internal use only (for example, "DirectMusic.Style"). 
If not specified, the DocType cannot be registered with the Windows File Manager.\par 
7. {\i regTypeName}   Name of the DocType to be stored in the registration database. 
This string may be displayed in dialog boxes of applications that access the registration 
database (for example, "DirectMusic Style").\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The resources are found in the Component DLL's resource file.  For example:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 IDR_STYLE_DOCTYPE ICON\tab DISCARDABLE     "res\\\\Style.ico"\par 
\par 
STRINGTABLE DISCARDABLE\par 
BEGIN\par 
\tab IDR_STYLE_DOCTYPE\tab "\\nStyle\\nStyle\\nStyle Files (*.sty;*.stp)\\n.sty;.stp\\nDirectMusic.Style\\nDirectMusic Style"\par 
END\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \sa160\sl240 \fs21\lang1033 Note that the string begins with a '\\n' character; this is because the first substring is not 
used for MDI applications and so is not included.  You can edit this string using the string 
editor; the entire string appears as a single entry in the String Editor, not as seven separate 
entries.\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \sa160\sl240 \fs21\lang1033 The following example returns the HINSTANCE and resource ID for the DocType:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CStyleDocType::GetResourceId( HINSTANCE* phInstance, UINT* pnResourceId )\par 
\{\par 
\tab AFX_MANAGE_STATE(_afxModuleAddrThis);\par 
\par 
\tab if( phInstance == NULL\par 
\tab ||  pnResourceId == NULL )\par 
\tab \{\par 
\tab \tab return E_POINTER;\par 
\tab \}\par 
\par 
\tab *phInstance   = theApp.m_hInstance;\par 
\tab *pnResourceId = IDR_STYLE_DOCTYPE;\par 
\par 
\tab return S_OK;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdDocType}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdDocType::IsFileTypeExtension Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT IsFileTypeExtension(}{\b FileType} {\i ftFileType}{\b , BSTR} {\i bstrExt}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Determines whether {\i bstrExt} is a 
valid extension for files with a file type of {\i ftFileType}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i bstrExt} is a valid extension for files with a FileType of {\i ftFileType}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell {\i bstrExt} is not a valid extension for files with a FileType of 
{\i ftFileType}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and {\i bstrExt} could not be checked against {\i ftFileType}.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ftFileType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Type of file.  {\i ftFileType} must be FT_DESIGN or 
FT_RUNTIME.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i bstrExt}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] File extension (i.e. ".sty").  This method must free 
{\i bstrExt} with SysFreeString when it is no longer needed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 DirectMusic Producer allows users to save files in either design-time or runtime format. 
This method associates {\i bstrExt} with a specific file type.\par 
The following file types are valid for use in {\i ftFileType}:\par 
FT_DESIGN        Design-time file.  File contains UI state information for use by its editor(s).\par 
FT_RUNTIME      Runtime file.  File stores content in its most compact form.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example determines whether or not {\i bstrExt} is a valid extension for 
files with a type of {\i ftFileType}:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CStyleDocType::IsFileTypeExtension( FileType ftFileType, BSTR bstrExt )\par 
\{\par 
\tab AFX_MANAGE_STATE(_afxModuleAddrThis);\par 
\par 
\tab CString strExt = bstrExt;\par 
\tab ::SysFreeString( bstrExt );\par 
\par 
\tab strExt.MakeLower();\par 
\par 
\tab switch( ftFileType )\par 
\tab \{\par 
\tab \tab case FT_DESIGN:\par 
\tab \tab \tab if( strExt == _T(".stp") )\par 
\tab \tab \tab \{\par 
\tab \tab \tab \tab return S_OK;\par 
\tab \tab \tab \}\par 
\tab \tab \tab break;\par 
\par 
\tab \tab case FT_RUNTIME:\par 
\tab \tab \tab if( strExt == _T(".sty") )\par 
\tab \tab \tab \{\par 
\tab \tab \tab \tab return S_OK;\par 
\tab \tab \tab \}\par 
\tab \tab \tab break;\par 
\tab \}\par 
\par 
\tab return S_FALSE;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdDocType}, {\b IDMUSProdPersistInfo}, {\b IDMUSProdPersistInfo::GetStreamInfo}
\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdDocType::OnFileNew Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT OnFileNew(}{\b IDMUSProdProject*} {\i pITargetProject}{\b , IDMUSProdNode*} {\i pITargetDirectoryNode}
{\b , IDMUSProdNode**} {\i ppIDocRootNode}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Creates a new file and adds the corresponding 
{\b Node} object(s) to the Project Tree.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The newly created object's top {\b IDMUSProdNode} was returned in 
{\i ppIDocRootNode}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppIDocRootNode} is not valid.  For example, it may 
be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITargetProject}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] {\b IDMUSProdProject} interface pointer to the 
{\b Project} that will contain this file.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITargetDirectoryNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] {\b IDMUSProdNode} interface pointer to the 
Project Tree Directory {\b Node} that will contain this file.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the 
requested {\b IDMUSProdNode} interface.  If an error occurs, the implementation sets 
{\i ppIDocRootNode} to NULL.  On success, the caller is responsible for calling 
{\b IDMUSProdNode::Release}
 when this pointer is no longer needed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This method gets called in response to a File New command.\par 
A file may consist of one or more {\b Node} objects.  The top Node is the Node that must 
be returned in {\i ppIDocRootNode}.  The Framework associates {\i ppIDocRootNode} with 
its own representation of a file object.\par 
This method must call {\b IDMUSProdNode::AddRef}
 on {\i ppIDocRootNode} before returning.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example creates a new Band file and places its DocRoot node into the 
active folder of the Project Tree.  Notice that the {\b AllocNode} method 
is actually responsible for creating the Band object:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CBandDocType::OnFileNew( IDMUSProdProject* pITargetProject, IDMUSProdNode* pITargetDirectoryNode, IDMUSProdNode** ppIDocRootNode )\par 
\{\par 
\tab AFX_MANAGE_STATE(_afxModuleAddrThis);\par 
\par 
\tab IDMUSProdNode* pIBandNode;\par 
\tab HRESULT hr;\par 
\par 
\tab ASSERT( m_pComponent != NULL );\par 
\tab ASSERT( m_pComponent->m_pIFramework != NULL );\par 
\par 
\tab if( ppIDocRootNode == NULL )\par 
\tab \{\par 
\tab \tab return E_POINTER;\par 
\tab \}\par 
\par 
\tab *ppIDocRootNode = NULL;\par 
\par 
\tab // Create a new Band\par 
\tab hr = AllocNode( GUID_BandNode, &pIBandNode );\tab // performs AddRef()\par 
\tab if( SUCCEEDED ( hr ) )\par 
\tab \{\par 
\tab \tab // Insert the Band Node into the Project Tree\par 
\tab \tab hr = InsertChildNode( pIBandNode );\par 
\tab \tab if( SUCCEEDED ( hr ) )\par 
\tab \tab \{\par 
\tab \tab \tab *ppIDocRootNode = pIBandNode;\par 
\tab \tab \tab m_pComponent->m_pIFramework->SetModifiedFlag( pIBandNode, TRUE );\par 
\tab \tab \tab hr = S_OK;\par 
\tab \tab \}\par 
\tab \tab else\par 
\tab \tab \{\par 
\tab \tab \tab pIBandNode->Release();\par 
\tab \tab \}\par 
\tab \}\par 
\par 
\tab return hr;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b Node} Object, {\b IDMUSProdDocType}, {\b OnFileOpen}, {\b OnFileSave}, {\b IDMUSProdNode}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdDocType::OnFileOpen Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT OnFileOpen(}{\b IStream*} {\i pIStream}{\b , IDMUSProdProject*} {\i pITargetProject}
{\b , IDMUSProdNode*} {\i pITargetDirectoryNode}
{\b , IDMUSProdNode**} {\i ppIDocRootNode}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Loads the specified stream and adds the 
corresponding {\b Node} object(s) to the Project Tree.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The newly created object's top {\b IDMUSProdNode} was returned in 
{\i ppIDocRootNode}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppIDocRootNode} is not valid.  For example, 
it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIStream}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the stream from which the object should be 
loaded.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITargetProject}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] {\b IDMUSProdProject} interface pointer to the 
{\b Project} that will contain this file.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITargetDirectoryNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] {\b IDMUSProdNode} interface pointer to the 
Project Tree Directory {\b Node} that will contain this file.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the 
requested {\b IDMUSProdNode} interface.  If an error occurs, the implementation sets 
{\i ppIDocRootNode} to NULL.  On success, the caller is responsible for calling 
{\b IDMUSProdNode::Release}
 when this pointer is no longer needed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This method gets called in response to a File Open command.\par 
A file may consist of one or more {\b Node} objects.  The top Node is the Node that 
must be returned in {\i ppIDocRootNode}.  The Framework associates {\i ppIDocRootNode} 
with its own representation of a file object.\par 
This method must call {\b IDMUSProdNode::AddRef}
 on {\i ppIDocRootNode} before returning.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example loads a Band file and places its DocRoot node into the Project 
Tree's active folder.  Notice that the Band Editor Component's 
{\b IDMUSProdComponent::LoadRIFFChunk}
 method is actually responsible for loading the Band 
object:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CBandDocType::OnFileOpen( IStream* pIStream, IDMUSProdProject* pITargetProject, IDMUSProdNode* pITargetDirectoryNode, IDMUSProdNode** ppIDocRootNode )\par 
\{\par 
\tab AFX_MANAGE_STATE(_afxModuleAddrThis);\par 
\par 
\tab IDMUSProdNode* pINode;\par 
\tab HRESULT hr;\par 
\par 
\tab ASSERT( pIStream != NULL );\par 
\tab ASSERT( m_pComponent != NULL );\par 
\par 
\tab if( ppIDocRootNode == NULL )\par 
\tab \{\par 
\tab \tab return E_POINTER;\par 
\tab \}\par 
\par 
\tab *ppIDocRootNode = NULL;\par 
\par 
\tab if( SUCCEEDED ( m_pComponent->LoadRIFFChunk( pIStream, &pINode ) ) )\tab // performs AddRef()\par 
\tab \{\par 
\tab \tab // Insert a Node into the Project Tree\par 
\tab \tab hr = InsertChildNode( pINode );\par 
\tab \tab if( !SUCCEEDED ( hr ) )\par 
\tab \tab \{\par 
\tab \tab \tab pINode->Release();\par 
\tab \tab \tab return hr;\par 
\tab \tab \}\par 
\tab \}\par 
\par 
\tab *ppIDocRootNode = pINode;\par 
\tab return S_OK;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b Node} Object, {\b IDMUSProdDocType}, {\b OnFileNew}, {\b OnFileSave}, {\b IDMUSProdNode}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdDocType::OnFileSave Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT OnFileSave(}{\b IStream*} {\i pIStream}{\b , IDMUSProdNode*} {\i pIDocRootNode}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Saves the file to the specified stream.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The file specified in {\i pIDocRootNode} was saved successfully.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and the file was not saved.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIStream}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the stream into which the object should be 
saved.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the file's DocRoot {\b IDMUSProdNode} 
interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This method gets called in response to a File Save or File Save As command.\par 
A file may consist of one or more {\b Node} objects.  The top Node of the file is the 
Node specified in {\i pIDocRootNode}.  The Framework associates {\i pIDocRootNode} 
with its own representation of a file object.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b Node} Object, {\b IDMUSProdDocType}, {\b OnFileNew}, {\b OnFileOpen}, {\b IDMUSProdNode}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdEditor Interface\par
\pard\plain \sa160\sl240 \fs21\lang1033 This interface defines interaction between the {\b Framework} and the {\b Editor} that opens 
when a node in the Project Tree is double-clicked.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 DirectMusic Producer Editors are standard registered COM objects.  In addition to 
{\b IDMUSProdEditor}, these objects must implement {\b IOleObject}, {\b IViewObjectEx}, 
{\b IOleControl}, {\b IOleInPlaceObject}, and {\b IOleInPlaceActiveObject}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Based On\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IUnknown}\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdNode}, {\b IDMUSProdFramework::OpenEditor}
, {\b IDMUSProdFramework::CloseEditor}
\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT AttachObjects}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Hands corresponding IDMUSProdNode interface pointer to 
the Editor.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT OnInitMenuFilePrint}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Initializes state of Framework's File Print menu 
item.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT OnInitMenuFilePrintPreview}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Initializes state of Framework's File 
Print Preview menu item.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT OnFilePrint}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Performs action associated with Framework's File Print 
menu item.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT OnFilePrintPreview}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Performs action associated with Framework's File 
Print Preview menu item.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT OnViewProperties}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Performs action associated with Framework's View 
Properties menu item.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT OnF1Help}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Performs context help action associated with F1.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdEditor::AttachObjects Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT AttachObjects(}{\b IDMUSProdNode*} {\i pINode}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Hands corresponding {\b IDMUSProdNode} 
interface pointer to the {\b Editor}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Pointer was stored successfully.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pINode} is not valid.  For example, the address may be NULL.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pINode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to Editor's corresponding {\b IDMUSProdNode} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The Framework calls AttachObjects immediately after contructing the Editor OLE Control 
so that the pointers are avaliable for the Editor's WM_CREATE handler.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example stores pointers supplied by AttachObjects:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CMyEditor::AttachObjects( IDMUSProdNode* pINode )\par 
\{\par 
\tab if( pINode == NULL )\par 
\tab \{\par 
\tab \tab return E_INVALIDARG;\par 
\tab \}\par 
\par 
\tab m_pStyle = (CStyle *)pINode;\par 
\tab m_pStyle->AddRef();\par 
\par 
\tab return S_OK;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \sa160\sl240 \fs21\lang1033 The following code excerpt shows the Framework calling AttachObjects:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 ...\par 
...\par 
...\par 
\par 
pCntrItem = new CComponentCntrItem( this );\par 
ASSERT_VALID( pCntrItem );\par 
\par 
if( !pCntrItem->CreateNewItem( clsidEditor ) )\par 
\{\par 
\tab AfxThrowMemoryException();\tab \tab // any exception will do\par 
\}\par 
\par 
// Attach object to the control\par 
ASSERT( pCntrItem->m_lpObject != NULL );\par 
if( SUCCEEDED ( pCntrItem->m_lpObject->QueryInterface( IID_IDMUSProdEditor, (void**)&pIEditor ) ) )\par 
\{\par 
\tab pView->m_pIEditor = pIEditor;\par 
\tab pIEditor->AttachObjects( pINode, NULL );\par 
\}\par 
else\par 
\{\par 
\tab AfxThrowMemoryException();\tab \tab // any exception will do\par 
\}\par 
\par 
pCntrItem->DoVerb( OLEIVERB_SHOW, static_cast<CComponentView*>( pView ) );\par 
\par 
...\par 
...\par 
...\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdEditor}, {\b IDMUSProdNode::GetEditorClsId}
, {\b IDMUSProdFramework::OpenEditor}
, {\b IDMUSProdFramework::CloseEditor}
\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdEditor::OnF1Help Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT OnF1Help(}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Performs the context help action associated 
with F1.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Context help was displayed successfully.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred and context help could not be displayed.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_NOTIMPL\cell This {\b Editor} does not support context help.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdEditor}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdEditor::OnFilePrint Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT OnFilePrint(}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Performs action associated with Framework's 
File Print menu item.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Print was successful.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell Print encountered a problem.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_NOTIMPL\cell This {\b Editor} does not support Print.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdEditor}, {\b OnInitMenuFilePrint}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdEditor::OnFilePrintPreview Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT OnFilePrintPreview(}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Performs action associated with 
Framework's File Print Preview menu item.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Print Preview was successful.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell Print Preview encountered a problem.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_NOTIMPL\cell This {\b Editor} does not support Print Preview.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdEditor}, {\b OnInitMenuFilePrintPreview}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdEditor::OnInitMenuFilePrint Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT OnInitMenuFilePrint(}{\b HMENU} {\i hMenu}{\b , UINT} {\i nMenuId}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Initializes state of Framework's File 
Print menu item.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Always succeeds.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hMenu}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Handle to Framework's File menu.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i nMenuId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Command ID of Framework's File Print menu item.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example enables the Framework's File Print menu item:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CMyEditor::OnInitMenuFilePrint( HMENU hMenu, UINT nMenuId )\par 
\{\par 
\tab ::EnableMenuItem( hMenu, nMenuId, (MF_ENABLED | MF_BYCOMMAND) );\par 
\par 
\tab return S_OK;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdEditor}, {\b OnFilePrint}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdEditor::OnInitMenuFilePrintPreview Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT OnInitMenuFilePrintPreview(}{\b HMENU} {\i hMenu}{\b , UINT} {\i nMenuId}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Initializes state of Framework's 
File Print Preview menu item.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Always succeeds.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hMenu}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Handle to Framework's File menu.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i nMenuId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Command ID of Framework's File Print Preview menu item.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example disables the Framework's File Print Preview menu item:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CMyEditor::OnInitMenuFilePrintPreview( HMENU hMenu, UINT nMenuId )\par 
\{\par 
\tab ::EnableMenuItem( hMenu, nMenuId, (MF_GRAYED | MF_BYCOMMAND) );\par 
\par 
\tab return S_OK;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdEditor}, {\b OnFilePrintPreview}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdEditor::OnViewProperties Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT OnViewProperties(}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Performs action associated with 
Framework's View Properties menu item.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Display of properties was successful.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred and properties could not be displayed.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_NOTIMPL\cell This {\b Editor} does not support properties.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Called when an Editor is active and the user selects the Framework's View Properties 
menu item.\par 
Properties should be displayed for the control which has focus.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b PropSheet} Object, {\b PropPageManager} Object, {\b PropPageObject} Object, {\b IDMUSProdEditor}, {\b IDMUSProdPropSheet}, {\b IDMUSProdPropPageManager}, {\b IDMUSProdPropPageObject}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFileRefChunk Interface\par
\pard\plain \sa160\sl240 \fs21\lang1033 This interface contains methods to manage DirectMusic Producer file reference RIFF chunks.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 A file may need to associate itself with other files in its {\b Project}.  For example, 
a Band may use one or more DLS files.  In order to establish a connection to other files, 
the saved Band contains one or more file reference chunks each pointing to a DLS file.\par 
{\b IDMUSProdFileRefChunk} provides a standard way for DirectMusic Producer {\b Component}s 
to place DirectMusic Producer file reference RIFF chunks in the design-time version of 
their files.  These chunks contain enough information so that DirectMusic Producer can 
load the referenced file when the file is opened.\par 
{\b IDMUSProdFileRefChunk} places Producer specific file reference chunks in streams so that 
links can be re-established within Producer the next time the file is opened by Producer. 
{\b IDMUSProdLoaderRefChunk} places DirectMusic file reference chunks in streams so that links 
can be established when the file is loaded into the DirectMusic DLLs either externally or 
via Producer.\par 
A DirectMusic Producer Component can call {\b IDMUSProdFramework::QueryInterface}
 to 
obtain a pointer to the {\b Framework}'s {\b IDMUSProdFileRefChunk} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Based On\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IUnknown}\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b Node} Object, {\b IDMUSProdComponent}, {\b IDMUSProdFramework}, {\b IDMUSProdNode}\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT LoadRefChunk}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Reads a DirectMusic Producer file reference RIFF chunk, 
loads the referenced file, and returns a pointer to the referenced file's DocRoot node.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SaveRefChunk}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Saves a DirectMusic Producer file reference RIFF chunk.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetChunkSize}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns the size of a DirectMusic Producer file reference RIFF 
chunk.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFileRefChunk::GetChunkSize Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetChunkSize(}{\b DWORD*} {\i pdwSize}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns the size of a DirectMusic 
Producer file reference RIFF chunk.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The chunk size was returned in {\i pdwSize}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell {\i pdwSize} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwSize}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Pointer to size of stream needed to save the 
chunk.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFileRefChunk}, {\b IDMUSProdReferenceNode}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFileRefChunk::LoadRefChunk Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT LoadRefChunk(}{\b IStream*} {\i pIStream}{\b , IDMUSProdNode**} {\i ppIDocRootNode}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Reads a DirectMusic Producer file 
reference RIFF chunk, loads the referenced file, and returns a pointer to the 
referenced file's DocRoot node in {\i ppIDocRootNode}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The top node of the referenced file was returned in {\i ppIDocRootNode}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppIDocRootNode} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The value of {\i pIStream} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and the top node of the refrenced file could not be returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIStream}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to IStream interface.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
{\b IDMUSProdNode} interface.  If an error occurs, the implementation 
sets {\i ppIDocRootNode} to NULL.  On success, the caller 
is responsible for calling {\b IDMUSProdNode::Release}
 when 
this pointer is no longer needed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 A DirectMusic Producer {\b Component} can call {\b IDMUSProdFramework::QueryInterface}
 
to obtain a pointer to the {\b Framework}'s {\b IDMUSProdFileRefChunk} interface.\par 
Call {\b SaveRefChunk} to create the DirectMusic Producer file 
reference RIFF chunk loaded by {\b LoadRefChunk}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example reads a DirectMusic Producer file reference chunk and creates a 
reference {\b Node}:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 const GUID GUID_StyleRefNode = \{0x408FBB21,0xB009,0x11D0,\{0x89,0xAD,0x00,0xA0,0xC9,0x05,0x41,0x29\}\};\par 
const GUID GUID_StyleNode = \{0xFAE21E45,0xA51A,0x11D0,\{0x89,0xAD,0x00,0xA0,0xC9,0x05,0x41,0x29\}\};\par 
const CLSID CLSID_StyleComponent = \{0x44207721,0x487B,0x11d0,\{0x89,0xAC,0x00,0xA0,0xC9,0x05,0x41,0x29\}\};\par 
\par 
IDMUSProdNode* m_pIStyleRefNode;\tab // member variable storing pointer to reference Node\par 
\par 
IDMUSProdFramework* pIFramework;\par 
IDMUSProdFileRefChunk* pIFileRefChunk;\par 
IStream* pIStream;\par 
IDMUSProdNode* pINode;\par 
\par 
IDMUSProdNode* pIDocRootNode = NULL;\par 
\par 
// Get an IDMUSProdNode* pointer to the top node of the referenced file\par 
if( SUCCEEDED ( pIFramework->QueryInterface( IID_IDMUSProdFileRefChunk, (void **)&pIFileRefChunk ) ) )\par 
\{\par 
\tab if( FAILED ( pIFileRefChunk->LoadRefChunk( pIStream, &pIDocRootNode ) ) )\par 
\tab \{\par 
\tab \tab if( AfxMessageBox( IDS_BROWSE_FOR_FILE, MB_YESNO ) == IDYES )\par 
\tab \tab \{\par 
\tab \tab \tab IDMUSProdDocType* pIDocType;\par 
\par 
\tab \tab \tab if( SUCCEEDED ( pIFramework->FindDocTypeByNodeId( GUID_StyleNode, &pIDocType ) ) )\par 
\tab \tab \tab \{\par 
\tab \tab \tab \tab pIFramework->OpenFile( pIDocType, NULL, pINode, &pIDocRootNode );\par 
\tab \tab \tab \tab pIDocType->Release();\par 
\tab \tab \tab \}\par 
\tab \tab \}\par 
\tab \}\par 
\par 
\tab pIFileRefChunk->Release();\par 
\}\par 
\par 
// Create a reference node for the referenced file\par 
if( pIDocRootNode )\par 
\{\par 
\tab IDMUSProdComponent* pIComponent;\par 
\par 
\tab if( SUCCEEDED ( pIFramework->FindComponent( CLSID_StyleComponent, &pIComponent ) ) )\par 
\tab \{\par 
\tab \tab if( SUCCEEDED ( pIComponent->AllocReferenceNode( GUID_StyleRefNode, &m_pIStyleRefNode ) ) )\par 
\tab \tab \{\par 
\tab \tab \tab IDMUSProdReferenceNode* pIReferenceNode;\par 
\par 
\tab \tab \tab if( SUCCEEDED ( m_pIStyleRefNode->QueryInterface( IID_IDMUSProdReferenceNode, (void **)&pIReferenceNode ) ) )\par 
\tab \tab \tab \{\par 
\tab \tab \tab \tab pIReferenceNode->SetReferencedFile( pIDocRootNode );\par 
\tab \tab \tab \tab pIReferenceNode->Release();\par 
\tab \tab \tab \}\par 
\tab \tab \}\par 
\tab \tab pIComponent->Release();\par 
\tab \}\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b Node} Object, {\b IDMUSProdFileRefChunk}, {\b SaveRefChunk}, {\b GetChunkSize}, {\b IDMUSProdFramework::OpenFile}
, {\b IDMUSProdReferenceNode}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFileRefChunk::SaveRefChunk Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SaveRefChunk(}{\b IStream*} {\i pIStream}{\b , IDMUSProdNode*} {\i pIDocRootNode}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Saves a DirectMusic Producer file 
reference RIFF chunk.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The DirectMusic Producer file reference RIFF chunk was saved successfully.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell Either {\i pIStream} or {\i pIDocRootNode} is not valid.  For example, 
they may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and the file reference chunk could not be saved.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIStream}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to IStream interface.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to an {\b IDMUSProdNode} interface for the DocRoot 
{\b Node} of the referenced file.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 A DirectMusic Producer {\b Component} can call {\b IDMUSProdFramework::QueryInterface}
 
to obtain a pointer to the {\b Framework}'s {\b IDMUSProdFileRefChunk} interface.\par 
Call {\b LoadRefChunk} to load the DirectMusic Producer file 
reference RIFF chunk created by {\b SaveRefChunk}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following code excerpt handles creation of file reference chunks correctly.  Reference 
chunks are saved differently when persisting directly into a DirectMusic object because Producer's 
implementation of IDirectMusicLoader will be called upon to resolve the reference.  When saving to 
a file, the file type (FT_RUNTIME, FT_DESIGN) returned by {\b IDMUSProdPersistInfo::GetStreamInfo}
 
determines whether or not it is necessary to save the Producer specific file reference chunk:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 // Write Reference chunk\par 
if( pIStyleDocRootNode )\par 
\{\par 
\tab if( ::IsEqualGUID( guidDataFormat, GUID_DirectMusicObject ) )\par 
\tab \{\par 
\tab \tab SaveDMRef( pIRiffStream, pIStyleDocRootNode, WL_PRODUCER );\par 
\tab \}\par 
\tab else if( ::IsEqualGUID( guidDataFormat, GUID_CurrentVersion ) )\par 
\tab \{\par 
\tab \tab SaveDMRef( pIRiffStream, pIStyleDocRootNode, WL_DIRECTMUSIC );\par 
\tab \tab if( ftFileType == FT_DESIGN )\par 
\tab \tab \{\par 
\tab \tab \tab SaveProducerRef( pIRiffStream, pIStyleDocRootNode );\par 
\tab \tab \}\par 
\tab \}\par 
\}\par 
\par 
\par 
HRESULT CStyleRefMgr::SaveProducerRef( IDMUSProdRIFFStream* pIRiffStream, IDMUSProdNode* pIDocRootNode )\par 
\{\par 
IDMUSProdFileRefChunk* pIFileRefChunk;\par 
\par 
ASSERT( m_pIFramework != NULL );\par 
if( m_pIFramework == NULL )\par 
\{\par 
\tab return E_FAIL;\par 
\}\par 
\par 
IStream* pIStream = pIRiffStream->GetStream();\par 
ASSERT( pIStream != NULL );\par 
\par 
if ( SUCCEEDED ( m_pIFramework->QueryInterface( IID_IDMUSProdFileRefChunk, (void**)&pIFileRefChunk ) ) )\par 
\{\par 
\tab pIFileRefChunk->SaveRefChunk( pIStream, pIDocRootNode );\par 
\tab pIFileRefChunk->Release();\par 
\}\par 
\par 
pIStream->Release();\par 
return S_OK;\par 
\}\par 
\par 
\par 
HRESULT CStyleRefMgr::SaveDMRef( IDMUSProdRIFFStream* pIRiffStream,\par 
\tab \tab \tab \tab \tab \tab \tab  IDMUSProdNode* pIDocRootNode, WhichLoader whichLoader )\par 
\{\par 
IDMUSProdLoaderRefChunk* pIRefChunkLoader;\par 
\par 
ASSERT( m_pIFramework != NULL );\par 
if( m_pIFramework == NULL )\par 
\{\par 
\tab return E_FAIL;\par 
\}\par 
\par 
HRESULT hr = E_FAIL;\par 
\par 
IStream* pIStream = pIRiffStream->GetStream();\par 
ASSERT( pIStream != NULL );\par 
\par 
if( SUCCEEDED( m_pIFramework->QueryInterface( IID_IDMUSProdLoaderRefChunk, (void**)&pIRefChunkLoader ) ) )\par 
\{\par 
\tab if( pIRefChunkLoader )\par 
\tab \{\par 
\tab \tab switch( whichLoader )\par 
\tab \tab \{\par 
\tab \tab \tab case WL_DIRECTMUSIC:\par 
\tab \tab \tab case WL_PRODUCER:\par 
\tab \tab \tab \tab hr = pIRefChunkLoader->SaveRefChunkForLoader( pIStream,\par 
\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab   pIDocRootNode,\par 
\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab   CLSID_DirectMusicStyle,\par 
\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab   NULL,\par 
\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab   whichLoader );\par 
\tab \tab \tab \tab break;\par 
\tab \tab \}\par 
\par 
\tab \tab pIRefChunkLoader->Release();\par 
\tab \}\par 
\}\par 
\par 
pIStream->Release();\par 
return hr;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdLoaderRefChunk}, {\b IDMUSProdFileRefChunk}, {\b LoadRefChunk}, {\b GetChunkSize}, {\b IDMUSProdFramework::OpenFile}
, {\b IDMUSProdReferenceNode}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework Interface\par
\pard\plain \sa160\sl240 \fs21\lang1033 This interface allows a DirectMusic Producer {\b Component} object to function within 
DMUSProd.exe.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework} provides the means for Components to hook into the {\b Framework} 
through the Framework's Project Tree and 'Add-Ins' menu.  In addition, it allows a Component 
to register additional file types that can be created, opened and saved through the 
Framework's File New, File Open and File Save commands.  It provides the doorway for 
communication amongst Components. It also provides access to the Framework's status bar 
and the ability to create application-wide toolbars.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Based On\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IUnknown}\par \pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b Framework} Object, {\b IDMUSProdComponent}, {\b IDMUSProdDocType}, {\b IDMUSProdNode}, {\b IDMUSProdEditor}, {\b IDMUSProdRIFFExt}, {\b IDMUSProdMenu}, {\b IDMUSProdToolBar}\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Methods\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT FindComponent}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns a pointer to the specified Component's IDMUSProdComponent 
interface.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetFirstComponent}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns an IDMUSProdComponent interface pointer for the first 
Component in the Framework's list of registered Components.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetNextComponent}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns an IDMUSProdComponent interface pointer for the next 
Component in the Framework's list of registered Components.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT AddDocType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Registers a document type with the Framework.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT FindDocTypeByExtension}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns a pointer to the specified file extension's 
IDMUSProdDocType interface.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT FindDocTypeByNodeId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns a pointer to the specified id's IDMUSProdDocType 
interface.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetFirstDocType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns an IDMUSProdDocType interface pointer for the first 
DocType in the Framework's list of registered DocTypes.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetNextDocType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns an IDMUSProdDocType interface pointer for the next 
DocType in the Framework's list of registered DocTypes.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT CreateNewFile}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Invokes the Framework's File New command and returns a new file of 
the type described through {\i pIDocType}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT OpenFile}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Invokes the Framework's File Open command and returns a file of 
the type described through {\i pIDocType}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT CopyFile}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns a copy of the file specified in {\i pIDocRootNode}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT ShowFile}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Displays a newly created file in the Project Tree.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT RegisterClipFormatForFile}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Registers a file's clipboard format with the Framework.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SaveClipFormat}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns a stream containing the specifed clipboard format for {\i pINode}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetDocRootNodeFromData}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns an IDMUSProdNode interface pointer for the DocRoot node copied into 
{\i pIDataObject}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT AllocFileStream}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns an IStream interface pointer for the file specified in {\i bstrFileName}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT AllocMemoryStream}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns an IStream interface pointer for a newly created memory stream.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetFirstProject}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns an IDMUSProdProject interface pointer for the first 
Project in the application's list of Projects.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetNextProject}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns an IDMUSProdProject interface pointer for the next 
Project in the application's list of Projects.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT FindProject}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns an IDMUSProdProject interface pointer for the Project 
containing {\i pINode}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT IsProjectEqual}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Determines whether {\i pIDocRootNode1} and {\i pIDocRootNode2} are 
in the same Project.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT AddNodeImageList}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Adds images to the Project Tree's image list.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetNodeFileName}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns the path/filename of the file associated with {\i pINode}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetNodeFileGUID}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns the Producer generated GUID assigned to the file associated with {\i pINode}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT RevertFileToSaved}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Reverts the document associated with {\i pINode} to its 
last saved state.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SaveNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Invokes the Framework's File Save command for the document 
associated with the DocRoot node of {\i pINode}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SaveNodeAsNewFile}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Invokes the Framework's File Save As command to create a new 
file for the node specified in {\i pINode}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT AddNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Adds one or more nodes to the Project Tree.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT RemoveNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Removes one or more nodes from the Project Tree.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT FindDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns an IDMUSProdNode interface pointer for the matching DocRoot node.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT FindDocRootNodeByFileGUID}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns an IDMUSProdNode interface pointer for the matching DocRoot node.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetBestGuessDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns an IDMUSProdNode interface pointer for the closest matching DocRoot node.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetSelectedNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Returns the Project Tree's currently selected node.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetSelectedNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Highlights the Project Tree node associated with {\i pINode}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT RefreshNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Refreshes and redraws the Project Tree node associated with {\i pINode}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SortChildNodes}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Sorts the Project Tree child nodes associated with {\i pINode}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT EditNodeLabel}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Begins in-place editing of the specified node's text.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT OpenEditor}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Opens an editor for {\i pINode}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT CloseEditor}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Closes the editor for {\i pINode}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT AddToNotifyList}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Adds {\i pINotifyThisNode} to the list of nodes notified when 
the state of {\i pIDocRootNode} changes.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT RemoveFromNotifyList}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Removes {\i pINotifyThisNode} from the list of nodes notified 
when the state of {\i pIDocRootNode} changes.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT NotifyNodes}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Notifies all nodes linked to {\i pIChangedDocRootNode} via calls to 
{\i AddToNotifyList()} that the state of {\i pIChangedDocRootNode} has changed.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT AddMenuItem}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Adds an item to the Framework's 'Add-Ins' menu.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT RemoveMenuItem}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Removes an item from the Framework's 'Add-Ins' menu.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT AddToolBar}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Adds a toolbar to the Framework.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT RemoveToolBar}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Removes a toolbar from the Framework.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetNbrStatusBarPanes}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Creates panes in the Framework's status bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetStatusBarPaneInfo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Sets the specified status bar pane to a new 
style and width.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetStatusBarPaneText}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Sets the text of the specified status bar pane.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT RestoreStatusBar}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Removes panes from the Framework's status bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT StartProgressBar}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Creates a progress bar control in the Framework's 
status bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetProgressBarPos}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Sets the current position of the progress bar control.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT SetProgressBarStep}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the step increment for the progress bar control.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT StepProgressBar}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Advances current position of the progress bar control by the step 
increment.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT EndProgressBar}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Removes the progress bar control from the Framework's 
status bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b HRESULT GetSharedObject}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Allows one or more DirectMusic Producer Components to share 
the same COM object.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::AddDocType Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT AddDocType(}{\b IDMUSProdDocType*} {\i pIDocType}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Registers a {\b DocType} object with the 
{\b Framework}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i pIDocType} was registered successfully.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pIDocType} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell {\i pIDocType} could not be registered.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIDocType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IDMUSProdDocType} interface 
being registered.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 A Component's {\b IDMUSProdComponent::Initialize}
 method can call {\b AddDocType} 
to include additional document types in the Framework's File New, File Open and 
File Save dialogs.\par 
{\b AddDocType} must receive a successful return from 
{\b IDMUSProdDocType::GetResourceId}
 in order to complete successfully.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following excerpt from an {\b IDMUSProdComponent::Initialize}
 method registers 
an additional document type with the Framework:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 IDMUSProdDocType* pIDocType;\par 
IDMUSProdFramework* pIFramework;\par 
\par 
pIDocType = new CStyleDocType( this );\par 
if( pIDocType == NULL )\par 
\{\par 
\tab CleanUp();\par 
\tab ::LoadString( theApp.m_hInstance, IDS_ERR_MEMORY, achErrMsg, MID_BUFFER );\par 
\tab strErrMsg = achErrMsg;\par 
\tab *pbstrErrMsg = strErrMsg.AllocSysString();\par 
\tab return E_OUTOFMEMORY;\par 
\}\par 
\par 
pIDocType->AddRef();\par 
\par 
if( FAILED ( pIFramework->AddDocType(pIDocType) ) )\par 
\{\par 
\tab CleanUp();\par 
\tab ::LoadString( theApp.m_hInstance, IDS_ERR_ADD_DOCTYPE, achErrMsg, MID_BUFFER );\par 
\tab strErrMsg = achErrMsg;\par 
\tab *pbstrErrMsg = strErrMsg.AllocSysString();\par 
\tab return E_FAIL;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b DocType} Object, {\b IDMUSProdDocType}, {\b IDMUSProdFramework}, {\b FindDocTypeByNodeId}, {\b FindDocTypeByExtension}, {\b GetFirstDocType}, {\b GetNextDocType}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::AddMenuItem Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT AddMenuItem(}{\b IDMUSProdMenu*} {\i pIMenu}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Adds the {\b Menu} object defined by 
{\i pIMenu} to the Framework's 'Add-Ins' menu.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i pIMenu} was successfully added to the Framework's 'Add-Ins' menu.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pIMenu} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell {\i pIMenu} was not added to the 'Add-Ins' menu.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIMenu}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IDMUSProdMenu} interface to be added.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b AddMenuItem} provides a way for a Component, that otherwise 
has no UI, to hook into the Framework.  For example, a Component may want to place a 
menu item in the Framework's 'Add-Ins' menu to provide a dialog that can be used to setup 
various options.\par 
A Component's {\b IDMUSProdComponent::Initialize}
 method should call 
{\b AddMenuItem} if it wants to add menu item(s) to the Framework's 
'Add-Ins' menu.  {\b RemoveMenuItem} should be called from within 
{\b IDMUSProdComponent::CleanUp}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following excerpt from an {\b IDMUSProdComponent::Initialize}
 method adds an 
item to the Framework's 'Add-Ins' menu:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 if( FAILED ( m_pIFramework->AddMenuItem( (IDMUSProdMenu *)this ) ) )\par 
\{\par 
\tab CleanUp();\par 
\tab ::LoadString( theApp.m_hInstance, IDS_ERR_ADD_MENUITEM, achErrMsg, MID_BUFFER );\par 
\tab strErrMsg = achErrMsg;\par 
\tab *pbstrErrMsg = strErrMsg.AllocSysString();\par 
\tab return E_FAIL;\par 
\}\par 
else\par 
\{\par 
\tab m_fMenuWasAdded = TRUE;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b Menu} Object, {\b IDMUSProdFramework}, {\b RemoveMenuItem}, {\b IDMUSProdMenu}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::AddNode Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT AddNode(}{\b IDMUSProdNode*} {\i pITopNode}{\b , IDMUSProdNode*} {\i pIParentNode}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Inserts {\i pITopNode}, along with its 
children, underneath {\i pIParentNode} in the Framework's Project Tree.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i pITopNode}, along with its children, was inserted successfully.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The address in {\i pITopNode} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred and {\i pITopNode} was not inserted into the Project Tree.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITopNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IDMUSProdNode} interface to be inserted.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIParentNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the parent {\b IDMUSProdNode} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If {\i pIParentNode} is NULL, {\i pITopNode} is inserted into the selected folder of 
the Project Tree.\par 
The Framework uses {\b IDMUSProdNode::GetFirstChild}
 and {\b IDMUSProdNode::GetNextChild}
 
when inserting child nodes.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example inserts a Style file into the active folder of the Project Tree:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CStyleDocType::InsertChildNode( IDMUSProdNode* pIChildNode )\par 
\{\par 
\tab ASSERT( pIChildNode != NULL );\par 
\tab ASSERT( m_pComponent != NULL );\par 
\tab ASSERT( m_pComponent->m_pIFramework != NULL );\par 
\par 
\tab // Add Style to Style component list\par 
\tab pIChildNode->AddRef();\par 
\tab m_pComponent->m_lstStyles.AddTail( (CStyle *)pIChildNode );\par 
\par 
\tab // Set DocRoot and parent node of ALL children\par 
\tab theApp.SetNodePointers( pIChildNode, pIChildNode, (IDMUSProdNode *)this );\par 
\par 
\tab // Add node to Project Tree\par 
\tab if( FAILED ( m_pComponent->m_pIFramework->AddNode(pIChildNode, NULL) ) )\par 
\tab \{\par 
\tab \tab DeleteChildNode( pIChildNode );\par 
\tab \tab return E_FAIL;\par 
\tab \}\par 
\par 
\tab return S_OK;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b RemoveNode}, {\b IDMUSProdNode}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::AddNodeImageList Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT AddNodeImageList(}{\b HANDLE} {\i hNodeImageList}{\b , short*} {\i pnNbrFirstImage}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Adds images to the Project Tree's 
image list.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The image list was added successfully and the index to the first image in 
the list was returned in {\i pnNbrFirstImage}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i pnNbrFirstImage} is not valid.  For example, it may 
be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell The images were not added to the Project Tree's image list.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hNodeImageList}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Handle to image list to be added.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pnNbrFirstImage}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Pointer to corresponding index into 
Project Tree's image list. 
{\b IDMUSProdNode::GetNodeImageIndex}
 returns an index 
based on {\i pnNbrFirstImage}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If a Component inserts nodes into the Project Tree, its {\b IDMUSProdComponent::Initialize}
 
method must call {\b AddNodeImageList} so that the Component can add 
its images to the Project Tree's image list.\par 
Project Tree images must be 16 X 16 and contain 256 colors.\par 
The Project Tree maintains a list of images used when drawing nodes.  As nodes are 
inserted into the Project Tree, the Framework calls {\b IDMUSProdNode::GetNodeImageIndex}
 
so that it can associate a pair of consecutive images in its list with the node 
being inserted.  The index returned by {\b IDMUSProdNode::GetNodeImageIndex}
 is based 
{\i pnNbrfirstImage}.  Images must always be added in pairs.  The 
{\b IDMUSProdNode::UseOpenCloseImages}
 method determines whether the consecutive images 
pertain to non-selected/selected states or closed/opened states (folders).\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example adds images to the Project Tree's image list:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CMotifComponent::AddNodeImageLists( void )\par 
\{\par 
\tab CImageList lstImages;\par 
\tab HICON hIcon;\par 
\par 
\tab lstImages.Create( 16, 16, ILC_COLOR16, 2, 0 );\par 
\tab lstImages.SetBkColor( GetSysColor(COLOR_WINDOW) );\par 
\par 
\tab hIcon = ::LoadIcon( theApp.m_hInstance, MAKEINTRESOURCE(IDR_MOTIF_DOCTYPE) );\par 
\tab lstImages.Add( hIcon );\par 
\tab ::DestroyIcon( hIcon );\par 
\tab hIcon = ::LoadIcon( theApp.m_hInstance, MAKEINTRESOURCE(IDI_MOTIF_DOCTYPE_SEL) );\par 
\tab lstImages.Add( hIcon );\par 
\tab ::DestroyIcon( hIcon );\par 
\par 
\tab if( FAILED (m_pIFramework->AddNodeImageList( lstImages.Detach(), &m_nFirstMotifImage ) ) )\par 
\tab \{\par 
\tab \tab return E_FAIL;\par 
\tab \}\par 
\par 
\tab lstImages.Create( 16, 16, ILC_COLOR16, 2, 0 );\par 
\tab lstImages.SetBkColor( GetSysColor(COLOR_WINDOW) );\par 
\par 
\tab hIcon = ::LoadIcon( theApp.m_hInstance, MAKEINTRESOURCE(IDI_FOLDER) );\par 
\tab lstImages.Add( hIcon );\par 
\tab ::DestroyIcon( hIcon );\par 
\tab hIcon = ::LoadIcon( theApp.m_hInstance, MAKEINTRESOURCE(IDI_FOLDER_SEL) );\par 
\tab lstImages.Add( hIcon );\par 
\tab ::DestroyIcon( hIcon );\par 
\par 
\tab if( FAILED (m_pIFramework->AddNodeImageList( lstImages.Detach(), &m_nFirstFolderImage ) ) )\par 
\tab \{\par 
\tab \tab return E_FAIL;\par 
\tab \}\par 
\par 
\tab return S_OK;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdComponent::Initialize}
, {\b IDMUSProdFramework}, {\b IDMUSProdNode}, {\b IDMUSProdNode::GetNodeImageIndex}
\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::AddToNotifyList Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT AddToNotifyList(}{\b IDMUSProdNode*} {\i pIDocRootNode}{\b , IDMUSProdNode*} {\i pINotifyThisNode}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Adds {\i pINotifyThisNode} to the list 
of {\b Node}s notified when the state of {\i pIDocRootNode} changes.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i pINotifyThisNode} was added to the list of nodes to be notified when 
the state of {\i pIDocRootNode} changes.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell Either {\i pIDocRootNode} or {\i pINotifyThisNode} is not valid. 
For example, they may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and {\i pINotifyThisNode} could not be added to the 
notify list attached to {\i pIDocRootNode}.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to an {\b IDMUSProdNode} interface.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pINotifyThisNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IDMUSProdNode} requesting a 
callback when {\i pIDocRootNode} changes.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\i pIDocRootNode} must point to a DocRoot {\b Node}.  A DocRoot node is the top node of 
a document, or file.  For example, the Style node of a Style file would be considered 
the DocRoot node of the Style.  The Band node of a Band file would be considered the 
DocRoot node of the Band file.\par 
{\i pINotifyThisNode} must also implement {\b IDMUSProdNotifySink}.  The IDMUSProdNotifySink 
interface is used to notify {\i pINotifyThisNode} when the state of {\i pIDocRootNode} 
changes.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example displays a File Open dialog for the purpose of selecting a Segment's Style:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 IDMUSProdReferenceNode* pIReferenceNode;\par 
IDMUSProdDocType* pIDocType;\par 
\par 
if( SUCCEEDED( pSegment->m_pIStyleRefNode->QueryInterface( IID_IDMUSProdReferenceNode, (void**)&pIReferenceNode ) ) )\par 
\{\par 
\tab if( SUCCEEDED ( pIFramework->FindDocTypeByNodeId( GUID_StyleNode, &pIDocType ) ) )\par 
\tab \{\par 
\tab \tab if( pIFramework->OpenFile( pIDocType, NULL, pSegment, &pIStyleDocRootNode ) == S_OK )\par 
\tab \tab \{\par 
\tab \tab \tab if( SUCCEEDED( pIReferenceNode->SetReferencedFile( pIStyleDocRootNode ) ) )\par 
\tab \tab \tab \{\par 
\tab \tab \tab \tab pIFramework->AddToNotifyList( pIStyleDocRootNode, pSegment );\par 
\tab \tab \tab \}\par 
\tab \tab \tab pIStyleDocRootNode->Release();\par 
\tab \tab \}\par 
\tab \tab pIDocType->Release();\par 
\tab \}\par 
\tab pIReferenceNode->Release();\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b RemoveFromNotifyList}, {\b NotifyNodes}, {\b IDMUSProdNotifySink}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::AddToolBar Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT AddToolBar(}{\b IDMUSProdToolBar*} {\i pIToolBar}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Adds the {\b ToolBar} object defined by 
{\i pIToolBar} to the Framework.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i pIToolBar} was successfully added to the Framework.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pIToolBar} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell {\i pIToolBar} was not added to the Framework.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIToolBar}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IDMUSProdToolBar} interface to be added.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b AddToolBar} provides a way for a {\b Component} to place a toolbar in 
the Framework so that it can be accessed by other Components.  For example, a Component 
may want to provide transport controls for other DirectMusic Producer Components.\par 
A Component's {\b IDMUSProdComponent::Initialize}
 method should call 
{\b AddToolBar} if it wants to add toolbar(s) to the Framework. 
{\b RemoveToolBar} should be called from within 
{\b IDMUSProdComponent::CleanUp}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following excerpt from an {\b IDMUSProdComponent::Initialize}
 method adds a toolbar 
to the Framework:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 CWnd* pWndParent = new CWnd;\par 
if( pWndParent )\par 
\{\par 
\tab if( pWndParent->CreateEx(0, AfxRegisterWndClass(0), NULL, WS_OVERLAPPED, 0, 0, 0, 0, NULL, NULL) )\par 
\tab \{\par 
\tab \tab CToolbarMsgHandler* pBarMsgHandler = new CToolbarMsgHandler;\par 
\tab \tab if( pBarMsgHandler )\par 
\tab \tab \{\par 
\tab \tab \tab CRect rect( 0, 0, 0, 0 );\par 
\tab \tab \tab if( (pBarMsgHandler->Create(AfxRegisterWndClass(0), NULL, WS_CHILD, rect, pWndParent, -1))\par 
\tab \tab \tab &&  (SUCCEEDED(pIFramework->AddToolBar(pBarMsgHandler))) )\par 
\tab \tab \tab \{\par 
\tab \tab \tab \tab m_pBarMsgHandler = pBarMsgHandler;\par 
\tab \tab \tab \}\par 
\tab \tab \tab else\par 
\tab \tab \tab \{\par 
\tab \tab \tab \tab if( pBarMsgHandler->GetSafeHwnd() )\par 
\tab \tab \tab \tab \{\par 
\tab \tab \tab \tab \tab pBarMsgHandler->DestroyWindow();\par 
\tab \tab \tab \tab \}\par 
\tab \tab \tab \tab delete pBarMsgHandler;\par 
\tab \tab \tab \}\par 
\tab \tab \}\par 
\tab \}\par 
\par 
\tab //  IDMUSProdFramework::AddToolBar reassigns parent so it is ok to destroy pWndParent\par 
\tab if( pWndParent->GetSafeHwnd() )\par 
\tab \{\par 
\tab \tab pWndParent->DestroyWindow();\par 
\tab \tab delete pWndParent;\par 
\tab \}\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b ToolBar} Object, {\b IDMUSProdFramework}, {\b RemoveToolBar}, {\b IDMUSProdToolBar}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::AllocFileStream Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT AllocFileStream(}{\b BSTR} {\i bstrFileName}{\b , DWORD} {\i dwDesiredAccess}
{\b , FileType} {\i ftFileType}
{\b , GUID} {\i guidDataFormat}
{\b , IDMUSProdNode*} {\i pITargetDirectoryNode}
{\b , IStream **} {\i ppIStream}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns an IStream interface pointer 
for the file specified in {\i bstrFileName}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The IStream interface pointer was returned in {\i ppIStream}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell Either {\i dwDesiredAccess} or {\i ftFileType} is not valid. 
For example, {\i dwDesiredAccess} must be GENERIC_READ or GENERIC_WRITE.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and the file could not be opened.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i bstrFileName}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Name of file.  This method frees {\i bstrFileName} 
with SysFreeString when it is no longer needed.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwDesiredAccess}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] GENERIC_READ or GENERIC_WRITE.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ftFileType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Type of file. FT_DESIGN, FT_RUNTIME, or FT_UNKNOWN.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i guidDataFormat}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] GUID identifying data format of stream.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITargetDirectoryNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] {\b IDMUSProdNode} interface pointer 
to the Project Tree Directory {\b Node} that will contain 
this file.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIStream}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
{\b IStream} interface. 
If an error occurs, the implementation sets {\i ppIStream} 
to NULL.  On success, the caller is responsible for calling 
{\b IStream::Release}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Streams created through either {\b AllocFileStream} or 
{\b AllocMemoryStream} implement {\b IDMUSProdPersistInfo} for the purpose 
of making available additional information about the stream.  In particular, these methods 
associate a file type and data format with every stream they create.  In addition, 
{\b AllocFileStream} associates a target directory node with each stream 
having a {\i dwDesiredAccess} of GENERIC_READ.\par 
An object can obtain a pointer to a stream's {\b IDMUSProdPersistInfo} interface via a call to 
{\b IStream::QueryInterface}
.  {\b IDMUSProdPersistInfo::GetStreamInfo}
 returns the {\i ftFileType}, 
{\i guidDataFormat}, and {\i pITargetDirectoryNode} associated with a stream.  {\i pITargetDirectory} 
will always be NULL for streams created via {\b AllocMemoryStream}.\par 
The following file types are valid for use in {\i ftFileType}:\par 
FT_DESIGN: \tab Design-time saves may include chunks of UI related information only used 
during editing.\par 
FT_RUNTIME: \tab Runtime saves are invoked to create files for distribution.  Data should 
be saved in its most compact form.\par 
FT_UNKNOWN: \tab FT_UNKNOWN is only valid when {\b AllocFileStream} 
is called to open a file.\par 
{\i guidDataFormat} indicates the specific format to be used when writing data into the 
stream.  Objects may create additional GUIDs to communicate specific data formats they need 
when persisting data.  The {\b Framework} supplies the following GUIDs for general use:\par 
GUID_CurrentVersion: \tab \tab Current version of the file format.\par 
GUID_CurrentVersion_OnlyUI: \tab Current version of the file format (UI state information only).\par 
GUID_DirectMusicObject: \tab \tab Stream being prepared to persist into a DirectMusic object.\par 
GUID_Bookmark: \tab \tab \tab Framework uses this GUID when creating streams to include in bookmarks.\par 
GUID_AllZeros: \tab \tab \tab GUID_AllZeros is only valid when {\b AllocFileStream} 
is called to open a file.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b AllocMemoryStream}, {\b IDMUSProdPersistInfo}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::AllocMemoryStream Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT AllocMemoryStream(}{\b FileType} {\i ftFileType}{\b , GUID} {\i guidDataFormat}
{\b , IStream **} {\i ppIStream}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns an IStream interface pointer 
for a newly created memory stream.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The IStream interface pointer was returned in {\i ppIStream}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i ftFileType} is not valid.  For example, {\i ftFileType} must be 
FT_DESIGN or FT_RUNTIME.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and the stream could not be created.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ftFileType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Type of file. FT_DESIGN or FT_RUNTIME.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i guidDataFormat}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] GUID identifying data format of stream.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIStream}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
{\b IStream} interface. 
If an error occurs, the implementation sets {\i ppIStream} 
to NULL.  On success, the caller is responsible for calling 
{\b IStream::Release}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Streams created through either {\b AllocFileStream} or 
{\b AllocMemoryStream} implement {\b IDMUSProdPersistInfo} for the purpose 
of making available additional information about the stream.  In particular, these methods 
associate a file type and data format with every stream they create.  In addition, 
{\b AllocFileStream} associates a target directory node with each stream 
having a {\i dwDesiredAccess} of GENERIC_READ.\par 
An object can obtain a pointer to a stream's {\b IDMUSProdPersistInfo} interface via a call to 
{\b IStream::QueryInterface}
.  {\b IDMUSProdPersistInfo::GetStreamInfo}
 returns the {\i ftFileType}, 
{\i guidDataFormat}, and {\i pITargetDirectoryNode} associated with a stream.  {\i pITargetDirectory} 
will always be NULL for streams created via {\b AllocMemoryStream}.\par 
The following file types are valid for use in {\i ftFileType}:\par 
FT_DESIGN: \tab Design-time saves may include chunks of UI related information only used 
during editing.\par 
FT_RUNTIME: \tab Runtime saves are invoked to create files for distribution.  Data should 
be saved in its most compact form.\par 
{\i guidDataFormat} indicates the specific format to be used when writing data into the 
memory stream.  Objects may create additional GUIDs to communicate specific data formats 
they need when persisting data.  The {\b Framework} supplies the following GUIDs for general use:\par 
GUID_CurrentVersion: \tab \tab Current version of the file format.\par 
GUID_CurrentVersion_OnlyUI: \tab Current version of the file format (UI state information only).\par 
GUID_DirectMusicObject: \tab \tab Stream being prepared to persist into a DirectMusic object.\par 
GUID_Bookmark: \tab \tab \tab Framework uses this GUID when creating streams to include in bookmarks.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b AllocFileStream}, {\b IDMUSProdPersistInfo}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::CloseEditor Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT CloseEditor(}{\b IDMUSProdNode*} {\i pINode}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Closes the editor for the node 
specified in {\i pINode}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i pINode}'s editor was closed successfully.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The address in {\i pINode} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and the editor could not be closed.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pINode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IDMUSProdNode} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This method provides the means for a Component to close an editor opened by 
the {\b OpenEditor} method.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example closes the editor for {\i pINode}:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b Editor} Object, {\b IDMUSProdFramework}, {\b OpenEditor}, {\b IDMUSProdNode}, {\b IDMUSProdEditor}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::CopyFile Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT CopyFile(}{\b IDMUSProdNode*} {\i pIDocRootNode}{\b , IDMUSProdNode*} {\i pITreePositionNode}
{\b , IDMUSProdNode**} {\i ppINewDocRootNode}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns a copy of the file specified in 
{\i pIDocRootNode}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell A copy of the file specified in {\i pIDocRootNode} was returned in 
{\i ppINewDocRootNode}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppINewDocRootNode} is not valid.  For example, it 
may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The value of either {\i pIDocRootNode} or {\i pITreePositionNode} is 
not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and the file could not be copied.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to an {\b IDMUSProdNode} interface which 
specifies the file to be copied.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITreePositionNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the Node used to determine where 
the newly created file should be placed in the Project 
Tree.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppINewDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
IDMUSProdNode interface.  If an error occurs, the implementation 
sets {\i ppINewDocRootNode} to NULL.  On success, the 
caller is responsible for calling {\b IDMUSProdNode::Release}
 
when this pointer is no longer needed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\i pIDocRootNode} must point to a DocRoot {\b Node}.  A DocRoot node is the top node of 
a document, or file.  For example, the Style node of a Style file would be considered 
the DocRoot node of the Style.  The Band node of a Band file would be considered the 
DocRoot node of the Band file.\par 
This method saves the file specified in {\i pIDocRootNode} using a name built from 
appending the filename of {\i pIDocRootNode} to the path of {\i pITreePositionNode}. 
After the file has been successfully saved, {\b IDMUSProdDocType::OnFileOpen}
 loads the 
new file and places its nodes into the Project Tree.  The DocRoot node of the newly 
created file is returned in {\i ppINewDocRootNode}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example makes sure that a referenced file exists in the same Project as the 
file it references.  m_pIStyleRefNode contains an IDMUSProdNode interface pointer to the node 
used to display a referenced Style file:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 IDMUSProdReferenceNode* pIReferenceNode;\par 
\par 
if( SUCCEEDED ( m_pIStyleRefNode->QueryInterface( IID_IDMUSProdReferenceNode, (void **)&pIReferenceNode ) ) )\par 
\{\par 
\tab IDMUSProdNode* pIStyleDocRootNode;\par 
\par 
\tab if( SUCCEEDED ( pIReferenceNode->GetReferencedFile( &pIStyleDocRootNode ) ) )\par 
\tab \{\par 
\tab \tab if( pIFramework->IsProjectEqual( this, pIStyleDocRootNode ) == S_FALSE )\par 
\tab \tab \{\par 
\tab \tab \tab IDMUSProdNode* pINewDocRootNode;\par 
\par 
\tab \tab \tab if( SUCCEEDED ( pIFramework->CopyFile( pIStyleDocRootNode, this, &pINewDocRootNode ) ) )\par 
\tab \tab \tab \{\par 
\tab \tab \tab \tab pIReferenceNode->SetReferencedFile( pINewDocRootNode );\par 
\tab \tab \tab \tab pINewDocRootNode->Release();\par 
\tab \tab \tab \}\par 
\tab \tab \}\par 
\par 
\tab \tab pIStyleDocRootNode->Release();\par 
\tab \}\par 
\par 
\tab pIReferenceNode->Release();\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b IsProjectEqual}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::CreateNewFile Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT CreateNewFile(}{\b IDMUSProdDocType*} {\i pIDocType}{\b , IDMUSProdNode*} {\i pITreePositionNode}
{\b , IDMUSProdNode**} {\i ppIDocRootNode}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Invokes the {\b Framework}'s File New 
command and returns a new file of the type described through {\i pIDocType}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The newly created file's top {\b IDMUSProdNode} was returned in {\i ppIDocRootNode}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppIDocRootNode} is not valid.  For example, it may 
be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell Either {\i pIDocType} or {\i pITreePositionNode} is not valid. 
For example, they may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell A new file could not be created.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIDocType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IDMUSProdDocType} interface which 
is used to determine the kind of file to create.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITreePositionNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b Node} used to determine where 
the newly created file should be placed in the Project 
Tree.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
{\b IDMUSProdNode} interface.  If an error occurs, the implementation 
sets {\i ppIDocRootNode} to NULL.  On success, the caller 
is responsible for calling {\b IDMUSProdNode::Release}
 when 
this pointer is no longer needed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This method provides the means for a Component to initiate a File New command.\par 
Part of the Framework's File New processing uses {\i pIDocType} to call 
{\b IDMUSProdDocType::OnFileNew}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example creates a new Style file and places it in the Project Tree in the 
same directory as {\i pISegmentDocRootNode}:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 IDMUSProdDocType* pIDocType;\par 
IDMUSProdNode* pIDocRootNode;\par 
\par 
if( SUCCEEDED ( m_pIFramework->FindDocTypeByNodeId( GUID_StyleNode, &pIDocType ) ) )\par 
\{\par 
\tab if( SUCCEEDED ( m_pIFramework->CreateNewFile( pIDocType, pISegmentDocRootNode, &pIDocRootNode ) ) )\par 
\tab \{\par 
\tab \tab pIDocRootNode->Release();\par 
\tab \}\par 
\par 
\tab pIDocType->Release();\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdDocType}, {\b IDMUSProdFramework}, {\b OpenFile}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::EditNodeLabel Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT EditNodeLabel(}{\b IDMUSProdNode*} {\i pINode}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Begins in-place editing of the label 
associated with {\i pINode}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell In-place editing of the node's label began successfully.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The address in {\i pINode} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell In-place editing of the node's label could not begin.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pINode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IDMUSProdNode} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This method provides the means for a Component to initiate in-place editing of the 
node names in the Project Tree.  For example, it allows the right-click context menu 
associated with a node to contain a menu item for renaming itself.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example initiates in-place editing of a node's label:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CMotif::OnRightClickMenuSelect( long lCommandId )\par 
\{\par 
\tab ASSERT( m_pComponent != NULL );\par 
\tab ASSERT( m_pComponent->m_pIFramework != NULL );\par 
\par 
\tab HRESULT hr = E_FAIL;\par 
\par 
\tab switch( lCommandId )\par 
\tab \{\par 
\tab \tab case IDM_RENAME:\par 
\tab \tab \tab if( SUCCEEDED ( m_pComponent->m_pIFramework->EditNodeLabel((IDMUSProdNode *)this) ) )\par 
\tab \tab \tab \{\par 
\tab \tab \tab \tab hr = S_OK;\par 
\tab \tab \tab \}\par 
\tab \tab \tab break;\par 
\tab \}\par 
\par 
\tab return hr;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b IDMUSProdNode}, {\b IDMUSProdNode::GetNodeNameMaxLength}
, {\b IDMUSProdNode::ValidateNodeName}
, {\b IDMUSProdNode::SetNodeName}
\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::EndProgressBar Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT EndProgressBar(}{\b HANDLE} {\i hKey}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Removes the progress bar control 
from the {\b Framework}'s status bar.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The progress bar control was removed successfully.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The value of {\i hKey} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_ACCESSDENIED\cell {\i hKey} does not match the HANDLE returned by the previous call 
to {\b StartProgressBar}.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hKey}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] HANDLE returned by {\b StartProgressBar}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The {\b Framework}'s "progress bar" can be used by DirectMusic Producer {\b Component}s 
to indicate the progress of a lengthy operation.  The progress bar control has a range 
and a current position.  The range represents the length of the entire operation, and 
the current position represents the progress the application has made toward completing 
the operation.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example creates a progress bar control in the Framework's status bar:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 IDMUSProdFramework* pIFramework;\par 
HANDLE hKey;\par 
\par 
CString strPrompt = _T( "Preparing information" );\par 
BSTR bstrPrompt = strPrompt.AllocSysString();\par 
\par 
pIFramework->StartProgressBar( 0, 50, bstrPrompt, &hKey );\par 
for( int i = 0 ;  i < 50 ;  i++ )\par 
\{\par 
\tab Sleep( 50 );\par 
\tab pIFramework->SetProgressBarPos( hKey, i );\par 
\}\par 
pIFramework->EndProgressBar( hKey );\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b StartProgressBar}, {\b SetProgressBarPos}, {\b SetProgressBarStep}, {\b StepProgressBar}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::FindComponent Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT FindComponent(}{\b REFCLSID} {\i rclsid}{\b , IDMUSProdComponent**} {\i ppIComponent}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the specified 
Component's {\b IDMUSProdComponent} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The specified Component's {\b IDMUSProdComponent} was returned in {\i ppIComponent}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppIComponent} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i rclsid}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] CLSID of the Component to be found.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIComponent}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the 
requested {\b IDMUSProdComponent} interface.  If an error 
occurs, the implementation sets {\i ppIComponent} 
to NULL.  On success, the caller is responsible 
for calling {\b IDMUSProdComponent::Release}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The Framework calls CoCreateInstance to obtain an {\b IDMUSProdComponent} interface for each 
of the Component CLSID's registered under:\par 
[HKEY_LOCAL_MACHINE\\Software\\Microsoft\\DMUSProducer\\Components].\par 
{\b FindComponent} locates the {\b IDMUSProdComponent} whose CLSID matches 
{\i rclsid} and ensures the Component's {\b IDMUSProdComponent::Initialize}
 method has been 
called before returning its pointer in {\i ppIComponent}.\par 
A Component that uses other DirectMusic Producer Components must call 
{\b FindComponent} to obtain a pointer to each of the required Component's 
{\b IDMUSProdComponent} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following excerpt from an {\b IDMUSProdComponent::Initialize}
 method obtains interface 
pointers to the Conductor Component and the Band Editor Component:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 // Get IDMUSProdConductor interface pointers\par 
if( FAILED ( pIFramework->FindComponent( CLSID_CConductor,  &pIComponent ) )\par 
||  FAILED ( pIComponent->QueryInterface( IID_IDMUSProdConductor, (void**)&m_pIConductor ) ) )\par 
\{\par 
\tab CleanUp();\par 
\tab if( pIComponent )\par 
\tab \{\par 
\tab \tab pIComponent->Release();\par 
\tab \}\par 
\tab ::LoadString( theApp.m_hInstance, IDS_ERR_MISSING_CONDUCTOR, achErrMsg, MID_BUFFER );\par 
\tab strErrMsg = achErrMsg;\par 
\tab *pbstrErrMsg = strErrMsg.AllocSysString();\par 
\tab return E_FAIL;\par 
\}\par 
pIComponent->Release();\par 
\par 
// Get the IDMUSProdComponent interface for the Band Editor Component\par 
if( FAILED ( pIFramework->FindComponent( CLSID_BandComponent,  &m_pIBandComponent ) ) )\par 
\{\par 
\tab CleanUp();\par 
\tab ::LoadString( theApp.m_hInstance, IDS_ERR_MISSING_BAND, achErrMsg, MID_BUFFER );\par 
\tab strErrMsg = achErrMsg;\par 
\tab *pbstrErrMsg = strErrMsg.AllocSysString();\par 
\tab return E_FAIL;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdComponent}, {\b IDMUSProdFramework}, {\b GetFirstComponent}, {\b GetNextComponent}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::FindDocRootNode Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT FindDocRootNode(}{\b GUID} {\i guidProject}{\b , IDMUSProdDocType*} {\i pIDocType}
{\b , BSTR} {\i bstrNodeName}
{\b , BSTR} {\i bstrNodeDescriptor}
{\b , IDMUSProdNode**} {\i ppIDocRootNode}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns an {\b IDMUSProdNode} interface 
pointer for the matching DocRoot {\b Node}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The matching DocRoot Node was returned in {\i ppIDocRootNode}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppIDocRootNode} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell Either {\i pIDocType} or {\i bstrNodeName} is not valid.  For example, they may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and a DocRoot Node could not be returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i guidProject}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Project GUID.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIDocType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] {\b DocType} object.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i bstrNodeName}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Node name.  This method frees 
{\i bstrNodeName} with SysFreeString when it is no 
longer needed.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i bstrNodeDescriptor}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Node descriptor.  This method frees 
{\i bstrNodeDescriptor} with SysFreeString when it is 
no longer needed.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
IDMUSProdNode interface.  If an error occurs, the implementation 
sets {\i ppIDocRootNode} to NULL.  On success, the caller 
is responsible for calling {\b IDMUSProdNode::Release}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 A DocRoot Node is the top Node of a file.  For more information refer to {\b Node} 
Object.\par 
The search is confined to the {\b Project} specified in {\i guidProject}.\par 
A DocRoot Node is considered to be a match if its {\b DocType} matches {\i pIDocType}, 
and its {\b IDMUSProdNode::GetNodeListInfo}
 method returns a name and descriptor equal 
to {\i bstrNodeName} and {\i bstrNodeDescriptor}.\par 
The DocRoot Node for first file matching the criteria will be returned in {\i ppIDocRootNode}. 
{\b GetNodeFileGuid} should be used in conjunction with 
{\b FindDocRootNodeByFileGUID} when it is necessary to obtain the 
DocRoot Node of a specific file.\par 
{\i bstrNodeName} is required.  {\i bstrNodeDescriptor} may be NULL.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b GetBestGuessDocRootNode}, {\b FindDocRootNodeByFileGUID}, {\b IDMUSProdNode}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::FindDocRootNodeByFileGUID Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT FindDocRootNodeByFileGUID(}{\b GUID} {\i guidFile}{\b , IDMUSProdNode**} {\i ppIDocRootNode}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns an {\b IDMUSProdNode} interface 
pointer for the matching DocRoot {\b Node}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The matching DocRoot Node was returned in {\i ppIDocRootNode}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppIDocRootNode} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and a DocRoot Node could not be returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i guidFile}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] File's GUID.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
IDMUSProdNode interface.  If an error occurs, the implementation 
sets {\i ppIDocRootNode} to NULL.  On success, the caller 
is responsible for calling {\b IDMUSProdNode::Release}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 A DocRoot Node is the top Node of a file.  For more information refer to {\b Node} 
Object.\par 
Producer assigns a GUID to every file in the Project Tree.  This GUID can be obtained 
via the {\b GetNodeFileGuid} method.  {\i guidFile} refers to this 
GUID.\par 
The {\b IDMUSProdProject} interface provides methods to enumerate all files in a given 
Project.  The {\b IDMUSProdNode} interface pointer returned by the 
{\b IDMUSProdProject::GetFirstFileByDocType}
 and  {\b IDMUSProdProject::GetNextFileByDocType}
 
methods can be passed to {\b GetNodeFileGuid} and used in 
conjunction with {\b FindDocRootNodeByFileGUID} to retrieve 
the DocRoot node for a specific file.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example retrieves the DocRoot node for the GUID returned by 
{\b GetNodeFileGuid}:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 IDMUSProdFramework pIFramework;\par 
IDMUSProdNode* pIThisDocRootNode;\par 
IDMUSProdNode* pIDocRootNode;\par 
GUID guidFile;\par 
\par 
if( SUCCEEDED ( pIFramework->GetNodeFileGUID(pIThisDocRootNode, &guidFile) ) )\par 
\{\par 
\tab if( SUCCEEDED ( pIFramework->FindDocRootNodeByFileGUID(guidFile, &pIDocRootNode) ) )\par 
\tab \{\par 
\tab \tab ASSERT( pIDocRootNode == pIThisDocRootNode );\par 
\tab \}\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b IDMUSProdNode}, {\b GetNodeFileGUID}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::FindDocTypeByExtension Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT FindDocTypeByExtension(}{\b BSTR} {\i bstrExt}{\b , IDMUSProdDocType**} {\i ppIDocType}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the 
{\b IDMUSProdDocType} interface associated with file extension {\i bstrExt}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The specified file extension's {\b IDMUSProdDocType} was returned in {\i ppIDocType}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppIDocType} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell A matching {\b IDMUSProdDocType} interface was not found.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i bstrExt}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] File extension.  This method frees 
{\i bstrExt} with SysFreeString when it is no 
longer needed.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIDocType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
{\b IDMUSProdDocType} interface.  If an error occurs, 
the implementation sets {\i ppIDocType} to NULL. 
On success, the caller is responsible for calling 
{\b IDMUSProdDocType::Release}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 A Component's {\b IDMUSProdComponent::Initialize}
 method can call {\b AddDocType} 
to include additional document types in the Framework's File New, File Open and 
File Save dialogs.\par 
{\b FindDocTypeByExtension} enumerates the {\b IDMUSProdDocType} interfaces 
registered through {\b AddDocType} and calls 
{\b IDMUSProdDocType::DoesExtensionMatch}
 to find the {\b IDMUSProdDocType} interface whose 
file extension matches {\i bstrExt}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example searches for the {\b IDMUSProdDocType} interface that manages 
Jazz Style files (*.sty):\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 IDMUSProdFramework* pIFramework;\par 
IDMUSProdDocType* pIDocType;\par 
CString strExt;\par 
BSTR bstrExt;\par 
\par 
strExt = ".sty";\par 
bstrExt = strExt.AllocSysString();\par 
if( SUCCEEDED ( pIFramework->FindDocTypeByExtension( bstrExt, &pIDocType ) ) )\par 
\{\par 
\tab pIDocType->Release();\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdDocType}, {\b IDMUSProdDocType::DoesExtensionMatch}
{\b IDMUSProdFramework}, {\b AddDocType}, {\b FindDocTypeByNodeId}, {\b GetFirstDocType}, {\b GetNextDocType}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::FindDocTypeByNodeId Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT FindDocTypeByNodeId(}{\b REFGUID} {\i rguid}{\b , IDMUSProdDocType**} {\i ppIDocType}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the 
{\b IDMUSProdDocType} interface associated with node ID {\i rguid}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The specified id's {\b IDMUSProdDocType} was returned in {\i ppIDocType}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppIDocType} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell A matching {\b IDMUSProdDocType} interface was not found.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i rguid}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Node ID.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIDocType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
{\b IDMUSProdDocType} interface.  If an error occurs, the implementation 
sets {\i ppIDocType} to NULL.  On success, the caller 
is responsible for calling {\b IDMUSProdDocType::Release}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 A GUID identifies a type of Node.  For example, all Style Nodes have the same 
GUID, or node ID.\par 
A Component's {\b IDMUSProdComponent::Initialize}
 method can call {\b AddDocType} 
to include additional document types in the Framework's File New, File Open and 
File Save dialogs.\par 
{\b FindDocTypeByNodeId} enumerates the {\b IDMUSProdDocType} interfaces 
registered through {\b AddDocType} and calls 
{\b IDMUSProdDocType::DoesIdMatch}
 to find the {\b IDMUSProdDocType} interface associated with 
the node ID specified in {\i rguid}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 See {\b IDMUSProdDocType::DoesIdMatch}
 for sample code.\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdDocType}, {\b IDMUSProdDocType::DoesIdMatch}
, {\b IDMUSProdFramework}, {\b AddDocType}, {\b FindDocTypeByExtension}, {\b GetFirstDocType}, {\b GetNextDocType}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::FindProject Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT FindProject(}{\b IDMUSProdNode*} {\i pINode}{\b , IDMUSProdProject**} {\i ppIProject}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns an {\b IDMUSProdProject} interface 
pointer for the {\b Project} containing {\i pINode}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i pINode}'s Project was returned in {\i ppIProject}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppIProject} is not valid.  For example, it may 
be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and {\i pINode}'s Project could not be returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pINode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] A pointer to the node whose Project 
will be returned in {\i ppIProject}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIProject}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
{\b IDMUSProdProject} interface.  If an error occurs, the implementation 
sets {\i ppIProject} to NULL.  On success, the 
caller is responsible for calling 
{\b IDMUSProdProject::Release}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b IDMUSProdProject}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::GetBestGuessDocRootNode Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetBestGuessDocRootNode(}{\b IDMUSProdDocType*} {\i pIDocType}{\b , BSTR} {\i bstrNodeName}
{\b , IDMUSProdNode*} {\i pITreePositionNode}
{\b , IDMUSProdNode**} {\i ppIDocRootNode}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns an {\b IDMUSProdNode} 
interface pointer for the closest matching DocRoot {\b Node}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell A matching DocRoot node was returned in {\i ppIDocRootNode}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppIDocRootNode} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The address in either {\i pIDocType}, {\i bstrNodeName} or 
{\i pITreePositionNode} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and a matching node could not be returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIDocType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IDMUSProdDocType} interface 
associated with the desired type of DocRoot node. 
Used by search algorithm.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i bstrNodeName}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Name of desired DocRoot node.  Used by search 
algorithm.  This method frees {\i bstrNodeName} with 
SysFreeString when it is no longer needed.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITreePositionNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Specifies position in Project Tree.  Used by search 
algorithm.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
{\b IDMUSProdNode} interface.  If an error occurs, the implementation 
sets {\i ppIDocRootNode} to NULL.  On success, the caller 
is responsible for calling {\b IDMUSProdNode::Release}
 when 
this pointer is no longer needed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 A DocRoot Node is the top Node of a file.  For more information refer to {\b Node} 
Object.\par 
The search is confined to the {\b Project} containing {\i pITreePositionNode}.\par 
A DocRoot Node is considered to be a candidate for match if its {\b DocType} matches 
{\i pIDocType}, and its {\b IDMUSProdNode::GetNodeListInfo}
 method returns a name equal 
to {\i bstrNodeName}.\par 
If a matching DocRoot node cannot be located in the same directory as {\i pITreePositionNode}, 
{\b GetBestGuessDocRootNode} searches through the entire {\b Project} 
containing {\i pITreePositionNode}.  Other Projects are not searched.\par 
This method sets {\i ppIDocRootNode} to NULL and returns S_OK when the Project Tree 
does not contain a matching node.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b FindDocRootNode}, {\b IDMUSProdNode}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::GetDocRootNodeFromData Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetDocRootNodeFromData(}{\b IDataObject*} {\i pIDataObject}{\b , IDMUSProdNode**} {\i ppIDocRootNode}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns an {\b IDMUSProdNode} 
interface pointer for the DocRoot {\b Node} in {\i pIDataObject}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The matching DocRoot Node was returned in {\i ppIDocRootNode}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppIDocRootNode} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pIDataObject} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and a DocRoot Node could not be returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIDataObject}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to an IDataObject interface.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive 
the requested IDMUSProdNode interface. 
If an error occurs, the implementation 
sets {\i ppIDocRootNode} to NULL.  On success, the caller 
is responsible for calling {\b IDMUSProdNode::Release}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 A DocRoot Node is the top Node of a file.  For more information refer to {\b Node} 
Object.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b SaveClipFormat}, {\b RegisterClipFormatForFile},\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::GetFirstComponent Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetFirstComponent(}{\b IDMUSProdComponent**} {\i ppIFirstComponent}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns an {\b IDMUSProdComponent} 
interface pointer for the first {\b Component} in the {\b Framework}'s list of 
registered Components.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The first Component was returned in {\i ppIFirstComponent}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppIFirstComponent} is not valid.  For example, it 
may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and the first Component could not be returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIFirstComponent}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
{\b IDMUSProdComponent} interface.  If an error occurs, the 
implementation sets {\i ppIFirstComponent} to NULL.  On success, the 
caller is responsible for calling 
{\b IDMUSProdComponent::Release}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\i ppIFirstComponent} is set to NULL if the list is empty.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example calls {\b IDMUSProdComponent::Initialize}
 for all Components 
registered with the Framework:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 BOOL CFramework::InitComponents( void )\par 
\{\par 
\tab HRESULT hr;\par 
\tab IDMUSProdComponent* pIComponent;\par 
\tab IDMUSProdComponent* pINextComponent;\par 
\tab BOOL fSuccess = FALSE;\par 
\par 
\tab BSTR bstrErrMsg = NULL;\par 
\par 
\tab hr = GetFirstComponent( &pINextComponent );\par 
\par 
\tab while( SUCCEEDED( hr )  &&  pINextComponent )\par 
\tab \{\par 
\tab \tab pIComponent = pINextComponent;\par 
\par 
\tab \tab hr = pIComponent->Initialize( (IDMUSProdFramework *)this, &bstrErrMsg );\par 
\tab \tab if( SUCCEEDED( hr ) )\par 
\tab \tab \{\par 
\tab \tab \tab fSuccess = TRUE;\par 
\tab \tab \}\par 
\tab \tab else\par 
\tab \tab \{\par 
\tab \tab \tab ...\tab \tab // Display error message\par 
\tab \tab \tab ...\tab \tab // Free resources\par 
\tab \tab \}\par 
\par 
\tab \tab hr = GetNextComponent( pIComponent, &pINextComponent );\par 
\tab \tab pIComponent->Release();\par 
\tab \}\par 
\par 
\tab return fSuccess;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdComponent}, {\b IDMUSProdFramework}, {\b FindComponent}, {\b GetNextComponent}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::GetFirstDocType Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetFirstDocType(}{\b IDMUSProdDocType**} {\i ppIFirstDocType}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns an {\b IDMUSProdDocType} 
interface pointer for the first {\b DocType} in the {\b Framework}'s list of 
registered DocTypes.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The first DocType was returned in {\i ppIFirstDocType}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppIFirstDocType} is not valid.  For example, it may 
be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and the first DocType could not be returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIFirstDocType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
{\b IDMUSProdDocType} interface.  If an error occurs, the implementation 
sets {\i ppIFirstDocType} to NULL.  On success, the 
caller is responsible for calling 
{\b IDMUSProdDocType::Release}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\i ppIFirstDocType} is set to NULL if the list is empty.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example returns a pointer to the {\b IDMUSProdDocType} interface associated 
with file extension {\i bstrExt}:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CFramework::FindDocTypeByExtension( BSTR bstrExt, IDMUSProdDocType** ppIDocType\tab )\par 
\{\par 
\tab AFX_MANAGE_STATE( AfxGetAppModuleState() );\par 
\par 
\tab HRESULT hr;\par 
\tab IDMUSProdDocType* pIDocType;\par 
\tab IDMUSProdDocType* pINextDocType;\par 
\par 
\tab if( ppIDocType == NULL )\par 
\tab \{\par 
\tab \tab return E_POINTER;\par 
\tab \}\par 
\par 
\tab *ppIDocType = NULL;\par 
\par 
\tab hr = GetFirstDocType( &pINextDocType );\par 
\par 
\tab while( SUCCEEDED( hr )  &&  pINextDocType )\par 
\tab \{\par 
\tab \tab pIDocType = pINextDocType;\par 
\par 
\tab \tab if( pIDocType->DoesExtensionMatch( bstrExt ) == S_OK )\par 
\tab \tab \{\par 
\tab \tab \tab *ppIDocType = pIDocType;\par 
\tab \tab \tab break;\par 
\tab \tab \}\par 
\par 
\tab \tab hr = GetNextDocType( pIDocType, &pINextDocType );\par 
\tab \tab pIDocType->Release();\par 
\tab \}\par 
\par 
\tab if( *ppIDocType )\par 
\tab \{\par 
\tab \tab return S_OK;\par 
\tab \}\par 
\par 
\tab return E_FAIL;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdDocType}, {\b IDMUSProdDocType::DoesIdMatch}
, {\b IDMUSProdFramework}, {\b AddDocType}, {\b FindDocTypeByExtension}, {\b GetNextDocType}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::GetFirstProject Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetFirstProject(}{\b IDMUSProdProject**} {\i ppIFirstProject}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns an {\b IDMUSProdProject} interface 
pointer for the first {\b Project} in the application's list of Projects.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The first Project was returned in {\i ppIFirstProject}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppIFirstProject} is not valid.  For example, it may 
be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and the first Project could not be returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIFirstProject}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
{\b IDMUSProdProject} interface.  If an error occurs, the implementation 
sets {\i ppIFirstProject} to NULL.  On success, the 
caller is responsible for calling 
{\b IDMUSProdProject::Release}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\i ppIFirstProject} is set to NULL if the list is empty.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b GetNextProject}, {\b IDMUSProdProject}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::GetNextComponent Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetNextComponent(}{\b IDMUSProdComponent*} {\i pIComponent}{\b , IDMUSProdComponent**} {\i ppINextComponent}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns an {\b IDMUSProdComponent} 
interface pointer for the next {\b Component} in the {\b Framework}'s list of 
registered Components.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The next Component was returned in {\i ppINextComponent}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppINextComponent} is not valid.  For example, it 
may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pIComponent} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and the next Component could not be returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIComponent}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] A pointer to the previous Component in 
the Framework's list of registered Components.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppINextComponent}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the 
requested {\b IDMUSProdComponent} 
interface.  If an error occurs, the implementation 
sets {\i ppINextComponent} to NULL.  On success, the 
caller is responsible for calling 
{\b IDMUSProdComponent::Release}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the Component located after {\i pIComponent} in the Framework's list of 
registered Components.\par 
{\i ppINextComponent} is set to NULL when the end of the list has been reached.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example calls {\b IDMUSProdComponent::Initialize}
 for all Components 
registered with the Framework:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 BOOL CFramework::InitComponents( void )\par 
\{\par 
\tab HRESULT hr;\par 
\tab IDMUSProdComponent* pIComponent;\par 
\tab IDMUSProdComponent* pINextComponent;\par 
\tab BOOL fSuccess = FALSE;\par 
\par 
\tab BSTR bstrErrMsg = NULL;\par 
\par 
\tab hr = GetFirstComponent( &pINextComponent );\par 
\par 
\tab while( SUCCEEDED( hr )  &&  pINextComponent )\par 
\tab \{\par 
\tab \tab pIComponent = pINextComponent;\par 
\par 
\tab \tab hr = pIComponent->Initialize( (IDMUSProdFramework *)this, &bstrErrMsg );\par 
\tab \tab if( SUCCEEDED( hr ) )\par 
\tab \tab \{\par 
\tab \tab \tab fSuccess = TRUE;\par 
\tab \tab \}\par 
\tab \tab else\par 
\tab \tab \{\par 
\tab \tab \tab ...\tab \tab // Display error message\par 
\tab \tab \tab ...\tab \tab // Free resources\par 
\tab \tab \}\par 
\par 
\tab \tab hr = GetNextComponent( pIComponent, &pINextComponent );\par 
\tab \tab pIComponent->Release();\par 
\tab \}\par 
\par 
\tab return fSuccess;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdComponent}, {\b IDMUSProdFramework}, {\b GetFirstComponent}, {\b FindComponent}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::GetNextDocType Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetNextDocType(}{\b IDMUSProdDocType*} {\i pIDocType}{\b , IDMUSProdDocType**} {\i ppINextDocType}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns an {\b IDMUSProdDocType} 
interface pointer for the next {\b DocType} in the {\b Framework}'s list of 
registered DocTypes.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The next DocType was returned in {\i ppINextDocType}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppINextDocType} is not valid.  For example, it may 
be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pIDocType} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and the next DocType could not be returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIDocType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] A pointer to the previous DocType in 
the Framework's list of registered DocTypes.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppINextDocType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
{\b IDMUSProdDocType} interface.  If an error occurs, the implementation 
sets {\i ppINextDocType} to NULL.  On success, the 
caller is responsible for calling 
{\b IDMUSProdDocType::Release}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the DocType located after {\i pIDocType} in the Framework's list of 
registered DocTypes.\par 
{\i ppINextDocType} is set to NULL when the end of the list has been reached.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example returns a pointer to the {\b IDMUSProdDocType} interface associated 
with file extension {\i bstrExt}:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CFramework::FindDocTypeByExtension( BSTR bstrExt, IDMUSProdDocType** ppIDocType\tab )\par 
\{\par 
\tab AFX_MANAGE_STATE( AfxGetAppModuleState() );\par 
\par 
\tab HRESULT hr;\par 
\tab IDMUSProdDocType* pIDocType;\par 
\tab IDMUSProdDocType* pINextDocType;\par 
\par 
\tab if( ppIDocType == NULL )\par 
\tab \{\par 
\tab \tab return E_POINTER;\par 
\tab \}\par 
\par 
\tab *ppIDocType = NULL;\par 
\par 
\tab hr = GetFirstDocType( &pINextDocType );\par 
\par 
\tab while( SUCCEEDED( hr )  &&  pINextDocType )\par 
\tab \{\par 
\tab \tab pIDocType = pINextDocType;\par 
\par 
\tab \tab if( pIDocType->DoesExtensionMatch( bstrExt ) == S_OK )\par 
\tab \tab \{\par 
\tab \tab \tab *ppIDocType = pIDocType;\par 
\tab \tab \tab break;\par 
\tab \tab \}\par 
\par 
\tab \tab hr = GetNextDocType( pIDocType, &pINextDocType );\par 
\tab \tab pIDocType->Release();\par 
\tab \}\par 
\par 
\tab if( *ppIDocType )\par 
\tab \{\par 
\tab \tab return S_OK;\par 
\tab \}\par 
\par 
\tab return E_FAIL;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdDocType}, {\b IDMUSProdDocType::DoesIdMatch}
, {\b IDMUSProdFramework}, {\b AddDocType}, {\b FindDocTypeByExtension}, {\b GetFirstDocType}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::GetNextProject Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetNextProject(}{\b IDMUSProdProject*} {\i pIProject}{\b , IDMUSProdProject**} {\i ppINextProject}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns an {\b IDMUSProdProject} interface 
pointer for the next {\b Project} in the application's list of Projects.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The next Project was returned in {\i ppINextProject}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppINextProject} is not valid.  For example, it may 
be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pIProject} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and the next Project could not be returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIProject}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] A pointer to the previous Project in 
the application's list of Projects.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppINextProject}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
{\b IDMUSProdProject} interface.  If an error occurs, the implementation 
sets {\i ppINextProject} to NULL.  On success, the 
caller is responsible for calling 
{\b IDMUSProdProject::Release}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the Project located after {\i pIProject} in the application's list of Projects.\par 
{\i ppINextProject} is set to NULL when the end of the list has been reached.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b GetFirstProject}, {\b IDMUSProdProject}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::GetNodeFileGuid Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetNodeFileGuid(}{\b IDMUSProdNode*} {\i pINode}{\b , GUID*} {\i pguidFile}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns the Producer generated 
GUID assigned to the file associated with {\i pINode}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The file's GUID was placed in {\i pguidFile}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i pguidFile} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The address in {\i pINode} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred and the file's GUID was not returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pINode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to any {\b IDMUSProdNode} in the file.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pguidFile}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Pointer to the caller-allocated variable 
that receives a copy of the file's GUID.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Producer assigns a GUID to every file in the Project Tree.  This GUID can be obtained 
via the {\b GetNodeFileGuid} method.  {\i pguidFile} refers to this 
GUID.\par 
The {\b IDMUSProdProject} interface provides methods to enumerate all files in a given 
Project.  The {\b IDMUSProdNode} interface pointer returned by the 
{\b IDMUSProdProject::GetFirstFileByDocType}
 and  {\b IDMUSProdProject::GetNextFileByDocType}
 
methods can be passed to {\b GetNodeFileGuid} and used in 
conjunction with {\b FindDocRootNodeByFileGUID} to retrieve 
the DocRoot node for a specific file.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example retrieves the Producer generated GUID identifying the file which 
contains {\i pINode}:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 IDMUSProdFramework pIFramework;\par 
IDMUSProdNode* pIThisDocRootNode;\par 
IDMUSProdNode* pIDocRootNode;\par 
GUID guidFile;\par 
\par 
if( SUCCEEDED ( pIFramework->GetNodeFileGUID(pIThisDocRootNode, &guidFile) ) )\par 
\{\par 
\tab if( SUCCEEDED ( pIFramework->FindDocRootNodeByFileGUID(guidFile, &pIDocRootNode) ) )\par 
\tab \{\par 
\tab \tab ASSERT( pIDocRootNode == pIThisDocRootNode );\par 
\tab \}\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b IDMUSProdProject}, {\b IDMUSProdNode}, {\b FindDocRootNodeByFileGUID}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::GetNodeFileName Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetNodeFileName(}{\b IDMUSProdNode*} {\i pINode}{\b , BSTR*} {\i pbstrFileName}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns the path/filename of the 
file associated with {\i pINode}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The filename was returned in {\i pbstrFileName}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i pbstrFileName} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The address in {\i pINode} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred and the filename was not returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pINode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to any {\b IDMUSProdNode} in the file.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pbstrFileName}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Pointer to the caller-allocated variable 
that receives the copy of the filename.  The caller must 
free {\i pbstrFileName} with SysFreeString when it is no longer 
needed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example retrieves the filename of the file which contains {\i pINode}:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 IDMUSProdFramework pIFramework;\par 
CString strFileName;\par 
BSTR bstrFileName;\par 
\par 
if( SUCCEEDED ( pIFramework->GetNodeFileName((IDMUSProdNode *)this, &bstrFileName) ) )\par 
\{\par 
\tab strFileName = bstrFileName;\par 
\tab ::SysFreeString( bstrFileName );\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b SaveNode}, {\b SaveNodeAsNewFile}, {\b IDMUSProdNode}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::GetSelectedNode Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetSelectedNode(}{\b IDMUSProdNode**} {\i ppINode}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns the Project Tree's currently 
selected {\b Node}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The Project Tree's selected node was returned in {\i ppINode}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppINode} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and the selected node could not be returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppINode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
{\b IDMUSProdNode} interface.  If an error occurs, the implementation 
sets {\i ppINode} to NULL.  On success, the caller 
is responsible for calling {\b IDMUSProdNode::Release}
 
when this pointer is no longer needed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b GetSelectedNode} sets {\i ppINode} to NULL and returns S_OK when 
either the Project Tree is empty or none of its nodes are selected.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example obtains the active node of the Project Tree:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 IDMUSProdNode* pINode;\par 
\par 
if( SUCCEEDED ( pIFramework->GetSelectedNode( &pINode ) ) )\par 
\{\par 
\tab if( pINode )\par 
\tab \{\par 
\tab \tab ...\par 
\tab \tab ...\par 
\tab \tab ...\par 
\tab \tab pINode->Release();\par 
\tab \}\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::GetSharedObject Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetSharedObject(}{\b REFCLSID} {\i rclsid}{\b , REFIID} {\i riid}
{\b , void**} {\i ppvObject}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Allows one or more DirectMusic 
Producer {\b Component}s to share the same COM object.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The interface specified in {\i riid} was returned successfully.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppvObject} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and the interface specified in {\i riid} could not be returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i rclsid}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] CLSID of the requested object.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i riid}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Identifier of the requested interface.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppvObject}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive 
the requested object. On success, the caller is 
responsible for calling IUnknown::Release.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This method calls CoCreateInstance to create objects of type {\i rclsid}.  The 
{\b Framework} holds a reference to the created object so that subsequent calls to 
{\b GetSharedObject} can simply return an additional reference 
to a previously created object whose CLSID matches {\i rclsid}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example obtains an interface to a shared DirectMusic Composer object:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 IDirectMusicComposer* pIComposer;\par 
HRESULT hr;\par 
\par 
hr = pIFramework->GetSharedObject( CLSID_DMCompos, IID_IDirectMusicComposer, (void**)&pIComposer )\par 
\par 
if( SUCCEEDED ( hr ) )\par 
\{\par 
\tab \tab .....\par 
\tab \tab .....\par 
\par 
\tab \tab pIComposer->Release();\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::IsProjectEqual Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT IsProjectEqual(}{\b IDMUSProdNode*} {\i pIDocRootNode1}{\b , IDMUSProdNode*} {\i pIDocRootNode2}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Determines whether {\i pIDocRootNode1} 
and {\i pIDocRootNode2} are in the same {\b Project}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i pIDocRootNode1} and {\i pIDocRootNode2} are in the same Project.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell {\i pIDocRootNode1} and {\i pIDocRootNode2} are not in the same Project.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The value of either {\i pIDocRootNode1} or {\i pIDocRootNode2} is 
not valid.  For example, it may not point to a DocRoot node.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred.  Cannot determine whether the specified DocRoot nodes 
are in the same Project.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIDocRootNode1}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IDMUSProdNode} interface of 
a DocRoot node.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIDocRootNode2}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IDMUSProdNode} interface of 
a DocRoot node.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\i pIDocRootNode1} and {\i pIDocRootNode2} must point to DocRoot {\b Node}s.\par 
A DocRoot node is the top node of a document, or file.  For example, the Style node of 
a Style file would be considered the DocRoot node of the Style.  The Band node of a Band 
file would be considered the DocRoot node of the Band file.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example makes sure that a referenced file exists in the same Project as the 
file it references.  m_pIStyleRefNode contains an IDMUSProdNode interface pointer to the node 
used to display a referenced Style file:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 IDMUSProdReferenceNode* pIReferenceNode;\par 
\par 
if( SUCCEEDED ( m_pIStyleRefNode->QueryInterface( IID_IDMUSProdReferenceNode, (void **)&pIReferenceNode ) ) )\par 
\{\par 
\tab IDMUSProdNode* pIStyleDocRootNode;\par 
\par 
\tab if( SUCCEEDED ( pIReferenceNode->GetReferencedFile( &pIStyleDocRootNode ) ) )\par 
\tab \{\par 
\tab \tab if( pIFramework->IsProjectEqual( this, pIStyleDocRootNode ) == S_FALSE )\par 
\tab \tab \{\par 
\tab \tab \tab IDMUSProdNode* pINewDocRootNode;\par 
\par 
\tab \tab \tab if( SUCCEEDED ( pIFramework->CopyFile( pIStyleDocRootNode, this, &pINewDocRootNode ) ) )\par 
\tab \tab \tab \{\par 
\tab \tab \tab \tab pIReferenceNode->SetReferencedFile( pINewDocRootNode );\par 
\tab \tab \tab \tab pINewDocRootNode->Release();\par 
\tab \tab \tab \}\par 
\tab \tab \}\par 
\par 
\tab \tab pIStyleDocRootNode->Release();\par 
\tab \}\par 
\par 
\tab pIReferenceNode->Release();\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b CopyFile}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::NotifyNodes Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT NotifyNodes(}{\b IDMUSProdNode*} {\i pIChangedDocRootNode}{\b , GUID} {\i guidUpdateType}
{\b , void*} {\i pData}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Notifies all {\b Node}s linked to 
{\i pIChangedDocRootNode} via calls to {\b AddToNotifyList} that 
the state of {\i pIChangedDocRootNode} has changed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell Nodes linked to {\i pIDocRootNode} were notified successfully.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pIChangedDocRootNode} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and the nodes linked to {\i pIDocRootNode} could not be 
notified.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIChangedDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the changed DocRoot's {\b IDMUSProdNode} 
interface.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i guidUpdateType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Identifies type of change.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pData}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to additional data associated 
with the change.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\i pIChangedDocRootNode} must point to a DocRoot {\b Node}.  A DocRoot node is the top 
node of a document, or file.  For example, the Style node of a Style file would be 
considered the DocRoot node of the Style.  The Band node of a Band file would be 
considered the DocRoot node of the Band file.\par 
{\i pData} may be NULL.\par 
Valid {\i guidUpdateType} and {\i pData} values must be defined and documented in the .h 
and .lib files distributed by the Component supporting nodes of type {\i pIDocRootNode}. 
For example, the Style Component's StyleDesigner.h and StyleDesignerGuid.lib files 
must contain and document the various {\i guidUpdateType} and {\i pData} values it 
uses to communicate Style file changes.\par 
The following list contains notifications provided by the Framework:\par 
\tab {\i guidUpdateType} \tab \tab \tab {\i pData} \tab \tab {\i Description}\par 
\tab FRAMEWORK_FileDeleted \tab \tab NULL \tab \tab  File deleted by user and is no longer in the Project Tree.\par 
\tab FRAMEWORK_FileReplaced \tab \tab NULL \tab \tab  Linked file being replaced by another version of the file.\par 
\tab FRAMEWORK_FileClosed \tab \tab NULL \tab \tab  File closed normally and is no longer in the Project Tree.\par 
\tab FRAMEWORK_FileNameChange \tab \tab NULL \tab \tab  File renamed by user.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example notifies interested nodes that the name of a Style has changed:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CStyle::SetNodeName( BSTR bstrName )\par 
\{\par 
\tab AFX_MANAGE_STATE(_afxModuleAddrThis);\par 
\par 
\tab ASSERT( m_pComponent != NULL );\par 
\tab ASSERT( m_pComponent->m_pIFramework != NULL );\par 
\par 
\tab CString strName = bstrName;\par 
\tab ::SysFreeString( bstrName );\par 
\par 
\tab m_strName = strName;\par 
\par 
\tab IDMUSProdPropSheet* pIPropSheet;\par 
\tab if( SUCCEEDED ( m_pComponent->m_pIFramework->QueryInterface( IID_IDMUSProdPropSheet, (void**)&pIPropSheet ) ) )\par 
\tab \{\par 
\tab \tab pIPropSheet->RefreshTitleByObject( this );\par 
\tab \tab pIPropSheet->Release();\par 
\tab \}\par 
\par 
\tab SetModified( TRUE );\par 
\par 
\tab // Notify connected nodes that the Style name has changed\par 
\tab m_pComponent->m_pIFramework->NotifyNodes( this, STYLE_NameChange, NULL );\par 
\par 
\tab return S_OK;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b AddToNotifyList}, {\b RemoveFromNotifyList}, {\b IDMUSProdNotifySink}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::OpenEditor Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT OpenEditor(}{\b IDMUSProdNode*} {\i pINode}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Opens an editor for the node specified 
in {\i pINode}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell An editor was successfully opened for {\i pINode}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The address in {\i pINode} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and the editor could not be opened.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pINode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IDMUSProdNode} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This method provides the means for a Component to initiate in-place editing for a 
node in the Project Tree.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example opens an editor for {\i pINode}:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b Editor} Object, {\b IDMUSProdFramework}, {\b CloseEditor}, {\b IDMUSProdNode}, {\b IDMUSProdEditor}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::OpenFile Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT OpenFile(}{\b IDMUSProdDocType*} {\i pIDocType}{\b , BSTR} {\i bstrTitle}
{\b , IDMUSProdNode*} {\i pITreePositionNode}
{\b , IDMUSProdNode**} {\i ppIDocRootNode}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Invokes the {\b Framework}'s File Open 
command and returns a file of the type described through {\i pIDocType}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The file's top {\b IDMUSProdNode} was returned in {\i ppIDocRootNode}.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i ppIDocRootNode} is not valid.  For example, it may 
be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell Either {\i pIDocType} or {\i pITreePositionNode} is not valid. 
For example, they may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell The file could not be opened.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIDocType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IDMUSProdDocType} interface which 
is used to determine the kind of file to open.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i bstrTitle}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Title used for the File Open dialog.  This method 
frees {\i bstrTitle} with SysFreeString when it is no 
longer needed.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITreePositionNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b Node} used to determine where 
the newly created file should be placed in the Project 
Tree.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppIDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Address of a variable to receive the requested 
{\b IDMUSProdNode} interface.  If an error occurs, the implementation 
sets {\i ppIDocRootNode} to NULL.  On success, the caller 
is responsible for calling {\b IDMUSProdNode::Release}
 when 
this pointer is no longer needed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This method provides the means for a Component to initiate a File Open command.\par 
The title of the File Open dialog is set to 'Open' when {\i bstrTitle} is NULL.\par 
Part of the Framework's File Open processing uses {\i pIDocType} to call 
{\b IDMUSProdDocType::OnFileOpen}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example loads a Style file and places it in the Project Tree in the 
same directory as {\i pISegmentDocRootNode}:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 IDMUSProdDocType* pIDocType;\par 
IDMUSProdNode* pIDocRootNode;\par 
\par 
if( SUCCEEDED ( m_pIFramework->FindDocTypeByNodeId( GUID_StyleNode, &pIDocType ) ) )\par 
\{\par 
\tab if( SUCCEEDED ( m_pIFramework->OpenFile( pIDocType, NULL, pISegmentDocRootNode, &pIDocRootNode ) ) )\par 
\tab \{\par 
\tab \tab pIDocRootNode->Release();\par 
\tab \}\par 
\par 
\tab pIDocType->Release();\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdDocType}, {\b IDMUSProdFramework}, {\b CreateNewFile}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::RefreshNode Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT RefreshNode(}{\b IDMUSProdNode*} {\i pINode}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Refreshes and redraws the Project Tree 
node associated with {\i pINode}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i pINode} was refreshed successfully.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The address in {\i pINode} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred and {\i pINode} could not be refreshed.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pINode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to an {\b IDMUSProdNode} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This method calls {\b IDMUSProdNode::GetNodeName}
 before updating the Project Tree with 
new label text for {\i pINode}.\par 
This method calls {\b IDMUSProdNode::GetNodeImageIndex}
 before updating the Project Tree 
with a new icon for {\i pINode}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b IDMUSProdNode}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::RegisterClipFormatForFile Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT RegisterClipFormatForFile(}{\b UINT} {\i uClipFormat}{\b , BSTR} {\i bstrExt}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Registers a file's clipboard 
format with the {\b Framework}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i uClipFormat} was registered successfully.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell Either {\i uClipFormat} or {\i bstrExt} is not valid.  For example, 
{\i uClipFormat} may be zero.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_OUTOFMEMORY\cell Out of memory.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell {\i uClipFormat} could not be registered.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i uClipFormat}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Clipboard format used to create files 
with an extension equal to {\i bstrExt}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i bstrExt}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] File extension.  This method frees 
{\i bstrExt} with SysFreeString when it is no 
longer needed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 A {\b Component}'s {\b IDMUSProdComponent::Initialize}
 method can call 
{\b RegisterClipFormatForFile} to make the Framework aware of clipboard 
formats that can be used to create files in the Project Tree.\par 
Data objects which have the potential of being pasted as DirectMusic files must contain at 
least two clipboard formats:  CF_DMUSPROD_FILE, and their custom format for file content.  The 
custom format must be registered with the Framework via a call to 
{\b RegisterClipFormatForFile}.  CF_DMUSPROD_FILE clipboard formats are created 
by calling {\b SaveClipFormat}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following excerpt from an {\b IDMUSProdComponent::Initialize}
 method registers 
a Band file's clipboard format with the Framework:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 #define CF_BAND "DMUSProd v.1 Band"\par 
#define CF_BANDLIST "DMUSProd v.1 Band List"\par 
\par 
// Register clipboard formats\par 
m_cfBand = ::RegisterClipboardFormat( CF_BAND );\par 
m_cfBandList = ::RegisterClipboardFormat( CF_BANDLIST );\par 
if( m_cfBand == 0\par 
||  m_cfBandList == 0 )\par 
\{\par 
\tab CleanUp();\par 
\tab ::LoadString( theApp.m_hInstance, IDS_ERR_REGISTER_CF, achErrMsg, MID_BUFFER );\par 
\tab strErrMsg = achErrMsg;\par 
\tab *pbstrErrMsg = strErrMsg.AllocSysString();\par 
\tab return E_FAIL;\par 
\}\par 
\par 
// Tell Framework that the CF_BAND format can be used to create a .bnj file\par 
CString strExt = _T(".bnj");\par 
BSTR bstrExt = strExt.AllocSysString();\par 
if( !SUCCEEDED ( pIFramework->RegisterClipFormatForFile(m_cfBand, bstrExt) ) )\par 
\{\par 
\tab CleanUp();\par 
\tab ::LoadString( theApp.m_hInstance, IDS_ERR_ADD_CLIPFORMAT, achErrMsg, MID_BUFFER );\par 
\tab strErrMsg = achErrMsg;\par 
\tab *pbstrErrMsg = strErrMsg.AllocSysString();\par 
\tab return E_FAIL;\par 
\}\par 
\par 
// Register applicable doc types with the Framework\par 
m_pIDocType = new CBandDocType( this );\par 
if( m_pIDocType == NULL )\par 
\{\par 
\tab CleanUp();\par 
\tab ::LoadString( theApp.m_hInstance, IDS_ERR_MEMORY, achErrMsg, MID_BUFFER );\par 
\tab strErrMsg = achErrMsg;\par 
\tab *pbstrErrMsg = strErrMsg.AllocSysString();\par 
\tab return E_OUTOFMEMORY;\par 
\}\par 
\par 
m_pIDocType->AddRef();\par 
\par 
if( !SUCCEEDED ( pIFramework->AddDocType(m_pIDocType) ) )\par 
\{\par 
\tab CleanUp();\par 
\tab ::LoadString( theApp.m_hInstance, IDS_ERR_ADD_DOCTYPE, achErrMsg, MID_BUFFER );\par 
\tab strErrMsg = achErrMsg;\par 
\tab *pbstrErrMsg = strErrMsg.AllocSysString();\par 
\tab return E_FAIL;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b SaveClipFormat}, {\b GetDocRootNodeFromData}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::RemoveFromNotifyList Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT RemoveFromNotifyList(}{\b IDMUSProdNode*} {\i pIDocRootNode}{\b , IDMUSProdNode*} {\i pINotifyThisNode}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Removes {\i pINotifyThisNode} from 
the list of {\b Node}s notified when the state of {\i pIDocRootNode} changes.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i pINotifyThisNode} was removed from the list of nodes to be notified when 
the state of {\i pIDocRootNode} changes.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell Either {\i pIDocRootNode} or {\i pINotifyThisNode} is not valid. 
For example, they may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred, and {\i pINotifyThisNode} could not be removed from 
the notify list attached to {\i pIDocRootNode}.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to an {\b IDMUSProdNode} interface.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pINotifyThisNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IDMUSProdNode} requesting a 
callback when {\i pIDocRootNode} changes.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 {\i pIDocRootNode} must point to a DocRoot {\b Node}.  A DocRoot node is the top node of 
a document, or file.  For example, the Style node of a Style file would be considered 
the DocRoot node of the Style.  The Band node of a Band file would be considered the 
DocRoot node of the Band file.\par 
{\b RemoveFromNotifyList} advises the Framework that {\i pINotifyThisNode} 
no longer references {\i pIDocRootNode}.  This method should not be called as part of normal 
shutdown procedure.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b AddToNotifyList}, {\b NotifyNodes}, {\b IDMUSProdNotifySink}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::RemoveMenuItem Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT RemoveMenuItem(}{\b IDMUSProdMenu*} {\i pIMenu}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Removes the menu item defined 
by {\i pIMenu} from the Framework's 'Add-Ins' menu.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i pIMenu} was successfully removed from the Framework's 'Add-Ins' menu.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pIMenu} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell {\i pIMenu} was not removed from the 'Add-Ins' menu.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIMenu}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IDMUSProdMenu} interface to be removed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 A Component's {\b IDMUSProdComponent::Initialize}
 method should call 
{\b AddMenuItem} if it wants to add menu item(s) to the Framework's 
'Add-Ins' menu.  {\b RemoveMenuItem} should be called from within 
{\b IDMUSProdComponent::CleanUp}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following excerpt from an {\b IDMUSProdComponent::Cleanup}
 method removes an 
item from the Framework's 'Add-Ins' menu:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 if( m_fMenuWasAdded )\par 
\{\par 
\tab m_pIFramework->RemoveMenuItem( (IDMUSProdMenu *)this );\par 
\tab m_fMenuWasAdded = FALSE;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b AddMenuItem}, {\b IDMUSProdMenu}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::RemoveNode Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT RemoveNode(}{\b IDMUSProdNode*} {\i pITopNode}{\b , BOOL} {\i fPromptUser}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Removes {\i pITopNode}, along with its 
children, from the Project Tree.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i pITopNode}, along with its children, was removed successfully.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell User cancelled the delete.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The address in {\i pITopNode} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred and {\i pITopNode} was not removed from the Project Tree.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pITopNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IDMUSProdNode} interface to be removed.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i fPromptUser}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Determines whether delete prompt is displayed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following example removes a Style file from the Project Tree:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 HRESULT CStyleDocType::DeleteChildNode( IDMUSProdNode* pIChildNode )\par 
\{\par 
\tab ASSERT( pIChildNode != NULL );\par 
\tab ASSERT( m_pComponent != NULL );\par 
\tab ASSERT( m_pComponent->m_pIFramework != NULL );\par 
\par 
\tab // Remove from Project Tree\par 
\tab if( m_pComponent->m_pIFramework->RemoveNode( pIChildNode, FALSE ) == S_FALSE )\par 
\tab \{\par 
\tab \tab return E_FAIL;\par 
\tab \}\par 
\par 
\tab // Remove from Component Style list\par 
\tab POSITION pos = m_pComponent->m_lstStyles.Find( (CStyle *)pIChildNode );\par 
\tab if( pos )\par 
\tab \{\par 
\tab \tab m_pComponent->m_lstStyles.RemoveAt( pos );\par 
\tab \tab pIChildNode->Release();\par 
\tab \}\par 
\par 
\tab return S_OK;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b AddNode}, {\b IDMUSProdNode}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::RemoveToolBar Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT RemoveToolBar(}{\b IDMUSProdToolBar*} {\i pIToolBar}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Removes the {\b ToolBar} defined by 
{\i pIToolBar} from the Framework.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell {\i pIToolBar} was successfully removed from the Framework.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pIToolBar} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell {\i pIToolBar} was not removed from the Framework.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIToolBar}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IDMUSProdToolBar} interface to be removed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 A Component's {\b IDMUSProdComponent::Initialize}
 method should call 
{\b AddToolBar} if it wants to add toolbar(s) to the Framework. 
{\b RemoveToolBar} should be called from within 
{\b IDMUSProdComponent::CleanUp}
.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Example\par \pard\plain \sa160\sl240 \fs21\lang1033 The following excerpt from an {\b IDMUSProdComponent::Cleanup}
 method removes a toolbar 
from the Framework:\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 if( m_pBarMsgHandler )\par 
\{\par 
\tab m_pIFramework->RemoveToolBar( m_pBarMsgHandler );\par 
\tab if( m_pBarMsgHandler->GetSafeHwnd() )\par 
\tab \{\par 
\tab \tab m_pBarMsgHandler->DestroyWindow();\par 
\tab \}\par 
\tab delete m_pBarMsgHandler;\par 
\tab m_pBarMsgHandler = NULL;\par 
\}\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IDMUSProdFramework}, {\b AddToolBar}, {\b IDMUSProdToolBar}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IDMUSProdFramework::RestoreStatusBar Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT RestoreStatusBar(}{\b HANDLE} {\i hKey}{