="F:System.Windows.Controls.VisualStates.StateUnfocused">
            <summary>
            Unfocused state of the Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateFocused">
            <summary>
            Focused state of the Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupSelection">
            <summary>
            Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSelected">
            <summary>
            Selected state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnselected">
            <summary>
            Unselected state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSelectedInactive">
            <summary>
            Selected inactive state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupExpansion">
            <summary>
            Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpanded">
            <summary>
            Expanded state of the Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCollapsed">
            <summary>
            Collapsed state of the Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupPopup">
            <summary>
            Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePopupOpened">
            <summary>
            Opened state of the Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePopupClosed">
            <summary>
            Closed state of the Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupValidation">
            <summary>
            ValidationStates state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateValid">
            <summary>
            The valid state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalidFocused">
            <summary>
            Invalid, focused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalidUnfocused">
            <summary>
            Invalid, unfocused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupExpandDirection">
            <summary>
            ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandDown">
            <summary>
            Down expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandUp">
            <summary>
            Up expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandLeft">
            <summary>
            Left expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandRight">
            <summary>
            Right expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupHasItems">
            <summary>
            HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateHasItems">
            <summary>
            HasItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNoItems">
            <summary>
            NoItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupIncrease">
            <summary>
            Increment state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateIncreaseEnabled">
            <summary>
            State enabled for increment group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateIncreaseDisabled">
            <summary>
            State disabled for increment group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupDecrease">
            <summary>
            Decrement state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDecreaseEnabled">
            <summary>
            State enabled for decrement group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDecreaseDisabled">
            <summary>
            State disabled for decrement group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupInteractionMode">
            <summary>
            InteractionMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateEdit">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDisplay">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupLocked">
            <summary>
            DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateLocked">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnlocked">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateActive">
            <summary>
            Active state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInactive">
            <summary>
            Inactive state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupActive">
            <summary>
            Active state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnwatermarked">
            <summary>
            Non-watermarked state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateWatermarked">
            <summary>
            Watermarked state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupWatermark">
            <summary>
            Watermark state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCalendarButtonUnfocused">
            <summary>
            Unfocused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCalendarButtonFocused">
            <summary>
            Focused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupCalendarButtonFocus">
            <summary>
            CalendarButtons Focus state group.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.GoToState(System.Windows.Controls.Control,System.Boolean,System.String[])">
            <summary>
            Use VisualStateManager to change the visual state of the control.
            </summary>
            <param name="control">
            Control whose visual state is being changed.
            </param>
            <param name="useTransitions">
            A value indicating whether to use transitions when updating the
            visual state, or to snap directly to the new visual state.
            </param>
            <param name="stateNames">
            Ordered list of state names and fallback states to transition into.
            Only the first state to be found will be used.
            </param>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.GetImplementationRoot(System.Windows.DependencyObject)">
            <summary>
            Gets the implementation root of the Control.
            </summary>
            <param name="dependencyObject">The DependencyObject.</param>
            <remarks>
            Implements Silverlight's corresponding internal property on Control.
            </remarks>
            <returns>Returns the implementation root or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.TryGetVisualStateGroup(System.Windows.DependencyObject,System.String)">
            <summary>
            This method tries to get the named VisualStateGroup for the 
            dependency object. The provided object's ImplementationRoot will be 
            looked up in this call.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="groupName">The visual state group's name.</param>
            <returns>Returns null or the VisualStateGroup object.</returns>
        </member>
        <member name="T:System.Windows.Controls.Primitives.VisualTreeExtensions">
            <summary>
            Provides useful extensions for working with the visual tree.
            </summary>
            <remarks>
            Since many of these extension methods are declared on types like
            DependencyObject high up in the class hierarchy, we've placed them in
            the Primitives namespace which is less likely to be imported for normal
            scenarios.
            </remarks>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree ancestors of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>The visual tree ancestors of the element.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree ancestors of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree ancestors of an element and the element itself.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelfIterator(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree ancestors of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree ancestors of an element and the element itself.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree children of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>The visual tree children of an element.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree children of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree children of an element and the element itself.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelfIterator(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree children of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree children of an element and the element itself.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree descendants of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>The visual tree descendants of an element.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree descendants of an element and the element
            itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree descendants of an element and the element itself.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelfIterator(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree descendants of an element and the element
            itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree descendants of an element and the element itself.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree siblings of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>The visual tree siblings of an element.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree siblings of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree siblings of an element and the element itself.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetBoundsRelativeTo(System.Windows.FrameworkElement,System.Windows.UIElement)">
            <summary>
            Get the bounds of an element relative to another element.
            </summary>
            <param name="element">The element.</param>
            <param name="otherElement">
            The element relative to the other element.
            </param>
            <returns>
            The bounds of the element relative to another element, or null if
            the elements are not related.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="otherElement"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.InvokeOnLayoutUpdated(System.Windows.FrameworkElement,System.Action)">
            <summary>
            Perform an action when the element's LayoutUpdated event fires.
            </summary>
            <param name="element">The element.</param>
            <param name="action">The action to perform.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="action"/> is null.
            </exception>
        </member>
        <member name="T:System.Windows.Controls.DockPanel">
            <summary>
            Arranges child elements around the edges of the panel.  Optionally, 
            last added child element can occupy the remaining space.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DockPanel._ignorePropertyChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DockPanel.LastChildFillProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.DockPanel.LastChildFill" />
            dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.OnLastChildFillPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            LastChildFillProperty property changed handler.
            </summary>
            <param name="d">DockPanel that changed its LastChildFill.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.GetDock(System.Windows.UIElement)">
            <summary>
            Gets the value of the
            <see cref="P:System.Windows.Controls.DockPanel.Dock" /> attached
            property for the specified element.
            </summary>
            <param name="element">
            The element from which the property value is read.
            </param>
            <returns>
            The <see cref="P:System.Windows.Controls.DockPanel.Dock" /> property
            value for the element.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.SetDock(System.Windows.UIElement,System.Windows.Controls.Dock)">
            <summary>
            Sets the value of the
            <see cref="P:System.Windows.Controls.DockPanel.Dock" /> attached
            property for the specified element to the specified dock value.
            </summary>
            <param name="element">
            The element to which the attached property is assigned.
            </param>
            <param name="dock">
            The dock value to assign to the specified element.
            </param>
        </member>
        <member name="F:System.Windows.Controls.DockPanel.DockProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.DockPanel.Dock" />
            attached property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.OnDockPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DockProperty property changed handler.
            </summary>
            <param name="d">UIElement that changed its Dock.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.DockPanel" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child elements of a
            <see cref="T:System.Windows.Controls.DockPanel" /> in preparation
            for arranging them during the
            <see cref="M:System.Windows.Controls.DockPanel.ArrangeOverride(System.Windows.Size)" />
            pass.
            </summary>
            <param name="constraint">
            The area available to the
            <see cref="T:System.Windows.Controls.DockPanel" />.
            </param>
            <returns>
            The desired size of the
            <see cref="T:System.Windows.Controls.DockPanel" />.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the child elements of the
            <see cref="T:System.Windows.Controls.DockPanel" /> control.
            </summary>
            <param name="arrangeSize">
            The area in the parent element that the
            <see cref="T:System.Windows.Controls.DockPanel" /> should use to
            arrange its child elements.
            </param>
            <returns>
            The actual size of the
            <see cref="T:System.Windows.Controls.DockPanel" /> after the child
            elements are arranged. The actual size should always equal
            <paramref name="arrangesize" />.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.DockPanel.LastChildFill">
            <summary>
            Gets or sets a value indicating whether the last child element
            added to a <see cref="T:System.Windows.Controls.DockPanel" />
            resizes to fill the remaining space.
            </summary>
            <value>
            True if the last element added resizes to fill the remaining space,
            false to indicate the last element does not resize. The default is
            true.
            </value>
        </member>
        <member name="T:System.Windows.Controls.ExpandDirection">
            <summary>
            Specifies the direction in which an
            <see cref="T:System.Windows.Controls.Expander" /> control opens.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.ExpandDirection.Down">
            <summary>
            Specifies that the <see cref="T:System.Windows.Controls.Expander" />
            control opens in the down direction.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ExpandDirection.Up">
            <summary>
            Specifies that the <see cref="T:System.Windows.Controls.Expander" />
            control opens in the up direction.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ExpandDirection.Left">
            <summary>
            Specifies that the <see cref="T:System.Windows.Controls.Expander" />
            control opens in the left direction.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ExpandDirection.Right">
            <summary>
            Specifies that the <see cref="T:System.Windows.Controls.Expander" />
            control opens in the right direction.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Expander">
            <summary>
            Represents a control that displays a header and has a collapsible
            content window.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.HeaderedContentControl">
            <summary>
            Provides the base implementation for controls that contain a single
            content element and a header.
            </summary>
            <remarks>
            HeaderedContentControl adds Header and HeaderTemplatefeatures to a
            ContentControl. HasHeader and HeaderTemplateSelector are removed for
            lack of support and consistency with other Silverlight controls.
            </remarks>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderProperty property changed handler.
            </summary>
            <param name="d">HeaderedContentControl whose Header property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs, which contains the old and new value.</param>
        </member>
        <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderTemplateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderTemplatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderTemplateProperty property changed handler.
            </summary>
            <param name="d">HeaderedContentControl whose HeaderTemplate property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs, which contains the old and new value.</param>
        </member>
        <member name="M:System.Windows.Controls.HeaderedContentControl.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.HeaderedContentControl" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            property changes.
            </summary>
            <param name="oldHeader">
            The old value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            property.
            </param>
            <param name="newHeader">
            The new value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            property.
            </param>
        </member>
        <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            Called when the value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            property changes.
            </summary>
            <param name="oldHeaderTemplate">
            The old value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            property.
            </param>
            <param name="newHeaderTemplate">
            The new value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            property.
            </param>
        </member>
        <member name="P:System.Windows.Controls.HeaderedContentControl.Header">
            <summary>
            Gets or sets the content for the header of the control.
            </summary>
            <value>
            The content for the header of the control. The default value is
            null.
            </value>
        </member>
        <member name="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate">
            <summary>
            Gets or sets the template that is used to display the content of the
            control's header.
            </summary>
            <value>
            The template that is used to display the content of the control's
            header. The default is null.
            </value>
        </member>
        <member name="F:System.Windows.Controls.Expander.ElementExpanderButtonName">
            <summary>
            The name of the ExpanderButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Expander._expanderButton">
            <summary>
            The ExpanderButton template part is a templated ToggleButton that's used 
            to expand and collapse the ExpandSite, which hosts the content.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Expander.ExpandDirectionProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Expander.ExpandDirection" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Expander.ExpandDirection" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnExpandDirectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ExpandDirectionProperty PropertyChangedCallback call back static function.
            This function validates the new value before calling virtual function OnExpandDirectionChanged.
            </summary>
            <param name="d">Expander object whose ExpandDirection property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains the old and new values.</param>
        </member>
        <member name="M:System.Windows.Controls.Expander.IsValidExpandDirection(System.Object)">
            <summary>
            Check whether the passed in value o is a valid ExpandDirection enum value.
            </summary>
            <param name="o">The value to be checked.</param>
            <returns>True if o is a valid ExpandDirection enum value, false o/w.</returns>
        </member>
        <member name="F:System.Windows.Controls.Expander.IsExpandedProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Expander.IsExpanded" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Expander.IsExpanded" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnIsExpandedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ExpandedProperty PropertyChangedCallback static function.
            </summary>
            <param name="d">Expander object whose Expanded property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains the old and new values.</param>
        </member>
        <member name="M:System.Windows.Controls.Expander.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Expander" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Expander" /> control when a new
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnCreateAutomationPeer">
            <summary>
            Returns a
            <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />
            for use by the Silverlight automation infrastructure.
            </summary>
            <returns>
            A
            <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />
            object for the <see cref="T:System.Windows.Controls.Expander" />.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.KeyDown" /> event.
            </summary>
            <param name="e">Key event args.</param>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnExpanded">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.Expander.Expanded" /> event
            when the
            <see cref="P:System.Windows.Controls.Expander.IsExpanded" />
            property changes from false to true.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnCollapsed">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.Expander.Collapsed" /> event
            when the
            <see cref="P:System.Windows.Controls.Expander.IsExpanded" />
            property changes from true to false.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Expander.ToggleExpanded(System.Windows.RoutedEventHandler,System.Windows.RoutedEventArgs)">
            <summary>
            Handle changes to the IsExpanded property.
            </summary>
            <param name="handler">Event handler.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Expander.RaiseEvent(System.Windows.RoutedEventHandler,System.Windows.RoutedEventArgs)">
            <summary>
            Raise a RoutedEvent.
            </summary>
            <param name="handler">Event handler.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnExpanderButtonClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle ExpanderButton's click event.
            </summary>
            <param name="sender">The ExpanderButton in template.</param>
            <param name="e">Routed event arg.</param>
        </member>
        <member name="M:System.Windows.Controls.Expander.System#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Expander.UpdateVisualState(System.Boolean)">
            <summary>
            Update the current visual state of the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="P:System.Windows.Controls.Expander.ExpanderButton">
            <summary>
            Gets or sets the ExpanderButton template part.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Expander.ExpandDirection">
            <summary>
            Gets or sets the direction in which the
            <see cref="T:System.Windows.Controls.Expander" /> content window
            opens.
            </summary>
            <value>
            One of the <see cref="T:System.Windows.Controls.ExpandDirection" />
            values that define which direction the content window opens.  The
            default is
            <see cref="F:System.Windows.Controls.ExpandDirection.Down" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.Expander.IsExpanded">
            <summary>
            Gets or sets a value indicating whether the
            <see cref="T:System.Windows.Controls.Expander" /> content window is
            visible.
            </summary>
            <value>
            True if the content window is expanded; otherwise, false. The
            default is false.
            </value>
        </member>
        <member name="E:System.Windows.Controls.Expander.Expanded">
            <summary>
            Occurs when the content window of an
            <see cref="T:System.Windows.Controls.Expander" /> control opens to
            display both its header and content.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Expander.Collapsed">
            <summary>
            Occurs when the content window of an
            <see cref="T:System.Windows.Controls.Expander" /> control closes and
            only the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            is visible.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Expander.Interaction">
            <summary>
            Gets or sets the helper that provides all of the standard
            interaction functionality.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.ExpanderAutomationPeer">
            <summary>
            Exposes <see cref="T:System.Windows.Controls.Expander" /> types to UI
            automation.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.#ctor(System.Windows.Controls.Expander)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The element associated with this automation peer.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the
            <see cref="T:System.Windows.Controls.Expander" /> that is associated
            with this
            <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />.
            This method is called by
            <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
            </summary>
            <returns>
            The
            <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Group" />
            enumeration value.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the
            <see cref="T:System.Windows.Controls.Expander" /> that is associated
            with this
            <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />.
            This method is called by
            <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
            </summary>
            <returns>A string that contains Expander.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the
            <see cref="T:System.Windows.Controls.Expander" /> that is associated
            with this
            <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />.
            </summary>
            <param name="pattern">One of the enumeration values.</param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
            <summary>
            Displays all child nodes, controls, or content of the control.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
            <summary>
            Hides all nodes, controls, or content that are descendants of the
            control.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.RaiseExpandCollapseAutomationEvent(System.Boolean,System.Boolean)">
            <summary>
            Raise an automation event when a Expander is expanded or collapsed.
            </summary>
            <param name="oldValue">
            A value indicating whether the Expander was expanded.
            </param>
            <param name="newValue">
            A value indicating whether the Expander is expanded.
            </param>
        </member>
        <member name="P:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
            <summary>
            Gets the state (expanded or collapsed) of the control.
            </summary>
            <value>
            The state (expanded or collapsed) of the control.
            </value>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.BindingSourceEvaluator`1">
            <summary>
            A framework element that permits a binding to be evaluated in a new data
            context leaf node. Uses the BindingSource to do the evaluation.
            </summary>
            <typeparam name="T">The type of dynamic binding to return.</typeparam>
            <remarks>Mimicks the class BindingEvaluator that uses DataContext
            to do evaluation.</remarks>
        </member>
        <member name="F:System.Windows.Controls.BindingSourceEvaluator`1.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.BindingSourceEvaluator`1.#ctor(System.Windows.Data.Binding)">
            <summary>
            Initializes a new instance of the BindingSourceEvaluator class.
            </summary>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:System.Windows.Controls.BindingSourceEvaluator`1.GetDynamicValue(System.Object)">
            <summary>
            Evaluates the specified source.
            </summary>
            <param name="source">The object used as a source for the
            evaluation.</param>
            <returns>The evaluated binding.</returns>
            <remarks>Only uses Path, Converter, ConverterCulture and
            ConverterParameter.</remarks>
        </member>
        <member name="P:System.Windows.Controls.BindingSourceEvaluator`1.Value">
            <summary>
            Gets the data item string value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.BindingSourceEvaluator`1.ValueBinding">
            <summary>
            Gets the value binding that is used as a template
            for the actual evaluation.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DesignerProperties">
            <summary>
            Provides a custom implementation of DesignerProperties.GetIsInDesignMode
            to work around an issue.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
            <summary>
            Returns whether the control is in design mode (running under Blend
            or Visual Studio).
            </summary>
            <param name="element">The element from which the property value is
            read.</param>
            <returns>True if in design mode.</returns>
        </member>
        <member name="F:System.Windows.Controls.DesignerProperties._isInDesignMode">
            <summary>
            Stores the computed InDesignMode value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.WeakEventListener`3">
            <summary>
            Implements a weak event listener that allows the owner to be garbage
            collected if its only remaining link is an event handler.
            </summary>
            <typeparam name="TInstance">Type of instance listening for the event.</typeparam>
            <typeparam name="TSource">Type of source for the event.</typeparam>
            <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
        </member>
        <member name="F:System.Windows.Controls.WeakEventListener`3._weakInstance">
            <summary>
            WeakReference to the instance listening for the event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.#ctor(`0)">
            <summary>
            Initializes a new instances of the WeakEventListener class.
            </summary>
            <param name="instance">Instance subscribing to the event.</param>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.OnEvent(`1,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.WeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.WeakEventListener`3.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ItemsControlExtensions">
            <summary>
            Provides useful extensions to ItemsControl instances.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetItemsHost(System.Windows.Controls.ItemsControl)">
            <summary>
            Gets the Panel that contains the containers of an ItemsControl.
            </summary>
            <param name="control">The ItemsControl.</param>
            <returns>
            The Panel that contains the containers of an ItemsControl, or null
            if the Panel could not be found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetScrollHost(System.Windows.Controls.ItemsControl)">
            <summary>
            Gets the ScrollViewer that contains the containers of an
            ItemsControl.
            </summary>
            <param name="control">The ItemsControl.</param>
            <returns>
            The ScrollViewer that contains the containers of an ItemsControl, or
            null if a ScrollViewer could not be found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetContainers(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the item containers of an ItemsControl.
            </summary>
            <param name="control">The ItemsControl.</param>
            <returns>The item containers of an ItemsControl.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetContainers``1(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the item containers of an ItemsControl.
            </summary>
            <typeparam name="TContainer">
            The type of the item containers.
            </typeparam>
            <param name="control">The ItemsControl.</param>
            <returns>The item containers of an ItemsControl.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetContainersIterator``1(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the item containers of an ItemsControl.
            </summary>
            <typeparam name="TContainer">
            The type of the item containers.
            </typeparam>
            <param name="control">The ItemsControl.</param>
            <returns>The item containers of an ItemsControl.</returns>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the items and item containers of an ItemsControl.
            </summary>
            <param name="control">The ItemsControl.</param>
            <returns>The items and item containers of an ItemsControl.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers``1(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the items and item containers of an ItemsControl.
            </summary>
            <typeparam name="TContainer">
            The type of the item containers.
            </typeparam>
            <param name="control">The ItemsControl.</param>
            <returns>The items and item containers of an ItemsControl.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainersIterator``1(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the items and item containers of an ItemsControl.
            </summary>
            <typeparam name="TContainer">
            The type of the item containers.
            </typeparam>
            <param name="control">The ItemsControl.</param>
            <returns>The items and item containers of an ItemsControl.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="T:System.Windows.Controls.ScrollViewerExtensions">
            <summary>
            Provides useful extensions to ScrollViewer instances.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.ScrollViewerExtensions.LineChange">
            <summary>
            The amount to scroll a ScrollViewer for a line change.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.GetIsMouseWheelScrollingEnabled(System.Windows.Controls.ScrollViewer)">
            <summary>
            Gets a value indicating whether the ScrollViewer has enabled
            scrolling via the mouse wheel.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <returns>
            A value indicating whether the ScrollViewer has enabled scrolling
            via the mouse wheel.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.SetIsMouseWheelScrollingEnabled(System.Windows.Controls.ScrollViewer,System.Boolean)">
            <summary>
            Sets a value indicating whether the ScrollViewer will enable
            scrolling via the mouse wheel.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="value">
            A value indicating whether the ScrollViewer will enable scrolling
            via the mouse wheel.
            </param>
        </member>
        <member name="F:System.Windows.Controls.ScrollViewerExtensions.IsMouseWheelScrollingEnabledProperty">
            <summary>
            Identifies the IsMouseWheelScrollingEnabled dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.OnIsMouseWheelScrollingEnabledPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsMouseWheelScrollingEnabledProperty property changed handler.
            </summary>
            <param name="d">ScrollViewerExtensions that changed its IsMouseWheelScrollingEnabled.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.OnMouseWheel(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Handles the mouse wheel event.
            </summary>
            <param name="sender">The ScrollViewer.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.CoerceVerticalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Coerce a vertical offset to fall within the vertical bounds of a
            ScrollViewer.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The vertical offset to coerce.</param>
            <returns>
            The coerced vertical offset that falls within the ScrollViewer's
            vertical bounds.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.CoerceHorizontalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Coerce a horizontal offset to fall within the horizontal bounds of a
            ScrollViewer.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The horizontal offset to coerce.</param>
            <returns>
            The coerced horizontal offset that falls within the ScrollViewer's
            horizontal bounds.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollByVerticalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Scroll a ScrollViewer vertically by a given offset.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The vertical offset to scroll.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollByHorizontalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Scroll a ScrollViewer horizontally by a given offset.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The horizontal offset to scroll.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.LineUp(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer up by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.LineDown(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer down by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.LineLeft(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer left by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.LineRight(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer right by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.PageUp(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer up by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.PageDown(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer down by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.PageLeft(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer left by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.PageRight(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer right by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollToTop(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the top.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollToBottom(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the bottom.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollToLeft(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the left.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollToRight(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the right.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollIntoView(System.Windows.Controls.ScrollViewer,System.Windows.FrameworkElement)">
            <summary>
            Scroll the desired element into the ScrollViewer's viewport.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="element">The element to scroll into view.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is null.
            </exception>
        </member>
        <member name="T:System.Windows.Controls.CalendarExtensions">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.CalendarExtensions._suspendedHandlers">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.IsHandlerSuspended(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="obj">Inherited code: Requires comment 1.</param>
            <param name="dependencyProperty">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.SetValueNoCallback(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="obj">Inherited code: Requires comment 1.</param>
            <param name="property">Inherited code: Requires comment 2.</param>
            <param name="value">Inherited code: Requires comment 3.</param>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.SuspendHandler(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="obj">Inherited code: Requires comment 1.</param>
            <param name="dependencyProperty">Inherited code: Requires comment 2.</param>
            <param name="suspend">Inherited code: Requires comment 3.</param>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.GetMetaKeyState(System.Boolean@)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.GetMetaKeyState(System.Boolean@,System.Boolean@)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">Inherited code: Requires comment 2.</param>
            <param name="shift">Inherited code: Requires comment 3.</param>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.ContainsAny(System.Windows.Controls.CalendarDateRange,System.Windows.Controls.CalendarDateRange,System.Windows.Controls.CalendarInfo)">
            <summary>
            Returns true if any day in the given DateTime range is contained in
            the current CalendarDateRange.
            </summary>
            <param name="value">The current range.</param>
            <param name="range">The range to compare.</param>
            <param name="info">The CalendarInfo.</param>
            <returns>
            A value indicating whether any day in the given DateTime range is\
            contained in the current CalendarDateRange.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.GetDate(System.Windows.Controls.Primitives.GlobalCalendarDayButton)">
            <summary>
            Get the date of a GlobalCalendarDayButton.
            </summary>
            <param name="button">The button.</param>
            <returns>The date of the button.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.GetDateNullable(System.Windows.Controls.Primitives.GlobalCalendarDayButton)">
            <summary>
            Get the date of a GlobalCalendarDayButton.
            </summary>
            <param name="button">The button.</param>
            <returns>The date of the button.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.SetDate(System.Windows.Controls.Primitives.GlobalCalendarDayButton,System.DateTime)">
            <summary>
            Set the date of a GlobalCalendarDayButton.
            </summary>
            <param name="button">The button.</param>
            <param name="date">The date of the button.</param>
        </member>
        <member name="T:System.Windows.Controls.CalendarInfo">
            <summary>
            Provides globalized calendar operations.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.#ctor">
            <summary>
            Initializes a new instance of the CalendarInfo class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.EnsureDateFormatInfo">
            <summary>
            Get the DateFormatInfo and ensure it's not null.
            </summary>
            <returns>The DateFormatInfo.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.Compare(System.DateTime,System.DateTime)">
            <summary>
            Compares two instances of DateTime and returns an integer that
            indicates whether the first instance is earlier than, the same as,
            or later than the second instance.
            </summary>
            <param name="first">The first DateTime.</param>
            <param name="second">The second DateTime.</param>
            <returns>
            Less than zero indicates that first is less than second, zero
            indicates that first equals second, and greater than zero indicated
            that second is greater than first.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.CompareDays(System.DateTime,System.DateTime)">
            <summary>
            Compares the days of two instances of DateTime and returns an
            integer that indicates whether the first instance is earlier than,
            the same as, or later than the second instance.
            </summary>
            <param name="first">The first DateTime.</param>
            <param name="second">The second DateTime.</param>
            <returns>
            Less than zero indicates that first is less than second, zero
            indicates that first equals second, and greater than zero indicated
            that second is greater than first.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.AddDays(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of days away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add days.</param>
            <param name="days">The number of days to add.</param>
            <returns>
            The DateTime that results from adding the specified number of days
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.AddMonths(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of months away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add months.</param>
            <param name="months">The number of months to add.</param>
            <returns>
            The DateTime that results from adding the specified number of months
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.AddYears(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of years away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add years.</param>
            <param name="years">The number of years to add.</param>
            <returns>
            The DateTime that results from adding the specified number of years
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetMonthDifference(System.DateTime,System.DateTime)">
            <summary>
            Get the number of months between two dates.
            </summary>
            <param name="first">The first date.</param>
            <param name="second">The second date.</param>
            <returns>The number of months between the two dates.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetDecadeStart(System.DateTime)">
            <summary>
            Get the start of the DateTime's decade.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>The start of the DateTime's decade.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetDecadeEnd(System.DateTime)">
            <summary>
            Get the end of the DateTime's decade.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>The end of the DateTime's decade.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetDayOfWeek(System.DateTime)">
            <summary>
            Get the day of the week of a DateTime.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>The day of the week of a DateTime.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetFirstDayInYear(System.DateTime)">
            <summary>
            Get the first day in the year of a DateTime.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>The first day in the year of a DateTime.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetFirstDayInMonth(System.DateTime)">
            <summary>
            Get the first day in the month of a DateTime.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>The first day in the month of a DateTime.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetShortestDayName(System.Int32)">
            <summary>
            Get the shortest day name for a given day of week.
            </summary>
            <param name="dayOfWeekIndex">Index of the day of week.</param>
            <returns>The shortest day name for a given day of week.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetAbbreviatedMonthName(System.Int32)">
            <summary>
            Get the abbreviated month name for a given month.
            </summary>
            <param name="monthIndex">Index of the month.</param>
            <returns>The abbreviated month name for a given month.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.DayToString(System.DateTime)">
            <summary>
            Convert the day of a DateTime to a string.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>String representation of the day of a DateTime.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.MonthAndYearToString(System.DateTime)">
            <summary>
            Convert the year and month of a DateTime to a string.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>
            String representation of the year and month of a DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.YearToString(System.DateTime)">
            <summary>
            Convert the year of a DateTime to a string.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>String representation of the year of a DateTime.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.DecadeToString(System.Int32,System.Int32)">
            <summary>
            Convert a decade range to a string.
            </summary>
            <param name="decadeStart">The start of the decade.</param>
            <param name="decadeEnd">The end of the decade.</param>
            <returns>String representation of the decade range.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.DateToString(System.DateTime)">
            <summary>
            Convert a DateTime to a string.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>String representation of the date.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.DateToLongString(System.DateTime)">
            <summary>
            Convert a DateTime to a long format string.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>Long format string representation of the date.</returns>
        </member>
        <member name="P:System.Windows.Controls.CalendarInfo.DateFormatInfo">
            <summary>
            Gets the DateTimeFormatInfo to use for formatting.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.CalendarInfo.DaysInWeek">
            <summary>
            Gets the number of days in a week.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.CalendarInfo.FirstDayOfWeek">
            <summary>
            Gets the first day of the week.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.CultureCalendarInfo">
            <summary>
            Provides globalized calendar operations based on a specific culture.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.CultureCalendarInfo.#ctor">
            <summary>
            Initializes a new instance of the CultureCalendarInfo class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.CultureCalendarInfo.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the CultureCalendarInfo class.
            </summary>
            <param name="culture">
            The culture used to provide the calendar operations.
            </param>
        </member>
        <member name="M:System.Windows.Controls.CultureCalendarInfo.AddDays(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of days away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add days.</param>
            <param name="days">The number of days to add.</param>
            <returns>
            The DateTime that results from adding the specified number of days
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CultureCalendarInfo.AddMonths(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of months away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add months.</param>
            <param name="months">The number of months to add.</param>
            <returns>
            The DateTime that results from adding the specified number of months
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CultureCalendarInfo.AddYears(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of years away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add years.</param>
            <param name="years">The number of years to add.</param>
            <returns>
            The DateTime that results from adding the specified number of years
            to the specified DateTime.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.CultureCalendarInfo.Culture">
            <summary>
            Gets the culture used to provide the calendar operations.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.CultureCalendarInfo.DateFormatInfo">
            <summary>
            Gets the DateTimeFormatInfo to use for formatting.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.GregorianCalendarInfo">
            <summary>
            Provides globalized calendar operations based on the GregorianCalendar.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.GregorianCalendarInfo._calendar">
            <summary>
            The Calendar that provides our date operations.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GregorianCalendarInfo._formatInfo">
            <summary>
            The DateTimeFormatInfo to use for formatting.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GregorianCalendarInfo.#ctor">
            <summary>
            Initializes a new instance of the GregorianCalendarInfo class.
            </summary>
            <remarks>
            Uses the most appropriate GregorianCalendar for
            CultureInfo.CurrentCulture.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GregorianCalendarInfo.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the GregorianCalendarInfo class.
            </summary>
            <param name="culture">
            The culture used to provide the GregorianCalendar and date
            formatting information.
            </param>
        </member>
        <member name="M:System.Windows.Controls.GregorianCalendarInfo.AddDays(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of days away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add days.</param>
            <param name="days">The number of days to add.</param>
            <returns>
            The DateTime that results from adding the specified number of days
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GregorianCalendarInfo.AddMonths(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of months away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add months.</param>
            <param name="months">The number of months to add.</param>
            <returns>
            The DateTime that results from adding the specified number of months
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GregorianCalendarInfo.AddYears(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of years away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add years.</param>
            <param name="years">The number of years to add.</param>
            <returns>
            The DateTime that results from adding the specified number of years
            to the specified DateTime.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.GregorianCalendarInfo.DateFormatInfo">
            <summary>
            Gets the DateTimeFormatInfo to use for formatting.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.CalendarDayButtonStyleSelector">
            <summary>
            Provides a way to apply GlobalCalendarDayButton Styles based on custom
            logic. 
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.CalendarDayButtonStyleSelector.#ctor">
            <summary>
            Initializes a new instance of the CalendarDayButtonStyleSelector
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.CalendarDayButtonStyleSelector.SelectStyle(System.DateTime,System.Windows.Controls.Primitives.GlobalCalendarDayButton)">
            <summary>
            When overridden in a derived class, returns a
            GlobalCalendarDayButton Style based on custom logic.
            </summary>
            <param name="day">The day to select a Style for.</param>
            <param name="container">The GlobalCalendarDayButton.</param>
            <returns>A Style for the GlobalCalendarDayButton.</returns>
        </member>
        <member name="T:System.Windows.Controls.GlobalCalendar">
            <summary>
            Represents a control that enables a user to select a date by using a
            visual calendar display.
            </summary>
            <remarks>
            <para>
            A GlobalCalendar control can be used on its own, or as a drop-down part of a
            DatePicker control. For more information, see DatePicker.  A GlobalCalendar
            displays either the days of a month, the months of a year, or the years
            of a decade, depending on the value of the DisplayMode property.  When
            displaying the days of a month, the user can select a date, a range of
            dates, or multiple ranges of dates.  The kinds of selections that are
            allowed are controlled by the SelectionMode property.
            </para>
            <para>
            The range of dates displayed is governed by the DisplayDateStart and
            DisplayDateEnd properties.  If DisplayMode is Year or Decade, only
            months or years that contain displayable dates will be displayed.
            Setting the displayable range to a range that does not include the
            current DisplayDate will throw an ArgumentOutOfRangeException.
            </para>
            <para>
            The BlackoutDates property can be used to specify dates that cannot be
            selected. These dates will be displayed as dimmed and disabled.
            </para>
            <para>
            By default, Today is highlighted.  This can be disabled by setting
            IsTodayHighlighted to false.
            </para>
            <para>
            The GlobalCalendar control provides basic navigation using either the mouse or
            keyboard. The following table summarizes keyboard navigation.
            
                Key Combination     DisplayMode     Action
                ARROW               Any             Change focused date, unselect
                                                    all selected dates, and select
                                                    new focused date.
                                                    
                SHIFT+ARROW         Any             If SelectionMode is not set to
                                                    SingleDate or None begin
                                                    selecting a range of dates.
                                                    
                CTRL+UP ARROW       Any             Switch to the next larger
                                                    DisplayMode.  If DisplayMode is
                                                    already Decade, no action.
                                                    
                CTRL+DOWN ARROW     Any             Switch to the next smaller
                                                    DisplayMode.  If DisplayMode is
                                                    already Month, no action.
                                                    
                SPACEBAR            Month           Select focused date.
                
                SPACEBAR            Year or Decade  Switch DisplayMode to the Month
                                                    or Year represented by focused
                                                    item.
                                                    
                CTRL+HOME           Any             Switch DisplayMode to Month,
                                                    show today's date, and try to
                                                    select the date if allowed.
            </para>
            <para>
            XAML Usage for Classes Derived from GlobalCalendar
            If you define a class that derives from GlobalCalendar, the class can be used
            as an object element in XAML, and all of the inherited properties and
            events that show a XAML usage in the reference for the GlobalCalendar members
            can have the same XAML usage for the derived class. However, the object
            element itself must have a different prefix mapping than the controls:
            mapping shown in the usages, because the derived class comes from an
            assembly and namespace that you create and define.  You must define your
            own prefix mapping to an XML namespace to use the class as an object
            element in XAML.
            </para>
            </remarks>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.RowsPerMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.ColumnsPerMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.RowsPerYear">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.ColumnsPerYear">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.ElementRoot">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.ElementMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.DefaultCalendarInfo">
            <summary>
            The default CalendarInfo used to provide globalized date operations.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.CalendarInfoProperty">
            <summary>
            Identifies the CalendarInfo dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnCalendarInfoPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CalendarInfoProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its CalendarInfo.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.CalendarButtonStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.CalendarButtonStyle" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.CalendarButtonStyle" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnCalendarButtonStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.EnsureCalendarButtonStyle(System.Windows.Controls.Primitives.GlobalCalendarButton,System.Windows.Style)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="calendarButton">Inherited code: Requires comment 1.</param>
            <param name="calendarButtonStyle">Inherited code: Requires comment 2.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.CalendarDayButtonStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.CalendarDayButtonStyle" />
            dependency property.
            </summary>
            <remarks>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.CalendarDayButtonStyle" />
            dependency property.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.CalendarDayButtonStyleSelectorProperty">
            <summary>
            Identifies the CalendarDayButtonStyleSelector dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnCalendarDayButtonStyleOrSelectorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ApplyDayButtonStyle(System.Windows.Controls.Primitives.GlobalCalendarDayButton)">
            <summary>
            Apply a Style to a GlobalCalendarDayButton.
            </summary>
            <param name="button">The button.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.CalendarItemStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.CalendarItemStyle" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.CalendarItemStyle" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnCalendarItemStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.EnsureMonthStyle(System.Windows.Controls.Primitives.GlobalCalendarItem,System.Windows.Style)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="month">Inherited code: Requires comment 1 .</param>
            <param name="monthStyle">Inherited code: Requires comment 2 .</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.IsTodayHighlightedProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.IsTodayHighlighted" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.IsTodayHighlighted" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnIsTodayHighlightedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsTodayHighlightedProperty property changed handler.
            </summary>
            <param name="d">
            GlobalCalendar that changed its IsTodayHighlighted.
            </param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.DisplayModeProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayMode" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayMode" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDisplayModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayModeProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its DisplayMode.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.IsValidDisplayMode(System.Windows.Controls.CalendarMode)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="mode">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="args">Inherited code: Requires comment 1.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.FirstDayOfWeekProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.FirstDayOfWeek" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.FirstDayOfWeek" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnFirstDayOfWeekChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            FirstDayOfWeekProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its FirstDayOfWeek.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.IsValidFirstDayOfWeek(System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="value">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.SelectionModeProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectionMode" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectionMode" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnSelectionModeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.IsValidSelectionMode(System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="value">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.SelectedDateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectedDate" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectedDate" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnSelectedDateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedDateProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its SelectedDate.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.IsSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnSelectedDatesCollectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar._selectedMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar._selectedYear">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.DisplayDateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDate" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDate" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDisplayDateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its DisplayDate.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDisplayDate(System.Windows.Controls.GlobalCalendarDateChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.DisplayDateStartProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateStart" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateStart" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDisplayDateStartChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateStartProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its DisplayDateStart.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.SelectedDateMin(System.Windows.Controls.GlobalCalendar)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="cal">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.DisplayDateEndProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateEnd" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateEnd" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDisplayDateEndChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateEndProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its DisplayDateEnd.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.SelectedDateMax(System.Windows.Controls.GlobalCalendar)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="cal">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar._isShiftPressed">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.GlobalCalendar" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.GlobalCalendar" /> when a new
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.Calendar_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ResetStates">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ToString">
            <summary>
            Provides a text representation of the selected date.
            </summary>
            <returns>
            A text representation of the selected date, or an empty string if
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectedDate" /> is
            null.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnCreateAutomationPeer">
            <summary>
            Returns a
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer" />
            for use by the Silverlight automation infrastructure.
            </summary>
            <returns>
            A
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer" />
            for the <see cref="T:System.Windows.Controls.GlobalCalendar" /> object.
            </returns>
            <remarks>
            <para>
            This method creates a new GlobalCalendarAutomationPeer instance if one has
            not been created for the control instance; otherwise, it returns the
            GlobalCalendarAutomationPeer previously created.
            </para>
            <para>
            Classes that participate in the Silverlight automation
            infrastructure must implement this method to return a class-specific
            derived class of AutomationPeer that reports information for
            automation behavior.
            </para>
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
             Called when the IsEnabled property changes.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Property changed args.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.FindDayButtonFromDay(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="day">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.UpdateMonths">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnSelectedMonthChanged(System.Nullable{System.DateTime})">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="selectedMonth">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnSelectedYearChanged(System.Nullable{System.DateTime})">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="selectedYear">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.IsValidDateSelection(System.Windows.Controls.GlobalCalendar,System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="cal">Inherited code: Requires comment 1.</param>
            <param name="value">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.IsValidKeyboardSelection(System.Windows.Controls.GlobalCalendar,System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="cal">Inherited code: Requires comment 1.</param>
            <param name="value">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.AddSelection">
            <summary>
            This method adds the days that were selected by Keyboard to the
            SelectedDays Collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessSelection(System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
            <param name="lastSelectedDate">Inherited code: Requires comment 2.</param>
            <param name="index">Inherited code: Requires comment 3.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.HighlightDays">
            <summary>
            This method highlights the days in MultiSelection mode without
            adding them to the SelectedDates collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.UnHighlightDays">
            <summary>
            This method un-highlights the days that were hovered over but not
            added to the SelectedDates collection or un-highlighted the
            previously selected days in SingleRange Mode.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.SortHoverIndexes(System.Int32@,System.Int32@)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="startIndex">Inherited code: Requires comment 1.</param>
            <param name="endIndex">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.Calendar_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnHeaderClick">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnNextClick">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnPreviousClick">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDayClick(System.DateTime)">
            <summary>
            If the day is a trailing day, Update the DisplayDate.
            </summary>
            <param name="selectedDate">Inherited code: Requires comment.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnMonthClick">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDayButtonMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.Calendar_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessCalendarKey(System.Windows.Input.KeyEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessUpKey(System.Boolean,System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">Inherited code: Requires comment 1.</param>
            <param name="shift">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessDownKey(System.Boolean,System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">Inherited code: Requires comment 1.</param>
            <param name="shift">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessLeftKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessRightKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessEnterKey">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessHomeKey(System.Boolean,System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">
            A value indicating whether the Control key is pressed.
            </param>
            <param name="shift">
            A value indicating whether the Shift key is pressed.
            </param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessEndKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessPageDownKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessPageUpKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.Calendar_KeyUp(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessShiftKeyUp">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.Calendar_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.Calendar_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment1 .</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.Root">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.CalendarInfo">
            <summary>
            Gets or sets the CalendarInfo that provides globalized date
            operations.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.Info">
            <summary>
            Gets the CalendarInfo that provides globalized date operations.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.MonthControl">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.FocusButton">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.FocusCalendarButton">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.CalendarButtonStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> associated
            with the control's internal
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarButton" />
            object.
            </summary>
            <value>
            The current style of the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarButton" />
            object.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.CalendarDayButtonStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> associated
            with the control's internal
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton" />
            object.
            </summary>
            <value>
            The current style of the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton" />
            object.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.CalendarDayButtonStyleSelector">
            <summary>
            Gets or sets a CalendarDayButtonStyleSelector that enables an application writer
            to provide custom style-selection logic for the day buttons.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.CalendarItemStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> associated
            with the control's internal
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarItem" />
            object.
            </summary>
            <value>
            The current style of the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarItem" />
            object.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.IsTodayHighlighted">
            <summary>
            Gets or sets a value indicating whether the current date is
            highlighted.
            </summary>
            <value>
            True if the current date is highlighted; otherwise, false. The
            default is true.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayMode">
            <summary>
            Gets or sets a value indicating whether the calendar is displayed in
            months, years, or decades.
            </summary>
            <value>
            A value indicating what length of time the
            <see cref="T:System.Windows.Controls.GlobalCalendar" /> should display.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.FirstDayOfWeek">
            <summary>
            Gets or sets the day that is considered the beginning of the week.
            </summary>
            <value>
            A <see cref="T:System.DayOfWeek" /> representing the beginning of
            the week. The default is <see cref="F:System.DayOfWeek.Sunday" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.FirstDay">
            <summary>
            Gets the day that is considered the beginning of the week.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.SelectionMode">
            <summary>
            Gets or sets a value that indicates what kind of selections are
            allowed.
            </summary>
            <value>
            A value that indicates the current selection mode. The default is
            <see cref="F:System.Windows.Controls.CalendarSelectionMode.SingleDate" />.
            </value>
            <remarks>
            <para>
            This property determines whether the GlobalCalendar allows no selection,
            selection of a single date, or selection of multiple dates.  The
            selection mode is specified with the CalendarSelectionMode
            enumeration.
            </para>
            <para>
            When this property is changed, all selected dates will be cleared.
            </para>
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.SelectedDate">
            <summary>
            Gets or sets the currently selected date.
            </summary>
            <value>The date currently selected. The default is null.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The given date is outside the range specified by
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateStart" />
            and <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateEnd" />
            -or-
            The given date is in the
            <see cref="P:System.Windows.Controls.GlobalCalendar.BlackoutDates" />
            collection.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If set to anything other than null when
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectionMode" /> is
            set to
            <see cref="F:System.Windows.Controls.CalendarSelectionMode.None" />.
            </exception>
            <remarks>
            Use this property when SelectionMode is set to SingleDate.  In other
            modes, this property will always be the first date in SelectedDates.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.SelectedDates">
            <summary>
            Gets a collection of selected dates.
            </summary>
            <value>
            A <see cref="T:System.Windows.Controls.GlobalSelectedDatesCollection" />
            object that contains the currently selected dates. The default is an
            empty collection.
            </value>
            <remarks>
            Dates can be added to the collection either individually or in a
            range using the AddRange method.  Depending on the value of the
            SelectionMode property, adding a date or range to the collection may
            cause it to be cleared.  The following table lists how
            CalendarSelectionMode affects the SelectedDates property.
            
                CalendarSelectionMode   Description
                None                    No selections are allowed.  SelectedDate
                                        cannot be set and no values can be added
                                        to SelectedDates.
                                        
                SingleDate              Only a single date can be selected,
                                        either by setting SelectedDate or the
                                        first value in SelectedDates.  AddRange
                                        cannot be used.
                                        
                SingleRange             A single range of dates can be selected.
                                        Setting SelectedDate, adding a date
                                        individually to SelectedDates, or using
                                        AddRange will clear all previous values
                                        from SelectedDates.
                MultipleRange           Multiple non-contiguous ranges of dates
                                        can be selected. Adding a date
                                        individually to SelectedDates or using
                                        AddRange will not clear SelectedDates.
                                        Setting SelectedDate will still clear
                                        SelectedDates, but additional dates or
                                        range can then be added.  Adding a range
                                        that includes some dates that are
                                        already selected or overlaps with
                                        another range results in the union of
                                        the ranges and does not cause an
                                        exception.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.RemovedItems">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.LastSelectedDateInternal">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.LastSelectedDate">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.SelectedMonth">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.SelectedYear">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.BlackoutDates">
            <summary>
            Gets a collection of dates that are marked as not selectable.
            </summary>
            <value>
            A collection of dates that cannot be selected. The default value is
            an empty collection.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Adding a date to this collection when it is already selected or
            adding a date outside the range specified by DisplayDateStart and
            DisplayDateEnd.
            </exception>
            <remarks>
            <para>
            Dates in this collection will appear as disabled on the calendar.
            </para>
            <para>
            To make all past dates not selectable, you can use the
            AddDatesInPast method provided by the collection returned by this
            property.
            </para>
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayDate">
            <summary>
            Gets or sets the date to display.
            </summary>
            <value>The date to display.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The given date is not in the range specified by
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateStart" />
            and
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateEnd" />.
            </exception>
            <remarks>
            <para>
            This property allows the developer to specify a date to display.  If
            this property is a null reference (Nothing in Visual Basic),
            SelectedDate is displayed.  If SelectedDate is also a null reference
            (Nothing in Visual Basic), Today is displayed.  The default is
            Today.
            </para>
            <para>
            To set this property in XAML, use a date specified in the format
            yyyy/mm/dd.  The mm and dd components must always consist of two
            characters, with a leading zero if necessary.  For instance, the
            month of May should be specified as 05.
            </para>
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayDateInternal">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayDateStart">
            <summary>
            Gets or sets the first date to be displayed.
            </summary>
            <value>The first date to display.</value>
            <remarks>
            To set this property in XAML, use a date specified in the format
            yyyy/mm/dd.  The mm and dd components must always consist of two
            characters, with a leading zero if necessary.  For instance, the
            month of May should be specified as 05.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayDateRangeStart">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayDateEnd">
            <summary>
            Gets or sets the last date to be displayed.
            </summary>
            <value>The last date to display.</value>
            <remarks>
            To set this property in XAML, use a date specified in the format
            yyyy/mm/dd.  The mm and dd components must always consist of two
            characters, with a leading zero if necessary.  For instance, the
            month of May should be specified as 05.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayDateRangeEnd">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.HoverStart">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.HoverStartIndex">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.HoverEndInternal">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.HoverEnd">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.HoverEndIndex">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.HasFocusInternal">
            <summary>
            Gets or sets a value indicating whether Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.IsMouseSelection">
            <summary>
            Gets or sets a value indicating whether Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DatePickerDisplayDateFlag">
            <summary>
            Gets or sets a value indicating whether DatePicker should change its 
            DisplayDate because of a SelectedDate change on its GlobalCalendar.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.GlobalCalendar.SelectedDatesChanged">
            <summary>
            Occurs when the collection returned by the
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectedDates" />
            property is changed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.GlobalCalendar.DisplayDateChanged">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDate" />
            property is changed.
            </summary>
            <remarks>
            This event occurs after DisplayDate is assigned its new value.
            </remarks>
        </member>
        <member name="E:System.Windows.Controls.GlobalCalendar.DisplayModeChanged">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayMode" />
            property is changed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.GlobalCalendar.DayButtonMouseUp">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer">
            <summary>
            Exposes <see cref="T:System.Windows.Controls.GlobalCalendar" /> types to UI automation.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.#ctor(System.Windows.Controls.GlobalCalendar)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.GlobalCalendar" /> instance to
            associate with the
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for this
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the GlobalCalendar that is associated with
            this GlobalCalendarAutomationPeer.  This method is called by
            GetAutomationControlType.
            </summary>
            <returns>A value of the AutomationControlType enumeration.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the UIElement that is associated with this
            FrameworkElementAutomationPeer.  This method is called by
            GetClassName.
            </summary>
            <returns>
            The name of the owner type that is associated with this
            GlobalCalendarAutomationPeer. 
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the GlobalCalendar that is associated with this
            GlobalCalendarAutomationPeer.  This method is called by GetName.
            </summary>
            <returns>
            The text label of the element that is associated with this
            automation peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
            <summary>
            Retrieves the UI automation provider for the specified cell.
            </summary>
            <param name="row">
            The ordinal number of the row.
            </param>
            <param name="column">
            The ordinal number of the column.
            </param>
            <returns>
            The UI automation provider for the specified cell.
            </returns>
            <remarks>
            <para>
            Grid coordinates are zero-based. The upper-left cell (or upper-right
            cell, depending on locale) has coordinates (0,0).
            </para>
            <para>
            If a cell is empty, a UI Automation provider must still be returned
            in order to support the ContainingGrid property for that cell.  This
            is possible when the layout of child elements in the grid is similar
            to a ragged array.
            </para>
            <para>
            Hidden rows and columns can be loaded in the tree, depending on the
            provider implementation.  Therefore, they will be reflected in the
            RowCount and ColumnCount properties.  If the hidden rows and columns
            have not yet been loaded, they should not be counted.
            </para>
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetSupportedViews">
            <summary>
            Retrieves a collection of control-specific view identifiers.
            </summary>
            <returns>
            A collection of values that identifies the views that are available
            for a UI automation element.
            </returns>
            <remarks>
            The collection of view identifiers must be identical across
            instances.  View identifier values can be passed to GetViewName.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetViewName(System.Int32)">
            <summary>
            Retrieves the name of a control-specific view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <returns>A localized name for the view.</returns>
            <remarks>
            View identifiers can be retrieved by using GetSupportedViews.  The
            collection of view identifiers must be identical across instances.
            View names must be suitable for use in text-to-speech, Braille, and
            other accessible applications.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#SetCurrentView(System.Int32)">
            <summary>
            Sets the current control-specific view.
            </summary>
            <param name="viewId">A view identifier.</param>
            <remarks>
            View identifiers can be retrieved by using GetSupportedViews.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
            <summary>
            Retrieves a UI automation provider for each child element that is
            selected.
            </summary>
            <returns>
            A collection of UI automation providers.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.RaiseSelectionEvents(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raise selection AutomationEvents when the GlobalCalendar's SelectedDates
            collection changes.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.RaiseDayButtonSelectionEvent(System.Windows.Controls.GlobalCalendar,System.DateTime,System.Windows.Automation.Peers.AutomationEvents)">
            <summary>
            Raise an automation peer event for the selection of a day button.
            </summary>
            <param name="calendar">
            The GlobalCalendar associated with this automation peer.
            </param>
            <param name="date">The selected date.</param>
            <param name="eventToRaise">The selection event to raise.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
            <summary>
            Gets a collection of UI automation providers that represents all the
            column headers in a table.
            </summary>
            <returns>A collection of UI automation providers.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
            <summary>
            Retrieves a collection of UI automation providers that represents
            all row headers in the table.
            </summary>
            <returns>A collection of UI automation providers.</returns>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.OwningCalendar">
            <summary>
            Gets the GlobalCalendar associated with the GlobalCalendarAutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.OwningGrid">
            <summary>
            Gets the current top-level Grid of with the GlobalCalendar.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
            <summary>
            Gets the total number of columns in a grid.
            </summary>
            <value>
            The total number of columns in a grid.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
            <summary>
            Gets the total number of rows in a grid.
            </summary>
            <value>
            The total number of rows in a grid.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#CurrentView">
            <summary>
            Gets the current control-specific view.
            </summary>
            <value>
            The value for the current view of the UI automation element.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
            <summary>
            Gets a value indicating whether the UI automation provider allows
            more than one child element to be selected at the same time.
            </summary>
            <value>
            True if multiple selection is allowed; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
            <summary>
            Gets a value indicating whether the UI automation provider
            requires at least one child element to be selected.
            </summary>
            <value>
            True if selection is required; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
            <summary>
            Gets the primary direction of traversal for the table.
            </summary>
            <value>
            The primary direction of traversal.
            </value>
        </member>
        <member name="T:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection">
            <summary>
            Represents a collection of non-selectable dates in a
            <see cref="T:System.Windows.Controls.GlobalCalendar" />.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection._owner">
            <summary>
            The GlobalCalendar whose dates this object represents.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection._dispatcherThread">
            <summary>
            The dispatcher thread.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.#ctor(System.Windows.Controls.GlobalCalendar)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.GlobalCalendar" /> whose dates
            this object represents.
            </param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.AddDatesInPast">
            <summary>
            Adds all dates before <see cref="P:System.DateTime.Today" /> to the
            collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.Contains(System.DateTime)">
            <summary>
            Returns a value that represents whether this collection contains the
            specified date.
            </summary>
            <param name="date">The date to search for.</param>
            <returns>
            True if the collection contains the specified date; otherwise,
            false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.Contains(System.DateTime,System.DateTime)">
            <summary>
            Returns a value that represents whether this collection contains the
            specified range of dates.
            </summary>
            <param name="start">The start of the date range.</param>
            <param name="end">The end of the date range.</param>
            <returns>
            True if all dates in the range are contained in the collection;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.ContainsAny(System.Windows.Controls.CalendarDateRange)">
            <summary>
            Returns a value that represents whether this collection contains any
            date in the specified range.
            </summary>
            <param name="range">The range of dates to search for.</param>
            <returns>
            True if any date in the range is contained in the collection;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.ClearItems">
            <summary>
            Removes all items from the collection.
            </summary>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.InsertItem(System.Int32,System.Windows.Controls.CalendarDateRange)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">
            The zero-based index at which item should be inserted.
            </param>
            <param name="item">The object to insert.</param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">
            The zero-based index of the element to remove.
            </param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.SetItem(System.Int32,System.Windows.Controls.CalendarDateRange)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the element to replace.
            </param>
            <param name="item">
            The new value for the element at the specified index.
            </param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.InRange(System.Windows.Controls.CalendarDateRange,System.DateTime)">
            <summary>
            Returns a value indicating whether a date is included in the range.
            </summary>
            <param name="range">The range to check.</param>
            <param name="day">The date to check.</param>
            <returns>
            A value indicating whether a date is included in the range.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.IsValid(System.Windows.Controls.CalendarDateRange)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="item">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.EnsureValidThread">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Primitives.GlobalCalendarButton">
            <summary>
            Represents a button on a
            <see cref="T:System.Windows.Controls.GlobalCalendar" />.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarButton._isCalendarButtonFocused">
            <summary>
            A value indicating whether the button is focused.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarButton._isInactive">
            <summary>
            A value indicating whether the button is inactive.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarButton._isSelected">
            <summary>
            A value indicating whether the button is selected.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarButton" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.OnLoad(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the Loaded event.
            </summary>
            <param name="sender">The GlobalCalendarButton.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarButton" />
            when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.OnCreateAutomationPeer">
            <summary>
            Returns a GlobalCalendarButtonAutomationPeer for use by the Silverlight
            automation infrastructure.
            </summary>
            <returns>
            GlobalCalendarButtonAutomationPeer for the Button object.
            </returns>
            <remarks>
            <para>
            This method creates a new GlobalCalendarButtonAutomationPeer instance if
            one has not been created for the GlobalCalendarButton; otherwise, it
            returns the GlobalCalendarButtonAutomationPeer previously created.
            </para>
            <para>
            Classes that participate in the Silverlight automation
            infrastructure must implement this method to return a class-specific
            derived class of AutomationPeer that reports information for
            automation behavior.
            </para>
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides class handling for the MouseLeftButtonDown event that
            occurs when the left mouse button is pressed while the mouse pointer
            is over this control.
            </summary>
            <param name="e">The event data. </param>
            <exception cref="T:System.ArgumentNullException">
            e is a null reference (Nothing in Visual Basic).
            </exception>
            <remarks>
            This method marks the MouseLeftButtonDown event as handled by
            setting the MouseButtonEventArgs.Handled property of the event data
            to true when the button is enabled and its ClickMode is not set to
            Hover.  Since this method marks the MouseLeftButtonDown event as
            handled in some situations, you should use the Click event instead
            to detect a button click.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonUp event that occurs when
            the left mouse button is released while the mouse pointer is over
            this control. 
            </summary>
            <param name="e">The event data.</param>
            <exception cref="T:System.ArgumentNullException">
            e is a null reference (Nothing in Visual Basic).
            </exception>
            <remarks>
            This method marks the MouseLeftButtonUp event as handled by setting
            the MouseButtonEventArgs.Handled property of the event data to true
            when the button is enabled and its ClickMode is not set to Hover.
            Since this method marks the MouseLeftButtonUp event as handled in
            some situations, you should use the Click event instead to detect a
            button click.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.SendMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            We need to simulate the MouseLeftButtonUp event for the
            GlobalCalendarButton that stays in Pressed state after MouseCapture is
            released since there is no actual MouseLeftButtonUp event for the
            release.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarButton.Owner">
            <summary>
            Gets or sets the GlobalCalendar associated with this button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarButton.IsCalendarButtonFocused">
            <summary>
            Gets or sets a value indicating whether the button is focused.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarButton.IsInactive">
            <summary>
            Gets or sets a value indicating whether the button is inactive.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarButton.IsSelected">
            <summary>
            Gets or sets a value indicating whether the button is selected.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Primitives.GlobalCalendarButton.CalendarButtonMouseDown">
            <summary>
            Occurs when the left mouse button is pressed (or when the tip of the
            stylus touches the tablet PC) while the mouse pointer is over a
            UIElement.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Primitives.GlobalCalendarButton.CalendarButtonMouseUp">
            <summary>
            Occurs when the left mouse button is released (or the tip of the
            stylus is removed from the tablet PC) while the mouse (or the
            stylus) is over a UIElement (or while a UIElement holds mouse
            capture).
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer">
            <summary>
            Exposes
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarButton" /> types
            to UI automation.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.GlobalCalendarButton)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarButton" />
            to associate with this
            <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for this
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the GlobalCalendarButton that is associated
            with this GlobalCalendarButtonAutomationPeer.  This method is called by
            GetAutomationControlType.
            </summary>
            <returns>A value of the AutomationControlType enumeration.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            Returns the localized version of the control type for the owner type
            that is associated with this GlobalCalendarButtonAutomationPeer.
            </summary>
            <returns>The string that contains the type of control.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.GetHelpTextCore">
            <summary>
            Returns the string that describes the functionality of the
            GlobalCalendarButton that is associated with this
            GlobalCalendarButtonAutomationPeer.  This method is called by GetHelpText.
            </summary>
            <returns>
            The help text, or String.Empty if there is no help text.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the GlobalCalendarButton that is associated with this
            GlobalCalendarButtonAutomationPeer.  This method is called by
            GetClassName.
            </summary>
            <returns>
            The name of the owner type that is associated with this
            GlobalCalendarButtonAutomationPeer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the GlobalCalendarButton that is associated with
            this GlobalCalendarButtonAutomationPeer. This method is called by GetName.
            </summary>
            <returns>
            The text label of the element that is associated with this
            automation peer.
            </returns>
            <remarks>
            The name property can be thought of as the string of text that a
            user would use to explain which control is being referred to.  It is
            important to have a textual representation for all controls in the
            graphical user interface (GUI) so that you can programmatically
            refer to the control in a localized manner.  The value is settable
            on control instances through the AutomationProperties.Name attached
            property.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
            <summary>
            Sends a request to activate the control and initiate its single,
            unambiguous action.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds the current element to the collection of selected items.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes the current element from the collection of selected items.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Clears any existing selection and then selects the current element.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.OwningCalendarButton">
            <summary>
            Gets the GlobalCalendarButton to associate with this AutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.OwningCalendar">
            <summary>
            Gets the GlobalCalendar associated with the button.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.OwningCalendarAutomationPeer">
            <summary>
            Gets the automation peer for the GlobalCalendar associated with the
            button.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
            <summary>
            Gets the ordinal number of the column that contains the cell or
            item.
            </summary>
            <value>
            A zero-based ordinal number that identifies the column that contains
            the cell or item.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
            <summary>
            Gets the number of columns that are spanned by a cell or item.
            </summary>
            <value>
            The number of columns spanned.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
            <summary>
            Gets a UI Automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.IGridProvider" />
            and that represents the container of the cell or item.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
            <summary>
            Gets the ordinal number of the row that contains the cell or item.
            </summary>
            <value>
            A zero-based ordinal number that identifies the row that contains
            the cell or item.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
            <summary>
            Gets the number of rows that are spanned by a cell or item.
            </summary>
            <value>
            The number of rows that are spanned.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
            <summary>
            Gets a value indicating whether an item is selected.
            </summary>
            <value>
            True if the element is selected; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Gets the UI Automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />
            and that acts as the container for the calling object.
            </summary>
            <value>
            The provider that supports
            <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />.
            </value>
        </member>
        <member name="T:System.Windows.Controls.GlobalCalendarDateChangedEventArgs">
            <summary>
            Provides data for the
            <see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" />
            event.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarDateChangedEventArgs.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the GlobalCalendarDateChangedEventArgs
            class.
            </summary>
            <param name="removedDate">
            The date that was previously displayed.
            </param>
            <param name="addedDate">The date to be newly displayed.</param>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendarDateChangedEventArgs.RemovedDate">
            <summary>
            Gets the date that was previously displayed.
            </summary>
            <value>
            The date previously displayed.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendarDateChangedEventArgs.AddedDate">
            <summary>
            Gets the date to be newly displayed.
            </summary>
            <value>The new date to display.</value>
        </member>
        <member name="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton">
            <summary>
            Represents a day on a <see cref="T:System.Windows.Controls.GlobalCalendar" />.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.StateToday">
            <summary>
            Identifies the Today state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.StateRegularDay">
            <summary>
            Identifies the RegularDay state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.GroupDay">
            <summary>
            Name of the Day state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.StateBlackoutDay">
            <summary>
            Identifies the BlackoutDay state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.StateNormalDay">
            <summary>
            Identifies the NormalDay state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.GroupBlackout">
            <summary>
            Name of the BlackoutDay state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.DefaultContent">
            <summary>
            Default content for the GlobalCalendarDayButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton._ignoringMouseOverState">
            <summary>
            A value indicating whether the button should ignore the MouseOver
            visual state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton._isBlackout">
            <summary>
            A value indicating whether this is a blackout date.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton._isToday">
            <summary>
            A value indicating whether this button represents today.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton._isCurrent">
            <summary>
            A value indicating whether the button is the focused element on the
            GlobalCalendar control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton._isInactive">
            <summary>
            A value indicating whether the button is inactive.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton._isSelected">
            <summary>
            A value indicating whether the button is selected.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.OnLoad(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the Loaded event.
            </summary>
            <param name="sender">The GlobalCalendarButton.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton" />
            when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.OnCreateAutomationPeer">
            <summary>
            Returns a CalendarDayButtonAutomationPeer for use by the Silverlight
            automation infrastructure.
            </summary>
            <returns>
            CalendarDayButtonAutomationPeer for the Button object.
            </returns>
            <remarks>
            <para>
            This method creates a new CalendarDayButtonAutomationPeer instance
            if one has not been created for the GlobalCalendarButton; otherwise, it
            returns the CalendarDayButtonAutomationPeer previously created.
            </para>
            <para>
            Classes that participate in the Silverlight automation
            infrastructure must implement this method to return a class-specific
            derived class of AutomationPeer that reports information for
            automation behavior.
            </para>
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides class handling for the MouseLeftButtonDown event that
            occurs when the left mouse button is pressed while the mouse pointer
            is over this control.
            </summary>
            <param name="e">The event data. </param>
            <exception cref="T:System.ArgumentNullException">
            e is a null reference (Nothing in Visual Basic).
            </exception>
            <remarks>
            This method marks the MouseLeftButtonDown event as handled by
            setting the MouseButtonEventArgs.Handled property of the event data
            to true when the button is enabled and its ClickMode is not set to
            Hover.  Since this method marks the MouseLeftButtonDown event as
            handled in some situations, you should use the Click event instead
            to detect a button click.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonUp event that occurs when
            the left mouse button is released while the mouse pointer is over
            this control. 
            </summary>
            <param name="e">The event data.</param>
            <exception cref="T:System.ArgumentNullException">
            e is a null reference (Nothing in Visual Basic).
            </exception>
            <remarks>
            This method marks the MouseLeftButtonUp event as handled by setting
            the MouseButtonEventArgs.Handled property of the event data to true
            when the button is enabled and its ClickMode is not set to Hover.
            Since this method marks the MouseLeftButtonUp event as handled in
            some situations, you should use the Click event instead to detect a
            button click.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.SendMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            We need to simulate the MouseLeftButtonUp event for the
            GlobalCalendarDayButton that stays in Pressed state after MouseCapture is
            released since there is no actual MouseLeftButtonUp event for the
            release.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.IgnoreMouseOverState">
            <summary>
            Ensure the button is not in the MouseOver state.
            </summary>
            <remarks>
            If a button is in the MouseOver state when a Popup is closed (as is
            the case when you select a date in the DatePicker control), it will
            continue to think it's in the mouse over state even when the Popup
            opens again and it's not.  This method is used to forcibly clear the
            state by changing the CommonStates state group.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.Owner">
            <summary>
            Gets or sets the GlobalCalendar associated with this button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.Index">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.IsBlackout">
            <summary>
            Gets or sets a value indicating whether this is a blackout date.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.IsToday">
            <summary>
            Gets or sets a value indicating whether this button represents
            today.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.IsCurrent">
            <summary>
            Gets or sets a value indicating whether the button is the focused
            element on the GlobalCalendar control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.IsInactive">
            <summary>
            Gets or sets a value indicating whether the button is inactive.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.IsSelected">
            <summary>
            Gets or sets a value indicating whether the button is selected.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Primitives.GlobalCalendarDayButton.CalendarDayButtonMouseDown">
            <summary>
            Occurs when the left mouse button is pressed (or when the tip of the
            stylus touches the tablet PC) while the mouse pointer is over a
            UIElement.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Primitives.GlobalCalendarDayButton.CalendarDayButtonMouseUp">
            <summary>
            Occurs when the left mouse button is released (or the tip of the
            stylus is removed from the tablet PC) while the mouse (or the
            stylus) is over a UIElement (or while a UIElement holds mouse
            capture).
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer">
            <summary>
            Exposes
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton" />
            types to UI Automation.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.GlobalCalendarDayButton)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton" />
            instance that is associated with this
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern implementation for this
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the GlobalCalendarDayButton that is
            associated with this GlobalCalendarDayButtonAutomationPeer.  This method
            is called by GetAutomationControlType.
            </summary>
            <returns>A value of the AutomationControlType enumeration.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            Returns the localized version of the control type for the owner type
            that is associated with this GlobalCalendarDayButtonAutomationPeer.
            </summary>
            <returns>The string that contains the type of control.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.GetHelpTextCore">
            <summary>
            Returns the string that describes the functionality of the
            GlobalCalendarDayButton that is associated with this
            GlobalCalendarDayButtonAutomationPeer.  This method is called by
            GetHelpText.
            </summary>
            <returns>
            The help text, or String.Empty if there is no help text.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the GlobalCalendarDayButton that is associated with
            this GlobalCalendarDayButtonAutomationPeer.  This method is called by
            GetClassName.
            </summary>
            <returns>
            The name of the owner type that is associated with this
            GlobalCalendarDayButtonAutomationPeer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the GlobalCalendarDayButton that is associated
            with this GlobalCalendarDayButtonAutomationPeer. This method is called by
            GetName.
            </summary>
            <returns>
            The text label of the element that is associated with this
            automation peer.
            </returns>
            <remarks>
            The name property can be thought of as the string of text that a
            user would use to explain which control is being referred to.  It is
            important to have a textual representation for all controls in the
            graphical user interface (GUI) so that you can programmatically
            refer to the control in a localized manner.  The value is settable
            on control instances through the AutomationProperties.Name attached
            property.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
            <summary>
            Sends a request to activate the control and to initiate its single,
            unambiguous action.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds the current element to the collection of selected items.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes the current element from the collection of selected items.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Clear any existing selection and then selects the current element.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.EnsureSelection">
            <summary>
            Ensure selection of the GlobalCalendarDayButton is possible.
            </summary>
            <returns>
            A value indicating whether selection of the GlobalCalendarDayButton is
            possible.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
            <summary>
            Retrieves a collection of UI Automation providers that represent all
            the column headers that are associated with a table item or cell.
            </summary>
            <returns>A collection of UI Automation providers.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
            <summary>
            Retrieves a collection of UI Automation providers that represent all
            the row headers that are associated with a table item or cell.
            </summary>
            <returns>A collection of UI Automation providers.</returns>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.OwningCalendarDayButton">
            <summary>
            Gets the GlobalCalendarDayButton instance that is associated with this
            GlobalCalendarDayButtonAutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.OwningCalendar">
            <summary>
            Gets the GlobalCalendar associated with the button.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.OwningCalendarAutomationPeer">
            <summary>
            Gets the automation peer for the GlobalCalendar associated with the
            button.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
            <summary>
            Gets the ordinal number of the column that contains the cell or
            item.
            </summary>
            <value>
            A zero-based ordinal number that identifies the column that contains
            the cell or item.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
            <summary>
            Gets the number of columns that are spanned by a cell or item.
            </summary>
            <value>
            The number of columns.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
            <summary>
            Gets a UI Automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.IGridProvider" />
            and that represents the container of the cell or item.
            </summary>
            <value>
            The UI Automation provider.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
            <summary>
            Gets the ordinal number of the row that contains the cell or item.
            </summary>
            <value>
            A zero-based ordinal number that identifies the row that contains
            the cell or item.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
            <summary>
            Gets the number of rows that are spanned by a cell or item.
            </summary>
            <value>The number of rows.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
            <summary>
            Gets a value indicating whether an item is selected.
            </summary>
            <value>True if the element is selected; otherwise, false.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Gets the UI Automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />
            and that acts as the container for the calling object.
            </summary>
            <value>The UI Automation provider.</value>
        </member>
        <member name="T:System.Windows.Controls.Primitives.GlobalCalendarItem">
            <summary>
            Represents the currently displayed month or year on a
            <see cref="T:System.Windows.Controls.GlobalCalendar" />.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementRoot">
            <summary>
            The name of the Root template part.
            </summary>
            <remarks>
            TODO: It appears this template part is no longer used.  Verify with
            compat whether we can remove the attribute.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementHeaderButton">
            <summary>
            The name of the HeaderButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementPreviousButton">
            <summary>
            The name of the PreviousButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementNextButton">
            <summary>
            The name of the NextButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementDayTitleTemplate">
            <summary>
            The name of the DayTitleTemplate template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementMonthView">
            <summary>
            The name of the MonthView template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementYearView">
            <summary>
            The name of the YearView template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementDisabledVisual">
            <summary>
            The name of the DisabledVisual template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._headerButton">
            <summary>
            The button that allows switching between month mode, year mode, and
            decade mode. 
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._nextButton">
            <summary>
            The button that displays the next page of the calendar when it is
            clicked.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._previousButton">
            <summary>
            The button that displays the previous page of the calendar when it
            is clicked.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._dayTitleTemplate">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._monthView">
            <summary>
            Hosts the content when in month mode.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._yearView">
            <summary>
            Hosts the content when in year or decade mode.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._disabledVisual">
            <summary>
            The overlay for the disabled state.
            </summary>
            <remarks>
            The disabled visual isn't necessary given that we also have a
            Disabled visual state.  It's only being left in for compatability
            with existing templates.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._lastCalendarButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._lastCalendarDayButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._downEventArg">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._downEventArgYearView">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._isMouseLeftButtonDown">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._isMouseLeftButtonDownYearView">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._isTopLeftMostMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._isTopRightMostMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._currentMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarItem" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarItem" />
            when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.PopulateGrids">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.UpdateDisabledGrid(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="isEnabled">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.UpdateMonthMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetDayTitles">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.PreviousMonthDays(System.DateTime)">
            <summary>
            How many days of the previous month need to be displayed.
            </summary>
            <param name="firstOfMonth">Inherited code: Requires comment.</param>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetButtonState(System.Windows.Controls.Primitives.GlobalCalendarDayButton,System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="childButton">Inherited code: Requires comment 1.</param>
            <param name="dateToAdd">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetCalendarDayButtons(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="firstDayOfMonth">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetMonthButtonsForYearMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetMonthModeHeaderButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetMonthModeNextButton(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="firstDayOfMonth">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetMonthModePreviousButton(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="firstDayOfMonth">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.UpdateYearMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetYearButtons(System.Int32,System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="decade">Inherited code: Requires comment 1.</param>
            <param name="decadeEnd">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetYearModeHeaderButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetYearModePreviousButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetYearModeNextButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.UpdateYearViewSelection(System.Windows.Controls.Primitives.GlobalCalendarButton)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="calendarButton">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.UpdateDecadeMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetDecadeModeHeaderButton(System.Int32,System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="decade">Inherited code: Requires comment 1.</param>
            <param name="decadeEnd">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetDecadeModeNextButton(System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="decadeEnd">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetDecadeModePreviousButton(System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="decade">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Cell_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Cell_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Cell_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.AddSelection(System.Windows.Controls.Primitives.GlobalCalendarDayButton)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="b">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Cell_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Cell_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.HeaderButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.PreviousButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.NextButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Month_CalendarButtonMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Month_CalendarButtonMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Month_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Month_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.MonthView_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.YearView_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.HeaderButton">
            <summary>
            Gets the button that allows switching between month mode, year mode,
            and decade mode. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.NextButton">
            <summary>
            Gets the button that displays the next page of the calendar when it
            is clicked.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.PreviousButton">
            <summary>
            Gets the button that displays the previous page of the calendar when
            it is clicked.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.MonthView">
            <summary>
            Gets the Grid that hosts the content when in month mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.YearView">
            <summary>
            Gets the Grid that hosts the content when in year or decade mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.Owner">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.Info">
            <summary>
            Gets the CalendarInfo that provides globalized date operations.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.CurrentButton">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.GlobalSelectedDatesCollection">
            <summary>
            Represents a set of selected dates in a
            <see cref="T:System.Windows.Controls.GlobalCalendar" />.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.GlobalSelectedDatesCollection._addedItems">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalSelectedDatesCollection._dispatcherThread">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalSelectedDatesCollection._isCleared">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalSelectedDatesCollection._isRangeAdded">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalSelectedDatesCollection._owner">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.#ctor(System.Windows.Controls.GlobalCalendar)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.GlobalSelectedDatesCollection" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.GlobalCalendar" />
            associated with this object.
            </param>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.AddRange(System.DateTime,System.DateTime)">
            <summary>
            Adds all the dates in the specified range, which includes the first
            and last dates, to the collection.
            </summary>
            <param name="start">The first date to add to the collection.</param>
            <param name="end">The last date to add to the collection.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.ClearItems">
            <summary>
            Removes all items from the collection.
            </summary>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.InsertItem(System.Int32,System.DateTime)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">
            The zero-based index at which item should be inserted.
            </param>
            <param name="item">The object to insert.</param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">
            The zero-based index of the element to remove.
            </param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.SetItem(System.Int32,System.DateTime)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the element to replace.
            </param>
            <param name="item">
            The new value for the element at the specified index.
            </param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.ClearInternal">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.CheckSelectionMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.IsValidThread">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="T:System.Windows.Controls.TreeViewItemConnectingLineInfo">
            <summary>
            Represents the necessary information to draw connecting lines in a
            TreeViewItem.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemConnectingLineInfo.#ctor(System.Windows.Controls.TreeViewItem)">
            <summary>
            Initializes a new instance of the TreeViewItemConnectingLineInfo
            class.
            </summary>
            <param name="item">The TreeViewItem.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemConnectingLineInfo.PositionConnectingLines">
            <summary>
            Position the connecting lines in the TreeViewItem.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemConnectingLineInfo.PositionVerticalConnectingLine">
            <summary>
            Position the vertical connecting line in the TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItemConnectingLineInfo.Item">
            <summary>
            Gets the TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItemConnectingLineInfo.VerticalConnectingLine">
            <summary>
            Gets or sets the vertical connecting line of the TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItemConnectingLineInfo.HorizontalConnectingLine">
            <summary>
            Gets or sets the horizontal connecting line of the TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItemConnectingLineInfo.ExpanderButton">
            <summary>
            Gets or sets the expander button of the TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItemConnectingLineInfo.Header">
            <summary>
            Gets or sets the header of the TreeViewItem.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.TreeViewConnectingLines">
            <summary>
            Provides the necessary infrastructure to enable drawing connecting
            lines between the TreeViewItems in a TreeView.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.GetConnectingLineInfo(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets the value of the ConnectingLineInfo attached property for a
            specified TreeViewItem.
            </summary>
            <param name="element">
            The TreeViewItem from which the property value is read.
            </param>
            <returns>
            The ConnectingLineInfo property value for the TreeViewItem.
            </returns>
        </member>
        <member name="F:System.Windows.Controls.TreeViewConnectingLines.ConnectingLineInfoProperty">
            <summary>
            Identifies the ConnectingLineInfo dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.GetIsVerticalConnectingLineOf(System.Windows.Shapes.Line)">
            <summary>
            Gets the value of the IsVerticalConnectingLineOf attached property
            for a specified Line.
            </summary>
            <param name="element">The Line from which the property value is read.</param>
            <returns>The IsVerticalConnectingLineOf property value for the Line.</returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.SetIsVerticalConnectingLineOf(System.Windows.Shapes.Line,System.Windows.Controls.TreeViewItem)">
            <summary>
            Sets the value of the IsVerticalConnectingLineOf attached property to a specified Line.
            </summary>
            <param name="element">The Line to which the attached property is written.</param>
            <param name="value">The needed IsVerticalConnectingLineOf value.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewConnectingLines.IsVerticalConnectingLineOfProperty">
            <summary>
            Identifies the IsVerticalConnectingLineOf dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.OnIsVerticalConnectingLineOfPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsVerticalConnectingLineOfProperty property changed handler.
            </summary>
            <param name="d">
            Line that changed its IsVerticalConnectingLineOf TreeViewItem.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.GetIsHorizontalConnectingLineOf(System.Windows.Shapes.Line)">
            <summary>
            Gets the value of the IsHorizontalConnectingLineOf attached property
            for a specified Line.
            </summary>
            <param name="element">
            The Line from which the property value is read.
            </param>
            <returns>
            The IsHorizontalConnectingLineOf property value for the Line.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.SetIsHorizontalConnectingLineOf(System.Windows.Shapes.Line,System.Windows.Controls.TreeViewItem)">
            <summary>
            Sets the value of the IsHorizontalConnectingLineOf attached property
            to a specified Line.
            </summary>
            <param name="element">
            The Line to which the attached property is written.
            </param>
            <param name="value">
            The needed IsHorizontalConnectingLineOf value.
            </param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewConnectingLines.IsHorizontalConnectingLineOfProperty">
            <summary>
            Identifies the IsHorizontalConnectingLineOf dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.OnIsHorizontalConnectingLineOfPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsHorizontalConnectingLineOfProperty property changed handler.
            </summary>
            <param name="d">
            Line that changed its IsHorizontalConnectingLineOf TreeViewItem.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.GetIsExpanderButtonOf(System.Windows.Controls.Primitives.ToggleButton)">
            <summary>
            Gets the value of the IsExpanderButtonOf attached property for a
            specified ToggleButton.
            </summary>
            <param name="element">
            The ToggleButton from which the property value is read.
            </param>
            <returns>
            The IsExpanderButtonOf property value for the ToggleButton.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.SetIsExpanderButtonOf(System.Windows.Controls.Primitives.ToggleButton,System.Windows.Controls.TreeViewItem)">
            <summary>
            Sets the value of the IsExpanderButtonOf attached property to a
            specified ToggleButton.
            </summary>
            <param name="element">
            The ToggleButton to which the attached property is written.
            </param>
            <param name="value">The needed IsExpanderButtonOf value.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewConnectingLines.IsExpanderButtonOfProperty">
            <summary>
            Identifies the IsExpanderButtonOf dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.OnIsExpanderButtonOfPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsExpanderButtonOfProperty property changed handler.
            </summary>
            <param name="d">
            ToggleButton that changed its IsExpanderButtonOf TreeViewItem.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.GetIsHeaderOf(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the IsHeaderOf attached property for a specified
            FrameworkElement.
            </summary>
            <param name="element">
            The FrameworkElement from which the property value is read.
            </param>
            <returns>
            The IsHeaderOf property value for the FrameworkElement.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.SetIsHeaderOf(System.Windows.FrameworkElement,System.Windows.Controls.TreeViewItem)">
            <summary>
            Sets the value of the IsHeaderOf attached property to a specified
            FrameworkElement.
            </summary>
            <param name="element">
            The FrameworkElement to which the attached property is written.
            </param>
            <param name="value">The needed IsHeaderOf value.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewConnectingLines.IsHeaderOfProperty">
            <summary>
            Identifies the IsHeaderOf dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.OnIsHeaderOfPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsHeaderOfProperty property changed handler.
            </summary>
            <param name="d">
            FrameworkElement that changed its IsHeaderOf TreeViewItem.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:System.Windows.Controls.TreeViewItemCheckBox">
            <summary>
            Represents a CheckBox whose value is associated with the
            TreeViewExtensions.IsChecked attached property of TreeViewItems.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.TreeViewItemCheckBox._parent">
            <summary>
            The parent TreeViewItem of the CheckBox.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemCheckBox.#ctor">
            <summary>
            Initializes a new instance of the TreeViewItemCheckBox class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemCheckBox.AssociateParentTreeViewItem">
            <summary>
            Associate the parent TreeViewItem with the CheckBox.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemCheckBox.OnIsCheckedChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Update the TreeViewItem's IsChecked property when this IsChecked
            property is changed.
            </summary>
            <param name="sender">The CheckBox.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItemCheckBox.ParentTreeViewItem">
            <summary>
            Gets the parent TreeViewItem of the CheckBox.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.TreeViewExtensions">
            <summary>
            Provides useful extensions to TreeView and TreeViewItem instances.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetParentItemsControl(System.Windows.DependencyObject)">
            <summary>
            Get the parent ItemsControl of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The parent ItemsControl of an element, or null if not found.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetAncestorItemsControls(System.Windows.DependencyObject)">
            <summary>
            Get the ancestor ItemsControls of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The ancestor ItemsControls of an element.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetParentTreeViewItem(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the parent TreeViewItem of a TreeViewItem.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The parent TreeViewItem if found, otherwise null.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetParentTreeView(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the parent TreeView of a TreeViewItem.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>The parent TreeView if found, otherwise null.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetContainers(System.Windows.Controls.TreeView)">
            <summary>
            Get the TreeViewItem containers of a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>The TreeViewItem containers of a TreeView.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetContainers(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the child TreeViewItem containers of a TreeViewItem.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The child TreeViewItem containers of a TreeViewItem.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetItemsAndContainers(System.Windows.Controls.TreeView)">
            <summary>
            Get the items and TreeViewItem containers of a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>
            The items and TreeViewItem containers of a TreeView.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetItemsAndContainers(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the items and TreeViewItem containers of a TreeViewItem.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The items and TreeViewItem containers of a TreeViewItem.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetDescendantContainers(System.Windows.Controls.TreeView)">
            <summary>
            Get the TreeViewItem containers of a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>The TreeViewItem containers of a TreeView.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetDescendantContainers(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the descendant TreeViewItem containers of a TreeViewItem.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The descendant TreeViewItem containers of a TreeViewItem.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetDescendantItemsAndContainers(System.Windows.Controls.TreeView)">
            <summary>
            Get the descendant items and TreeViewItem containers of a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>
            The descendant items and TreeViewItem containers of a TreeView.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetDescendantItemsAndContainers(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the descendant items and TreeViewItem containers of a
            TreeViewItem.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The descendant items and TreeViewItem containers of a TreeViewItem.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetDescendantItemsAndContainersIterator(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the items and TreeViewItem containers of a TreeView or
            TreeViewItem.
            </summary>
            <param name="control">The TreeView or TreeViewItem.</param>
            <returns>
            The items and TreeViewItem containers of a TreeView or TreeViewItem.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetSiblingItemsAndContainers(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the sibling items and containers of the item.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>The sibling items and containers of the item.</returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetContainersFromItem(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Get the TreeViewItems already created that are used to represent the
            given item.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="item">The item being represented.</param>
            <returns>
            A sequence of TreeViewItems that represent the given item, or an
            empty sequence if none were found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetContainerFromItem(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Get the TreeViewItem already created that is used to represent the
            given item.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="item">The item being represented.</param>
            <returns>
            The TreeViewItems that represents the given item, or null if no
            container was found.
            </returns>
            <remarks>
            If multiple TreeViewItems represent the same item, the first item
            found via a breadth-first search will be used.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetPath(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets a path of items and TreeViewItem containers from the
            TreeViewItem to the root of the TreeView.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            A path of items and TreeViewItem containers from the TreeViewItem to
            the root of the TreeView.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetPathIterator(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets a path of items and TreeViewItem containers from the
            TreeViewItem to the root of the TreeView.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            A path of items and TreeViewItem containers from the TreeViewItem to
            the root of the TreeView.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetItem(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the item wrapped by this container.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The item wrapped by the container, or null if not found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetParentItem(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Get the item of the parent container for a specified
            <paramref name="item" />.
            </summary>
            <param name="view">
            The TreeView containing the <paramref name="item" />.
            </param>
            <param name="item">The child item.</param>
            <returns>
            The item of the parent container for the specified
            <paramref name="item" />, or null if not found.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetIsRoot(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets a value indicating whether the TreeViewItem is a root of its
            TreeView.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            A value indicating whether the TreeViewItem is a root of its
            TreeView.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetIsLeaf(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets a value indicating whether the TreeViewItem is a leaf in its
            TreeView.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            A value indicating whether the TreeViewItem is a leaf in its
            TreeView.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetDepth(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets the depth of a TreeViewItem in its TreeView (using a zero-based
            index).
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The depth of a TreeViewItem in its TreeView (using a zero-based
            index).
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="item" /> is not in a TreeView.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetSelectedContainer(System.Windows.Controls.TreeView)">
            <summary>
            Get the selected TreeViewItem in a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>
            The selected TreeViewItem, or null if no selected item found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.SetSelectedContainer(System.Windows.Controls.TreeView,System.Windows.Controls.TreeViewItem)">
            <summary>
            Sets the selected TreeViewItem of a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="item">The TreeViewItem to select.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ClearSelection(System.Windows.Controls.TreeView)">
            <summary>
            Clear the selection of the TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.SelectItem(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Select an item in the TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="item">The item to select.</param>
            <returns>
            A value indicating whether the item was successfully set as the
            TreeView's SelectedItem.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetSelectedPath(System.Windows.Controls.TreeView)">
            <summary>
            Gets the path to the TreeView's selected item.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>The path to the TreeView's selected item.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandOrCollapseAll(System.Windows.Controls.TreeViewItem,System.Boolean,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Recursively expand or collapse the TreeViewItem and all of its
            descendants.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <param name="expand">
            A value indicating whether to expand or collapse.
            </param>
            <param name="depth">
            The number of levels that have already been collapsed or expanded.
            This is used in conjunction with the optional maximumDepth to only
            expand a specified number of layers.
            </param>
            <param name="maximumDepth">
            An optional depth that defines the number of layers to expand or
            collapse.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandOrCollapseAll(System.Windows.Controls.TreeView,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Expand or collapse all of the descendants of the TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="expand">
            A value indicating whether to expand or collapse.
            </param>
            <param name="maximumDepth">
            An optional depth that defines the number of layers to expand or
            collapse.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandAll(System.Windows.Controls.TreeView)">
            <summary>
            Expand all of the items in a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.CollapseAll(System.Windows.Controls.TreeView)">
            <summary>
            Collapse all of the items in a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandToDepth(System.Windows.Controls.TreeView,System.Int32)">
            <summary>
            Expand a specified number of layers in a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="depth">The number of layers to expand.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandPathToRoot(System.Windows.Controls.TreeViewItem,System.Boolean)">
            <summary>
            Expand a path from the given item to the root of it's TreeView.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <param name="collapseSiblings">
            A value indicating whether to collapse siblings while expanding the
            path.  This will result in only the path from the item to the root
            being expanded.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandPath(System.Windows.Controls.TreeViewItem)">
            <summary>
            Expand a path from the TreeViewItem to the root of the TreeView.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandSelectedPath(System.Windows.Controls.TreeView)">
            <summary>
            Expand the path from the SelectedItem to the root of the TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.CollapseAllButSelectedPath(System.Windows.Controls.TreeView)">
            <summary>
            Collapse all TreeViewItems except those along the path from the
            TreeView's SelectedItem to the root of the TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandPath(System.Windows.Controls.TreeView,System.Object[])">
            <summary>
            Expand the given path of items starting from the TreeView's root.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="items">
            The sequence of items corresponding to the path to expand.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="items" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandPath``1(System.Windows.Controls.TreeView,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Expand the given path of items starting from the TreeView's root.
            </summary>
            <typeparam name="T">
            The type of items provided in <paramref name="items" />.
            </typeparam>
            <param name="view">The TreeView.</param>
            <param name="items">
            The sequence of items corresponding to the path to expand.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="items" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandPath``1(System.Windows.Controls.TreeView,System.Func{System.Object,``0},``0[])">
            <summary>
            Expand the given path of items starting from the TreeView's root.
            </summary>
            <typeparam name="T">
            The type of items provided in <paramref name="items" />.
            </typeparam>
            <param name="view">The TreeView.</param>
            <param name="comparisonSelector">
            A function that takes a TreeViewItem's item and returns a value to
            compare against elements of the given <paramref name="items" />.
            The item itself will be used if 
            <paramref name="comparisonSelector" /> is null.
            </param>
            <param name="items">
            The sequence of items corresponding to the path to expand.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="items" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandPath``1(System.Windows.Controls.TreeView,System.Func{System.Object,``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Expand the given path of items starting from the TreeView's root.
            </summary>
            <typeparam name="T">
            The type of items provided in <paramref name="items" />.
            </typeparam>
            <param name="view">The TreeView.</param>
            <param name="comparisonSelector">
            A function that takes a TreeViewItem's item and returns a value to
            compare against elements of the given <paramref name="items" />.
            The item itself will be used if 
            <paramref name="comparisonSelector" /> is null.
            </param>
            <param name="items">
            The sequence of items corresponding to the path to expand.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="items" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetIsChecked(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets the value of the IsChecked attached property for a specified
            TreeViewItem.
            </summary>
            <param name="element">
            The TreeViewItem from which the property value is read.
            </param>
            <returns>
            The IsChecked property value for the TreeViewItem.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.SetIsChecked(System.Windows.Controls.TreeViewItem,System.Nullable{System.Boolean})">
            <summary>
            Sets the value of the IsChecked attached property to a specified
            TreeViewItem.
            </summary>
            <param name="element">
            The TreeViewItem to which the attached property is written.
            </param>
            <param name="value">The needed IsChecked value.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewExtensions.IsCheckedProperty">
            <summary>
            Identifies the IsChecked dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.OnIsCheckedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsCheckedProperty property changed handler.
            </summary>
            <param name="d">The TreeViewItem that changed IsChecked.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetAssociatedCheckBox(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets the value of the AssociatedCheckBox attached property for a
            specified TreeViewItem.
            </summary>
            <param name="element">
            The TreeViewItem from which the property value is read.
            </param>
            <returns>
            The AssociatedCheckBox property value for the TreeViewItem.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.SetAssociatedCheckBox(System.Windows.Controls.TreeViewItem,System.Windows.Controls.TreeViewItemCheckBox)">
            <summary>
            Sets the value of the AssociatedCheckBox attached property to a
            specified TreeViewItem.
            </summary>
            <param name="element">
            The TreeViewItem to which the attached property is written.
            </param>
            <param name="value">The needed AssociatedCheckBox value.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewExtensions.AssociatedCheckBoxProperty">
            <summary>
            Identifies the AssociatedCheckBox dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.OnAssociatedCheckBoxPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            AssociatedCheckBoxProperty property changed handler.
            </summary>
            <param name="d">
            The TreeViewItem that changed its AssociatedCheckBox.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetCheckedItemsAndContainers(System.Windows.Controls.TreeView)">
            <summary>
            Get the sequence of items and containers with their IsChecked
            property set to True.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>
            The sequence of items and containers with their IsChecked property
            set to True.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetCheckedItemsAndContainers(System.Windows.Controls.TreeView,System.Boolean)">
            <summary>
            Get the sequence of items and containers with their IsChecked
            property set to True.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="includeIndeterminate">
            A value indicating whether to include TreeViewItems with an
            indeterminate IsChecked value.
            </param>
            <returns>
            The sequence of items and containers with their IsChecked property
            set to True or also set to null if indeterminate values are
            included.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view"/> is null.
            </exception>
        </member>
        <member name="P:System.Windows.Controls.TreeViewExtensions.CancelIsCheckedChangedBubbling">
            <summary>
            Gets or sets a value indicating whether recursive calls to
            OnIsCheckedPropertyChanged should ignore their notifications or
            process them accordingly.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewExtensions.CancelIsCheckedChangedChildNotifications">
            <summary>
            Gets or sets a value indicating whether recursive calls to
            OnIsCheckedPropertyChanged should update their children when their
            IsChecked value has changed.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ObjectCollection">
            <summary>
            Implements a collection of objects.
            </summary>
            <remarks>
            ObjectCollection is intended to simplify the task of populating an
            ItemsSource property in XAML.
            </remarks>
            <example>
            <code language="XAML">
            <![CDATA[
            <ItemsControl.ItemsSource>
                <controls:ObjectCollection>
                    <TextBlock Text="Object 1" />
                    <TextBlock Text="Object 2" />
                </controls:ObjectCollection>
            </ItemsControl.ItemsSource>
            ]]>
            </code>
            </example>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.ObjectCollection.#ctor">
            <summary>
            Initializes a new instance of the ObjectCollection class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ObjectCollection.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the ObjectCollection class.
            </summary>
            <param name="collection">The collection whose elements are copied to the new ObjectCollection.</param>
        </member>
        <member name="T:System.Windows.Controls.TreeViewItemIndentationConverter">
            <summary>
            Used to convert TreeViewItems into a value based on their depth in
            the TreeView.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemIndentationConverter.#ctor">
            <summary>
            Initializes a new instance of the TreeViewItemIndentationConverter
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemIndentationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert a TreeViewItem into a value based on the depth of the item
            in the TreeView.
            </summary>
            <param name="value">The TreeViewItem.</param>
            <param name="targetType">
            The indentation type to convert to (such as Thickness or double).
            </param>
            <param name="parameter">
            The number of pixels to indent each level of the TreeView.  A
            default value of 15.0 will be used if no parameter is provided.
            </param>
            <param name="culture">
            The culture used to convert the TreeViewItem.
            </param>
            <returns>
            A value based on the depth of the item in the TreeView.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemIndentationConverter.WrapIndentation(System.Double,System.Type)">
            <summary>
            Wrap the indentation in the desired type.
            </summary>
            <param name="indentation">
            The number of pixels to indent the TreeViewItem.
            </param>
            <param name="targetType">
            The indentation type to convert to (such as Thickness or double).
            </param>
            <returns>
            A value based on the depth of the item in the TreeView.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemIndentationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert an indentation back into a TreeViewItem.  This always throws
            a NotSupportedException.
            </summary>
            <param name="value">The indentation.</param>
            <param name="targetType">The type of the indentation.</param>
            <param name="parameter">
            The number of pixels to indent each level of the TreeView.
            </param>
            <param name="culture">
            The culture used to convert the TreeViewItem.
            </param>
            <returns>Always throws a NotSupportedException.</returns>
        </member>
        <member name="T:System.Windows.Controls.StretchDirection">
            <summary>
            Describes the direction that content is scaled.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.StretchDirection.UpOnly">
            <summary>
            The content scales upward only when it is smaller than the parent.
            If the content is larger, no scaling downward is performed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.StretchDirection.DownOnly">
            <summary>
            The content scales downward only when it is larger than the parent.
            If the content is smaller, no scaling upward is performed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.StretchDirection.Both">
            <summary>
            The content stretches to fit the parent according to the
            <see cref="P:System.Windows.Controls.Viewbox.Stretch" /> property.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Viewbox">
            <summary>
            Defines a content decorator that can stretch and scale a single child to
            fill the available space.
            </summary>
            <remarks>
            Viewbox should inherit from Decorator (which inherits from 
            FrameworkElement), but the closest working base in Silverlight is the 
            ContentControl class.  This provides a number of extra APIs not present 
            in WPF that should be avoided (including the Template property which 
            should not be changed from its default value).  Viewbox has been sealed 
            to prevent the creation of derived classes that depend on these features 
            not available on its WPF counterpart.
            </remarks>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Viewbox.ChildElementName">
            <summary>
            Name of  child element in Viewbox's default template.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Viewbox.DefaultTemplateMarkup">
            <summary>
            XAML markup used to define the write-once Viewbox template.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Viewbox.StretchProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Viewbox.Stretch" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Viewbox.Stretch" /> dependency
            property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.OnStretchPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StretchProperty property changed handler.
            </summary>
            <param name="d">Viewbox that changed its Stretch.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.IsValidStretchValue(System.Object)">
            <summary>
            Check whether the passed in object value is a valid Stretch enum value.
            </summary>
            <param name="o">The object typed value to be checked.</param>
            <returns>True if o is a valid Stretch enum value, false o/w.</returns>
        </member>
        <member name="F:System.Windows.Controls.Viewbox.StretchDirectionProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Viewbox.StretchDirection" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Viewbox.StretchDirection" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.OnStretchDirectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StretchDirectionProperty property changed handler.
            </summary>
            <param name="d">Viewbox that changed its StretchDirection.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.IsValidStretchDirectionValue(System.Object)">
            <summary>
            Check whether the passed in object value is a valid StretchDirection enum value.
            </summary>
            <param name="o">The object typed value to be checked.</param>
            <returns>True if o is a valid StretchDirection enum value, false o/w.</returns>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Viewbox" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Viewbox" /> control when a new
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child element of a Viewbox to prepare for arranging
            it during the ArrangeOverride pass.
            </summary>
            <remarks>
            Viewbox measures it's child at an infinite constraint; it allows the child to be however large it so desires.
            The child's returned size will be used as it's natural size for scaling to Viewbox's size during Arrange.
            </remarks>
            <param name="availableSize">
            An upper limit Size that should not be exceeded.
            </param>
            <returns>The target Size of the element.</returns>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of a Viewbox element.
            Viewbox always sets the child to its desired size.  It then computes and applies a transformation
            from that size to the space available: Viewbox's own input size less child margin.
            </summary>
            <param name="finalSize">
            The Size this element uses to arrange its child content.
            </param>
            <returns>
            The Size that represents the arranged size of this Viewbox element
            and its child.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.ComputeScaleFactor(System.Windows.Size,System.Windows.Size)">
            <summary>
            Compute the scale factor of the Child content.
            </summary>
            <param name="availableSize">
            Available size to fill with content.
            </param>
            <param name="contentSize">Desired size of the content.</param>
            <returns>Width and Height scale factors.</returns>
        </member>
        <member name="P:System.Windows.Controls.Viewbox.DefaultTemplate">
            <summary>
            Gets or sets the default ControlTemplate of the Viewbox.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Viewbox.ChildElement">
            <summary>
            Gets or sets the element of the Viewbox that will render the child.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Viewbox.Scale">
            <summary>
            Gets or sets the transformation on the ChildElement used to scale the
            Child content.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Viewbox.Child">
            <summary>
            Gets or sets the single child element of a
            <see cref="T:System.Windows.Controls.Viewbox" /> element.
            </summary>
            <value>
            The single child element of a
            <see cref="T:System.Windows.Controls.Viewbox" /> element.
            </value>
            <remarks>
            Child must be an alias of ContentControl.Content property to ensure 
            continuous namescope, ie, named element within Viewbox can be found.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.Viewbox.Stretch">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Stretch" /> mode,
            which determines how content fits into the available space.
            </summary>
            <value>
            A <see cref="T:System.Windows.Media.Stretch" /> mode, which
            determines how content fits in the available space.  The default is
            <see cref="F:System.Windows.Media.Stretch.Uniform" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.Viewbox.StretchDirection">
            <summary>
            Gets or sets the
            <see cref="T:System.Windows.Controls.StretchDirection" />, which
            determines how scaling is applied to the contents of a
            <see cref="T:System.Windows.Controls.Viewbox" />.
            </summary>
            <value>
            A <see cref="T:System.Windows.Controls.StretchDirection" />, which
            determines how scaling is applied to the contents of a
            <see cref="T:System.Windows.Controls.Viewbox" />. The default is
            <see cref="F:System.Windows.Controls.StretchDirection.Both" />.
            </value>
        </member>
        <member name="T:System.Windows.Controls.OrientedSize">
            <summary>
            The OrientedSize structure is used to abstract the growth direction from
            the layout algorithms of WrapPanel.  When the growth direction is
            oriented horizontally (ex: the next element is arranged on the side of
            the previous element), then the Width grows directly with the placement
            of elements and Height grows indirectly with the size of the largest
            element in the row.  When the orientation is reversed, so is the
            directional growth with respect to Width and Height.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.OrientedSize._orientation">
            <summary>
            The orientation of the structure.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.OrientedSize._direct">
            <summary>
            The size dimension that grows directly with layout placement.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.OrientedSize._indirect">
            <summary>
            The size dimension that grows indirectly with the maximum value of
            the layout row or column.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.OrientedSize.#ctor(System.Windows.Controls.Orientation)">
            <summary>
            Initializes a new OrientedSize structure.
            </summary>
            <param name="orientation">Orientation of the structure.</param>
        </member>
        <member name="M:System.Windows.Controls.OrientedSize.#ctor(System.Windows.Controls.Orientation,System.Double,System.Double)">
            <summary>
            Initializes a new OrientedSize structure.
            </summary>
            <param name="orientation">Orientation of the structure.</param>
            <param name="width">Un-oriented width of the structure.</param>
            <param name="height">Un-oriented height of the structure.</param>
        </member>
        <member name="P:System.Windows.Controls.OrientedSize.Orientation">
            <summary>
            Gets the orientation of the structure.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.OrientedSize.Direct">
            <summary>
            Gets or sets the size dimension that grows directly with layout
            placement.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.OrientedSize.Indirect">
            <summary>
            Gets or sets the size dimension that grows indirectly with the
            maximum value of the layout row or column.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.OrientedSize.Width">
            <summary>
            Gets or sets the width of the size.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.OrientedSize.Height">
            <summary>
            Gets or sets the height of the size.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.WrapPanel">
            <summary>
            Positions child elements sequentially from left to right or top to
            bottom.  When elements extend beyond the panel edge, elements are
            positioned in the next row or column.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.WrapPanel._ignorePropertyChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.WrapPanel.ItemHeightProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight" />
            dependency property
            </value>
        </member>
        <member name="F:System.Windows.Controls.WrapPanel.ItemWidthProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth" />
            dependency property.
            </value>
        </member>
        <member name="F:System.Windows.Controls.WrapPanel.OrientationProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.WrapPanel.Orientation" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.WrapPanel.Orientation" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.WrapPanel.OnOrientationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            OrientationProperty property changed handler.
            </summary>
            <param name="d">WrapPanel that changed its Orientation.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.WrapPanel.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.WrapPanel" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.WrapPanel.OnItemHeightOrWidthPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Property changed handler for ItemHeight and ItemWidth.
            </summary>
            <param name="d">
            WrapPanel that changed its ItemHeight or ItemWidth.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.WrapPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child elements of a
            <see cref="T:System.Windows.Controls.WrapPanel" /> in anticipation
            of arranging them during the
            <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" />
            pass.
            </summary>
            <param name="constraint">
            The size available to child elements of the wrap panel.
            </param>
            <returns>
            The size required by the
            <see cref="T:System.Windows.Controls.WrapPanel" /> and its 
            elements.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges and sizes the
            <see cref="T:System.Windows.Controls.WrapPanel" /> control and its
            child elements.
            </summary>
            <param name="finalSize">
            The area within the parent that the
            <see cref="T:System.Windows.Controls.WrapPanel" /> should use 
            arrange itself and its children.
            </param>
            <returns>
            The actual size used by the
            <see cref="T:System.Windows.Controls.WrapPanel" />.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.WrapPanel.ArrangeLine(System.Int32,System.Int32,System.Nullable{System.Double},System.Double,System.Double)">
            <summary>
            Arrange a sequence of elements in a single line.
            </summary>
            <param name="lineStart">
            Index of the first element in the sequence to arrange.
            </param>
            <param name="lineEnd">
            Index of the last element in the sequence to arrange.
            </param>
            <param name="directDelta">
            Optional fixed growth in the primary direction.
            </param>
            <param name="indirectOffset">
            Offset of the line in the indirect direction.
            </param>
            <param name="indirectGrowth">
            Shared indirect growth of the elements on this line.
            </param>
        </member>
        <member name="P:System.Windows.Controls.WrapPanel.ItemHeight">
            <summary>
            Gets or sets the height of the layout area for each item that is
            contained in a <see cref="T:System.Windows.Controls.WrapPanel" />.
            </summary>
            <value>
            The height applied to the layout area of each item that is contained
            within a <see cref="T:System.Windows.Controls.WrapPanel" />.  The
            default value is <see cref="F:System.Double.NaN" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.WrapPanel.ItemWidth">
            <summary>
            Gets or sets the width of the layout area for each item that is
            contained in a <see cref="T:System.Windows.Controls.WrapPanel" />.
            </summary>
            <value>
            The width that applies to the layout area of each item that is
            contained in a <see cref="T:System.Windows.Controls.WrapPanel" />.
            The default value is <see cref="F:System.Double.NaN" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.WrapPanel.Orientation">
            <summary>
            Gets or sets the direction in which child elements are arranged.
            </summary>
            <value>
            One of the <see cref="T:System.Windows.Controls.Orientation" />
            values.  The default is
            <see cref="F:System.Windows.Controls.Orientation.Horizontal" />.
            </value>
        </member>
        <member name="T:System.Windows.Controls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Automation_OperationCannotBePerformed">
            <summary>
              Looks up a localized string similar to Cannot perform operation..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_CheckSelectionMode_InvalidOperation">
            <summary>
              Looks up a localized string similar to The SelectedDates collection can be changed only in a multiple selection mode. Use the SelectedDate in a single selection mode..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_NextButtonName">
            <summary>
              Looks up a localized string similar to next button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnDisplayModePropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to DisplayMode value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnFirstDayOfWeekChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to FirstDayOfWeek value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnSelectedDateChanged_InvalidOperation">
            <summary>
              Looks up a localized string similar to The SelectedDate property cannot be set when the selection mode is None..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnSelectedDateChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to SelectedDate value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnSelectionModeChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to SelectionMode value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_PreviousButtonName">
            <summary>
              Looks up a localized string similar to previous button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_UnSelectableDates">
            <summary>
              Looks up a localized string similar to Value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_BlackoutDayHelpText">
            <summary>
              Looks up a localized string similar to Blackout Day - {0}.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_CalendarButtonLocalizedControlType">
            <summary>
              Looks up a localized string similar to calendar button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_DayButtonLocalizedControlType">
            <summary>
              Looks up a localized string similar to day button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_DecadeMode">
            <summary>
              Looks up a localized string similar to Decade.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_MonthMode">
            <summary>
              Looks up a localized string similar to Month.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_YearMode">
            <summary>
              Looks up a localized string similar to Year.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarCollection_MultiThreadedCollectionChangeNotSupported">
            <summary>
              Looks up a localized string similar to This type of Collection does not support changes to its SourceCollection from a thread different from the Dispatcher thread..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarInfo_DateFormatInfoRequired">
            <summary>
              Looks up a localized string similar to DateFormatInfo cannot be null..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.DateTimeTypeConverter_FormatException">
            <summary>
              Looks up a localized string similar to DateTime value is in the wrong format..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.DockPanel_OnDockPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid Dock value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Expander_OnExpandDirectionPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid ExpandDirection value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ParameterCollection_EnsureCanChangeCollection_IsReadOnly">
            <summary>
              Looks up a localized string similar to ConstructorParameters cannot be changed because ObjectDataProvider is using a user-assigned ObjectInstance..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ResolveElementNameEventArgs_ctor_ElementNameEmpty">
            <summary>
              Looks up a localized string similar to The elementName should not be empty..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TreeViewExtensions_GetDepth_NotInTreeView">
            <summary>
              Looks up a localized string similar to The item is not in a TreeView..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TypeConverters_Convert_CannotConvert">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is unable to convert &apos;{1}&apos; to &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TypeConverters_ConvertFrom_CannotConvertFromType">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; cannot convert from &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Viewbox_OnApplyTemplate_OnlyOnce">
            <summary>
              Looks up a localized string similar to The template can only be applied one time..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Viewbox_OnStretchDirectionPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid StretchDirection value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Viewbox_OnStretchPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid Stretch value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.WrapPanel_OnItemHeightOrWidthPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid length value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.WrapPanel_OnOrientationPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid Orientation value &apos;{0}&apos;..
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Binaries\System.Windows.Controls.Theming.Toolkit.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Theming.Toolkit</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Theming.DefaultStyleKeyRetriever">
            <summary>
            This class retrieves the default style key of a control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.DefaultStyleKeyRetriever.#ctor">
            <summary>
            Initializes a new instance of the DefaultStyleKeyRetriever class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.DefaultStyleKeyRetriever.GetDefaultStyleKey(System.Windows.Controls.Control)">
            <summary>
            This method retrieves the default style key of a control.
            </summary>
            <param name="control">The control to retrieve the default style key 
            from.</param>
            <returns>The default style key of the control.</returns>
        </member>
        <member name="T:System.Windows.Controls.Theming.BaseMergedStyleDictionary">
            <summary>
            A class that defines the behavior of looking for an item recursively up 
            a chain of dictionaries.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.BaseMergedStyleDictionary.Parent">
            <summary>
            Gets or sets the parent of this merged dictionary.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.BaseMergedStyleDictionary.Item(System.String)">
            <summary>
            Retrieves an item using a key.  If the item is not found in the 
            local dictionary a lookup is attempted on the parent.
            </summary>
            <param name="key">The key to use to retrieve the item.</param>
            <returns>A style corresponding to the key.</returns>
        </member>
        <member name="T:System.Windows.Controls.Theming.FunctionalProgramming">
            <summary>
            Collection of functions for functional programming tasks.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.FunctionalProgramming.TraverseDepthFirst``1(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,System.Boolean})">
            <summary>
            Traverses a tree by accepting an initial value and a function that 
            retrieves the child nodes of a node.
            </summary>
            <typeparam name="T">The type of the stream.</typeparam>
            <param name="initialNode">The initial node.</param>
            <param name="getChildNodes">A function that retrieves the child
            nodes of a node.</param>
            <param name="traversePredicate">A predicate that evaluates a node
            and returns a value indicating whether that node and it's children
            should be traversed.</param>
            <returns>A stream of nodes.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.FunctionalProgramming.TraverseBreadthFirst``1(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,System.Boolean})">
            <summary>
            Traverses a tree by accepting an initial value and a function that 
            retrieves the child nodes of a node.
            </summary>
            <typeparam name="T">The type of the stream.</typeparam>
            <param name="initialNode">The initial node.</param>
            <param name="getChildNodes">A function that retrieves the child
            nodes of a node.</param>
            <param name="traversePredicate">A predicate that evaluates a node
            and returns a value indicating whether that node and it's children
            should be traversed.</param>
            <returns>A stream of nodes.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.FunctionalProgramming.Append``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Appends an item to the front of a stream.
            </summary>
            <typeparam name="T">The type of the stream.</typeparam>
            <param name="that">The stream.</param>
            <param name="value">The value to append to the front of the stream.
            </param>
            <returns>A stream with the item appended to the front.</returns>
        </member>
        <member name="T:System.Windows.Controls.Theming.ImplicitStyleManager">
            <summary>
            Encapsulates an attached behavior that propagates styles in a framework 
            element's associated resource dictionary to its children.  The class 
            also provides attached properties that allow the resource dictionary to 
            be loaded from an external source.  Hierarchical styling is supported in
            a way similar to WPF.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.GetHasBeenStyled(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the HasBeenStyled attached property for a specified FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement from which the property value is read.</param>
            <returns>The HasBeenStyled property value for the FrameworkElement.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.SetHasBeenStyled(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Sets the value of the HasBeenStyled attached property to a specified FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement to which the attached property is written.</param>
            <param name="value">The needed HasBeenStyled value.</param>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStyleManager.HasBeenStyledProperty">
            <summary>
            Identifies the HasBeenStyled dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.GetApplyMode(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the ImplicitStyleManager.ApplyMode attached property 
            for a specified framework element. 
            The value indicates whether the style implicitly applied on descendent
            framework elements.
            </summary>
            <param name="element">The FrameworkElement from which the property value is read.</param>
            <returns>The ApplyMode property value for the FrameworkElement.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.SetApplyMode(System.Windows.FrameworkElement,System.Windows.Controls.Theming.ImplicitStylesApplyMode)">
            <summary>
            Sets the value of the ImplicitStyleManager.ApplyMode attached
            property on a specified framework element. 
            This value indicates whether the style should be implicitly applied
            on descendent framework elements.
            </summary>
            <param name="element">The FrameworkElement to which the attached 
            property is written.</param>
            <param name="value">The ApplyMode value.</param>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStyleManager.ApplyModeProperty">
            <summary>
            Identifies the ApplyMode dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.OnApplyModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ApplyModeProperty property changed handler.
            </summary>
            <param name="dependencyObject">FrameworkElement that changed its 
            ApplyMode.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.GetExternalResourceDictionary(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the ExternalResourceDictionary attached property 
            for a specified FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement from which the property 
            value is read.</param>
            <returns>The ExternalResourceDictionary property value for the 
            FrameworkElement.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.SetExternalResourceDictionary(System.Windows.FrameworkElement,System.Windows.ResourceDictionary)">
            <summary>
            Sets the value of the ExternalResourceDictionary attached property 
            to a specified FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement to which the attached 
            property is written.</param>
            <param name="value">The needed ExternalResourceDictionary value.
            </param>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStyleManager.ExternalResourceDictionaryProperty">
            <summary>
            Identifies the ExternalResourceDictionary dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.GetLayoutUpdatedHandler(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the LayoutUpdatedHandler attached property for a 
            specified FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement from which the property 
            value is read.</param>
            <returns>The LayoutUpdatedHandler property value for the 
            FrameworkElement.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.SetLayoutUpdatedHandler(System.Windows.FrameworkElement,System.EventHandler)">
            <summary>
            Sets the value of the LayoutUpdatedHandler attached property to a 
            specified FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement to which the attached 
            property is written.</param>
            <param name="value">The needed LayoutUpdatedHandler value.</param>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStyleManager.LayoutUpdatedHandlerProperty">
            <summary>
            Identifies the LayoutUpdatedHandler dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.GetResourceDictionaryUri(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the ImplicitStyleManager.ResourceDictionaryUri 
            attached property for a specified framework element.
            The value indicates the URI address for the resource dictionary that 
            is implicitly applied.
            </summary>
            <param name="element">The FrameworkElement from which the property 
            value is read.</param>
            <returns>The ResourceDictionaryUri property value for the 
            FrameworkElement.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.SetResourceDictionaryUri(System.Windows.FrameworkElement,System.Uri)">
            <summary>
            Sets the value of the ImplicitStyleManager.ResourceDictionaryUri 
            attached property for a specified framework element. 
            The value indicates the URI address for the resource dictionary 
            that is implicitly applied.
            </summary>
            <param name="element">The FrameworkElement to which the attached 
            property is written.</param>
            <param name="value">The needed ResourceDictionaryUri value.</param>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStyleManager.ResourceDictionaryUriProperty">
            <summary>
            Identifies the ResourceDictionaryUri dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.OnResourceDictionaryUriPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ResourceDictionaryUriProperty property changed handler.
            </summary>
            <param name="dependencyObject">FrameworkElement that changed its 
            ResourceDictionaryUri.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStyleManager._useApplicationResources">
            <summary>
            Gets or sets a value indicating whether to use application
            resources.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStyleManager._applicationResourceDictionaryUri">
            <summary>
            A field that stores a resource dictionary uri which is used to 
            retrieve resources associated with the application.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.GetStyle(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the Style attached property for a specified FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement from which the property value is read.</param>
            <returns>The Style property value for the FrameworkElement.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.SetStyle(System.Windows.FrameworkElement,System.Windows.Style)">
            <summary>
            Sets the value of the Style attached property to a specified FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement to which the attached property is written.</param>
            <param name="value">The needed Style value.</param>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStyleManager.StyleProperty">
            <summary>
            Identifies the Style dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.OnStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StyleProperty property changed handler.
            </summary>
            <param name="dependencyObject">FrameworkElement that changed its Style.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.Apply(System.Windows.FrameworkElement)">
            <summary>
            Applies implicit styles to an element and its descendents.
            </summary>
            <param name="element">The element to apply implicit styles to.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.GetMergedStyleDictionary(System.Windows.FrameworkElement)">
            <summary>
            Retrieves or creates the merged style dictionary of an element.
            </summary>
            <param name="styledElement">A styled element.</param>
            <returns>The merged dictionary of the element.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.GetStyleKey(System.Windows.FrameworkElement)">
            <summary>
            Retrieves the style key for a given element by first checking to
            see if it can retrieve its default style key and then using the
            full name of its concrete type.
            </summary>
            <param name="element">The element to retrieve the style key for.
            </param>
            <returns>The style key.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.Parse(System.Uri)">
            <summary>
            Retrieves a style collection from a uri of a resource
            dictionary.
            </summary>
            <param name="uri">The uri of a resource dictionary.</param>
            <returns>A style collection containing the styles in the resource
            dictionary.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ImplicitStyleManager.PropagateStyles(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            This method propagates the styles in the resources associated with
            a framework element to its descendents. This results in a  
            style inheritance that mimics WPF's behavior.
            </summary>
            <param name="element">The element that will have its styles 
            propagated to its children.</param>
            <param name="recurse">Whether to recurse over styled elements that
            are set to OneTime and have already been styled.</param>
        </member>
        <member name="P:System.Windows.Controls.Theming.ImplicitStyleManager.UseApplicationResources">
            <summary>
            Gets or sets a value indicating whether the implicitly applied 
            styles are based on values from 
            ImplicitStyleManager.ApplicationResourceDictionaryUri.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.ImplicitStyleManager.ApplicationResourceDictionaryUri">
            <summary>
            Gets or sets the ResourceDictionary URI that is implicitly applied 
            to all FrameworksElements in the Application.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.ImplicitStyleManager.ApplicationExternalResourceDictionary">
            <summary>
            Gets or sets the external resource dictionary to use for the 
            application.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.ImplicitStylesApplyMode">
            <summary>
            Specifies the mode in which styles are implicitly applied in 
            ImplicitStyleManager.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStylesApplyMode.None">
            <summary>
            Specifies that the ImplicitStyleManager does not implicitly apply 
            styles.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStylesApplyMode.OneTime">
            <summary>
            Specifies that the ImplicitStyleManager will implicitly apply styles 
            to the descendent visual tree once and will not attempt refreshes.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Theming.ImplicitStylesApplyMode.Auto">
            <summary>
            Specifies that the ImplicitStyleManager will implicitly apply styles 
            to the descendent visual tree once the visual tree changes. 
            Using this setting may incur a serious performance hit.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.InvalidResourceException">
            <summary>
            Exception thrown when resource is not found.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Theming.InvalidResourceException.#ctor">
            <summary>
            Initializes a new instance of the InvalidResourceException class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.InvalidResourceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidResourceException class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:System.Windows.Controls.Theming.InvalidResourceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidResourceException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:System.Windows.Controls.Theming.InvalidResourceException.#ctor(System.String,System.Uri)">
            <summary>
            Initializes a new instance of the InvalidResourceException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="uri">The uri of the resource.</param>
        </member>
        <member name="M:System.Windows.Controls.Theming.InvalidResourceException.#ctor(System.String,System.Uri,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidResourceException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="uri">The uri of the resource.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:System.Windows.Controls.Theming.InvalidResourceException.Uri">
            <summary>
            Gets the uri of the resource that could not be found.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.MergedStyleResourceDictionary">
            <summary>
            A dictionary that merges a resource dictionary with a parent dictionary.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Theming.MergedStyleResourceDictionary._resourceDictionary">
            <summary>
            The resource dictionary to check for a value before checking the 
            parent.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.MergedStyleResourceDictionary.#ctor(System.Windows.ResourceDictionary,System.Windows.Controls.Theming.BaseMergedStyleDictionary)">
            <summary>
            Initializes a new instance of the MergedResourceDictionary class.
            </summary>
            <param name="resourceDictionary">A resource dictionary to check for 
            a value before checking the parent.</param>
            <param name="parentResourceDictionary">The parent merged resource 
            dictionary to check if no match is found in the resource 
            dictionary.</param>
        </member>
        <member name="M:System.Windows.Controls.Theming.MergedStyleResourceDictionary.#ctor(System.Windows.ResourceDictionary)">
            <summary>
            Initializes a new instance of the MergedResourceDictionary class.
            </summary>
            <param name="resourceDictionary">A resource dictionary to check for a value 
            before checking the parent.</param>
        </member>
        <member name="P:System.Windows.Controls.Theming.MergedStyleResourceDictionary.Item(System.String)">
            <summary>
            Retrieves an item using a key.  If the item is not found in the 
            local dictionary a lookup is attempted on the parent.
            </summary>
            <param name="key">The key to use to retrieve the item.</param>
            <returns>A style corresponding to the key.</returns>
        </member>
        <member name="T:System.Windows.Controls.Theming.ResourceNotFoundException">
            <summary>
            Exception thrown when resource is not found.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the ResourceNotFoundException class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ResourceNotFoundException class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ResourceNotFoundException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceNotFoundException.#ctor(System.String,System.Uri)">
            <summary>
            Initializes a new instance of the ResourceNotFoundException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="uri">The uri of the resource.</param>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceNotFoundException.#ctor(System.String,System.Uri,System.Exception)">
            <summary>
            Initializes a new instance of the ResourceNotFoundException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="uri">The uri of the resource.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:System.Windows.Controls.Theming.ResourceNotFoundException.Uri">
            <summary>
            Gets the uri of the resource that could not be found.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.VisualTreeExtensions">
            <summary>
            A static class providing methods for working with the visual tree.  
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.VisualTreeExtensions.EnsureName(System.Windows.FrameworkElement)">
            <summary>
            Ensures that a framework element has a unique name.
            </summary>
            <param name="element">The element to set the name of.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Theming.VisualTreeExtensions.GetVisualAncestors(System.Windows.FrameworkElement)">
            <summary>
            Returns the visual tree ancestors of an element.
            </summary>
            <param name="element">The descendent of the ancestors.</param>
            <returns>The visual tree ancestors of the element.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.VisualTreeExtensions.GetLogicalChildrenDepthFirst(System.Windows.FrameworkElement)">
            <summary>
            Retrieves all the logical children of a framework element using a 
            depth-first search.  A visual element is assumed to be a logical 
            child of another visual element if they are in the same namescope.
            For performance reasons this method manually manages the stack 
            instead of using recursion.
            </summary>
            <param name="parent">The parent framework element.</param>
            <returns>The logical children of the framework element.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)">
            <summary>
            Retrieves all the visual children of a framework element.
            </summary>
            <param name="parent">The parent framework element.</param>
            <returns>The visual children of the framework element.</returns>
        </member>
        <member name="P:System.Windows.Controls.Theming.VisualTreeExtensions.UniqueId">
            <summary>
            Gets or sets an identity integer that ensures that names are unique.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Properties.Resources.ImplicitStyleManager_Parse_CanOnlyParseXAMLFilesWithResourceDictionaryAsTheRootElement">
            <summary>
              Looks up a localized string similar to Cannot parse XAML files which do not have a ResourceDictionary as the root element..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Properties.Resources.ImplicitStyleManager_ResourceNotFound">
            <summary>
              Looks up a localized string similar to Resource not found at &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Properties.Resources.InvalidResourceException_UnableToLoadResources">
            <summary>
              Looks up a localized string similar to Unable to load resources..
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Theming.ResourceParser">
            <summary>
            Parse streams containing theme resources.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Theming.ResourceParser.OldXamlNamespace">
            <summary>
            The default old XAML namespace.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Theming.ResourceParser.NewXamlNamespace">
            <summary>
            The default new XAML namespace.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Theming.ResourceParser.StyleXaml">
            <summary>
            The XAML markup for an empty Style declaration.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Theming.ResourceParser.StyleXamlWithPrefix">
            <summary>
            The XAML markup for an empty Style declaration with a TargetType
            using an XML prefix.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceParser.IsXamlElement``1(System.String,System.String)">
            <summary>
            Determines whether an XML element is a type in the core Silverlight
            namespace.
            </summary>
            <typeparam name="T">The type to check for.</typeparam>
            <param name="name">The name of the element.</param>
            <param name="ns">The namespace of the element.</param>
            <returns>
            A value indicating whether an the element is the Silverlight type.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceParser.Parse(System.IO.Stream,System.Boolean)">
            <summary>
            Retrieves a resource dictionary from an input stream.
            </summary>
            <param name="stream">
            A stream containing the XAML for a  resource dictionary.
            </param>
            <param name="checkTypes">
            A value indicating whether styles in the resource dictionary should
            be filtered to types that have been loaded by the application.
            </param>
            <returns>A resource dictionary.</returns>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceParser.ParseResources(System.Xml.XmlReader,System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Transform a ResourceDictionary defined in the reader into a
            ContentControl in the writer and nest all of its resources in
            ContentControl.Resources.
            </summary>
            <param name="reader">Reader with the resources.</param>
            <param name="writer">Writer with the transformed resources.</param>
            <param name="checkTypes">
            A value indicating whether styles in the resource dictionary should
            be filtered to types that have been loaded by the application.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceParser.ParseElement(System.Xml.XmlReader,System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Process an element's opening tag.
            </summary>
            <param name="reader">Reader with the resources.</param>
            <param name="writer">Writer with the transformed resources.</param>
            <param name="checkTypes">
            A value indicating whether styles in the resource dictionary should
            be filtered to types that have been loaded by the application.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Theming.ResourceParser.IsStyleTargetTypeLoaded(System.Xml.XmlReader)">
            <summary>
            Determine if the current element in the reader represents a Style
            whose TargetType has been loaded in the assembly.
            </summary>
            <param name="reader">Reader with the resources.</param>
            <returns>
            A value indicating whether the element is not a style or it is a
            Style with a TargetType loaded in this assembly.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.Theming.Theme">
            <summary>
            Uses ImplicitStyleManager to implicitly apply a set of styles to all of
            its descendent FrameworkElements.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Theming.Theme.#ctor">
            <summary>
            Initializes a new instance of the Theme class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Theming.Theme.#ctor(System.Reflection.Assembly,System.String)">
            <summary>
            Initializes a new instance of the Theme class.
            </summary>
            <param name="themeAssembly">
            Assembly with the embedded resource containing the theme to apply.
            </param>
            <param name="themeResourceName">
            Name of the embedded resource containing the theme to apply.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Theming.Theme.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the Theme class.
            </summary>
            <param name="themeResourceStream">
            A resource stream containing the theme to apply.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Theming.Theme.LoadTheme(System.IO.Stream)">
            <summary>
            Load a theme from a resource stream.
            </summary>
            <param name="themeResourceStream">
            A resource stream containing the theme to load.
            </param>
        </member>
        <member name="P:System.Windows.Controls.Theming.Theme.ApplyMode">
            <summary>
            Gets or sets the mode defining how styles in the theme are
            implicitly applied.
            </summary>
            <remarks>
            The default value is OneTime.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.Theming.Tuple`2">
            <summary>
            A structure that groups two values.
            </summary>
            <typeparam name="T0">The type of the first value.</typeparam>
            <typeparam name="T1">The type of the second value.</typeparam>
        </member>
        <member name="M:System.Windows.Controls.Theming.Tuple`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the Tuple structure.
            </summary>
            <param name="first">The first value.</param>
            <param name="second">The second value.</param>
        </member>
        <member name="P:System.Windows.Controls.Theming.Tuple`2.First">
            <summary>
            Gets the first value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Theming.Tuple`2.Second">
            <summary>
            Gets the second value.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Binaries\System.Windows.Controls.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Controls</name>
  </assembly>
  <members>
    <member name="T:System.Windows.HierarchicalDataTemplate">
      <summary>Represents a <see cref="T:System.Windows.DataTemplate" /> that supports <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> objects, such as <see cref="T:System.Windows.Controls.TreeViewItem" />.</summary>
    </member>
    <member name="M:System.Windows.HierarchicalDataTemplate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.HierarchicalDataTemplate" /> class.</summary>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> that is applied to the item container for each child item.</summary>
      <returns>The style that is applied to the item container for each child item.</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
      <summary>Gets or sets the binding that is used to generate content for the next sublevel in the data hierarchy.</summary>
      <returns>The binding that is used to generate content for the next sublevel in the data hierarchy. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemTemplate">
      <summary>Gets or sets the <see cref="T:System.Windows.DataTemplate" /> to apply to the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> property on a generated <see cref="T:System.Windows.Controls.HeaderedItemsControl" />, such as a <see cref="T:System.Windows.Controls.TreeViewItem" />, to indicate how to display items in the next sublevel in the data hierarchy.</summary>
      <returns>The <see cref="T:System.Windows.DataTemplate" /> to apply to the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> property on a generated <see cref="T:System.Windows.Controls.HeaderedItemsControl" />, such as a <see cref="T:System.Windows.Controls.TreeViewItem" />, to indicate how to display items in the next sublevel in the data hierarchy.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.CalendarAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Calendar" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.#ctor(System.Windows.Controls.Calendar)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Calendar" /> instance to associate with the <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Calendar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Calendar" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Calendar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>By default, the type name of the <paramref name="owner" /> value that the automation peer is constructed with.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.GetNameCore">
      <summary>Gets the name of the class of the object associated with this <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>A name from a "Labeled By" value if it exists, otherwise from the <paramref name="owner" /> value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for this <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>Gets the total number of columns in a grid.</summary>
      <returns>The total number of columns in a grid. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>Retrieves the UI automation provider for the specified cell.</summary>
      <returns>The UI automation provider for the specified cell. </returns>
      <param name="row">The ordinal number of the row.</param>
      <param name="column">The ordinal number of the column.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>Gets the total number of rows in a grid.</summary>
      <returns>The total number of rows in a grid. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#CurrentView">
      <summary>Gets the current control-specific view.</summary>
      <returns>The value for the current view of the UI automation element. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetSupportedViews">
      <summary>Retrieves a collection of control-specific view identifiers.</summary>
      <returns>A collection of values that identifies the views that are available for a UI automation element.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetViewName(System.Int32)">
      <summary>Retrieves the name of a control-specific view. </summary>
      <returns>A localized name for the view. </returns>
      <param name="viewId">The view identifier.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#SetCurrentView(System.Int32)">
      <summary>Sets the current control-specific view.</summary>
      <param name="viewId">A view identifier.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>Gets a value that specifies whether the UI automation provider allows more than one child element to be selected at the same time.</summary>
      <returns>true if multiple selection is allowed; otherwise, false. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>Retrieves a UI automation provider for each child element that is selected.</summary>
      <returns>A collection of UI automation providers. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>Gets a value that specifies whether the UI automation provider requires at least one child element to be selected.</summary>
      <returns>true if selection is required; otherwise, false. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
      <summary>Gets a collection of UI automation providers that represents all the column headers in a table.</summary>
      <returns>A collection of UI automation providers. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
      <summary>Retrieves a collection of UI automation providers that represents all row headers in the table.</summary>
      <returns>A collection of UI automation providers. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
      <summary>Retrieves the primary direction of traversal for the table.</summary>
      <returns>The primary direction of traversal. </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.CalendarButton)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> to associate with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for this <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The control type as a value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class that is associated with this <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>By default, the type name of the <paramref name="owner" /> value that the automation peer is constructed with.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetHelpTextCore">
      <summary>Returns the string that describes the functionality of the item that is associated with this <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" />.</summary>
      <returns>The help text, or <see cref="F:System.String.Empty" /> if there is no help text. By default, provides a DateTime.ToString behavior.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetLocalizedControlTypeCore">
      <summary>Returns the localized version of the control type for the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" />.</summary>
      <returns>The string that contains the type of control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetNameCore">
      <summary>Gets the name of the class of the object associated with this <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>A name from a "Labeled By" value if it exists, otherwise from the <paramref name="owner" /> value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for this <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>Gets the ordinal number of the column that contains the cell or item.</summary>
      <returns>A zero-based ordinal number that identifies the column that contains the cell or item.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>Gets the number of columns that are spanned by a cell or item.</summary>
      <returns>The number of columns spanned.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>Gets a UI Automation provider that implements <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> and that represents the container of the cell or item.</summary>
      <returns>A UI automation provider that implements the <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" /> control pattern and that represents the cell or item container.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>Gets the ordinal number of the row that contains the cell or item.</summary>
      <returns>A zero-based ordinal number that identifies the row that contains the cell or item.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>Gets the number of rows that are spanned by a cell or item.</summary>
      <returns>The number of rows that are spanned. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>Sends a request to activate the control and initiate its single, unambiguous action.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>Adds the current element to the collection of selected items.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>Gets a value that indicates whether an item is selected.</summary>
      <returns>true if the element is selected; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>Removes the current element from the collection of selected items.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>Clears any existing selection and then selects the current element.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>Gets the UI Automation provider that implements <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> and that acts as the container for the calling object.</summary>
      <returns>The provider that supports <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.CalendarDayButton)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> instance that is associated with this <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for this <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The control type as a value of the enumeration. By default, this method returns <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Button" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class that is associated with this <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>By default, the type name of the <paramref name="owner" /> value that the automation peer is constructed with.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetHelpTextCore">
      <summary>Returns the string that describes the functionality of the item that is associated with this <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" />.</summary>
      <returns>The help text, or <see cref="F:System.String.Empty" /> if there is no help text.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetLocalizedControlTypeCore">
      <summary>Returns the localized version of the control type for the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" />.</summary>
      <returns>The string that contains the type of control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetNameCore">
      <summary>Gets the text label of the object associated with this <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The text label of the element that is associated with this automation peer.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern implementation for this <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>Gets the ordinal number of the column that contains the cell or item.</summary>
      <returns>A zero-based ordinal number that identifies the column that contains the cell or item. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>Gets the number of columns that are spanned by a cell or item.</summary>
      <returns>The number of columns. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>Gets a UI Automation provider that implements <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> and that represents the container of the cell or item. </summary>
      <returns>The UI Automation provider.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>Gets the ordinal number of the row that contains the cell or item.</summary>
      <returns>A zero-based ordinal number that identifies the row that contains the cell or item. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>Gets the number of rows that are spanned by a cell or item. </summary>
      <returns>The number of rows. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>Sends a request to activate the control and to initiate its single, unambiguous action.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>Adds the current element to the collection of selected items.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>Gets a value that indicates whether an item is selected.</summary>
      <returns>true if the element is selected; otherwise, false. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>Removes the current element from the collection of selected items.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>Clear any existing selection and then selects the current element.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>Gets the UI Automation provider that implements <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> and that acts as the container for the calling object.</summary>
      <returns>The UI Automation provider.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
      <summary>Retrieves a collection of UI Automation providers that represent all the column headers that are associated with a table item or cell.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
      <summary>Retrieves a collection of UI Automation providers that represent all the row headers that are associated with a table item or cell.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.ChildWindow" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.#ctor(System.Windows.Controls.ChildWindow)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" /> class. </summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ChildWindow" /> to associate with this <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the element associated with this <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class for the object associated with this <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string value that represents the type of the child window.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.Controls.ChildWindow" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The text label of the element that is associated with this automation peer.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for this <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
      <summary>Gets a value that indicates whether the element can be moved.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
      <summary>Gets a value that indicates whether the element can be resized.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
      <summary>Gets a value that indicates whether the element can be rotated.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
      <summary>Moves the control.</summary>
      <param name="x">The absolute screen coordinates of the left side of the control.</param>
      <param name="y">The absolute screen coordinates of the top of the control.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
      <summary>Resizes the control.</summary>
      <param name="width">The new width of the window, in pixels.</param>
      <param name="height">The new height of the window, in pixels.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
      <summary>Rotates the control.</summary>
      <param name="degrees">The number of degrees to rotate the control. A positive number rotates the control clockwise. A negative number rotates the control counterclockwise.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#Close">
      <summary>Closes the window.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#InteractionState">
      <summary>Gets the interaction state of the window.</summary>
      <returns>The interaction state of the control, as a value of the enumeration.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#IsModal">
      <summary>Gets a value that specifies whether the window is modal.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#IsTopmost">
      <summary>Gets a value that specifies whether the window is the topmost element in the z-order of layout.</summary>
      <returns>true if the window is topmost; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#Maximizable">
      <summary>Gets a value that specifies whether the window can be maximized.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#Minimizable">
      <summary>Gets a value that specifies whether the window can be minimized.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#SetVisualState(System.Windows.Automation.WindowVisualState)">
      <summary>Changes the visual state of the window (such as minimizing or maximizing it).</summary>
      <param name="state">The visual state of the window to change to, as a value of the enumeration.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#VisualState">
      <summary>Gets the visual state of the window.</summary>
      <returns>
        <see cref="F:System.Windows.Automation.WindowVisualState.Normal" /> in all cases.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#WaitForInputIdle(System.Int32)">
      <summary>Blocks the calling code for the specified time or until the associated process enters an idle state, whichever completes first.</summary>
      <returns>true if the window has entered the idle state; false if the timeout occurred.</returns>
      <param name="milliseconds">The amount of time, in milliseconds, to wait for the associated process to become idle.</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DatePickerAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.DatePicker" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.#ctor(System.Windows.Controls.DatePicker)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.DatePicker" /> to associate with the <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for this <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The control type as a value of the enumeration. By default, this method returns <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Calendar" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class that is associated with this <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>By default, the type name of the <paramref name="owner" /> value that the automation peer is constructed with.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetLocalizedControlTypeCore">
      <summary>Returns the localized version of the control type for the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" />.</summary>
      <returns>The string that contains the type of control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetNameCore">
      <summary>Gets the name of the class of the object associated with this <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>A name from a "Labeled By" value if it exists, otherwise from the <paramref name="owner" /> value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.DatePicker" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>Hides all nodes, controls, or content that are descendants of the control.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>Displays all child nodes, controls, or content of the control.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>Gets the state, expanded or collapsed, of the control.</summary>
      <returns>The state, expanded or collapsed, of the control. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>Gets a value that specifies whether the value of a control is read-only.</summary>
      <returns>Returns false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>Sets the value of a control.</summary>
      <param name="value">The value to set. The provider is responsible for converting the value to the appropriate data type. </param>
    </member>
    <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>Gets the value of the control.</summary>
      <returns>The value of the control as a string. </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.GridSplitter" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.#ctor(System.Windows.Controls.GridSplitter)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.GridSplitter" /> to associate with the <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for this <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The control type as a value of the enumeration. By default, this method returns <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Thumb" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class that is associated with this <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>By default, the type name of the <paramref name="owner" /> value that the automation peer is constructed with.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.GridSplitter" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
      <summary>Gets a value that specifies whether the control can be moved.</summary>
      <returns>true if the element can be moved; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
      <summary>Gets a value that specifies whether the UI automation element can be resized.</summary>
      <returns>true if the element can be resized; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
      <summary>Gets a value that specifies whether the control can be rotated.</summary>
      <returns>true if the element can be rotated; otherwise, false. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
      <summary>Moves the control.</summary>
      <param name="x">Absolute screen coordinates of the left side of the control.</param>
      <param name="y">Absolute screen coordinates of the top of the control.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
      <summary>Resizes the control.</summary>
      <param name="width">The new width of the window, in pixels. </param>
      <param name="height">The new height of the window, in pixels. </param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
      <summary>Rotates the control.</summary>
      <param name="degrees">The number of degrees to rotate the control. A positive number rotates clockwise; a negative number rotates counterclockwise. </param>
    </member>
    <member name="T:System.Windows.Automation.Peers.TabControlAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.TabControl" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.#ctor(System.Windows.Controls.TabControl)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.TabControl" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for this <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The control type as a value of the enumeration. By default, this method returns <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Tab" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class that is associated with this <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>By default, the type name of the <paramref name="owner" /> value that the automation peer is constructed with.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetClickablePointCore">
      <summary>Gets a clickable point on the control.</summary>
      <returns>A point with <see cref="F:System.Double.NaN" /> coordinates, which indicates to automation that the tab itself has no clickable points (rather, the item in the tab is the element that should be reported as clickable).</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.TabControl" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.TabControlAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>Gets a value that indicates whether the UI automation provider allows more than one child element to be selected concurrently.</summary>
      <returns>true if multiple selection is allowed; otherwise, false. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>Retrieves a UI automation provider for each child element that is selected.</summary>
      <returns>An array of UI automation providers.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TabControlAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>Gets a value that indicates whether the UI automation provider requires at least one child element to be selected.</summary>
      <returns>true if selection is required; otherwise, false. </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TabItemAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.TabItem" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.TabItem" /> to associate with the <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The control type as a value of the enumeration. By default, this method returns <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TabItem" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.TabItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The collection of child elements of automation peers, for cases where the <see cref="P:System.Windows.Controls.ContentControl.Content" /> of a <see cref="T:System.Windows.Controls.TabControl" /> is a collection of elements and not a single element.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class that is associated with this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>By default, the type name of the <paramref name="owner" /> value that the automation peer is constructed with.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetNameCore">
      <summary>Gets the name of the class of the object associated with this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The string value from the tab item's <see cref="P:System.Windows.Controls.TabItem.Header" /> if available.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.TabItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>Adds the current element to the collection of selected items.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Owner element is not enabled.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>Gets a value that indicates whether an item is selected.</summary>
      <returns>true if the element is selected; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>Removes the current element from the collection of selected items.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>Deselects any selected items and then selects the current element.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Owner element is not enabled.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>Gets the UI automation provider that implements <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> and acts as the container for the calling object.</summary>
      <returns>The provider that supports <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TreeViewAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.TreeView" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.#ctor(System.Windows.Controls.TreeView)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.TreeView" /> to associate with the <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.TreeView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Tree" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.TreeView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />. </summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.TreeView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains TreeView.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets a control pattern for the <see cref="T:System.Windows.Controls.TreeView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values that indicates the control pattern.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>Gets a value that indicates whether the UI automation provider allows more than one child element to be selected at the same time.</summary>
      <returns>true if multiple selection is allowed; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>Retrieves a UI automation provider for each child element that is selected.</summary>
      <returns>An array of UI automation providers. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>Gets a value that indicates whether the UI automation provider requires at least one child element to be selected. </summary>
      <returns>true if selection is required; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer">
      <summary>Exposes the items in <see cref="T:System.Windows.Controls.TreeViewItem" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.#ctor(System.Windows.Controls.TreeViewItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.TreeViewItem" /> instance to associate with this <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.TreeViewItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TreeItem" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.TreeViewItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string that contains TreeViewItem.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.TreeViewItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>Hides all nodes, controls, or content that are descendants of the control.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>Displays all child nodes, controls, or content of the control.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>Gets the state (expanded or collapsed) of the control.</summary>
      <returns>The state (expanded or collapsed) of the control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>Scrolls the content area of a container object in order to display the control within the visible region (viewport) of the container.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>Adds the current element to the collection of selected items.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>Gets a value that indicates whether an item is selected. </summary>
      <returns>true if an item is selected; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>Removes the current element from the collection of selected items.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>Clears any selection and then selects the current element. </summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>Gets the UI automation provider that implements <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> and acts as the container for the calling object.</summary>
      <returns>The UI automation provider.</returns>
    </member>
    <member name="T:System.Windows.Controls.Calendar">
      <summary>Represents a control that enables a user to select a date by using a visual calendar display. </summary>
    </member>
    <member name="M:System.Windows.Controls.Calendar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Calendar" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.BlackoutDates">
      <summary>Gets or sets a collection of dates that are marked as not selectable.</summary>
      <returns>A collection of dates that cannot be selected. The default value is an empty collection.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.CalendarButtonStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> associated with the control's internal <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> object.</summary>
      <returns>The current style of the <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> object.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.CalendarButtonStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.CalendarButtonStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.CalendarButtonStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> associated with the control's internal <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> object.</summary>
      <returns>The current style of the <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> object.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.CalendarItemStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> associated with the control's internal <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> object.</summary>
      <returns>The current style of the <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> object.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.CalendarItemStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.CalendarItemStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.CalendarItemStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayDate">
      <summary>Gets or sets the date to display.</summary>
      <returns>The date to display.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The given date is not in the range specified by <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> and <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" />.</exception>
    </member>
    <member name="E:System.Windows.Controls.Calendar.DisplayDateChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> property is changed.</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayDateEnd">
      <summary>Gets or sets the last date to be displayed.</summary>
      <returns>The last date to display.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayDateEndProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayDateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayDateStart">
      <summary>Gets or sets the first date to be displayed.</summary>
      <returns>The first date to display.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayDateStartProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayMode">
      <summary>Gets or sets a value indicating whether the calendar is displayed in months, years, or decades.</summary>
      <returns>A value indicating what length of time the <see cref="T:System.Windows.Controls.Calendar" /> should display.</returns>
    </member>
    <member name="E:System.Windows.Controls.Calendar.DisplayModeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> property is changed. </summary>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.FirstDayOfWeek">
      <summary>Gets or sets the day that is considered the beginning of the week.</summary>
      <returns>A <see cref="T:System.DayOfWeek" /> representing the beginning of the week. The default is <see cref="F:System.DayOfWeek.Sunday" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.FirstDayOfWeekProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.FirstDayOfWeek" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.FirstDayOfWeek" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.IsTodayHighlighted">
      <summary>Gets or sets a value indicating whether the current date is highlighted.</summary>
      <returns>true if the current date is highlighted; otherwise, false. The default is true. </returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.IsTodayHighlightedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Calendar" /> when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> for the <see cref="T:System.Windows.Controls.Calendar" /> object.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.SelectedDate">
      <summary>Gets or sets the currently selected date.</summary>
      <returns>The date currently selected. The default is null.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The given date is outside the range specified by <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> and <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" />-or-The given date is in the <see cref="P:System.Windows.Controls.Calendar.BlackoutDates" /> collection.</exception>
      <exception cref="T:System.InvalidOperationException">If set to anything other than null when <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> is set to <see cref="F:System.Windows.Controls.CalendarSelectionMode.None" />.</exception>
    </member>
    <member name="F:System.Windows.Controls.Calendar.SelectedDateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.SelectedDates">
      <summary>Gets a collection of selected dates.</summary>
      <returns>A <see cref="T:System.Windows.Controls.SelectedDatesCollection" /> object that contains the currently selected dates. The default is an empty collection.</returns>
    </member>
    <member name="E:System.Windows.Controls.Calendar.SelectedDatesChanged">
      <summary>Occurs when the collection returned by the <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> property is changed. </summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.SelectionMode">
      <summary>Gets or sets a value that indicates what kind of selections are allowed.</summary>
      <returns>A value that indicates the current selection mode. The default is <see cref="F:System.Windows.Controls.CalendarSelectionMode.SingleDate" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.SelectionModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Calendar.ToString">
      <summary>Provides a text representation of the selected date.</summary>
      <returns>A text representation of the selected date, or an empty string if <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> is null.</returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarBlackoutDatesCollection">
      <summary>Represents a collection of non-selectable dates in a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.#ctor(System.Windows.Controls.Calendar)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CalendarBlackoutDatesCollection" /> class. </summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Calendar" /> whose dates this object represents.</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.AddDatesInPast">
      <summary>Adds all dates before <see cref="P:System.DateTime.Today" /> to the collection.</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.Contains(System.DateTime)">
      <summary>Returns a value that represents whether this collection contains the specified date.</summary>
      <returns>true if the collection contains the specified date; otherwise, false.</returns>
      <param name="date">The date to search for.</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.Contains(System.DateTime,System.DateTime)">
      <summary>Returns a value that represents whether this collection contains the specified range of dates.</summary>
      <returns>true if all dates in the range are contained in the collection; otherwise, false.</returns>
      <param name="start">The start of the date range.</param>
      <param name="end">The end of the date range.</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.ContainsAny(System.Windows.Controls.CalendarDateRange)">
      <summary>Returns a value that represents whether this collection contains any date in the specified range.</summary>
      <returns>true if any date in the range is contained in the collection; otherwise, false.</returns>
      <param name="range">The range of dates to search for.</param>
    </member>
    <member name="T:System.Windows.Controls.CalendarDateChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" /> event. </summary>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateChangedEventArgs.AddedDate">
      <summary>Gets or sets the date to be newly displayed.</summary>
      <returns>The new date to display.</returns>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateChangedEventArgs.RemovedDate">
      <summary>Getsor sets the date that was previously displayed.</summary>
      <returns>The date previously displayed. </returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarDateRange">
      <summary>Represents a range of dates in a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarDateRange.#ctor(System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CalendarDateRange" /> class with a single date.</summary>
      <param name="day">The date to be represented by the range.</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarDateRange.#ctor(System.DateTime,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CalendarDateRange" /> class with a range of dates.</summary>
      <param name="start">The start of the range to be represented.</param>
      <param name="end">The end of the range to be represented.</param>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateRange.End">
      <summary>Gets the last date in the represented range.</summary>
      <returns>The last date in the represented range.</returns>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateRange.Start">
      <summary>Gets the first date in the represented range.</summary>
      <returns>The first date in the represented range.</returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarMode">
      <summary>Specifies values for the different modes of operation of a <see cref="T:System.Windows.Controls.Calendar" />. </summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarMode.Month">
      <summary>The <see cref="T:System.Windows.Controls.Calendar" /> displays a month at a time.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarMode.Year">
      <summary>The <see cref="T:System.Windows.Controls.Calendar" /> displays a year at a time.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarMode.Decade">
      <summary>The <see cref="T:System.Windows.Controls.Calendar" /> displays a decade at a time.</summary>
    </member>
    <member name="T:System.Windows.Controls.CalendarModeChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.Calendar.DisplayModeChanged" /> event. </summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarModeChangedEventArgs.#ctor(System.Windows.Controls.CalendarMode,System.Windows.Controls.CalendarMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CalendarModeChangedEventArgs" /> class. </summary>
      <param name="oldMode">The previous mode.</param>
      <param name="newMode">The new mode.</param>
    </member>
    <member name="P:System.Windows.Controls.CalendarModeChangedEventArgs.NewMode">
      <summary>Gets the new mode of the <see cref="T:System.Windows.Controls.Calendar" />.</summary>
      <returns>A <see cref="T:System.Windows.Controls.CalendarMode" /> representing the new mode. </returns>
    </member>
    <member name="P:System.Windows.Controls.CalendarModeChangedEventArgs.OldMode">
      <summary>Gets the previous mode of the <see cref="T:System.Windows.Controls.Calendar" />.</summary>
      <returns>A <see cref="T:System.Windows.Controls.CalendarMode" /> representing the previous mode. </returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarSelectionMode">
      <summary>Specifies values that describe the available selection modes for a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.SingleDate">
      <summary>Only a single date can be selected. Use the <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> property to retrieve the selected date.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.SingleRange">
      <summary>A single range of dates can be selected. Use the <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> property to retrieve the selected dates.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.MultipleRange">
      <summary>Multiple non-contiguous ranges of dates can be selected. Use the <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> property to retrieve the selected dates.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.None">
      <summary>No selections are allowed.</summary>
    </member>
    <member name="T:System.Windows.Controls.ChildWindow">
      <summary>Provides a window that can be displayed over a parent window and blocks interaction with the parent window.</summary>
    </member>
    <member name="M:System.Windows.Controls.ChildWindow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ChildWindow" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ChildWindow.Close">
      <summary>Closes a <see cref="T:System.Windows.Controls.ChildWindow" />.</summary>
    </member>
    <member name="E:System.Windows.Controls.ChildWindow.Closed">
      <summary>Occurs when the <see cref="T:System.Windows.Controls.ChildWindow" /> is closed.</summary>
    </member>
    <member name="E:System.Windows.Controls.ChildWindow.Closing">
      <summary>Occurs when the <see cref="T:System.Windows.Controls.ChildWindow" /> is closing.</summary>
    </member>
    <member name="P:System.Windows.Controls.ChildWindow.DialogResult">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ChildWindow" /> was accepted or canceled.</summary>
      <returns>true if the child window was accepted; false if the child window was canceled. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Controls.ChildWindow.HasCloseButton">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ChildWindow" /> has a close button.</summary>
      <returns>true if the child window has a close button; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Controls.ChildWindow.HasCloseButtonProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ChildWindow.HasCloseButton" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ChildWindow.HasCloseButton" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ChildWindow.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.ChildWindow" /> control when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.ChildWindow.OnClosed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.ChildWindow.Closed" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ChildWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.ChildWindow.Closing" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ChildWindow.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" /> for the <see cref="T:System.Windows.Controls.ChildWindow" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.ChildWindow.OnOpened">
      <summary>This method is called every time a <see cref="T:System.Windows.Controls.ChildWindow" /> is displayed.</summary>
    </member>
    <member name="P:System.Windows.Controls.ChildWindow.OverlayBrush">
      <summary>Gets or sets the visual brush that is used to cover the parent window when the child window is open.</summary>
      <returns>The visual brush that is used to cover the parent window when the <see cref="T:System.Windows.Controls.ChildWindow" /> is open. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.ChildWindow.OverlayBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ChildWindow.OverlayBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ChildWindow.OverlayBrush" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ChildWindow.OverlayOpacity">
      <summary>Gets or sets the opacity of the overlay brush that is used to cover the parent window when the child window is open.</summary>
      <returns>The opacity of the overlay brush that is used to cover the parent window when the <see cref="T:System.Windows.Controls.ChildWindow" /> is open. The default is 1.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ChildWindow.OverlayOpacityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ChildWindow.OverlayOpacity" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ChildWindow.OverlayOpacity" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ChildWindow.Show">
      <summary>Opens a <see cref="T:System.Windows.Controls.ChildWindow" /> and returns without waiting for the <see cref="T:System.Windows.Controls.ChildWindow" /> to close.</summary>
      <exception cref="T:System.InvalidOperationException">The child window is already in the visual tree.</exception>
    </member>
    <member name="P:System.Windows.Controls.ChildWindow.Title">
      <summary>Gets or sets the title of the <see cref="T:System.Windows.Controls.ChildWindow" />.</summary>
      <returns>The title of the child window. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.ChildWindow.TitleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ChildWindow.Title" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ChildWindow.Title" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.DatePicker">
      <summary>Represents a control that allows the user to select a date.</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DatePicker" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.BlackoutDates">
      <summary>Gets or sets a collection of dates that are marked as not selectable.</summary>
      <returns>A collection of dates that cannot be selected. The default value is an empty collection.</returns>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.CalendarClosed">
      <summary>Occurs when the drop-down <see cref="T:System.Windows.Controls.Calendar" /> is closed.</summary>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.CalendarOpened">
      <summary>Occurs when the drop-down <see cref="T:System.Windows.Controls.Calendar" /> is opened.</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.CalendarStyle">
      <summary>Gets or sets the style that is used when rendering the calendar.</summary>
      <returns>The style that is used when rendering the calendar.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.CalendarStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.CalendarStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.CalendarStyle" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.DateValidationError">
      <summary>Occurs when <see cref="P:System.Windows.Controls.DatePicker.Text" /> is assigned a value that cannot be interpreted as a date.</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.DisplayDate">
      <summary>Gets or sets the date to display.</summary>
      <returns>The date to display. The default is <see cref="P:System.DateTime.Today" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified date is not in the range defined by <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" />. and <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.DisplayDateEnd">
      <summary>Gets or sets the last date to be displayed.</summary>
      <returns>The last date to display.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.DisplayDateEndProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.DisplayDateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.DisplayDate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.DisplayDate" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.DisplayDateStart">
      <summary>Gets or sets the first date to be displayed.</summary>
      <returns>The first date to display.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.DisplayDateStartProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.FirstDayOfWeek">
      <summary>Gets or sets the day that is considered the beginning of the week.</summary>
      <returns>A <see cref="T:System.DayOfWeek" /> representing the beginning of the week. The default is <see cref="F:System.DayOfWeek.Sunday" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.FirstDayOfWeekProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.FirstDayOfWeek" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.FirstDayOfWeek" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.IsDropDownOpen">
      <summary>Gets or sets a value that indicates whether the drop-down <see cref="T:System.Windows.Controls.Calendar" /> is open or closed.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Calendar" /> is open; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.IsDropDownOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.IsDropDownOpen" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.IsDropDownOpen" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.IsTodayHighlighted">
      <summary>Gets or sets a value that indicates whether the current date will be highlighted.</summary>
      <returns>true if the current date is highlighted; otherwise, false. The default is true. </returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.IsTodayHighlightedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.IsTodayHighlighted" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.IsTodayHighlighted" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.DatePicker" /> control when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> for the <see cref="T:System.Windows.Controls.DatePicker" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnDateValidationError(System.Windows.Controls.DatePickerDateValidationErrorEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.SelectedDate">
      <summary>Gets or sets the currently selected date.</summary>
      <returns>The date currently selected. The default is null.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified date is not in the range defined by <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> and <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />, or the specified date is in the <see cref="P:System.Windows.Controls.DatePicker.BlackoutDates" /> collection. </exception>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.SelectedDateChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> property is changed.</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.SelectedDateFormat">
      <summary>Gets or sets the format that is used to display the selected date.</summary>
      <returns>The format that is used to display the selected date. The default is <see cref="F:System.Windows.Controls.DatePickerFormat.Short" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">An specified format is not valid.</exception>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.SelectedDateFormatProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.SelectedDateFormat" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.SelectedDateFormat" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.SelectedDateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.SelectionBackground">
      <summary>Gets or sets the background used for selected dates.</summary>
      <returns>The background used for selected dates.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.SelectionBackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.SelectionBackground" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.SelectionBackground" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.Text">
      <summary>Gets or sets the text that is displayed by the <see cref="T:System.Windows.Controls.DatePicker" />.</summary>
      <returns>The text displayed by the <see cref="T:System.Windows.Controls.DatePicker" />.</returns>
      <exception cref="T:System.FormatException">The text entered cannot be parsed to a valid date, and the exception is not suppressed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The text entered parses to a date that is not selectable.</exception>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.TextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.Text" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.Text" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.ToString"></member>
    <member name="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.#ctor(System.Exception,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" /> class. </summary>
      <param name="exception">The initial exception from the <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> event.</param>
      <param name="text">The text that caused the <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> event.</param>
    </member>
    <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception">
      <summary>Gets or sets the initial exception associated with the <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> event.</summary>
      <returns>The exception associated with the validation failure.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Text">
      <summary>Gets or sets the text that caused the <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> event.</summary>
      <returns>The text that caused the validation failure.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException">
      <summary>Gets or sets a value that indicates whether <see cref="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception" /> should be thrown.</summary>
      <returns>true if the exception should be thrown; otherwise, false.</returns>
      <exception cref="T:System.ArgumentException">If set to true and <see cref="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Controls.DatePickerFormat">
      <summary>Specifies date formats for a <see cref="T:System.Windows.Controls.DatePicker" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePickerFormat.Long">
      <summary>Specifies that the date should be displayed using unabbreviated days of the week and month names.</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePickerFormat.Short">
      <summary>Specifies that the date should be displayed using abbreviated days of the week and month names.</summary>
    </member>
    <member name="T:System.Windows.Controls.DateTimeTypeConverter">
      <summary>Provides a converter to convert <see cref="T:System.DateTime" /> objects to and from other representations.</summary>
    </member>
    <member name="M:System.Windows.Controls.DateTimeTypeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DateTimeTypeConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.DateTimeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value that indicates whether it is possible to convert the specified type to a <see cref="T:System.DateTime" /> with the specified format context.</summary>
      <returns>true if the conversion is possible; otherwise, false.</returns>
      <param name="context">The format context that is used to convert the specified type.</param>
      <param name="sourceType">The type to convert.</param>
    </member>
    <member name="M:System.Windows.Controls.DateTimeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value that indicates whether it is possible to convert a <see cref="T:System.DateTime" /> to the specified type within the specified format context.</summary>
      <returns>true if the conversion is possible; otherwise, false.</returns>
      <param name="context">The format context that is used to convert.</param>
      <param name="destinationType">The type to convert to.</param>
    </member>
    <member name="M:System.Windows.Controls.DateTimeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to a <see cref="T:System.DateTime" /> with the specified culture with the specified format context.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that represents <paramref name="value" />.</returns>
      <param name="context">The format context that is used to convert the specified type.</param>
      <param name="culture">The culture to use for the result.</param>
      <param name="value">The value to convert.</param>
      <exception cref="T:System.FormatException">The conversion cannot be performed.</exception>
    </member>
    <member name="M:System.Windows.Controls.DateTimeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.DateTime" /> with the specified culture to the specified object with the specified format context.</summary>
      <returns>An object of the specified type that represents <paramref name="value" />.</returns>
      <param name="context">The format context that is used to convert to the specified type.</param>
      <param name="culture">The culture to use for the converting date.</param>
      <param name="value">The date to convert.</param>
      <param name="destinationType">The type to convert to.</param>
    </member>
    <member name="T:System.Windows.Controls.Dock">
      <summary>Specifies values that control the behavior of a control positioned inside another control.</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Left">
      <summary>Specifies that the control should be positioned on the left of the control.</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Top">
      <summary>Specifies that the control should be positioned on top of the control.</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Right">
      <summary>Specifies that the control should be positioned on the right of the control.</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Bottom">
      <summary>Specifies that the control should be positioned at the bottom of the control.</summary>
    </member>
    <member name="T:System.Windows.Controls.GridSplitter">
      <summary>Represents a control that redistributes space between the rows of columns of a <see cref="T:System.Windows.Controls.Grid" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.GridSplitter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.GridSplitter" /> control when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" /> for the <see cref="T:System.Windows.Controls.GridSplitter" /> object.</returns>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.PreviewStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> that is used for previewing changes.</summary>
      <returns>The style that is used to preview changes.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.PreviewStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridSplitter.PreviewStyle" /> dependency property.</summary>
      <returns>An identifier for the <see cref="P:System.Windows.Controls.GridSplitter.PreviewStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.ShowsPreview">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.GridSplitter" /> displays a preview.</summary>
      <returns>true if a preview is displayed; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.ShowsPreviewProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview" /> dependency property.</summary>
      <returns>An identifier for the <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.HeaderedItemsControl">
      <summary>Represents a control that contains a header and collection of items.</summary>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.Header">
      <summary>Gets or sets the item that labels the control. </summary>
      <returns>The item that labels the control. The default value is null. </returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate">
      <summary>Gets or sets a data template that is used to display the contents of the control's <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" />.</summary>
      <returns>Gets or sets a data template that is used to display the contents of the control's header. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.ItemContainerStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> that is applied to the container element generated for each item.</summary>
      <returns>The <see cref="T:System.Windows.Style" /> that is applied to the container element generated for each item. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.ItemContainerStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.ItemContainerStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.HeaderedItemsControl.ItemContainerStyle" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderChanged(System.Object,System.Object)">
      <summary>Called when the value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> property changes.</summary>
      <param name="oldHeader">The old value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> property.</param>
      <param name="newHeader">The new value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when the value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> property changes.</summary>
      <param name="oldHeaderTemplate">The old value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> property.</param>
      <param name="newHeaderTemplate">The new value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item.</summary>
      <param name="element">The container element used to display the specified item.</param>
      <param name="item">The content to display.</param>
    </member>
    <member name="T:System.Windows.Controls.RoutedPropertyChangingEventArgs`1">
      <summary>Provides event data for various routed events that track property values changing. Typically the events denote a cancellable action.</summary>
      <typeparam name="T">The type of the value for the dependency property that is changing.</typeparam>
    </member>
    <member name="M:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.#ctor(System.Windows.DependencyProperty,`0,`0,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.RoutedPropertyChangingEventArgs`1" /> class,</summary>
      <param name="property">The <see cref="T:System.Windows.DependencyProperty" /> identifier for the property that is changing.</param>
      <param name="oldValue">The previous value of the property.</param>
      <param name="newValue">The new value of the property, assuming that the property change is not cancelled.</param>
      <param name="isCancelable">true if the property change is cancellable by setting <see cref="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.Cancel" /> to true in event handling. false if the property change is not cancellable.</param>
    </member>
    <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.Cancel">
      <summary>Gets or sets a value that determines whether the property change that originated the RoutedPropertyChanging event should be cancelled.</summary>
      <returns>true to cancel the property change; this resets the property to <see cref="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.OldValue" />. false to not cancel the property change; the value changes to <see cref="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.NewValue" />.</returns>
      <exception cref="T:System.InvalidOperationException">Attempted to cancel in an instance where <see cref="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.IsCancelable" /> is false.</exception>
    </member>
    <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.InCoercion">
      <summary>Gets or sets a value indicating whether internal value coercion is acting on the property change that originated the RoutedPropertyChanging event.</summary>
      <returns>true if coercion is active. false if coercion is not active.</returns>
    </member>
    <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.IsCancelable">
      <summary>Gets a value indicating whether the property change that originated the RoutedPropertyChanging event is cancellable.</summary>
      <returns>true if the property change is cancellable. false if the property change is not cancellable.</returns>
    </member>
    <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.NewValue">
      <summary>Gets a value that reports the new value of the changing property, assuming that the property change is not cancelled.</summary>
      <returns>The new value of the changing property.</returns>
    </member>
    <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.OldValue">
      <summary>Gets a value that reports the previous value of the changing property.</summary>
      <returns>The previous value of the changing property.</returns>
    </member>
    <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.Property">
      <summary>Gets the <see cref="T:System.Windows.DependencyProperty" /> identifier for the property that is changing.</summary>
      <returns>The <see cref="T:System.Windows.DependencyProperty" /> identifier for the property that is changing.</returns>
    </member>
    <member name="T:System.Windows.Controls.RoutedPropertyChangingEventHandler`1">
      <summary>Represents methods that handle various routed events that track property values changing. Typically the events denote a cancellable action.</summary>
      <param name="sender">The object where the initiating property is changing.</param>
      <param name="e">Event data for the event,</param>
      <typeparam name="T">The type of the value for the dependency property that is changing.</typeparam>
    </member>
    <member name="T:System.Windows.Controls.SelectedDatesCollection">
      <summary>Represents a set of selected dates in a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.SelectedDatesCollection.#ctor(System.Windows.Controls.Calendar)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.SelectedDatesCollection" /> class. </summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Calendar" /> associated with this object.</param>
    </member>
    <member name="M:System.Windows.Controls.SelectedDatesCollection.AddRange(System.DateTime,System.DateTime)">
      <summary>Adds all the dates in the specified range, which includes the first and last dates, to the collection.</summary>
      <param name="start">The first date to add to the collection.</param>
      <param name="end">The last date to add to the collection.</param>
    </member>
    <member name="T:System.Windows.Controls.TabControl">
      <summary>Represents a control that contains multiple items that share the same space on the screen.</summary>
    </member>
    <member name="M:System.Windows.Controls.TabControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TabControl" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.TabControl" /> when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> for the <see cref="T:System.Windows.Controls.TabControl" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <param name="e">Data used by the event.</param>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <param name="e">Data used by the event.</param>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.TabControl.SelectionChanged" /> event.</summary>
      <param name="args">Provides data for the <see cref="E:System.Windows.Controls.TabControl.SelectionChanged" /> event.</param>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedContent">
      <summary>Gets the content of the currently selected <see cref="T:System.Windows.Controls.TabItem" />.</summary>
      <returns>The content of the currently selected <see cref="T:System.Windows.Controls.TabItem" />. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.SelectedContent" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TabControl.SelectedContent" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedIndex">
      <summary>Gets or sets the index of the currently selected <see cref="T:System.Windows.Controls.TabItem" />.</summary>
      <returns>The index of the currently selected <see cref="T:System.Windows.Controls.TabItem" />, or -1 if a <see cref="T:System.Windows.Controls.TabItem" /> is not selected.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.SelectedIndex" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TabControl.SelectedIndex" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedItem">
      <summary>Gets or sets the currently selected <see cref="T:System.Windows.Controls.TabItem" />.</summary>
      <returns>The currently selected <see cref="T:System.Windows.Controls.TabItem" />, or null if a <see cref="T:System.Windows.Controls.TabItem" /> is not selected.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.SelectedItem" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TabControl.SelectedItem" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.TabControl.SelectionChanged">
      <summary>Occurs when the selected <see cref="T:System.Windows.Controls.TabItem" /> changes.</summary>
    </member>
    <member name="P:System.Windows.Controls.TabControl.TabStripPlacement">
      <summary>Gets or sets how <see cref="T:System.Windows.Controls.TabItem" /> headers align relative to the <see cref="T:System.Windows.Controls.TabItem" /> content.</summary>
      <returns>The alignment of <see cref="T:System.Windows.Controls.TabItem" /> headers relative to the <see cref="T:System.Windows.Controls.TabItem" /> content. The default is <see cref="F:System.Windows.Controls.Dock.Top" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.TabStripPlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.TabStripPlacement" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TabControl.TabStripPlacement" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.TabItem">
      <summary>Represents a selectable item in a <see cref="T:System.Windows.Controls.TabControl" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.TabItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TabItem" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.TabItem.HasHeader">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.TabItem" /> has a header.</summary>
      <returns>true if <see cref="P:System.Windows.Controls.TabItem.Header" /> is not null; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabItem.HasHeaderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabItem.HasHeader" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TabItem.HasHeader" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TabItem.Header">
      <summary>Gets or sets the header of the <see cref="T:System.Windows.Controls.TabItem" />.</summary>
      <returns>The current header of the <see cref="T:System.Windows.Controls.TabItem" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabItem.HeaderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabItem.Header" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TabItem.Header" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TabItem.HeaderTemplate">
      <summary>Gets or sets the template that is used to display the content of the <see cref="T:System.Windows.Controls.TabItem" /> header.</summary>
      <returns>The current template that is used to display <see cref="T:System.Windows.Controls.TabItem" /> header content.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabItem.HeaderTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TabItem.IsFocused"></member>
    <member name="F:System.Windows.Controls.TabItem.IsFocusedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabItem.IsFocused" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TabItem.IsFocused" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TabItem.IsSelected">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.TabItem" /> is currently selected.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.TabItem" /> is selected; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabItem.IsSelectedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.TabItem" /> when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnContentChanged(System.Object,System.Object)">
      <param name="oldContent">The previous <see cref="T:System.Windows.Controls.TabItem" /> content.</param>
      <param name="newContent">The new <see cref="T:System.Windows.Controls.TabItem" /> content.</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for this <see cref="T:System.Windows.Controls.TabItem" />.</summary>
      <returns>An automation peer for this <see cref="T:System.Windows.Controls.TabItem" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnHeaderChanged(System.Object,System.Object)">
      <summary>Called when the <see cref="P:System.Windows.Controls.TabItem.Header" /> property changes.</summary>
      <param name="oldHeader">The previous value of the <see cref="P:System.Windows.Controls.TabItem.Header" /> property.</param>
      <param name="newHeader">The new value of the <see cref="P:System.Windows.Controls.TabItem.Header" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when the <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" /> property changes.</summary>
      <param name="oldHeaderTemplate">The previous value of the <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" /> property.</param>
      <param name="newHeaderTemplate">The new value of the <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnIsFocusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <param name="e">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>Called to indicate that the <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> property has changed to true.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>Called to indicate that the <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> property has changed to false.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Windows.Controls.TabItem.TabStripPlacement">
      <summary>Gets the location of the tab strip relative to the <see cref="T:System.Windows.Controls.TabItem" /> content.</summary>
      <returns>The location of the tab strip relative to the <see cref="T:System.Windows.Controls.TabItem" /> content.</returns>
    </member>
    <member name="T:System.Windows.Controls.TreeView">
      <summary>Represents a control that displays hierarchical data in a tree structure that has items that can expand and collapse.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TreeView" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.TreeView.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Removes all templates, styles, and bindings for the object displayed as a <see cref="T:System.Windows.Controls.TreeViewItem" />.</summary>
      <param name="element">The <see cref="T:System.Windows.Controls.TreeViewItem" /> element to clear.</param>
      <param name="item">The item that is contained in the <see cref="T:System.Windows.Controls.TreeViewItem" />.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.GetContainerForItemOverride">
      <summary>Creates a <see cref="T:System.Windows.Controls.TreeViewItem" /> to display content.</summary>
      <returns>A <see cref="T:System.Windows.Controls.TreeViewItem" /> to use as a container for content.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines whether the specified item is a <see cref="T:System.Windows.Controls.TreeViewItem" />, which is the default container for items in the <see cref="T:System.Windows.Controls.TreeView" /> control.</summary>
      <returns>true if the item is a <see cref="T:System.Windows.Controls.TreeViewItem" />; otherwise, false,</returns>
      <param name="item">The object to evaluate.</param>
    </member>
    <member name="P:System.Windows.Controls.TreeView.ItemContainerStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> that is applied to the container element generated for each item.</summary>
      <returns>The <see cref="T:System.Windows.Style" /> applied to the container element that contains each item.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeView.ItemContainerStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeView.ItemContainerStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TreeView.ItemContainerStyle" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.TreeView" /> control when a new control template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> for the <see cref="T:System.Windows.Controls.TreeView" /> control.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Makes adjustments to the <see cref="T:System.Windows.Controls.TreeView" /> control when the value of the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes.</summary>
      <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> that contains data about the change. </param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event when a key is pressed while the control has focus.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e " />is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseEnter" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> event.</summary>
      <param name="e">
        <see cref="T:System.Windows.Input.MouseEventArgs" />
      </param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Provided handling for the <see cref="E:System.Windows.UIElement.MouseMove" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnSelectedItemChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
      <summary>Raises the <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> event when the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> property value changes.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the container element to display the specified item.</summary>
      <param name="element">The container element used to display the specified item.</param>
      <param name="item">The item to display.</param>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedItem">
      <summary>Gets the selected item in a <see cref="T:System.Windows.Controls.TreeView" />.</summary>
      <returns>The currently selected item or null if no item is selected. The default value is null.</returns>
    </member>
    <member name="E:System.Windows.Controls.TreeView.SelectedItemChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> property changes.</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedValue">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> property that is specified by the <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> property.</summary>
      <returns>The value of the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> property that is specified by the <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> property, or null if no item is selected. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedValuePath">
      <summary>Gets or sets the property path that is used to get the <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> property of the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> property in a <see cref="T:System.Windows.Controls.TreeView" />.</summary>
      <returns>The property path that is used to get the <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> property of the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> property in a <see cref="T:System.Windows.Controls.TreeView" />. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedValuePathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> dependency property. </returns>
    </member>
    <member name="T:System.Windows.Controls.TreeViewItem">
      <summary>Provides a selectable item for the <see cref="T:System.Windows.Controls.TreeView" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TreeViewItem" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Removes all templates, styles, and bindings for the object displayed as a <see cref="T:System.Windows.Controls.TreeViewItem" />.</summary>
      <param name="element">The <see cref="T:System.Windows.Controls.TreeViewItem" /> element to clear.</param>
      <param name="item">The item that is contained in the <see cref="T:System.Windows.Controls.TreeViewItem" />.</param>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Collapsed">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> property changes from true to false.</summary>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Expanded">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> property changes from false to true.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.GetContainerForItemOverride">
      <summary>Creates a <see cref="T:System.Windows.Controls.TreeViewItem" /> to display content.</summary>
      <returns>A <see cref="T:System.Windows.Controls.TreeViewItem" /> to use as a container for content.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.HasItems">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Controls.TreeViewItem" /> contains items.</summary>
      <returns>true if this <see cref="T:System.Windows.Controls.TreeViewItem" /> contains items; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.HasItemsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeViewItem.HasItems" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TreeViewItem.HasItems" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsExpanded">
      <summary>Gets or sets a value that indicates whether the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> contained by this <see cref="T:System.Windows.Controls.TreeViewItem" /> are expanded or collapsed.</summary>
      <returns>true to indicate the contents of the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection are expanded; false to indicate the items are collapsed. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsExpandedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines whether an object is a <see cref="T:System.Windows.Controls.TreeViewItem" />.</summary>
      <returns>true if <paramref name="item" /> is a <see cref="T:System.Windows.Controls.TreeViewItem" />; otherwise, false.</returns>
      <param name="item">The object to evaluate.</param>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsSelected">
      <summary>Gets or sets a value that indicates whether this <see cref="T:System.Windows.Controls.TreeViewItem" /> is selected.</summary>
      <returns>true if this <see cref="T:System.Windows.Controls.TreeViewItem" /> is selected; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsSelectedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsSelectionActive">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.TreeViewItem" /> has focus.</summary>
      <returns>true if this <see cref="T:System.Windows.Controls.TreeViewItem" /> has focus; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsSelectionActiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelectionActive" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelectionActive" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.TreeViewItem" /> control when a new control template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnCollapsed(System.Windows.RoutedEventArgs)">
      <summary>Raises a <see cref="E:System.Windows.Controls.TreeViewItem.Collapsed" /> event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> property changes from true to false.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> object for the <see cref="T:System.Windows.Controls.TreeViewItem" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnExpanded(System.Windows.RoutedEventArgs)">
      <summary>Raises an <see cref="E:System.Windows.Controls.TreeViewItem.Expanded" /> event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> property changes from false to true.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Makes adjustments to the <see cref="T:System.Windows.Controls.TreeViewItem" /> when the value of the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes. </summary>
      <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> that contains data about the change.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event when the <see cref="T:System.Windows.Controls.TreeViewItem" /> has focus.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseEnter" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.TreeViewItem.Selected" /> event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> property changes from false to true.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.TreeViewItem.Unselected" /> event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> property changes from true to false.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified container element to display the specified item.</summary>
      <param name="element">Container element used to display the specified item.</param>
      <param name="item">The item to display.</param>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Selected">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> property of a <see cref="T:System.Windows.Controls.TreeViewItem" /> changes from false to true.</summary>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Unselected">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> property of a <see cref="T:System.Windows.Controls.TreeViewItem" /> changes from true to false.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarButton">
      <summary>Represents a button on a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> class. </summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.CalendarButton.CalendarButtonMouseDown"></member>
    <member name="E:System.Windows.Controls.Primitives.CalendarButton.CalendarButtonMouseUp"></member>
    <member name="M:System.Windows.Controls.Primitives.CalendarButton.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> when a new template is applied.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarDayButton">
      <summary>Represents a day on a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarDayButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> class. </summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.CalendarDayButton.CalendarDayButtonMouseDown"></member>
    <member name="E:System.Windows.Controls.Primitives.CalendarDayButton.CalendarDayButtonMouseUp"></member>
    <member name="M:System.Windows.Controls.Primitives.CalendarDayButton.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> when a new template is applied.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarItem">
      <summary>Represents the currently displayed month or year on a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarItem.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> when a new template is applied.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DatePickerTextBox">
      <summary>Represents the text input of a <see cref="T:System.Windows.Controls.DatePicker" />. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" /> when a new template is applied.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DatePickerTextBox.Watermark">
      <summary>Gets or sets the content displayed as a watermark in the <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" /> when it is empty.</summary>
      <returns>The content displayed as a watermark in the <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" /> when it is empty.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DatePickerTextBox.WatermarkProperty">
      <summary>Indentifies the <see cref="P:System.Windows.Controls.Primitives.DatePickerTextBox.Watermark" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TabPanel">
      <summary>Handles the layout of <see cref="T:System.Windows.Controls.TabItem" /> objects on a <see cref="T:System.Windows.Controls.TabControl" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.TabPanel" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges and sizes the content of a <see cref="T:System.Windows.Controls.Primitives.TabPanel" /> object.</summary>
      <returns>The size of the arranged control.</returns>
      <param name="finalSize">The size that a tab panel uses to position child elements.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.MeasureOverride(System.Windows.Size)">
      <summary>Called when remeasuring the control is required.</summary>
      <returns>The measured size of the control.</returns>
      <param name="availableSize">Constraint size as an upper limit. The return value should not exceed this size.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Reactive.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Reactive</name>
    </assembly>
    <members>
        <member name="T:System.Collections.Generic.IObservable`1">
            <summary>
            Represents a collection which can iterate its collection in a push-style.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.IObservable`1.Subscribe(System.Collections.Generic.IObserver{`0})">
            <summary>
            Subscribes an observer to an observable sequence.  Returns an object that can be used to unsubscribe the observer from the observable sequence.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.IObserver`1">
            <summary>
            Supports push-style iteration over a generic collection.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.IObserver`1.OnNext(`0)">
            <summary>
            Notifies the observer of a new value in the sequence.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.IObserver`1.OnError(System.Exception)">
            <summary>
            Notifies the observer that an exception has occurred and the sequence is terminated.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.IObserver`1.OnCompleted">
            <summary>
            Notifies the observer of the end of the sequence.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.IObserver`2">
            <summary>
            Supports push-style iteration over a generic collection.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.IObserver`2.OnNext(`0)">
            <summary>
            Notifies the observer of a new value in the sequence and gets the corresponding result.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.IObserver`2.OnError(System.Exception)">
            <summary>
            Notifies the observer that an exception has occurred and the sequence is terminated and gets the corresponding result.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.IObserver`2.OnCompleted">
            <summary>
            Notifies the observer of the end of the sequence and gets the corresponding result.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.AsyncSubject`1">
            <summary>
            Represents the result of an asynchronous operation.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.Subject`1">
            <summary>
            Represents an object which is both an observer and an observable.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.ISubject`1">
            <summary>
            Represents an object that is an observable observer.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.ISubject`2">
            <summary>
            Represents an object that is an observable observer.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Subject`1.#ctor">
            <summary>
            Creates a subject.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Subject`1.OnNext(`0)">
            <summary>
            Notifies all subscribed observers with a value.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Subject`1.OnError(System.Exception)">
            <summary>
            Notifies all subscribed observers with an exception.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Subject`1.OnCompleted">
            <summary>
            Notifies all subscribed observers of the end of the sequence.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Subject`1.Dispose">
            <summary>
            Disposes the subject and unsubscribes of all the subscribed observers.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Subject`1.Subscribe(System.Collections.Generic.IObserver{`0})">
            <summary>
            Subscribes an observer to the subject.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Subject`1.Unsubscribe(System.Collections.Generic.IObserver{`0})">
            <summary>
            Unsubscribes an observer from the subject.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.AsyncSubject`1.#ctor(System.Collections.Generic.Notification{`0})">
            <summary>
            Creates a subject with the specified notification that is cached for all future observations.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.AsyncSubject`1.#ctor">
            <summary>
            Creates a subject that can only receive one notification and that notification is cached for all future observations.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.AsyncSubject`1.OnNext(`0)">
            <summary>
            Notifies all subscribed observers with the specified value as well as a notification of the end of the sequence.  All future observers will also be notified with the value and the notification of the end of sequence.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.AsyncSubject`1.OnError(System.Exception)">
            <summary>
            Notifies all subscribed observers with an exception.  All future observers will also be notified with an exception.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.AsyncSubject`1.OnCompleted">
            <summary>
            Notifies all subscribed observers of the end of the sequence.  All future observers will also be notified of the end of the sequence.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.AsyncSubject`1.Subscribe(System.Collections.Generic.IObserver{`0})">
            <summary>
            Subscribes an observer to the subject.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.BehaviorSubject`1">
            <summary>
            Represents a value that changes over time.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.BehaviorSubject`1.#ctor(System.Collections.Generic.Notification{`0})">
            <summary>
            Creates a subject that caches its last notification and begins with the specified notification.  Any observers which are subscribed will received the cached notification as well as future notifications.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.BehaviorSubject`1.#ctor">
            <summary>
            Creates a subject that caches its last notification and begins with no cached notification.  Any observers which are subscribed will received the cached notification if there is one as well as future notifications.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.BehaviorSubject`1.OnNext(`0)">
            <summary>
            Notifies all subscribed observerss with a value.  This also changes the cached notification.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.BehaviorSubject`1.OnError(System.Exception)">
            <summary>
            Notifies all subscribed observers with an exception.  This also changes the cached notification.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.BehaviorSubject`1.OnCompleted">
            <summary>
            Notifies all subscribed observerss of the end of the sequence.  This also changes the cached notification.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.BehaviorSubject`1.Subscribe(System.Collections.Generic.IObserver{`0})">
            <summary>
            Subscribes an observer to the subject.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.EventSubject`1">
            <summary>
            Represents a .NET event.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.EventSubject`1.#ctor">
            <summary>
            Creates a subject that represents a standard .NET event.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.EventSubject`1.OnNext(System.Object,`0)">
            <summary>
            Notifies all subscribed observers with a standard .NET event value.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.IObservable`2">
            <summary>
            Represents a collection which can iterate its collection in a push-style.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.IObservable`2.Subscribe(System.Collections.Generic.IObserver{`0,`1})">
            <summary>
            Subscribes an observer to an observable sequence.  Returns an object that can be used to unsubscribe the observer from the observable sequence.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.Notification`1">
            <summary>
            Represents a reified notification to an observer.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Notification`1.CreateOnNext(`0)">
            <summary>
            Creates a reified notification of a new value.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Notification`1.CreateOnError(System.Exception)">
            <summary>
            Creates a reified notification of an exception.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Notification`1.CreateOnCompleted">
            <summary>
            Creates a reified notification of the end of a sequence.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Notification`1.Accept(System.Collections.Generic.IObserver{`0})">
            <summary>
            Notifies the specified observer with this notification.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Notification`1.Accept``1(System.Collections.Generic.IObserver{`0,``0})">
            <summary>
            Notifies the specified observer with this notification and gets a result.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.Notification`1.OnNext">
            <summary>
            Represents a reified OnNext notification to an observer.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Notification`1.OnNext.#ctor(`0)">
            <summary>
            Constructs a reified notification of a new value.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Notification`1.OnNext.Accept(System.Collections.Generic.IObserver{`0})">
            <summary>
            Notifies the specified observer with this notification.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Notification`1.OnNext.Accept``1(System.Collections.Generic.IObserver{`0,``0})">
            <summary>
            Notifies the specified observer with this notification and gets a result.
            </summary>
        </member>
        <member name="P:System.Collections.Generic.Notification`1.OnNext.Value">
            <summary>
            Gets the value corresponding to the notification.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.Notification`1.OnError">
            <summary>
            Represents a reified OnError notification to an observer.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Notification`1.OnError.#ctor(System.Exception)">
            <summary>
            Constructs a reified notification of an exception.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Notification`1.OnError.Accept(System.Collections.Generic.IObserver{`0})">
            <summary>
            Notifies the specified observer with this notification.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Notification`1.OnError.Accept``1(System.Collections.Generic.IObserver{`0,``0})">
            <summary>
            Notifies the specified observer with this notification and gets a result.
            </summary>
        </member>
        <member name="P:System.Collections.Generic.Notification`1.OnError.Exception">
            <summary>
            Gets the exception corresponding to the notification.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.Notification`1.OnCompleted">
            <summary>
            Represents a reified OnCompleted notification to an observer.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Notification`1.OnCompleted.#ctor">
            <summary>
            Constructs a reified notification of the end of a sequence.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Notification`1.OnCompleted.Accept(System.Collections.Generic.IObserver{`0})">
            <summary>
            Notifies the specified observer with this notification.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Notification`1.OnCompleted.Accept``1(System.Collections.Generic.IObserver{`0,``0})">
            <summary>
            Notifies the specified observer with this notification and gets a result.
            </summary>
        </member>
        <member name="T:System.Linq.Observable">
            <summary>
            Provides a set of static methods for querying observable sequences.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Cons``1(``0,System.Collections.Generic.IObservable{``0})">
            <summary>
            Prepends a value to an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.SelectMany``2(System.Collections.Generic.IObservable{``0},System.Collections.Generic.IObservable{``1})">
            <summary>
            Projects each value of an observable sequence to an observable sequence and flattens the resulting observable sequences into one observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Do``1(System.Collections.Generic.IObservable{``0},System.Action{``0})">
            <summary>
            Invokes the specified action for each value in the observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Until``2(System.Collections.Generic.IObservable{``0},System.Collections.Generic.IObservable{``1})">
            <summary>
            Returns the values from the source observable sequence until any notification from the other observable sequence occurs.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.WaitUntil``2(System.Collections.Generic.IObservable{``0},System.Collections.Generic.IObservable{``1})">
            <summary>
            Waits to return any values from the source observable sequence until any notification from the other observable sequence occurs.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Merge``1(System.Collections.Generic.IObservable{``0},System.Collections.Generic.IObservable{``0})">
            <summary>
            Merges two observable sequences into a single observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Merge``1(System.Collections.Generic.IObservable{``0}[])">
            <summary>
            Merges all the observable sequences into a single observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Merge``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IObservable{``0}})">
            <summary>
            Merges all the observable sequences into a single observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Take``1(System.Collections.Generic.IObservable{``0},System.Int32)">
            <summary>
            Returns a specified number of contiguous values from the start of an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Skip``1(System.Collections.Generic.IObservable{``0},System.Int32)">
            <summary>
            Bypasses a specified number of values in an observable sequence and then returns the remaining values.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.TakeWhile``1(System.Collections.Generic.IObservable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Returns values from an observable sequence as long as a specified condition is true, and then skips the remaining values.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.SkipWhile``1(System.Collections.Generic.IObservable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Bypasses values in an observable sequence as long as a specified condition is true and then returns the remaining values.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ToObservable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts an enumerable sequence to an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ToEnumerable``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Converts an observable sequence to an enumerable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Scan``2(System.Collections.Generic.IObservable{``0},``1,System.Func{``1,``0,``1})">
            <summary>
            Applies an accumulator function over an observable sequence and returns the intermediate values.  The specified seed value is used as the initial accumulator value.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Scan``1(System.Collections.Generic.IObservable{``0},System.Func{``0,``0,``0})">
            <summary>
            Applies an accumulator function over an observable sequence and returns the intermediate values.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Aggregate``2(System.Collections.Generic.IObservable{``0},``1,System.Func{``1,``0,``1})">
            <summary>
            Applies an accumulator function over an observable sequence.  The specified seed value is used as the initial accumulator value.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Aggregate``1(System.Collections.Generic.IObservable{``0},System.Func{``0,``0,``0})">
            <summary>
            Applies an accumulator function over an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.First``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Returns the first value of an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.FirstOrDefault``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Returns the first value of an observable sequence, or a default value if no value is found.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Last``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Returns the last value of an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.LastOrDefault``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Returns the last value of an observable sequence, or a default value if no value is found.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Single``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Returns the only value of an observable sequence, and throws an exception if there is not exactly one value in the observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.SingleOrDefault``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Returns the only value of an observable sequence, or a default value if the observable sequence is empty; this method throws an exception if there is more than one value in the observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Count``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Returns the number of values in an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.LongCount``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Returns an Int64 that represents the total number of values in an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.HoldUntilChanged``2(System.Collections.Generic.IObservable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Returns an observable sequence that contains only distinct contiguous values according to the keySelector and comparer.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.HoldUntilChanged``1(System.Collections.Generic.IObservable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Returns an observable sequence that contains only distinct contiguous values according to the comparer.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.HoldUntilChanged``2(System.Collections.Generic.IObservable{``0},System.Func{``0,``1})">
            <summary>
            Returns an observable sequence that contains only distinct contiguous values according to the keySelector.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.HoldUntilChanged``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Returns an observable sequence that contains only distinct contiguous values.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ToAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult})">
            <summary>
            Converts a Begin/End invoke function pair into a function that when invoked will return an observable sequence that notifies its observers when the underlying asynchronous computation completes.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ToAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult})">
            <summary>
            Converts a Begin/End invoke function pair into a function that when invoked will return an observable sequence that notifies its observers when the underlying asynchronous computation completes.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ToAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult})">
            <summary>
            Converts a Begin/End invoke function pair into a function that when invoked will return an observable sequence that notifies its observers when the underlying asynchronous computation completes.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ToAsync``1(System.Func{``0})">
            <summary>
            Converts a synchronous function into a function that when invoked will return an observable sequence that notifies its observers when the underlying synchronous function completes asynchronously.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ToAsync``2(System.Func{``0,``1})">
            <summary>
            Converts a synchronous function into a function that when invoked will return an observable sequence that notifies its observers when the underlying synchronous function completes asynchronously.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ToAsync``3(System.Func{``0,``1,``2})">
            <summary>
            Converts a synchronous function into a function that when invoked will return an observable sequence that notifies its observers when the underlying synchronous function completes asynchronously.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ToAsync(System.Action)">
            <summary>
            Converts a synchronous action into a function that when invoked will return an observable sequence that notifies its observers when the underlying synchronous action completes asynchronously.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ToAsync``1(System.Action{``0})">
            <summary>
            Converts a synchronous action into a function that when invoked will return an observable sequence that notifies its observers when the underlying synchronous action completes asynchronously.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ToAsync``2(System.Action{``0,``1})">
            <summary>
            Converts a synchronous action into a function that when invoked will return an observable sequence that notifies its observers when the underlying synchronous action completes asynchronously.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Contains``1(System.Collections.Generic.IObservable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Determines whether an observable sequence contains a specified value by using a specified comparer.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Contains``1(System.Collections.Generic.IObservable{``0},``0)">
            <summary>
            Determines whether an observable sequence contains a specified value by using the default equality comparer.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Range(System.Int32,System.Int32)">
            <summary>
            Generates an observable sequence of integral numbers within a specified range.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Timeout``1(System.Collections.Generic.IObservable{``0},System.Int32)">
            <summary>
            Returns the observable sequence unless the specified time has elapsed first in which case it notifies the observers with an timeout exception.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Timeout``1(System.Collections.Generic.IObservable{``0},System.Int32,System.Collections.Generic.IObservable{``0})">
            <summary>
            Returns the observable sequence unless the specified time has elapsed first in which case it returns the alternative observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ForkJoin``3(System.Collections.Generic.IObservable{``0},System.Collections.Generic.IObservable{``1},System.Func{``0,``1,``2})">
            <summary>
            Executes two observable sequences in parallel and wait until both have produced a first value and then combine those values.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ForkJoin``1(System.Collections.Generic.IObservable{``0}[])">
            <summary>
            Executes all the observable sequences in parallel and wait until they all have produced a first value and then combine those values.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ForkJoin``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IObservable{``0}})">
            <summary>
            Executes all the observable sequences in parallel and wait until they all have produced a first value and then combine those values.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Start``1(System.Func{``0})">
            <summary>
            Invokes the specified function asynchronously and return observable sequence representing the result.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Start(System.Action)">
            <summary>
            Invokes the specified action asynchronously and return observable sequence representing the result.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.MostRecent``1(System.Collections.Generic.IObservable{``0},``0)">
            <summary>
            Samples the most recent value (buffer of size one) in an observable sequence at the moment the next value is requested from the enumerable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Next``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Waits for the next value in an observable sequence at the moment the next value is requested from the enumerable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Latest``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Returns the latest value in an observable sequence or waits for the next value if the latest value has already been enumerated at the moment the next value is requested from the enumerable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.SelectMany``2(System.Collections.Generic.IObservable{``0},System.Func{``0,System.Collections.Generic.IObservable{``1}})">
            <summary>
            Projects each value of an observable sequence to an observable sequence and flattens the resulting observable sequences into one observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.SelectMany``3(System.Collections.Generic.IObservable{``0},System.Func{``0,System.Collections.Generic.IObservable{``1}},System.Func{``0,``1,``2})">
            <summary>
            Projects each value of an observable sequence to an observable sequence, flattens the resulting observable sequences into one observable sequence, and invokes a result selector function on each value therein.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Zip``3(System.Collections.Generic.IObservable{``0},System.Collections.Generic.IObservable{``1},System.Func{``0,``1,``2})">
            <summary>
            Projects two observable sequences into one observable sequence by applying a combiner function to values in the same position from the two observable sequences.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.CombineLatest``3(System.Collections.Generic.IObservable{``0},System.Collections.Generic.IObservable{``1},System.Func{``0,``1,``2})">
            <summary>
            Projects two observable sequences into one observable sequence by applying a combiner function whenever one of the observable sequences has a new value.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Sample``1(System.Collections.Generic.IObservable{``0},System.Int32)">
            <summary>
            Samples the latest value during the specified interval.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Throttle``1(System.Collections.Generic.IObservable{``0},System.Int32)">
            <summary>
            Filters values from an observable sequence which are followed by another value within the specified time.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Amb``1(System.Collections.Generic.IObservable{``0},System.Collections.Generic.IObservable{``0})">
            <summary>
            Returns the observable sequence that has the first notification.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Amb``1(System.Collections.Generic.IObservable{``0}[])">
            <summary>
            Returns the observable sequence that has the first notification.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Amb``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IObservable{``0}})">
            <summary>
            Returns the observable sequence that has the first notification.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.GetEnumerator``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Returns an enumerator that iterates through the observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Spawn``2(System.Collections.Generic.IObservable{``0},System.Func{System.Func{``0},``1})">
            <summary>
            Executes the source and the selector in parallel and bind the first value of the source observable sequence to the parameter of the selector function.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Repeat">
            <summary>
            Returns the infinite observable sequence containing unit values.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Repeat``1(``0)">
            <summary>
            Returns the infinite observable sequence containing the specified value.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Finally``1(System.Collections.Generic.IObservable{``0},System.Collections.Generic.IObservable{``0})">
            <summary>
            Continues the first observable sequence with the second observable sequence when the first observable sequence terminates either normally or by an exception.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ToSubject``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Returns a subject that is subscribed to the observable sequence.  Disposing the subject will unsubscribe the subject.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ToBehavior``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Returns a subject that caches the latest value and is subscribed to the observable sequence.  Disposing the subject will unsubscribe the subject.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ToAsync``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Returns a subject that represents the first value in an observable sequence that subscribed to the observable sequence.  Disposing the subject will unsubscribe the subject.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Create``1(System.Func{System.Collections.Generic.IObserver{``0},System.IDisposable})">
            <summary>
            Creates an observable sequence from the specified subscribe implementation.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Never``1">
            <summary>
            Returns an observable sequence that never notifies its observers.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Empty``1">
            <summary>
            Returns an empty observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Return``1(``0)">
            <summary>
            Returns an observable sequence that notifies its observers with a single value.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Throw``1(System.Exception)">
            <summary>
            Returns an observable sequence that notifies its observers with an exception.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Defer``1(System.Func{System.Collections.Generic.IObservable{``0}})">
            <summary>
            Returns an observable sequence that invokes the specified function whenever a new observer subscribes.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Select``2(System.Collections.Generic.IObservable{``0},System.Func{``0,``1})">
            <summary>
            Projects each value of a observable sequence into a new form.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Where``1(System.Collections.Generic.IObservable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Filters the values of an observable sequence based on a predicate.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Subscribe``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IObserver{``0})">
            <summary>
            Subscribes an observer to an enumerable sequence.  Returns an object that can be used to unsubscribe the observer from the enumerable.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Reify``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Reifies the notifications of an observable sequence into an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Dispatch``1(System.Collections.Generic.IObservable{System.Collections.Generic.Notification{``0}})">
            <summary>
            Transforms an observable sequence of reified notifications into a normal observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Flatten``1(System.Collections.Generic.IObservable{System.Collections.Generic.IObservable{``0}})">
            <summary>
            Transforms an observable sequence of observable sequences into an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.FromEvent``2(System.Func{System.EventHandler{``1},``0},System.Action{``0},System.Action{``0})">
            <summary>
            Returns an observable sequence that notifies its observers whenever the underlying .NET is raised.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.FromEvent``1(System.Action{System.EventHandler{``0}},System.Action{System.EventHandler{``0}})">
            <summary>
            Returns an observable sequence that notifies its observers whenever the underlying .NET is raised.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.FromEvent``1(System.Object,System.String)">
            <summary>
            Returns an observable sequence that notifies its observers whenever the underlying .NET is raised.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Interval(System.Int32)">
            <summary>
            Returns an observable sequence that notifies its observers on a specified interval.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Timeout(System.Int32)">
            <summary>
            Returns an observable sequence that notifies its observers when the specified time has elapsed.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Post``1(System.Collections.Generic.IObservable{``0},System.Threading.SynchronizationContext)">
            <summary>
            Returns an observable sequence that asynchronously notifies its observers on the specified synchronization context.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Send``1(System.Collections.Generic.IObservable{``0},System.Threading.SynchronizationContext)">
            <summary>
            Returns an observable sequence that synchronously notifies its observers on the specified synchronization context.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ToAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0})">
            <summary>
            Converts a Begin/End invoke function pair into a function that when invoked will return an observable sequence that notifies its observers when the underlying asynchronous computation completes.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ToAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1})">
            <summary>
            Converts a Begin/End invoke function pair into a function that when invoked will return an observable sequence that notifies its observers when the underlying asynchronous computation completes.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.ToAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2})">
            <summary>
            Converts a Begin/End invoke function pair into a function that when invoked will return an observable sequence that notifies its observers when the underlying asynchronous computation completes.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Synchronize``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Synchronizes the notifications of an observable sequence such that they are executed atomically.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Let``2(System.Collections.Generic.IObservable{``0},System.Func{System.Collections.Generic.IObservable{``0},System.Collections.Generic.IObservable{``1}})">
            <summary>
            Within the specified function, the source is bound to the parameter and can be used multiple times without duplication of side-effects.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.LetRec``1(System.Func{System.Collections.Generic.IObservable{``0},System.Collections.Generic.IObservable{``0}})">
            <summary>
            Within the specified function, the result of the function is recursively bound to the parameter and can be used multiple times without duplication of side-effects.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Spawn``2(System.Collections.Generic.IObservable{``0},System.Func{System.Func{``0},System.Collections.Generic.IObservable{``1}})">
            <summary>
            Executes the source and the selector in parallel and bind the first value of the source observable sequence to the parameter of the selector function.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.AsObservable``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Wraps an observable sequence to hide its identity and make subscription asynchronous.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Concat``1(System.Collections.Generic.IObservable{``0},System.Collections.Generic.IObservable{``0})">
            <summary>
            Concatenates two observable sequences.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Catch``2(System.Collections.Generic.IObservable{``0},System.Func{``1,System.Collections.Generic.IObservable{``0}})">
            <summary>
            Continues an observable sequence that is terminated by an exception with the observable sequence produced by the specified handler.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Repeat``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Repeats the observable sequence indefinitely until it notifies its observers with an exception.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Retry``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Repeats the observable sequence until it successfully terminates.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Delay``1(System.Collections.Generic.IObservable{``0},System.Int32)">
            <summary>
            Time shifts the observable sequence by the specified time.  The relative time intervals between notifications are preserved.
            </summary>
        </member>
        <member name="M:System.Linq.Observable.Generate``2(``0,System.Func{``0,System.Boolean},System.Func{``0,``1},System.Func{``0,System.Int32},System.Func{``0,``0})">
            <summary>
            Generates an observable sequence by iterating a state from an initial state until the condition fails.  For each state, a value is generated at a time interval dependent on the state.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.ObservableExtensions">
            <summary>
            Provides a set of static methods for subscribing delegates to observables.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ObservableExtensions.Subscribe``1(System.Collections.Generic.IObservable{``0})">
            <summary>
            Cause the observable sequence to evaluate.  Returns an object that can be used to unsubscribe the observer from the observable.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ObservableExtensions.Subscribe``1(System.Collections.Generic.IObservable{``0},System.Action{``0})">
            <summary>
            Subscribes a value handler to an observable sequence.  Returns an object that can be used to unsubscribe the observer from the observable.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ObservableExtensions.Subscribe``1(System.Collections.Generic.IObservable{``0},System.Action{``0},System.Action{System.Exception})">
            <summary>
            Subscribes a value handler and an exception handler to an observable sequence.  Returns an object that can be used to unsubscribe the observer from the observable.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ObservableExtensions.Subscribe``1(System.Collections.Generic.IObservable{``0},System.Action{``0},System.Action{System.Exception},System.Action)">
            <summary>
            Subscribes a value handler, an exception handler, and a completion handler to an observable sequence.  Returns an object that can be used to unsubscribe the observer from the observable.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ObservableExtensions.Subscribe``1(System.Collections.Generic.IObservable{``0},System.Action)">
            <summary>
            Subscribes a handler to an observable sequence.  Returns an object that can be used to unsubscribe the observer from the observable.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ObservableExtensions.Subscribe``1(System.Collections.Generic.IObservable{``0},System.Action,System.Action{System.Exception})">
            <summary>
            Subscribes a handler and an exception handler to an observable sequence.  Returns an object that can be used to unsubscribe the observer from the observable.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ObservableExtensions.Subscribe``1(System.Collections.Generic.IObservable{``0},System.Action,System.Action{System.Exception},System.Action)">
            <summary>
            Subscribe a handler, an exception handler, and a completion handler to an observable sequence.  Returns an object that can be used to unsubscribe the observer from the observable.
            </summary>
        </member>
        <member name="T:System.Linq.Observer">
            <summary>
            Provides a set of static methods for creating observers.
            </summary>
        </member>
        <member name="M:System.Linq.Observer.ToObserver``1(System.Action{System.Collections.Generic.Notification{``0}})">
            <summary>
            Creates an observer from a notification continuation.
            </summary>
        </member>
        <member name="M:System.Linq.Observer.ToObserver``2(System.Func{System.Collections.Generic.Notification{``0},``1})">
            <summary>
            Creates an observer from a notification continuation.
            </summary>
        </member>
        <member name="M:System.Linq.Observer.ToNotifier``1(System.Collections.Generic.IObserver{``0})">
            <summary>
            Creates a notification continuation from an observer.
            </summary>
        </member>
        <member name="M:System.Linq.Observer.ToNotifier``2(System.Collections.Generic.IObserver{``0,``1})">
            <summary>
            Creates a notification continuation from an observer.
            </summary>
        </member>
        <member name="M:System.Linq.Observer.Create``1(System.Action{``0},System.Action{System.Exception},System.Action)">
            <summary>
            Creates an observer from the specified OnNext, OnError, and OnCompleted actions.
            </summary>
        </member>
        <member name="M:System.Linq.Observer.Create``2(System.Func{``0,``1},System.Func{System.Exception,``1},System.Func{``1})">
            <summary>
            Creates an observer from the specified OnNext, OnError, and OnCompleted functions.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.Event`1">
            <summary>
            Represents a notification to a .NET event.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.Event`1.#ctor(System.Object,`0)">
            <summary>
            Constructs an object representing a notification to a .NET event.
            </summary>
        </member>
        <member name="P:System.Collections.Generic.Event`1.Sender">
            <summary>
            Gets the sender of the event notification.
            </summary>
        </member>
        <member name="P:System.Collections.Generic.Event`1.EventArgs">
            <summary>
            Gets the event arguments of the event notification.
            </summary>
        </member>
        <member name="T:System.Unit">
            <summary>
            Represents the type with only one value.
            </summary>
        </member>
        <member name="M:System.Unit.Equals(System.Unit)">
            <summary>
            Check equality between unit values which always returns true.
            </summary>
        </member>
        <member name="M:System.Unit.Equals(System.Object)">
            <summary>
            Check equality between a unit value and other objects.
            </summary>
        </member>
        <member name="M:System.Unit.GetHashCode">
            <summary>
            Gets the unit value's hash code.
            </summary>
        </member>
        <member name="M:System.Unit.op_Equality(System.Unit,System.Unit)">
            <summary>
            Check equality between unit values which always returns true.
            </summary>
        </member>
        <member name="M:System.Unit.op_Inequality(System.Unit,System.Unit)">
            <summary>
            Check inequality between unit values which always returns false.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Data.DataForm.Toolkit.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Data.DataForm.Toolkit.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.TextBoxEditor">
            <summary>
            Simple TextBox inline editor.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TextBoxEditor.#ctor(System.Windows.DataTemplate)">
            <summary>
            Preserve the constructor prototype from PropertyValueEditor.
            </summary>
            <param name="inlineEditorTemplate">Inline editor template.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TextBoxEditor.#ctor">
            <summary>
            Default constructor builds the default TextBox inline editor template.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.DataForm.Toolkit.Design.DataFieldMetadata">
            <summary>
            To register design time metadata for DataField.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.DataForm.Toolkit.Design.DataFieldMetadata.#ctor">
            <summary>
            To register design time metadata for DataField.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.DataForm.Toolkit.Design.DataFormMetadata">
            <summary>
            To register design time metadata for DataForm.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.DataForm.Toolkit.Design.DataFormMetadata.#ctor">
            <summary>
            To register design time metadata for DataForm.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.DataForm.Toolkit.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.DataForm.Toolkit.Design.MetadataRegistration.#ctor">
            <summary>
            Design time metadata registration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.DataForm.Toolkit.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Toolkit.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.DataForm.Toolkit.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Toolkit.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Toolkit.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Toolkit.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Toolkit.Design.Properties.Resources.DataFormStyling">
            <summary>
              Looks up a localized string similar to DataForm Styling.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Toolkit.Design.Properties.Resources.Layout">
            <summary>
              Looks up a localized string similar to Layout.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Binaries\System.Windows.Data.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Data</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Data.CollectionViewGroup">
            <summary>
            A CollectionViewGroup, as created by a PagedCollectionView according to a GroupDescription.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroup._itemCount">
            <summary>
            The number of data items (leaves) in the subtree under this group.
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroup._itemsRO">
            <summary>
            The immediate children of the group.
            These may be data items (leaves) or subgroups.
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroup._itemsRW">
            <summary>
            A writable copy of the collection of children of the group.
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroup._name">
            <summary>
            The name of the group, which is the common value of the
            property used to divide data items into groups.
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroup.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the CollectionViewGroup class.
            </summary>
            <param name="name">Name of the CollectionViewGroup</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises a PropertyChanged event (per <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>).
            </summary>
            <param name="e">EventArgs for the PropertyChange</param>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroup.IsBottomLevel">
            <summary>
            Gets a value indicating whether this group is at the 
            bottom level (not further sub-grouped).
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroup.Items">
            <summary>
            Gets the immediate children of the group.
            These may be data items (leaves) or subgroups.
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroup.ItemCount">
            <summary>
            Gets the number of data items (leaves) in the subtree under this group.
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroup.Name">
            <summary>
            Gets the name of the group, which is the common value of the
            property used to divide data items into groups.
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItemCount">
            <summary>
            Gets or sets the number of data items (leaves) in the subtree 
            under this group. Derived classes can change the count using 
            this property; the changes will be reflected in the public 
            ItemCount property.
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItems">
            <summary>
            Gets the items of the group.
            Derived classes can add or remove items using this property;
            the changes will be reflected in the public Items property.
            </summary>
        </member>
        <member name="E:System.Windows.Data.CollectionViewGroup.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
            <summary>
            PropertyChanged event (per <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>).
            </summary>
        </member>
        <member name="E:System.Windows.Data.CollectionViewGroup.PropertyChanged">
            <summary>
            PropertyChanged event (per <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>).
            </summary>
        </member>
        <member name="T:System.Windows.Data.CollectionViewGroupInternal">
            <summary>
            A CollectionViewGroupInternal, as created by a PagedCollectionView 
            according to a GroupDescription.
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroupInternal._groupBy">
            <summary>
            GroupDescription used to define how to group the items
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroupInternal._parentGroup">
            <summary>
            Parent group of this CollectionViewGroupInternal
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroupInternal._version">
            <summary>
            Used for detecting stale enumerators
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.#ctor(System.Object,System.Windows.Data.CollectionViewGroupInternal)">
            <summary>
            Initializes a new instance of the CollectionViewGroupInternal class.
            </summary>
            <param name="name">Name of the CollectionViewGroupInternal</param>
            <param name="parent">Parent node of the CollectionViewGroup</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.Add(System.Object)">
            <summary>
            Adds the specified item to the collection
            </summary>
            <param name="item">Item to add</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.Clear">
            <summary>
            Clears the collection of items
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.FindIndex(System.Object,System.Object,System.Collections.IComparer,System.Int32,System.Int32)">
            <summary>
            Finds the index of the specified item
            </summary>
            <param name="item">Item we are looking for</param>
            <param name="seed">Seed of the item we are looking for</param>
            <param name="comparer">Comparer used to find the item</param>
            <param name="low">Low range of item index</param>
            <param name="high">High range of item index</param>
            <returns>Index of the specified item</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.GetLeafEnumerator">
            <summary>
            Returns an enumerator over the leaves governed by this group
            </summary>
            <returns>Enumerator of leaves</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.Insert(System.Object,System.Object,System.Collections.IComparer)">
            <summary>
            Insert a new item or subgroup and return its index.  Seed is a
            representative from the subgroup (or the item itself) that
            is used to position the new item/subgroup w.r.t. the order given
            by the comparer. (If comparer is null, just add at the end).
            </summary>
            <param name="item">Item we are looking for</param>
            <param name="seed">Seed of the item we are looking for</param>
            <param name="comparer">Comparer used to find the item</param>
            <returns>The index where the item was inserted</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.LeafAt(System.Int32)">
            <summary>
            Return the item at the given index within the list of leaves governed
            by this group
            </summary>
            <param name="index">Index of the leaf</param>
            <returns>Item at given index</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.LeafIndexFromItem(System.Object,System.Int32)">
            <summary>
            Returns the index of the given item within the list of leaves governed
            by the full group structure.  The item must be a (direct) child of this
            group.  The caller provides the index of the item within this group,
            if known, or -1 if not.
            </summary>
            <param name="item">Item we are looking for</param>
            <param name="index">Index of the leaf</param>
            <returns>Number of items under that leaf</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.LeafIndexOf(System.Object)">
            <summary>
            Returns the index of the given item within the list of leaves governed
            by this group
            </summary>
            <param name="item">Item we are looking for</param>
            <returns>Number of items under that leaf</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.OnGroupByChanged">
            <summary>
            The group's description has changed - notify parent 
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.Remove(System.Object,System.Boolean)">
            <summary>
            Removes the specified item from the collection
            </summary>
            <param name="item">Item to remove</param>
            <param name="returnLeafIndex">Whether we want to return the leaf index</param>
            <returns>Leaf index where item was removed, if value was specified. Otherwise '-1'</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.RemoveEmptyGroup(System.Windows.Data.CollectionViewGroupInternal)">
            <summary>
            Removes an empty group from the PagedCollectionView grouping
            </summary>
            <param name="group">Empty subgroup to remove</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.ChangeCounts(System.Object,System.Int32)">
            <summary>
            Update the item count of the CollectionViewGroup
            </summary>
            <param name="item">CollectionViewGroup to update</param>
            <param name="delta">Delta to change count by</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.OnGroupByChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handler for the GroupBy PropertyChanged event
            </summary>
            <param name="sender">CollectionViewGroupInternal whose GroupBy property changed</param>
            <param name="e">The args for the PropertyChanged event</param>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupInternal.IsBottomLevel">
            <summary>
            Gets a value indicating whether this group 
            is at the bottom level (not further sub-grouped).
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupInternal.FullCount">
            <summary>
            Gets or sets the number of items and groups in the subtree under this group
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupInternal.GroupBy">
            <summary>
            Gets or sets how this group divides into subgroups
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupInternal.LastIndex">
            <summary>
            Gets or sets the most recent index where activity took place
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupInternal.SeedItem">
            <summary>
            Gets the first item (leaf) added to this group.  If this can't be determined,
            DependencyProperty.UnsetValue.
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupInternal.Parent">
            <summary>
            Gets the parent node for this CollectionViewGroupInternal
            </summary>
        </member>
        <member name="T:System.Windows.Data.CollectionViewGroupInternal.ListComparer">
            <summary>
            This comparer is used to insert an item into a group in a position consistent
            with a given IList.  It only works when used in the pattern that FindIndex
            uses, namely first call Reset(), then call Compare(item, itemSequence) any number of
            times with the same item (the new item) as the first argument, and a sequence
            of items as the second argument that appear in the IList in the same sequence.
            This makes the total search time linear in the size of the IList.  (To give
            the correct answer regardless of the sequence of arguments would involve
            calling IndexOf and leads to O(N^2) total search time.) 
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.ListComparer.#ctor(System.Collections.IList)">
            <summary>
            Constructor for the ListComparer that takes
            in an IList.
            </summary>
            <param name="list">IList used to compare on</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.ListComparer.Reset">
            <summary>
            Sets the index that we start comparing
            from to 0.
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.ListComparer.ResetList(System.Collections.IList)">
            <summary>
            Sets our IList to a new instance
            of a list being passed in and resets
            the index.
            </summary>
            <param name="list">IList used to compare on</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.ListComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares objects x and y to see which one
            should appear first.
            </summary>
            <param name="x">The first object</param>
            <param name="y">The second object</param>
            <returns>-1 if x is less than y, +1 otherwise</returns>
        </member>
        <member name="T:System.Windows.Data.CollectionViewGroupInternal.CollectionViewGroupComparer">
            <summary>
            This comparer is used to insert an item into a group in a position consistent
            with a given CollectionViewGroupRoot. We will only use this when dealing with
            a temporary CollectionViewGroupRoot that points to the correct grouping of the
            entire collection, and we have paging that requires us to keep the paged group
            consistent with the order of items in the temporary group.
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.CollectionViewGroupComparer.#ctor(System.Windows.Data.CollectionViewGroupRoot)">
            <summary>
            Constructor for the CollectionViewGroupComparer that takes
            in an CollectionViewGroupRoot.
            </summary>
            <param name="group">CollectionViewGroupRoot used to compare on</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.CollectionViewGroupComparer.Reset">
            <summary>
            Sets the index that we start comparing
            from to 0.
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.CollectionViewGroupComparer.ResetGroup(System.Windows.Data.CollectionViewGroupRoot)">
            <summary>
            Sets our group to a new instance of a
            CollectionViewGroupRoot being passed in
            and resets the index.
            </summary>
            <param name="group">CollectionViewGroupRoot used to compare on</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.CollectionViewGroupComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares objects x and y to see which one
            should appear first.
            </summary>
            <param name="x">The first object</param>
            <param name="y">The second object</param>
            <returns>-1 if x is less than y, +1 otherwise</returns>
        </member>
        <member name="T:System.Windows.Data.CollectionViewGroupInternal.LeafEnumerator">
            <summary>
            Enumerator for the leaves in the CollectionViewGroupInternal class.
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.LeafEnumerator.#ctor(System.Windows.Data.CollectionViewGroupInternal)">
            <summary>
            Initializes a new instance of the LeafEnumerator class.
            </summary>
            <param name="group">CollectionViewGroupInternal that uses the enumerator</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.LeafEnumerator.DoReset">
            <summary>
            Private helper to reset the enumerator
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.LeafEnumerator.System#Collections#IEnumerator#Reset">
            <summary>
            Reset implementation for IEnumerator
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupInternal.LeafEnumerator.System#Collections#IEnumerator#MoveNext">
            <summary>
            MoveNext implementation for IEnumerator
            </summary>
            <returns>Returns whether the MoveNext operation was successful</returns>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupInternal.LeafEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current implementation for IEnumerator
            </summary>
        </member>
        <member name="T:System.Windows.Data.CollectionViewGroupRoot">
            <summary>
            PagedCollectionView classes use this class as the manager 
            of all Grouping functionality
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroupRoot.RootName">
            <summary>
            String constant used for the Root Name
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroupRoot.UseAsItemDirectly">
            <summary>
            Private accessor for empty object instance
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroupRoot.topLevelGroupDescription">
            <summary>
            Private accessor for the top level GroupDescription
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroupRoot._groupBy">
            <summary>
            Private accessor for an ObservableCollection containing group descriptions
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroupRoot._isDataInGroupOrder">
            <summary>
            Indicates whether the list of items (after applying the sort and filters, if any) 
            is already in the correct order for grouping.
            </summary>
        </member>
        <member name="F:System.Windows.Data.CollectionViewGroupRoot._view">
            <summary>
            Private accessor for the owning ICollectionView
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.#ctor(System.ComponentModel.ICollectionView,System.Boolean)">
            <summary>
            Initializes a new instance of the CollectionViewGroupRoot class.
            </summary>
            <param name="view">PagedCollectionView that contains this grouping</param>
            <param name="isDataInGroupOrder">True if items are already in correct order for grouping</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.AddToSubgroups(System.Object,System.Boolean)">
            <summary>
            Adds specified item to subgroups
            </summary>
            <param name="item">Item to add</param>
            <param name="loading">Whether we are currently loading</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.FindIndex(System.Object,System.Object,System.Collections.IComparer,System.Int32,System.Int32)">
            <summary>
            Finds the index of the specified item
            </summary>
            <param name="item">Item we are looking for</param>
            <param name="seed">Seed of the item we are looking for</param>
            <param name="comparer">Comparer used to find the item</param>
            <param name="low">Low range of item index</param>
            <param name="high">High range of item index</param>
            <returns>Index of the specified item</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.Initialize">
            <summary>
            Initializes the group descriptions
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.InsertSpecialItem(System.Int32,System.Object,System.Boolean)">
            <summary>
            Inserts specified item into the collection
            </summary>
            <param name="index">Index to insert into</param>
            <param name="item">Item to insert</param>
            <param name="loading">Whether we are currently loading</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Notify listeners that this View has changed
            </summary>
            <remarks>
            CollectionViews (and sub-classes) should take their filter/sort/grouping
            into account before calling this method to forward CollectionChanged events.
            </remarks>
            <param name="args">The NotifyCollectionChangedEventArgs to be passed to the EventHandler</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.OnGroupByChanged">
            <summary>
            Notify host that a group description has changed somewhere in the tree
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.RemoveFromSubgroups(System.Object)">
            <summary>
            Remove specified item from subgroups
            </summary>
            <param name="item">Item to remove</param>
            <returns>Whether the operation was successful</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.RemoveItemFromSubgroupsByExhaustiveSearch(System.Object)">
            <summary>
            Remove specified item from subgroups using an exhaustive search
            </summary>
            <param name="item">Item to remove</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.RemoveSpecialItem(System.Int32,System.Object,System.Boolean)">
            <summary>
            Removes specified item into the collection
            </summary>
            <param name="index">Index to remove from</param>
            <param name="item">Item to remove</param>
            <param name="loading">Whether we are currently loading</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.AddToSubgroup(System.Object,System.Windows.Data.CollectionViewGroupInternal,System.Int32,System.Object,System.Boolean)">
            <summary>
            Add an item to the subgroup with the given name
            </summary>
            <param name="item">Item to add</param>
            <param name="group">Group to add item to</param>
            <param name="level">The level of grouping.</param>
            <param name="name">Name of subgroup to add to</param>
            <param name="loading">Whether we are currently loading</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.AddToSubgroups(System.Object,System.Windows.Data.CollectionViewGroupInternal,System.Int32,System.Boolean)">
            <summary>
            Add an item to the desired subgroup(s) of the given group
            </summary>
            <param name="item">Item to add</param>
            <param name="group">Group to add item to</param>
            <param name="level">The level of grouping</param>
            <param name="loading">Whether we are currently loading</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.GetGroupDescription(System.Windows.Data.CollectionViewGroup,System.Int32)">
            <summary>
            Returns the description of how to divide the given group into subgroups
            </summary>
            <param name="group">CollectionViewGroup to get group description from</param>
            <param name="level">The level of grouping</param>
            <returns>GroupDescription of how to divide the given group</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.GetGroupName(System.Object,System.ComponentModel.GroupDescription,System.Int32)">
            <summary>
            Get the group name(s) for the given item
            </summary>
            <param name="item">Item to get group name for</param>
            <param name="groupDescription">GroupDescription for the group</param>
            <param name="level">The level of grouping</param>
            <returns>Group names for the specified item</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.InitializeGroup(System.Windows.Data.CollectionViewGroupInternal,System.Int32,System.Object)">
            <summary>
            Initialize the given group
            </summary>
            <param name="group">Group to initialize</param>
            <param name="level">The level of grouping</param>
            <param name="seedItem">The seed item to compare with to see where to insert</param>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.RemoveFromGroupDirectly(System.Windows.Data.CollectionViewGroupInternal,System.Object)">
            <summary>
            Remove an item from the direct children of a group.
            </summary>
            <param name="group">Group to remove item from</param>
            <param name="item">Item to remove</param>
            <returns>True if item could not be removed</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.RemoveFromSubgroup(System.Object,System.Windows.Data.CollectionViewGroupInternal,System.Int32,System.Object)">
            <summary>
            Remove an item from the subgroup with the given name.
            </summary>
            <param name="item">Item to remove</param>
            <param name="group">Group to remove item from</param>
            <param name="level">The level of grouping</param>
            <param name="name">Name of item to remove</param>
            <returns>Return true if the item was not in one of the subgroups it was supposed to be.</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.RemoveFromSubgroups(System.Object,System.Windows.Data.CollectionViewGroupInternal,System.Int32)">
            <summary>
            Remove an item from the desired subgroup(s) of the given group.
            </summary>
            <param name="item">Item to remove</param>
            <param name="group">Group to remove item from</param>
            <param name="level">The level of grouping</param>
            <returns>Return true if the item was not in one of the subgroups it was supposed to be.</returns>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.RemoveItemFromSubgroupsByExhaustiveSearch(System.Windows.Data.CollectionViewGroupInternal,System.Object)">
            <summary>
            The item did not appear in one or more of the subgroups it
            was supposed to.  This can happen if the item's properties
            change so that the group names we used to insert it are
            different from the names used to remove it. If this happens,
            remove the item the hard way.
            </summary>
            <param name="group">Group to remove item from</param>
            <param name="item">Item to remove</param>
        </member>
        <member name="E:System.Windows.Data.CollectionViewGroupRoot.CollectionChanged">
            <summary>
            Raise this event when the (grouped) view changes
            </summary>
        </member>
        <member name="E:System.Windows.Data.CollectionViewGroupRoot.GroupDescriptionChanged">
            <summary>
            Raise this event when the GroupDescriptions change
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupRoot.GroupBySelector">
            <summary>
            Gets or sets a delegate to select the group description as a 
            function of the parent group and its level.
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupRoot.GroupDescriptions">
            <summary>
            Gets the description of grouping, indexed by level.
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupRoot.ActiveComparer">
            <summary>
            Gets or sets the current IComparer being used
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupRoot.Culture">
            <summary>
            Gets the culture to use during sorting.
            </summary>
        </member>
        <member name="P:System.Windows.Data.CollectionViewGroupRoot.IsDataInGroupOrder">
            <summary>
            Gets or sets a value indicating whether the data is in group order
            </summary>
        </member>
        <member name="T:System.Windows.Data.CollectionViewGroupRoot.TopLevelGroupDescription">
            <summary>
            TopLevelGroupDescription class
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.TopLevelGroupDescription.#ctor">
            <summary>
            Initializes a new instance of the TopLevelGroupDescription class.
            </summary>
        </member>
        <member name="M:System.Windows.Data.CollectionViewGroupRoot.TopLevelGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
            <summary>
            We have to implement this abstract method, but it should never be called
            </summary>
            <param name="item">Item to get group name from</param>
            <param name="level">The level of grouping</param>
            <param name="culture">Culture used for sorting</param>
            <returns>We do not return a value here</returns>
        </member>
        <member name="T:System.ComponentModel.NewItemPlaceholderPosition">
            <summary>
            Describes the desired position of the new item placeholder in an
            <seealso cref="T:System.ComponentModel.IEditableCollectionView"/>.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.ComponentModel.NewItemPlaceholderPosition.None">
            <summary> Do not include a placeholder. </summary>
        </member>
        <member name="T:System.ComponentModel.IEditableCollectionView">
            <summary>
            IEditableCollectionView is an interface that a collection view
            can implement to enable editing-related functionality.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.ComponentModel.IEditableCollectionView.AddNew">
            <summary>
            Add a new item to the underlying collection.  Returns the new item.
            After calling AddNew and changing the new item as desired, either
            <seealso cref="M:System.ComponentModel.IEditableCollectionView.CommitNew"/> or <seealso cref="M:System.ComponentModel.IEditableCollectionView.CancelNew"/> should be
            called to complete the transaction.
            </summary>
            <returns>
            The new item that gets created
            </returns>
        </member>
        <member name="M:System.ComponentModel.IEditableCollectionView.CommitNew">
            <summary>
            Complete the transaction started by <seealso cref="M:System.ComponentModel.IEditableCollectionView.AddNew"/>.  The new
            item remains in the collection, and the view's sort, filter, and grouping
            specifications (if any) are applied to the new item.
            </summary>
        </member>
        <member name="M:System.ComponentModel.IEditableCollectionView.CancelNew">
            <summary>
            Complete the transaction started by <seealso cref="M:System.ComponentModel.IEditableCollectionView.AddNew"/>.  The new
            item is removed from the collection.
            </summary>
        </member>
        <member name="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
            <summary>
            Remove the item at the given index from the underlying collection.
            The index is interpreted with respect to the view (not with respect to
            the underlying collection).
            </summary>
            <param name="index">Index of item to remove</param>
        </member>
        <member name="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
            <summary>
            Remove the given item from the underlying collection.
            </summary>
            <param name="item">Object we want to remove</param>
        </member>
        <member name="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
            <summary>
            Begins an editing transaction on the given item.  The transaction is
            completed by calling either <seealso cref="M:System.ComponentModel.IEditableCollectionView.CommitEdit"/> or
            <seealso cref="M:System.ComponentModel.IEditableCollectionView.CancelEdit"/>.  Any changes made to the item during
            the transaction are considered "pending", provided that the view supports
            the notion of "pending changes" for the given item.
            </summary>
            <param name="item">Object we want to edit</param>
        </member>
        <member name="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
            <summary>
            Complete the transaction started by <seealso cref="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)"/>.
            The pending changes (if any) to the item are committed.
            </summary>
        </member>
        <member name="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
            <summary>
            Complete the transaction started by <seealso cref="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)"/>.
            The pending changes (if any) to the item are discarded.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
            <summary>
            Gets or sets whether to include a placeholder for a new item, and if so,
            where to put it.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
            <summary>
            Gets a value indicating whether the view supports <seealso cref="M:System.ComponentModel.IEditableCollectionView.AddNew"/>.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
            <summary>
            Gets a value indicating whether an <seealso cref="M:System.ComponentModel.IEditableCollectionView.AddNew"/> transaction is in progress.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
            <summary>
            Gets the new item when an <seealso cref="M:System.ComponentModel.IEditableCollectionView.AddNew"/> transaction is in progress.
            Otherwise it returns null.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IEditableCollectionView.CanRemove">
            <summary>
            Gets a value indicating whether the view supports <seealso cref="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)"/> and
            <seealso cref="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)"/>.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
            <summary>
            Gets a value indicating whether the view supports the notion 
            of "pending changes" on the current edit item.  This may vary, depending 
            on the view and the particular item.  For example, a view might return 
            true if the current edit item implements IEditableObject, or if the view has 
            special knowledge about the item that it can use to support rollback of 
            pending changes.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
            <summary>
            Gets a value indicating whether an <seealso cref="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)"/> transaction is in progress.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
            <summary>
            Gets the affected item when an <seealso cref="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)"/> transaction is in progress.
            Otherwise it returns null.
            </summary>
        </member>
        <member name="T:System.ComponentModel.IPagedCollectionView">
            <summary>
            Interface used to drive paging of collection views.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.ComponentModel.IPagedCollectionView.MoveToFirstPage">
            <summary>
            Moves to the first page.
            </summary>
            <returns>Whether or not the move was successful.</returns>
        </member>
        <member name="M:System.ComponentModel.IPagedCollectionView.MoveToLastPage">
            <summary>
            Moves to the last page.
            </summary>
            <returns>Whether or not the move was successful.</returns>
        </member>
        <member name="M:System.ComponentModel.IPagedCollectionView.MoveToNextPage">
            <summary>
            Moves to the page after the current page we are on.
            </summary>
            <returns>Whether or not the move was successful.</returns>
        </member>
        <member name="M:System.ComponentModel.IPagedCollectionView.MoveToPreviousPage">
            <summary>
            Moves to the page before the current page we are on.
            </summary>
            <returns>Whether or not the move was successful.</returns>
        </member>
        <member name="M:System.ComponentModel.IPagedCollectionView.MoveToPage(System.Int32)">
            <summary>
            Moves to page <paramref name="pageIndex"/>.
            </summary>
            <param name="pageIndex">The index of the page to which to move.</param>
            <returns>Whether or not the move was successful.</returns>
        </member>
        <member name="E:System.ComponentModel.IPagedCollectionView.PageChanged">
            <summary>
            Raised when a page index change completed.
            </summary>
        </member>
        <member name="E:System.ComponentModel.IPagedCollectionView.PageChanging">
            <summary>
            Raised when a page index change is requested.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IPagedCollectionView.CanChangePage">
            <summary>
            Gets a value indicating whether the PageIndex value is allowed to change or not.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IPagedCollectionView.IsPageChanging">
            <summary>
            Gets a value indicating whether a page index change is in process or not.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IPagedCollectionView.ItemCount">
            <summary>
            Gets the number of known items in the view before paging is applied.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IPagedCollectionView.PageIndex">
            <summary>
            Gets the current page we are on. (zero based)
            </summary>
        </member>
        <member name="P:System.ComponentModel.IPagedCollectionView.PageSize">
            <summary>
            Gets or sets the number of items to display on a page.
            </summary>
        </member>
        <member name="P:System.ComponentModel.IPagedCollectionView.TotalItemCount">
            <summary>
            Gets the total number of items in the view before paging is applied,
            or -1 if that total number is unknown.
            </summary>
        </member>
        <member name="T:System.ComponentModel.PageChangingEventArgs">
            <summary>
            Event argument used for page index change notifications. The requested page move
            can be canceled by setting e.Cancel to True.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.ComponentModel.PageChangingEventArgs.#ctor(System.Int32)">
            <summary>
            Constructor that takes the target page index
            </summary>
            <param name="newPageIndex">Index of the requested page</param>
        </member>
        <member name="P:System.ComponentModel.PageChangingEventArgs.NewPageIndex">
            <summary>
            Gets the index of the requested page
            </summary>
        </member>
        <member name="T:System.Windows.Data.PagedCollectionView">
            <summary>
            PagedCollectionView view over an IEnumerable.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.uncancelableCurrentChangingEventArgs">
            <summary>
            Since there's nothing in the un-cancelable event args that is mutable,
            just create one instance to be used universally.
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._cachedPageIndex">
            <summary>
            Value that we cache for the PageIndex if we are in a DeferRefresh,
            and the user has attempted to move to a different page.
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._cachedPageSize">
            <summary>
            Value that we cache for the PageSize if we are in a DeferRefresh,
            and the user has attempted to change the PageSize.
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._culture">
            <summary>
            CultureInfo used in this PagedCollectionView
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._currentChangedMonitor">
            <summary>
            Private accessor for the Monitor we use to prevent recursion
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._currentItem">
            <summary>
            Private accessor for the CurrentItem
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._currentPosition">
            <summary>
            Private accessor for the CurrentPosition
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._deferLevel">
            <summary>
            The number of requests to defer Refresh()
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._editItem">
            <summary>
            The item we are currently editing
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._filter">
            <summary>
            Private accessor for the Filter
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._flags">
            <summary>
            Private accessor for the CollectionViewFlags
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._group">
            <summary>
            Private accessor for the Grouping data
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._internalList">
            <summary>
            Private accessor for the InternalList
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._isGrouping">
            <summary>
            Keeps track of whether groups have been applied to the
            collection already or not. Note that this can still be set
            to false even though we specify a GroupDescription, as the 
            collection may not have gone through the PrepareGroups function.
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._isUsingTemporaryGroup">
            <summary>
            Private accessor for indicating whether we want to point to the temporary grouping data for calculations
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._itemConstructor">
            <summary>
            ConstructorInfo obtained from reflection for generating new items
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._itemConstructorIsValid">
            <summary>
            Whether we have the correct ConstructorInfo information for the ItemConstructor
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._newItem">
            <summary>
            The new item we are getting ready to add to the collection
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._pageIndex">
            <summary>
            Private accessor for the PageIndex
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._pageSize">
            <summary>
            Private accessor for the PageSize
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._pollForChanges">
            <summary>
            Whether the source needs to poll for changes
            (if it did not implement INotifyCollectionChanged)
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._sortDescriptions">
            <summary>
            Private accessor for the SortDescriptions
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._sourceCollection">
            <summary>
            Private accessor for the SourceCollection
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._temporaryGroup">
            <summary>
            Private accessor for the Grouping data on the entire collection
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._timestamp">
            <summary>
            Timestamp used to see if there was a collection change while 
            processing enumerator changes
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView._trackingEnumerator">
            <summary>
            Private accessor for the TrackingEnumerator
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.#ctor(System.Collections.IEnumerable)">
            <summary>
            Helper constructor that sets default values for isDataSorted and isDataInGroupOrder.
            </summary>
            <param name="source">The source for the collection</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.#ctor(System.Collections.IEnumerable,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PagedCollectionView class.
            </summary>
            <param name="source">The source for the collection</param>
            <param name="isDataSorted">Determines whether the source is already sorted</param>
            <param name="isDataInGroupOrder">Whether the source is already in the correct order for grouping</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.AddNew">
            <summary>
            Add a new item to the underlying collection.  Returns the new item.
            After calling AddNew and changing the new item as desired, either
            CommitNew or CancelNew" should be called to complete the transaction.
            </summary>
            <returns>The new item we are adding</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.CancelEdit">
            <summary>
            Complete the transaction started by <seealso cref="M:System.Windows.Data.PagedCollectionView.EditItem(System.Object)"/>.
            The pending changes (if any) to the item are discarded.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.CancelNew">
            <summary>
            Complete the transaction started by AddNew. The new
            item is removed from the collection.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.CommitEdit">
            <summary>
            Complete the transaction started by <seealso cref="M:System.Windows.Data.PagedCollectionView.EditItem(System.Object)"/>.
            The pending changes (if any) to the item are committed.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.CommitNew">
            <summary>
            Complete the transaction started by AddNew. We follow the WPF
            convention in that the view's sort, filter, and paging
            specifications (if any) are applied to the new item.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.Contains(System.Object)">
            <summary>
            Return true if the item belongs to this view.  No assumptions are
            made about the item. This method will behave similarly to IList.Contains().
            If the caller knows that the item belongs to the
            underlying collection, it is more efficient to call PassesFilter.
            </summary>
            <param name="item">The item we are checking to see whether it is within the collection</param>
            <returns>Boolean value of whether or not the collection contains the item</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.DeferRefresh">
            <summary>
            Enter a Defer Cycle.
            Defer cycles are used to coalesce changes to the ICollectionView.
            </summary>
            <returns>IDisposable used to notify that we no longer need to defer, when we dispose</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.EditItem(System.Object)">
            <summary>
            Begins an editing transaction on the given item.  The transaction is
            completed by calling either CommitEdit or CancelEdit.  Any changes made 
            to the item during the transaction are considered "pending", provided 
            that the view supports the notion of "pending changes" for the given item.
            </summary>
            <param name="item">Item we want to edit</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.GetEnumerator">
            <summary> 
            Implementation of IEnumerable.GetEnumerator().
            This provides a way to enumerate the members of the collection
            without changing the currency.
            </summary>
            <returns>IEnumerator for the collection</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Interface Implementation for GetEnumerator()
            </summary>
            <returns>IEnumerator that we get from our internal collection</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.GetItemAt(System.Int32)">
            <summary>
            Retrieve item at the given zero-based index in this PagedCollectionView, after the source collection
            is filtered, sorted, and paged.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if index is out of range
            </exception>
            <param name="index">Index of the item we want to retrieve</param>
            <returns>Item at specified index</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.IndexOf(System.Object)">
            <summary> 
            Return the index where the given item appears, or -1 if doesn't appear.
            </summary>
            <param name="item">Item we are searching for</param>
            <returns>Index of specified item</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveCurrentTo(System.Object)">
            <summary> 
            Move to the given item. 
            </summary>
            <param name="item">Item we want to move the currency to</param>
            <returns>Whether the operation was successful</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveCurrentToFirst">
            <summary> 
            Move to the first item. 
            </summary>
            <returns>Whether the operation was successful</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveCurrentToLast">
            <summary> 
            Move to the last item. 
            </summary>
            <returns>Whether the operation was successful</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveCurrentToNext">
            <summary> 
            Move to the next item. 
            </summary>
            <returns>Whether the operation was successful</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveCurrentToPosition(System.Int32)">
            <summary>
            Move CurrentItem to this index
            </summary>
            <param name="position">Position we want to move the currency to</param>
            <returns>True if the resulting CurrentItem is an item within the view; otherwise False</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveCurrentToPrevious">
            <summary> 
            Move to the previous item. 
            </summary>
            <returns>Whether the operation was successful</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveToFirstPage">
            <summary>
            Moves to the first page.
            </summary>
            <returns>Whether or not the move was successful.</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveToLastPage">
            <summary>
            Moves to the last page.
            The move is only attempted when TotalItemCount is known.
            </summary>
            <returns>Whether or not the move was successful.</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveToNextPage">
            <summary>
            Moves to the page after the current page we are on.
            </summary>
            <returns>Whether or not the move was successful.</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveToPage(System.Int32)">
            <summary>
            Requests a page move to page <paramref name="pageIndex"/>.
            </summary>
            <param name="pageIndex">Index of the target page</param>
            <returns>Whether or not the move was successfully initiated.</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.MoveToPreviousPage">
            <summary>
            Moves to the page before the current page we are on.
            </summary>
            <returns>Whether or not the move was successful.</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.PassesFilter(System.Object)">
            <summary>
            Return true if the item belongs to this view.  The item is assumed to belong to the
            underlying DataCollection;  this method merely takes filters into account.
            It is commonly used during collection-changed notifications to determine if the added/removed
            item requires processing.
            Returns true if no filter is set on collection view.
            </summary>
            <param name="item">The item to compare against the Filter</param>
            <returns>Whether the item passes the filter</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.Refresh">
            <summary>
            Re-create the view, using any SortDescriptions and/or Filters.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.Remove(System.Object)">
            <summary>
            Remove the given item from the underlying collection. It
            needs to be in the current filtered, sorted, and paged view
            to call this.
            </summary>
            <param name="item">Item we want to remove</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.RemoveAt(System.Int32)">
            <summary>
            Remove the item at the given index from the underlying collection.
            The index is interpreted with respect to the view (filtered, sorted,
            and paged list).
            </summary>
            <param name="index">Index of the item we want to remove</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.InvokePath(System.Object,System.String,System.Type)">
            <summary>
            Helper for SortList to handle nested properties (e.g. Address.Street)
            </summary>
            <param name="item">parent object</param>
            <param name="propertyPath">property names path</param>
            <param name="propertyType">property type that we want to check for</param>
            <returns>child object</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.AdjustCurrencyForAdd(System.Object,System.Int32)">
            <summary>
            Fix up CurrentPosition and CurrentItem after a collection change
            </summary>
            <param name="newCurrentItem">Item that we want to set currency to</param>
            <param name="index">Index of item involved in the collection change</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.AdjustCurrencyForEdit(System.Object,System.Int32)">
            <summary>
            Fix up CurrentPosition and CurrentItem after a collection change
            </summary>
            <param name="newCurrentItem">Item that we want to set currency to</param>
            <param name="index">Index of item involved in the collection change</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.AdjustCurrencyForRemove(System.Int32)">
            <summary>
            Fix up CurrentPosition and CurrentItem after a collection change
            The index can be -1 if the item was removed from a previous page
            </summary>
            <param name="index">Index of item involved in the collection change</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.CheckFlag(System.Windows.Data.PagedCollectionView.CollectionViewFlags)">
            <summary>
            Returns true if specified flag in flags is set.
            </summary>
            <param name="flags">Flag we are checking for</param>
            <returns>Whether the specified flag is set</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.CompletePageMove(System.Int32)">
            <summary>
            Called to complete the page move operation to set the
            current page index.
            </summary>
            <param name="pageIndex">Final page index</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.ConvertToInternalIndex(System.Int32)">
            <summary>
            Convert a value for the index passed in to the index it would be
            relative to the InternalIndex property.
            </summary>
            <param name="index">Index to convert</param>
            <returns>Value for the InternalIndex</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.CopySourceToInternalList">
            <summary>
            Copy all items from the source collection to the internal list for processing.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.EndAddNew(System.Boolean)">
            <summary>
            Common functionality used by CommitNew, CancelNew, and when the
            new item is removed by Remove or Refresh.
            </summary>
            <param name="cancel">Whether we canceled the add</param>
            <returns>The new item we ended adding</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.EndDefer">
            <summary>
            Subtracts from the deferLevel counter and calls Refresh() if there are no other defers
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.EnsureItemConstructor">
            <summary>
            Makes sure that the ItemConstructor is set for the correct type
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.EnsureCollectionInSync">
            <summary>
             If the IEnumerable has changed, bring the collection up to date.
             (This isn't necessary if the IEnumerable is also INotifyCollectionChanged
             because we keep the collection in sync incrementally.)
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.GetItemType(System.Boolean)">
            <summary>
            Helper function used to determine the type of an item
            </summary>
            <param name="useRepresentativeItem">Whether we should use a representative item</param>
            <returns>The type of the items in the collection</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.GetRepresentativeItem">
            <summary>
            Gets a representative item from the collection
            </summary>
            <returns>An item that can represent the collection</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.InternalIndexOf(System.Object)">
            <summary>
            Return index of item in the internal list.
            </summary>
            <param name="item">The item we are checking</param>
            <returns>Integer value on where in the InternalList the object is located</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.InternalItemAt(System.Int32)">
            <summary>
            Return item at the given index in the internal list.
            </summary>
            <param name="index">The index we are checking</param>
            <returns>The item at the specified index</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.OkToChangeCurrent">
            <summary>
            Ask listeners (via ICollectionView.CurrentChanging event) if it's OK to change currency
            </summary>
            <returns>False if a listener cancels the change, True otherwise</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
                Notify listeners that this View has changed
            </summary>
            <remarks>
                CollectionViews (and sub-classes) should take their filter/sort/grouping/paging
                into account before calling this method to forward CollectionChanged events.
            </remarks>
            <param name="args">
                The NotifyCollectionChangedEventArgs to be passed to the EventHandler
            </param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.OnCurrentChanged">
            <summary>
            Raises the CurrentChanged event
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.OnCurrentChanging">
            <summary>
            Raise a CurrentChanging event that is not cancelable.
            This is called by CollectionChanges (Add, Remove, and Refresh) that 
            affect the CurrentItem.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            This CurrentChanging event cannot be canceled.
            </exception>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)">
            <summary>
            Raises the CurrentChanging event
            </summary>
            <param name="args">
                CancelEventArgs used by the consumer of the event.  args.Cancel will
                be true after this call if the CurrentItem should not be changed for
                any reason.
            </param>
            <exception cref="T:System.InvalidOperationException">
                This CurrentChanging event cannot be canceled.
            </exception>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.OnGroupByChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            GroupBy changed handler
            </summary>
            <param name="sender">CollectionViewGroup whose GroupBy has changed</param>
            <param name="e">Arguments for the NotifyCollectionChanged event</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.OnGroupDescriptionChanged(System.Object,System.EventArgs)">
            <summary>
            GroupDescription changed handler
            </summary>
            <param name="sender">CollectionViewGroup whose GroupDescription has changed</param>
            <param name="e">Arguments for the GroupDescriptionChanged event</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises a PropertyChanged event.
            </summary>
            <param name="e">PropertyChangedEventArgs for this change</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.OnPropertyChanged(System.String)">
            <summary>
            Helper to raise a PropertyChanged event.
            </summary>
            <param name="propertyName">Property name for the property that changed</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.PrepareGroupingComparer(System.Windows.Data.CollectionViewGroupRoot)">
            <summary>
            Sets up the ActiveComparer for the CollectionViewGroupRoot specified
            </summary>
            <param name="groupRoot">The CollectionViewGroupRoot</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.PrepareGroups">
            <summary>
            Use the GroupDescriptions to place items into their respective groups.
            This assumes that there is no paging, so we just group the entire collection
            of items that the CollectionView holds.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.PrepareTemporaryGroups">
            <summary>
            Use the GroupDescriptions to place items into their respective groups.
            Because of the fact that we have paging, it is possible that we are only
            going to need a subset of the items to be displayed. However, before we 
            actually group the entire collection, we can't display the items in the
            correct order. We therefore want to just create a temporary group with
            the entire collection, and then using this data we can create the group
            that is exposed with just the items we need.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.PrepareGroupsForCurrentPage">
            <summary>
            Update our Groups private accessor to point to the subset of data
            covered by the current page, or to display the entire group if paging is not
            being used.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.PrepareLocalArray(System.Collections.IEnumerable)">
            <summary>
            Create, filter and sort the local index array.
            called from Refresh(), override in derived classes as needed.
            </summary>
            <param name="enumerable">new IEnumerable to associate this view with</param>
            <returns>new local array to use for this view</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.ProcessAddEvent(System.Object,System.Int32)">
            <summary>
            Process an Add operation from an INotifyCollectionChanged event handler.
            </summary>
            <param name="addedItem">Item added to the source collection</param>
            <param name="addIndex">Index item was added into</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Process CollectionChanged event on source collection 
            that implements INotifyCollectionChanged.
            </summary>
            <param name="args">
            The NotifyCollectionChangedEventArgs to be processed.
            </param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.ProcessRemoveEvent(System.Object,System.Boolean)">
            <summary>
            Process a Remove operation from an INotifyCollectionChanged event handler.
            </summary>
            <param name="removedItem">Item removed from the source collection</param>
            <param name="isReplace">Whether this was part of a Replace operation</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.ProcessInsertToCollection(System.Object,System.Int32)">
            <summary>
            Handles adding an item into the collection, and applying sorting, filtering, grouping, paging.
            </summary>
            <param name="item">Item to insert in the collection</param>
            <param name="index">Index to insert item into</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.RaiseCurrencyChanges(System.Boolean,System.Object,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Raises Currency Change events
            </summary>
            <param name="fireChangedEvent">Whether to fire the CurrentChanged event even if the parameters have not changed</param>
            <param name="oldCurrentItem">CurrentItem before processing changes</param>
            <param name="oldCurrentPosition">CurrentPosition before processing changes</param>
            <param name="oldIsCurrentBeforeFirst">IsCurrentBeforeFirst before processing changes</param>
            <param name="oldIsCurrentAfterLast">IsCurrentAfterLast before processing changes</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.RaisePageChanged">
            <summary>
            Raises the PageChanged event
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.RaisePageChanging(System.Int32)">
            <summary>
            Raises the PageChanging event
            </summary>
            <param name="newPageIndex">Index of the requested page</param>
            <returns>True if the event is cancelled (e.Cancel was set to True), False otherwise</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.RefreshInternal">
            <summary>
            Will call RefreshOverride and clear the NeedsRefresh flag
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.RefreshOrDefer">
            <summary>
            Refresh, or mark that refresh is needed when defer cycle completes.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.RefreshOverride">
            <summary>
            Re-create the view, using any SortDescriptions. 
            Also updates currency information.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.ResetCurrencyValues(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Set currency back to the previous value it had if possible. If the item is no longer in view
            then either use the first item in the view, or if the list is empty, use null.
            </summary>
            <param name="oldCurrentItem">CurrentItem before processing changes</param>
            <param name="oldIsCurrentBeforeFirst">IsCurrentBeforeFirst before processing changes</param>
            <param name="oldIsCurrentAfterLast">IsCurrentAfterLast before processing changes</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SetCurrent(System.Object,System.Int32)">
            <summary>
            Set CurrentItem and CurrentPosition, no questions asked!
            </summary>
            <remarks>
            CollectionViews (and sub-classes) should use this method to update
            the Current values.
            </remarks>
            <param name="newItem">New CurrentItem</param>
            <param name="newPosition">New CurrentPosition</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SetCurrent(System.Object,System.Int32,System.Int32)">
            <summary>
            Set CurrentItem and CurrentPosition, no questions asked!
            </summary>
            <remarks>
            This method can be called from a constructor - it does not call
            any virtuals.  The 'count' parameter is substitute for the real Count,
            used only when newItem is null.
            In that case, this method sets IsCurrentAfterLast to true if and only
            if newPosition >= count.  This distinguishes between a null belonging
            to the view and the dummy null when CurrentPosition is past the end.
            </remarks>
            <param name="newItem">New CurrentItem</param>
            <param name="newPosition">New CurrentPosition</param>
            <param name="count">Numbers of items in the collection</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SetCurrentToPosition(System.Int32)">
            <summary>
            Just move it. No argument check, no events, just move current to position.
            </summary>
            <param name="position">Position to move the current item to</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SetFlag(System.Windows.Data.PagedCollectionView.CollectionViewFlags,System.Boolean)">
            <summary>
            Sets the specified Flag(s)
            </summary>
            <param name="flags">Flags we want to set</param>
            <param name="value">Value we want to set these flags to</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SetSortDescriptions(System.ComponentModel.SortDescriptionCollection)">
            <summary>
            Set new SortDescription collection; re-hook collection change notification handler
            </summary>
            <param name="descriptions">SortDescriptionCollection to set the property value to</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SortDescriptionsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            SortDescription was added/removed, refresh PagedCollectionView
            </summary>
            <param name="sender">Sender that triggered this handler</param>
            <param name="e">NotifyCollectionChangedEventArgs for this change</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SortList(System.Collections.Generic.List{System.Object})">
            <summary>
            Sort the List based on the SortDescriptions property.
            </summary>
            <param name="list">List of objects to sort</param>
            <returns>The sorted list</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.VerifyRefreshNotDeferred">
            <summary>
            Helper to validate that we are not in the middle of a DeferRefresh
            and throw if that is the case.
            </summary>
        </member>
        <member name="E:System.Windows.Data.PagedCollectionView.CollectionChanged">
            <summary>
            Raise this event when the (filtered) view changes
            </summary>
        </member>
        <member name="E:System.Windows.Data.PagedCollectionView.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
            <summary>
            CollectionChanged event (per INotifyCollectionChanged).
            </summary>
        </member>
        <member name="E:System.Windows.Data.PagedCollectionView.CurrentChanged">
            <summary>
            Raised when the CurrentItem property changed
            </summary>
        </member>
        <member name="E:System.Windows.Data.PagedCollectionView.CurrentChanging">
            <summary>
            Raised when the CurrentItem property is changing
            </summary>
        </member>
        <member name="E:System.Windows.Data.PagedCollectionView.PageChanged">
            <summary>
            Raised when a page index change completed
            </summary>
        </member>
        <member name="E:System.Windows.Data.PagedCollectionView.PageChanging">
            <summary>
            Raised when a page index change is requested
            </summary>
        </member>
        <member name="E:System.Windows.Data.PagedCollectionView.PropertyChanged">
            <summary>
            PropertyChanged event.
            </summary>
        </member>
        <member name="E:System.Windows.Data.PagedCollectionView.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
            <summary>
            PropertyChanged event (per INotifyPropertyChanged)
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CanAddNew">
            <summary>
            Gets a value indicating whether the view supports AddNew.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CanCancelEdit">
            <summary>
            Gets a value indicating whether the view supports the notion of "pending changes" 
            on the current edit item.  This may vary, depending on the view and the particular
            item.  For example, a view might return true if the current edit item
            implements IEditableObject, or if the view has special knowledge about 
            the item that it can use to support rollback of pending changes.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CanChangePage">
            <summary>
            Gets a value indicating whether the PageIndex value is allowed to change or not.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CanFilter">
            <summary>
            Gets a value indicating whether we support filtering with this ICollectionView.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CanGroup">
            <summary>
            Gets a value indicating whether this view supports grouping.
            When this returns false, the rest of the interface is ignored.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CanRemove">
            <summary>
            Gets a value indicating whether the view supports Remove and RemoveAt.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CanSort">
            <summary>
            Gets a value indicating whether we support sorting with this ICollectionView.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.Count">
            <summary>
            Gets the number of records in the view after 
            filtering, sorting, and paging.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.Culture">
            <summary>
            Gets or sets Culture to use during sorting.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CurrentAddItem">
            <summary>
            Gets the new item when an AddNew transaction is in progress
            Otherwise it returns null.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CurrentEditItem">
            <summary>
            Gets the affected item when an EditItem transaction is in progress
            Otherwise it returns null.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CurrentItem">
            <summary> 
            Gets the "current item" for this view 
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CurrentPosition">
            <summary>
            Gets the ordinal position of the CurrentItem within the 
            (optionally sorted and filtered) view.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.Filter">
            <summary>
            Gets or sets the Filter, which is a callback set by the consumer of the ICollectionView
            and used by the implementation of the ICollectionView to determine if an
            item is suitable for inclusion in the view.
            </summary>        
            <exception cref="T:System.NotSupportedException">
            Simpler implementations do not support filtering and will throw a NotSupportedException.
            Use <seealso cref="P:System.Windows.Data.PagedCollectionView.CanFilter"/> property to test if filtering is supported before
            assigning a non-null value.
            </exception>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.GroupDescriptions">
            <summary>
            Gets the description of grouping, indexed by level.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.Groups">
            <summary>
            Gets the top-level groups, constructed according to the descriptions
            given in GroupDescriptions.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsAddingNew">
            <summary>
            Gets a value indicating whether an "AddNew" transaction is in progress.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsCurrentAfterLast">
            <summary> 
            Gets a value indicating whether currency is beyond the end (End-Of-File). 
            </summary>
            <returns>Whether IsCurrentAfterLast</returns>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsCurrentBeforeFirst">
            <summary> 
            Gets a value indicating whether currency is before the beginning (Beginning-Of-File). 
            </summary>
            <returns>Whether IsCurrentBeforeFirst</returns>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsEditingItem">
            <summary>
            Gets a value indicating whether an EditItem transaction is in progress.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsEmpty">
            <summary>
            Gets a value indicating whether the resulting (filtered) view is empty.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsPageChanging">
            <summary>
            Gets a value indicating whether a page index change is in process or not.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.ItemCount">
            <summary>
            Gets the minimum number of items known to be in the source collection
            that verify the current filter if any
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.NeedsRefresh">
            <summary>
            Gets a value indicating whether this view needs to be refreshed.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.NewItemPlaceholderPosition">
            <summary>
            Gets or sets whether to include a placeholder for a new item, and if so,
            where to put it. Only the value NewItemPlaceholderPosition.None is supported.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.PageIndex">
            <summary>
            Gets the current page we are on. (zero based)
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.PageSize">
            <summary>
            Gets or sets the number of items to display on a page. If the
            PageSize = 0, then we are not paging, and will display all items
            in the collection. Otherwise, we will have separate pages for 
            the items to display.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.SortDescriptions">
            <summary>
            Gets the Sort criteria to sort items in collection.
            </summary>
            <remarks>
            <p>
            Clear a sort criteria by assigning SortDescription.Empty to this property.
            One or more sort criteria in form of <seealso cref="T:System.ComponentModel.SortDescription"/>
            can be used, each specifying a property and direction to sort by.
            </p>
            </remarks>
            <exception cref="T:System.NotSupportedException">
            Simpler implementations do not support sorting and will throw a NotSupportedException.
            Use <seealso cref="P:System.Windows.Data.PagedCollectionView.CanSort"/> property to test if sorting is supported before adding
            to SortDescriptions.
            </exception>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.SourceCollection">
            <summary>
            Gets the source of the IEnumerable collection we are using for our view.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.TotalItemCount">
            <summary>
            Gets the total number of items in the view before paging is applied.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.CanConstructItem">
            <summary>
            Gets a value indicating whether we have a valid ItemConstructor of the correct type
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.InternalCount">
            <summary>
            Gets the private count without taking paging or
            placeholders into account
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.InternalList">
            <summary>
            Gets the InternalList
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsCurrentInSync">
            <summary>
            Gets a value indicating whether CurrentItem and CurrentPosition are
            up-to-date with the state and content of the collection.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsCurrentInView">
            <summary>
            Gets a value indicating whether the current item is in the view
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsGrouping">
            <summary>
            Gets a value indicating whether or not we have grouping 
            taking place in this collection.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.IsRefreshDeferred">
            <summary>
            Gets a value indicating whether there
            is still an outstanding DeferRefresh in
            use.  If at all possible, derived classes
            should not call Refresh if IsRefreshDeferred
            is true.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.NeedToMoveToPreviousPage">
            <summary>
            Gets whether the current page is empty and we need
            to move to a previous page.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.OnLastLocalPage">
            <summary>
            Gets a value indicating whether we are on the last local page
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.PageCount">
            <summary>
            Gets the number of pages we currently have
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.RootGroup">
            <summary>
            Gets the root of the Group that we expose to the user
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.SourceList">
            <summary>
            Gets the SourceCollection as an IList
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.Timestamp">
            <summary>
            Gets Timestamp used by the NewItemAwareEnumerator to determine if a
            collection change has occurred since the enumerator began.  (If so,
            MoveNext should throw.)
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.UsesLocalArray">
            <summary>
            Gets a value indicating whether a private copy of the data 
            is needed for sorting, filtering, and paging. We want any deriving 
            classes to also be able to access this value to see whether or not 
            to use the default source collection, or the internal list.
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.Item(System.Int32)">
            <summary>
            Return the item at the specified index
            </summary>
            <param name="index">Index of the item we want to retrieve</param>
            <returns>The item at the specified index</returns>
        </member>
        <member name="T:System.Windows.Data.PagedCollectionView.RequestPageMoveDelegate">
            <summary>
            Delegate used to asynchronously trigger a page move.
            </summary>
            <param name="pageIndex">Requested page index</param>
        </member>
        <member name="T:System.Windows.Data.PagedCollectionView.CollectionViewFlags">
            <summary>
            Enum for CollectionViewFlags
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.IsDataInGroupOrder">
            <summary>
            Whether the list of items (after applying the sort and filters, if any) 
            is already in the correct order for grouping. 
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.IsDataSorted">
            <summary>
            Whether the source collection is already sorted according to the SortDescriptions collection
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.ShouldProcessCollectionChanged">
            <summary>
            Whether we should process the collection changed event
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.IsCurrentBeforeFirst">
            <summary>
            Whether the current item is before the first
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.IsCurrentAfterLast">
            <summary>
            Whether the current item is after the last
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.NeedsRefresh">
            <summary>
            Whether we need to refresh
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.CachedIsEmpty">
            <summary>
            Whether we cache the IsEmpty value
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.IsPageChanging">
            <summary>
            Indicates whether a page index change is in process or not
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.IsMoveToPageDeferred">
            <summary>
            Whether we need to move to another page after EndDefer
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.CollectionViewFlags.IsUpdatePageSizeDeferred">
            <summary>
            Whether we need to update the PageSize after EndDefer
            </summary>
        </member>
        <member name="T:System.Windows.Data.PagedCollectionView.DeferHelper">
            <summary>
            Used to keep track of Defer calls on the PagedCollectionView, which
            will prevent the user from calling Refresh() on the view. In order
            to allow refreshes again, the user will have to call IDisposable.Dispose,
            to end the Defer operation.
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.DeferHelper.collectionView">
            <summary>
            Private reference to the CollectionView that created this DeferHelper
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.DeferHelper.#ctor(System.Windows.Data.PagedCollectionView)">
            <summary>
            Initializes a new instance of the DeferHelper class
            </summary>
            <param name="collectionView">CollectionView that created this DeferHelper</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.DeferHelper.Dispose">
            <summary>
            Cleanup method called when done using this class
            </summary>
        </member>
        <member name="T:System.Windows.Data.PagedCollectionView.SimpleMonitor">
            <summary>
            A simple monitor class to help prevent re-entrant calls
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.SimpleMonitor.entered">
            <summary>
            Whether the monitor is entered
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SimpleMonitor.Enter">
            <summary>
            Sets a value indicating that we have been entered
            </summary>
            <returns>Boolean value indicating whether we were already entered</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SimpleMonitor.Dispose">
            <summary>
            Cleanup method called when done using this class
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.SimpleMonitor.Busy">
            <summary>
            Gets a value indicating whether we have been entered or not
            </summary>
        </member>
        <member name="T:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator">
            <summary>
            IEnumerator generated using the new item taken into account
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator.#ctor(System.Windows.Data.PagedCollectionView,System.Collections.IEnumerator,System.Object)">
            <summary>
            Initializes a new instance of the NewItemAwareEnumerator class.
            </summary>
            <param name="collectionView">The PagedCollectionView we are creating the enumerator for</param>
            <param name="baseEnumerator">The baseEnumerator that we pass in</param>
            <param name="newItem">The new item we are adding to the collection</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator.MoveNext">
            <summary>
            Implements the MoveNext function for IEnumerable
            </summary>
            <returns>Whether we can move to the next item</returns>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator.Reset">
            <summary>
            Implements the Reset function for IEnumerable
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator._collectionView">
            <summary>
            CollectionView that we are creating the enumerator for
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator._baseEnumerator">
            <summary>
            The Base Enumerator that we are passing in
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator._position">
            <summary>
            The position we are appending items to the enumerator
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator._newItem">
            <summary>
            Reference to any new item that we want to add to the collection
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator._timestamp">
            <summary>
            Timestamp to let us know whether there have been updates to the collection
            </summary>
        </member>
        <member name="P:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator.Current">
            <summary>
            Gets the Current value for IEnumerable
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator.Position.BeforeNewItem">
            <summary>
            Whether the position is before the new item
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator.Position.OnNewItem">
            <summary>
            Whether the position is on the new item that is being created
            </summary>
        </member>
        <member name="F:System.Windows.Data.PagedCollectionView.NewItemAwareEnumerator.Position.AfterNewItem">
            <summary>
            Whether the position is after the new item
            </summary>
        </member>
        <member name="T:System.Windows.Data.PagedCollectionView.SortFieldComparer">
            <summary>
            IComparer class to sort by class property value (using reflection).
            </summary>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SortFieldComparer.#ctor(System.ComponentModel.SortDescriptionCollection)">
            <summary>
            Create a comparer, using the SortDescription and a Type;
            tries to find a reflection PropertyInfo for each property name
            </summary>
            <param name="sortFields">list of property names and direction to sort by</param>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SortFieldComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to or greater than the other.
            </summary>
            <param name="x">first item to compare</param>
            <param name="y">second item to compare</param>
            <returns>Negative number if x is less than y, zero if equal, and a positive number if x is greater than y</returns>
            <remarks>
            Compares the 2 items using the list of property names and directions.
            </remarks>
        </member>
        <member name="M:System.Windows.Data.PagedCollectionView.SortFieldComparer.FindInsertIndex(System.Object,System.Collections.IList)">
            <summary>
            Steps through the given list using the comparer to find where
            to insert the specified item to maintain sorted order
            </summary>
            <param name="x">Item to insert into the list</param>
            <param name="list">List where we want to insert the item</param>
            <returns>Index where we should insert into</returns>
        </member>
        <member name="T:System.Windows.Data.GroupDescriptionSelectorCallback">
            <summary>
            Represents a method that is used to provide custom logic to select 
            the GroupDescription based on the parent group and its level. 
            </summary>
            <param name="group">The parent group.</param>
            <param name="level">The level of group.</param>
            <returns>The GroupDescription chosen based on the parent group and its level.</returns>
        </member>
        <member name="T:System.ComponentModel.PagedCollectionViewResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.CancelEditNotSupported">
            <summary>
              Looks up a localized string similar to CancelEdit is not supported for the current edit item..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.CannotFilter">
            <summary>
              Looks up a localized string similar to The Filter property cannot be set when the CanFilter property returns false..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.ChangingPageSizeNotAllowedDuringAddOrEdit">
            <summary>
              Looks up a localized string similar to Changing the PageSize is not allowed during an AddNew or EditItem transaction..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.EnumeratorVersionChanged">
            <summary>
              Looks up a localized string similar to Collection was modified; enumeration operation cannot execute..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.IndexOutOfRange">
            <summary>
              Looks up a localized string similar to Index was out of range. Must be non-negative and less than the size of the collection..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.InvalidEnumArgument">
            <summary>
              Looks up a localized string similar to The value of argument &apos;{0}&apos; ({1}) is invalid for Enum type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.InvalidPageSize">
            <summary>
              Looks up a localized string similar to PageSize cannot have a negative value..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.NoCheckOrChangeWhenDeferred">
            <summary>
              Looks up a localized string similar to Cannot change or check the contents or current position of the PagedCollectionView while Refresh is being deferred..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.OperationNotAllowedDuringAddOrEdit">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not allowed during an AddNew or EditItem transaction..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.OperationNotAllowedDuringTransaction">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not allowed during a transaction started by &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.OperationNotAllowedForView">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not allowed for this view..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.PropertyNotReadable">
            <summary>
              Looks up a localized string similar to The property named &apos;{0}&apos; on type &apos;{1}&apos; cannot be read..
            </summary>
        </member>
        <member name="P:System.ComponentModel.PagedCollectionViewResources.RemoveNotSupported">
            <summary>
              Looks up a localized string similar to Remove/RemoveAt is not supported..
            </summary>
        </member>
        <member name="T:System.Windows.Data.PropertyGroupDescription">
            <summary>
            Describes the grouping of items using a property name as the criteria. 
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Data.PropertyGroupDescription._cachedType">
            <summary>
            Cached Type that we store when we are looking for a property value
            </summary>
        </member>
        <member name="F:System.Windows.Data.PropertyGroupDescription._converter">
            <summary>
            Private accessor for the Converter
            </summary>
        </member>
        <member name="F:System.Windows.Data.PropertyGroupDescription._propertyName">
            <summary>
            Private accessor for the PropertyName
            </summary>
        </member>
        <member name="F:System.Windows.Data.PropertyGroupDescription._stringComparison">
            <summary>
            Private accessor for the StringComparison
            </summary>
        </member>
        <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor">
            <summary>
            Initializes a new instance of the PropertyGroupDescription class.
            </summary>
        </member>
        <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PropertyGroupDescription class.
            </summary>
            <param name="propertyName">Property name that we want to group by</param>
        </member>
        <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter)">
            <summary>
            Initializes a new instance of the PropertyGroupDescription class.
            </summary>
            <param name="propertyName">Property name that we want to group by</param>
            <param name="converter">Converter applied to the property value before determining the group name</param>
        </member>
        <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,System.StringComparison)">
            <summary>
            Initializes a new instance of the PropertyGroupDescription class.
            </summary>
            <param name="propertyName">Property name that we want to group by</param>
            <param name="converter">Converter applied to the property value before determining the group name</param>
            <param name="stringComparison">The type of string comparison to use</param>
        </member>
        <member name="M:System.Windows.Data.PropertyGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
            <summary>
            Returns the group name(s) for the given item
            </summary>
            <param name="item">The item to return group names for</param>
            <param name="level">The level of grouping</param>
            <param name="culture">The CultureInfo to supply to the converter</param>
            <returns>The group name(s) for the given item</returns>
        </member>
        <member name="M:System.Windows.Data.PropertyGroupDescription.NamesMatch(System.Object,System.Object)">
            <summary>
            Returns a value that indicates whether the group name and 
            the item name match so that the item belongs to the group.
            </summary>
            <param name="groupName">The name of the group to check</param>
            <param name="itemName">The name of the item to check</param>
            <returns>true if the names match and the item belongs to the group; otherwise, false</returns>
        </member>
        <member name="P:System.Windows.Data.PropertyGroupDescription.Converter">
            <summary>
            Gets or sets a converter to apply to the property value or the item to 
            produce the final value that is used to determine which group(s) an 
            item belongs to. 
            </summary>
        </member>
        <member name="P:System.Windows.Data.PropertyGroupDescription.PropertyName">
            <summary>
            Gets or sets the name of the property that is used to determine which 
            group(s) an item belongs to. 
            </summary>
        </member>
        <member name="P:System.Windows.Data.PropertyGroupDescription.StringComparison">
            <summary>
            Gets or sets a StringComparison value that specifies the comparison 
            between the value of an item (as determined by PropertyName and Converter) 
            and the name of a group. 
            </summary>
        </member>
        <member name="T:System.Windows.Common.TypeHelper">
            <summary>
            Utility class for Type related operations
            </summary>
        </member>
        <member name="M:System.Windows.Common.TypeHelper.GetNestedPropertyType(System.Type,System.String)">
            <summary>
            Extension method that returns the type of a property. That property can be nested.
            Each element of the path needs to be a public instance property.
            </summary>
            <param name="parentType">Type that exposes that property</param>
            <param name="propertyPath">Property path</param>
            <returns>Property type</returns>
        </member>
        <member name="M:System.Windows.Common.TypeHelper.GetNestedPropertyValue(System.Object,System.String,System.Type,System.Exception@)">
            <summary>
            Retrieves the value of a property. That property can be nested.
            Each element of the path needs to be a public instance property.
            </summary>
            <param name="item">Object that exposes the property</param>
            <param name="propertyPath">Property path</param>
            <param name="propertyType">Property type</param>
            <param name="exception">Potential exception</param>
            <returns>Property value</returns>
        </member>
        <member name="M:System.Windows.Common.TypeHelper.GetTypeName(System.Type)">
            <summary>
            Returns the friendly name for a type
            </summary>
            <param name="type">The type to get the name from</param>
            <returns>Textual representation of the input type</returns>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.ComponentModel.DataAnnotations.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.ComponentModel.DataAnnotations</name>
    </assembly>
    <members>
        <member name="T:System.ComponentModel.DataAnnotations.AssociationAttribute">
            <summary>
            Used to mark an Entity member as an association
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.AssociationAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Full form of constructor
            </summary>
            <param name="name">The name of the association. For bi-directional associations, the name must
            be the same on both sides of the association</param>
            <param name="thisKey">Comma separated list of the property names of the key values
            on this side of the association</param>
            <param name="otherKey">Comma separated list of the property names of the key values
            on the other side of the association</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.AssociationAttribute.GetKeyMembers(System.String)">
            <summary>
            Parses the comma delimited key specified
            </summary>
            <param name="key">The key to parse</param>
            <returns>Array of individual key members</returns>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.Name">
            <summary>
            Gets the name of the association. For bi-directional associations, the name must
            be the same on both sides of the association
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey">
            <summary>
            Gets a comma separated list of the property names of the key values
            on this side of the association
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey">
            <summary>
            Gets a comma separated list of the property names of the key values
            on the other side of the association
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.IsForeignKey">
            <summary>
            Gets or sets a value indicating whether this association member represents the foreign key
            side of an association
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKeyMembers">
            <summary>
            Gets the collection of individual key members specified in the ThisKey string.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKeyMembers">
            <summary>
            Gets the collection of individual key members specified in the OtherKey string.
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute">
            <summary>
            This attribute is used to mark the members of a Type that participate in
            optimistic concurrency checks.
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.CustomValidationAttribute">
            <summary>
            Validation attribute that executes a user-supplied method at runtime, using one of these signatures:
            <para>
            public static <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/> Method(object value) { ... }
            </para>
            <para>
            public static <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/> Method(object value, <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/> context) { ... }
            </para>
            <para>
            The value can be strongly typed as type conversion will be attempted.
            </para>
            </summary>
            <remarks>
            This validation attribute is used to invoke custom logic to perform validation at runtime.
            Like any other <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>, its <see cref="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)"/>
            method is invoked to perform validation.  This implementation simply redirects that call to the method
            identified by <see cref="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method"/> on a type identified by <see cref="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidatorType"/>
            <para>
            The supplied <see cref="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidatorType"/> cannot be null, and it must be a public type.
            </para>
            <para>
            The named <see cref="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method"/> must be public, static, return <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/> and take at
            least one input parameter for the value to be validated.  This value parameter may be strongly typed.
            Type conversion will be attempted if clients pass in a value of a different type.
            </para>
            <para>
            The <see cref="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method"/> may also declare an additional parameter of type <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/>.
            The <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/> parameter provides additional context the method may use to determine
            the context in which it is being used.
            </para>
            <para>
            If the method returns <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/>.<see cref="F:System.ComponentModel.DataAnnotations.ValidationResult.Success"/>, that indicates the given value is acceptable and validation passed.
            Returning an instance of <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/> indicates that the value is not acceptable
            and validation failed.
            </para>
            <para>
            If the method returns a <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/> with a <c>null</c> <see cref="P:System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage"/>
            then the normal <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)"/> method will be called to compose the error message.
            </para>
            </remarks>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.ValidationAttribute">
            <summary>
            Base class for all validation attributes.
            <para>Override <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)"/> to implement validation logic.</para>
            </summary>
            <remarks>
            The properties <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType"/> and <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> are used to provide
            a localized error message, but they cannot be set if <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage"/> is also used to provide a non-localized
            error message.
            </remarks>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor">
            <summary>
            Default constructor for any validation attribute.
            </summary>
            <remarks>This constructor chooses a very generic validation error message.
            Developers subclassing ValidationAttribute should use other constructors
            or supply a better message.
            </remarks>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.String)">
            <summary>
            Constructor that accepts a fixed validation error message.
            </summary>
            <param name="errorMessage">A non-localized error message to use in <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString"/>.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.Func{System.String})">
            <summary>
            Allows for providing a resource accessor function that will be used by the <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString"/>
            property to retrieve the error message.  An example would be to have something like
            CustomAttribute() : base( () =&gt; MyResources.MyErrorMessage ) {}.
            </summary>
            <param name="errorMessageAccessor">The <see cref="T:System.Func`1"/> that will return an error message.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.SetupResourceAccessor">
            <summary>
            Validates the configuration of this attribute and sets up the appropriate error string accessor.
            This method bypasses all verification once the ResourceAccessor has been set.
            </summary>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is malformed.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)">
            <summary>
            Formats the error message to present to the user.
            </summary>
            <remarks>The error message will be re-evaluated every time this function is called. 
            It applies the <paramref name="name"/> (for example, the name of a field) to the formated error message, resulting 
            in something like "The field 'name' has an incorrect value".
            <para>
            Derived classes can override this method to customize how errors are generated.
            </para>
            <para>
            The base class implementation will use <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString"/> to obtain a localized
            error message from properties within the current attribute.  If those have not been set, a generic
            error message will be provided.
            </para>
            </remarks>
            <param name="name">The user-visible name to include in the formatted message.</param>
            <returns>The localized string describing the validation error</returns>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is malformed.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)">
            <summary>
            Gets the value indicating whether or not the specified <paramref name="value"/> is valid
            with respect to the current validation attribute.
            <para>
            Derived classes should not override this method as it is only available for backwards compatibility.
            Instead, implement <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)"/>.
            </para>
            </summary>
            <remarks>
            The preferred public entry point for clients requesting validation is the <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)"/> method.
            </remarks>
            <param name="value">The value to validate</param>
            <returns><c>true</c> if the <paramref name="value"/> is acceptable, <c>false</c> if it is not acceptable</returns>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is malformed.</exception>
            <exception cref="T:System.NotImplementedException"> is thrown when neither overload of IsValid has been implemented
            by a derived class.
            </exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Protected virtual method to override and implement validation logic.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="validationContext">A <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/> instance that provides
            context about the validation operation, such as the object and member being validated.</param>
            <returns>
            When validation is valid, <see cref="F:System.ComponentModel.DataAnnotations.ValidationResult.Success"/>.
            <para>
            When validation is invalid, an instance of <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/>.
            </para>
            </returns>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is malformed.</exception>
            <exception cref="T:System.NotImplementedException"> is thrown when <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)"/>
            has not been implemented by a derived class.
            </exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Tests whether the given <paramref name="value"/> is valid with respect to the current
            validation attribute without throwing a <see cref="T:System.ComponentModel.DataAnnotations.ValidationException"/>
            </summary>
            <remarks>
            If this method returns <see cref="F:System.ComponentModel.DataAnnotations.ValidationResult.Success"/>, then validation was successful, otherwise
            an instance of <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/> will be returned with a guaranteed non-null
            <see cref="P:System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage"/>.
            </remarks>
            <param name="value">The value to validate</param>
            <param name="validationContext">A <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/> instance that provides
            context about the validation operation, such as the object and member being validated.</param>
            <returns>
            When validation is valid, <see cref="F:System.ComponentModel.DataAnnotations.ValidationResult.Success"/>.
            <para>
            When validation is invalid, an instance of <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/>.
            </para>
            </returns>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is malformed.</exception>
            <exception cref="T:System.ArgumentNullException">When <paramref name="validationContext"/> is null.</exception>
            <exception cref="T:System.NotImplementedException"> is thrown when <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)"/>
            has not been implemented by a derived class.
            </exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Validates the specified <paramref name="value"/> and throws <see cref="T:System.ComponentModel.DataAnnotations.ValidationException"/> if it is not.
            </summary>
            <remarks>This method invokes the <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)"/> method 
            to determine whether or not the <paramref name="value"/> is acceptable given the <paramref name="validationContext"/>.
            If that method doesn't return <see cref="F:System.ComponentModel.DataAnnotations.ValidationResult.Success"/>, this base method will throw
            a <see cref="T:System.ComponentModel.DataAnnotations.ValidationException"/> containing the <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/> describing the problem.
            </remarks>
            <param name="value">The value to validate</param>
            <param name="validationContext">Additional context that may be used for validation.  It cannot be null.</param>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException"> is thrown if <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)"/> 
            doesn't return <see cref="F:System.ComponentModel.DataAnnotations.ValidationResult.Success"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is malformed.</exception>
            <exception cref="T:System.NotImplementedException"> is thrown when <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)"/>
            has not been implemented by a derived class.
            </exception>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString">
            <summary>
            Gets the localized error message string, coming either from <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage"/>, or from evaluating the 
            <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType"/> and <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> pair.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.CustomErrorMessageSet">
            <summary>
            A flag indicating whether a developer has customized the attribute's error message by setting any one of 
            ErrorMessage, ErrorMessageResourceName, or ErrorMessageResourceType.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage">
            <summary>
            Gets or sets and explicit error message string.
            </summary>
            <value>
            This property is intended to be used for non-localizable error messages.  Use
            <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType"/> and <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/> for localizable error messages.
            </value>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName">
            <summary>
            Gets or sets the resource name (property name) to use as the key for lookups on the resource type.
            </summary>
            <value>
            Use this property to set the name of the property within <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType"/>
            that will provide a localized error message.  Use <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage"/> for non-localized error messages.
            </value>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType">
            <summary>
            Gets or sets the resource type to use for error message lookups.
            </summary>
            <value>
            Use this property only in conjunction with <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName"/>.  They are
            used together to retrieve localized error messages at runtime.
            <para>Use <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage"/> instead of this pair if error messages are not localized.
            </para>
            </value>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.#ctor(System.Type,System.String)">
            <summary>
            Instantiates a custom validation attribute that will invoke a method in the
            specified type.
            </summary>
            <remarks>An invalid <paramref name="validatorType"/> or <paramref name="Method"/> will be cause
            <see cref="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)"/>&gt; to return a <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/>
            and <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)"/> to return a summary error message.
            </remarks>
            <param name="validatorType">The type that will contain the method to invoke.  It cannot be null.  See <see cref="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method"/>.</param>
            <param name="method">The name of the method to invoke in <paramref name="validatorType"/>.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Override of validation method.  See <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)"/>.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="validationContext">A <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/> instance that provides
            context about the validation operation, such as the object and member being validated.</param>
            <returns>Whatever the <see cref="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method"/> in <see cref="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidatorType"/> returns.</returns>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is malformed.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.FormatErrorMessage(System.String)">
            <summary>
            Override of <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)"/>
            </summary>
            <param name="name">The name to include in the formatted string</param>
            <returns>A localized string to describe the problem.</returns>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is malformed.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.IsAttributeWellFormed(System.String@)">
            <summary>
            Determines whether the current attribute instance itself is valid for use.
            </summary>
            <param name="errorMessage">The returned error message if it is not malformed, null if it is well-formed.</param>
            <returns><c>true</c> if it is valid.</returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidateValidatorTypeParameter">
            <summary>
            Internal helper to determine whether <see cref="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidatorType"/> is legal for use.
            </summary>
            <returns><c>null</c> or the appropriate error message.</returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidateMethodParameter">
            <summary>
            Internal helper to determine whether <see cref="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method"/> is legal for use.
            </summary>
            <returns><c>null</c> or the appropriate error message.</returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.ThrowIfAttributeNotWellFormed">
            <summary>
            Throws InvalidOperationException if the attribute is not valid.
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.TryConvertValue(System.Object,System.Object@)">
            <summary>
            Attempts to convert the given value to the type needed to invoke the method for the current
            CustomValidationAttribute.
            </summary>
            <param name="value">The value to check/convert.</param>
            <param name="convertedValue">If successful, the converted (or copied) value.</param>
            <returns><c>true</c> if type value was already correct or was successfully converted.</returns>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidatorType">
            <summary>
            Gets the type that contains the validation method identified by <see cref="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method"/>.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method">
            <summary>
            Gets the name of the method in <see cref="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidatorType"/> to invoke to perform validation.
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.DataType">
            <summary>
            Enumeration of logical data types that may appear in <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute"/>
            </summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.DataType.Custom">
            <summary>
            Custom data type, not one of the static data types we know
            </summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.DataType.DateTime">
            <summary>
            DateTime data type
            </summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.DataType.Date">
            <summary>
            Date data type
            </summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.DataType.Time">
            <summary>
            Time data type
            </summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.DataType.Duration">
            <summary>
            Duration data type
            </summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.DataType.PhoneNumber">
            <summary>
            Phone number data type
            </summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.DataType.Currency">
            <summary>
            Currency data type
            </summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.DataType.Text">
            <summary>
            Plain text data type
            </summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.DataType.Html">
            <summary>
            Html data type
            </summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.DataType.MultilineText">
            <summary>
            Multiline text data type
            </summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.DataType.EmailAddress">
            <summary>
            Email address data type
            </summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.DataType.Password">
            <summary>
            Password data type -- do not echo in UI
            </summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.DataType.Url">
            <summary>
            URL data type
            </summary>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.DataType.ImageUrl">
            <summary>
            URL to an Image -- to be displayed as an image instead of text
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.DataTypeAttribute">
            <summary>
            Allows for clarification of the <see cref="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType"/> represented by a given
            property (such as <see cref="F:System.ComponentModel.DataAnnotations.DataType.PhoneNumber"/>
            or <see cref="F:System.ComponentModel.DataAnnotations.DataType.Url"/>)
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.GetDataTypeName">
            <summary>
            Return the name of the data type, either using the <see cref="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType"/> enum or <see cref="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.CustomDataType"/> string
            </summary>
            <returns>The name of the data type enum</returns>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is ill-formed.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)">
            <summary>
            Constructor that accepts a data type enumeration
            </summary>
            <param name="dataType">The <see cref="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType"/> enum value indicating the type to apply.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.String)">
            <summary>
            Constructor that accepts the string name of a custom data type
            </summary>
            <param name="customDataType">The string name of the custom data type.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.IsValid(System.Object)">
            <summary>
            Override of <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)"/>
            </summary>
            <remarks>This override always returns <c>true</c>.  Subclasses should override this to provide the correct result.</remarks>
            <param name="value">The value to validate</param>
            <returns>Unconditionally returns <c>true</c></returns>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is ill-formed.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.EnsureValidDataType">
            <summary>
            Throws an exception if this attribute is not correctly formed
            </summary>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is ill-formed.</exception>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType">
            <summary>
            Gets the DataType. If it equals DataType.Custom, <see cref="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.CustomDataType"/> should also be retrieved.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.CustomDataType">
            <summary>
            Gets the string representing a custom data type. Returns a non-null value only if <see cref="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType"/> is DataType.Custom.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DisplayFormat">
            <summary>
            Gets the default display format that gets used along with this DataType.
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.DisplayAttribute">
            <summary>
            DisplayAttribute is a general-purpose attribute to specify user-visible globalizable strings for types and members.
            The string properties of this class can be used either as literals or as resource identifiers into a specified
            <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/>
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor">
            <summary>
            Default constructor for DisplayAttribute.  All associated string properties and methods will return <c>null</c>.
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetShortName">
            <summary>
            Gets the UI display string for ShortName.
            <para>
            This can be either a literal, non-localized string provided to <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName"/> or the
            localized string found when <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has been specified and <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName"/>
            represents a resource key within that resource type.
            </para>
            </summary>
            <returns>
            When <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has not been specified, the value of
            <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName"/> will be returned.
            <para>
            When <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has been specified and <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName"/>
            represents a resource key within that resource type, then the localized value will be returned.
            </para>
            <para>
            If <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName"/> is <c>null</c>, the value from <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetName"/> will be returned.
            </para>
            </returns>
            <exception cref="T:System.InvalidOperationException">
            After setting both the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> property and the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName"/> property,
            but a public static property with a name matching the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName"/> value couldn't be found
            on the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetName">
            <summary>
            Gets the UI display string for Name.
            <para>
            This can be either a literal, non-localized string provided to <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name"/> or the
            localized string found when <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has been specified and <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name"/>
            represents a resource key within that resource type.
            </para>
            </summary>
            <returns>
            When <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has not been specified, the value of
            <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name"/> will be returned.
            <para>
            When <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has been specified and <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name"/>
            represents a resource key within that resource type, then the localized value will be returned.
            </para>
            <para>
            Can return <c>null</c> and will not fall back onto other values, as it's more likely for the
            consumer to want to fall back onto the property name.
            </para>
            </returns>
            <exception cref="T:System.InvalidOperationException">
            After setting both the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> property and the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name"/> property,
            but a public static property with a name matching the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name"/> value couldn't be found
            on the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetDescription">
            <summary>
            Gets the UI display string for Description.
            <para>
            This can be either a literal, non-localized string provided to <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description"/> or the
            localized string found when <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has been specified and <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description"/>
            represents a resource key within that resource type.
            </para>
            </summary>
            <returns>
            When <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has not been specified, the value of
            <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description"/> will be returned.
            <para>
            When <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has been specified and <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description"/>
            represents a resource key within that resource type, then the localized value will be returned.
            </para>
            </returns>
            <exception cref="T:System.InvalidOperationException">
            After setting both the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> property and the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description"/> property,
            but a public static property with a name matching the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description"/> value couldn't be found
            on the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetPrompt">
            <summary>
            Gets the UI display string for Prompt.
            <para>
            This can be either a literal, non-localized string provided to <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt"/> or the
            localized string found when <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has been specified and <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt"/>
            represents a resource key within that resource type.
            </para>
            </summary>
            <returns>
            When <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has not been specified, the value of
            <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt"/> will be returned.
            <para>
            When <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has been specified and <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt"/>
            represents a resource key within that resource type, then the localized value will be returned.
            </para>
            </returns>
            <exception cref="T:System.InvalidOperationException">
            After setting both the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> property and the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt"/> property,
            but a public static property with a name matching the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt"/> value couldn't be found
            on the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetGroupName">
            <summary>
            Gets the UI display string for GroupName.
            <para>
            This can be either a literal, non-localized string provided to <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName"/> or the
            localized string found when <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has been specified and <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName"/>
            represents a resource key within that resource type.
            </para>
            </summary>
            <returns>
            When <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has not been specified, the value of
            <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName"/> will be returned.
            <para>
            When <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has been specified and <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName"/>
            represents a resource key within that resource type, then the localized value will be returned.
            </para>
            </returns>
            <exception cref="T:System.InvalidOperationException">
            After setting both the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> property and the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName"/> property,
            but a public static property with a name matching the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName"/> value couldn't be found
            on the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateField">
            <summary>
            Gets the value of <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField"/> if it has been set, or <c>null</c>.
            </summary>
            <returns>
            When <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField"/> has been set returns the value of that property.
            <para>
            When <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField"/> has not been set returns <c>null</c>.
            </para>
            </returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateFilter">
            <summary>
            Gets the value of <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter"/> if it has been set, or <c>null</c>.
            </summary>
            <returns>
            When <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter"/> has been set returns the value of that property.
            <para>
            When <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter"/> has not been set returns <c>null</c>.
            </para>
            </returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetOrder">
            <summary>
            Gets the value of <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order"/> if it has been set, or <c>null</c>.
            </summary>
            <returns>
            When <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order"/> has been set returns the value of that property.
            <para>
            When <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order"/> has not been set returns <c>null</c>.
            </para>
            </returns>
            <remarks>
            When an order is not specified, presentation layers should consider using the value
            of 10000.  This value allows for explicitly-ordered fields to be displayed before
            and after the fields that don't specify an order.
            </remarks>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName">
            <summary>
            Gets or sets the ShortName attribute property, which may be a resource key string.
            <para>
            Consumers must use the <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetShortName"/> method to retrieve the UI display string.
            </para>
            </summary>
            <remarks>
            The property contains either the literal, non-localized string or the resource key
            to be used in conjunction with <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> to configure a localized
            short name for display.
            <para>
            The <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetShortName"/> method will return either the literal, non-localized
            string or the localized string when <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has been specified.
            </para>
            </remarks>
            <value>
            The short name is generally used as the grid column label for a UI element bound to the member
            bearing this attribute.  A <c>null</c> or empty string is legal, and consumers must allow for that.
            </value>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name">
            <summary>
            Gets or sets the Name attribute property, which may be a resource key string.
            <para>
            Consumers must use the <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetName"/> method to retrieve the UI display string.
            </para>
            </summary>
            <remarks>
            The property contains either the literal, non-localized string or the resource key
            to be used in conjunction with <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> to configure a localized
            name for display.
            <para>
            The <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetName"/> method will return either the literal, non-localized
            string or the localized string when <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has been specified.
            </para>
            </remarks>
            <value>
            The name is generally used as the field label for a UI element bound to the member
            bearing this attribute.  A <c>null</c> or empty string is legal, and consumers must allow for that.
            </value>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description">
            <summary>
            Gets or sets the Description attribute property, which may be a resource key string.
            <para>
            Consumers must use the <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetDescription"/> method to retrieve the UI display string.
            </para>
            </summary>
            <remarks>
            The property contains either the literal, non-localized string or the resource key
            to be used in conjunction with <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> to configure a localized
            description for display.
            <para>
            The <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetDescription"/> method will return either the literal, non-localized
            string or the localized string when <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has been specified.
            </para>
            </remarks>
            <value>
            Description is generally used as a tool tip or description a UI element bound to the member
            bearing this attribute.  A <c>null</c> or empty string is legal, and consumers must allow for that.
            </value>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt">
            <summary>
            Gets or sets the Prompt attribute property, which may be a resource key string.
            <para>
            Consumers must use the <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetPrompt"/> method to retrieve the UI display string.
            </para>
            </summary>
            <remarks>
            The property contains either the literal, non-localized string or the resource key
            to be used in conjunction with <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> to configure a localized
            prompt for display.
            <para>
            The <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetPrompt"/> method will return either the literal, non-localized
            string or the localized string when <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has been specified.
            </para>
            </remarks>
            <value>
            A prompt is generally used as a prompt or watermark for a UI element bound to the member
            bearing this attribute.  A <c>null</c> or empty string is legal, and consumers must allow for that.
            </value>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName">
            <summary>
            Gets or sets the GroupName attribute property, which may be a resource key string.
            <para>
            Consumers must use the <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetGroupName"/> method to retrieve the UI display string.
            </para>
            </summary>
            <remarks>
            The property contains either the literal, non-localized string or the resource key
            to be used in conjunction with <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> to configure a localized
            group name for display.
            <para>
            The <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetGroupName"/> method will return either the literal, non-localized
            string or the localized string when <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> has been specified.
            </para>
            </remarks>
            <value>
            A group name is used for grouping fields into the UI.  A <c>null</c> or empty string is legal,
            and consumers must allow for that.
            </value>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType">
            <summary>
            Gets or sets the <see cref="T:System.Type"/> that contains the resources for <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName"/>,
            <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name"/>, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description"/>, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt"/>, and <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName"/>.
            Using <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType"/> along with these Key properties, allows the <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetShortName"/>,
            <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetName"/>, <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetDescription"/>, <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetPrompt"/>, and <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetGroupName"/>
            methods to return localized values.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField">
            <summary>
            Gets or sets whether UI should be generated automatically to display this field. If this property is not
            set then the presentation layer will automatically determine whether UI should be generated. Setting this
            property allows an override of the default behavior of the presentation layer.
            <para>
            Consumers must use the <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateField"/> method to retrieve the value, as this property getter will throw
            an exception if the value has not been set.
            </para>
            </summary>
            <exception cref="T:System.InvalidOperationException">
            If the getter of this property is invoked when the value has not been explicitly set using the setter.
            </exception>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter">
            <summary>
            Gets or sets whether UI should be generated automatically to display filtering for this field. If this property is not
            set then the presentation layer will automatically determine whether filtering UI should be generated. Setting this
            property allows an override of the default behavior of the presentation layer.
            <para>
            Consumers must use the <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateFilter"/> method to retrieve the value, as this property getter will throw
            an exception if the value has not been set.
            </para>
            </summary>
            <exception cref="T:System.InvalidOperationException">
            If the getter of this property is invoked when the value has not been explicitly set using the setter.
            </exception>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order">
            <summary>
            Gets or sets the order in which this field should be displayed.  If this property is not set then
            the presentation layer will automatically determine the order.  Setting this property explicitly
            allows an override of the default behavior of the presentation layer.
            <para>
            Consumers must use the <see cref="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetOrder"/> method to retrieve the value, as this property getter will throw
            an exception if the value has not been set.
            </para>
            </summary>
            <exception cref="T:System.InvalidOperationException">
            If the getter of this property is invoked when the value has not been explicitly set using the setter.
            </exception>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute">
            <summary>
            Sets the display column, the sort column, and the sort order for when a table is used as a parent table in FK relationships.
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute">
            <summary>
            Allows overriding various display-related options for a given field. The options have the same meaning as in BoundField.
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString">
            <summary>
            Gets or sets the format string
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText">
            <summary>
            Gets or sets the string to display when the value is null
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull">
            <summary>
            Gets or sets a value indicating whether empty strings should be set to null
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode">
            <summary>
            Gets or sets a value indicating whether the format string should be used in edit mode
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute">
            <summary>
            An attribute used to specify the filtering behavior for a column.
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String)">
            <summary>
            Constructor that accepts the name of the control, without specifying which presentation layer to use
            </summary>
            <param name="filterUIHint">The name of the UI control.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String)">
            <summary>
            Constructor that accepts both the name of the control as well as the presentation layer
            </summary>
            <param name="filterUIHint">The name of the control to use</param>
            <param name="presentationLayer">The name of the presentation layer that supports this control</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String,System.Object[])">
            <summary>
            Full constructor that accepts the name of the control, presentation layer, and optional parameters
            to use when constructing the control
            </summary>
            <param name="filterUIHint">The name of the control</param>
            <param name="presentationLayer">The presentation layer</param>
            <param name="controlParameters">The list of parameters for the control</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.GetHashCode">
            <summary>
            Returns the hash code for this FilterUIHintAttribute.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.Equals(System.Object)">
            <summary>
            Determines whether this instance of FilterUIHintAttribute and a specified object,
            which must also be a FilterUIHintAttribute object, have the same value.
            </summary>
            <param name="obj">An System.Object.</param>
            <returns>true if obj is a FilterUIHintAttribute and its value is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint">
            <summary>
            Gets the name of the control that is most appropriate for this associated property or field
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.PresentationLayer">
            <summary>
            Gets the name of the presentation layer that supports the control type in <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint"/>
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.ControlParameters">
            <summary>
            Gets the name-value pairs used as parameters to the control's constructor
            </summary>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is ill-formed.</exception>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.EditableAttribute">
            <summary>
            Indicates whether the consumer of a field or property, such as a client application,
            should allow editing of the value.
            </summary>
            <remarks>
            This attribute neither enforces nor guarantees editability; the underlying data
            store might allow changing the data regardless of this attribute.  The presence
            of this attribute signals intent to the consumer of the attribute whethere or not
            the end user should be allowed to change the value via the client application.
            </remarks>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.EditableAttribute.#ctor(System.Boolean)">
            <summary>
            Indicate whether or not a field/property is editable.
            </summary>
            <param name="allowEdit">
            Indicates whether the field/property is editable.  The value provided
            will apply to both <see cref="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowEdit"/> and
            <see cref="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowInitialValue"/> unless the <see cref="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowInitialValue"/>
            property is explicitly specified.
            </param>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowEdit">
            <summary>
            Indicates whether or not the field/property allows editing of the
            value.
            </summary>
            <value>
            When <c>true</c>, the field/property is editable.
            <para>
            When <c>false</c>, the field/property is not editable.
            </para>
            </value>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowInitialValue">
            <summary>
            Indicates whether or not the field/property allows an initial value
            to be specified.
            </summary>
            <remarks>
            The value of this property defaults to match the <see cref="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowEdit"/>
            property value specified in the constructor.
            </remarks>
            <value>
            When <c>true</c>, the field/property can have its value set for
            newly constructed instances, such as during an insert operation.
            <para>
            When <c>false</c>, the field/property cannot have its
            value provided for newly constructed instances, such as during
            an insert operation.  This will often indicate that the value
            is auto-generated by the persistence store.
            </para>
            </value>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.KeyAttribute">
            <summary>
            Used to mark one or more entity properties that provide the entity's unique identity
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.LocalizableString">
            <summary>
            A helper class for providing a localizable string property.  
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.LocalizableString.#ctor(System.String)">
            <summary>
            Constructs a localizable string, specifying the property name associated
            with this item.  The <paramref name="propertyName"/> value will be used
            within any exceptions thrown as a result of localization failures.
            </summary>
            <param name="propertyName">The name of the property being localized.  This name
            will be used within exceptions thrown as a result of localization failures.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.LocalizableString.ClearCache">
            <summary>
            Clears any cached values, forcing <see cref="M:System.ComponentModel.DataAnnotations.LocalizableString.GetLocalizableValue"/> to
            perform evaluation.
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.LocalizableString.GetLocalizableValue">
            <summary>
            Gets the potentially localized value.
            </summary>
            <remarks>
            If <see cref="P:System.ComponentModel.DataAnnotations.LocalizableString.ResourceType"/> has been specified and <see cref="P:System.ComponentModel.DataAnnotations.LocalizableString.Value"/> is not
            null, then localization will occur and the localized value will be returned.
            <para>
            If <see cref="P:System.ComponentModel.DataAnnotations.LocalizableString.ResourceType"/> is null then <see cref="P:System.ComponentModel.DataAnnotations.LocalizableString.Value"/> will be returned
            as a literal, non-localized string.
            </para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            Thrown if localization fails.  This can occur if <see cref="P:System.ComponentModel.DataAnnotations.LocalizableString.ResourceType"/> has been
            specified, <see cref="P:System.ComponentModel.DataAnnotations.LocalizableString.Value"/> is not null, but the resource could not be
            accessed.  <see cref="P:System.ComponentModel.DataAnnotations.LocalizableString.ResourceType"/> must be a public class, and <see cref="P:System.ComponentModel.DataAnnotations.LocalizableString.Value"/>
            must be the name of a public static string property that contains a getter.
            </exception>
            <returns>
            Returns the potentially localized value.
            </returns>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.LocalizableString.Value">
            <summary>
            Gets or sets the value of this localizable string.  This value can be
            either the literal, non-localized value, or it can be a resource name
            found on the resource type supplied to <see cref="M:System.ComponentModel.DataAnnotations.LocalizableString.GetLocalizableValue"/>.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.LocalizableString.ResourceType">
            <summary>
            Gets or sets the resource type to be used for localization.
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.RangeAttribute">
            <summary>
            Used for specifying a range constraint
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor that takes integer minimum and maximum values
            </summary>
            <param name="minimum">The minimum value, inclusive</param>
            <param name="maximum">The maximum value, inclusive</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Double,System.Double)">
            <summary>
            Constructor that takes double minimum and maximum values
            </summary>
            <param name="minimum">The minimum value, inclusive</param>
            <param name="maximum">The maximum value, inclusive</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)">
            <summary>
            Allows for specifying range for arbitrary types. The minimum and maximum strings will be converted to the target type.
            </summary>
            <param name="type">The type of the range parameters. Must implement IComparable.</param>
            <param name="minimum">The minimum allowable value.</param>
            <param name="maximum">The maximum allowable value.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.IsValid(System.Object)">
            <summary>
            Returns true if the value falls between min and max, inclusive.
            </summary>
            <param name="value">The value to test for validity.</param>
            <returns><c>true</c> means the <paramref name="value"/> is valid</returns>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is ill-formed.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.FormatErrorMessage(System.String)">
            <summary>
            Override of <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)"/>
            </summary>
            <remarks>This override exists to provide a formatted message describing the minimum and maximum values</remarks>
            <param name="name">The user-visible name to include in the formatted message.</param>
            <returns>A localized string describing the minimum and maximum values</returns>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is ill-formed.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.SetupConversion">
            <summary>
            Validates the properties of this attribute and sets up the conversion function.
            This method throws exceptions if the attribute is not configured properly.
            If it has once determined it is properly configured, it is a NOP.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum">
            <summary>
            Gets the minimum value for the range
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum">
            <summary>
            Gets the maximum value for the range
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType">
            <summary>
            Gets the type of the <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum"/> and <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum"/> values (e.g. Int32, Double, or some custom type)
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
            <summary>
            Regular expression validation attribute
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)">
            <summary>
            Constructor that accepts the regular expression pattern
            </summary>
            <param name="pattern">The regular expression to use.  It cannot be null.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)">
            <summary>
            Override of <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)"/>
            </summary>
            <remarks>This override performs the specific regular expression matching of the given <paramref name="value"/></remarks>
            <param name="value">The value to test for validity.</param>
            <returns><c>true</c> if the given value matches the current regular expression pattern</returns>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is ill-formed.</exception>
            <exception cref="T:System.ArgumentException"> is thrown if the <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern"/> is not a valid regular expression.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)">
            <summary>
            Override of <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)"/>
            </summary>
            <remarks>This override provide a formatted error message describing the pattern</remarks>
            <param name="name">The user-visible name to include in the formatted message.</param>
            <returns>The localized message to present to the user</returns>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is ill-formed.</exception>
            <exception cref="T:System.ArgumentException"> is thrown if the <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern"/> is not a valid regular expression.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.SetupRegex">
            <summary>
            Sets up the <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Regex"/> property from the <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern"/> property.
            </summary>
            <exception cref="T:System.ArgumentException"> is thrown if the current <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern"/> cannot be parsed</exception>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is ill-formed.</exception>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern">
            <summary>
            Gets the regular expression pattern to use
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.RequiredAttribute">
            <summary>
            Validation attribute to indicate that a property field or parameter is required.
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor">
            <summary>
            Default constructor.
            </summary>
            <remarks>This constructor selects a reasonable default error message for <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)"/></remarks>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RequiredAttribute.IsValid(System.Object)">
            <summary>
            Override of <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)"/>
            </summary>
            <param name="value">The value to test</param>
            <returns><c>false</c> if the <paramref name="value"/> is null or an empty string</returns>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.AssociatedMetadataTypeTypeDescriptor_MetadataTypeContainsUnknownProperties">
            <summary>
              Looks up a localized string similar to The associated metadata type for type &apos;{0}&apos; contains the following unknown properties or fields: {1}. Please make sure that the names of these members match the names of the properties on the main type..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.AttributeStore_Type_Must_Be_Public">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; must be public..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.AttributeStore_Unknown_Method">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; does not contain a public method named &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.AttributeStore_Unknown_Property">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; does not contain a public property named &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.CustomValidationAttribute_Method_Must_Return_ValidationResult">
            <summary>
              Looks up a localized string similar to The CustomValidationAttribute method &apos;{0}&apos; in type &apos;{1}&apos; must return System.ComponentModel.DataAnnotations.ValidationResult.  Use System.ComponentModel.DataAnnotations.ValidationResult.Success to represent success..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.CustomValidationAttribute_Method_Not_Found">
            <summary>
              Looks up a localized string similar to The CustomValidationAttribute method &apos;{0}&apos; does not exist in type &apos;{1}&apos; or is not public and static..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.CustomValidationAttribute_Method_Required">
            <summary>
              Looks up a localized string similar to The CustomValidationAttribute.Method was not specified..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.CustomValidationAttribute_Method_Signature">
            <summary>
              Looks up a localized string similar to The CustomValidationAttribute method &apos;{0}&apos; in type &apos;{1}&apos; must match the expected signature: public static ValidationResult {0}(object value, ValidationContext context).  The value can be strongly typed.  The ValidationContext parameter is optional..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.CustomValidationAttribute_Type_Conversion_Failed">
            <summary>
              Looks up a localized string similar to Could not convert the value of type &apos;{0}&apos; to &apos;{1}&apos; as expected by method {2}.{3}..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.CustomValidationAttribute_Type_Must_Be_Public">
            <summary>
              Looks up a localized string similar to The custom validation type &apos;{0}&apos; must be public..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.CustomValidationAttribute_ValidationError">
            <summary>
              Looks up a localized string similar to {0} is not valid..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.CustomValidationAttribute_ValidatorType_Required">
            <summary>
              Looks up a localized string similar to The CustomValidationAttribute.ValidatorType was not specified..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.DataTypeAttribute_EmptyDataTypeString">
            <summary>
              Looks up a localized string similar to The custom DataType string cannot be null or empty..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.DisplayAttribute_PropertyNotSet">
            <summary>
              Looks up a localized string similar to The {0} property has not been set.  Use the {1} method to get the value..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.EnumDataTypeAttribute_TypeCannotBeNull">
            <summary>
              Looks up a localized string similar to The type provided for EnumDataTypeAttribute cannot be null..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.EnumDataTypeAttribute_TypeNeedsToBeAnEnum">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; needs to represent an enumeration type..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.LocalizableString_LocalizationFailed">
            <summary>
              Looks up a localized string similar to Cannot retrieve property &apos;{0}&apos; because localization failed.  Type &apos;{1}&apos; is not public or does not contain a public static string property with the name &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.MetadataTypeAttribute_TypeCannotBeNull">
            <summary>
              Looks up a localized string similar to MetadataClassType cannot be null..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.RangeAttribute_ArbitraryTypeNotIComparable">
            <summary>
              Looks up a localized string similar to The type {0} must implement {1}..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.RangeAttribute_MinGreaterThanMax">
            <summary>
              Looks up a localized string similar to The maximum value &apos;{0}&apos; must be greater than or equal to the minimum value &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.RangeAttribute_Must_Set_Min_And_Max">
            <summary>
              Looks up a localized string similar to The minimum and maximum values must be set..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.RangeAttribute_Must_Set_Operand_Type">
            <summary>
              Looks up a localized string similar to The OperandType must be set when strings are used for minimum and maximum values..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.RangeAttribute_ValidationError">
            <summary>
              Looks up a localized string similar to The field {0} must be between {1} and {2}..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.RegexAttribute_ValidationError">
            <summary>
              Looks up a localized string similar to The field {0} must match the regular expression &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.RegularExpressionAttribute_Empty_Pattern">
            <summary>
              Looks up a localized string similar to The pattern must be set to a valid regular expression..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.RequiredAttribute_ValidationError">
            <summary>
              Looks up a localized string similar to The {0} field is required..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.StringLengthAttribute_InvalidMaxLength">
            <summary>
              Looks up a localized string similar to The maximum length must be a nonnegative integer..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.StringLengthAttribute_ValidationError">
            <summary>
              Looks up a localized string similar to The field {0} must be a string with a maximum length of {1}..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.StringLengthAttribute_ValidationErrorIncludingMinimum">
            <summary>
              Looks up a localized string similar to The field {0} must be a string with a minimum length of {2} and a maximum length of {1}..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.UIHintImplementation_ControlParameterKeyIsNotAString">
            <summary>
              Looks up a localized string similar to The key parameter at position {0} with value &apos;{1}&apos; is not a string. Every key control parameter must be a string..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.UIHintImplementation_ControlParameterKeyIsNull">
            <summary>
              Looks up a localized string similar to The key parameter at position {0} is null. Every key control parameter must be a string..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.UIHintImplementation_ControlParameterKeyOccursMoreThanOnce">
            <summary>
              Looks up a localized string similar to The key parameter at position {0} with value &apos;{1}&apos; occurs more than once..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.UIHintImplementation_NeedEvenNumberOfControlParameters">
            <summary>
              Looks up a localized string similar to The number of control parameters must be even..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.ValidationAttribute_Cannot_Set_ErrorMessage_And_Resource">
            <summary>
              Looks up a localized string similar to Either ErrorMessageString or ErrorMessageResourceName must be set, but not both..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.ValidationAttribute_IsValid_NotImplemented">
            <summary>
              Looks up a localized string similar to IsValid(object value) has not been implemented by this class.  The preferred entry point is GetValidationResult() and classes should override IsValid(object value, ValidationContext context)..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.ValidationAttribute_NeedBothResourceTypeAndResourceName">
            <summary>
              Looks up a localized string similar to Both ErrorMessageResourceType and ErrorMessageResourceName need to be set on this attribute..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.ValidationAttribute_ResourcePropertyNotStringType">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; on resource type &apos;{1}&apos; is not a string type..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.ValidationAttribute_ResourceTypeDoesNotHaveProperty">
            <summary>
              Looks up a localized string similar to The resource type &apos;{0}&apos; does not have an accessible static property named &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.ValidationAttribute_ValidationError">
            <summary>
              Looks up a localized string similar to The field {0} is invalid..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.ValidationContext_Must_Be_Method">
            <summary>
              Looks up a localized string similar to The ValidationContext for the type &apos;{0}&apos;, member name &apos;{1}&apos; must provide the MethodInfo..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.ValidationContextServiceContainer_ItemAlreadyExists">
            <summary>
              Looks up a localized string similar to A service of type &apos;{0}&apos; already exists in the container..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.Validator_InstanceMustMatchValidationContextInstance">
            <summary>
              Looks up a localized string similar to The instance provided must match the ObjectInstance on the ValidationContext supplied..
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources.Validator_Property_Value_Wrong_Type">
            <summary>
              Looks up a localized string similar to The value for property &apos;{0}&apos; must be of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.StringLengthAttribute">
            <summary>
            Validation attribute to assert a string property, field or parameter does not exceed a maximum length
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)">
            <summary>
            Constructor that accepts the maximum length of the string.
            </summary>
            <param name="maximumLength">The maximum length, inclusive.  It may not be negative.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.IsValid(System.Object)">
            <summary>
            Override of <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)"/>
            </summary>
            <remarks>This method returns <c>true</c> if the <paramref name="value"/> is null.  
            It is assumed the <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute"/> is used if the value may not be null.</remarks>
            <param name="value">The value to test.</param>
            <returns><c>true</c> if the value is null or less than or equal to the set maximum length</returns>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is ill-formed.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.FormatErrorMessage(System.String)">
            <summary>
            Override of <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)"/>
            </summary>
            <param name="name">The name to include in the formatted string</param>
            <returns>A localized string to describe the maximum acceptable length</returns>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is ill-formed.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.EnsureLegalLengths">
            <summary>
            Checks that MinimumLength and MaximumLength have legal values.  Throws InvalidOperationException if not.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength">
            <summary>
            Gets the maximum acceptable length of the string
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength">
            <summary>
            Gets or sets the minimum acceptable length of the string
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.TimestampAttribute">
            <summary>
            This attribute is used to mark a Timestamp member of a Type. 
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.UIHintAttribute">
            <summary>
            Attribute to provide a hint to the presentation layer about what control it should use
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)">
            <summary>
            Constructor that accepts the name of the control, without specifying which presentation layer to use
            </summary>
            <param name="uiHint">The name of the UI control.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)">
            <summary>
            Constructor that accepts both the name of the control as well as the presentation layer
            </summary>
            <param name="uiHint">The name of the control to use</param>
            <param name="presentationLayer">The name of the presentation layer that supports this control</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])">
            <summary>
            Full constructor that accepts the name of the control, presentation layer, and optional parameters
            to use when constructing the control
            </summary>
            <param name="uiHint">The name of the control</param>
            <param name="presentationLayer">The presentation layer</param>
            <param name="controlParameters">The list of parameters for the control</param>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
            <summary>
            Gets the name of the control that is most appropriate for this associated property or field
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer">
            <summary>
            Gets the name of the presentation layer that supports the control type in <see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint"/>
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters">
            <summary>
            Gets the name-value pairs used as parameters to the control's constructor
            </summary>
            <exception cref="T:System.InvalidOperationException"> is thrown if the current attribute is ill-formed.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHintImplementation.GetHashCode">
            <summary>
            Returns the hash code for this UIHintAttribute.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHintImplementation.Equals(System.Object)">
            <summary>
            Determines whether this instance of UIHintAttribute and a specified object,
            which must also be a UIHintAttribute object, have the same value.
            </summary>
            <param name="obj">An System.Object.</param>
            <returns>true if obj is a UIHintAttribute and its value is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHintImplementation.BuildControlParametersDictionary">
            <summary>
            Validates the input control parameters and throws InvalidOperationException if they are not correct.
            </summary>
            <returns>
            Dictionary of control parameters.
            </returns>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHintImplementation.UIHint">
            <summary>
            Gets the name of the control that is most appropriate for this associated property or field
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHintImplementation.PresentationLayer">
            <summary>
            Gets the name of the presentation layer that supports the control type in <see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHintImplementation.UIHint"/>
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.ValidationContext">
            <summary>
            Describes the context in which a validation is being performed.
            </summary>
            <remarks>
            This class contains information describing the instance on which
            validation is being performed.
            <para>
            It supports <see cref="T:System.IServiceProvider"/> so that custom validation
            code can acquire additional services to help it perform its validation.
            </para>
            <para>
            An <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.Items"/> property bag is available for additional contextual
            information about the validation.  Values stored in <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.Items"/>
            will be available to validation methods that use this <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/>
            </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
            Construct a ValidationContext for a given object instance, an optional <paramref name="serviceProvider"/>, and an optional
            property bag of <paramref name="items"/>.
            </summary>
            <param name="instance">The object instance being validated.  It cannot be null.</param>
            <param name="serviceProvider">
            Optional <see cref="T:System.IServiceProvider"/> to use when <see cref="M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)"/> is called.
            If it is null, <see cref="M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)"/> will always return null.
            </param>
            <param name="items">Optional set of key/value pairs to make available to consumers via <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.Items"/>.
            If null, an empty dictionary will be created.  If not null, the set of key/value pairs will be copied into a
            new dictionary, preventing consumers from modifying the original dictionary.
            </param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="instance"/> is <c>null</c></exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.GetDisplayName">
            <summary>
            Looks up the display name using the DisplayAttribute attached to the respective type or property.
            </summary>
            <returns>A display-friendly name of the member represented by the <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName"/>.</returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)">
            <summary>
            See <see cref="M:System.IServiceProvider.GetService(System.Type)"/>.
            </summary>
            <param name="serviceType">The type of the service needed.</param>
            <returns>An instance of that service or null if it is not available.</returns>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance">
            <summary>
            Gets the object instance being validated.  While it will not be null, the state of the instance is indeterminate
            as it might only be partially initialized during validation.
            <para>Consume this instance with caution!</para>
            </summary>
            <remarks>
            During validation, especially property-level validation, the object instance might be in an indeterminate state.
            For example, the property being validated, as well as other properties on the instance might not have been
            updated to their new values.
            </remarks>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectType">
            <summary>
            Gets the type of the object being validated.  It will not be null.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.DisplayName">
            <summary>
            Gets or sets the user-visible name of the type or property being validated.
            </summary>
            <value>If this name was not explicitly set, this property will consult an associated <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute"/>
            to see if can use that instead.  Lacking that, it returns <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName"/>.  The <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance"/>
            type name will be used if MemberName has not been set.
            </value>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName">
            <summary>
            Gets or sets the name of the type or property being validated.
            </summary>
            <value>This name reflects the API name of the member being validated, not a localized name.  It should be set
            only for property or parameter contexts.</value>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.Items">
            <summary>
            Gets the dictionary of key/value pairs associated with this context.
            </summary>
            <value>This property will never be null, but the dictionary may be empty.  Changes made
            to items in this dictionary will never affect the original dictionary specified in the constructor.</value>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.ValidationResult">
            <summary>
            Container class for the results of a validation request.
            <para>
            Use the static <see cref="F:System.ComponentModel.DataAnnotations.ValidationResult.Success"/> to represent successful validation.
            </para>
            </summary>
            <seealso cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)"/>
        </member>
        <member name="F:System.ComponentModel.DataAnnotations.ValidationResult.Success">
            <summary>
            Gets a <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/> that indicates Success.
            </summary>
            <remarks>
            The <c>null</c> value is used to indicate success.  Consumers of <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/>s
            should compare the values to <see cref="F:System.ComponentModel.DataAnnotations.ValidationResult.Success"/> rather than checking for null.
            </remarks>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String)">
            <summary>
            Constructor that accepts an error message.  This error message would override any error message
            provided on the <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>.
            </summary>
            <param name="errorMessage">The user-visible error message.  If null, <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)"/>
            will use <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)"/> for its error message.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Constructor that accepts an error message as well as a list of member names involved in the validation.
            This error message would override any error message provided on the <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>.
            </summary>
            <param name="errorMessage">The user-visible error message.  If null, <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)"/> 
            will use <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)"/> for its error message.</param>
            <param name="memberNames">The list of member names affected by this result.  If empty,
            <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)"/> will construct this list from its <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName"/>.  
            This list of member names is meant to be used by presentation layers to indicate which fields are in error.</param>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.ValidationResult.MemberNames">
            <summary>
            Gets the collection of member names affected by this result.  The collection may be empty but will never be null.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage">
            <summary>
            Gets the error message for this result.  It may be null.
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Validator">
            <summary>
            Helper class to validate objects, properties and other values using their associated <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>
            custom attributes.
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            Tests whether the given property value is valid.
            </summary>
            <remarks>
            This method will test each <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/> associated with the property
            identified by <paramref name="validationContext"/>.  If <paramref name="validationResults"/> is non-null,
            this method will add a <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/> to it for each validation failure.
            <para>
            If there is a <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute"/> found on the property, it will be evaluated before all other
            validation attributes.  If the required validator fails then validation will abort, adding that single
            failure into the <paramref name="validationResults"/> when applicable, returning a value of <c>false</c>.
            </para>
            <para>
            If <paramref name="validationResults"/> is null and there isn't a <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute"/> failure,
            then all validators will be evaluated.
            </para>
            </remarks>
            <param name="value">The value to test.</param>
            <param name="validationContext">Describes the property member to validate and provides services and context for the validators.</param>
            <param name="validationResults">Optional collection to receive <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/>s for the failures.</param>
            <returns><c>true</c> if the value is valid, <c>false</c> if any validation errors are encountered.</returns>
            <exception cref="T:System.ArgumentException">
            When the <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName"/> of <paramref name="validationContext"/> is not a valid property.
            </exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            Tests whether the given object instance is valid.
            </summary>
            <remarks>
            This method evaluates all <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>s attached to the object instance's type.  It also
            checks to ensure all properties marked with <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute"/> are set.  It does not validate the
            property values of the object.
            <para>
            If <paramref name="validationResults"/> is null, then execution will abort upon the first validation
            failure.  If <paramref name="validationResults"/> is non-null, then all validation attributes will be
            evaluated.
            </para>
            </remarks>
            <param name="instance">The object instance to test.  It cannot be <c>null</c>.</param>
            <param name="validationContext">Describes the object to validate and provides services and context for the validators.</param>
            <param name="validationResults">Optional collection to receive <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/>s for the failures.</param>
            <returns><c>true</c> if the object is valid, <c>false</c> if any validation errors are encountered.</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="instance"/> is null.</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="instance"/> doesn't match the
            <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance"/>on <paramref name="validationContext"/>.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)">
            <summary>
            Tests whether the given object instance is valid.
            </summary>
            <remarks>
            This method evaluates all <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>s attached to the object instance's type.  It also
            checks to ensure all properties marked with <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute"/> are set.  If <paramref name="validateAllProperties"/>
            is <c>true</c>, this method will also evaluate the <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>s for all the immediate properties
            of this object.  This process is not recursive.
            <para>
            If <paramref name="validationResults"/> is null, then execution will abort upon the first validation
            failure.  If <paramref name="validationResults"/> is non-null, then all validation attributes will be
            evaluated.
            </para>
            <para>
            For any given property, if it has a <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute"/> that fails validation, no other validators
            will be evaluated for that property.
            </para>
            </remarks>
            <param name="instance">The object instance to test.  It cannot be null.</param>
            <param name="validationContext">Describes the object to validate and provides services and context for the validators.</param>
            <param name="validationResults">Optional collection to receive <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/>s for the failures.</param>
            <param name="validateAllProperties">If <c>true</c>, also evaluates all properties of the object (this process is not
            recursive over properties of the properties).</param>
            <returns><c>true</c> if the object is valid, <c>false</c> if any validation errors are encountered.</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="instance"/> is null.</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="instance"/> doesn't match the
            <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance"/>on <paramref name="validationContext"/>.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})">
            <summary>
            Tests whether the given value is valid against a specified list of <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>s.
            </summary>
            <remarks>
            This method will test each <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>s specified .  If
            <paramref name="validationResults"/> is non-null, this method will add a <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/>
            to it for each validation failure.
            <para>
            If there is a <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute"/> within the <paramref name="validationAttributes"/>, it will
            be evaluated before all other validation attributes.  If the required validator fails then validation will
            abort, adding that single failure into the <paramref name="validationResults"/> when applicable, returning a
            value of <c>false</c>.
            </para>
            <para>
            If <paramref name="validationResults"/> is null and there isn't a <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute"/> failure,
            then all validators will be evaluated.
            </para>
            </remarks>
            <param name="value">The value to test.  It cannot be null.</param>
            <param name="validationContext">Describes the object being validated and provides services and context for the validators.</param>
            <param name="validationResults">Optional collection to receive <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/>s for the failures.</param>
            <param name="validationAttributes">The list of <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>s to validate this <paramref name="value"/> against.</param>
            <returns><c>true</c> if the object is valid, <c>false</c> if any validation errors are encountered.</returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Throws a <see cref="T:System.ComponentModel.DataAnnotations.ValidationException"/> if the given property <paramref name="value"/> is not valid.
            </summary>
            <param name="value">The value to test.</param>
            <param name="validationContext">Describes the object being validated and provides services and context for the validators.  It cannot be <c>null</c>.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="validationContext"/> is null.</exception>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">When <paramref name="value"/> is invalid for this property.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Throws a <see cref="T:System.ComponentModel.DataAnnotations.ValidationException"/> if the given <paramref name="instance"/> is not valid.
            </summary>
            <remarks>
            This method evaluates all <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>s attached to the object's type.
            </remarks>
            <param name="instance">The object instance to test.  It cannot be null.</param>
            <param name="validationContext">Describes the object being validated and provides services and context for the validators.  It cannot be <c>null</c>.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="instance"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">When <paramref name="validationContext"/> is null.</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="instance"/> doesn't match the
            <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance"/> on <paramref name="validationContext"/>.</exception>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">When <paramref name="instance"/> is found to be invalid.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)">
            <summary>
            Throws a <see cref="T:System.ComponentModel.DataAnnotations.ValidationException"/> if the given object instance is not valid.
            </summary>
            <remarks>
            This method evaluates all <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>s attached to the object's type.
            If <paramref name="validateAllProperties"/> is <c>true</c> it also validates all the object's properties.
            </remarks>
            <param name="instance">The object instance to test.  It cannot be null.</param>
            <param name="validationContext">Describes the object being validated and provides services and context for the validators.  It cannot be <c>null</c>.</param>
            <param name="validateAllProperties">If <c>true</c>, also validates all the <paramref name="instance"/>'s properties.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="instance"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">When <paramref name="validationContext"/> is null.</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="instance"/> doesn't match the
            <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance"/> on <paramref name="validationContext"/>.</exception>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">When <paramref name="instance"/> is found to be invalid.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})">
            <summary>
            Throw a <see cref="T:System.ComponentModel.DataAnnotations.ValidationException"/> if the given value is not valid for the <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>s.
            </summary>
            <remarks>
            This method evaluates the <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>s supplied until a validation error occurs,
            at which time a <see cref="T:System.ComponentModel.DataAnnotations.ValidationException"/> is thrown.
            <para>
            A <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute"/> within the <paramref name="validationAttributes"/> will always be evaluated first.
            </para>
            </remarks>
            <param name="value">The value to test.  It cannot be null.</param>
            <param name="validationContext">Describes the object being tested.</param>
            <param name="validationAttributes">The list of <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>s to validate against this instance.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="validationContext"/> is null.</exception>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">When <paramref name="value"/> is found to be invalid.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Validator.CreateValidationContext(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Creates a new <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/> to use to validate the type or a member of
            the given object instance.
            </summary>
            <param name="instance">The object instance to use for the context.</param>
            <param name="validationContext">An parent validation context that supplies an <see cref="T:System.IServiceProvider"/>
            and <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.Items"/>.</param>
            <returns>A new <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/> for the <paramref name="instance"/> provided.</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="validationContext"/> is null.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Validator.CanBeAssigned(System.Type,System.Object)">
            <summary>
            Determine whether the given value can legally be assigned into the specified type.
            </summary>
            <param name="destinationType">The destination <see cref="T:System.Type"/> for the value.</param>
            <param name="value">The value to test to see if it can be assigned as the Type indicated by <paramref name="destinationType"/>.</param>
            <returns><c>true</c> if the assignment is legal.</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="destinationType"/> is null.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Validator.EnsureValidPropertyType(System.String,System.Type,System.Object)">
            <summary>
            Determines whether the given value can legally be assigned to the given property.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <param name="propertyType">The type of the property.</param>
            <param name="value">The value.  Null is permitted only if the property will accept it.</param>
            <exception cref="T:System.ArgumentException"> is thrown if <paramref name="value"/> is the wrong type for this property.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Validator.GetObjectValidationErrors(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean,System.Boolean)">
            <summary>
            Internal iterator to enumerate all validation errors for the given object instance.
            </summary>
            <param name="instance">Object instance to test.</param>
            <param name="validationContext">Describes the object type.</param>
            <param name="validateAllProperties">if <c>true</c> also validates all properties.</param>
            <param name="breakOnFirstError">Whether to break on the first error or validate everything.</param>
            <returns>A collection of validation errors that result from validating the <paramref name="instance"/> with
            the given <paramref name="validationContext"/>.</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="instance"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">When <paramref name="validationContext"/> is null.</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="instance"/> doesn't match the
            <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance"/> on <paramref name="validationContext"/>.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Validator.GetObjectPropertyValidationErrors(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean,System.Boolean)">
            <summary>
            Internal iterator to enumerate all the validation errors for all properties of the given object instance.
            </summary>
            <param name="instance">Object instance to test.</param>
            <param name="validationContext">Describes the object type.</param>
            <param name="validateAllProperties">If <c>true</c>, evaluates all the properties, otherwise just checks that
            ones marked with <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute"/> are not null.</param>
            <param name="breakOnFirstError">Whether to break on the first error or validate everything.</param>
            <returns>A list of <see cref="T:System.ComponentModel.DataAnnotations.Validator.ValidationError"/> instances.</returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Validator.GetPropertyValues(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Retrieves the property values for the given instance.
            </summary>
            <param name="instance">Instance from which to fetch the properties.</param>
            <param name="validationContext">Describes the entity being validated.</param>
            <returns>A set of key value pairs, where the key is a validation context for the property and the value is its current
            value.</returns>
            <remarks>Ignores indexed properties.</remarks>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Validator.GetValidationErrors(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute},System.Boolean)">
            <summary>
            Internal iterator to enumerate all validation errors for an value.
            </summary>
            <remarks>
            If a <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute"/> is found, it will be evaluated first, and if that fails,
            validation will abort, regardless of the <paramref name="breakOnFirstError"/> parameter value.
            </remarks>
            <param name="value">The value to pass to the validation attributes.</param>
            <param name="validationContext">Describes the type/member being evaluated.</param>
            <param name="attributes">The validation attributes to evaluate.</param>
            <param name="breakOnFirstError">Whether or not to break on the first validation failure.  A
            <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute"/> failure will always abort with that sole failure.</param>
            <returns>The collection of validation errors.</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="validationContext"/> is null.</exception>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.ComponentModel.DataAnnotations.ValidationAttribute,System.ComponentModel.DataAnnotations.Validator.ValidationError@)">
            <summary>
            Tests whether a value is valid against a single <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/> using the <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/>.
            </summary>
            <param name="value">The value to be tested for validity.</param>
            <param name="validationContext">Describes the property member to validate.</param>
            <param name="attribute">The validation attribute to test.</param>
            <param name="validationError">The validation error that occurs during validation.  Will be <c>null</c> when the return value is <c>true</c>.</param>
            <returns><c>true</c> if the value is valid.</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="validationContext"/> is null.</exception>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.Validator.ValidationError">
            <summary>
            Private helper class to encapsulate a ValidationAttribute with the failed value and the user-visible
            target name against which it was validated.
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.ValidationAttributeStore">
            <summary>
            Cache of <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>s
            </summary>
            <remarks>
            This internal class serves as a cache of validation attributes and [Display] attributes.
            It exists both to help performance as well as to abstract away the differences between
            Reflection and TypeDescriptor.
            </remarks>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationAttributeStore.EnsureValidationContext(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Throws an ArgumentException of the validation context is null
            </summary>
            <param name="validationContext">The context to check</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationAttributeStore.GetTypeValidationAttributes(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Retrieves the type level validation attributes for the given type.
            </summary>
            <param name="validationContext">The context that describes the type.  It cannot be null.</param>
            <returns>The collection of validation attributes.  It could be empty.</returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationAttributeStore.GetTypeDisplayAttribute(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Retrieves the <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute"/> associated with the given type.  It may be null.
            </summary>
            <param name="validationContext">The context that describes the type.  It cannot be null.</param>
            <returns>The display attribute instance, if present.</returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationAttributeStore.GetPropertyValidationAttributes(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Retrieves the set of validation attributes for the property
            </summary>
            <param name="validationContext">The context that describes the property.  It cannot be null.</param>
            <returns>The collection of validation attributes.  It could be empty.</returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationAttributeStore.GetPropertyDisplayAttribute(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Retrieves the <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute"/> associated with the given property
            </summary>
            <param name="validationContext">The context that describes the property.  It cannot be null.</param>
            <returns>The display attribute instance, if present.</returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationAttributeStore.GetPropertyType(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Retrieves the Type of the given property.
            </summary>
            <param name="validationContext">The context that describes the property.  It cannot be null.</param>
            <returns>The type of the specified property</returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationAttributeStore.IsPropertyContext(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Determines whether or not a given <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/>'s
            <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName"/> references a property on
            the <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectType"/>.
            </summary>
            <param name="validationContext">The <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/> to check.</param>
            <returns><c>true</c> when the <paramref name="validationContext"/> represents a property, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationAttributeStore.GetTypeStoreItem(System.Type)">
            <summary>
            Retrieves or creates the store item for the given type
            </summary>
            <param name="type">The type whose store item is needed.  It cannot be null</param>
            <returns>The type store item.  It will not be null.</returns>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.ValidationAttributeStore.Instance">
            <summary>
            Gets the singleton <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttributeStore"/>
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.ValidationAttributeStore.StoreItem">
            <summary>
            Private abstract class for all store items
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.ValidationAttributeStore.TypeStoreItem">
            <summary>
            Private class to store data associated with a type
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.ValidationAttributeStore.PropertyStoreItem">
            <summary>
            Private class to store data associated with a property
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.ValidationException">
            <summary>
            Exception used for validation using <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute"/>.
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.ComponentModel.DataAnnotations.ValidationResult,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)">
            <summary>
            Constructor that accepts a structured <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult"/> describing the problem.
            </summary>
            <param name="validationResult">The value describing the validation error</param>
            <param name="validatingAttribute">The attribute that triggered this exception</param>
            <param name="value">The value that caused the validating attribute to trigger the exception</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)">
            <summary>
            Constructor that accepts an error message, the failing attribute, and the invalid value.
            </summary>
            <param name="errorMessage">The localized error message</param>
            <param name="validatingAttribute">The attribute that triggered this exception</param>
            <param name="value">The value that caused the validating attribute to trigger the exception</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor">
            <summary>
            Default constructor.
            </summary>
            <remarks>The long form of this constructor is preferred because it gives better error reporting.</remarks>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String)">
            <summary>
            Constructor that accepts only a localized message
            </summary>
            <remarks>The long form of this constructor is preferred because it gives better error reporting.</remarks>
            <param name="message">The localized message</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor that accepts a localized message and an inner exception
            </summary>
            <remarks>The long form of this constructor is preferred because it gives better error reporting</remarks>
            <param name="message">The localized error message</param>
            <param name="innerException">inner exception</param>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute">
            <summary>
            Gets the <see>ValidationAttribute</see> instance that triggered this exception.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult">
            <summary>
            Gets the <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult"/> instance that describes the validation error.
            </summary>
            <value>
            This property will never be null.
            </value>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.ValidationException.Value">
            <summary>
            Gets the value that caused the validating attribute to trigger the exception
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Data.DataForm.Toolkit.VisualStudio.Design.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Data.DataForm.Toolkit.VisualStudio.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.DataForm.Toolkit.Design.DataFieldMetadata">
            <summary>
            To register design time metadata for DataField.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.DataForm.Toolkit.Design.DataFieldMetadata.#ctor">
            <summary>
            To register design time metadata for DataField.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.DataForm.Toolkit.Design.DataFormMetadata">
            <summary>
            To register design time metadata for DataForm.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.DataForm.Toolkit.Design.DataFormMetadata.#ctor">
            <summary>
            To register design time metadata for DataForm.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.TextBoxEditor">
            <summary>
            Simple TextBox inline editor.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TextBoxEditor.#ctor(System.Windows.DataTemplate)">
            <summary>
            Preserve the constructor prototype from PropertyValueEditor.
            </summary>
            <param name="inlineEditorTemplate">Inline editor template.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TextBoxEditor.#ctor">
            <summary>
            Default constructor builds the default TextBox inline editor template.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.DataForm.Toolkit.VisualStudio.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Data.DataForm.Toolkit.VisualStudio.Design.MetadataRegistration._initialized">
            <summary>
            Borrowed from System.Windows.Controls.Toolbox.Design.MetadataRegistration:
            use a static flag to ensure metadata is registered only once.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.DataForm.Toolkit.VisualStudio.Design.MetadataRegistration.Register">
            <summary>
            Called by tools to register design time metadata.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.DataForm.Toolkit.VisualStudio.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="T:System.Windows.Controls.Data.DataForm.Toolkit.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Toolkit.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Toolkit.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Toolkit.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Toolkit.Design.Properties.Resources.DataFormStyling">
            <summary>
              Looks up a localized string similar to DataForm Styling.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Toolkit.Design.Properties.Resources.Layout">
            <summary>
              Looks up a localized string similar to Layout.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Data.DataForm.Toolkit.Expression.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Data.DataForm.Toolkit.Expression.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.DataForm.Toolkit.Expression.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Toolkit.Expression.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Data.DataForm.Toolkit.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Data.DataForm.Toolkit</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Common.CommonResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Common.CommonResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Common.CommonResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Common.CommonResources.InvalidPropertyName">
            <summary>
              Looks up a localized string similar to The property name &apos;{0}&apos; is invalid..
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Common.Extensions">
            <summary>
            Utility class for operations.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Common.TypeHelper">
            <summary>
            Utility class for Type related operations
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Common.TypeHelper.InvokePath(System.Object,System.String)">
            <summary>
            Helper for SortList to handle nested properties (e.g. Address.Street)
            </summary>
            <param name="item">parent object</param>
            <param name="propertyPath">property names path</param>
            <returns>child object</returns>
        </member>
        <member name="M:System.Windows.Controls.Common.TypeHelper.GetPropertyInfo(System.Type,System.String)">
            <summary>
            Returns the PropertyInfo corresponding to the provided propertyPath. The propertyPath can be a dotted
            path where each section is a public property name. Only public instance properties are searched for.
            </summary>
            <param name="type">The root type.</param>
            <param name="propertyPath">The property path.</param>
            <returns>The found PropertyInfo or null otherwise</returns>
        </member>
        <member name="M:System.Windows.Controls.Common.TypeHelper.GetTypeName(System.Type)">
            <summary>
            Returns the friendly name for a type
            </summary>
            <param name="type">The type for which to return the name.</param>
            <returns>Textual representation of the input type</returns>
        </member>
        <member name="M:System.Windows.Controls.Common.TypeHelper.IsEditable(System.Type)">
            <summary>
            Gets whether or not a type is editable by default.
            </summary>
            <param name="type">The type in question.</param>
            <returns>Whether or not the type is editable by default.</returns>
        </member>
        <member name="M:System.Windows.Controls.Common.TypeHelper.TypeIsPrimitive(System.Type)">
            <summary>
            Returns whether or not the type is a primitive type.
            </summary>
            <param name="type">The type to check.</param>
            <returns>Whether or not the type is a primitive type.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataField">
            <summary>
            Contains a control and generates labels and descriptions for it.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataField.ContentProperty">
            <summary>
            Identifies the Content property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnContentPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Content property changed handler.
            </summary>
            <param name="d">Field that changed its Content value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataField.DescriptionProperty">
            <summary>
            Identifies the DescriptionViewerPosition dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnDescriptionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Description property changed handler.
            </summary>
            <param name="d">Field that changed its Description value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataField.DescriptionViewerPositionProperty">
            <summary>
            Identifies the DescriptionViewerPosition dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnDescriptionViewerPositionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DescriptionViewerPosition property changed handler.
            </summary>
            <param name="d">Field that changed its DescriptionViewerPosition value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataField.DescriptionViewerStyleProperty">
            <summary>
            Identifies the DescriptionViewerStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnDescriptionViewerStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DescriptionViewerStyle property changed handler.
            </summary>
            <param name="d">Field that changed its DescriptionViewerStyle value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataField.DescriptionViewerVisibilityProperty">
            <summary>
            Identifies the DescriptionViewerVisibility dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataField.LabelProperty">
            <summary>
            Identifies the Label dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnLabelPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Label property changed handler.
            </summary>
            <param name="d">Field that changed its Label value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataField.LabelPositionProperty">
            <summary>
            Identifies the LabelPosition dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnLabelPositionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            LabelPosition property changed handler.
            </summary>
            <param name="d">Field that changed its LabelPosition value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataField.LabelStyleProperty">
            <summary>
            Identifies the LabelStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnLabelStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            LabelStyle property changed handler.
            </summary>
            <param name="d">Field that changed its LabelStyle value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataField.LabelVisibilityProperty">
            <summary>
            Identifies the LabelVisibility dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataField.IsFieldGroupProperty">
            <summary>
            Identifies the IsFieldGroup attached property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.GetIsFieldGroup(System.Windows.Controls.Panel)">
            <summary>
            Gets the IsFieldGroup attached property.
            </summary>
            <param name="target">The target panel.</param>
            <returns>Whether the panel is a field group.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataField.SetIsFieldGroup(System.Windows.Controls.Panel,System.Boolean)">
            <summary>
            Sets the IsFieldGroup attached property.
            </summary>
            <param name="target">The target panel.</param>
            <param name="isFieldGroup">Whether or not this panel should be a field group.</param>
        </member>
        <member name="F:System.Windows.Controls.DataField.IsReadOnlyProperty">
            <summary>
            Identifies the IsReadOnly dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnIsReadOnlyPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsReadOnly property changed handler.
            </summary>
            <param name="d">Field that changed its IsReadOnly value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataField.IsRequiredProperty">
            <summary>
            Identifies the IsReadOnly dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnIsRequiredPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsRequired property changed handler.
            </summary>
            <param name="d">Field that changed its IsRequired value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataField.ModeProperty">
            <summary>
            Identifies the Mode dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsReadOnly property changed handler.
            </summary>
            <param name="d">Field that changed its IsReadOnly value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataField.PropertyPathProperty">
            <summary>
            Identifies the PropertyPath dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnPropertyPathPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PropertyPath property changed handler.
            </summary>
            <param name="d">Field that changed its PropertyPath value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataField.GroupedFieldListProperty">
            <summary>
            Identifies the FieldList attached property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataField.DataFormDescriptionViewerPositionProperty">
            <summary>
            Identifies the DataFormDescriptionViewerPosition dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnDataFormDescriptionViewerPositionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DataFormDescriptionViewerPosition property changed handler.
            </summary>
            <param name="d">Field that changed its DataFormDescriptionViewerPosition value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataField.DataFormLabelPositionProperty">
            <summary>
            Identifies the DataFormLabelPosition dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnDataFormLabelPositionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DataFormLabelPosition property changed handler.
            </summary>
            <param name="d">Field that changed its DataFormLabelPosition value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataField.DataFormModeProperty">
            <summary>
            Identifies the DataFormMode dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnDataFormModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DataFormLabelPosition property changed handler.
            </summary>
            <param name="d">Field that changed its DataFormLabelPosition value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataField._boundProperty">
            <summary>
            Holds the bound property on either the root control in the field or
            via the PropertyPath property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataField._contentControl">
            <summary>
            Private accessor to the main content control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataField._ignoreApplyTemplate">
            <summary>
            Holds a value indicating whether or not to ignore a call to ApplyTemplate.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataField._isReadOnlyOverridden">
            <summary>
            Holds a value indicating whether or not IsReadOnly has been set.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataField._isRequiredOverridden">
            <summary>
            Holds a value indicating whether or not IsRequired has been set.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataField._layoutPanel">
            <summary>
            Holds the layout panel.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataField._parentDataForm">
            <summary>
            Holds the parent DataForm that was found.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataField._templateApplied">
            <summary>
            Holds a value indicating whether or not the template has been applied.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataField._lostFocusFired">
            <summary>
            Holds whether or not lost focus has been fired since
            TextBox validation on text changed began.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.#ctor">
            <summary>
            Constructs a new instance of Field.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnApplyTemplate">
            <summary>
            Applies the template for this field.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.Validate">
            <summary>
            Validates this field.
            </summary>
            <returns>Whether or not the field is valid.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataField.DetachFieldFromLayoutPanel">
            <summary>
            Detaches the field from its parent layout panel.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.RemoveBindingsFromParentDataForm">
            <summary>
            Removes all references of this DataField from its parent DataForm, if one exists.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.AlignDescriptionColumns">
            <summary>
            Aligns the grouped description columns.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.AlignLabelColumns">
            <summary>
            Aligns the grouped label columns.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.AttachFieldToLayoutPanel">
            <summary>
            Attaches the field to its parent layout panel.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.GenerateUI">
            <summary>
            Generates the UI for this field.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.GetAlignmentGroup">
            <summary>
            Retrieves the list of fields associated with this field's alignment group.
            </summary>
            <returns>The list of fields associated with this field's alignment group.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataField.GetPropertyInfo">
            <summary>
            Gets the property info for the binding.
            </summary>
            <returns>The property info.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataField.GetLayoutPanel">
            <summary>
            Gets the panel to be used for layout.
            </summary>
            <returns>The panel to be used for layout.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataField.GetParentDataForm">
            <summary>
            Gets the parent DataForm for this DataField.
            </summary>
            <returns>The parent DataForm.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnContentLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the case where an element has loaded.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnDataFieldLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the case where the DataField has loaded.
            </summary>
            <param name="sender">The DataField.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnDescriptionSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Handles the case where the size of a description has changed.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnLabelMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the case where the left mouse button went down with the cursor over a label.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnLabelSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Handles the case where the size of a label has changed.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnTextBoxLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the case where a text box has lost focus.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataField.OnTextBoxTextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Handles the case where a text box's text changed.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataField.RemoveDescriptionColumnAlignment">
            <summary>
            Removes the alignment of the grouped description columns.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.RemoveLabelColumnAlignment">
            <summary>
            Removes the alignment of the grouped label columns.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.SetContentReadOnlyState(System.Boolean)">
            <summary>
            Sets the read-only state of the content.
            </summary>
            <param name="isReadOnly">Whether the content should be read-only.</param>
        </member>
        <member name="M:System.Windows.Controls.DataField.SetDescriptionContent">
            <summary>
            Sets the description content.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.SetIsReadOnlyIfNotOverridden">
            <summary>
            Sets the value of IsReadOnlyProperty if it has not been overridden by the developer.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.SetIsRequiredIfNotOverridden">
            <summary>
            Sets the value of IsRequiredProperty if it has not been overridden by the developer.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.SetLabelContent">
            <summary>
            Sets the label content.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataField.SetBindingsFromParentDataForm(System.Windows.Controls.DataForm)">
            <summary>
            Sets references on this DataField to its parent DataForm.
            </summary>
            <param name="parentDataForm">The parent DataForm.</param>
        </member>
        <member name="M:System.Windows.Controls.DataField.UpdateBindingsOnElement(System.Windows.FrameworkElement)">
            <summary>
            Finds any bindings on an element and updates the ones in which Mode is TwoWay
            to set the two Boolean properties to true.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:System.Windows.Controls.DataField.UpdateStates">
            <summary>
            Updates the states on the DataField.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.Content">
            <summary>
            Gets or sets the content of the field.
            </summary> 
        </member>
        <member name="P:System.Windows.Controls.DataField.Description">
            <summary>
            Gets or sets the text displayed in the description viewer.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.DescriptionViewerPosition">
            <summary>
            Gets or sets a value that indicates the position of descriptions in relation to the field.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.DescriptionViewerStyle">
            <summary>
            Gets or sets the developer-specified style for descriptions.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.DescriptionViewerVisibility">
            <summary>
            Gets or sets a value that indicates whether the description viewer is visible.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.Label">
            <summary>
            Gets or sets the content of the label displayed for this control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.LabelPosition">
            <summary>
            Gets or sets a value that indicates the position of the label in relation to the field.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.LabelStyle">
            <summary>
            Gets or sets the developer-specified style for labels.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.LabelVisibility">
            <summary>
            Gets or sets a value that indicates whether the label is visible.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.IsReadOnly">
            <summary>
            Gets or sets a value that indicates whether the user can edit the values in the control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.IsRequired">
            <summary>
            Gets or sets a value indicating whether this field is required.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.IsValid">
            <summary>
            Gets a value that indicates whether the input control contains valid data.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.Mode">
            <summary>
            Gets a value that indicates whether the control is in read only, edit, or add new mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.PropertyPath">
            <summary>
            Gets or sets the path to the property that the control is bound to.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.DescriptionColumnBesideContent">
            <summary>
            Gets or sets the column definition for the description when
            DescriptionViewerPosition = BesideContent.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.DescriptionColumnBesideLabel">
            <summary>
            Gets or sets the column definition for the description when
            DescriptionViewerPosition = BesideLabel.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.DescriptionColumnBesideLabelSeparator">
            <summary>
            Gets or sets the column definition for the separator column
            by the DescriptionViewer when DescriptionViewerPosition = BesideLabel.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.DescriptionViewer">
            <summary>
            Description generated from GenerateDescription().
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.InternalLabel">
            <summary>
            Label generated from GenerateLabel().
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.LabelColumn">
            <summary>
            Gets or sets the column definition for the label.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.BoundProperty">
            <summary>
            Gets the property info for the bound property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.DataFormDescriptionViewerPosition">
            <summary>
            Gets or sets the desired position of the description viewer on the DataForm.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.DataFormLabelPosition">
            <summary>
            Gets or sets the desired position of the label on the DataForm.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.DataFormMode">
            <summary>
            Gets or sets the mode on the DataForm.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.EffectiveDescriptionViewerPosition">
            <summary>
            Gets or sets the effective position of the description viewer.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.EffectiveLabelPosition">
            <summary>
            Gets or sets the effective position of the label.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataField.EffectiveMode">
            <summary>
            Gets or sets the effective mode of the DataField.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFieldMode">
            <summary>
            Enumeration denoting a DataField mode.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFieldMode.Auto">
            <summary>
            Represents the case where the field should inherit its mode
            from the parent DataForm.  Behavior is the same as Edit if
            there is no parent DataForm.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFieldMode.ReadOnly">
            <summary>
            Represents the case where the field is read-only.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFieldMode.Edit">
            <summary>
            Represents the case where the field is in edit mode.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFieldMode.AddNew">
            <summary>
            Represents the case where the field is in add-new mode.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.DataFormAutomationPeer">
            <summary>
            Represents an automation peer for the <see cref="T:System.Windows.Controls.DataForm"/>.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataFormAutomationPeer.#ctor(System.Windows.Controls.DataForm)">
            <summary>
            Constructs a new <see cref="T:System.Windows.Automation.Peers.DataFormAutomationPeer"/>.
            </summary>
            <param name="owner">The <see cref="T:System.Windows.Controls.DataForm"/>.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataFormAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the automation control type.
            </summary>
            <returns>The group automation control type.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataFormAutomationPeer.GetClassNameCore">
            <summary>
            Returns the class name.
            </summary>
            <returns>The string "DataForm".</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataFormAutomationPeer.GetNameCore">
            <summary>
            Returns the name.
            </summary>
            <returns>The <see cref="T:System.Windows.Controls.DataForm"/> header content, if it is a string.</returns>
        </member>
        <member name="P:System.Windows.Automation.Peers.DataFormAutomationPeer.OwningDataForm">
            <summary>
            Gets the owning <see cref="T:System.Windows.Controls.DataForm"/>.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataForm">
            <summary>
            Displays data in a customizable form.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataForm.UnspecifiedOrder">
            <summary>
            The default order to use when there is no <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order"/>
            value available for the property.
            </summary>
            <remarks>
            The value of 10000 is a standard default value, allowing
            some properties to be ordered at the beginning and some at the end.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.DataForm.AutoCommitProperty">
            <summary>
            Identifies the AutoCommit dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnAutoCommitPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            AutoCommit property changed handler.
            </summary>
            <param name="d">DataForm that changed its AutoCommit value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.AutoEditProperty">
            <summary>
            Identifies the AutoEdit dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnAutoEditPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            AutoEdit property changed handler.
            </summary>
            <param name="d">DataForm that changed its AutoEdit value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.AutoGenerateFieldsProperty">
            <summary>
            Identifies the AutoGenerateFields dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnAutoGenerateFieldsPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            AutoGenerateFields property changed handler.
            </summary>
            <param name="d">DataForm that changed its AutoGenerateFields value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.CancelButtonContentProperty">
            <summary>
            Identifies the CancelButtonContent dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCancelButtonContentPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CancelButtonContent property changed handler.
            </summary>
            <param name="d">DataForm that changed its CancelButtonContent value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.CancelButtonStyleProperty">
            <summary>
            Identifies the CancelButtonContent dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm.CommandButtonsVisibilityProperty">
            <summary>
            Identifies the CommandButtonsVisibility dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCommandButtonsVisibilityPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CommandButtonsVisibility property changed handler.
            </summary>
            <param name="d">DataForm that changed its CommandButtonsVisibility value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.CommitButtonContentProperty">
            <summary>
            Identifies the CommitButtonContent dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCommitButtonContentPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CommitButtonContent property changed handler.
            </summary>
            <param name="d">DataForm that changed its CommitButtonContent value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.CommitButtonStyleProperty">
            <summary>
            Identifies the CommitButtonStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm.CurrentIndexProperty">
            <summary>
            Identifies the CurrentIndex dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCurrentIndexPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CurrentIndex property changed handler.
            </summary>
            <param name="d">DataForm that changed its CurrentItem value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.CurrentItemProperty">
            <summary>
            Identifies the CurrentItem dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCurrentItemPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CurrentItem property changed handler.
            </summary>
            <param name="d">DataForm that changed its CurrentItem value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.DataFieldStyleProperty">
            <summary>
            Identifies the DataFieldStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm.DescriptionViewerPositionProperty">
            <summary>
            Identifies the DescriptionViewerPosition dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm.EditTemplateProperty">
            <summary>
            Identifies the EditTemplate dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnEditTemplatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            EditTemplate property changed handler.
            </summary>
            <param name="d">DataForm that changed its EditTemplate value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.ValidationSummaryStyleProperty">
            <summary>
            Identifies the ValidationSummaryStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnValidationSummaryStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ValidationSummaryStyle property changed handler.
            </summary>
            <param name="d">DataForm that changed its ValidationSummaryStyle value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.HeaderProperty">
            <summary>
            Identifies the Header dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnHeaderPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Header property changed handler.
            </summary>
            <param name="d">DataForm that changed its Header value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.HeaderTemplateProperty">
            <summary>
            Identifies the HeaderTemplate dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnHeaderTemplatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderTemplate property changed handler.
            </summary>
            <param name="d">DataForm that changed its HeaderTemplate value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.HeaderVisibilityProperty">
            <summary>
            Identifies the HeaderTemplate dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnHeaderVisibilityPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderVisibility property changed handler.
            </summary>
            <param name="d">DataForm that changed its HeaderVisibility value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.IsEmptyProperty">
            <summary>
            Identifies the IsEmpty dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnIsEmptyPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsEmpty property changed handler.
            </summary>
            <param name="d">DataForm that changed its IsEmpty value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.IsItemChangedProperty">
            <summary>
            Identifies the IsItemChanged dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnIsItemChangedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsItemChanged property changed handler.
            </summary>
            <param name="d">DataForm that changed its IsItemChanged value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.IsItemValidProperty">
            <summary>
            Identifies the IsItemValid dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnIsItemValidPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsItemValid property changed handler.
            </summary>
            <param name="d">DataForm that changed its IsItemValid value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.IsReadOnlyProperty">
            <summary>
            Identifies the IsReadOnly dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnIsReadOnlyPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsReadOnly property changed handler.
            </summary>
            <param name="d">DataForm that changed its IsReadOnly value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnItemsSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemsSource property changed handler.
            </summary>
            <param name="d">DataForm that changed its ItemsSource value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.LabelPositionProperty">
            <summary>
            Identifies the LabelPosition dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm.ModeProperty">
            <summary>
            Identifies the Mode dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm.NewItemTemplateProperty">
            <summary>
            Identifies the NewItemTemplate dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnNewItemTemplatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            NewItemTemplate property changed handler.
            </summary>
            <param name="d">DataForm that changed its NewItemTemplate value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.ReadOnlyTemplateProperty">
            <summary>
            Identifies the ReadOnlyTemplate dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnReadOnlyTemplatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ReadOnlyTemplate property changed handler.
            </summary>
            <param name="d">DataForm that changed its ReadOnlyTemplate value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm._addNewContentsNew">
            <summary>
            Holds the add-new contents mapped to mode that have been seen before.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._addNewContentsOld">
            <summary>
            Holds the old add-new contents mapped to mode that have been seen before.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._buttonSeparator">
            <summary>
            Private accessor to ButtonSeparator.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canAddItems">
            <summary>
            Private accessor to CanAddItems.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._cancelButton">
            <summary>
            Private accessor to CancelButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canBeginEdit">
            <summary>
            Private accessor to CanBeginEdit.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canCancelEdit">
            <summary>
            Private accessor to CanCancelEdit.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canCommitEdit">
            <summary>
            Private accessor to CanCommitEdit.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canDeleteItems">
            <summary>
            Private accessor to CanDeleteItems.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canMoveToFirstItem">
            <summary>
            Private accessor to CanMoveToFirstItem.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canMoveToLastItem">
            <summary>
            Private accessor to CanMoveToLastItem.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canMoveToNextItem">
            <summary>
            Private accessor to CanMoveToNextItem.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canMoveToPreviousItem">
            <summary>
            Private accessor to CanMoveToPreviousItem.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._collectionView">
            <summary>
            Represents the items source as an ICollectionView.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._commitButton">
            <summary>
            Private accessor to CommitButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._contentPresenter">
            <summary>
            Private accessor to the content presenter.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._currentlyUsedTemplate">
            <summary>
            Holds which template is currently being used for which type.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._deleteItemButton">
            <summary>
            Private accessor to DeleteItemButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._editablePropertiesOriginalValues">
            <summary>
            Holds which properties on the current item can be edited,
            and what their original values were.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._editButton">
            <summary>
            Private accessor to EditButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._editContentsNew">
            <summary>
            Holds the edit contents mapped to mode that have been seen before.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._editContentsOld">
            <summary>
            Holds the old edit contents mapped to mode that have been seen before.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._editedProperties">
            <summary>
            Holds which properties on the current item have been edited
            and not saved locally.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._endingEdit">
            <summary>
            Holds a value indicating whether or not an edit is ending.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._entityLevelErrors">
            <summary>
            Holds the entity-level validation errors.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._validationSummary">
            <summary>
            Private accessor to ValidationSummary.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._fieldLevelErrors">
            <summary>
            Holds the field-level validation errors.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._fields">
            <summary>
            Holds the current list of fields.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._fieldsDictionary">
            <summary>
            Holds the list of fields tied to the contents from which they came.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._firstItemButton">
            <summary>
            Private accessor to FirstItemButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._forcedEndEdit">
            <summary>
            Holds whether an end of an edit has been forced and should override AutoEdit.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._generatedBindingModesByType">
            <summary>
            Private accessor to GeneratedBindingModesByType.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._generatedPropertiesByType">
            <summary>
            Private accessor to GeneratedPropertiesByType.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._headerVisibilityOverridden">
            <summary>
            Holds whether HeaderVisibility has been set.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._isAddingNew">
            <summary>
            Private accessor to IsAddingNew.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._isCommitting">
            <summary>
            Holds a value indicating whether or not we're currently committing an edit.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._isEditing">
            <summary>
            Private accessor to IsEditing.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canAddItemsAfterEdit">
            <summary>
            The value of CanAddItems prior to entering edit mode.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canDeleteItemsAfterEdit">
            <summary>
            The value of CanDeleteItems prior to entering edit mode.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._lastCurrentPosition">
            <summary>
            Holds the index of the last value of CurrentPosition on the PagedCollectionView.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._lastItem">
            <summary>
            The last value of CurrentItem, for use when auto-committing an edit.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._lastItemButton">
            <summary>
            Private accessor to LastItemButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._lostFocusFired">
            <summary>
            Holds whether or not lost focus has been fired since
            TextBox validation on text changed began.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._newItemButton">
            <summary>
            Private accessor to NewItemButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._nextItemButton">
            <summary>
            Private accessor to NextItemButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._nextTabIndex">
            <summary>
            Holds the next tab index for generated fields.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._originalItemsSource">
            <summary>
            Represents the original items source prior to wrapping.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._previousItemButton">
            <summary>
            Private accessor to PreviousItemButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._readOnlyContentsNew">
            <summary>
            Holds the read-only contents mapped to mode that have been seen before.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._readOnlyContentsOld">
            <summary>
            Holds the old read-only contents mapped to mode that have been seen before.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._shouldMoveFocus">
            <summary>
            Holds a value indicating whether or not focus should be moved when content is loaded.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._templateBindingInfos">
            <summary>
            Holds the template binding information.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._weakEventListenerCollectionChanged">
            <summary>
            Holds the weak event listener for the INotifyCollectionChanged.CollectionChanged event.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._weakEventListenerCurrentChanged">
            <summary>
            Holds the weak event listener for the ICollectionView.CurrentChanged event.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._weakEventListenerCurrentChanging">
            <summary>
            Holds the weak event listener for the ICollectionView.CurrentChanging event.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._weakEventListenerPropertyChanged">
            <summary>
            Holds the weak event listener for the INotifyPropertyChanged.PropertyChanged event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.#ctor">
            <summary>
            Constructs a new instance of DataForm.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.AddNewItem">
            <summary>
            Adds a new item.
            </summary>
            <returns>Whether or not a new item was added.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.BeginEdit">
            <summary>
            Begins the editing of the current item.
            </summary>
            <returns>Whether or not editing was begun.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.CancelEdit">
            <summary>
            Cancels the editing of the current item.
            </summary>
            <returns>Whether or not the cancellation was successful.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.CommitEdit">
            <summary>
            Commits the edit of the current item and exits editing mode.
            </summary>
            <returns>True if the commit succeeds; false otherwise.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.CommitEdit(System.Boolean)">
            <summary>
            Commits the edit of the current item.
            </summary>
            <param name="exitEditingMode">Whether or not editing mode should be exited after committing the edit.</param>
            <returns>True if the commit succeeds; false otherwise.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.DeleteItem">
            <summary>
            Deletes the current item.
            </summary>
            <returns>Whether or not the item was deleted.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.FindNameInContent(System.String)">
            <summary>
            Finds an object with a given name in the DataForm's content.
            </summary>
            <param name="name">The name to search by.</param>
            <returns>The object, if found.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnApplyTemplate">
            <summary>
            Applies the template for this control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.ValidateItem">
            <summary>
            Validates the current item.
            </summary>
            <returns>Whether or not the current item is valid.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.CancelAppend">
            <summary>
            Cancels the appending of a new item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.CommitAppend">
            <summary>
            Commits the appending of a new item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.ForceEndEdit">
            <summary>
            Forces the ending of the editing of the current item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GenerateUI">
            <summary>
            Generates the UI for this control and clears all errors.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GenerateUI(System.Boolean)">
            <summary>
            Generates the UI for this control, clears field errors, and optionally clears entity errors.
            </summary>
            <param name="clearEntityErrors">Whether or not to clear entity errors.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GenerateUI(System.Boolean,System.Boolean)">
            <summary>
            Generates the UI for this control, clears field errors, and optionally clears entity errors.
            Also swaps the old and new content if the same mode/type pair has been detected.
            </summary>
            <param name="clearEntityErrors">Whether or not to clear entity errors.</param>
            <param name="swapOldAndNew">Whether to swap the old and new content.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GetNextTabIndex">
            <summary>
            Gets the next tab index for generated controls.
            </summary>
            <returns>The next tab index.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.MoveToFirstItem">
            <summary>
            Goes to the first item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.MoveToLastItem">
            <summary>
            Goes to the last item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.MoveToNextItem">
            <summary>
            Goes to the next item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.MoveToPreviousItem">
            <summary>
            Goes to the previous item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.UpdateButtons">
            <summary>
            Updates the enabled state of the buttons within the DataForm.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.UpdateAllSources">
            <summary>
            Updates all sources.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.UpdateBindingsOnElement(System.Windows.FrameworkElement)">
            <summary>
            Finds any bindings on an element and updates the ones in which Mode is TwoWay
            to set the two Boolean properties to true.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.UpdateBindingsOnElement(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Finds any bindings on an element and updates the ones in which Mode is TwoWay
            to set the two Boolean properties to true.
            </summary>
            <param name="element">The element.</param>
            <param name="isBeneathDataField">Whether or not a DataField is a parent element.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.UpdateButtonsAndStates">
            <summary>
            Updates the enabled state of the buttons and the visual states within the DataForm.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.UpdateStates">
            <summary>
            Updates the visual states within the DataForm.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnAddingNewItem(System.Windows.Controls.DataFormAddingNewItemEventArgs)">
            <summary>
            Raises the AddingItem event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnAutoGeneratingField(System.Windows.Controls.DataFormAutoGeneratingFieldEventArgs)">
            <summary>
            Raises the AutoGeneratingField event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnBeginningEdit(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the BeginningEdit event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnContentLoaded(System.Windows.Controls.DataFormContentLoadEventArgs)">
            <summary>
            Raises the ContentLoaded event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnContentLoading(System.Windows.Controls.DataFormContentLoadEventArgs)">
            <summary>
            Raises the ContentLoading event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer for this DataForm.
            </summary>
            <returns>The automation peer.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCurrentItemChanged(System.EventArgs)">
            <summary>
            Raises the CurrentItemChanged event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnDeletingItem(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the DeletingItem event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnItemEditEnded(System.Windows.Controls.DataFormEditEndedEventArgs)">
            <summary>
            Raises the ItemEditEnded event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnItemEditEnding(System.Windows.Controls.DataFormEditEndingEventArgs)">
            <summary>
            Raises the ItemEditEnding event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnValidatingItem(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the ValidatingItem event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GetBindingPropertyFromType(System.Type)">
            <summary>
            Returns a DependencyProperty for a type corresponding to the property to which
            a binding should be applied.
            </summary>
            <param name="type">The type for which to generate the DependencyProperty.</param>
            <returns>The DependencyProperty.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GetControlFromType(System.Type)">
            <summary>
            Returns a control for a type.
            </summary>
            <param name="type">The type for which to generate the control.</param>
            <returns>The control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GetFirstFocusableControl(System.Windows.DependencyObject)">
            <summary>
            Gets the first focusable control (with respect to TabIndex).
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <returns>The first focusable control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.IsKeyboardFocusable(System.Windows.FrameworkElement)">
            <summary>
            Returns whether or not a framework element is keyboard focusable.
            </summary>
            <param name="element">The element.</param>
            <returns>Whether or not the element is keyboard focusable.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetFocusToFirstFocusableControl(System.Windows.DependencyObject)">
            <summary>
            Sets focus to the first focusable control (with respect to TabIndex) within the hierarchy of a given dependency object.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SortGeneratedFieldPaths(System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>
            Sorts the generated field paths in GenerateFields() according to the order specified
            in the DisplayAttributes.
            </summary>
            <param name="generatedFieldPaths">The generated field paths.</param>
            <param name="orders">The orders.</param>
            <returns>The sorted list of generated field paths.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetAllCanPropertiesAndUpdate(System.Windows.Controls.DataForm,System.Boolean)">
            <summary>
            Calls SetAllCanProperties() and either UpdateStates() or UpdateButtonsAndStates()
            on the given DataForm.
            </summary>
            <param name="dataForm">The DataForm.</param>
            <param name="onlyUpdateStates">Whether to call UpdateStates() or UpdateButtonsAndStates()</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.BeginEdit(System.Boolean)">
            <summary>
            Begins the editing of the current item.
            </summary>
            <param name="startingNewEdit">Whether or not this is starting a new edit or continuing an existing edit.</param>
            <returns>Whether or not editing was begun.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.CheckIfPropertyEditedAndUpdate(System.String,System.Object,System.Boolean,System.Type,System.Windows.Data.IValueConverter,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Checks to see if a given value matches a property's original value,
            and updates the ability to commit the edit if not.
            </summary>
            <param name="propertyName">The name of the property to check against.</param>
            <param name="value">The value to check against.</param>
            <param name="doConversion">Whether or not to convert the value to the original type.</param>
            <param name="originalType">The original type.</param>
            <param name="valueConverter">The IValueConverter to use for conversion.</param>
            <param name="converterParameter">The converter parameter.</param>
            <param name="converterCulture">The converter culture.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.ClearEntityErrors">
            <summary>
            Clears all EntityErrors from this DataForm before ValidateForm is performed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.EndEdit">
            <summary>
            Moves out of edit mode.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.EntityErrorShouldBeAdded(System.Windows.Controls.ValidationSummaryItem)">
            <summary>
            Returns whether or not a new error should be added to the list of errors.
            </summary>
            <param name="newError">The new error.</param>
            <returns>Whether or not the new error should be added to the list of errors.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GenerateFields">
            <summary>
            Generates the DataFormFields from the properties that should participate in auto-generation.
            </summary>
            <returns>The DataFormFields in a containing element.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GenerateField(System.Type,System.String,System.Windows.Data.BindingMode,System.Windows.Controls.Panel)">
            <summary>
            Generates a field based on a property type and a property name.
            </summary>
            <param name="propertyType">The type of the property.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="bindingMode">The binding mode.</param>
            <param name="panel">The panel to insert the field into.</param>
            <returns>A value indicating whether or not the field was generated.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GetAllOriginalPropertyValues">
            <summary>
            Gets all of the original property values for the properties on the current item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GetContentFromMode">
            <summary>
            Gets new content from the current mode.
            </summary>
            <returns>The new content.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GetEditTemplateContent">
            <summary>
            Gets the generated content from the edit template.
            </summary>
            <returns>The edit template content.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GetNewItemTemplateContent">
            <summary>
            Gets the generated content from the new item template.
            </summary>
            <returns>The new item template content.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GetOrRecycleContent(System.Boolean,System.Boolean@)">
            <summary>
            Either gets new content or recycles old content based on the current mode.
            </summary>
            <param name="swapOldAndNew">Whether or not we should swap old and new content when the mode/type pair is unchanged.</param>
            <param name="uiChanged">Whether or not the UI changed from its current content.</param>
            <returns>The content.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GetReadOnlyTemplateContent">
            <summary>
            Gets the generated content from the read-only template.
            </summary>
            <returns>The read-only template content.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.IsCommandButtonVisible(System.Windows.Controls.DataFormCommandButtonsVisibility)">
            <summary>
            Returns whether or not the specified type of command button is visible.
            </summary>
            <param name="commandButtonVisibility">The type of command button.</param>
            <returns>Whether or not the type of command button is visible.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCollectionViewCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the situation where the collection changed on the ICollectionView.
            </summary>
            <param name="sender">The ICollectionView.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCollectionViewCurrentChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the situation where the current item changed on the ICollectionView.
            </summary>
            <param name="sender">The ICollectionView.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCollectionViewCurrentChanging(System.Object,System.ComponentModel.CurrentChangingEventArgs)">
            <summary>
            Handles the situation where the current item is changing on the ICollectionView.
            </summary>
            <param name="sender">The ICollectionView.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCurrentItemPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the situation where a property on the current item changes.
            </summary>
            <param name="sender">The current item.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.PrepareContent(System.Windows.FrameworkElement)">
            <summary>
            Prepares the given content.
            </summary>
            <param name="rootElement">The root element.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.RemoveContentForType(System.Type,System.Collections.Generic.IDictionary{System.Type,System.Windows.FrameworkElement})">
            <summary>
            Removes the content attached to a given type from the fields dictionary
            and from the given dictionary of contents.
            </summary>
            <param name="type">The type to use as a key.</param>
            <param name="contents">The contents dictionary.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.ResetNextTabIndex">
            <summary>
            Resets the next tab index.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetAllCanProperties">
            <summary>
            Sets all of the properties of the form "CanXXXX".
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetButtonSeparatorVisibility">
            <summary>
            Sets the visibility of the button separator.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCanAddItems">
            <summary>
            Sets whether or not the user can add a new item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCanBeginEdit">
            <summary>
            Sets whether or not the user can begin an edit.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCanCancelEdit">
            <summary>
            Sets whether or not the user can cancel an edit.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCancelButtonVisibility">
            <summary>
            Sets the visibility of the cancel button.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCanDeleteItems">
            <summary>
            Sets whether or not the user can delete an item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCanCommitEdit">
            <summary>
            Sets whether or not the user can commit an edit.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCanMoveToFirstItem">
            <summary>
            Sets whether or not the user can move to the first item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCanMoveToLastItem">
            <summary>
            Sets whether or not the user can move to the last item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCanMoveToNextItem">
            <summary>
            Sets whether or not the user can move to the next item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCanMoveToPreviousItem">
            <summary>
            Sets whether or not the user can move to the previous item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCommitButtonVisibility">
            <summary>
            Sets the visibility of the commit button.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetDeleteItemButtonVisibility">
            <summary>
            Sets the visibility of the delete item button.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetEditButtonVisibility">
            <summary>
            Sets the visibility of the edit button.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetFirstItemButtonVisibility">
            <summary>
            Sets the visibility of the first item button.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetIsItemValid">
            <summary>
            Sets whether or not the item is valid and updates buttons and states accordingly.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetHeaderVisibility">
            <summary>
            Sets the visibility of the header.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetLastItemButtonVisibility">
            <summary>
            Sets the visibility of the last item button.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetMode">
            <summary>
            Sets the mode of the DataForm.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetNewItemButtonVisibility">
            <summary>
            Sets the visibility of the new item button.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetNextItemButtonVisibility">
            <summary>
            Sets the visibility of the next item button.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetPreviousItemButtonVisibility">
            <summary>
            Sets the visibility of the previous item button.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetUpCollectionView(System.Boolean)">
            <summary>
            Sets up the collection view.
            </summary>
            <param name="collectionViewCreated">Whether or not the collection view was created by the DataForm.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetUpNewCurrentItem">
            <summary>
            Sets up the new current item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.ShouldRegenerateUI(System.Windows.Controls.DataFormMode)">
            <summary>
            Returns a value indicating whether or not the UI should be re-generated based on
            a changed template.
            </summary>
            <param name="changedTemplateMode">The mode for which the template was changed.</param>
            <returns>A value indicating whether or not the UI should be re-generated.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.UpdateCurrentItem">
            <summary>
            Updates the current item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.ValidateItem(System.Boolean)">
            <summary>
            Validates the current item.
            </summary>
            <param name="validateAllProperties">Whether or not to validate all properties.</param>
            <returns>Whether or not the current item is valid.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnNewItemButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the "new item" button.
            </summary>
            <param name="sender">The button.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnBeginEditButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the "begin edit" button.
            </summary>
            <param name="sender">The button.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCancelEditButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the "cancel edit" button.
            </summary>
            <param name="sender">The button.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnDeleteItemButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the "delete item" button.
            </summary>
            <param name="sender">The button.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCommitEditButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the "commit edit" button.
            </summary>
            <param name="sender">The button.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnMoveToFirstItemButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the "move to first item" button.
            </summary>
            <param name="sender">The button.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnMoveToLastItemButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the "move to last item" button.
            </summary>
            <param name="sender">The button.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnMoveToPreviousItemButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the "move to previous item" button.
            </summary>
            <param name="sender">The button.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnMoveToNextItemButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the "move to next item" button.
            </summary>
            <param name="sender">The button.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnContentRootElementGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the case where the root element in the fields presenter has got focus.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnContentRootElementLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the case where the root element in the fields presenter has loaded.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnContentRootElementLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the case where the root element in the fields presenter has lost focus.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnContentRootElementBindingValidationError(System.Object,System.Windows.Controls.ValidationErrorEventArgs)">
            <summary>
            Handles the case where a field has had a binding validation error occur on it.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnDatePickerCalendarOpened(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the case where a date picker's calendar was opened.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnExternalTextBoxLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the case where a text box outside a DataField has lost focus.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnExternalTextBoxTextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Handles the case where a text box outside a DataField has is text changed.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnTextBoxTextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Handles the case where a text box's text changed.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnValidationSummaryErrorsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the case where the validation summary's error collection changed.
            </summary>
            <param name="sender">The validation summary.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="E:System.Windows.Controls.DataForm.AddingNewItem">
            <summary>
            Event handler for when an item is being added.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.AutoGeneratingField">
            <summary>
            Event handler for when a field is being auto-generated.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.BeginningEdit">
            <summary>
            Event handler for when an edit is beginning.  Cannot be canceled when AutoEdit is true.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.ContentLoaded">
            <summary>
            Event handler for when content is loaded.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.ContentLoading">
            <summary>
            Event handler for when content is about to be loaded.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.CurrentItemChanged">
            <summary>
            Event handler for when the current item has changed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.DeletingItem">
            <summary>
            Event handler for when an item is being deleted.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.EditEnded">
            <summary>
            Event handler for when an edit has ended.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.EditEnding">
            <summary>
            Event handler for when an edit is ending.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.ValidatingItem">
            <summary>
            Event handler for when the item is being validated.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.AutoCommit">
            <summary>
            Gets or sets a value that indicates whether edited items are committed when the current item is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.AutoEdit">
            <summary>
            Gets or sets a value that indicates whether or not the 
            <see cref="T:System.Windows.Controls.DataForm"/> should be permanently in edit mode. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.AutoGenerateFields">
            <summary>
            Gets or sets a value that indicates whether or not to automatically 
            generate the <see cref="T:System.Windows.Controls.DataField"/>s collection. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CancelButtonContent">
            <summary>
            Gets or sets the content of the Cancel button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CancelButtonStyle">
            <summary>
            Gets or sets the style of the Cancel button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CommandButtonsVisibility">
            <summary>
            Gets or sets a value that indicates which command 
            buttons are visible on the <see cref="T:System.Windows.Controls.DataForm"/> . 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CommitButtonContent">
            <summary>
            Gets or sets the content of the Commit button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CommitButtonStyle">
            <summary>
            Gets or sets the style of the Commit button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CurrentIndex">
            <summary>
            Gets or sets the index of the current item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CurrentItem">
            <summary>
            Gets or sets the current item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.DescriptionViewerPosition">
            <summary>
            Gets or sets a value that indicates the position of descriptions in relation to the field.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.DataFieldStyle">
            <summary>
            Gets or sets the developer-specified style for <see cref="T:System.Windows.Controls.DataField"/>s.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.EditTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate" /> used when editing. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.ValidationSummary">
            <summary>
            Gets the ValidationSummary.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.ValidationSummaryStyle">
            <summary>
            Gets or sets the developer-specified style for the ValidationSummary.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.Header">
            <summary>
              Gets or sets the header for the <see cref="T:System.Windows.Controls.DataForm"/> . 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.HeaderTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used
            for the header of the <see cref="T:System.Windows.Controls.DataForm"/> . 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.HeaderVisibility">
            <summary>
            Gets or sets a value that indicates whether the header is visible.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.IsEmpty">
            <summary>
            Gets a value that indicates whether or not the control is displaying an item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.IsItemChanged">
            <summary>
            Gets a value that indicates whether or not the current item has been changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.IsItemValid">
            <summary>
            Gets a value that indicates whether or not the current item is valid.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.IsReadOnly">
            <summary>
            Gets or sets a value that indicates whether the user can edit the values in the control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.ItemsSource">
            <summary>
            Gets or sets a collection that is used to populate the form content of the control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.LabelPosition">
            <summary>
            Gets or sets a value that indicates the position of labels in relation to the field.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.Mode">
            <summary>
            Gets a value that indicates whether the control is in read only, edit, or add new mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.NewItemTemplate">
            <summary>
            Gets or sets the item template used when adding a new item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.ReadOnlyTemplate">
            <summary>
            Gets or sets the item template used when not editing.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanAddItems">
            <summary>
            Gets a value indicating whether or not the collection allows the
            addition of items.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanBeginEdit">
            <summary>
            Gets a value that indicates whether or not an edit can be started.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanCancelEdit">
            <summary>
            Gets a value that indicates whether or not an edit can be canceled.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanCommitEdit">
            <summary>
            Gets a value indicating whether or not an edit can be committed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanDeleteItems">
            <summary>
            Gets a value indicating whether or not the collection allows the
            deletion of items.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanMoveToFirstItem">
            <summary>
            Gets a value indicating whether or not you can to the first item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanMoveToLastItem">
            <summary>
            Gets a value indicating whether or not you can to the last item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanMoveToNextItem">
            <summary>
            Gets a value indicating whether or not you can to the next item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanMoveToPreviousItem">
            <summary>
            Gets a value indicating whether or not you can to the previous item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CurrentItemType">
            <summary>
            Gets the type of the current item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.EffectiveIsReadOnly">
            <summary>
            Gets a value indicating whether or not the DataForm is effectively read-only,
            taking into account both IsReadOnly and the presence of templates.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.Fields">
            <summary>
            Gets the list of fields.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.IsAddingNew">
            <summary>
            Gets a value indicating whether or not the user is appending a new item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.IsEditing">
            <summary>
            Gets a value indicating whether or not the user is editing the current item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.ItemsCount">
            <summary>
            Gets the number of items in the items source.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.AutoCommitPreventsCurrentItemChange">
            <summary>
            Gets a value indicating whether or not the value of AutoCommit should
            prevent the changing of the current item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CurrentItemChangeTracking">
            <summary>
            Gets the current item as an IChangeTracking.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CurrentItemNotifyPropertyChanged">
            <summary>
            Gets the current item as an INotifyPropertyChanged.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.EditableCollectionView">
            <summary>
            Gets the entity collection view as an IEditableCollectionView.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.GeneratedBindingModesByType">
            <summary>
            Gets the generated binding modes associated to properties for a given type.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.GeneratedPropertiesByType">
            <summary>
            Gets the generated properties for a given type.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.ShouldValidateOnCurrencyChange">
            <summary>
            Gets a value indicating whether or not validation should be run if
            currency is about to change or if currency has changed.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormBindingInfo">
            <summary>
            Stores information about a Binding, including the BindingExpression, BindingTarget and associated Element.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataFormBindingInfo.#ctor">
            <summary>
            Creates a new BindingInfo.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataFormBindingInfo.#ctor(System.Windows.Data.BindingExpression,System.Windows.DependencyProperty,System.Windows.FrameworkElement)">
            <summary>
            Creates a new BindingInfo with the specified BindingExpression, BindingTarget and Element.
            </summary>
            <param name="bindingExpression">The BindingExpression.</param>
            <param name="bindingTarget">The BindingTarget.</param>
            <param name="element">The Element.</param>
        </member>
        <member name="P:System.Windows.Controls.DataFormBindingInfo.BindingExpression">
            <summary>
            Gets or sets the BindingExpression.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormBindingInfo.BindingTarget">
            <summary>
            Gets or sets the BindingTarget.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormBindingInfo.Element">
            <summary>
            Gets or sets the Element.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormCommandButtonsVisibilityTypeConverter">
            <summary>
            Type converter for DataForm.CommandButtonsVisibility.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataFormCommandButtonsVisibilityTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether we can convert from a given type.
            </summary>
            <param name="context">The type descriptor context.</param>
            <param name="sourceType">The source type.</param>
            <returns>Whether we can convert from the given type.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormCommandButtonsVisibilityTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts a value from a type.
            </summary>
            <param name="context">The type descriptor context.</param>
            <param name="culture">The culture to use.</param>
            <param name="value">The value to convert from.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormCommandButtonsVisibilityTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts a value to a type.
            </summary>
            <param name="context">The type descriptor context.</param>
            <param name="culture">The culture to use.</param>
            <param name="value">The value to convert from.</param>
            <param name="destinationType">The destination type.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataFormCommandButtonsVisibility">
            <summary>
            Enumeration denoting which of the command buttons should be visible.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFormCommandButtonsVisibility.None">
            <summary>
            Represents the case where no buttons are visible.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormCommandButtonsVisibility.Add">
            <summary>
            Represents the case where the add button is visible.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormCommandButtonsVisibility.Delete">
            <summary>
            Represents the case where the delete button is visible.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormCommandButtonsVisibility.Edit">
            <summary>
            Represents the case where the edit button is visible.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormCommandButtonsVisibility.Navigation">
            <summary>
            Represents the case where the navigation buttons are visible.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormCommandButtonsVisibility.Commit">
            <summary>
            Represents the case where the commit button is visible.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormCommandButtonsVisibility.Cancel">
            <summary>
            Represents the case where the cancel button is visible.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormCommandButtonsVisibility.All">
            <summary>
            Represents the case where all buttons is visible.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFieldDescriptionViewerPosition">
            <summary>
            Enumeration denoting a description viewer position.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFieldDescriptionViewerPosition.Auto">
            <summary>
            Represents the case where a description position should be
            dependent on its parent (same behavior as BesideContent when there
            is no parent).
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFieldDescriptionViewerPosition.BesideContent">
            <summary>
            Represents the case where the description should be placed to the
            right of the input control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFieldDescriptionViewerPosition.BesideLabel">
            <summary>
            Represents the case where the description should be placed to the
            right of the label.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormEditAction">
            <summary>
            Enumeration denoting an action taken to end an edit.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFormEditAction.Cancel">
            <summary>
            Represents the case where an edit has been canceled.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormEditAction.Commit">
            <summary>
            Represents the case where an edit has been committed.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFieldLabelPosition">
            <summary>
            Enumeration denoting a label position.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFieldLabelPosition.Auto">
            <summary>
            Represents the case where a field label position should be
            dependent on its parent (same behavior as Left when there
            is no parent).
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFieldLabelPosition.Left">
            <summary>
            Represents the case where the label should be placed to the
            left of the input control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFieldLabelPosition.Top">
            <summary>
            Represents the case where the label should be placed above
            the input control.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormMode">
            <summary>
            Enumeration denoting a DataForm mode.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFormMode.ReadOnly">
            <summary>
            Represents the case where an object is not being edited.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormMode.Edit">
            <summary>
            Represents the case where an object is being edited.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormMode.AddNew">
            <summary>
            Represents the case where a new object is being added.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormAddingNewItemEventArgs">
            <summary>
            Event args for the AddingNewItem event.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataFormAddingNewItemEventArgs.#ctor">
            <summary>
            Constructs a new instance of DataFormAddingNewItemEventArgs.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormEditEndedEventArgs">
            <summary>
            Event args for the EditEnded event.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataFormEditEndedEventArgs.#ctor(System.Windows.Controls.DataFormEditAction)">
            <summary>
            Constructs a new instance of DataFormEditEndedEventArgs.
            </summary>
            <param name="editAction">The edit action.</param>
        </member>
        <member name="P:System.Windows.Controls.DataFormEditEndedEventArgs.EditAction">
            <summary>
            Gets the edit action.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormEditEndingEventArgs">
            <summary>
            Event args for the EditEnding event.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataFormEditEndingEventArgs.#ctor(System.Windows.Controls.DataFormEditAction)">
            <summary>
            Constructs a new instance of DataFormEditEndingEventArgs.
            </summary>
            <param name="editAction">The edit action.</param>
        </member>
        <member name="P:System.Windows.Controls.DataFormEditEndingEventArgs.EditAction">
            <summary>
            Gets the edit action.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormContentLoadEventArgs">
            <summary>
            Event args for the ContentLoaded and ContentLoading events.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataFormContentLoadEventArgs.#ctor(System.Windows.FrameworkElement,System.Windows.Controls.DataFormMode)">
            <summary>
            Constructs a new instance of DataFormContentLoadEventArgs.
            </summary>
            <param name="content">The content that was loaded or will be loaded.</param>
            <param name="mode">The mode of the DataForm.</param>
        </member>
        <member name="P:System.Windows.Controls.DataFormContentLoadEventArgs.Content">
            <summary>
            Gets the content that was loaded or will be loaded.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormContentLoadEventArgs.Mode">
            <summary>
            Gets the mode of the DataForm.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormAutoGeneratingFieldEventArgs">
            <summary>
            Event args for the AutoGeneratingField event.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataFormAutoGeneratingFieldEventArgs.#ctor(System.String,System.Type,System.Windows.Controls.DataField)">
            <summary>
            Constructs a new instance of DataFormAutoGeneratingFieldEventArgs.
            </summary>
            <param name="propertyName">The name of the property for the field being generated.</param>
            <param name="propertyType">The type of the property for the field being generated.</param>
            <param name="field">The field being generated.</param>
        </member>
        <member name="P:System.Windows.Controls.DataFormAutoGeneratingFieldEventArgs.Field">
            <summary>
            Gets or sets the field to be used.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormAutoGeneratingFieldEventArgs.PropertyName">
            <summary>
            Gets the name of the property for which this field is being generated.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormAutoGeneratingFieldEventArgs.PropertyType">
            <summary>
            Gets the type of the property for which this field is being generated.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormToStringConverter">
            <summary>
            Value converter for the DataForm.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataFormToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts forwards.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">The target type.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts backwards.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">The target type.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataFormValueConverter">
            <summary>
            Value converter for the DataForm.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataFormValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts forwards.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">The target type.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts backwards.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">The target type.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:System.Windows.Controls.PathOrderPair">
            <summary>
            Wrapper class used to sort paths based on the order derived from a DisplayAttribute.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.PathOrderPair.GetOrder(System.Windows.Controls.PathOrderPair)">
            <summary>
            Gets the order from a PathOrderPair.
            </summary>
            <param name="pathOrderPair">The PathOrderPair.</param>
            <returns>The order from the PathOrderPair.</returns>
        </member>
        <member name="P:System.Windows.Controls.PathOrderPair.Path">
            <summary>
            Gets or sets the path.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PathOrderPair.Order">
            <summary>
            Gets or sets the order.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ValidationUtil">
            <summary>
            Utility class that contains static methods for DataForm validation purposes.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ValidationUtil.CopyBinding(System.Windows.Data.Binding)">
            <summary>
            Creates a new Binding that is a shallow copy of the source Binding.
            </summary>
            <param name="source">The Binding to copy.</param>
            <returns>The copied Binding.</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationUtil.ElementHasErrors(System.Windows.DependencyObject)">
            <summary>
            Returns whether or not a DependencyObject has errors.
            </summary>
            <param name="element">The element to test.</param>
            <returns>Whether or not it has errors.</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationUtil.GetBindingExpressionsForElement(System.Windows.FrameworkElement)">
            <summary>
            Gets the list of binding expressions for the given element.
            </summary>
            <param name="element">The element.</param>
            <returns>The list of binding expressions.</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationUtil.GetDataFormBindingInfo(System.Windows.FrameworkElement,System.Object,System.Boolean,System.Boolean,System.Type[])">
            <summary>
            Searches through all Bindings on the specified element and returns a list of BindingInfo objects
            for each Binding that matches the specified criteria.
            </summary>
            <param name="element">FrameworkElement to search</param>
            <param name="dataItem">Only return Bindings with a context element equal to this object</param>
            <param name="twoWayOnly">If true, only returns TwoWay Bindings</param>
            <param name="searchChildren">If true, searches child elements for Bindings</param>
            <param name="excludedTypes">The Binding search will skip all of these Types</param>
            <returns>List of BindingInfo for every Binding found</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationUtil.GetDependencyPropertiesForElement(System.Windows.FrameworkElement)">
            <summary>
            Gets the list of dependency properties for the given element.
            </summary>
            <param name="element">The element.</param>
            <returns>The list of dependency properties.</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationUtil.UpdateSourceOnElementBindings(System.Windows.FrameworkElement)">
            <summary>
            Updates the source on the bindings for a given element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:System.Windows.Controls.ValidationUtil.GetDataFormBindingInfoOfSingleElement(System.Windows.FrameworkElement,System.Object,System.Object,System.Boolean)">
            <summary>
            Gets a list of active bindings on the specified FrameworkElement.  Bindings are gathered
            according to the same conditions BindingGroup uses to find bindings of descendent elements
            within the visual tree.
            </summary>
            <param name="element">Root FrameworkElement to search under</param>
            <param name="inheritedDataContext">DomainContext of the element's parent</param>
            <param name="dataItem">Target DomainContext</param>
            <param name="twoWayOnly">If true, only returns TwoWay Bindings</param>
            <returns>The list of active bindings.</returns>
        </member>
        <member name="T:System.Windows.Controls.WeakEventListener`3">
            <summary>
            Implements a weak event listener that allows the owner to be garbage
            collected if its only remaining link is an event handler.
            </summary>
            <typeparam name="TInstance">Type of instance listening for the event.</typeparam>
            <typeparam name="TSource">Type of source for the event.</typeparam>
            <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
        </member>
        <member name="F:System.Windows.Controls.WeakEventListener`3._weakInstance">
            <summary>
            WeakReference to the instance listening for the event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.#ctor(`0)">
            <summary>
            Initializes a new instances of the WeakEventListener class.
            </summary>
            <param name="instance">Instance subscribing to the event.</param>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.OnEvent(`1,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.WeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.WeakEventListener`3.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.DataForm.Toolkit.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Toolkit.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Toolkit.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Toolkit.Resources.DataForm_CannotCancelBeginEditWhenInAutoEdit">
            <summary>
              Looks up a localized string similar to {0} cannot be canceled when {1} is set to true..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Toolkit.Resources.DataForm_CannotChangeCurrency">
            <summary>
              Looks up a localized string similar to Cannot change currency when an item has validation errors or it is being edited and {0} is false.  Set {1} to a {2} to manage currency instead..
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Data.Expression.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Data.Expression.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Design.DataGridBoundColumnMetadata">
            <summary>
            To register design time metadata for DataGridBoundColumn.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Design.DataGridBoundColumnMetadata.#ctor">
            <summary>
            To register design time metadata for DataGridBoundColumn.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Design.DataGridCheckBoxColumnMetadata">
            <summary>
            To register design time metadata for DataGridCheckBoxColumn.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Design.DataGridCheckBoxColumnMetadata.#ctor">
            <summary>
            To register design time metadata for DataGridCheckBoxColumn.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Design.DataGridColumnMetadata">
            <summary>
            To register design time metadata for DataGridColumn.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Design.DataGridColumnMetadata.#ctor">
            <summary>
            To register design time metadata for DataGridColumn.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Design.DataGridMetadata">
            <summary>
            To register design time metadata for DataGrid.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Design.DataGridMetadata.#ctor">
            <summary>
            To register design time metadata for DataGrid.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Design.DataGridTemplateColumnMetadata">
            <summary>
            To register design time metadata for DataGridTemplateColumn.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Design.DataGridTemplateColumnMetadata.#ctor">
            <summary>
            To register design time metadata for DataGridTemplateColumn.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Design.DataGridTextColumnMetadata">
            <summary>
            To register design time metadata for DataGridTextColumn.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Design.DataGridTextColumnMetadata.#ctor">
            <summary>
            To register design time metadata for DataGridTextColumn.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Expression.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Expression.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="T:System.Windows.Controls.Data.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.Appearance">
            <summary>
              Looks up a localized string similar to Appearance.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.Brushes">
            <summary>
              Looks up a localized string similar to Brushes.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.Columns">
            <summary>
              Looks up a localized string similar to Columns.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.DataGridStyling">
            <summary>
              Looks up a localized string similar to DataGrid Styling.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.GridLines">
            <summary>
              Looks up a localized string similar to Grid Lines.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.Headers">
            <summary>
              Looks up a localized string similar to Headers.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.Layout">
            <summary>
              Looks up a localized string similar to Layout.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.Rows">
            <summary>
              Looks up a localized string similar to Rows.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.Text">
            <summary>
              Looks up a localized string similar to Text.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Data.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Data.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Design.DataGridColumnMetadata">
            <summary>
            To register design time metadata for DataGrid.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Design.DataGridColumnMetadata.#ctor">
            <summary>
            To register design time metadata for DataGrid.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Design.DataGridDesignerExtensions">
            <summary>
            Internal extension methods specific to the DataGrid Designer dll
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Design.DataGridDesignerExtensions.AreHandlersSuspended(System.Windows.DependencyObject)">
            <summary>
            Returns true if event handlers are suspended for this dependency object
            </summary>
            <param name="obj">object that is checking</param>
            <returns>true if event handlers are suspended for this dependency object</returns>
        </member>
        <member name="M:System.Windows.Controls.Data.Design.DataGridDesignerExtensions.SetValueNoCallback(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Object)">
            <summary>
            Helper mechanism for setting DependencyProperties without a callback
            </summary>
            <param name="obj">object that is setting the DependencyProperty</param>
            <param name="property">Property to set</param>
            <param name="value">Value to set</param>
        </member>
        <member name="T:System.Windows.Controls.Data.Design.DataGridLengthEditor">
            <summary>
            DataGridLengthEditor for the Designer
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Design.DataGridLengthEditor.#ctor">
            <summary>
            Default constructor builds the default DataGridLengthEditor inline editor template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.DataGridLengthEditorGrid.Text">
            <summary>
            Text is bound to the TextBox's Text property.  By doing this, we know when the
            TextBox's Text changes and we can commit in a similar fashion (focus lost) as any
            other bound TextBox
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.DataGridLengthEditorGrid.Value">
            <summary>
            Value is a DataGridLength that is bound to the Value that we are given by Blend.
            Wrapping this property gives us the changed notifications we need
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Design.DataPagerMetadata">
            <summary>
            To register design time metadata for DataPager.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Design.DataPagerMetadata.#ctor">
            <summary>
            To register design time metadata for DataPager.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Design.MetadataRegistration.#ctor">
            <summary>
            Design time metadata registration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Data.Input.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Data.Input.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.TextBoxEditor">
            <summary>
            Simple TextBox inline editor.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TextBoxEditor.#ctor(System.Windows.DataTemplate)">
            <summary>
            Preserve the constructor prototype from PropertyValueEditor.
            </summary>
            <param name="inlineEditorTemplate">Inline editor template.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TextBoxEditor.#ctor">
            <summary>
            Default constructor builds the default TextBox inline editor template.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Input.Design.DescriptionViewerMetadata">
            <summary>
            To register design time metadata for DescriptionViewer.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Input.Design.DescriptionViewerMetadata.#ctor">
            <summary>
            To register design time metadata for DescriptionViewer.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Input.Design.ValidationSummaryMetadata">
            <summary>
            To register design time metadata for ValidationSummary.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Input.Design.ValidationSummaryMetadata.#ctor">
            <summary>
            To register design time metadata for ValidationSummary.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Input.Design.LabelMetadata">
            <summary>
            To register design time metadata for Label.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Input.Design.LabelMetadata.#ctor">
            <summary>
            To register design time metadata for Label.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Input.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Input.Design.MetadataRegistration.#ctor">
            <summary>
            Design time metadata registration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Input.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Data.Input.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Input.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Input.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Input.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Input.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Data.Input.VisualStudio.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Data.Input.VisualStudio.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Input.Design.DescriptionViewerMetadata">
            <summary>
            To register design time metadata for DescriptionViewer.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Input.Design.DescriptionViewerMetadata.#ctor">
            <summary>
            To register design time metadata for DescriptionViewer.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Input.Design.LabelMetadata">
            <summary>
            To register design time metadata for Label.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Input.Design.LabelMetadata.#ctor">
            <summary>
            To register design time metadata for Label.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Input.Design.ValidationSummaryMetadata">
            <summary>
            To register design time metadata for ValidationSummary.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Input.Design.ValidationSummaryMetadata.#ctor">
            <summary>
            To register design time metadata for ValidationSummary.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.TextBoxEditor">
            <summary>
            Simple TextBox inline editor.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TextBoxEditor.#ctor(System.Windows.DataTemplate)">
            <summary>
            Preserve the constructor prototype from PropertyValueEditor.
            </summary>
            <param name="inlineEditorTemplate">Inline editor template.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TextBoxEditor.#ctor">
            <summary>
            Default constructor builds the default TextBox inline editor template.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Input.VisualStudio.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Data.Input.VisualStudio.Design.MetadataRegistration._initialized">
            <summary>
            Borrowed from System.Windows.Controls.Toolbox.Design.MetadataRegistration:
            use a static flag to ensure metadata is registered only once.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Input.VisualStudio.Design.MetadataRegistration.Register">
            <summary>
            Called by tools to register design time metadata.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Input.VisualStudio.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="T:System.Windows.Controls.Data.Input.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Input.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Input.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Input.Design.Properties.Resources.Buttons">
            <summary>
              Looks up a localized string similar to Buttons.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Input.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Input.Design.Properties.Resources.Fields">
            <summary>
              Looks up a localized string similar to Fields.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Input.Design.Properties.Resources.Items">
            <summary>
              Looks up a localized string similar to Items.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Data.Input.Expression.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Data.Input.Expression.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.DataForm.Toolkit.Expression.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Toolkit.Expression.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Data.VisualStudio.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Data.VisualStudio.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Design.DataGridColumnMetadata">
            <summary>
            To register design time metadata for DataGrid.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Design.DataGridColumnMetadata.#ctor">
            <summary>
            To register design time metadata for DataGrid.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Design.DataGridDesignerExtensions">
            <summary>
            Internal extension methods specific to the DataGrid Designer dll
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Design.DataGridDesignerExtensions.AreHandlersSuspended(System.Windows.DependencyObject)">
            <summary>
            Returns true if event handlers are suspended for this dependency object
            </summary>
            <param name="obj">object that is checking</param>
            <returns>true if event handlers are suspended for this dependency object</returns>
        </member>
        <member name="M:System.Windows.Controls.Data.Design.DataGridDesignerExtensions.SetValueNoCallback(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Object)">
            <summary>
            Helper mechanism for setting DependencyProperties without a callback
            </summary>
            <param name="obj">object that is setting the DependencyProperty</param>
            <param name="property">Property to set</param>
            <param name="value">Value to set</param>
        </member>
        <member name="T:System.Windows.Controls.Data.Design.DataGridLengthEditor">
            <summary>
            DataGridLengthEditor for the Designer
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Design.DataGridLengthEditor.#ctor">
            <summary>
            Default constructor builds the default DataGridLengthEditor inline editor template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.DataGridLengthEditorGrid.Text">
            <summary>
            Text is bound to the TextBox's Text property.  By doing this, we know when the
            TextBox's Text changes and we can commit in a similar fashion (focus lost) as any
            other bound TextBox
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.DataGridLengthEditorGrid.Value">
            <summary>
            Value is a DataGridLength that is bound to the Value that we are given by Blend.
            Wrapping this property gives us the changed notifications we need
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Design.DataPagerMetadata">
            <summary>
            To register design time metadata for DataPager.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.Design.DataPagerMetadata.#ctor">
            <summary>
            To register design time metadata for DataPager.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.VisualStudio.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Data.VisualStudio.Design.MetadataRegistration._initialized">
            <summary>
            Borrowed from System.Windows.Controls.Toolbox.Design.MetadataRegistration:
            use a static flag to ensure metadata is registered only once.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.VisualStudio.Design.MetadataRegistration.Register">
            <summary>
            Called by tools to register design time metadata.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Data.VisualStudio.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="T:System.Windows.Controls.Data.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.Columns">
            <summary>
              Looks up a localized string similar to Columns.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.DataGridStyling">
            <summary>
              Looks up a localized string similar to DataGrid Styling.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.GridLines">
            <summary>
              Looks up a localized string similar to Grid Lines.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.Headers">
            <summary>
              Looks up a localized string similar to Headers.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Design.Properties.Resources.Rows">
            <summary>
              Looks up a localized string similar to Rows.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Data.Input.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Data.Input</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer">
            <summary>
            Exposes <see cref="T:System.Windows.Controls.DescriptionViewer" /> types to UI Automation.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer.#ctor(System.Windows.Controls.DescriptionViewer)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer" /> class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.DescriptionViewer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType, 
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer.GetNameCore">
            <summary>
            Called by GetName that gets a human readable name that, in addition to AutomationControlType, 
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="T:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer">
            <summary>
            Exposes <see cref="T:System.Windows.Controls.ValidationSummary" /> types to UI Automation.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer.#ctor(System.Windows.Controls.ValidationSummary)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer" /> class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.ValidationSummary" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType, 
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer.GetNameCore">
            <summary>
            Called by GetName that gets a human readable name that, in addition to AutomationControlType, 
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern that is associated with the specified System.Windows.Automation.Peers.PatternInterface.
            </summary>
            <param name="patternInterface">A value from the System.Windows.Automation.Peers.PatternInterface enumeration.</param>
            <returns>The object that supports the specified pattern, or null if unsupported.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
            <summary>
            Invoke a selection on the current item, simulating a click.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Common.Extensions">
            <summary>
            Utility class for operations.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.Input.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Input.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Input.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Input.Resources.UnderlyingPropertyIsReadOnly">
            <summary>
              Looks up a localized string similar to {0} cannot be set because the underlying property is read only..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Input.Resources.ValidationSummaryHeaderError">
            <summary>
              Looks up a localized string similar to 1 Error.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Input.Resources.ValidationSummaryHeaderErrors">
            <summary>
              Looks up a localized string similar to {0} Errors.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Input.Resources.ValidationSummaryItem">
            <summary>
              Looks up a localized string similar to {0}: {1}.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.Input.Resources.ValidationSummarySampleError">
            <summary>
              Looks up a localized string similar to Sample Error.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DescriptionViewer">
            <summary>
            Displays a description and tracks error state for a control.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.#ctor">
            <summary>
            Initializes a new instance of the DescriptionViewer class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DescriptionViewer.DataContextProperty">
            <summary>
            Identifies the DataContext dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DescriptionViewer.DescriptionProperty">
            <summary>
            Identifies the Description dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.OnDescriptionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle the Description field property change event.  This will update the the VSM state.
            </summary>
            <param name="depObj">The DescriptionViewer that changed its Description value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DescriptionViewer.GlyphTemplateProperty">
            <summary>
            Identifies the GlyphTemplate dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DescriptionViewer.ToolTipStyleProperty">
            <summary>
            Identifies the ToolTipStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DescriptionViewer.IsFocusedProperty">
            <summary>
            Identifies the IsFocused dependency property
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DescriptionViewer.IsValidProperty">
            <summary>
            Identifies the IsValid dependency property
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DescriptionViewer.PropertyPathProperty">
            <summary>
            Identifies the PropertyPath dependency property
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DescriptionViewer.TargetProperty">
            <summary>
            Identifies the Target dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.OnApplyTemplate">
            <summary>
            When the template is applied, this loads all the template parts
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.Refresh">
            <summary>
            Reload the metadata from the source target or DomainContext
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:System.Windows.UIElement.OnCreateAutomationPeer"/>)
            </summary>
            <returns>The AutomationPeer associated with this DescriptionViewer.</returns>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.DescriptionViewer_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Perform initialization code
            </summary>
            <param name="sender">The DescriptionViewer that has loaded.</param>
            <param name="e">The RoutedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.DescriptionViewer_IsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsEnabled property change handler
            </summary>
            <param name="sender">The DescriptionViewer that had its IsEnabled value changed.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.LoadMetadata(System.Boolean)">
            <summary>
            Load meta data and update the UI. 
            </summary>
            <param name="forceUpdate">If true, metadata will not be loaded from cache.</param>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.ParseTargetValidState">
            <summary>
            Parse the target error state and update the IsValid property
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.Target_BindingValidationError(System.Object,System.Windows.Controls.ValidationErrorEventArgs)">
            <summary>
            Event handler for target control's BindingValidationError event.
            </summary>
            <param name="sender">The sender of the BindingValidationError event.</param>
            <param name="e">The ValidationErrorEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.Target_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event handler for the target control's GotFocus event.
            </summary>
            <param name="sender">The sender of the GotFocus event.</param>
            <param name="e">The RoutedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.Target_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event handler for the target control's LostFocus event.
            </summary>
            <param name="sender">The sender of the LostFocus event.</param>
            <param name="e">The RoutedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.UpdateCommonState">
            <summary>
            Update the Common VSM state
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.UpdateDescriptionState">
            <summary>
            Update the required field VSM state based on the description property.  
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.UpdateValidationState">
            <summary>
            When updating the validation state, check the focus state and update the VSM accordingly
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DescriptionViewer.Description">
            <summary>
            Gets or sets the description text displayed by the viewer.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DescriptionViewer.GlyphTemplate">
            <summary>
            Gets or sets the template that is used to display the description viewer glyph.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DescriptionViewer.ToolTipStyle">
            <summary>
            Gets or sets the style used to display tooltips.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DescriptionViewer.IsFocused">
            <summary>
              Gets a value that indicates whether the <see cref="P:System.Windows.Controls.DescriptionViewer.Target"/> 
              of the <see cref="T:System.Windows.Controls.DescriptionViewer"/> has focus. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DescriptionViewer.IsValid">
            <summary>
              Gets a value that indicates whether the <see cref="P:System.Windows.Controls.DescriptionViewer.Target"/> field data is valid. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DescriptionViewer.PropertyPath">
            <summary>
              Gets or sets the path to the dependency property on the <see cref="P:System.Windows.FrameworkElement.DataContext" /> 
              of the <see cref="P:System.Windows.Controls.Label.Target" /> control that 
              this <see cref="T:System.Windows.Controls.DescriptionViewer" /> is associated with. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DescriptionViewer.Target">
            <summary>
              Gets or sets the control that this <see cref="T:System.Windows.Controls.DescriptionViewer" /> is associated with. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DescriptionViewer.ValidationMetadata">
            <summary>
            Internally get or set the ValidationMetadata.  
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DescriptionViewer.Initialized">
            <summary>
            Gets a value indicating whether the control has been initialized.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ValidationSummary">
            <summary>
            Displays a summary of validation errors on a form.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummary.#ctor">
            <summary>
            Initializes a new instance of the ValidationSummary class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidationSummary.ShowErrorsInSummaryProperty">
            <summary>
            Gets or sets a value indicating whether the field errors belonging to the input control should be shown in the ValidationSummary. 
            Errors are added to the DisplayedErrors list depending on this flag.  The base Errors list, however, will always contain all
            the errors.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummary.GetShowErrorsInSummary(System.Windows.DependencyObject)">
            <summary>
            Gets the ShowErrorsInSummary property of the specified DependencyObject.
            </summary>
            <param name="inputControl">The input control to get the ShowErrorsInSummary property from.</param>
            <returns>The value indicating whether errors on the input control should be shown.</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummary.SetShowErrorsInSummary(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the ShowErrorsInSummary property of the specified DependencyObject.
            </summary>
            <param name="inputControl">The input control with which to associate the specified dependency property.</param>
            <param name="value">The value indicating whether errors on the input control should be shown.</param>
        </member>
        <member name="F:System.Windows.Controls.ValidationSummary.ErrorStyleProperty">
            <summary>
            Identifies the ErrorStyle dependency property
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidationSummary.FilterProperty">
            <summary>
            Identifies the Filter dependency property
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidationSummary.FocusControlsOnClickProperty">
            <summary>
            Identifies the FocusControlsOnClick dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidationSummary.HasErrorsProperty">
            <summary>
            Identifies the HasErrors dependency property
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidationSummary.HasDisplayedErrorsProperty">
            <summary>
            Identifies the HasDisplayedErrors dependency property
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidationSummary.HeaderProperty">
            <summary>
            Identifies the Header dependency property
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidationSummary.HeaderTemplateProperty">
            <summary>
            Identifies the HeaderTemplate dependency property
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidationSummary.SummaryListBoxStyleProperty">
            <summary>
            Identifies the SummaryListBoxStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidationSummary.TargetProperty">
            <summary>
            Identifies the Target dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummary.CompareValidationSummaryItems(System.Windows.Controls.ValidationSummaryItem,System.Windows.Controls.ValidationSummaryItem)">
            <summary>
            Compare ValidationSummaryItems for display in the ValidationSummary
            </summary>
            <param name="x">The first reference used for comparison.</param>
            <param name="y">The second reference used for comparison.</param>
            <returns>The result of the comparison check between the two references.</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummary.TryCompareReferences(System.Object,System.Object,System.Int32@)">
            <summary>
            Try to compare two references, but only if they they are comparable
            </summary>
            <param name="x">The first reference to compare.</param>
            <param name="y">The second reference to compare.</param>
            <param name="returnVal">The comparison value.</param>
            <returns>Returns true if the two references were able to be compared.</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummary.ReferencesAreValid(System.Object,System.Object,System.Int32@)">
            <summary>
            Perform a null comparison check if one (or both) are null
            </summary>
            <param name="x">The first reference to compare.</param>
            <param name="y">The second reference to compare.</param>
            <param name="val">The comparison value.</param>
            <returns>Returns true if both references are non-null</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummary.UpdateDisplayedErrorsOnAllValidationSummaries(System.Windows.DependencyObject)">
            <summary>
            When one of the input controls has its ShowErrorsInSummary property changed, we have to go through all the ValidationSummaries on the page and update them
            </summary>
            <param name="parent">The parent ValidationSummary</param>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummary.OnApplyTemplate">
            <summary>
            When the template is applied, this loads all the template parts
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummary.OnFocusingInvalidControl(System.Windows.Controls.FocusingInvalidControlEventArgs)">
            <summary>
            OnErrorClicked is invoked when an error in the ValidationSummary is clicked, via either the mouse or keyboard.
            </summary>
            <param name="e">The FocusingInvalidControlEventArgs for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummary.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:System.Windows.UIElement.OnCreateAutomationPeer"/>)
            </summary>
            <returns>The AutomationPeer associated with this ValidationSummary.</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummary.ExecuteClickInternal">
            <summary>
            Simulate a click
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummary.SortByVisualTreeOrdering(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            Sort two dependency objects based on their relative positions within the VisualTree.  
            </summary>
            <param name="controlX">The first control being compared.</param>
            <param name="controlY">The second value being compared.</param>
            <returns>The sort value indicating the ordering between the two controls.</returns>
        </member>
        <member name="E:System.Windows.Controls.ValidationSummary.FocusingInvalidControl">
            <summary>
            Event triggered when an Error is clicked on.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.ValidationSummary.SelectionChanged">
            <summary>
            Event triggered when the selected error has changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummary.ErrorStyle">
            <summary>
            Gets or sets the style used for the error's item container.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummary.Filter">
            <summary>
            Gets or sets a value that indicates which types of errors are displayed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummary.FocusControlsOnClick">
            <summary>
            Gets or sets a value that indicates whether focus is set on the 
            input control when an error message is clicked.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummary.HasErrors">
            <summary>
              Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ValidationSummary" /> has errors. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummary.HasDisplayedErrors">
            <summary>
              Gets or sets a value that indicates whether the 
              <see cref="T:System.Windows.Controls.ValidationSummary" /> has displayed errors. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummary.Header">
            <summary>
            Gets or sets the content of the <see cref="T:System.Windows.Controls.ValidationSummary" /> header. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummary.HeaderTemplate">
            <summary>
            Gets or sets the template that is used to display the content of the header.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummary.SummaryListBoxStyle">
            <summary>
            Gets or sets the style applied to the <see cref="T:System.Windows.Controls.ListBox" /> that displays the errors. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummary.Target">
            <summary>
            Gets or sets the <see cref="T:System.Windows.UIElement" /> for 
            which validation errors will be displayed in the summary. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummary.Errors">
            <summary>
            Gets the collection of errors.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummary.DisplayedErrors">
            <summary>
            Gets the collection of errors that are displayed after 
            the <see cref="P:System.Windows.Controls.ValidationSummary.Filter" /> is applied. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummary.Initialized">
            <summary>
            Gets a value indicating whether the ValidationSummary is initialized.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummary.ErrorsListBoxInternal">
            <summary>
            Gets the ErrorsListBox template part
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummary.HeaderContentControlInternal">
            <summary>
            Gets the HeaderContentControl template part
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ValidationSummaryFilters">
            <summary>
            An enum to specify the error filtering level.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.ValidationSummaryFilters.None">
            <summary>
            None of the errors are displayed in the ValidationSummary
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidationSummaryFilters.ObjectErrors">
            <summary>
            ValidationSummary only displays the object level errors
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidationSummaryFilters.PropertyErrors">
            <summary>
            ValidationSummary only displays the property level errors
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidationSummaryFilters.All">
            <summary>
            ValidationSummary displays all errors
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ValidationSummaryItem">
            <summary>
            Represents an individual validation error.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummaryItem.#ctor">
            <summary>
            Initializes a new instance of the ValidationSummaryItem class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummaryItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ValidationSummaryItem class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummaryItem.#ctor(System.String,System.String,System.Windows.Controls.ValidationSummaryItemType,System.Windows.Controls.ValidationSummaryItemSource,System.Object)">
            <summary>
            Initializes a new instance of the ValidationSummaryItem class.
            </summary>
            <param name="message">The error message.</param>
            <param name="messageHeader">The header/prefix of the item, such as the property name.</param>
            <param name="itemType">The type of error, such as Property or Entity level.</param>
            <param name="source">The source of the error message, including the originating control and/or property name.</param>
            <param name="context">Context from which the error occurred.  This general property can be used as a container to keep track of the entity, for instance.</param>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummaryItem.ToString">
            <summary>
            The string representation of the error.
            </summary>
            <returns>The string representation of the ValidationSummaryItem.</returns>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummaryItem.Context">
            <summary>
            Gets or sets the object that is the context in which the error occurred.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummaryItem.ItemType">
            <summary>
            Gets a value that specifies whether the error originated from an object or a property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummaryItem.Message">
            <summary>
            Gets or sets the text of the error message.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummaryItem.MessageHeader">
            <summary>
            Gets the reference to the input control that resulted in this error
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummaryItem.Sources">
            <summary>
            Gets the sources of the error.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.ValidationSummaryItem.PropertyChanged">
            <summary>
            This event is raised when any of the properties on the object change
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ValidationSummaryItemSource">
            <summary>
            The source of a ValidationSummaryItem, indicating the PropertyName and/or Control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummaryItemSource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ValidationSummaryItemSource class.
            </summary>
            <param name="propertyName">The name of the property associated with this error.</param>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummaryItemSource.#ctor(System.String,System.Windows.Controls.Control)">
            <summary>
            Initializes a new instance of the ValidationSummaryItemSource class.
            </summary>
            <param name="propertyName">The name of the property associated with this error.</param>
            <param name="control">The control associated with this error.</param>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummaryItemSource.Equals(System.Object)">
            <summary>
            Implements the equality check against the PropertyName and Control.
            </summary>
            <param name="obj">The ValidationSummaryItem being compared.</param>
            <returns>A value indicating whether the two references are equal in value.</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationSummaryItemSource.GetHashCode">
            <summary>
            Returns a HashCode based on the PropertyName and Control Name
            </summary>
            <returns>The hash value of the ValidationSummaryItemSource.</returns>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummaryItemSource.PropertyName">
            <summary>
            Gets the PropertyName.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationSummaryItemSource.Control">
            <summary>
            Gets the Control.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ValidationSummaryItemType">
            <summary>
            The source of the error, for error management
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.ValidationSummaryItemType.ObjectError">
            <summary>
            The error came from object level validation
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidationSummaryItemType.PropertyError">
            <summary>
            The error came from the binding engine, which exposes only a single error at a time
            </summary>
        </member>
        <member name="T:System.Windows.Controls.FocusingInvalidControlEventArgs">
            <summary>
            Provides data for the ErrorClicked event.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.FocusingInvalidControlEventArgs.#ctor(System.Windows.Controls.ValidationSummaryItem,System.Windows.Controls.ValidationSummaryItemSource)">
            <summary>
            Initializes a new instance of the ValidationSummaryItemEventArgs class.
            </summary>
            <param name="item">The selected ValidationSummaryItem</param>
            <param name="target">The target is the ValidationSummaryItemSource that will be focused.</param>
        </member>
        <member name="P:System.Windows.Controls.FocusingInvalidControlEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether the focusing was handled.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.FocusingInvalidControlEventArgs.Item">
            <summary>
            Gets the error message string
            </summary>
        </member>
        <member name="P:System.Windows.Controls.FocusingInvalidControlEventArgs.Target">
            <summary>
            Gets or sets the target ValidationSummaryItemSource.  If this value is changed, it will be the new current source 
            and will be focused.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Label">
            <summary>
            Displays a caption, required field indicator, and validation error indicator for a control.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Label.#ctor">
            <summary>
            Initializes a new instance of the Label class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Label.ContentInternalProperty">
            <summary>
            Identifies the ContentInternal dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Label.DataContextProperty">
            <summary>
            Identifies the DataContext dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Label.IsRequiredProperty">
            <summary>
            Identifies the IsRequired dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Label.OnIsRequiredPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle the IsRequired field property change event.
            </summary>
            <param name="depObj">The Label that had its IsRequired value changed.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.Label.IsValidProperty">
            <summary>
            Identifies the IsValid dependency property
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Label.PropertyPathProperty">
            <summary>
            Identifies the PropertyPath dependency property
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Label.TargetProperty">
            <summary>
            Identifies the Target dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Label.OnApplyTemplate">
            <summary>
            When the template is applied, this loads all the template parts
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Label.Refresh">
            <summary>
            Reload the metadata from the source target or DataContext
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Label.OnContentChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the System.Windows.Controls.Label.Content property changes.
            </summary>
            <param name="oldContent">The old value of the System.Windows.Controls.Label.Content property.</param>
            <param name="newContent">The new value of the System.Windows.Controls.Label.Content property.</param>
        </member>
        <member name="M:System.Windows.Controls.Label.Label_IsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsEnabled property change handler
            </summary>
            <param name="sender">The Label that had its IsEnabled value changed.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.Label.Label_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Perform initialization code
            </summary>
            <param name="sender">The Label that has loaded.</param>
            <param name="e">The RoutedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.Label.LoadMetadata(System.Boolean)">
            <summary>
            Load meta data and update the UI. 
            </summary>
            <param name="forceUpdate">If true, metadata will not be loaded from cache.</param>
        </member>
        <member name="M:System.Windows.Controls.Label.ParseTargetValidState">
            <summary>
            Parse the target error state and update the IsValid property
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Label.Target_BindingValidationError(System.Object,System.Windows.Controls.ValidationErrorEventArgs)">
            <summary>
            Event handler for target control's BindingValidationError event.
            </summary>
            <param name="sender">The target that had a BindingValidationError event.</param>
            <param name="e">The ValidationErrorEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.Label.UpdateCommonState">
            <summary>
            Update the Common VSM state
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Label.UpdateRequiredState">
            <summary>
            Update the required field VSM state based on the IsRequired property.  
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Label.UpdateValidationState">
            <summary>
            Update the validation VSM state
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Label.ContentInternal">
            <summary>
            Gets or sets the ContentInternal property of the Label.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Label.IsRequired">
            <summary>
              Gets or sets a value that indicates whether 
              the <see cref="P:System.Windows.Controls.Label.Target" /> field is required. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Label.IsValid">
            <summary>
              Gets a value that indicates whether 
              the <see cref="P:System.Windows.Controls.Label.Target" /> field data is valid. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Label.PropertyPath">
            <summary>
              Gets or sets the path to the dependency property on the 
              <see cref="P:System.Windows.FrameworkElement.DataContext" /> of the 
              <see cref="P:System.Windows.Controls.Label.Target" /> control that this 
              <see cref="T:System.Windows.Controls.Label" /> is associated with. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Label.Target">
            <summary>
              Gets or sets the control that this <see cref="T:System.Windows.Controls.Label" /> is associated with. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Label.ValidationMetadata">
            <summary>
            Internally get or set the ValidationMetadata.  
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Label.Initialized">
            <summary>
            Gets a value indicating whether the control has been initialized.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ValidationItemCollection">
            <summary>
            Represents all of the validation items associated with a given input control
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ValidationItemCollection.ClearErrors(System.Windows.Controls.ValidationSummaryItemType)">
            <summary>
            Clears errors of the given source type
            </summary>
            <param name="errorType">The type of the error (Entity or Property)</param>
        </member>
        <member name="M:System.Windows.Controls.ValidationItemCollection.ClearItems">
            <summary>
            Clears all the ValidationSummaryItemTypes from the collection.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidationHelper.ValidationMetadataProperty">
            <summary>
            Gets or sets the ValidationMetadata, which represents all of the metadata associated with the binding path of the input control.  This includes
            IsFieldRequired, RequiredFieldMessage, Caption, and Description.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ValidationHelper.GetValidationMetadata(System.Windows.DependencyObject)">
            <summary>
            Gets the ValidationMetadata property for the input control
            </summary>
            <param name="inputControl">The input control to get the ValidationMetadata property from.</param>
            <returns>The ValidationMetadata associated with the input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationHelper.SetValidationMetadata(System.Windows.DependencyObject,System.Windows.Controls.ValidationMetadata)">
            <summary>
            Sets the ValidationMetadata property for the input control
            </summary>
            <param name="inputControl">The input control to set the ValidationMetadata property on.</param>
            <param name="value">The ValidationMetadata to associate with the input control.</param>
        </member>
        <member name="M:System.Windows.Controls.ValidationHelper.ParseMetadata(System.Windows.FrameworkElement,System.Boolean,System.Object@,System.Windows.Data.BindingExpression@)">
            <summary>
            Parse metadata from a target FrameworkElement.  This will cache the metadata on the element as an attached property.
            </summary>
            <param name="element">The target FrameworkElement to pull metadata from.</param>
            <param name="forceUpdate">If set, will not pull metadata from cache.</param>
            <param name="entity">The entity used.</param>
            <param name="bindingExpression">The bindingExpression used.</param>
            <returns>Returns the metadata associated with the element.  Will be null if no metadata was found.</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationHelper.ParseMetadata(System.String,System.Object)">
            <summary>
            Parse metadata given a binding path and entity object.
            </summary>
            <param name="bindingPath">The bindingPath is the name of the property on the entity from which to pull metadata from.  This supports dot notation.</param>
            <param name="entity">The entity object from which to pull metadata from.</param>
            <returns>The validation metadata associated with the entity and binding path.  This will return null if none exists.</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationHelper.GetProperty(System.Type,System.String)">
            <summary>
            Get the PropertyInfo for a given entity type.  Supports dot notation to represent nested objects.
            </summary>
            <param name="entityType">The type of the object.</param>
            <param name="propertyPath">The property path, supporting dot notation.</param>
            <returns>The PropertyInfo corresponding to the final property.</returns>
        </member>
        <member name="T:System.Windows.Controls.ValidationMetadata">
            <summary>
            Encapsulates metadata info for a given property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationMetadata.IsRequired">
            <summary>
            Gets or sets a value indicating whether the field is required
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationMetadata.Description">
            <summary>
            Gets or sets the property description
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationMetadata.Caption">
            <summary>
            Gets or sets the caption
            </summary>
        </member>
        <member name="E:System.Windows.Controls.ValidationMetadata.PropertyChanged">
            <summary>
            This event is raised when any of the properties on the object change
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupValidation">
            <summary>
            VSM Group for validation, containing focus details.  These details are not orthogonal and thus were combined.   See TextBox validation for precedence.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateValid">
            <summary>
            VSM State for Valid
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalid">
            <summary>
            VSM STate for Invalid
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateValidFocused">
            <summary>
            VSM State for Valid and Focused (DescriptionViewer specific)
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateValidUnfocused">
            <summary>
            VSM State for Valid and Unfocused (DescriptionViewer specific)
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalidFocused">
            <summary>
            VSM State for Invalid and Focused (DescriptionViewer specific)
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalidUnfocused">
            <summary>
            VSM State for Invalid and Focused (DescriptionViewer specific)
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateEmpty">
            <summary>
            VSM State for no errors (ValidationSummary specific)
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateHasErrors">
            <summary>
            VSM State for containing errors (ValidationSummary specific)
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupCommon">
            <summary>
            VSM Group for common states, such as Normal or Disabled
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNormal">
            <summary>
            VSM state for Normal (enabled)
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDisabled">
            <summary>
            VSM state for Disabled
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupRequired">
            <summary>
            VSM group for required states
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNotRequired">
            <summary>
            VSM state for not required
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateRequired">
            <summary>
            VSM state for required
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupDescription">
            <summary>
            VSM group for description states
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNoDescription">
            <summary>
            VSM state for no description defined
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateHasDescription">
            <summary>
            VSM state for having a description defined
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.DataVisualization.Toolkit.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.DataVisualization.Toolkit.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.ToolboxCategoryPaths">
            <summary>
            Names for ToolboxCategoryAttribute.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.BasicControls">
            <summary>
            Basic Controls category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.Controls">
            <summary>
            Controls category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.ControlParts">
            <summary>
            Control Parts category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.DataVisualization">
            <summary>
            DataVisualization category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.DataVisualizationControlParts">
            <summary>
            DataVisualization/Control Parts category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.Theming">
            <summary>
            Theming category.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.AxisLabelMetadata">
            <summary>
            To register design time metadata for SSWCDC.AxisLabel.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.AxisLabelMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.AxisLabel.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.AxisMetadata">
            <summary>
            To register design time metadata for SSWCDC.Axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.AxisMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.Axis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.BarSeriesMetadata">
            <summary>
            To register design time metadata for SSWCDC.BarSeries.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.BarSeriesMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.BarSeries.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.BubbleDataPointMetadata">
            <summary>
            To register design time metadata for SSWCDC.BubbleDataPoint.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.BubbleDataPointMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.BubbleDataPoint.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.BubbleSeriesMetadata">
            <summary>
            To register design time metadata for SSWCDC.BubbleSeries.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.BubbleSeriesMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.BubbleSeries.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.CategoryAxisMetadata">
            <summary>
            To register design time metadata for SSWCDC.CategoryAxis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.CategoryAxisMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.CategoryAxis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.ChartDefaultInitializer">
            <summary>
            Default initializer for chart. 
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.ChartDefaultInitializer.InitializeDefaults(Microsoft.Windows.Design.Model.ModelItem)">
            <summary>
            Sets the default property values for chart. 
            </summary>
            <param name="item">SSWCDC.Chart ModelItem.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.ChartMetadata">
            <summary>
            To register design time metadata for SSWCDC.Chart.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.ChartMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.Chart.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.ColumnSeriesMetadata">
            <summary>
            To register design time metadata for SSWCDC.ColumnSeries.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.ColumnSeriesMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.ColumnSeries.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.AreaSeriesMetadata">
            <summary>
            To register design time metadata for SSWCDC.AreaSeries.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.AreaSeriesMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.AreaSeries.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.DataPointMetadata">
            <summary>
            To register design time metadata for SSWCDC.DataPoint.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.DataPointMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.DataPoint.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.DataPointSeriesMetadata">
            <summary>
            To register design time metadata for SSWCDC.DataPointSeries.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.DataPointSeriesMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.DataPointSeries.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.DateTimeAxisMetadata">
            <summary>
            To register design time metadata for SSWCDC.DateTimeAxis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.DateTimeAxisMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.DateTimeAxis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.DisplayAxisMetadata">
            <summary>
            To register design time metadata for SSWCDC.DisplayAxis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.DisplayAxisMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.DisplayAxis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.LegendItemMetadata">
            <summary>
            To register design time metadata for SSWCD.Legend.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.LegendItemMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCD.Legend.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.LegendMetadata">
            <summary>
            To register design time metadata for SSWCD.Legend.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.LegendMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCD.Legend.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.LinearAxisMetadata">
            <summary>
            To register design time metadata for SSWCD.LinearAxis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.LinearAxisMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCD.LinearAxis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.LineSeriesMetadata">
            <summary>
            To register design time metadata for SSWCDC.LineSeries.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.LineSeriesMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.LineSeries.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.NumericAxisMetadata">
            <summary>
            To register design time metadata for SSWCDC.NumericAxis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.NumericAxisMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.NumericAxis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.PieDataPointMetadata">
            <summary>
            To register design time metadata for SSWCDC.PieDataPoint.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.PieDataPointMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.PieDataPoint.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.PieSeriesMetadata">
            <summary>
            To register design time metadata for SSWCDC.PieSeries.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.PieSeriesMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.PieSeries.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Design.Properties.Resources.ChartTitle">
            <summary>
              Looks up a localized string similar to Chart Title.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Design.Properties.Resources.DataVisualization">
            <summary>
              Looks up a localized string similar to Data Visualization.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Design.Properties.Resources.DataVisualizationStyling">
            <summary>
              Looks up a localized string similar to Data Visualization Styling.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.MetadataRegistration.#ctor">
            <summary>
            Design time metadata registration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.RangeAxisMetadata">
            <summary>
            To register design time metadata for SSWCDC.RangeAxis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.RangeAxisMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.RangeAxis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.ScatterSeriesMetadata">
            <summary>
            To register design time metadata for SSWCDC.ScatterSeries.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.ScatterSeriesMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.ScatterSeries.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.SeriesMetadata">
            <summary>
            To register design time metadata for SSWCDC.Series.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.SeriesMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.Series.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.TextBoxEditor">
            <summary>
            Simple TextBox inline editor.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.TextBoxEditor.#ctor(System.Windows.DataTemplate)">
            <summary>
            Preserve the constructor prototype from PropertyValueEditor.
            </summary>
            <param name="inlineEditorTemplate">Inline editor template.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.TextBoxEditor.#ctor">
            <summary>
            Default constructor builds the default TextBox inline editor template.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.TitleMetadata">
            <summary>
            To register design time metadata for SSWCD.Legend.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.TitleMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCD.Legend.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.Controls.Design.Common.TreeMapMetadata">
            <summary>
            To register design time data for TreeMap.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.Controls.Design.Common.TreeMapMetadata.#ctor">
            <summary>
            To register design time data for TreeMap.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.DataVisualization.Toolkit.Expression.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.DataVisualization.Toolkit.Expression.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Expression.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Expression.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Expression.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.DataVisualization.Toolkit.VisualStudio.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.DataVisualization.Toolkit.VisualStudio.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.AreaSeriesMetadata">
            <summary>
            To register design time metadata for SSWCDC.AreaSeries.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.AreaSeriesMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.AreaSeries.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.AxisLabelMetadata">
            <summary>
            To register design time metadata for SSWCDC.AxisLabel.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.AxisLabelMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.AxisLabel.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.AxisMetadata">
            <summary>
            To register design time metadata for SSWCDC.Axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.AxisMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.Axis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.BarSeriesMetadata">
            <summary>
            To register design time metadata for SSWCDC.BarSeries.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.BarSeriesMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.BarSeries.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.BubbleDataPointMetadata">
            <summary>
            To register design time metadata for SSWCDC.BubbleDataPoint.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.BubbleDataPointMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.BubbleDataPoint.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.BubbleSeriesMetadata">
            <summary>
            To register design time metadata for SSWCDC.BubbleSeries.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.BubbleSeriesMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.BubbleSeries.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.CategoryAxisMetadata">
            <summary>
            To register design time metadata for SSWCDC.CategoryAxis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.CategoryAxisMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.CategoryAxis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.ChartMetadata">
            <summary>
            To register design time metadata for SSWCDC.Chart.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.ChartMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.Chart.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.ColumnSeriesMetadata">
            <summary>
            To register design time metadata for SSWCDC.ColumnSeries.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.ColumnSeriesMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.ColumnSeries.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.DataPointMetadata">
            <summary>
            To register design time metadata for SSWCDC.DataPoint.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.DataPointMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.DataPoint.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.DataPointSeriesMetadata">
            <summary>
            To register design time metadata for SSWCDC.DataPointSeries.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.DataPointSeriesMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.DataPointSeries.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.DateTimeAxisMetadata">
            <summary>
            To register design time metadata for SSWCDC.DateTimeAxis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.DateTimeAxisMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.DateTimeAxis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.DisplayAxisMetadata">
            <summary>
            To register design time metadata for SSWCDC.DisplayAxis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.DisplayAxisMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.DisplayAxis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.LegendItemMetadata">
            <summary>
            To register design time metadata for SSWCD.Legend.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.LegendItemMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCD.Legend.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.LegendMetadata">
            <summary>
            To register design time metadata for SSWCD.Legend.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.LegendMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCD.Legend.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.LinearAxisMetadata">
            <summary>
            To register design time metadata for SSWCD.LinearAxis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.LinearAxisMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCD.LinearAxis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.LineSeriesMetadata">
            <summary>
            To register design time metadata for SSWCDC.LineSeries.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.LineSeriesMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.LineSeries.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.NumericAxisMetadata">
            <summary>
            To register design time metadata for SSWCDC.NumericAxis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.NumericAxisMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.NumericAxis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.PieDataPointMetadata">
            <summary>
            To register design time metadata for SSWCDC.PieDataPoint.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.PieDataPointMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.PieDataPoint.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.PieSeriesMetadata">
            <summary>
            To register design time metadata for SSWCDC.PieSeries.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.PieSeriesMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.PieSeries.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.RangeAxisMetadata">
            <summary>
            To register design time metadata for SSWCDC.RangeAxis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.RangeAxisMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.RangeAxis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.ScatterSeriesMetadata">
            <summary>
            To register design time metadata for SSWCDC.ScatterSeries.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.ScatterSeriesMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.ScatterSeries.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.SeriesMetadata">
            <summary>
            To register design time metadata for SSWCDC.Series.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.SeriesMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCDC.Series.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.TextBoxEditor">
            <summary>
            Simple TextBox inline editor.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.TextBoxEditor.#ctor(System.Windows.DataTemplate)">
            <summary>
            Preserve the constructor prototype from PropertyValueEditor.
            </summary>
            <param name="inlineEditorTemplate">Inline editor template.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.TextBoxEditor.#ctor">
            <summary>
            Default constructor builds the default TextBox inline editor template.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.TitleMetadata">
            <summary>
            To register design time metadata for SSWCD.Legend.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Design.TitleMetadata.#ctor">
            <summary>
            To register design time metadata for SSWCD.Legend.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.VisualStudio.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.VisualStudio.Design.MetadataRegistration._initialized">
            <summary>
            Borrowed from System.Windows.Controls.Toolbox.Design.MetadataRegistration:
            use a static flag to ensure metadata is registered only one.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.VisualStudio.Design.MetadataRegistration.Register">
            <summary>
            Called by tools to register design time metadata.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.VisualStudio.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Design.Properties.Resources.ChartTitle">
            <summary>
              Looks up a localized string similar to Chart Title.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Design.Properties.Resources.DataVisualization">
            <summary>
              Looks up a localized string similar to Data Visualization.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Design.Properties.Resources.DataVisualizationStyling">
            <summary>
              Looks up a localized string similar to Data Visualization Styling.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Data.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Data</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Automation.Peers.DataGridAutomationPeer">
            <summary>
            Exposes <see cref="T:System.Windows.Controls.DataGrid" /> types to UI Automation.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.#ctor(System.Windows.Controls.DataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" /> class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.DataGrid" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.GetChildrenCore">
            <summary>
            Gets the collection of elements that are represented in the UI Automation tree as immediate
            child elements of the automation peer.
            </summary>
            <returns>The children elements.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType, 
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.GetNameCore">
            <summary>
            Called by GetName.
            </summary>
            <returns>
            Returns the first of these that is not null or empty:
            - Value returned by the base implementation
            - Name of the owning DataGrid
            - DataGrid class name
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern that is associated with the specified System.Windows.Automation.Peers.PatternInterface.
            </summary>
            <param name="patternInterface">A value from the System.Windows.Automation.Peers.PatternInterface enumeration.</param>
            <returns>The object that supports the specified pattern, or null if unsupported.</returns>
        </member>
        <member name="T:System.Windows.Automation.Peers.DataGridCellAutomationPeer">
            <summary>
            AutomationPeer for DataGridCell
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.#ctor(System.Windows.Controls.DataGridCell)">
            <summary>
            AutomationPeer for DataGridCell
            </summary>
            <param name="owner">DataGridCell</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType, 
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.GetNameCore">
            <summary>
            Gets the name of the element.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern that is associated with the specified System.Windows.Automation.Peers.PatternInterface.
            </summary>
            <param name="patternInterface">A value from the System.Windows.Automation.Peers.PatternInterface enumeration.</param>
            <returns>The object that supports the specified pattern, or null if unsupported.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.IsKeyboardFocusableCore">
            <summary>
            Gets a value that indicates whether the element can accept keyboard focus.
            </summary>
            <returns>true if the element can accept keyboard focus; otherwise, false</returns>
        </member>
        <member name="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer">
            <summary>
            AutomationPeer for DataGridColumnHeader
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridColumnHeader)">
            <summary>
            AutomationPeer for DataGridColumnHeader
            </summary>
            <param name="owner">DataGridColumnHeader</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType, 
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.GetHelpTextCore">
            <summary>
            Gets the string that describes the functionality of the control that is associated with the automation peer. 
            </summary>
            <returns>The string that contains the help text.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.GetNameCore">
            <summary>
            Gets the name of the element.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern that is associated with the specified System.Windows.Automation.Peers.PatternInterface.
            </summary>
            <param name="patternInterface">A value from the System.Windows.Automation.Peers.PatternInterface enumeration.</param>
            <returns>The object that supports the specified pattern, or null if unsupported.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.IsContentElementCore">
            <summary>
            Gets a value that specifies whether the element is a content element.
            </summary>
            <returns>true if the element is a content element; otherwise false</returns>
        </member>
        <member name="T:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer">
            <summary>
            AutomationPeer for DataGridColumnHeadersPresenter
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter)">
            <summary>
            AutomationPeer for DataGridColumnHeadersPresenter
            </summary>
            <param name="owner">DataGridColumnHeadersPresenter</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType, 
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.IsContentElementCore">
            <summary>
            Gets a value that specifies whether the element is a content element.
            </summary>
            <returns>true if the element is a content element; otherwise false</returns>
        </member>
        <member name="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer">
            <summary>
            AutomationPeer for DataGridDetailsPresenter
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridDetailsPresenter)">
            <summary>
            AutomationPeer for DataGridDetailsPresenter
            </summary>
            <param name="owner">DataGridDetailsPresenter</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer.GetAutomationControlTypeCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer.GetClassNameCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer.IsControlElementCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer.IsContentElementCore">
            
        </member>
        <member name="T:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer">
            <summary>
            AutomationPeer for a group of items in a DataGrid
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.#ctor(System.Windows.Data.CollectionViewGroup,System.Windows.Controls.DataGrid)">
            <summary>
            AutomationPeer for a group of items in a DataGrid
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetAcceleratorKeyCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetAccessKeyCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetAutomationControlTypeCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetAutomationIdCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetBoundingRectangleCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetChildrenCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetClassNameCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetClickablePointCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetHelpTextCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetItemStatusCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetItemTypeCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetLabeledByCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetLocalizedControlTypeCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetNameCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetOrientationCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.HasKeyboardFocusCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.IsContentElementCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.IsControlElementCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.IsEnabledCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.IsKeyboardFocusableCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.IsOffscreenCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.IsPasswordCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.IsRequiredForFormCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.SetFocusCore">
            
        </member>
        <member name="P:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.OwningDataGrid">
            <summary>
            The owning DataGrid
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.OwningDataGridPeer">
            <summary>
            The owning DataGrid's Automation Peer
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.OwningRowGroupHeader">
            <summary>
            The owning DataGridRowGroupHeader
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.OwningRowGroupHeaderPeer">
            <summary>
            The owning DataGridRowGroupHeader's Automation Peer
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer">
            <summary>
            AutomationPeer for an item in a DataGrid
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.#ctor(System.Object,System.Windows.Controls.DataGrid)">
            <summary>
            AutomationPeer for an item in a DataGrid
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetAcceleratorKeyCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetAccessKeyCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetAutomationControlTypeCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetAutomationIdCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetBoundingRectangleCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetChildrenCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetClassNameCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetClickablePointCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetHelpTextCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetItemStatusCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetItemTypeCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetLabeledByCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetLocalizedControlTypeCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetNameCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetOrientationCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.HasKeyboardFocusCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.IsContentElementCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.IsControlElementCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.IsEnabledCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.IsKeyboardFocusableCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.IsOffscreenCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.IsPasswordCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.IsRequiredForFormCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.SetFocusCore">
            
        </member>
        <member name="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer">
            <summary>
            AutomationPeer for DataGridRow
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridRowAutomationPeer.#ctor(System.Windows.Controls.DataGridRow)">
            <summary>
            AutomationPeer for DataGridRow
            </summary>
            <param name="owner">DataGridRow</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridRowAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridRowAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType, 
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="T:System.Windows.Automation.Peers.DataGridRowGroupHeaderAutomationPeer">
            <summary>
            AutomationPeer for DataGridRowGroupHeader
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridRowGroupHeaderAutomationPeer.#ctor(System.Windows.Controls.DataGridRowGroupHeader)">
            <summary>
            AutomationPeer for DataGridRowGroupHeader
            </summary>
            <param name="owner">DataGridRowGroupHeader</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridRowGroupHeaderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridRowGroupHeaderAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType, 
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer">
            <summary>
            AutomationPeer for DataGridRowHeader
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridRowHeader)">
            <summary>
            AutomationPeer for DataGridRowHeader
            </summary>
            <param name="owner">DataGridRowHeader</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType, 
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer.GetNameCore">
            <summary>
            Gets the name of the element.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer.IsContentElementCore">
            <summary>
            Gets a value that specifies whether the element is a content element.
            </summary>
            <returns>true if the element is a content element; otherwise false</returns>
        </member>
        <member name="T:System.Windows.Automation.Peers.DataGridRowsPresenterAutomationPeer">
            <summary>
            AutomationPeer for DataGridRowsPresenter
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridRowsPresenterAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridRowsPresenter)">
            <summary>
            AutomationPeer for DataGridColumnHeadersPresenter
            </summary>
            <param name="owner">DataGridColumnHeadersPresenter</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridRowsPresenterAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridRowsPresenterAutomationPeer.GetChildrenCore">
            
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridRowsPresenterAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType, 
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataGridRowsPresenterAutomationPeer.IsContentElementCore">
            <summary>
            Gets a value that specifies whether the element is a content element.
            </summary>
            <returns>true if the element is a content element; otherwise false</returns>
        </member>
        <member name="T:System.Windows.Controls.DataGridBeginningEditEventArgs">
            <summary>
            Provides data for the <see cref="E:System.Windows.Controls.DataGrid.BeginningEdit" /> event.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridBeginningEditEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.RoutedEventArgs)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:System.Windows.Controls.DataGridBeginningEditEventArgs" /> class.
            </summary>
            <param name="column">
            The column that contains the cell to be edited.
            </param>
            <param name="row">
            The row that contains the cell to be edited.
            </param>
            <param name="editingEventArgs">
            Information about the user gesture that caused the cell to enter edit mode.
            </param>
        </member>
        <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.Column">
            <summary>
            Gets the column that contains the cell to be edited.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.EditingEventArgs">
            <summary>
            Gets information about the user gesture that caused the cell to enter edit mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.Row">
            <summary>
            Gets the row that contains the cell to be edited.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridCellEditEndedEventArgs">
            <summary>
            Provides information just after a cell has exited editing mode.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridCellEditEndedEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.Controls.DataGridEditAction)">
            <summary>
            Instantiates a new instance of this class.
            </summary>
            <param name="column">The column of the cell that has just exited edit mode.</param>
            <param name="row">The row container of the cell container that has just exited edit mode.</param>
            <param name="editAction">The editing action that has been taken.</param>
        </member>
        <member name="P:System.Windows.Controls.DataGridCellEditEndedEventArgs.Column">
            <summary>
            The column of the cell that has just exited edit mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridCellEditEndedEventArgs.EditAction">
            <summary>
            The edit action taken when leaving edit mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridCellEditEndedEventArgs.Row">
            <summary>
            The row container of the cell container that has just exited edit mode.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridCellEditEndingEventArgs">
            <summary>
            Provides information just before a cell exits editing mode.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridCellEditEndingEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.FrameworkElement,System.Windows.Controls.DataGridEditAction)">
            <summary>
            Instantiates a new instance of this class.
            </summary>
            <param name="column">The column of the cell that is about to exit edit mode.</param>
            <param name="row">The row container of the cell container that is about to exit edit mode.</param>
            <param name="editingElement">The editing element within the cell.</param>
            <param name="editAction">The editing action that will be taken.</param>
        </member>
        <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.Column">
            <summary>
            The column of the cell that is about to exit edit mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.EditAction">
            <summary>
            The edit action to take when leaving edit mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.EditingElement">
            <summary>
            The editing element within the cell. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.Row">
            <summary>
            The row container of the cell container that is about to exit edit mode.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Primitives.DataGridFrozenGrid">
            <summary>
            Represents a non-scrollable grid that contains <see cref="T:System.Windows.Controls.DataGrid" /> row headers.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.DataGridFrozenGrid.IsFrozenProperty">
            <summary>
            A dependency property that indicates whether the grid is frozen.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridFrozenGrid.GetIsFrozen(System.Windows.DependencyObject)">
            <summary>
            Gets a value that indicates whether the grid is frozen.
            </summary>
            <param name="element">
            The object to get the <see cref="P:System.Windows.Controls.Primitives.DataGridFrozenGrid.IsFrozen" /> value from.
            </param>
            <returns>true if the grid is frozen; otherwise, false. The default is true.</returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridFrozenGrid.SetIsFrozen(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets a value that indicates whether the grid is frozen.
            </summary>
            <param name="element">The object to set the <see cref="P:System.Windows.Controls.Primitives.DataGridFrozenGrid.IsFrozen" /> value on.</param>
            <param name="value">true if <paramref name="element" /> is frozen; otherwise, false.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="element" /> is null.</exception>
        </member>
        <member name="T:System.Windows.Controls.DataGridRowEditEndedEventArgs">
            <summary>
            Provides information just after a row has exited edit mode.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridRowEditEndedEventArgs.#ctor(System.Windows.Controls.DataGridRow,System.Windows.Controls.DataGridEditAction)">
            <summary>
            Instantiates a new instance of this class.
            </summary>
            <param name="row">The row container of the cell container that has just exited edit mode.</param>
            <param name="editAction">The editing action that has been taken.</param>
        </member>
        <member name="P:System.Windows.Controls.DataGridRowEditEndedEventArgs.EditAction">
            <summary>
            The editing action that has been taken.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridRowEditEndedEventArgs.Row">
            <summary>
            The row container of the cell container that has just exited edit mode.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridRowEditEndingEventArgs">
            <summary>
            Provides information just before a row exits editing mode.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridRowEditEndingEventArgs.#ctor(System.Windows.Controls.DataGridRow,System.Windows.Controls.DataGridEditAction)">
            <summary>
            Instantiates a new instance of this class.
            </summary>
            <param name="row">The row container of the cell container that is about to exit edit mode.</param>
            <param name="editAction">The editing action that will be taken.</param>
        </member>
        <member name="P:System.Windows.Controls.DataGridRowEditEndingEventArgs.EditAction">
            <summary>
            The editing action that will be taken.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridRowEditEndingEventArgs.Row">
            <summary>
            The row container of the cell container that is about to exit edit mode.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridRowEventArgs">
            <summary>
            Provides data for <see cref="T:System.Windows.Controls.DataGrid" /> row-related events.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridRowEventArgs.#ctor(System.Windows.Controls.DataGridRow)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridRowEventArgs" /> class.
            </summary>
            <param name="dataGridRow">The row that the event occurs for.</param>
        </member>
        <member name="P:System.Windows.Controls.DataGridRowEventArgs.Row">
            <summary>
            Gets the row that the event occurs for.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridRowGroupHeader">
            <summary>
            Represents the header of a <see cref="T:System.Windows.Controls.DataGrid" /> row group. 
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridRowGroupHeader.#ctor">
            <summary>
            Constructs a DataGridRowGroupHeader
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGridRowGroupHeader.HeaderStyleProperty">
            <summary>
            Dependency Property for HeaderStyle
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGridRowGroupHeader.ItemCountVisibilityProperty">
            <summary>
            DependencyProperty for ItemCountVisibility
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGridRowGroupHeader.PropertyNameProperty">
            <summary>
            DependencyProperty for PropertyName
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGridRowGroupHeader.PropertyNameVisibilityProperty">
            <summary>
            DependencyProperty for PropertyNameVisibility
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGridRowGroupHeader.SublevelIndentProperty">
            <summary>
            SublevelIndent Dependency property
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGridRowGroupHeader.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:System.Windows.UIElement.OnCreateAutomationPeer"/>)
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridRowGroupHeader.HeaderStyle">
            <summary>
            The style applied to the header cell of a <see cref="T:System.Windows.Controls.DataGridRowGroupHeader" />. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridRowGroupHeader.ItemCountVisibility">
            <summary>
            Gets or sets a value that indicates whether the item count is visible.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridRowGroupHeader.PropertyName">
            <summary>
            Gets or sets the name of the property that this <see cref="T:System.Windows.Controls.DataGrid" /> row is bound to. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridRowGroupHeader.PropertyNameVisibility">
            <summary>
            Gets or sets a value that indicates whether the property name is visible.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridRowGroupHeader.SublevelIndent">
            <summary>
            Gets or sets a value that indicates the amount that the 
            children of the <see cref="T:System.Windows.Controls.RowGroupHeader" /> are indented. 
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridRowGroupHeaderEventArgs">
            <summary>
            EventArgs used for the DataGrid's LoadingRowGroup and UnloadingRowGroup events
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridRowGroupHeaderEventArgs.#ctor(System.Windows.Controls.DataGridRowGroupHeader)">
            <summary>
            Constructs a DataGridRowGroupHeaderEventArgs instance
            </summary>
            <param name="rowGroupHeader"></param>
        </member>
        <member name="P:System.Windows.Controls.DataGridRowGroupHeaderEventArgs.RowGroupHeader">
            <summary>
            DataGridRowGroupHeader associated with this instance
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridCell">
            <summary>
            Represents an individual <see cref="T:System.Windows.Controls.DataGrid" /> cell.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataGridCell.IsValidProperty">
            <summary>
            Identifies the IsValid dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGridCell.OnIsValidPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsValidProperty property changed handler.
            </summary>
            <param name="d">DataGridCell that changed its IsValid.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.DataGridCell.OnApplyTemplate">
            <summary>
            Builds the visual tree for the cell control when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGridCell.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:System.Windows.UIElement.OnCreateAutomationPeer"/>)
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGridCell.EnsureStyle(System.Windows.Style)">
            <summary>
            Ensures that the correct Style is applied to this object.
            </summary>
            <param name="previousStyle">Caller's previous associated Style</param>
        </member>
        <member name="P:System.Windows.Controls.DataGridCell.IsValid">
            <summary>
            Gets a value that indicates whether the data in a cell is valid. 
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridCell.InternalTestHook">
            <summary>
            Test hook class that exposes internal and private members of the DataGridCell
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Primitives.DataGridColumnHeader">
            <summary>
            Represents an individual <see cref="T:System.Windows.Controls.DataGrid" /> column header.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> class. 
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrushProperty">
            <summary>
            Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrush" /> dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibilityProperty">
            <summary>
            Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility" /> dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnApplyTemplate">
            <summary>
            Builds the visual tree for the column header when a new template is applied. 
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnContentChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.
            </summary>
            <param name="oldContent">The old value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property.</param>
            <param name="newContent">The new value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property.</param>
            <exception cref="T:System.NotSupportedException">
            <paramref name="newContent" /> is not a UIElement.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:System.Windows.UIElement.OnCreateAutomationPeer"/>)
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.EnsureStyle(System.Windows.Style)">
            <summary>
            Ensures that the correct Style is applied to this object.
            </summary>
            <param name="previousStyle">Caller's previous associated Style</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.GetReorderingTargetColumn(System.Windows.Point,System.Boolean,System.Boolean)">
            <summary>
            Returns the column against whose top-left the reordering caret should be positioned
            </summary>
            <param name="mousePosition"></param>
            <param name="ignoreVertical"></param>
            <param name="clipToVisible"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.GetReorderingTargetDisplayIndex(System.Windows.Point,System.Boolean,System.Boolean)">
            <summary>
            Returns the display index to set the column to
            </summary>
            <param name="mousePosition"></param>
            <param name="ignoreVertical"></param>
            <param name="clipToVisible"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.IsReorderTargeted(System.Windows.Point,System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Returns true if the mouse is 
            - to the left of the element, or within the left half of the element
            and
            - within the vertical range of the element, or ignoreVertical == true
            </summary>
            <param name="mousePosition"></param>
            <param name="element"></param>
            <param name="ignoreVertical"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnLostMouseCapture">
            <summary>
            Resets the static DataGridColumnHeader properties when a header loses mouse capture
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnMouseEnter(System.Windows.Point)">
            <summary>
            Sets up the DataGridColumnHeader for the MouseEnter event
            </summary>
            <param name="mousePosition">mouse position relative to the DataGridColumnHeader</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnMouseLeave">
            <summary>
            Sets up the DataGridColumnHeader for the MouseLeave event
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.TestHook">
            <summary>
            Internal property to expose the TestHook object
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to paint the column header separator lines. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility">
            <summary>
            Gets or sets a value indicating whether the column header separator lines are visible.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Primitives.DataGridColumnHeader.InternalTestHook">
            <summary>
            Test hook class that exposes internal and private members of the DataGridColumnHeader
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.InternalTestHook.#ctor(System.Windows.Controls.Primitives.DataGridColumnHeader)">
            <summary>
            Creates a TestHook for the given DataGridColumnHeader
            </summary>
            <param name="columnHeader">DataGridColumnHeader</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.InternalTestHook.OnLostMouseCapture">
            <summary>
            Exposes the private OnLostMouseCapture method through the TestHook
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.InternalTestHook.OnMouseEnter(System.Windows.Point)">
            <summary>
            Exposes the private OnMouseEnter method through the TestHook
            </summary>
            <param name="mousePosition">mouse position relative to the DataGridColumnHeader</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.InternalTestHook.OnMouseLeave">
            <summary>
            Exposes the private OnMouseLeave method through the TestHook
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGrid">
            <summary>
            Displays data in a customizable grid.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.DATAGRID_defaultColumnDisplayOrder">
            <summary>
            The default order to use for columns when there is no <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order"/>
            value available for the property.
            </summary>
            <remarks>
            The value of 10,000 comes from the DataAnnotations spec, allowing
            some properties to be ordered at the beginning and some at the end.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGrid" /> class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.AlternatingRowBackgroundProperty">
            <summary>
            Identifies the <see cref="P:System.Windows.Controls.DataGrid.AlternatingRowBackground" /> 
            dependency property.
            </summary>
            <returns>
            The identifier for the <see cref="P:System.Windows.Controls.DataGrid.AlternatingRowBackground" /> 
            dependency property.
            </returns>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.AreRowDetailsFrozenProperty">
            <summary>
            Identifies the AreRowDetailsFrozen dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.AreRowGroupHeadersFrozenProperty">
            <summary>
            Identifies the AreRowDetailsFrozen dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.AutoGenerateColumnsProperty">
            <summary>
            Identifies the AutoGenerateColumns dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.CanUserReorderColumnsProperty">
            <summary>
            Identifies the CanUserReorderColumns dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.CanUserResizeColumnsProperty">
            <summary>
            Identifies the CanUserResizeColumns dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.CanUserSortColumnsProperty">
            <summary>
            Identifies the CanUserSortColumns dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.CellStyleProperty">
            <summary>
            Identifies the <see cref="P:System.Windows.Controls.DataGrid.CellStyle" /> dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.ColumnHeaderHeightProperty">
            <summary>
            Identifies the ColumnHeaderHeight dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnColumnHeaderHeightPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ColumnHeaderHeightProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its ColumnHeaderHeight.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.ColumnHeaderStyleProperty">
            <summary>
            Identifies the ColumnHeaderStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.ColumnWidthProperty">
            <summary>
            Identifies the ColumnWidth dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnColumnWidthPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ColumnWidthProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its ColumnWidth.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.DragIndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:System.Windows.Controls.DataGrid.DragIndicatorStyle" /> 
            dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.DropLocationIndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:System.Windows.Controls.DataGrid.DropLocationIndicatorStyle" /> 
            dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.FrozenColumnCountProperty">
            <summary>
            Identifies the <see cref="P:System.Windows.Controls.DataGrid.FrozenColumnCount" /> 
            dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.GridLinesVisibilityProperty">
            <summary>
            Identifies the GridLines dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnGridLinesVisibilityPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            GridLinesProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its GridLines.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.HeadersVisibilityProperty">
            <summary>
            Identifies the HeadersVisibility dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnHeadersVisibilityPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HeadersVisibilityProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its HeadersVisibility.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.HorizontalGridLinesBrushProperty">
            <summary>
            Identifies the HorizontalGridLinesBrush dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnHorizontalGridLinesBrushPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HorizontalGridLinesBrushProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its HorizontalGridLinesBrush.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibilityProperty">
            <summary>
            Identifies the HorizontalScrollBarVisibility dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnHorizontalScrollBarVisibilityPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HorizontalScrollBarVisibilityProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its HorizontalScrollBarVisibility.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.IsReadOnlyProperty">
            <summary>
            Identifies the IsReadOnly dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnIsReadOnlyPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsReadOnlyProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its IsReadOnly.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.IsValidProperty">
            <summary>
            Identifies the IsValid dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnIsValidPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsValidProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its IsValid.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnItemsSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemsSourceProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its ItemsSource.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.MaxColumnWidthProperty">
            <summary>
            Identifies the MaxColumnWidth dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnMaxColumnWidthPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MaxColumnWidthProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its ColumnWidth.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.MinColumnWidthProperty">
            <summary>
            Identifies the MinColumnWidth dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnMinColumnWidthPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinColumnWidthProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its ColumnWidth.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.RowBackgroundProperty">
            <summary>
            Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowBackground" /> dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.RowDetailsTemplateProperty">
            <summary>
            Identifies the RowDetailsTemplate dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.RowDetailsVisibilityModeProperty">
            <summary>
            Identifies the RowDetailsVisibilityMode dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnRowDetailsVisibilityModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            RowDetailsVisibilityModeProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its RowDetailsVisibilityMode.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.RowHeightProperty">
            <summary>
            Identifies the RowHeight dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnRowHeightPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            RowHeightProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its RowHeight.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.RowHeaderWidthProperty">
            <summary>
            Identifies the RowHeaderWidth dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnRowHeaderWidthPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            RowHeaderWidthProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its RowHeaderWidth.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.RowHeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowHeaderStyle" /> dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.RowStyleProperty">
            <summary>
            Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowStyle" /> dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.SelectionModeProperty">
            <summary>
            Identifies the SelectionMode dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnSelectionModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectionModeProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its SelectionMode.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.SelectedIndexProperty">
            <summary>
            Identifies the SelectedIndex dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnSelectedIndexPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedIndexProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its SelectedIndex.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.SelectedItemProperty">
            <summary>
            Identifies the SelectedItem dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnSelectedItemPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedItemProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its SelectedItem.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.VerticalGridLinesBrushProperty">
            <summary>
            Identifies the VerticalGridLinesBrush dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnVerticalGridLinesBrushPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            VerticalGridLinesBrushProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its VerticalGridLinesBrush.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGrid.VerticalScrollBarVisibilityProperty">
            <summary>
            Identifies the VerticalScrollBarVisibility dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnVerticalScrollBarVisibilityPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            VerticalScrollBarVisibilityProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its VerticalScrollBarVisibility.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.BeginEdit">
            <summary>
            Enters editing mode for the current cell and current row (if they're not already in editing mode).
            </summary>
            <returns>True if operation was successful. False otherwise.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.BeginEdit(System.Windows.RoutedEventArgs)">
            <summary>
            Enters editing mode for the current cell and current row (if they're not already in editing mode).
            </summary>
            <param name="editingEventArgs">Provides information about the user gesture that caused the call to BeginEdit. Can be null.</param>
            <returns>True if operation was successful. False otherwise.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.CancelEdit">
            <summary>
            Cancels editing mode and restores the original value.
            </summary>
            <returns>True if operation was successful. False otherwise.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.CancelEdit(System.Windows.Controls.DataGridEditingUnit)">
            <summary>
            Cancels editing mode for the specified DataGridEditingUnit and restores its original value.
            </summary>
            <param name="editingUnit">Specifies whether to cancel edit for a Cell or Row.</param>
            <returns>True if operation was successful. False otherwise.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.CommitEdit">
            <summary>
            Commits editing mode and pushes changes to the backend.
            </summary>
            <returns>True if operation was successful. False otherwise.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.CommitEdit(System.Windows.Controls.DataGridEditingUnit,System.Boolean)">
            <summary>
            Commits editing mode for the specified DataGridEditingUnit and pushes changes to the backend.
            </summary>
            <param name="editingUnit">Specifies whether to commit edit for a Cell or Row.</param>
            <param name="exitEditingMode">Editing mode is left if True.</param>
            <returns>True if operation was successful. False otherwise.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.GetGroupFromItem(System.Object,System.Int32)">
            <summary>
            Returns the Group at the indicated level or null if the item is not in the ItemsSource
            </summary>
            <param name="item">item</param>
            <param name="groupLevel">groupLevel</param>
            <returns>The group the given item falls under or null if the item is not in the ItemsSource</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.ScrollIntoView(System.Object,System.Windows.Controls.DataGridColumn)">
            <summary>
            Scrolls the specified item or RowGroupHeader and/or column into view.
            If item is not null: scrolls the row representing the item into view;
            If column is not null: scrolls the column into view;
            If both item and column are null, the method returns without scrolling.
            </summary>
            <param name="item">an item from the DataGrid's items source or a CollectionViewGroup from the PagedCollectionView</param>
            <param name="column">a column from the DataGrid's columns collection</param>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of the <see cref="T:System.Windows.Controls.DataGridRow" />.
            </summary>
            <param name="finalSize">
            The final area within the parent that this element should use to arrange itself and its children.
            </param>
            <returns>
            The actual size used by the <see cref="T:System.Windows.Controls.DataGridRow" />.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the children of a <see cref="T:System.Windows.Controls.DataGridRow" /> to prepare for 
            arranging them during the 
            <see cref="M:System.Windows.Controls.DataGridRow.ArrangeOverride(System.Windows.Size)" /> pass. 
            </summary>
            <returns>
            The size that the <see cref="T:System.Windows.Controls.DataGridRow" /> determines it needs during layout, based on its calculations of child object allocated sizes.
            </returns>
            <param name="availableSize">
            The available size that this element can give to child elements. Indicates an upper limit that 
            child elements should not exceed.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnApplyTemplate">
            <summary>
            Builds the visual tree for the column header when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnAutoGeneratingColumn(System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs)">
            <summary>
            Raises the AutoGeneratingColumn event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnBeginningEdit(System.Windows.Controls.DataGridBeginningEditEventArgs)">
            <summary>
            Raises the BeginningEdit event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnCellEditEnded(System.Windows.Controls.DataGridCellEditEndedEventArgs)">
            <summary>
            Raises the CellEditEnded event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnCellEditEnding(System.Windows.Controls.DataGridCellEditEndingEventArgs)">
            <summary>
            Raises the CellEditEnding event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:System.Windows.UIElement.OnCreateAutomationPeer"/>)
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnCurrentCellChanged(System.EventArgs)">
            <summary>
            Raises the CurrentCellChanged event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnLoadingRow(System.Windows.Controls.DataGridRowEventArgs)">
            <summary>
            Raises the LoadingRow event for row preparation.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnLoadingRowGroup(System.Windows.Controls.DataGridRowGroupHeaderEventArgs)">
            <summary>
            Raises the LoadingRowGroup event
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnLoadingRowDetails(System.Windows.Controls.DataGridRowDetailsEventArgs)">
            <summary>
            Raises the LoadingRowDetails for row details preparation
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnPreparingCellForEdit(System.Windows.Controls.DataGridPreparingCellForEditEventArgs)">
            <summary>
            Raises the PreparingCellForEdit event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnRowEditEnded(System.Windows.Controls.DataGridRowEditEndedEventArgs)">
            <summary>
            Raises the RowEditEnded event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnRowEditEnding(System.Windows.Controls.DataGridRowEditEndingEventArgs)">
            <summary>
            Raises the RowEditEnding event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raises the SelectionChanged event and clears the _selectionChanged.
            This event won't get raised again until after _selectionChanged is set back to true.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnUnloadingRow(System.Windows.Controls.DataGridRowEventArgs)">
            <summary>
            Raises the UnloadingRow event for row recycling.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnUnloadingRowDetails(System.Windows.Controls.DataGridRowDetailsEventArgs)">
            <summary>
            Raises the UnloadingRowDetails event
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnUnloadingRowGroup(System.Windows.Controls.DataGridRowGroupHeaderEventArgs)">
            <summary>
            Raises the UnLoadingRowGroup event
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.CancelEdit(System.Windows.Controls.DataGridEditingUnit,System.Boolean)">
            <summary>
            Cancels editing mode for the specified DataGridEditingUnit and restores its original value.
            </summary>
            <param name="editingUnit">Specifies whether to cancel edit for a Cell or Row.</param>
            <param name="raiseEvents">Specifies whether or not to raise editing events</param>
            <returns>True if operation was successful. False otherwise.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.CoerceSelectedItem">
            <summary>
            call when: selection changes or SelectedItems object changes
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.ProcessSelectionAndCurrency(System.Int32,System.Object,System.Int32,System.Windows.Controls.DataGridSelectionAction,System.Boolean)">
            <summary>
            Selects items and updates currency based on parameters
            </summary>
            <param name="columnIndex">column index to make current</param>
            <param name="item">data item or CollectionViewGroup to make current</param>
            <param name="backupSlot">slot to use in case the item is no longer valid</param>
            <param name="action">selection action to perform</param>
            <param name="scrollIntoView">whether or not the new current item should be scrolled into view</param>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.CreateValidationSummaryItem(System.ComponentModel.DataAnnotations.ValidationResult)">
            <summary>
            Create an ValidationSummaryItem for a given ValidationResult, by finding all cells related to the
            validation error and adding them as separate ValidationSummaryItemSources.
            </summary>
            <param name="validationResult">ValidationResult</param>
            <returns>ValidationSummaryItem</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.ValidationSummary_FocusingInvalidControl(System.Object,System.Windows.Controls.FocusingInvalidControlEventArgs)">
            <summary>
            Handles the ValidationSummary's FocusingInvalidControl event and begins edit on the cells
            that are associated with the selected error.
            </summary>
            <param name="sender">ValidationSummary</param>
            <param name="e">FocusingInvalidControlEventArgs</param>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.ValidationSummary_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Handles the ValidationSummary's SelectionChanged event and changes which cells are displayed as invalid.
            </summary>
            <param name="sender">ValidationSummary</param>
            <param name="e">SelectionChangedEventArgs</param>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.FindValidationSummaryItem(System.ComponentModel.DataAnnotations.ValidationResult)">
            <summary>
            Searches through the DataGrid's ValidationSummary for any errors that use the given
            ValidationResult as the ValidationSummaryItem's Context value.
            </summary>
            <param name="context">ValidationResult</param>
            <returns>ValidationSummaryItem or null if not found</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.ExitEdit(System.Boolean)">
            <summary>
            Exits editing mode without trying to commit or revert the editing, and 
            without repopulating the edited row's cell.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.RefreshColumnElements(System.Windows.Controls.DataGridColumn,System.String)">
            <summary>
            Called when a column property changes, and its cells need to 
            adjust that that column change.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.GetColumnXFromIndex(System.Int32)">
            <devdoc>
                 Returns the absolute coordinate of the left edge of the given column (including
                 the potential gridline - that is the left edge of the gridline is returned). Note that
                 the column does not need to be in the display area.
            </devdoc>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.CollapseRowGroup(System.Windows.Data.CollectionViewGroup,System.Boolean)">
            <summary>
            Collapses the DataGridRowGroupHeader that represents a given CollectionViewGroup
            </summary>
            <param name="collectionViewGroup">CollectionViewGroup</param>
            <param name="collapseAllSubgroups">Set to true to collapse all Subgroups</param>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.ExpandRowGroup(System.Windows.Data.CollectionViewGroup,System.Boolean)">
            <summary>
            Expands the DataGridRowGroupHeader that represents a given CollectionViewGroup
            </summary>
            <param name="collectionViewGroup">CollectionViewGroup</param>
            <param name="expandAllSubgroups">Set to true to expand all Subgroups</param>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.OnRowDetailsVisibilityChanged(System.Windows.Controls.DataGridRowDetailsEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged" /> event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.ClearRowSelection(System.Boolean)">
            <summary>
            Clears the entire selection. Displayed rows are deselected explicitly to visualize
            potential transition effects
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.ClearRowSelection(System.Int32,System.Boolean)">
            <summary>
            Clears the entire selection except the indicated row. Displayed rows are deselected explicitly to 
            visualize potential transition effects. The row indicated is selected if it is not already.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.GetRowFromItem(System.Object)">
            <summary>
            Returns the row associated to the provided backend data item.
            </summary>
            <param name="dataItem">backend data item</param>
            <returns>null if the DataSource is null, the provided item in not in the source, or the item is not displayed; otherwise, the associated Row</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.CorrectSlotsAfterDeletion(System.Int32,System.Boolean)">
            <summary>
            Adjusts the index of all displayed, loaded and edited rows after a row was deleted.
            Removes the deleted row from the list of loaded rows if present.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.CorrectSlotsAfterInsertion(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Adjusts the index of all displayed, loaded and edited rows after rows were deleted.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.GenerateRow(System.Int32,System.Int32)">
            <summary>
            Returns a row for the provided index. The row gets first loaded through the LoadingRow event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.GenerateRow(System.Int32,System.Int32,System.Object)">
            <summary>
            Returns a row for the provided index. The row gets first loaded through the LoadingRow event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.GetExactSlotElementHeight(System.Int32)">
            <summary>
            Returns the exact row height, whether it is currently displayed or not.
            The row is generated and added to the displayed rows in case it is not already displayed.
            The horizontal gridlines thickness are added.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.GetSlotElementHeight(System.Int32)">
            <summary>
            If the provided slot is displayed, returns the exact height.
            If the slot is not displayed, returns a default height.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.GetSlotElementsHeight(System.Int32,System.Int32)">
            <summary>
            Cumulates the approximate height of the rows from fromRowIndex to toRowIndex included.
            Including the potential gridline thickness.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.GetGeneratedRow(System.Object)">
            <summary>
            Checks if the row for the provided dataContext has been generated and is present
            in either the loaded rows, pre-fetched rows, or editing row. 
            The displayed rows are *not* searched. Returns null if the row does not belong to those 3 categories.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGrid.SlotIsDisplayed(System.Int32)">
            <summary>
            Determines whether the row at the provided index must be displayed or not.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn">
            <summary>
            Occurs one time for each public, non-static property in the bound data type when the 
            <see cref="P:System.Windows.Controls.DataGrid.ItemsSource" /> property is changed and the 
            <see cref="P:System.Windows.Controls.DataGrid.AutoGenerateColumns" /> property is true.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.BeginningEdit">
            <summary>
            Occurs before a cell or row enters editing mode. 
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.CellEditEnded">
            <summary>
            Occurs after cell editing has ended.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.CellEditEnding">
            <summary>
            Occurs immediately before cell editing has ended.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged">
            <summary>
            Occurs when the <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 
            property of a column changes.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.ColumnHeaderDragCompleted">
            <summary>
            Occurs when the user drops a column header that was being dragged using the mouse.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.ColumnHeaderDragDelta">
            <summary>
            Occurs one or more times while the user drags a column header using the mouse. 
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.ColumnHeaderDragStarted">
            <summary>
            Occurs when the user begins dragging a column header using the mouse. 
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.ColumnReordered">
            <summary>
            Raised when column reordering ends, to allow subscribers to clean up.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.ColumnReordering">
            <summary>
            Raised when starting a column reordering action.  Subscribers to this event can
            set tooltip and caret UIElements, constrain tooltip position, indicate that
            a preview should be shown, or cancel reordering.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.CurrentCellChanged">
            <summary>
            Occurs when a different cell becomes the current cell.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.LoadingRow">
            <summary>
            Occurs after a <see cref="T:System.Windows.Controls.DataGridRow" /> 
            is instantiated, so that you can customize it before it is used.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.LoadingRowDetails">
            <summary>
            Occurs when a new row details template is applied to a row, so that you can customize 
            the details section before it is used.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.LoadingRowGroup">
            <summary>
            Occurs before a DataGridRowGroupHeader header is used.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.PreparingCellForEdit">
            <summary>
            Occurs when a cell in a <see cref="T:System.Windows.Controls.DataGridTemplateColumn" /> enters editing mode.
            
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged">
            <summary>
            Occurs when the <see cref="P:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode" /> 
            property value changes.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.RowEditEnded">
            <summary>
            Occurs when the row has been successfully committed or cancelled.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.RowEditEnding">
            <summary>
            Occurs immediately before the row has been successfully committed or cancelled.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.SelectionChanged">
            <summary>
            Occurs when the <see cref="P:System.Windows.Controls.DataGrid.SelectedItem" /> or 
            <see cref="P:System.Windows.Controls.DataGrid.SelectedItems" /> property value changes.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.UnloadingRow">
            <summary>
            Occurs when a <see cref="T:System.Windows.Controls.DataGridRow" /> 
            object becomes available for reuse.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.UnloadingRowGroup">
            <summary>
            Occurs when the DataGridRowGroupHeader is available for reuse.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataGrid.UnloadingRowDetails">
            <summary>
            Occurs when a row details element becomes available for reuse.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.AlternatingRowBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that is used to paint the background of odd-numbered rows.
            </summary>
            <returns>
            The brush that is used to paint the background of odd-numbered rows. The default is a 
            <see cref="T:System.Windows.Media.SolidColorBrush" /> with a 
            <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> value of white (ARGB value #00FFFFFF).
            </returns>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.AreRowDetailsFrozen">
            <summary>
            Gets or sets a value that indicates whether the row details sections remain 
            fixed at the width of the display area or can scroll horizontally.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.AreRowGroupHeadersFrozen">
            <summary>
            Gets or sets a value that indicates whether the row group header sections
            remain fixed at the width of the display area or can scroll horizontally.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.AutoGenerateColumns">
            <summary>
            Gets or sets a value that indicates whether columns are created 
            automatically when the <see cref="P:System.Windows.Controls.DataGrid.ItemsSource" /> property is set.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.CanUserReorderColumns">
            <summary>
            Gets or sets a value that indicates whether the user can change 
            the column display order by dragging column headers with the mouse.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.CanUserResizeColumns">
            <summary>
            Gets or sets a value that indicates whether the user can adjust column widths using the mouse.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.CanUserSortColumns">
            <summary>
            Gets or sets a value that indicates whether the user can sort columns by clicking the column header.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.CellStyle">
            <summary>
            Gets or sets the style that is used when rendering the data grid cells.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.ColumnHeaderHeight">
            <summary>
            Gets or sets the height of the column headers row.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle">
            <summary>
            Gets or sets the style that is used when rendering the column headers.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.ColumnWidth">
            <summary>
            Gets or sets the standard width or automatic sizing mode of columns in the control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.DragIndicatorStyle">
            <summary>
            Gets or sets the style that is used when rendering the drag indicator
            that is displayed while dragging column headers.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.DropLocationIndicatorStyle">
            <summary>
            Gets or sets the style that is used when rendering the column headers.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.FrozenColumnCount">
            <summary>
            Gets or sets the number of columns that the user cannot scroll horizontally.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.GridLinesVisibility">
            <summary>
            Gets or sets a value that indicates which grid lines separating inner cells are shown.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.HeadersVisibility">
            <summary>
            Gets or sets a value that indicates the visibility of row and column headers.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.HorizontalGridLinesBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that is used to paint grid lines separating rows.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibility">
            <summary>
            Gets or sets a value that indicates how the horizontal scroll bar is displayed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.IsReadOnly">
            <summary>
            Gets or sets a value that indicates whether the user can edit the values in the control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.IsValid">
            <summary>
            Gets a value that indicates whether data in the grid is valid. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.ItemsSource">
            <summary>
            Gets or sets a collection that is used to generate the content of the control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.MaxColumnWidth">
            <summary>
            Gets or sets the maximum width of columns in the <see cref="T:System.Windows.Controls.DataGrid" /> . 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.MinColumnWidth">
            <summary>
            Gets or sets the minimum width of columns in the <see cref="T:System.Windows.Controls.DataGrid" />. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.RowBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that is used to paint row backgrounds.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.RowDetailsTemplate">
            <summary>
            Gets or sets the template that is used to display the content of the details section of rows.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode">
            <summary>
            Gets or sets a value that indicates when the details sections of rows are displayed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.RowHeight">
            <summary>
            Gets or sets the standard height of rows in the control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.RowHeaderWidth">
            <summary>
            Gets or sets the width of the row header column.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.RowHeaderStyle">
            <summary>
            Gets or sets the style that is used when rendering the row headers. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.RowStyle">
            <summary>
            Gets or sets the style that is used when rendering the rows.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.SelectionMode">
            <summary>
            Gets or sets the selection behavior of the data grid.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.SelectedIndex">
            <summary>
            Gets or sets the index of the current selection.
            </summary>
            <returns>
            The index of the current selection, or -1 if the selection is empty.
            </returns> 
        </member>
        <member name="P:System.Windows.Controls.DataGrid.SelectedItem">
            <summary>
            Gets or sets the data item corresponding to the selected row.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.VerticalGridLinesBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that is used to paint grid lines separating columns. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.VerticalScrollBarVisibility">
            <summary>
            Gets or sets a value that indicates how the vertical scroll bar is displayed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.Columns">
            <summary>
            Gets a collection that contains all the columns in the control.
            </summary>      
        </member>
        <member name="P:System.Windows.Controls.DataGrid.CurrentColumn">
            <summary>
            Gets or sets the column that contains the current cell.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.RowGroupHeaderStyles">
            <summary>
            Gets or sets the style that is used when rendering the row group header.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.SelectedItems">
            <summary>
            Gets a list that contains the data items corresponding to the selected rows.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGrid.CurrentItem">
            <summary>
            Gets the data item bound to the row that contains the current cell.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGrid.InternalTestHook">
            <summary>
            Test hook class that exposes internal and private members of the DataGrid
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridLength">
            <summary>
            Represents the lengths of elements within the <see cref="T:System.Windows.Controls.DataGrid" /> control.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridLength.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridLength" /> class. 
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:System.Windows.Controls.DataGridLength.op_Equality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)">
            <summary>
            Overloaded operator, compares 2 GridLength's.
            </summary>
            <param name="gl1">first DataGridLength to compare.</param>
            <param name="gl2">second DataGridLength to compare.</param>
            <returns>true if specified DataGridLength have same value 
            and unit type.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridLength.op_Inequality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)">
            <summary>
            Overloaded operator, compares 2 GridLength's.
            </summary>
            <param name="gl1">first DataGridLength to compare.</param>
            <param name="gl2">second DataGridLength to compare.</param>
            <returns>true if specified DataGridLength have either different value or 
            unit type.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridLength.Equals(System.Windows.Controls.DataGridLength)">
            <summary>
            Compares this instance of DataGridLength with another instance.
            </summary>
            <param name="other">DataGridLength length instance to compare.</param>
            <returns><c>true</c> if this DataGridLength instance has the same value 
            and unit type as gridLength.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridLength.Equals(System.Object)">
            <summary>
            Compares this instance of GridLength with another object.
            </summary>
            <param name="obj">Reference to an object for comparison.</param>
            <returns><c>true</c> if this DataGridLength instance has the same value 
            and unit type as oCompare.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridLength.GetHashCode">
            <summary>
            Returns a unique hash code for this DataGridLength
            </summary>
            <returns>hash code</returns>
        </member>
        <member name="P:System.Windows.Controls.DataGridLength.Auto">
            <summary>
            Gets a <see cref="T:System.Windows.Controls.DataGridLength" /> structure that represents the standard automatic sizing mode.
            </summary>
            <returns>
            A <see cref="T:System.Windows.Controls.DataGridLength" /> structure that represents the standard automatic sizing mode.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.DataGridLength.IsAbsolute">
            <summary>
                Returns <c>true</c> if this DataGridLength instance holds 
                an absolute (pixel) value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridLength.IsAuto">
            <summary>
                Returns <c>true</c> if this DataGridLength instance is 
                automatic (not specified).
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridLength.IsSizeToCells">
            <summary>
                Returns <c>true</c> if this instance is to size to the cells of a column or row.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridLength.IsSizeToHeader">
            <summary>
                Returns <c>true</c> if this instance is to size to the header of a column or row.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridLength.SizeToCells">
            <summary>
            Gets a <see cref="T:System.Windows.Controls.DataGridLength" /> structure that represents the cell-based automatic sizing mode.
            </summary>
            <returns>
            A <see cref="T:System.Windows.Controls.DataGridLength" /> structure that represents the cell-based automatic sizing mode.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.DataGridLength.SizeToHeader">
            <summary>
            Gets a <see cref="T:System.Windows.Controls.DataGridLength" /> structure that represents the header-based automatic sizing mode.
            </summary>
            <returns>
            A <see cref="T:System.Windows.Controls.DataGridLength" /> structure that represents the header-based automatic sizing mode.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.DataGridLength.Value">
            <summary>
            Gets the absolute value of the <see cref="T:System.Windows.Controls.DataGridLength" /> in pixels.
            </summary>
            <returns>
            The absolute value of the <see cref="T:System.Windows.Controls.DataGridLength" /> in pixels.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.DataGridLengthConverter">
            <summary>
            DataGridLengthConverter - Converter class for converting instances of other types to and from DataGridLength instances.
            </summary> 
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Checks whether or not this class can convert from a given type.
            </summary>
            <param name="context">
            An ITypeDescriptorContext that provides a format context. 
            </param>
            <param name="sourceType">The Type being queried for support.</param>
            <returns>
            <c>true</c> if this converter can convert from the provided type, 
            <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Checks whether or not this class can convert to a given type.
            </summary>
            <param name="context">
            An ITypeDescriptorContext that provides a format context. 
            </param>
            <param name="destinationType">The Type being queried for support.</param>
            <returns>
            <c>true</c> if this converter can convert to the provided type, 
            <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Attempts to convert to a DataGridLength from the given object.
            </summary>
            <param name="context">
            An ITypeDescriptorContext that provides a format context. 
            </param>
            <param name="culture">
            The CultureInfo to use for the conversion. 
            </param>
            <param name="value">The object to convert to a GridLength.</param>
            <returns>
            The GridLength instance which was constructed.
            </returns>
            <exception cref="T:System.NotSupportedException">
            A NotSupportedException is thrown if the example object is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.DataGridLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
             <summary>
             Attempts to convert a DataGridLength instance to the given type.
             </summary>
             <param name="context">
             An ITypeDescriptorContext that provides a format context. 
             </param>
             <param name="culture">
             The CultureInfo to use for the conversion. 
             </param>
             <param name="value">The DataGridLength to convert.</param>
             <param name="destinationType">The type to which to convert the DataGridLength instance.</param>
             <returns>
             The object which was constructed.
             </returns>
             <exception cref="T:System.ArgumentNullException">
             An ArgumentNullException is thrown if the example object is null.
             </exception>
             <exception cref="T:System.NotSupportedException">
             A NotSupportedException is thrown if the object is not null and is not a DataGridLength,
             or if the destinationType isn't one of the valid destination types.
             </exception>
            <SecurityNote>
                 Critical: calls InstanceDescriptor ctor which LinkDemands
                 PublicOK: can only make an InstanceDescriptor for DataGridLength, not an arbitrary class
            </SecurityNote> 
        </member>
        <member name="T:System.Windows.Controls.DataGridColumnReorderingEventArgs">
            <summary>
            Provides data for the <see cref="E:System.Windows.Controls.DataGrid.ColumnReordering" /> event.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridColumnReorderingEventArgs.#ctor(System.Windows.Controls.DataGridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridColumnReorderingEventArgs" /> class.
            </summary>
            <param name="dataGridColumn"></param>
        </member>
        <member name="P:System.Windows.Controls.DataGridColumnReorderingEventArgs.Column">
            <summary>
            The column being moved.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridColumnReorderingEventArgs.DragIndicator">
            <summary>
            The popup indicator displayed while dragging.  If null and Handled = true, then do not display a tooltip.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridColumnReorderingEventArgs.DropLocationIndicator">
            <summary>
            UIElement to display at the insertion position.  If null and Handled = true, then do not display an insertion indicator.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Primitives.DataGridCellsPresenter">
            <summary>
            Used within the template of a <see cref="T:System.Windows.Controls.DataGrid" />
            to specify the location in the control's visual tree where the cells are to be added. 
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of the <see cref="T:System.Windows.Controls.Primitives.DataGridCellsPresenter" />.
            </summary>
            <returns>
            The actual size used by the <see cref="T:System.Windows.Controls.Primitives.DataGridCellsPresenter" />.
            </returns>
            <param name="finalSize">
            The final area within the parent that this element should use to arrange itself and its children.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the children of a <see cref="T:System.Windows.Controls.Primitives.DataGridCellsPresenter" /> to 
            prepare for arranging them during the <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /> pass.
            </summary>
            <param name="availableSize">
            The available size that this element can give to child elements. Indicates an upper limit that child elements should not exceed.
            </param>
            <returns>
            The size that the <see cref="T:System.Windows.Controls.Primitives.DataGridCellsPresenter" /> determines it needs during layout, based on its calculations of child object allocated sizes.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.DataGridCheckBoxColumn">
            <summary>
            Represents a <see cref="T:System.Windows.Controls.DataGrid" /> column that hosts 
            <see cref="T:System.Windows.Controls.CheckBox" /> controls in its cells.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.DataGridBoundColumn">
            <summary>
            Represents a <see cref="T:System.Windows.Controls.DataGrid" /> column that can 
            bind to a property in the grid's data source.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.DataGridColumn">
            <summary>
            Represents a <see cref="T:System.Windows.Controls.DataGrid" /> column.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridColumn" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGridColumn.GetColumnContainingElement(System.Windows.FrameworkElement)">
            <summary>
            Returns the column which contains the given element
            </summary>
            <param name="element">element contained in a column</param>
            <returns>Column that contains the element, or null if not found
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
            <summary>
            When overridden in a derived class, causes the column cell being edited to revert to the unedited value.
            </summary>
            <param name="editingElement">
            The element that the column displays for a cell in editing mode.
            </param>
            <param name="uneditedValue">
            The previous, unedited value in the cell being edited.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataGridColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
            <summary>
            When overridden in a derived class, gets an editing element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.
            </summary>
            <param name="cell">
            The cell that will contain the generated element.
            </param>
            <param name="dataItem">
            The data item represented by the row that contains the intended cell.
            </param>
            <returns>
            A new editing element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
            <summary>
            When overridden in a derived class, gets a read-only element that is bound to the column's 
            <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.
            </summary>
            <param name="cell">
            The cell that will contain the generated element.
            </param>
            <param name="dataItem">
            The data item represented by the row that contains the intended cell.
            </param>
            <returns>
            A new, read-only element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridColumn.NotifyPropertyChanged(System.String)">
            <summary>
            Called by a specific column type when one of its properties changed, 
            and its current cells need to be updated.
            </summary>
            <param name="propertyName">Indicates which property changed and caused this call</param>
        </member>
        <member name="M:System.Windows.Controls.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
            <summary>
            When overridden in a derived class, called when a cell in the column enters editing mode.
            </summary>
            <param name="editingElement">
            The element that the column displays for a cell in editing mode.
            </param>
            <param name="editingEventArgs">
            Information about the user gesture that is causing a cell to enter editing mode.
            </param>
            <returns>
            The unedited value.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
            <summary>
            Called by the DataGrid control when a column asked for its
            elements to be refreshed, typically because one of its properties changed.
            </summary>
            <param name="element">Indicates the element that needs to be refreshed</param>
            <param name="propertyName">Indicates which property changed and caused this call</param>
        </member>
        <member name="M:System.Windows.Controls.DataGridColumn.GetSortDescription">
            <summary>
            We get the sort description from the data source.  We don't worry whether we can modify sort -- perhaps the sort description
            describes an unchangeable sort that exists on the data.
            </summary>
            <returns></returns>
        </member>
        <member name="P:System.Windows.Controls.DataGridColumn.ActualWidth">
            <summary>
            Actual visible width after Width, MinWidth, and MaxWidth setting at the Column level and DataGrid level
            have been taken into account
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridColumn.CellStyle">
            <summary>
            Gets or sets the style that is used when rendering cells in the column.
            </summary>
            <returns>
            The style that is used when rendering cells in the column. The default is null.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.DataGridColumn.CanUserReorder">
            <summary>
            Gets or sets a value that indicates whether the user can change the column display position by 
            dragging the column header.
            </summary>
            <returns>
            true if the user can drag the column header to a new position; otherwise, false. The default is the current <see cref="P:System.Windows.Controls.DataGrid.CanUserReorderColumns" /> property value.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.DataGridColumn.CanUserResize">
            <summary>
            Gets or sets a value that indicates whether the user can adjust the column width using the mouse.
            </summary>
            <returns>
            true if the user can resize the column; false if the user cannot resize the column. The default is the current <see cref="P:System.Windows.Controls.DataGrid.CanUserResizeColumns" /> property value.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.DataGridColumn.CanUserSort">
            <summary>
            Gets or sets a value that indicates whether the user can sort the column by clicking the column header.
            </summary>
            <returns>
            true if the user can sort the column; false if the user cannot sort the column. The default is the current <see cref="P:System.Windows.Controls.DataGrid.CanUserSortColumns" /> property value.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.DataGridColumn.DisplayIndex">
            <summary>
            Gets or sets the display position of the column relative to the other columns in the <see cref="T:System.Windows.Controls.DataGrid" />.
            </summary>
            <returns>
            The zero-based position of the column as it is displayed in the associated <see cref="T:System.Windows.Controls.DataGrid" />. The default is the index of the corresponding <see cref="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" /> in the <see cref="P:System.Windows.Controls.DataGrid.Columns" /> collection.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            When setting this property, the specified value is less than -1 or equal to <see cref="F:System.Int32.MaxValue" />.
            
            -or-
            
            When setting this property on a column in a <see cref="T:System.Windows.Controls.DataGrid" />, the specified value is less than zero or greater than or equal to the number of columns in the <see cref="T:System.Windows.Controls.DataGrid" />.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            When setting this property, the <see cref="T:System.Windows.Controls.DataGrid" /> is already making <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> adjustments. For example, this exception is thrown when you attempt to set <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> in a <see cref="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged" /> event handler.
            
            -or-
            
            When setting this property, the specified value would result in a frozen column being displayed in the range of unfrozen columns, or an unfrozen column being displayed in the range of frozen columns.
            </exception>
        </member>
        <member name="P:System.Windows.Controls.DataGridColumn.SortMemberPath">
            <summary>
            Holds the name of the member to use for sorting, if not using the default.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridBoundColumn.Binding">
            <summary>
            Gets or sets the binding that associates the column with a property in the data source.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle">
            <summary>
            Gets or sets the style that is used when rendering the element that the column displays for a cell in editing mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle">
            <summary>
            Gets or sets the style that is used when rendering the element that the column displays for a cell 
            that is not in editing mode.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridCheckBoxColumn" /> class. 
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Causes the column cell being edited to revert to the specified value.
            </summary>
            <param name="editingElement">
            The element that the column displays for a cell in editing mode.
            </param>
            <param name="uneditedValue">
            The previous, unedited value in the cell being edited.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
             <summary>
             Gets a <see cref="T:System.Windows.Controls.CheckBox" /> control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.
             </summary>
             <param name="cell">
             The cell that will contain the generated element.
             </param>
             <param name="dataItem">
             The data item represented by the row that contains the intended cell.
            </param>
             <returns>
             A new <see cref="T:System.Windows.Controls.CheckBox" /> control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.
             </returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
            <summary>                
            Gets a read-only <see cref="T:System.Windows.Controls.CheckBox" /> control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.
            </summary>
            <param name="cell">
            The cell that will contain the generated element.
            </param>
            <param name="dataItem">
            The data item represented by the row that contains the intended cell.
            </param>
            <returns>
            A new, read-only <see cref="T:System.Windows.Controls.CheckBox" /> control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
            <summary>
            Called when a cell in the column enters editing mode.
            </summary>
            <param name="editingElement">
            The element that the column displays for a cell in editing mode.
            </param>
            <param name="editingEventArgs">
            Information about the user gesture that is causing a cell to enter editing mode.
            </param>
            <returns>
            The unedited value. 
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
            <summary>
            Called by the DataGrid control when this column asks for its elements to be
            updated, because its CheckBoxContent or IsThreeState property changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridCheckBoxColumn.IsThreeState">
            <summary>
            Gets or sets a value that indicates whether the hosted <see cref="T:System.Windows.Controls.CheckBox" /> controls allow three states or two. 
            </summary>
            <returns>
            true if the hosted controls support three states; false if they support two states. The default is false. 
            </returns>
        </member>
        <member name="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter">
            <summary>
            Used within the template of a <see cref="T:System.Windows.Controls.DataGrid" /> to specify the 
            location in the control's visual tree where the column headers are to be added.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of the <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" />.
            </summary>
            <returns>
            The actual size used by the <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" />.
            </returns>
            <param name="finalSize">
            The final area within the parent that this element should use to arrange itself and its children.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the children of a <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> to 
            prepare for arranging them during the <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /> pass.
            </summary>
            <param name="availableSize">
            The available size that this element can give to child elements. Indicates an upper limit that child elements should not exceed.
            </param>
            <returns>
            The size that the <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> determines it needs during layout, based on its calculations of child object allocated sizes.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:System.Windows.UIElement.OnCreateAutomationPeer"/>)
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridRowDetailsEventArgs">
            <summary>
            Provides data for the <see cref="E:System.Windows.Controls.DataGrid.LoadingRowDetails" />, <see cref="E:System.Windows.Controls.DataGrid.UnloadingRowDetails" />, 
            and <see cref="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged" /> events.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridRowDetailsEventArgs.#ctor(System.Windows.Controls.DataGridRow,System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridRowDetailsEventArgs" /> class. 
            </summary>
            <param name="row">The row that the event occurs for.</param>
            <param name="detailsElement">The row details section as a framework element.</param>
        </member>
        <member name="P:System.Windows.Controls.DataGridRowDetailsEventArgs.DetailsElement">
            <summary>
            Gets the row details section as a framework element.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridRowDetailsEventArgs.Row">
            <summary>
            Gets the row that the event occurs for.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridRow">
            <summary>
            Represents a <see cref="T:System.Windows.Controls.DataGrid" /> row.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridRow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridRow" /> class. 
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGridRow.DetailsTemplateProperty">
            <summary>
            Identifies the DetailsTemplate dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGridRow.OnDetailsTemplatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DetailsTemplateProperty property changed handler.
            </summary>
            <param name="d">DataGridRow that changed its DetailsTemplate.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGridRow.DetailsVisibilityProperty">
            <summary>
            Identifies the DetailsTemplate dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGridRow.OnDetailsVisibilityPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DetailsVisibilityProperty property changed handler.
            </summary>
            <param name="d">DataGridRow that changed its DetailsTemplate.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGridRow.HeaderProperty">
            <summary>
            Identifies the Header dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGridRow.OnHeaderPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderProperty property changed handler.
            </summary>
            <param name="d">DataGridRow that changed its Header.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.DataGridRow.HeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:System.Windows.Controls.DataGridRow.HeaderStyle" /> dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGridRow.IsValidProperty">
            <summary>
            Identifies the IsValid dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGridRow.OnIsValidPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsValidProperty property changed handler.
            </summary>
            <param name="d">DataGridRow that changed its IsValid.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.DataGridRow.GetIndex">
            <summary>
            Returns the index of the current row.
            </summary>
            <returns>
            The index of the current row.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridRow.GetRowContainingElement(System.Windows.FrameworkElement)">
            <summary>
            Returns the row which contains the given element
            </summary>
            <param name="element">element contained in a row</param>
            <returns>Row that contains the element, or null if not found
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridRow.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of the <see cref="T:System.Windows.Controls.DataGridRow" />.
            </summary>
            <returns>
            The actual size used by the <see cref="T:System.Windows.Controls.DataGridRow" />.
            </returns>
            <param name="finalSize">
            The final area within the parent that this element should use to arrange itself and its children.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataGridRow.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the children of a <see cref="T:System.Windows.Controls.DataGridRow" /> to 
            prepare for arranging them during the <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /> pass.
            </summary>
            <param name="availableSize">
            The available size that this element can give to child elements. Indicates an upper limit that child elements should not exceed.
            </param>
            <returns>
            The size that the <see cref="T:System.Windows.Controls.Primitives.DataGridRow" /> determines it needs during layout, based on its calculations of child object allocated sizes.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridRow.OnApplyTemplate">
            <summary>
            Builds the visual tree for the column header when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGridRow.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:System.Windows.UIElement.OnCreateAutomationPeer"/>)
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGridRow.ApplyState(System.Boolean)">
            <summary>
            Updates the background brush of the row, using a storyboard if available.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridRow.DetailsTemplate">
            <summary>
            Gets or sets the template that is used to display the details section of the row.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridRow.DetailsVisibility">
            <summary>
            Gets or sets a value that indicates when the details section of the row is displayed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridRow.Header">
            <summary>
            Gets or sets the row header.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridRow.HeaderStyle">
            <summary>
            Gets or sets the style that is used when rendering the row header.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridRow.IsValid">
            <summary>
            Gets a value that indicates whether the data in a row is valid. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridRow.Index">
            <summary>
            Index of the row
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridRow.IsLayoutDelayed">
            <summary>
            Layout when template is applied
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridRow.InternalTestHook">
            <summary>
            Test hook class that exposes internal and private members of the DataGridRow
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Primitives.DataGridRowsPresenter">
            <summary>
            Used within the template of a <see cref="T:System.Windows.Controls.DataGrid" /> to specify the 
            location in the control's visual tree where the rows are to be added.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of the <see cref="T:System.Windows.Controls.Primitives.DataGridRowsPresenter" />.
            </summary>
            <returns>
            The actual size used by the <see cref="T:System.Windows.Controls.Primitives.DataGridRowsPresenter" />.
            </returns>
            <param name="finalSize">
            The final area within the parent that this element should use to arrange itself and its children.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the children of a <see cref="T:System.Windows.Controls.Primitives.DataGridRowsPresenter" /> to 
            prepare for arranging them during the <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /> pass.
            </summary>
            <param name="availableSize">
            The available size that this element can give to child elements. Indicates an upper limit that child elements should not exceed.
            </param>
            <returns>
            The size that the <see cref="T:System.Windows.Controls.Primitives.DataGridRowsPresenter" /> determines it needs during layout, based on its calculations of child object allocated sizes.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:System.Windows.UIElement.OnCreateAutomationPeer"/>)
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Primitives.DataGridRowHeader">
            <summary>
            Represents an individual <see cref="T:System.Windows.Controls.DataGrid" /> row header. 
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> class. 
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrushProperty">
            <summary>
            Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrush" /> dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibilityProperty">
            <summary>
            Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibility" /> dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnApplyTemplate">
            <summary>
            Builds the visual tree for the row header when a new template is applied. 
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the children of a <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> to prepare for arranging them during the <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /> pass.
            </summary>
            <param name="availableSize">
            The available size that this element can give to child elements. Indicates an upper limit that child elements should not exceed.
            </param>
            <returns>
            The size that the <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> determines it needs during layout, based on its calculations of child object allocated sizes.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:System.Windows.UIElement.OnCreateAutomationPeer"/>)
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.EnsureStyle(System.Windows.Style)">
            <summary>
            Ensures that the correct Style is applied to this object.
            </summary>
            <param name="previousStyle">Caller's previous associated Style</param>
        </member>
        <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to paint the row header separator lines. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibility">
            <summary>
            Gets or sets a value indicating whether the row header separator lines are visible.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs">
            <summary>
            Provides data for the <see cref="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn" /> event. 
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.#ctor(System.String,System.Type,System.Windows.Controls.DataGridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs" /> class.
            </summary>
            <param name="propertyName">
            The name of the property bound to the generated column.
            </param>
            <param name="propertyType">
            The <see cref="T:System.Type" /> of the property bound to the generated column.
            </param>
            <param name="column">
            The generated column.
            </param>
        </member>
        <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.Column">
            <summary>
            Gets the generated column.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.PropertyName">
            <summary>
            Gets the name of the property bound to the generated column.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.PropertyType">
            <summary>
            Gets the <see cref="T:System.Type" /> of the property bound to the generated column.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridColumnEventArgs">
            <summary>
            Provides data for <see cref="T:System.Windows.Controls.DataGrid" /> column-related events.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridColumnEventArgs.#ctor(System.Windows.Controls.DataGridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridColumnEventArgs" /> class.
            </summary>
            <param name="column">The column that the event occurs for.</param>
        </member>
        <member name="P:System.Windows.Controls.DataGridColumnEventArgs.Column">
            <summary>
            Gets the column that the event occurs for.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGridDataConnection.BeginEdit(System.Object)">
            <summary>
            Puts the entity into editing mode if possible
            </summary>
            <param name="dataItem">The entity to edit</param>
            <returns>True if editing was started</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridDataConnection.CancelEdit(System.Object)">
            <summary>
            Cancels the current entity editing and exits the editing mode.
            </summary>
            <param name="dataItem">The entity being edited</param>
            <returns>True if a cancellation operation was invoked.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridDataConnection.EndEdit(System.Object)">
            <summary>
            Commits the current entity editing and exits the editing mode.
            </summary>
            <param name="dataItem">The entity being edited</param>
            <returns>True if a commit operation was invoked.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataGridDataConnection.AllowSort">
            <summary>
            True if the collection view says it can sort.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter">
            <summary>
            Used within the template of a <see cref="T:System.Windows.Controls.DataGrid" /> to specify the location in the control's visual tree 
            where the row details are to be added.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.DataGridDetailsPresenter.ContentHeightProperty">
            <summary>
            Identifies the ContentHeight dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.OnContentHeightPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ContentHeightProperty property changed handler.
            </summary>
            <param name="d">DataGridDetailsPresenter.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of the <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter" />.
            </summary>
            <returns>
            The actual size used by the <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter" />.
            </returns>
            <param name="finalSize">
            The final area within the parent that this element should use to arrange itself and its children.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the children of a <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter" /> to 
            prepare for arranging them during the <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /> pass.
            </summary>
            <param name="availableSize">
            The available size that this element can give to child elements. Indicates an upper limit that child elements should not exceed.
            </param>
            <returns>
            The size that the <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter" /> determines it needs during layout, based on its calculations of child object allocated sizes.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:System.Windows.UIElement.OnCreateAutomationPeer"/>)
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.DataGridDetailsPresenter.ContentHeight">
            <summary>
            Gets or sets the height of the content.
            </summary>
            <returns>
            The height of the content.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.DataGridEditAction">
            <summary>
            Used to specify action to take out of edit mode.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataGridEditAction.Cancel">
            <summary>
            Cancel the changes.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGridEditAction.Commit">
            <summary>
            Commit edited value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridGridLinesVisibility">
            <summary>
            Determines whether the inner cells' vertical/horizontal gridlines are shown or not.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.DataGridEditingUnit">
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.DataGridHeadersVisibility">
            <summary>
            Determines whether the row/column headers are shown or not.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataGridHeadersVisibility.All">
            <summary>
            Show Row, Column, and Corner Headers
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGridHeadersVisibility.Column">
            <summary>
            Show only Column Headers with top-right corner Header
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGridHeadersVisibility.Row">
            <summary>
            Show only Row Headers with bottom-left corner
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGridHeadersVisibility.None">
            <summary>
            Don’t show any Headers
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridRowDetailsVisibilityMode">
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.DataGridSelectionAction">
            <summary>
            Determines the type of action to take when selecting items
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridSelectionMode">
            <summary>
            Determines the selection model
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.DataGridPreparingCellForEditEventArgs">
            <summary>
            Provides data for the <see cref="E:System.Windows.Controls.DataGrid.PreparingCellForEdit" /> event.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.RoutedEventArgs,System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridPreparingCellForEditEventArgs" /> class.
            </summary>
            <param name="column">The column that contains the cell to be edited.</param>
            <param name="row">The row that contains the cell to be edited.</param>
            <param name="editingEventArgs">Information about the user gesture that caused the cell to enter edit mode.</param>
            <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
        </member>
        <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.Column">
            <summary>
            Gets the column that contains the cell to be edited.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.EditingElement">
            <summary>
            Gets the element that the column displays for a cell in editing mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.EditingEventArgs">
            <summary>
            Gets information about the user gesture that caused the cell to enter edit mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.Row">
            <summary>
            Gets the row that contains the cell to be edited.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridTemplateColumn">
            <summary>
            Represents a <see cref="T:System.Windows.Controls.DataGrid" /> column that hosts template-specified 
            content in its cells.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridTemplateColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridTemplateColumn" /> class. 
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGridTemplateColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
            <summary>
            Gets an element defined by the <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate" /> that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.
            </summary>
            <returns>A new editing element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</returns>
            <param name="cell">The cell that will contain the generated element.</param>
            <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
            <exception cref="T:System.TypeInitializationException">
            The <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.DataGridTemplateColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
            <summary>
            Gets an element defined by the <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate" /> that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.
            </summary>
            <returns>A new, read-only element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</returns>
            <param name="cell">The cell that will contain the generated element.</param>
            <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
            <exception cref="T:System.TypeInitializationException">
            The <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.DataGridTemplateColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
            <summary>
            Called when a cell in the column enters editing mode.
            </summary>
            <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
            <param name="editingEventArgs">Information about the user gesture that is causing a cell to enter editing mode.</param>
            <returns>null in all cases.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate">
            <summary>
            Gets or sets the template that is used to display the contents of a cell that is in editing mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate">
            <summary>
            Gets or sets the template that is used to display the contents of a cell that is not in editing mode. 
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataGridTextColumn">
            <summary>
            Represents a <see cref="T:System.Windows.Controls.DataGrid" /> column that hosts textual content in its cells.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataGridTextColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridTextColumn" /> class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataGridTextColumn.FontFamilyProperty">
            <summary>
            Identifies the FontFamily dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataGridTextColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Causes the column cell being edited to revert to the specified value.
            </summary>
            <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
            <param name="uneditedValue">The previous, unedited value in the cell being edited.</param>
        </member>
        <member name="M:System.Windows.Controls.DataGridTextColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
            <summary>
            Gets a <see cref="T:System.Windows.Controls.TextBox" /> control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.
            </summary>
            <param name="cell">The cell that will contain the generated element.</param>
            <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
            <returns>A new <see cref="T:System.Windows.Controls.TextBox" /> control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridTextColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
            <summary>
            Gets a read-only <see cref="T:System.Windows.Controls.TextBlock" /> element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.
            </summary>
            <param name="cell">The cell that will contain the generated element.</param>
            <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
            <returns>A new, read-only <see cref="T:System.Windows.Controls.TextBlock" /> element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridTextColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the cell in the column enters editing mode.
            </summary>
            <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
            <param name="editingEventArgs">Information about the user gesture that is causing a cell to enter editing mode.</param>
            <returns>The unedited value. </returns>
        </member>
        <member name="M:System.Windows.Controls.DataGridTextColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
            <summary>
            Called by the DataGrid control when this column asks for its elements to be
            updated, because a property changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridTextColumn.FontFamily">
            <summary>
            Gets or sets the font name.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridTextColumn.FontSize">
            <summary>
            Gets or sets the font size.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridTextColumn.FontStyle">
            <summary>
            Gets or sets the font style.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridTextColumn.FontWeight">
            <summary>
            Gets or sets the font weight or thickness.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataGridTextColumn.Foreground">
            <summary>
            Gets or sets a brush that describes the foreground of the column cells.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.AddValue(System.Int32,`0)">
            <summary>
            Add a value with an associated index to the table
            </summary>
            <param name="index">Index where the value is to be added or updated</param>
            <param name="value">Value to add</param>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.AddValues(System.Int32,System.Int32,`0)">
            <summary>
            Add multiples values with an associated start index to the table 
            </summary>
            <param name="startIndex">index where first value is added</param>
            <param name="count">Total number of values to add (must be greater than 0)</param>
            <param name="value">Value to add</param>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.Clear">
            <summary>
            Clears the index table
            </summary>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.Contains(System.Int32)">
            <summary>
            Returns true if the given index is contained in the table
            </summary>
            <param name="index">index to search for</param>
            <returns>True if the index is contained in the table</returns>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.ContainsAll(System.Int32,System.Int32)">
            <summary>
            Returns true if the entire given index range is contained in the table
            </summary>
            <param name="startIndex">beginning of the range</param>
            <param name="endIndex">end of the range</param>
            <returns>True if the entire index range is present in the table</returns>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.ContainsIndexAndValue(System.Int32,`0)">
            <summary>
            Returns true if the given index is contained in the table with the the given value
            </summary>
            <param name="index">index to search for</param>
            <param name="value">value expected</param>
            <returns>true if the given index is contained in the table with the the given value</returns>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.Copy">
            <summary>
            Returns a copy of this IndexToValueTable
            </summary>
            <returns>copy of this IndexToValueTable</returns>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.GetIndexCount(System.Int32,System.Int32,`0)">
            <summary>
            Returns the inclusive index count between lowerBound and upperBound of all indexes with the given value
            </summary>
            <param name="lowerBound">lowerBound criteria</param>
            <param name="upperBound">upperBound criteria</param>
            <param name="value">value to look for</param>
            <returns>Number of indexes contained in the table between lowerBound and upperBound (inclusive)</returns>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.GetIndexCount(System.Int32,System.Int32)">
            <summary>
            Returns the inclusive index count between lowerBound and upperBound
            </summary>
            <param name="lowerBound">lowerBound criteria</param>
            <param name="upperBound">upperBound criteria</param>
            <returns>Number of indexes contained in the table between lowerBound and upperBound (inclusive)</returns>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.GetIndexCountBeforeGap(System.Int32,System.Int32)">
            <summary>
            Returns the number indexes in this table after a given startingIndex but before
            reaching a gap of indexes of a given size
            </summary>
            <param name="startingIndex">Index to start at</param>
            <param name="gapSize">Size of index gap</param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.GetIndexes">
            <summary>
            Returns an enumerator that goes through the indexes present in the table
            </summary>
            <returns>an enumerator that enumerates the indexes present in the table</returns>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.GetIndexes(System.Int32)">
            <summary>
            Returns all the indexes on or after a starting index
            </summary>
            <param name="startIndex">start index</param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.GetNthIndex(System.Int32)">
            <summary>
            Return the index of the Nth element in the table.
            </summary>
            <param name="n">n</param>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.GetValueAt(System.Int32)">
            <summary>
            Returns the value at a given index or the default value if the index is not in the table
            </summary>
            <param name="index">index to search for</param>
            <returns>the value at the given index or the default value if index is not in the table</returns>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.GetValueAt(System.Int32,System.Boolean@)">
            <summary>
            Returns the value at a given index or the default value if the index is not in the table
            </summary>
            <param name="index">index to search for</param>
            <param name="found">set to true by the method if the index was found; otherwise, false</param>
            <returns>the value at the given index or the default value if index is not in the table</returns>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.IndexOf(System.Int32)">
            <summary>
            Returns an index's index within this table
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.InsertIndex(System.Int32)">
            <summary>
            Inserts an index at the given location.  This does not alter values in the table
            </summary>
            <param name="index">index location to insert an index</param>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.InsertIndexAndValue(System.Int32,`0)">
            <summary>
            Inserts an index into the table with the given value 
            </summary>
            <param name="index">index to insert</param>
            <param name="value">value for the index</param>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.InsertIndexes(System.Int32,System.Int32)">
            <summary>
            Inserts multiple indexes into the table.  This does not alter Values in the table
            </summary>
            <param name="startIndex">first index to insert</param>
            <param name="count">total number of indexes to insert</param>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.InsertIndexesAndValues(System.Int32,System.Int32,`0)">
            <summary>
            Inserts multiple indexes into the table with the given value 
            </summary>
            <param name="startIndex">Index to insert first value</param>
            <param name="count">Total number of values to insert (must be greater than 0)</param>
            <param name="value">Value to insert</param>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.RemoveIndex(System.Int32)">
            <summary>
            Removes an index from the table.  This does not alter Values in the table
            </summary>
            <param name="index">index to remove</param>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.RemoveIndexAndValue(System.Int32)">
            <summary>
            Removes a value and its index from the table
            </summary>
            <param name="index">index to remove</param>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.RemoveIndexes(System.Int32,System.Int32)">
            <summary>
            Removes multiple indexes from the table.  This does not alter Values in the table
            </summary>
            <param name="startIndex">first index to remove</param>
            <param name="count">total number of indexes to remove</param>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.RemoveIndexesAndValues(System.Int32,System.Int32)">
            <summary>
            Removes multiple values and their indexes from the table
            </summary>
            <param name="startIndex">first index to remove</param>
            <param name="count">total number of indexes to remove</param>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.RemoveValue(System.Int32)">
            <summary>
            Removes a value from the table at the given index.  This does not alter other indexes in the table.
            </summary>
            <param name="index">index where value should be removed</param>
        </member>
        <member name="M:System.Windows.Controls.IndexToValueTable`1.RemoveValues(System.Int32,System.Int32)">
            <summary>
            Removes multiple values from the table.  This does not alter other indexes in the table.
            </summary>
            <param name="startIndex">first index where values should be removed </param>
            <param name="count">total number of values to remove</param>
        </member>
        <member name="P:System.Windows.Controls.IndexToValueTable`1.IndexCount">
            <summary>
            Total number of indices represented in the table
            </summary>
        </member>
        <member name="P:System.Windows.Controls.IndexToValueTable`1.IsEmpty">
            <summary>
            Returns true if the table is empty
            </summary>
        </member>
        <member name="P:System.Windows.Controls.IndexToValueTable`1.RangeCount">
            <summary>
            Returns the number of index ranges in the table
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TypeHelper.GetDisplayName(System.Type,System.String)">
            <summary>
            Finds the PropertyInfo for the specified property path within this Type, and returns
            the value of GetShortName on its DisplayAttribute, if one exists. GetShortName will return
            the value of Name if there is no ShortName specified.
            </summary>
            <param name="type">Type to search</param>
            <param name="propertyPath">property path</param>
            <returns>DisplayAttribute.ShortName if it exists, null otherwise</returns>
        </member>
        <member name="T:System.Windows.Controls.DataPager">
            <summary>
            Handles paging for an <see cref="T:System.ComponentModel.IPagedCollectionView" />. 
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataPager.AutoEllipsisProperty">
            <summary>
            Identifies the AutoEllipsis dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.CanChangePageProperty">
            <summary>
            Identifies the CanChangePage dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.CanMoveToFirstPageProperty">
            <summary>
            Identifies the CanMoveToFirstPage dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.CanMoveToLastPageProperty">
            <summary>
            Identifies the CanMoveToLastPage dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.CanMoveToNextPageProperty">
            <summary>
            Identifies the CanMoveToNextPage dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.CanMoveToPreviousPageProperty">
            <summary>
            Identifies the CanMoveToPreviousPage dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.DisplayModeProperty">
            <summary>
            Identifies the DisplayMode dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.IsTotalItemCountFixedProperty">
            <summary>
            Identifies the IsTotalItemCountFixed dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.ItemCountProperty">
            <summary>
            Identifies the ItemCount dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.NumericButtonCountProperty">
            <summary>
            Identifies the NumericButtonCount dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.NumericButtonStyleProperty">
            <summary>
            Identifies the NumericButtonStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.PageCountProperty">
            <summary>
            Identifies the PageCount dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.PageIndexProperty">
            <summary>
            Identifies the PageIndex dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.PageSizeProperty">
            <summary>
            Identifies the PageSize dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.PrivateForegroundProperty">
            <summary>
            Identifies the PrivateForeground dependency property. This dependency property is bound to 
            DataPager.Foreground to be aware of its changes. It is used to update the foreground of the
            numeric toggle buttons.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.SourceProperty">
            <summary>
            Identifies the Source dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._currentPagePrefixTextBlock">
            <summary>
            Private accessor for the text block appearing before the current page text box.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._currentPageSuffixTextBlock">
            <summary>
            Private accessor for the text block appearing after the current page text box.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._currentPageTextBox">
            <summary>
            Private accessor for the current page text box.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._firstPageButtonBase">
            <summary>
            Private accessor for the first page ButtonBase.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._focusedToggleButtonIndex">
            <summary>
            Page index corresponding to the ToggleButton that has keyboard focus
            -1 if no ToggleButton has focus.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._ignoreToggleButtonCheckedNotification">
            <summary>
            Set to True when the ToggleButton_Checked notification needs to be ignored.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._ignoreToggleButtonFocusNotification">
            <summary>
            Set to True when the ToggleButton_GotFocus and ToggleButton_LostFocus 
            notifications need to be ignored.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._ignoreToggleButtonUncheckedNotification">
            <summary>
            Set to True when a ToggleButton_Unchecked notification needs to be ignored.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._lastPageButtonBase">
            <summary>
            Private accessor for the last page ButtonBase.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._needPageChangingNotification">
            <summary>
            Set to True when a PageChanging notification is expected to be raised
            before the next PagedChanged notification.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._nextPageButtonBase">
            <summary>
            Private accessor for the next page ButtonBase.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._numericButtonPanel">
            <summary>
            Private accessor for the panel hosting the buttons.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._previousPageButtonBase">
            <summary>
            Private accessor for the previous page ButtonBase.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._requestedPageIndex">
            <summary>
            The new index of the current page, used to change the
            current page when a user enters something into the
            current page text box.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._weakEventListenerPropertyChanged">
            <summary>
            Holds the weak event listener for the INotifyPropertyChanged.PropertyChanged event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.#ctor">
            <summary>
            Initializes a new instance of the DataPager class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnApplyTemplate">
            <summary>
            Applies the control's template, retrieves the elements
            within it, and sets up events.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnCreateAutomationPeer">
            <summary>
            Creates an AutomationPeer (<see cref="M:System.Windows.UIElement.OnCreateAutomationPeer"/>)
            </summary>
            <returns>Automation Peer for this <see cref="T:System.Windows.Controls.DataPager"/> control</returns>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnAutoEllipsisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            AutoEllipsis property changed handler.
            </summary>
            <param name="d">NumericButton that changed its AutoEllipsis.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnDisplayModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayMode property changed handler.
            </summary>
            <param name="d">DataPager that changed its DisplayMode.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnIsTotalItemCountFixedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsTotalItemCountFixed property changed handler.
            </summary>
            <param name="d">DataPager that changed IsTotalItemCountFixed.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnNumericButtonCountPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            NumericButtonCount property changed handler.
            </summary>
            <param name="d">DataPager that changed its NumericButtonCount.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnNumericButtonStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            NumericButtonStyle property changed handler.
            </summary>
            <param name="d">DataPager that changed its NumericButtonStyle.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnPageIndexPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PageIndex property changed handler.
            </summary>
            <param name="d">DataPager that changed its PageIndex.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnPageSizePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PageSize property changed handler.
            </summary>
            <param name="d">DataPager that changed its PageSize.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnPrivateForegroundPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PrivateForeground property changed handler.
            </summary>
            <param name="d">DataPager that changed its Foreground property</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnReadOnlyPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when a Read-Only dependency property is changed
            </summary>
            <param name="d">DataPager that changed its read-only property.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SourceProperty property changed handler.
            </summary>
            <param name="d">DataPager that changed its Source.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.GetButtonStartIndex">
            <summary>
            Gets the starting index that our buttons should be labeled with.
            </summary>
            <returns>Starting index for our buttons</returns>
        </member>
        <member name="M:System.Windows.Controls.DataPager.MoveCurrentPageToTextboxValue">
            <summary>
            Attempts to move the current page index to the value
            in the current page textbox.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.MoveToRequestedPage">
            <summary>
            Given the new value of _requestedPageIndex, this method will attempt a page move 
            and set the _currentPageIndex variable accordingly.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnCurrentPageTextBoxKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the KeyDown event on the current page text box.
            </summary>
            <param name="sender">The object firing this event.</param>
            <param name="e">The event args for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnCurrentPageTextBoxLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the loss of focus for the current page text box.
            </summary>
            <param name="sender">The object firing this event.</param>
            <param name="e">The event args for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnDataPagerIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the notifications for the DataPager.IsEnabled changes
            </summary>
            <param name="sender">DataPager that changed its IsEnabled property</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnFirstPageButtonBaseClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the first page ButtonBase.
            </summary>
            <param name="sender">The object firing this event.</param>
            <param name="e">The event args for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnLastPageButtonBaseClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the last page ButtonBase.
            </summary>
            <param name="sender">The object firing this event.</param>
            <param name="e">The event args for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnNextPageButtonBaseClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the next page ButtonBase.
            </summary>
            <param name="sender">The object firing this event.</param>
            <param name="e">The event args for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnPreviousPageButtonBaseClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the previous page ButtonBase.
            </summary>
            <param name="sender">The object firing this event.</param>
            <param name="e">The event args for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.PageMoveHandler(System.Int32,System.Int32,System.Windows.Controls.DataPager.PageMoveOperationDelegate)">
            <summary>
            This helper method will take care of calling the specified page move
            operation on the source collection, or MoveToPage if left null, while 
            also firing the PageIndexChanging and PageIndexChanged events.
            </summary>
            <param name="oldPageIndex">The oldPageIndex value before we change pages</param>
            <param name="newPageIndex">The page index to use with MoveToPage. This argument is ignored otherwise</param>
            <param name="pageMoveOperation">The delegate to call, or null when MoveToPage must be called</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnSourcePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a property change within the Source.
            </summary>
            <param name="sender">The object firing this event.</param>
            <param name="e">The event args for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.RaisePageIndexChangeEvents(System.Boolean)">
            <summary>
            Raises a non-cancellable PageIndexChanging and optional PageIndexChanged events.
            </summary>
            <param name="raisePageChanged">True when the PageChanged event needs to be raised</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.RaisePageIndexChanged">
            <summary>
            Raises the PageIndexChanged event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.RaisePageIndexChanging(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the PageIndexChanging event.
            </summary>
            <param name="e">The event args to use for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.SetCannotChangePage(System.Boolean)">
            <summary>
            Update DataPager UI for paging enabled.
            </summary>
            <param name="needPage">Boolean that specifies if a page is needed</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.SetCanChangePage">
            <summary>
            Update DataPager UI for paging disabled.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.ToggleButton_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Notification raised when a numeric toggle button gets checked
            </summary>
            <param name="sender">The numeric toggle button</param>
            <param name="e">Routed event for the notification</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.ToggleButton_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Notification raised when a numeric toggle button gets focus
            </summary>
            <param name="sender">The numeric toggle button</param>
            <param name="e">Routed event for the notification</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.ToggleButton_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Notification raised when a numeric toggle button loses focus
            </summary>
            <param name="sender">The numeric toggle button</param>
            <param name="e">Routed event for the notification</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.ToggleButton_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Notification raised when a numeric toggle button gets unchecked
            </summary>
            <param name="sender">The numeric toggle button</param>
            <param name="e">Routed event for the notification</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.TryParseTextBoxPage">
            <summary>
            Attempts to put the integer value of the string in _currentPageTextBox into _requestedPageIndex.
            </summary>
            <returns>Whether or not the parsing of the string succeeded.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataPager.UpdateButtonCount">
            <summary>
            Updates the visual display of the number of buttons that we display.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.UpdateButtonDisplay">
            <summary>
            Updates the visual content and style of the buttons that we display.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.UpdateCommonState">
            <summary>
            Updates the state related to the IsEnabled property
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.UpdateControl">
            <summary>
            Updates the current page, the total pages, and the
            state of the control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.UpdateCanPageFirstAndPrevious">
            <summary>
            Updates the states of whether the pager can page to the first
            and to the previous page.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.UpdateCanPageNextAndLast">
            <summary>
            Updates the states of whether the pager can page to the next
            and to the last page.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.UpdateCurrentPagePrefixAndSuffix(System.Boolean)">
            <summary>
            Goes into the TotalPageCountKnown or TotalPageCountUnknown state according to Source.TotalItemCount
            and updates the captions of the text blocks surrounding the current page text box.
            </summary>
            <param name="needPage">True when a Source is set and PageSize > 0</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.UpdateNumericButtonsForeground">
            <summary>
            Pushes this DataPager's Foreground into the numeric buttons when that property isn't set
            in their style.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.UpdatePageModeDisplay">
            <summary>
            Updates the visual display to show the current page mode
            we have selected.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.UpdatePageCount">
            <summary>
            Updates the page count based on the number of items and the page size.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataPager.PageIndexChanging">
            <summary>
            EventHandler for when PageIndex is changing.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataPager.PageIndexChanged">
            <summary>
            EventHandler for when PageIndex has changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.AutoEllipsis">
            <summary>
            Gets or sets a value that indicates whether or not to use an ellipsis as the last button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.CanChangePage">
            <summary>
            Gets a value that indicates whether or not the user is allowed to move to another page
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.CanMoveToFirstPage">
            <summary>
            Gets a value that indicates whether or not the <see cref="T:System.Windows.Controls.DataPager" /> will 
            allow the user to attempt to move to the first page if <see cref="P:System.Windows.Controls.DataPager.CanChangePage" /> is true. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.CanMoveToLastPage">
            <summary>
            Gets a value that indicates whether or not the <see cref="T:System.Windows.Controls.DataPager" /> 
            will allow the user to attempt to move to the last page if <see cref="P:System.Windows.Controls.DataPager.CanChangePage" /> is true. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.CanMoveToNextPage">
            <summary>
            Gets a value that indicates whether or not the <see cref="T:System.Windows.Controls.DataPager" /> 
            will allow the user to attempt to move to the next page if<see cref="P:System.Windows.Controls.DataPager.CanChangePage" /> is true. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.CanMoveToPreviousPage">
            <summary>
            Gets a value that indicates whether or not the <see cref="T:System.Windows.Controls.DataPager" /> 
            will allow the user to attempt to move to the previous page if <see cref="P:System.Windows.Controls.DataPager.CanChangePage" /> is true.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.DisplayMode">
            <summary>
            Gets or sets a value that indicates how the 
            <see cref="T:System.Windows.Controls.DataPager" /> user interface is displayed
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.IsTotalItemCountFixed">
            <summary>
            Gets or sets a value that indicates whether or not the total number of items in the collection is fixed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.ItemCount">
            <summary>
            Gets the current number of known items in the <see cref="T:System.ComponentModel.IPagedCollectionView" /> . 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.Source">
            <summary>
            Gets or sets the <see cref="T:System.ComponentModel.IPagedCollectionView" /> . 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.NumericButtonCount">
            <summary>
            Gets or sets a value that indicates the number of page buttons shown 
            on the <see cref="T:System.Windows.Controls.DataPager" /> user interface. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.NumericButtonStyle">
            <summary>
            Gets or sets the style that will be used for the numeric buttons.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.PageCount">
            <summary>
            Gets the current number of known pages in the <see cref="T:System.ComponentModel.IPagedCollectionView" /> . 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.PageIndex">
            <summary>
            Gets or sets the current <see cref="P:System.ComponentModel.IPagedCollectionView.PageIndex" /> 
            in the <see cref="T:System.ComponentModel.IPagedCollectionView" /> . 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.PageSize">
            <summary>
            Gets or sets the current <see cref="P:System.ComponentModel.IPagedCollectionView.PageSize" /> in the <see cref="T:System.ComponentModel.IPagedCollectionView" /> .
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.CurrentPageTextBox">
            <summary>
            Gets the TextBox holding the current PageIndex value, if any.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.PagedSource">
            <summary>
            Gets the Source as an IPagedCollectionView
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.PrivateForeground">
            <summary>
            Gets or sets the items to page through.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataPager.PageMoveOperationDelegate">
            <summary>
            Delegate for calling page move operations
            </summary>
            <returns>Boolean value for whether the operation succeeded</returns>
        </member>
        <member name="T:System.Windows.Automation.Peers.DataPagerAutomationPeer">
            <summary>
            Automation peer for the <see cref="T:System.Windows.Controls.DataPager" /> control.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.#ctor(System.Windows.Controls.DataPager)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataPagerAutomationPeer" /> class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.DataPager" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DataPagerAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType, 
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.GetNameCore">
            <summary>
            Gets text that describes the DataPager that is associated with this automation peer.
            Called by System.Windows.Automation.Peers.AutomationPeer.GetName().
            </summary>
            <returns>
            When the control is not paging data:
            - Value returned by the base implementation if it's not empty
            - Name of the owning DataPager control if it's not empty
            - Name returned by the LabeledBy automation peer if it's not empty
            - DataPager class name if none of the above is valid
            When the control is paging data:
            - "Page N" when the total page count is unknown
            - "Page N of M" when the count is known
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern that is associated with the specified System.Windows.Automation.Peers.PatternInterface.
            </summary>
            <param name="patternInterface">A value from the System.Windows.Automation.Peers.PatternInterface enumeration.</param>
            <returns>The object that supports the specified pattern, or null if unsupported.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.GetClickablePointCore">
            <summary>
            Returns a System.Windows.Point that represents the clickable space that is
            on the System.Windows.UIElement that is associated with this System.Windows.Automation.Peers.FrameworkElementAutomationPeer.
            This method is called by System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint().
            </summary>
            <returns>The System.Windows.Point on the element that allows a click.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
            <summary>
            Sets the page number of the <see cref="T:System.Windows.Controls.DataPager" /> control.
            </summary>
            <param name="value">Value used for setting the PageIndex property of the <see cref="T:System.Windows.Controls.DataPager" /> control</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.GetIsReadOnlyCore">
            <summary>
            Computes the value for IRangeValueProvider's IsReadOnly property 
            </summary>
            <returns>True when no page move is allowed</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.GetLargeChangeCore">
            <summary>
            Computes the value for IRangeValueProvider's LargeChange property 
            </summary>
            <returns>Large change value to use</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.GetMaximumCore">
            <summary>
            Computes the value for IRangeValueProvider's Maximum property 
            </summary>
            <returns>Maximum value to use</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.GetMinimumCore">
            <summary>
            Computes the value for IRangeValueProvider's Minimum property 
            </summary>
            <returns>Minimum value to use</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.InitializeProperties">
            <summary>
            Initializes all the variable IRangeValueProvider properties
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.RefreshPageIndex(System.Int32)">
            <summary>
            Method called by the owning DataPager when its page index has changed.
            </summary>
            <param name="oldPageIndex">Previous value of the PageIndex property</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.RefreshProperties">
            <summary>
            Method called by the owning DataPager when the IRangeValueProvider properties need to be recomputed.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.DataPagerAutomationPeer.IsReadOnlyPrivate">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.DataPager" /> control allows page changes.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.DataPagerAutomationPeer.LargeChangePrivate">
            <summary>
            Gets or sets the value to be added or subtracted from the page number of the <see cref="T:System.Windows.Controls.DataPager" /> control.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.DataPagerAutomationPeer.MaximumPrivate">
            <summary>
            Gets or sets the maximum page number value for the <see cref="T:System.Windows.Controls.DataPager" /> control.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.DataPagerAutomationPeer.MinimumPrivate">
            <summary>
            Gets or sets the minimum page number value for the <see cref="T:System.Windows.Controls.DataPager" /> control.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.DataPagerAutomationPeer.OwningDataPager">
            <summary>
            Gets the owner as a DataPager
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.DataPagerAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Windows.Controls.DataPager" /> control allows page changes.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.DataPagerAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#LargeChange">
            <summary>
            Gets the value to be added or subtracted from the page number of the <see cref="T:System.Windows.Controls.DataPager" /> control.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.DataPagerAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Maximum">
            <summary>
            Gets the maximum page number value for the <see cref="T:System.Windows.Controls.DataPager" /> control.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.DataPagerAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Minimum">
            <summary>
            Gets the minimum page number value for the <see cref="T:System.Windows.Controls.DataPager" /> control.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.DataPagerAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SmallChange">
            <summary>
            Gets the value to be added or subtracted from the page number of the <see cref="T:System.Windows.Controls.DataPager" /> control.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.DataPagerAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Value">
            <summary>
            Gets the page number of the <see cref="T:System.Windows.Controls.DataPager" /> control.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.PagerDisplayMode">
            <summary>
            PagerDisplayMode Enum
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.PagerDisplayMode.FirstLastNumeric">
            <summary>
            Shows the First and Last buttons + the numeric display
            </summary>
        </member>
        <member name="F:System.Windows.Controls.PagerDisplayMode.FirstLastPreviousNext">
            <summary>
            Shows the First, Last, Previous, Next buttons
            </summary>
        </member>
        <member name="F:System.Windows.Controls.PagerDisplayMode.FirstLastPreviousNextNumeric">
            <summary>
            Shows the First, Last, Previous, Next buttons + the numeric display
            </summary>
        </member>
        <member name="F:System.Windows.Controls.PagerDisplayMode.Numeric">
            <summary>
            Shows the numeric display
            </summary>
        </member>
        <member name="F:System.Windows.Controls.PagerDisplayMode.PreviousNext">
            <summary>
            Shows the Previous and Next buttons
            </summary>
        </member>
        <member name="F:System.Windows.Controls.PagerDisplayMode.PreviousNextNumeric">
            <summary>
            Shows the Previous and Next buttons + the numeric display
            </summary>
        </member>
        <member name="T:System.Windows.Controls.PagerResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.AutoEllipsisString">
            <summary>
              Looks up a localized string similar to ....
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.AutomationPeerName_TotalPageCountKnown">
            <summary>
              Looks up a localized string similar to Page {0} of {1}.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.AutomationPeerName_TotalPageCountUnknown">
            <summary>
              Looks up a localized string similar to Page {0}.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.CurrentPagePrefix_TotalPageCountKnown">
            <summary>
              Looks up a localized string similar to Page.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.CurrentPagePrefix_TotalPageCountUnknown">
            <summary>
              Looks up a localized string similar to Page.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.CurrentPageSuffix_TotalPageCountKnown">
            <summary>
              Looks up a localized string similar to of {0}.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.CurrentPageSuffix_TotalPageCountUnknown">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.InvalidButtonPanelContent">
            <summary>
              Looks up a localized string similar to The NumericButtonPanel contains invalid children..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.InvalidTimeSpan">
            <summary>
              Looks up a localized string similar to The {0} time span must be strictly positive..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.PageIndexMustBeNegativeOne">
            <summary>
              Looks up a localized string similar to The PageIndex property can only be set to -1 when the Source property is null or the PageSize property is 0..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.UnderlyingPropertyIsReadOnly">
            <summary>
              Looks up a localized string similar to {0} cannot be set because the underlying property is read only..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.ValueMustBeGreaterThanOrEqualTo">
            <summary>
              Looks up a localized string similar to {0} must be greater than or equal to {1}..
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DoubleUtil.AreClose(System.Double,System.Double)">
            <summary>
            AreClose - Returns whether or not two doubles are "close".  That is, whether or 
            not they are within epsilon of each other.  Note that this epsilon is proportional
            to the numbers themselves to that AreClose survives scalar multiplication.
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this 
            returns false.  This is important enough to repeat:
            NB: NO CODE CALLING THIS FUNCTION SHOULD DEPEND ON ACCURATE RESULTS - this should be
            used for optimizations *only*.
            </summary>
            <returns>
            bool - the result of the AreClose comparison.
            </returns>
            <param name="value1"> The first double to compare. </param>
            <param name="value2"> The second double to compare. </param>
        </member>
        <member name="M:System.Windows.Controls.DoubleUtil.GreaterThan(System.Double,System.Double)">
            <summary>
            GreaterThan - Returns whether or not the first double is greater than the second double.
            That is, whether or not the first is strictly greater than *and* not within epsilon of
            the other number.  Note that this epsilon is proportional to the numbers themselves
            to that AreClose survives scalar multiplication.  Note,
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this 
            returns false.  This is important enough to repeat:
            NB: NO CODE CALLING THIS FUNCTION SHOULD DEPEND ON ACCURATE RESULTS - this should be
            used for optimizations *only*.
            </summary>
            <returns>
            bool - the result of the GreaterThan comparison.
            </returns>
            <param name="value1"> The first double to compare. </param>
            <param name="value2"> The second double to compare. </param>
        </member>
        <member name="M:System.Windows.Controls.DoubleUtil.GreaterThanOrClose(System.Double,System.Double)">
            <summary>
            GreaterThanOrClose - Returns whether or not the first double is greater than or close to
            the second double.  That is, whether or not the first is strictly greater than or within
            epsilon of the other number.  Note that this epsilon is proportional to the numbers 
            themselves to that AreClose survives scalar multiplication.  Note,
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this 
            returns false.  This is important enough to repeat:
            NB: NO CODE CALLING THIS FUNCTION SHOULD DEPEND ON ACCURATE RESULTS - this should be
            used for optimizations *only*.
            </summary>
            <returns>
            bool - the result of the GreaterThanOrClose comparison.
            </returns>
            <param name="value1"> The first double to compare. </param>
            <param name="value2"> The second double to compare. </param>
        </member>
        <member name="M:System.Windows.Controls.DoubleUtil.IsZero(System.Double)">
            <summary>
            IsZero - Returns whether or not the double is "close" to 0.  Same as AreClose(double, 0),
            but this is faster.
            </summary>
            <returns>
            bool - the result of the IsZero comparison.
            </returns>
            <param name="value"> The double to compare to 0. </param>
        </member>
        <member name="M:System.Windows.Controls.DoubleUtil.LessThan(System.Double,System.Double)">
            <summary>
            LessThan - Returns whether or not the first double is less than the second double.
            That is, whether or not the first is strictly less than *and* not within epsilon of
            the other number.  Note that this epsilon is proportional to the numbers themselves
            to that AreClose survives scalar multiplication.  Note,
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this 
            returns false.  This is important enough to repeat:
            NB: NO CODE CALLING THIS FUNCTION SHOULD DEPEND ON ACCURATE RESULTS - this should be
            used for optimizations *only*.
            </summary>
            <returns>
            bool - the result of the LessThan comparison.
            </returns>
            <param name="value1"> The first double to compare. </param>
            <param name="value2"> The second double to compare. </param>
        </member>
        <member name="M:System.Windows.Controls.DoubleUtil.LessThanOrClose(System.Double,System.Double)">
            <summary>
            LessThanOrClose - Returns whether or not the first double is less than or close to
            the second double.  That is, whether or not the first is strictly less than or within
            epsilon of the other number.  Note that this epsilon is proportional to the numbers 
            themselves to that AreClose survives scalar multiplication.  Note,
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this 
            returns false.  This is important enough to repeat:
            NB: NO CODE CALLING THIS FUNCTION SHOULD DEPEND ON ACCURATE RESULTS - this should be
            used for optimizations *only*.
            </summary>
            <returns>
            bool - the result of the LessThanOrClose comparison.
            </returns>
            <param name="value1"> The first double to compare. </param>
            <param name="value2"> The second double to compare. </param>
        </member>
        <member name="M:System.Windows.Controls.Extensions.GetIsReadOnly(System.Reflection.MemberInfo)">
            <summary>
            Checks a MemberInfo object (e.g. a Type or PropertyInfo) for the ReadOnly attribute
            and returns the value of IsReadOnly if it exists.
            </summary>
            <param name="memberInfo">MemberInfo to check</param>
            <returns>true if MemberInfo is read-only, false otherwise</returns>
        </member>
        <member name="T:System.ComponentModel.InvalidEnumArgumentException">
            <summary>
            The exception thrown when using invalid arguments that are enumerators. 
            </summary>
        </member>
        <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor">
            <summary>
            Initializes a new instance of the InvalidEnumArgumentException class without a message.
            </summary>
        </member>
        <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidEnumArgumentException class with the specified message. 
            </summary>
            <param name="message">The message to display with this exception.</param>
        </member>
        <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidEnumArgumentException class with the specified detailed description and the specified exception.
            </summary>
            <param name="message">A detailed description of the error.</param>
            <param name="innerException">A reference to the inner exception that is the cause of this exception.</param>
        </member>
        <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Int32,System.Type)">
            <summary>
            Initializes a new instance of the InvalidEnumArgumentException class with a message generated from the argument, the invalid value, and an enumeration class.
            </summary>
            <param name="argumentName">The name of the argument that caused the exception.</param>
            <param name="invalidValue">The value of the argument that failed.</param>
            <param name="enumClass">A Type that represents the enumeration class with the valid values.</param>
        </member>
        <member name="T:System.Windows.Controls.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_CannotChangeColumnCollectionWhileAdjustingDisplayIndexes">
            <summary>
              Looks up a localized string similar to Column collection cannot be changed while adjusting display indexes..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_CannotChangeItemsWhenLoadingRows">
            <summary>
              Looks up a localized string similar to Items cannot be added, removed or reset while rows are loading or unloading..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_ColumnCannotBeCollapsed">
            <summary>
              Looks up a localized string similar to Column cannot be collapsed..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_ColumnCannotBeReassignedToDifferentDataGrid">
            <summary>
              Looks up a localized string similar to Column already belongs to a DataGrid instance and cannot be reassigned..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_ColumnNotInThisDataGrid">
            <summary>
              Looks up a localized string similar to Provided column does not belong to this DataGrid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_ItemIsNotContainedInTheItemsSource">
            <summary>
              Looks up a localized string similar to The item is not contained in the ItemsSource..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_NoCurrentRow">
            <summary>
              Looks up a localized string similar to There is no current row.  Operation cannot be completed..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_NoOwningGrid">
            <summary>
              Looks up a localized string similar to There is no instance of DataGrid assigned to this {0}.  Operation cannot be completed..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_UnderlyingPropertyIsReadOnly">
            <summary>
              Looks up a localized string similar to {0} cannot be set because the underlying property is read only..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_ValueCannotBeSetToInfinity">
            <summary>
              Looks up a localized string similar to {0} cannot be set to infinity..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_ValueCannotBeSetToNAN">
            <summary>
              Looks up a localized string similar to {0} cannot be set to double.NAN..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_ValueCannotBeSetToNull">
            <summary>
              Looks up a localized string similar to {0} cannot be set to a null value..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_ValueIsNotAnInstanceOf">
            <summary>
              Looks up a localized string similar to The value is not an instance of {0}..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_ValueIsNotAnInstanceOfEitherOr">
            <summary>
              Looks up a localized string similar to The value is not an instance of {0} or {1}..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_ValueMustBeGreaterThanOrEqualTo">
            <summary>
              Looks up a localized string similar to {0} must be greater than or equal to {1}..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_ValueMustBeGTandLT">
            <summary>
              Looks up a localized string similar to {0} must be greater than {1} and less than {2}..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_ValueMustBeGTandLTE">
            <summary>
              Looks up a localized string similar to {0} must be greater than {1} and less than or equal to {2}..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_ValueMustBeGTEandLT">
            <summary>
              Looks up a localized string similar to {0} must be greater than or equal to {1} and less than {2}..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_ValueMustBeGTEandLTE">
            <summary>
              Looks up a localized string similar to {0} must be greater than or equal to {1} and less than or equal to {2}..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_ValueMustBeLessThan">
            <summary>
              Looks up a localized string similar to {0} must be less than {1}..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGrid_ValueMustBeLessThanOrEqualTo">
            <summary>
              Looks up a localized string similar to {0} must be less than or equal to {1}..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGridAutomationPeer_OperationCannotBePerformed">
            <summary>
              Looks up a localized string similar to Cannot perform the operation..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGridColumnHeader_ContentDoesNotSupportUIElements">
            <summary>
              Looks up a localized string similar to Content does not support UIElement; use ContentTemplate instead..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGridColumnHeaderAutomationPeer_Ascending">
            <summary>
              Looks up a localized string similar to ascending.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGridColumnHeaderAutomationPeer_Descending">
            <summary>
              Looks up a localized string similar to descending.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGridLength_InvalidUnitType">
            <summary>
              Looks up a localized string similar to {0} is not a valid DataGridLengthUnitType..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGridLengthConverter_CannotConvertFrom">
            <summary>
              Looks up a localized string similar to DataGridLengthConverter cannot convert from {0}..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGridLengthConverter_CannotConvertTo">
            <summary>
              Looks up a localized string similar to Cannot convert from DataGridLength to {0}..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGridLengthConverter_InvalidDataGridLength">
            <summary>
              Looks up a localized string similar to Invalid DataGridLength..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGridRow_InvalidRowIndexCannotCompleteOperation">
            <summary>
              Looks up a localized string similar to Invalid row index. Operation cannot be completed..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGridRowGroupHeader_ItemCountPlural">
            <summary>
              Looks up a localized string similar to ({0} items).
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGridRowGroupHeader_ItemCountSingular">
            <summary>
              Looks up a localized string similar to ({0} item).
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGridRowGroupHeader_PropertyName">
            <summary>
              Looks up a localized string similar to {0}:.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGridSelectedItemsCollection_CannotChangeSelectedItemsCollectionInSingleMode">
            <summary>
              Looks up a localized string similar to Can only change SelectedItems collection in Extended selection mode.  Use SelectedItem property in Single selection mode..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.DataGridTemplateColumn_MissingTemplateForType">
            <summary>
              Looks up a localized string similar to Missing template.  Cannot initialize {0}..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Resource.InvalidEnumArgumentException_InvalidEnumArgument">
            <summary>
              Looks up a localized string similar to The value of argument &apos;{0}&apos; ({1}) is invalid for Enum type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ValidationUtil">
            <summary>
            Static class with methods to help with validation.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ValidationUtil.CloneBinding(System.Windows.Data.Binding)">
            <summary>
            Creates a new Binding that is a shallow copy of the source Binding.
            </summary>
            <param name="source">The Binding to clone</param>
            <returns>The cloned Binding</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationUtil.ContainsEqualValidationResult(System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.ComponentModel.DataAnnotations.ValidationResult)">
            <summary>
            Determines whether the collection contains an equivalent ValidationResult
            </summary>
            <param name="collection">ValidationResults to search through</param>
            <param name="target">ValidationResult to search for</param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationUtil.GetBindingInfo(System.Windows.FrameworkElement,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Type[])">
            <summary>
            Searches through all Bindings on the specified element and returns a list of BindingInfo objects
            for each Binding that matches the specified criteria.
            </summary>
            <param name="element">FrameworkElement to search</param>
            <param name="dataItem">Only return Bindings with a context element equal to this object</param>
            <param name="twoWayOnly">If true, only returns TwoWay Bindings</param>
            <param name="useBlockList">If true, ignores elements not typically used for input</param>
            <param name="searchChildren">If true, only returns TwoWay Bindings</param>
            <param name="excludedTypes">The Binding search will skip all of these Types</param>
            <returns>List of BindingInfo for every Binding found</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationUtil.GetDependencyProperties(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Gets a list of the specified FrameworkElement's DependencyProperties. This method will return all
            DependencyProperties of the element unless 'useBlockList' is true, in which case all bindings on elements
            that are typically not used as input controls will be ignored.
            </summary>
            <param name="element">FrameworkElement of interest</param>
            <param name="useBlockList">If true, ignores elements not typically used for input</param>
            <returns>List of DependencyProperties</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationUtil.GetBindingInfoOfSingleElement(System.Windows.FrameworkElement,System.Object,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Gets a list of active bindings on the specified FrameworkElement.  Bindings are gathered
            according to the same conditions BindingGroup uses to find bindings of descendent elements
            within the visual tree.
            </summary>
            <param name="element">Root FrameworkElement to search under</param>
            <param name="inheritedDataContext">DomainContext of the element's parent</param>
            <param name="dataItem">Target DomainContext</param>
            <param name="twoWayOnly">If true, only returns TwoWay Bindings</param>
            <param name="useBlockList">If true, ignores elements not typically used for input</param>
            <returns></returns>
        </member>
        <member name="T:System.Windows.Controls.BindingInfo">
            <summary>
            Stores information about a Binding, including the BindingExpression, BindingTarget and associated Element.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.BindingInfo.#ctor">
            <summary>
            Creates a new BindingInfo.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.BindingInfo.#ctor(System.Windows.Data.BindingExpression,System.Windows.DependencyProperty,System.Windows.FrameworkElement)">
            <summary>
            Creates a new BindingInfo with the specified BindingExpression, BindingTarget and Element.
            </summary>
            <param name="bindingExpression">BindingExpression</param>
            <param name="bindingTarget">BindingTarget</param>
            <param name="element">Element</param>
        </member>
        <member name="P:System.Windows.Controls.BindingInfo.BindingExpression">
            <summary>
            Gets or sets the BindingExpression.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.BindingInfo.BindingTarget">
            <summary>
            Gets or sets the BindingTarget.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.BindingInfo.Element">
            <summary>
            Gets or sets the Element.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.VisualStates">
            <summary>
            Names and helpers for visual states in the controls.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNormal">
            <summary>
            Normal state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateMouseOver">
            <summary>
            MouseOver state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePressed">
            <summary>
            Pressed state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDisabled">
            <summary>
            Disabled state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupCommon">
            <summary>
            Common state group
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpanded">
            <summary>
            Expanded state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCollapsed">
            <summary>
            Collapsed state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateEmpty">
            <summary>
            Empty state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnfocused">
            <summary>
            Unfocused state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateFocused">
            <summary>
            Focused state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupFocus">
            <summary>
            Focus state group
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSelected">
            <summary>
            Selected state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnselected">
            <summary>
            Unselected state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupSelection">
            <summary>
            Selection state group
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateActive">
            <summary>
            Active state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInactive">
            <summary>
            Inactive state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupActive">
            <summary>
            Active state group
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateRegular">
            <summary>
            Regular state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCurrent">
            <summary>
            Current state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupCurrent">
            <summary>
            Current state group
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDisplay">
            <summary>
            Display state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateEditing">
            <summary>
            Editing state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupInteraction">
            <summary>
            Interaction state group
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateRegularRow">
            <summary>
            Regular Row state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateAlternatingRow">
            <summary>
            Alternating Row state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupAlternatingRow">
            <summary>
            Alternating Row state group
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnsorted">
            <summary>
            Unsorted state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSortAscending">
            <summary>
            Sort Ascending state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSortDescending">
            <summary>
            Sort Descending state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupSort">
            <summary>
            Sort state group
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalid">
            <summary>
            Invalid state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateRowInvalid">
            <summary>
            RowInvalid state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateRowValid">
            <summary>
            RowValid state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateValid">
            <summary>
            Valid state
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupValidation">
            <summary>
            Validation state group
            </summary>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.GoToState(System.Windows.Controls.Control,System.Boolean,System.String[])">
            <summary>
            Use VisualStateManager to change the visual state of the control.
            </summary>
            <param name="control">
            Control whose visual state is being changed.
            </param>
            <param name="useTransitions">
            true to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
            <param name="stateNames">
            Ordered list of state names and fallback states to transition into.
            Only the first state to be found will be used.
            </param>
        </member>
        <member name="T:System.Windows.Controls.WeakEventListener`3">
            <summary>
            Implements a weak event listener that allows the owner to be garbage
            collected if its only remaining link is an event handler.
            </summary>
            <typeparam name="TInstance">Type of instance listening for the event.</typeparam>
            <typeparam name="TSource">Type of source for the event.</typeparam>
            <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
        </member>
        <member name="F:System.Windows.Controls.WeakEventListener`3._weakInstance">
            <summary>
            WeakReference to the instance listening for the event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.#ctor(`0)">
            <summary>
            Initializes a new instances of the WeakEventListener class.
            </summary>
            <param name="instance">Instance subscribing to the event.</param>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.OnEvent(`1,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.WeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.WeakEventListener`3.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.DataVisualization.Toolkit.VisualStudio.Design.4.0.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.DataVisualization.Toolkit.VisualStudio.Design.4.0</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.VisualStudio.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.VisualStudio.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.VisualStudio.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.EmptyEditor">
            <summary>
            Dummy editor to make a property read only in designer.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.EmptyEditor.#ctor(System.Windows.DataTemplate)">
            <summary>
            Preserve the constructor prototype from PropertyValueEditor.
            </summary>
            <param name="inlineEditorTemplate">Inline editor template.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.EmptyEditor.#ctor">
            <summary>
            Default constructor builds the default TextBox inline editor template.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1">
            <summary>
            Design mode value provider base class that always returns true for a Boolean property 
            of a model item when the item or any of its visual tree descendants is selected; and 
            returns the real value of the property when the item is de-selected. This is used to 
            expand and show hidden parts during of control at design time.
            </summary>
            <remarks>
            * SelectionPolicy can't be applied to DesignModeValueProvider directoly,
              so the AdornerProxy is needed as a proxy to apply the selection policy; 
            * The use of static variable InSelection is OK, because UI is singled 
              threaded, and ValueTranslationService.InvalidateProperty is synchronous.
            * Nest SelfOrDescendantSelectedPolicy and AdornerProxy inside the
              TrueIfSelectedDesignModeValueProvider because they are tightly coupled.
            * No need to abstract the DMVP class further to support multiple porperties, 
              types, and/or custom value translation logic yet.
            </remarks>
            <typeparam name="T">
            The Silverlight type whose property this DMVP is used for. 
            </typeparam>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.InSelection">
            <summary>
            Flag to TranslatePropertyValue method whether it is called by 
            AdornerProxy for the model item selected or de-selected.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.#cctor">
            <summary>
            Default constructor to add the property for translation.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.TranslatePropertyValue(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Metadata.PropertyIdentifier,System.Object)">
            <summary>
            Translate property value at design time.
            </summary>
            <param name="item">The model item whose property is to be translated.</param>
            <param name="identifier">The property to translate.</param>
            <param name="value">Value of the property.</param>
            <returns>Translated value of the property at design time.</returns>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.Identifiers">
            <summary>
            Gets the static dictionary of control type and its Boolean property to be translated.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.SelfOrDescendantSelectedPolicy">
            <summary>
            Item policy to apply extensibility features when an model item 
            or any of its visual tree descendants is selected or de-selected.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.SelfOrDescendantSelectedPolicy.GetPolicyItems(Microsoft.Windows.Design.Interaction.Selection)">
            <summary>
            Return the policy items from the specified selection.
            </summary>
            <param name="selection">The current selection.</param>
            <returns>An enumeration of ModelItem objects to use for this policy.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.AdornerProxyBase">
            <summary>
            An adorner provider to apply selection policy.
            </summary>
            <remarks>
            CS0416: type parameter can't be used as attribute argument.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.AdornerProxyBase.cachedItem">
            <summary>
            Cached model item for InvalidateValue call in Deactivate.
            </summary>
            <remarks>
            Assume there is a separate AdornerCheap instance for each item in policy.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.AdornerProxyBase.Activate(Microsoft.Windows.Design.Model.ModelItem)">
            <summary>
            Set selection state and trigger value translation.
            </summary>
            <param name="item">The model item.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.AdornerProxyBase.Deactivate">
            <summary>
            Revert selection state and revert to real property value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.ToolboxCategoryPaths">
            <summary>
            Names for ToolboxCategoryAttribute.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.BasicControls">
            <summary>
            Basic Controls category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.Controls">
            <summary>
            Controls category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.ControlParts">
            <summary>
            Control Parts category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.DataVisualization">
            <summary>
            DataVisualization category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.DataVisualizationControlParts">
            <summary>
            DataVisualization/Control Parts category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.Theming">
            <summary>
            Theming category.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.CalendarDayButtonMetadata">
            <summary>
            To register design time metadata for CalendarDayButton.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.CalendarDayButtonMetadata.#ctor">
            <summary>
            To register design time metadata for CalendarDayButton.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.CalendarButtonMetadata">
            <summary>
            To register design time metadata for CalendarButton.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.CalendarButtonMetadata.#ctor">
            <summary>
            To register design time metadata for CalendarButton.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.CalendarItemMetadata">
            <summary>
            To register design time metadata for CalendarItem.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.CalendarItemMetadata.#ctor">
            <summary>
            To register design time metadata for CalendarItem.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.CalendarMetadata">
            <summary>
            To register design time metadata for Calendar.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.CalendarMetadata.#ctor">
            <summary>
            To register design time metadata for Calendar.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.ChildWindowMetadata">
            <summary>
            To register design time metadata for ChildWindow.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.ChildWindowMetadata.#ctor">
            <summary>
            To register design time metadata for ChildWindow.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.DatePickerIsDropDownOpenDesignModeValueProvider">
            <summary>
            Design mode value provider for DatePicker.IsDropDownOpen property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.DatePickerIsDropDownOpenDesignModeValueProvider._propertyIdentifier">
            <summary>
            Identifier of the property this DMVP is for.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.DatePickerIsDropDownOpenDesignModeValueProvider.#cctor">
            <summary>
            Use the static constructor to add one property identifier to base.Identifiers.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.DatePickerIsDropDownOpenDesignModeValueProvider.#ctor">
            <summary>
            Default constructor to add the property for design time translation.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.DatePickerIsDropDownOpenDesignModeValueProvider.AdornerProxy">
            <summary>
            An adorner provider to apply selection policy.
            </summary>
            <remarks>
            Work around CS0416: have specialized types for and to apply UsesItemPolicy attribute.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.Design.DatePickerMetadata">
            <summary>
            To register design time metadata for DatePicker.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.DatePickerMetadata.#ctor">
            <summary>
            To register design time metadata for DatePicker.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.DatePickerTextBoxMetadata">
            <summary>
            To register design time metadata for DatePickerTextBox.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.DatePickerTextBoxMetadata.#ctor">
            <summary>
            To register design time metadata for DatePickerTextBox.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.GridSplitterMetadata">
            <summary>
            To register design time metadata for GridSplitter.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.GridSplitterMetadata.#ctor">
            <summary>
            To register design time metadata for GridSplitter.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.HeaderedItemsControlMetadata">
            <summary>
            To register design time metadata for HeaderedItemsControl.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.HeaderedItemsControlMetadata.#ctor">
            <summary>
            To register design time metadata for HeaderedItemsControl.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.Calendar">
            <summary>
              Looks up a localized string similar to Calendar.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.DatePicker">
            <summary>
              Looks up a localized string similar to Date Picker.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.MetadataRegistration.#ctor">
            <summary>
            Design time metadata registration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.TabControlMetadata">
            <summary>
            To register design time metadata for TabControl.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.TabControlMetadata.#ctor">
            <summary>
            To register design time metadata for TabControl.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.TabItemMetadata">
            <summary>
            To register design time metadata for TabItem.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.TabItemMetadata.#ctor">
            <summary>
            To register design time metadata for TabItem.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.TabPanelMetadata">
            <summary>
            To register design time metadata for TabPanel.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.TabPanelMetadata.#ctor">
            <summary>
            To register design time metadata for TabPanel.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.TreeViewItemIsExpandedDesignModeValueProvider">
            <summary>
            Design mode value provider for TreeViewItem.IsExpanded property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.TreeViewItemIsExpandedDesignModeValueProvider._propertyIdentifier">
            <summary>
            Identifier of the property this DMVP is for.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.TreeViewItemIsExpandedDesignModeValueProvider.#cctor">
            <summary>
            Use the static constructor to add one property identifier to base.Identifiers.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.TreeViewItemIsExpandedDesignModeValueProvider.#ctor">
            <summary>
            Default constructor to add the property for design time translation.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.TreeViewItemIsExpandedDesignModeValueProvider.AdornerProxy">
            <summary>
            An adorner provider to apply selection policy.
            </summary>
            <remarks>
            Work around CS0416: have specialized types for and to apply UsesItemPolicy attribute.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.Design.TreeViewItemMetadata">
            <summary>
            To register design time metadata for TreeViewItem.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.TreeViewItemMetadata.#ctor">
            <summary>
            To register design time metadata for TreeViewItem.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Expression.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Expression.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Expression.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Expression.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Expression.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.DataVisualization.Toolkit.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.DataVisualization.Toolkit</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.DesignerProperties">
            <summary>
            Provides a custom implementation of DesignerProperties.GetIsInDesignMode
            to work around an issue.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
            <summary>
            Returns whether the control is in design mode (running under Blend
            or Visual Studio).
            </summary>
            <param name="element">The element from which the property value is
            read.</param>
            <returns>True if in design mode.</returns>
        </member>
        <member name="F:System.Windows.Controls.DesignerProperties._isInDesignMode">
            <summary>
            Stores the computed InDesignMode value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.WeakEventListener`3">
            <summary>
            Implements a weak event listener that allows the owner to be garbage
            collected if its only remaining link is an event handler.
            </summary>
            <typeparam name="TInstance">Type of instance listening for the event.</typeparam>
            <typeparam name="TSource">Type of source for the event.</typeparam>
            <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
        </member>
        <member name="F:System.Windows.Controls.WeakEventListener`3._weakInstance">
            <summary>
            WeakReference to the instance listening for the event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.#ctor(`0)">
            <summary>
            Initializes a new instances of the WeakEventListener class.
            </summary>
            <param name="instance">Instance subscribing to the event.</param>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.OnEvent(`1,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.WeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.WeakEventListener`3.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.AggregatedObservableCollection`1">
            <summary>
            Aggregated observable collection.
            </summary>
            <typeparam name="T">The type of the items in the observable collections.
            </typeparam>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.ReadOnlyObservableCollection`1">
            <summary>
            An observable collection that can only be written to by internal 
            classes.
            </summary>
            <typeparam name="T">The type of object in the observable collection.
            </typeparam>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.NoResetObservableCollection`1">
            <summary>
            An observable collection that cannot be reset.  When clear is called
            items are removed individually, giving listeners the chance to detect
            each remove event and perform operations such as unhooking event 
            handlers.
            </summary>
            <typeparam name="T">The type of item in the collection.</typeparam>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.NoResetObservableCollection`1.#ctor">
            <summary>
            Instantiates a new instance of the NoResetObservableCollection 
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.NoResetObservableCollection`1.ClearItems">
            <summary>
            Clears all items in the collection by removing them individually.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ReadOnlyObservableCollection`1.Mutate(System.Action{System.Windows.Controls.DataVisualization.ReadOnlyObservableCollection{`0}})">
            <summary>
            A method that mutates the collection.
            </summary>
            <param name="action">The action to mutate the collection.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ReadOnlyObservableCollection`1.RemoveItem(System.Int32)">
            <summary>
            Removes an item from the collection at an index.
            </summary>
            <param name="index">The index to remove.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ReadOnlyObservableCollection`1.SetItem(System.Int32,`0)">
            <summary>
            Sets an item at a particular location in the collection.
            </summary>
            <param name="index">The location to set an item.</param>
            <param name="item">The item to set.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ReadOnlyObservableCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Inserts an item in the collection.
            </summary>
            <param name="index">The index at which to insert the item.</param>
            <param name="item">The item to insert.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ReadOnlyObservableCollection`1.ClearItems">
            <summary>
            Clears the items from the collection.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.ReadOnlyObservableCollection`1.IsMutating">
            <summary>
            Gets or sets a value indicating whether the owner is writing to the 
            collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.AggregatedObservableCollection`1.#ctor">
            <summary>
            Initializes a new instance of an aggregated observable collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.AggregatedObservableCollection`1.ChildCollectionsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Rebuilds the list if a collection changes.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.AggregatedObservableCollection`1.ChildCollectionCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Synchronizes the collection with changes made in a child collection.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.AggregatedObservableCollection`1.GetStartingIndexOfCollectionAtIndex(System.Int32)">
            <summary>
            Returns the starting index of a collection in the aggregate
            collection.
            </summary>
            <param name="index">The starting index of a collection.</param>
            <returns>The starting index of the collection in the aggregate 
            collection.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.AggregatedObservableCollection`1.Rebuild">
            <summary>
            Rebuild the list in the correct order when a child collection 
            changes.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.AggregatedObservableCollection`1.ChildCollections">
            <summary>
            Gets child collections of the aggregated collection.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IAnchoredToOrigin">
            <summary>
            Range axes look for this interface on series to determine whether to
            anchor the origin to the bottom or top of the screen where possible.
            </summary>
            <remarks>
            Implementing this interface ensures that value margins will not cause
            an origin to float above the bottom or top of the screen if no
            data exists below or above.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.IAnchoredToOrigin.AnchoredAxis">
            <summary>
            Gets the axis to which the data is anchored.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.AreaDataPoint">
            <summary>
            Represents a data point used for Area series.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DataPoint">
            <summary>
            Represents a control that displays a data point.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.GroupCommonStates">
            <summary>
            Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.StateCommonNormal">
            <summary>
            Normal state of the Common group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.StateCommonMouseOver">
            <summary>
            MouseOver state of the Common group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.GroupSelectionStates">
            <summary>
            Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.StateSelectionUnselected">
            <summary>
            Unselected state of the Selection group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.StateSelectionSelected">
            <summary>
            Selected state of the Selection group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.GroupRevealStates">
            <summary>
            Reveal state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.StateRevealShown">
            <summary>
            Shown state of the Reveal group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.StateRevealHidden">
            <summary>
            Hidden state of the Reveal group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.IsSelectionEnabledProperty">
            <summary>
            Identifies the IsSelectionEnabled dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnIsSelectionEnabledPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsSelectionEnabledProperty property changed handler.
            </summary>
            <param name="d">Control that changed its IsSelectionEnabled.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnIsSelectionEnabledPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            IsSelectionEnabledProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint._isHovered">
            <summary>
            A value indicating whether the mouse is hovering over the data 
            point.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnIsHoveredPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            IsHoveredProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.IsSelectedProperty">
            <summary>
            Identifies the IsSelected dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnIsSelectedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsSelectedProperty property changed handler.
            </summary>
            <param name="d">Control that changed its IsSelected.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnIsSelectedPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            IsSelectedProperty property changed handler.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.ActualDependentValueProperty">
            <summary>
            Identifies the ActualDependentValue dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnActualDependentValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the ActualDependentValue property changes.
            </summary>
            <param name="d">Control that changed its ActualDependentValue.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint._isCoercingActualDependentValue">
            <summary>
            A value indicating whether the actual independent value is being
            coerced.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint._oldActualDependentValueBeforeCoercion">
            <summary>
            The preserved previous actual dependent value before coercion.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnActualDependentValuePropertyChanged(System.IComparable,System.IComparable)">
            <summary>
            Called when the value of the ActualDependentValue property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.DependentValueProperty">
            <summary>
            Identifies the DependentValue dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnDependentValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the DependentValue property changes.
            </summary>
            <param name="d">Control that changed its DependentValue.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnDependentValuePropertyChanged(System.IComparable,System.IComparable)">
            <summary>
            Called when the DependentValue property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.DependentValueStringFormatProperty">
            <summary>
            Identifies the DependentValueStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnDependentValueStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when DependentValueStringFormat property changes.
            </summary>
            <param name="d">Control that changed its DependentValueStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnDependentValueStringFormatPropertyChanged(System.String,System.String)">
            <summary>
            Called when DependentValueStringFormat property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.FormattedDependentValueProperty">
            <summary>
            Identifies the FormattedDependentValue dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.FormattedIndependentValueProperty">
            <summary>
            Identifies the FormattedIndependentValue dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.IndependentValueProperty">
            <summary>
            Identifies the IndependentValue dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnIndependentValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IndependentValue property changes.
            </summary>
            <param name="d">Control that changed its IndependentValue.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnIndependentValuePropertyChanged(System.Object,System.Object)">
            <summary>
            Called when the IndependentValue property changes.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.IndependentValueStringFormatProperty">
            <summary>
            Identifies the IndependentValueStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnIndependentValueStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the IndependentValueStringFormat property changes.
            </summary>
            <param name="d">Control that changed its IndependentValueStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnIndependentValueStringFormatPropertyChanged(System.String,System.String)">
            <summary>
            Called when the value of the IndependentValueStringFormat property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint._isCoercingActualIndependentValue">
            <summary>
            A value indicating whether the actual independent value is being
            coerced.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint._oldActualIndependentValueBeforeCoercion">
            <summary>
            The preserved previous actual dependent value before coercion.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.ActualIndependentValueProperty">
            <summary>
            Identifies the ActualIndependentValue dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnActualIndependentValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the ActualIndependentValue property changes.
            </summary>
            <param name="d">Control that changed its ActualIndependentValue.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnActualIndependentValuePropertyChanged(System.Object,System.Object)">
            <summary>
            Called when the ActualIndependentValue property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint.StateProperty">
            <summary>
            Identifies the State dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnStatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the State property changes.
            </summary>
            <param name="d">Control that changed its State.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnStatePropertyChanged(System.Windows.Controls.DataVisualization.Charting.DataPointState,System.Windows.Controls.DataVisualization.Charting.DataPointState)">
            <summary>
            Called when the value of the State property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint._haveStateRevealShown">
            <summary>
            Tracks whether the Reveal/Shown VisualState is available.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint._haveStateRevealHidden">
            <summary>
            Tracks whether the Reveal/Hidden VisualState is available.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPoint._templateApplied">
            <summary>
            Tracks whether the template has been applied yet.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.#ctor">
            <summary>
            Initializes a new instance of the DataPoint class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.GoToCurrentRevealState">
            <summary>
            Updates the Control's visuals to reflect the current state(s).
            </summary>
            <returns>True if a state transition was started.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnApplyTemplate">
            <summary>
            Builds the visual tree for the DataPoint when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnCurrentStateChanged(System.Object,System.Windows.VisualStateChangedEventArgs)">
            <summary>
            Changes the DataPoint object's state after one of the VSM state animations completes.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Control's Loaded event.
            </summary>
            <param name="sender">The Control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonDown event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPoint.SetFormattedProperty(System.Windows.DependencyProperty,System.String,System.Object)">
            <summary>
            Sets a dependency property with the specified format.
            </summary>
            <param name="property">The DependencyProperty to set.</param>
            <param name="format">The Format string to apply to the value.</param>
            <param name="value">The value of the dependency property to be formatted.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.IsSelectionEnabled">
            <summary>
            Gets or sets a value indicating whether selection is enabled.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.IsActive">
            <summary>
            Gets a value indicating whether the data point is active.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.DataPoint.IsSelectedChanged">
            <summary>
            An event raised when the IsSelected property is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.IsHovered">
            <summary>
            Gets a value indicating whether the mouse is hovering over
            the data point.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.IsCoercingIsSelected">
            <summary>
            Gets or sets a value indicating whether the IsSelected property is 
            being coerced.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.IsSelected">
            <summary>
            Gets or sets a value indicating whether the data point is selected.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.DataPoint.ActualDependentValueChanged">
            <summary>
            Event raised when the actual dependent value of the data point is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.ActualDependentValue">
            <summary>
            Gets or sets the actual dependent value displayed in the chart.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.DataPoint.DependentValueChanged">
            <summary>
            This event is raised when the dependent value of the data point is 
            changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.DependentValue">
            <summary>
            Gets or sets the dependent value of the Control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.DependentValueStringFormat">
            <summary>
            Gets or sets the format string for the FormattedDependentValue property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.FormattedDependentValue">
            <summary>
            Gets the DependentValue as formatted by the DependentValueStringFormat property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.FormattedIndependentValue">
            <summary>
            Gets the IndependentValue as formatted by the IndependentValueStringFormat property.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.DataPoint.IndependentValueChanged">
            <summary>
            Called when the independent value of the data point is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.IndependentValue">
            <summary>
            Gets or sets the independent value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.IndependentValueStringFormat">
            <summary>
            Gets or sets the format string for the FormattedIndependentValue property.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.DataPoint.ActualIndependentValueChanged">
            <summary>
            Occurs when the actual independent value of the data point is 
            changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.ActualIndependentValue">
            <summary>
            Gets or sets the actual independent value.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.DataPoint.StateChanged">
            <summary>
            Occurs when the state of a data point is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.IsCoercingState">
            <summary>
            Gets or sets a value indicating whether the State property is being
            coerced to its previous value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.State">
            <summary>
            Gets or sets the state of the data point.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPoint.ImplementationRoot">
            <summary>
            Gets the implementation root of the Control.
            </summary>
            <remarks>
            Implements Silverlight's corresponding internal property on Control.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AreaDataPoint.#ctor">
            <summary>
            Initializes a new instance of the AreaDataPoint class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.FrameworkElementExtensions">
            <summary>
            A set of extension methods for the DataPoint class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.FrameworkElementExtensions.GetActualMargin(System.Windows.FrameworkElement,System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            Returns the actual margin for a given framework element and axis.
            </summary>
            <param name="element">The framework element.</param>
            <param name="axis">The axis along which to return the margin.
            </param>
            <returns>The margin for a given framework element and axis.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.FrameworkElementExtensions.GetMargin(System.Windows.FrameworkElement,System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            Returns the margin for a given framework element and axis.
            </summary>
            <param name="element">The framework element.</param>
            <param name="axis">The axis along which to return the margin.
            </param>
            <returns>The margin for a given framework element and axis.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Primitives.Edge">
            <summary>
            Specifies the edge position of a child element that is inside an
            EdgePanel.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.Edge.Center">
            <summary>
            A child element that is positioned in the center of a EdgePanel.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.Edge.Left">
            <summary>
            A child element that is positioned on the left side of the
            EdgePanel.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.Edge.Top">
            <summary>
            A child element that is positioned at the top of the EdgePanel.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.Edge.Right">
            <summary>
            A child element that is positioned on the right side of the
            EdgePanel.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.Edge.Bottom">
            <summary>
            A child element that is positioned at the bottom of the EdgePanel.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel">
            <summary>
            Defines an area where you can arrange child elements either horizontally
            or vertically, relative to each other.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.MaximumIterations">
            <summary>
            The maximum number of iterations.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel._ignorePropertyChange">
            <summary>
            A flag that ignores a property change when set.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.GetEdge(System.Windows.UIElement)">
            <summary>
            Gets the value of the Edge attached property for a specified
            UIElement.
            </summary>
            <param name="element">
            The element from which the property value is read.
            </param>
            <returns>The Edge property value for the element.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.SetEdge(System.Windows.UIElement,System.Windows.Controls.DataVisualization.Charting.Primitives.Edge)">
            <summary>
            Sets the value of the Edge attached property to a specified element.
            </summary>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="edge">The needed Edge value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.EdgeProperty">
            <summary>
            Identifies the Edge dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.OnEdgePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            EdgeProperty property changed handler.
            </summary>
            <param name="d">UIElement that changed its Edge.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.#ctor">
            <summary>
            Initializes a new instance of the EdgePanel class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.EdgePanelSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Invalidate measure when edge panel is resized.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel._leftRect">
            <summary>
            The left rectangle in which to render left elements.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel._rightRect">
            <summary>
            The right rectangle in which to render right elements.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel._topRect">
            <summary>
            The top rectangle in which to render top elements.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel._bottomRect">
            <summary>
            The bottom rectangle in which to render bottom elements.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the children of a EdgePanel in anticipation of arranging
            them during the ArrangeOverride pass.
            </summary>
            <param name="constraint">A maximum Size to not exceed.</param>
            <returns>The desired size of the EdgePanel.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content (child elements) of a EdgePanel element.
            </summary>
            <param name="arrangeSize">
            The Size the EdgePanel uses to arrange its child elements.
            </param>
            <returns>The arranged size of the EdgePanel.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Primitives.EdgePanel.SafeCreateRect(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a Rect safely by forcing width/height to be valid.
            </summary>
            <param name="left">Rect left parameter.</param>
            <param name="top">Rect top parameter.</param>
            <param name="width">Rect width parameter.</param>
            <param name="height">Rect height parameter.</param>
            <returns>New Rect struct.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Axis">
            <summary>
            An axis class used to determine the plot area coordinate of values.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IAxis">
            <summary>
            An axis class used to determine the plot area coordinate of values.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IAxis.CanPlot(System.Object)">
            <summary>
            Returns a value indicating whether the axis can plot a value.
            </summary>
            <param name="value">The value to plot.</param>
            <returns>A value indicating whether the axis can plot a value.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IAxis.GetPlotAreaCoordinate(System.Object)">
            <summary>
            The plot area coordinate of a value.
            </summary>
            <param name="value">The value for which to retrieve the plot area 
            coordinate.</param>
            <returns>The plot area coordinate.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.IAxis.Orientation">
            <summary>
            Gets or sets the orientation of the axis.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.IAxis.OrientationChanged">
            <summary>
            This event is raised when the Orientation property is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.IAxis.RegisteredListeners">
            <summary>
            Gets the registered IAxisListeners.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.IAxis.DependentAxes">
            <summary>
            Gets the collection of child axes.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Axis.LocationProperty">
            <summary>
            Identifies the Location dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.OnLocationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            LocationProperty property changed handler.
            </summary>
            <param name="d">Axis that changed its Location.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.OnLocationPropertyChanged(System.Windows.Controls.DataVisualization.Charting.AxisLocation,System.Windows.Controls.DataVisualization.Charting.AxisLocation)">
            <summary>
            LocationProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Axis.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.OnOrientationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            OrientationProperty property changed handler.
            </summary>
            <param name="d">Axis that changed its Orientation.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.OnOrientationPropertyChanged(System.Windows.Controls.DataVisualization.Charting.AxisOrientation,System.Windows.Controls.DataVisualization.Charting.AxisOrientation)">
            <summary>
            OrientationProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.OnInvalidated(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the invalidated event.
            </summary>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.CanPlot(System.Object)">
            <summary>
            Returns a value indicating whether the axis can plot a value.
            </summary>
            <param name="value">The value to plot.</param>
            <returns>A value indicating whether the axis can plot a value.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.GetPlotAreaCoordinate(System.Object)">
            <summary>
            The plot area coordinate of a value.
            </summary>
            <param name="value">The value for which to retrieve the plot area 
            coordinate.</param>
            <returns>The plot area coordinate.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.#ctor">
            <summary>
            Instantiates a new instance of the Axis class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.OnChildAxesCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Child axes collection changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.OnDependentAxesCollectionChanged">
            <summary>
            Child axes collection changed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.RegisteredListenersCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            This event is raised when the registered listeners collection is
            changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.OnObjectRegistered(System.Windows.Controls.DataVisualization.Charting.IAxisListener)">
            <summary>
            This method is invoked when a series is registered.
            </summary>
            <param name="series">The series that has been registered.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Axis.OnObjectUnregistered(System.Windows.Controls.DataVisualization.Charting.IAxisListener)">
            <summary>
            This method is invoked when a series is unregistered.
            </summary>
            <param name="series">The series that has been unregistered.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Axis.Location">
            <summary>
            Gets or sets the axis location.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.Axis.LocationChanged">
            <summary>
            This event is raised when the location property is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Axis.DependentAxes">
            <summary>
            Gets the list of child axes belonging to this axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Axis.Orientation">
            <summary>
            Gets or sets the orientation of the axis.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.Axis.OrientationChanged">
            <summary>
            This event is raised when the Orientation property is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Axis.RegisteredListeners">
            <summary>
            Gets or the collection of series that are using the Axis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.AxisLabel">
            <summary>
            A label used to display data in an axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisLabel.StringFormatProperty">
            <summary>
            Identifies the StringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AxisLabel.OnStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StringFormatProperty property changed handler.
            </summary>
            <param name="d">AxisLabel that changed its StringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AxisLabel.OnStringFormatPropertyChanged(System.String)">
            <summary>
            StringFormatProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisLabel.FormattedContentProperty">
            <summary>
            Identifies the FormattedContent dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AxisLabel.#ctor">
            <summary>
            Instantiates a new instance of the AxisLabel class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AxisLabel.UpdateFormattedContent">
            <summary>
            Updates the formatted text.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.AxisLabel.StringFormat">
            <summary>
            Gets or sets the text string format.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.AxisLabel.FormattedContent">
            <summary>
            Gets the formatted content property.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.AxisLocation">
            <summary>
            Axis position.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisLocation.Auto">
            <summary>
            Location is determined automatically.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisLocation.Left">
            <summary>
            Left in the series host area.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisLocation.Top">
            <summary>
            Top in the series host area.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisLocation.Right">
            <summary>
            Right in the series host area.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisLocation.Bottom">
            <summary>
            Bottom of the series host area.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.CategoryAxis">
            <summary>
            An axis that displays categories.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DisplayAxis">
            <summary>
            An axis that has a range.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IRequireSeriesHost">
            <summary>
            An object that implements this interface requires a series host.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.IRequireSeriesHost.SeriesHost">
            <summary>
            Gets or sets the series host.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.MaximumAxisIntervalsPer200Pixels">
            <summary>
            Maximum intervals per 200 pixels.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.AxisGridName">
            <summary>
            The name of the axis grid template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.AxisTitleName">
            <summary>
            The name of the axis title template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.AxisLabelStyleProperty">
            <summary>
            Identifies the AxisLabelStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnAxisLabelStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            AxisLabelStyleProperty property changed handler.
            </summary>
            <param name="d">DisplayAxis that changed its AxisLabelStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnAxisLabelStylePropertyChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            AxisLabelStyleProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.GetLength(System.Windows.Size)">
            <summary>
            Returns the length of the axis given an available size.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>The length of the axis given an available size.</returns>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis._gridLines">
            <summary>
            This field stores the grid lines element.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnGridLinesPropertyChanged(System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines,System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines)">
            <summary>
            GridLinesProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.MajorTickMarkStyleProperty">
            <summary>
            Identifies the MajorTickMarkStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnMajorTickMarkStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MajorTickMarkStyleProperty property changed handler.
            </summary>
            <param name="d">DisplayAxis that changed its MajorTickMarkStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnMajorTickMarkStylePropertyChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            MajorTickMarkStyleProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnTitlePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TitleProperty property changed handler.
            </summary>
            <param name="d">DisplayAxis that changed its Title.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnTitlePropertyChanged(System.Object,System.Object)">
            <summary>
            TitleProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.TitleStyleProperty">
            <summary>
            Identifies the TitleStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.ShowGridLinesProperty">
            <summary>
            Identifies the ShowGridLines dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnShowGridLinesPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ShowGridLinesProperty property changed handler.
            </summary>
            <param name="d">Axis that changed its ShowGridLines.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnShowGridLinesPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            ShowGridLinesProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.SetShowGridLines(System.Boolean)">
            <summary>
            Creates and destroys a grid lines element based on the specified
            value.
            </summary>
            <param name="newValue">A value indicating whether to display grid 
            lines or not.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.GridLineStyleProperty">
            <summary>
            Identifies the GridlineStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis._grid">
            <summary>
            The grid used to layout the axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis._axisTitle">
            <summary>
            The control used to display the axis title.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.CreateMajorTickMark">
            <summary>
            Creates a major axis tick mark.
            </summary>
            <returns>A line to used to render a tick mark.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.CreateTickMark(System.Windows.Style)">
            <summary>
            Creates a tick mark and applies a style to it.
            </summary>
            <param name="style">The style to apply.</param>
            <returns>The newly created tick mark.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.InternalGetMajorGridLinePositions">
            <summary>
            This method is used to share the grid line coordinates with the
            internal grid lines control.
            </summary>
            <returns>A sequence of the major grid line coordinates.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.GetMajorGridLineCoordinates(System.Windows.Size)">
            <summary>
            Returns the coordinates to use for the grid line control.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of coordinates at which to draw grid lines.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.#ctor">
            <summary>
            Instantiates a new instance of the DisplayAxis class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.DisplayAxisSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            If display axis has just become visible, invalidate.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.CreateAxisLabel">
            <summary>
            Creates an axis label.
            </summary>
            <returns>The new axis label.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnDependentAxesCollectionChanged">
            <summary>
            Updates the grid lines element if a suitable dependent axis has
            been added to a radial axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.PrepareAxisLabel(System.Windows.Controls.Control,System.Object)">
            <summary>
            Prepares an axis label to be plotted.
            </summary>
            <param name="label">The axis label to prepare.</param>
            <param name="dataContext">The data context to use for the axis 
            label.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnApplyTemplate">
            <summary>
            Retrieves template parts and configures layout.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnOrientedPanelSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            When the size of the oriented panel changes invalidate the axis.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnLocationPropertyChanged(System.Windows.Controls.DataVisualization.Charting.AxisLocation,System.Windows.Controls.DataVisualization.Charting.AxisLocation)">
            <summary>
            Arranges the grid when the location property is changed.
            </summary>
            <param name="oldValue">The old location.</param>
            <param name="newValue">The new location.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.ArrangeAxisGrid">
            <summary>
            Arranges the elements in the axis grid.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.MeasureOverride(System.Windows.Size)">
            <summary>
            Renders the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>The required size.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnOrientationPropertyChanged(System.Windows.Controls.DataVisualization.Charting.AxisOrientation,System.Windows.Controls.DataVisualization.Charting.AxisOrientation)">
            <summary>
            Reformulates the grid when the orientation is changed.  Grid is
            either separated into two columns or two rows.  The title is 
            inserted with the outermost section from the edge and an oriented
            panel is inserted into the innermost section.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnInvalidated(System.Windows.RoutedEventArgs)">
            <summary>
            Updates the visual appearance of the axis when it is invalidated.
            </summary>
            <param name="args">Information for the invalidated event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.RenderAxis(System.Windows.Size)">
            <summary>
            Renders the axis if there is a valid value for orientation.
            </summary>
            <param name="availableSize">The available size in which to render 
            the axis.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.Render(System.Windows.Size)">
            <summary>
            Renders the axis labels, tick marks, and other visual elements.
            </summary>
            <param name="availableSize">The available size.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.Invalidate">
            <summary>
            Invalidates the axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxis._seriesHost">
            <summary>
            The series host.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OnSeriesHostPropertyChanged(System.Windows.Controls.DataVisualization.Charting.ISeriesHost,System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            This method is run when the series host property is changed.
            </summary>
            <param name="oldValue">The old series host.</param>
            <param name="newValue">The new series host.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.AxisLabelStyle">
            <summary>
            Gets or sets the style used for the axis labels.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.ActualLength">
            <summary>
            Gets the actual length.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.GridLines">
            <summary>
            Gets or sets the grid lines property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.MajorTickMarkStyle">
            <summary>
            Gets or sets the style applied to the Axis tick marks.
            </summary>
            <value>The Style applied to the Axis tick marks.</value>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.Title">
            <summary>
            Gets or sets the title property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.TitleLayoutTransformControl">
            <summary>
            Gets or sets the LayoutTransformControl used to rotate the title.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.TitleStyle">
            <summary>
            Gets or sets the style applied to the Axis title.
            </summary>
            <value>The Style applied to the Axis title.</value>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.ShowGridLines">
            <summary>
            Gets or sets a value indicating whether grid lines should be shown.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.GridLineStyle">
            <summary>
            Gets or sets the Style of the Axis's gridlines.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.AxisGrid">
            <summary>
            Gets or sets the grid used to layout the axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.DependentAxisGrid">
            <summary>
            Gets or sets a grid to lay out the dependent axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.OrientedPanel">
            <summary>
            Gets the oriented panel used to layout the axis labels.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.AxisTitle">
            <summary>
            Gets or sets the title control used to display the title.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxis.SeriesHost">
            <summary>
            Gets or sets the series host.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ICategoryAxis">
            <summary>
            An axis that is arranged by category.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IDataConsumer">
            <summary>
            An object that consumes data.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IDataConsumer.DataChanged(System.Windows.Controls.DataVisualization.Charting.IDataProvider,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Supplies the consumer with data.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="data">The data used by the consumer.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ICategoryAxis.GetPlotAreaCoordinateRange(System.Object)">
            <summary>
            Accepts a category and returns the coordinate range of that category
            on the axis.
            </summary>
            <param name="category">A category for which to retrieve the 
            coordinate location.</param>
            <returns>The coordinate range of the category on the axis.</returns>        
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ICategoryAxis.GetCategoryAtPosition(System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Returns the category at a given coordinate.
            </summary>
            <param name="position">The plot are coordinate.</param>
            <returns>The category at the given plot area coordinate.</returns>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.CategoryAxis._majorTickMarkPool">
            <summary>
            A pool of major tick marks.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.CategoryAxis._labelPool">
            <summary>
            A pool of labels.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.SortOrderProperty">
            <summary>
            Identifies the SortOrder dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.OnSortOrderPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SortOrderProperty property changed handler.
            </summary>
            <param name="d">CategoryAxis that changed its SortOrder.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.OnSortOrderPropertyChanged">
            <summary>
            SortOrderProperty property changed handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.#ctor">
            <summary>
            Instantiates a new instance of the CategoryAxis class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.OnDependentAxesCollectionChanged">
            <summary>
            Child axes collection changed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.OnObjectRegistered(System.Windows.Controls.DataVisualization.Charting.IAxisListener)">
            <summary>
            Updates categories when a series is registered.
            </summary>
            <param name="series">The series to be registered.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.OnObjectUnregistered(System.Windows.Controls.DataVisualization.Charting.IAxisListener)">
            <summary>
            Updates categories when a series is unregistered.
            </summary>
            <param name="series">The series to be unregistered.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.GetPlotAreaCoordinateRange(System.Object)">
            <summary>
            Returns range of coordinates for a given category.
            </summary>
            <param name="category">The category to return the range for.</param>
            <returns>The range of coordinates corresponding to the category.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.GetCategoryAtPosition(System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Returns the category at a given coordinate.
            </summary>
            <param name="position">The plot area position.</param>
            <returns>The category at the given plot area position.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.DataChanged(System.Windows.Controls.DataVisualization.Charting.IDataProvider,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Updates the categories in response to an update from a registered
            axis data provider.
            </summary>
            <param name="dataProvider">The category axis information
            provider.</param>
            <param name="data">A sequence of categories.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.UpdateCategories">
            <summary>
            Updates the list of categories.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.GetMajorGridLineCoordinates(System.Windows.Size)">
            <summary>
            Returns the major axis grid line coordinates.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of the major grid line coordinates.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.GetPlotAreaCoordinate(System.Object)">
            <summary>
            The plot area coordinate of a value.
            </summary>
            <param name="value">The value for which to retrieve the plot area 
            coordinate.</param>
            <returns>The plot area coordinate.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.CreateAndPrepareAxisLabel(System.Object)">
            <summary>
            Creates and prepares a new axis label.
            </summary>
            <param name="value">The axis label value.</param>
            <returns>The axis label content control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.RenderOriented(System.Windows.Size)">
            <summary>
            Renders as an oriented axis.
            </summary>
            <param name="availableSize">The available size.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.Render(System.Windows.Size)">
            <summary>
            Renders the axis labels, tick marks, and other visual elements.
            </summary>
            <param name="availableSize">The available size.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.CanPlot(System.Object)">
            <summary>
            Returns a value indicating whether a value can be plotted on the
            axis.
            </summary>
            <param name="value">A value which may or may not be able to be
            plotted.</param>
            <returns>A value indicating whether a value can be plotted on the
            axis.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.SortOrder">
            <summary>
            Gets or sets the sort order used for the categories.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.Categories">
            <summary>
            Gets or sets a list of categories to display.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.CategoryAxis.GridLineCoordinatesToDisplay">
            <summary>
            Gets or sets the grid line coordinates to display.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.CategorySortOrder">
            <summary>
            The sort order to use when sorting categories.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.CategorySortOrder.None">
            <summary>
            No sort order.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.CategorySortOrder.Ascending">
            <summary>
            Ascending sort order.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.CategorySortOrder.Descending">
            <summary>
            Descending sort order.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines">
            <summary>
            This control draws gridlines with the help of an axis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IAxisListener">
            <summary>
            An object that listens for changes in an axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IAxisListener.AxisInvalidated(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            This method is called when the axis is invalidated.
            </summary>
            <param name="axis">The axis that has been invalidated.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines._axis">
            <summary>
            The field that stores the axis that the grid lines are connected to.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines.OnAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.DisplayAxis,System.Windows.Controls.DataVisualization.Charting.DisplayAxis)">
            <summary>
            AxisProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines.#ctor(System.Windows.Controls.DataVisualization.Charting.DisplayAxis)">
            <summary>
            Instantiates a new instance of the DisplayAxisGridLines class.
            </summary>
            <param name="axis">The axis used by the DisplayAxisGridLines.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines.OnSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Redraws grid lines when the size of the control changes.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines.AxisInvalidated(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            Redraws grid lines when the axis is invalidated.
            </summary>
            <param name="axis">The invalidated axis.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines.Invalidate">
            <summary>
            Draws the grid lines.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DisplayAxisGridLines.Axis">
            <summary>
            Gets the axis that the grid lines are connected to.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IRangeConsumer">
            <summary>
            An object that consumes a range.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IRangeConsumer.RangeChanged(System.Windows.Controls.DataVisualization.Charting.IRangeProvider,System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Informs a range consumer that a provider's range has changed.
            </summary>
            <param name="provider">The range provider.</param>
            <param name="range">The range of data.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer">
            <summary>
            Consumes value margins and uses them to lay out objects.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer.ValueMarginsChanged(System.Windows.Controls.DataVisualization.Charting.IValueMarginProvider,System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.ValueMargin})">
            <summary>
            Updates layout to accommodate for value margins.
            </summary>
            <param name="provider">A value margin provider.</param>
            <param name="valueMargins">A sequence of value margins.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IValueMarginProvider">
            <summary>
            Provides information about margins necessary for values.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IValueMarginProvider.GetValueMargins(System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer)">
            <summary>
            Gets the margins required for values.
            </summary>
            <param name="consumer">The axis to retrieve the value margins 
            for.</param>
            <returns>The margins required for values.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ValueMargin">
            <summary>
            A margin specified for a given value.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ValueMargin.#ctor(System.Object,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the ValueMargin class.
            </summary>
            <param name="value">The value the margin is associated with.</param>
            <param name="lowMargin">The lower margin.</param>
            <param name="highMargin">The higher margin.</param> 
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ValueMargin.Equals(System.Object)">
            <summary>
            Determines whether two value margins are equal.
            </summary>
            <param name="obj">The value margin to compare with this one.</param>
            <returns>A value indicating whether the two value margins are equal.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ValueMargin.op_Equality(System.Windows.Controls.DataVisualization.Charting.ValueMargin,System.Windows.Controls.DataVisualization.Charting.ValueMargin)">
            <summary>
            Determines whether two unit value objects are equal.
            </summary>
            <param name="left">The left value margin.</param>
            <param name="right">The right value margin.</param>
            <returns>A value indicating  whether two value margins objects are 
            equal.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ValueMargin.op_Inequality(System.Windows.Controls.DataVisualization.Charting.ValueMargin,System.Windows.Controls.DataVisualization.Charting.ValueMargin)">
            <summary>
            Determines whether two value margin objects are not equal.
            </summary>
            <param name="left">The left value margin.</param>
            <param name="right">The right value margin.</param>
            <returns>A value indicating whether two value margin objects are not
            equal.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ValueMargin.GetHashCode">
            <summary>
            Returns the hash code of the value margin object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ValueMargin.Value">
            <summary>
            Gets the value that the margin is associated with.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ValueMargin.LowMargin">
            <summary>
            Gets the low margin for a value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ValueMargin.HighMargin">
            <summary>
            Gets the high margin for a value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis">
            <summary>
            An axis that displays numeric values.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.RangeAxis">
            <summary>
            An axis that has a range.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IRangeAxis">
            <summary>
            An axis with a range.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IRangeAxis.GetValueAtPosition(System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            The plot area coordinate of a value.
            </summary>
            <param name="position">The position at which to retrieve the plot 
            area coordinate.</param>
            <returns>The plot area coordinate.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.IRangeAxis.Range">
            <summary>
            Gets the range of values displayed on the axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.IRangeAxis.Origin">
            <summary>
            Gets the origin value on the axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.RangeAxis._majorTickMarkPool">
            <summary>
            A pool of major tick marks.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.RangeAxis._minorTickMarkPool">
            <summary>
            A pool of major tick marks.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.RangeAxis._labelPool">
            <summary>
            A pool of labels.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.RangeAxis.MinorTickMarkStyleProperty">
            <summary>
            Identifies the MinorTickMarkStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.RangeAxis._actualRange">
            <summary>
            The actual range of values.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.RangeAxis._protectedMaximum">
            <summary>
            The maximum value displayed in the range axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.RangeAxis._protectedMinimum">
            <summary>
            The minimum value displayed in the range axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.#ctor">
            <summary>
            Instantiates a new instance of the RangeAxis class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.CreateMinorTickMark">
            <summary>
            Creates a minor axis tick mark.
            </summary>
            <returns>A line to used to render a tick mark.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.OnActualRangeChanged(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Invalidates axis when the actual range changes.
            </summary>
            <param name="range">The new actual range.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetPlotAreaCoordinate(System.Object)">
            <summary>
            Returns the plot area coordinate of a given value.
            </summary>
            <param name="value">The value to return the plot area coordinate
            for.</param>
            <returns>The plot area coordinate of the given value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetPlotAreaCoordinate(System.Object,System.Windows.Controls.DataVisualization.Range{System.IComparable},System.Double)">
            <summary>
            Returns the plot area coordinate of a given value.
            </summary>
            <param name="value">The value to return the plot area coordinate
            for.</param>
            <param name="currentRange">The value range to use when calculating 
            the plot area coordinate.</param>
            <param name="length">The length of the axis.</param>
            <returns>The plot area coordinate of the given value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.OverrideDataRange(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Overrides the data range.
            </summary>
            <param name="range">The range to potentially override.</param>
            <returns>The overridden range.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.EnforceMaximumAndMinimum(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Modifies a range to respect the minimum and maximum axis values.
            </summary>
            <param name="range">The range of data.</param>
            <returns>A range modified to  respect the minimum and maximum axis 
            values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.UpdateActualRange">
            <summary>
            Updates the actual range displayed on the axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.RenderOriented(System.Windows.Size)">
            <summary>
            Renders the axis as an oriented axis.
            </summary>
            <param name="availableSize">The available size.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.Render(System.Windows.Size)">
            <summary>
            Renders the axis labels, tick marks, and other visual elements.
            </summary>
            <param name="availableSize">The available size.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetMajorGridLineCoordinates(System.Windows.Size)">
            <summary>
            Returns a sequence of the major grid line coordinates.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of the major grid line coordinates.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetMajorGridLineValues(System.Windows.Size)">
            <summary>
            Returns a sequence of the values at which to plot major grid lines.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of the values at which to plot major grid lines.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetMajorTickMarkValues(System.Windows.Size)">
            <summary>
            Returns a sequence of values to plot on the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of values to plot on the axis.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetMinorTickMarkValues(System.Windows.Size)">
            <summary>
            Returns a sequence of values to plot on the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of values to plot on the axis.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetLabelValues(System.Windows.Size)">
            <summary>
            Returns a sequence of values to plot on the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of values to plot on the axis.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetValueAtPosition(System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Returns the value range given a plot area coordinate.
            </summary>
            <param name="value">The plot area coordinate.</param>
            <returns>A range of values at that plot area coordinate.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.System#Windows#Controls#DataVisualization#Charting#IRangeAxis#GetValueAtPosition(System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Returns the value range given a plot area coordinate.
            </summary>
            <param name="value">The plot area coordinate.</param>
            <returns>A range of values at that plot area coordinate.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.System#Windows#Controls#DataVisualization#Charting#IRangeConsumer#RangeChanged(System.Windows.Controls.DataVisualization.Charting.IRangeProvider,System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Updates the axis with information about a provider's data range.
            </summary>
            <param name="usesRangeAxis">The information provider.</param>
            <param name="range">The range of data in the information provider.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.System#Windows#Controls#DataVisualization#Charting#IValueMarginConsumer#ValueMarginsChanged(System.Windows.Controls.DataVisualization.Charting.IValueMarginProvider,System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.ValueMargin})">
            <summary>
            Updates the layout of the axis to accommodate a sequence of value
            margins.
            </summary>
            <param name="provider">A value margin provider.</param>
            <param name="valueMargins">A sequence of value margins.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.OnObjectRegistered(System.Windows.Controls.DataVisualization.Charting.IAxisListener)">
            <summary>
            If a new range provider is registered, update actual range.
            </summary>
            <param name="series">The axis listener being registered.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.OnObjectUnregistered(System.Windows.Controls.DataVisualization.Charting.IAxisListener)">
            <summary>
            If a range provider is unregistered, update actual range.
            </summary>
            <param name="series">The axis listener being unregistered.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.UpdateValueMargins(System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap},System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Create function that when given a range will return the 
            amount in pixels by which the value margin range 
            overlaps.  Positive numbers represent values outside the
            range.
            </summary>
            <param name="valueMargins">The list of value margins, coordinates, and overlaps.</param>
            <param name="comparableRange">The new range to use to calculate coordinates.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.RangeAxis.GetMaxLeftAndRightOverlap(System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap},System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap@,System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap@)">
            <summary>
            Returns the value margin, coordinate, and overlap triples that have the largest left and right overlap.
            </summary>
            <param name="valueMargins">The list of value margin, coordinate, and 
            overlap triples.</param>
            <param name="maxLeftOverlapValueMargin">The value margin, 
            coordinate, and overlap triple that has the largest left overlap.
            </param>
            <param name="maxRightOverlapValueMargin">The value margin, 
            coordinate, and overlap triple that has the largest right overlap.
            </param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.RangeAxis.MinorTickMarkStyle">
            <summary>
            Gets or sets the minor tick mark style.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.RangeAxis.ActualRange">
            <summary>
            Gets or sets the actual range of values.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.RangeAxis.ProtectedMaximum">
            <summary>
            Gets or sets the maximum value displayed in the range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.RangeAxis.ProtectedMinimum">
            <summary>
            Gets or sets the minimum value displayed in the range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.RangeAxis.System#Windows#Controls#DataVisualization#Charting#IRangeAxis#Range">
            <summary>
            Gets the actual maximum value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.RangeAxis.System#Windows#Controls#DataVisualization#Charting#IRangeAxis#Origin">
            <summary>
            Gets the origin value on the axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.RangeAxis.Origin">
            <summary>
            Gets the origin value on the axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.ActualMaximumProperty">
            <summary>
            Identifies the ActualMaximum dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.ActualMinimumProperty">
            <summary>
            Identifies the ActualMinimum dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OnMaximumPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MaximumProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxis2 that changed its Maximum.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OnMaximumPropertyChanged(System.Nullable{System.DateTime})">
            <summary>
            MaximumProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OnMinimumPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinimumProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxis2 that changed its Minimum.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OnMinimumPropertyChanged(System.Nullable{System.DateTime})">
            <summary>
            MinimumProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.IntervalProperty">
            <summary>
            Identifies the Interval dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OnIntervalPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IntervalProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxis2 that changed its Interval.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OnIntervalPropertyChanged">
            <summary>
            IntervalProperty property changed handler.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.ActualIntervalProperty">
            <summary>
            Identifies the ActualInterval dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.IntervalTypeProperty">
            <summary>
            Identifies the InternalIntervalType dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OnIntervalTypePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IntervalTypeProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxis that changed its InternalIntervalType.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OnIntervalTypePropertyChanged(System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType)">
            <summary>
            IntervalTypeProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.ActualIntervalTypeProperty">
            <summary>
            Identifies the ActualIntervalType dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.#ctor">
            <summary>
            Instantiates a new instance of the DateTimeAxis2 class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.ToDateTimeRange(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Converts a range to a range of type DateTime.
            </summary>
            <param name="range">A range to be converted.</param>
            <returns>A range that has been converted.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.CreateAxisLabel">
            <summary>
            Creates a new instance of the DateTimeAxisLabel class.
            </summary>
            <returns>Returns  a new instance of the DateTimeAxisLabel class.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.PrepareAxisLabel(System.Windows.Controls.Control,System.Object)">
            <summary>
            Prepares an instance of the DateTimeAxisLabel class by setting its
            IntervalType property.
            </summary>
            <param name="label">An instance of the DateTimeAxisLabel class.
            </param>
            <param name="dataContext">The data context to assign to the label.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OnActualRangeChanged(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Updates the typed actual maximum and minimum properties when the
            actual range changes.
            </summary>
            <param name="range">The actual range.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.CanPlot(System.Object)">
            <summary>
            Returns a value indicating whether a value can plot.
            </summary>
            <param name="value">The value to plot.</param>
            <returns>A value indicating whether a value can plot.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.GetPlotAreaCoordinate(System.Object,System.Windows.Controls.DataVisualization.Range{System.IComparable},System.Double)">
            <summary>
            Returns the plot area coordinate of a value.
            </summary>
            <param name="value">The value to plot.</param>
            <param name="range">The range to use determine the coordinate.</param>
            <param name="length">The length of the axis.</param>
            <returns>The plot area coordinate of a value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.CalculateActualInterval(System.Windows.Size)">
            <summary>
            Returns the actual interval to use to determine which values are 
            displayed in the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>The actual interval to use to determine which values are 
            displayed in the axis.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.GetMajorAxisValues(System.Windows.Size)">
            <summary>
            Returns a sequence of major values.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of major values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.GetMajorTickMarkValues(System.Windows.Size)">
            <summary>
            Returns a sequence of values to create major tick marks for.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of values to create major tick marks for.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.GetLabelValues(System.Windows.Size)">
            <summary>
            Returns a sequence of values to plot on the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of values to plot on the axis.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.IncrementDateTime(System.DateTime,System.Double)">
            <summary>
            This method accepts a date time and increments it.
            </summary>
            <param name="date">A date time.</param>
            <param name="interval">The interval used to increment the date time.
            </param>
            <returns>The new date time.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.AlignIntervalStart(System.DateTime,System.Double,System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType)">
            <summary>
            Adjusts the beginning of the first interval depending on the type and size.
            </summary>
            <param name="start">Original start point.</param>
            <param name="intervalSize">Interval size.</param>
            <param name="type">Type of the interval (Month, Year, ...).</param>
            <returns>
            Adjusted interval start position.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.GetValueAtPosition(System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Returns the value range given a plot area coordinate.
            </summary>
            <param name="value">The position.</param>
            <returns>A range of values at that plot area coordinate.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.CalculateDateTimeInterval(System.DateTime,System.DateTime,System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType@,System.Windows.Size)">
            <summary>
            Recalculates a DateTime interval obtained from maximum and minimum.
            </summary>
            <param name="minimum">The minimum.</param>
            <param name="maximum">The maximum.</param>
            <param name="type">Date time interval type.</param>
            <param name="availableSize">The available size.</param>
            <returns>Auto Interval.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.OverrideDataRange(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Overrides the actual range to ensure that it is never set to an
            empty range.
            </summary>
            <param name="range">The range to override.</param>
            <returns>The overridden range.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.ActualMaximum">
            <summary>
            Gets the actual maximum value plotted on the chart.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.ActualMinimum">
            <summary>
            Gets the actual maximum value plotted on the chart.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.Maximum">
            <summary>
            Gets or sets the maximum value plotted on the axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.Minimum">
            <summary>
            Gets or sets the minimum value to plot on the axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.Interval">
            <summary>
            Gets or sets the axis interval.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.ActualInterval">
            <summary>
            Gets the actual interval.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.IntervalType">
            <summary>
            Gets or sets the interval to use for the axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.ActualIntervalType">
            <summary>
            Gets or sets the actual interval type.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxis.Origin">
            <summary>
            Gets the origin value on the axis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel">
            <summary>
            An axis label for displaying DateTime values.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.IntervalTypeProperty">
            <summary>
            Identifies the IntervalType dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnIntervalTypePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IntervalTypeProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxisLabel that changed its IntervalType.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnIntervalTypePropertyChanged(System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType,System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType)">
            <summary>
            IntervalTypeProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.YearsIntervalStringFormatProperty">
            <summary>
            Identifies the YearsIntervalStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnYearsIntervalStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            YearsIntervalStringFormatProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxisLabel that changed its YearsIntervalStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnYearsIntervalStringFormatPropertyChanged">
            <summary>
            YearsIntervalStringFormatProperty property changed handler.
            </summary>    
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.MonthsIntervalStringFormatProperty">
            <summary>
            Identifies the MonthsIntervalStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnMonthsIntervalStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MonthsIntervalStringFormatProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxisLabel that changed its MonthsIntervalStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnMonthsIntervalStringFormatPropertyChanged">
            <summary>
            MonthsIntervalStringFormatProperty property changed handler.
            </summary>    
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.WeeksIntervalStringFormatProperty">
            <summary>
            Identifies the WeeksIntervalStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnWeeksIntervalStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            WeeksIntervalStringFormatProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxisLabel that changed its WeeksIntervalStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnWeeksIntervalStringFormatPropertyChanged">
            <summary>
            WeeksIntervalStringFormatProperty property changed handler.
            </summary>    
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.DaysIntervalStringFormatProperty">
            <summary>
            Identifies the DaysIntervalStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnDaysIntervalStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DaysIntervalStringFormatProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxisLabel that changed its DaysIntervalStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnDaysIntervalStringFormatPropertyChanged">
            <summary>
            DaysIntervalStringFormatProperty property changed handler.
            </summary>    
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.HoursIntervalStringFormatProperty">
            <summary>
            Identifies the HoursIntervalStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnHoursIntervalStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HoursIntervalStringFormatProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxisLabel that changed its HoursIntervalStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnHoursIntervalStringFormatPropertyChanged">
            <summary>
            HoursIntervalStringFormatProperty property changed handler.
            </summary>    
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.MinutesIntervalStringFormatProperty">
            <summary>
            Identifies the MinutesIntervalStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnMinutesIntervalStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinutesIntervalStringFormatProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxisLabel that changed its MinutesIntervalStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnMinutesIntervalStringFormatPropertyChanged">
            <summary>
            MinutesIntervalStringFormatProperty property changed handler.
            </summary>    
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.SecondsIntervalStringFormatProperty">
            <summary>
            Identifies the SecondsIntervalStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnSecondsIntervalStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SecondsIntervalStringFormatProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxisLabel that changed its SecondsIntervalStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnSecondsIntervalStringFormatPropertyChanged">
            <summary>
            SecondsIntervalStringFormatProperty property changed handler.
            </summary>    
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.MillisecondsIntervalStringFormatProperty">
            <summary>
            Identifies the MillisecondsIntervalStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnMillisecondsIntervalStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MillisecondsIntervalStringFormatProperty property changed handler.
            </summary>
            <param name="d">DateTimeAxisLabel that changed its MillisecondsIntervalStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.OnMillisecondsIntervalStringFormatPropertyChanged">
            <summary>
            MillisecondsIntervalStringFormatProperty property changed handler.
            </summary>    
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.#ctor">
            <summary>
            Instantiates a new instance of the DateTimeAxisLabel class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.UpdateFormattedContent">
            <summary>
            Updates the formatted text.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.IntervalType">
            <summary>
            Gets or sets the interval type of the DateTimeAxis2.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.YearsIntervalStringFormat">
            <summary>
            Gets or sets the format string to use when the interval is hours.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.MonthsIntervalStringFormat">
            <summary>
            Gets or sets the format string to use when the interval is hours.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.WeeksIntervalStringFormat">
            <summary>
            Gets or sets the format string to use when the interval is hours.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.DaysIntervalStringFormat">
            <summary>
            Gets or sets the format string to use when the interval is hours.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.HoursIntervalStringFormat">
            <summary>
            Gets or sets the format string to use when the interval is hours.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.MinutesIntervalStringFormat">
            <summary>
            Gets or sets the format string to use when the interval is hours.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.SecondsIntervalStringFormat">
            <summary>
            Gets or sets the format string to use when the interval is hours.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DateTimeAxisLabel.MillisecondsIntervalStringFormat">
            <summary>
            Gets or sets the format string to use when the interval is hours.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType">
            <summary>
            A date time interval.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType.Auto">
            <summary>
            Automatically determine interval.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType.Milliseconds">
            <summary>
            Interval type is milliseconds.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType.Seconds">
            <summary>
            Interval type is seconds.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType.Minutes">
            <summary>
            Interval type is minutes.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType.Hours">
            <summary>
            Interval type is hours.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType.Days">
            <summary>
            Interval type is days.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType.Weeks">
            <summary>
            Interval type is weeks.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType.Months">
            <summary>
            Interval type is months.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DateTimeIntervalType.Years">
            <summary>
            Interval type is years.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.OrientedAxisGridLines">
            <summary>
            This control draws gridlines with the help of an axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.OrientedAxisGridLines._gridLinePool">
            <summary>
            A pool of grid lines.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.OrientedAxisGridLines.#ctor(System.Windows.Controls.DataVisualization.Charting.DisplayAxis)">
            <summary>
            Initializes a new instance of the OrientedAxisGridLines class.
            </summary>
            <param name="displayAxis">The axis to draw grid lines for.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.OrientedAxisGridLines.Invalidate">
            <summary>
            Draws the grid lines.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IDataProvider">
            <summary>
            Provides information to a category axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IDataProvider.GetData(System.Windows.Controls.DataVisualization.Charting.IDataConsumer)">
            <summary>
            Retrieves the data to be plotted on the axis.
            </summary>
            <param name="axis">The axis to retrieve the data for.</param>
            <returns>The data to plot on the axis.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IRangeProvider">
            <summary>
            Provides information to a RangeConsumer.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IRangeProvider.GetRange(System.Windows.Controls.DataVisualization.Charting.IRangeConsumer)">
            <summary>
            Returns the range of values.
            </summary>
            <param name="rangeConsumer">The range consumer requesting the data 
            range.</param>
            <returns>A data range.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.LinearAxis">
            <summary>
            An axis that displays numeric values.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.NumericAxis">
            <summary>
            An axis that displays numeric values.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.NumericAxis.ActualMaximumProperty">
            <summary>
            Identifies the ActualMaximum dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.NumericAxis.ActualMinimumProperty">
            <summary>
            Identifies the ActualMinimum dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.NumericAxis.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.OnMaximumPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MaximumProperty property changed handler.
            </summary>
            <param name="d">BaseNumericAxis that changed its Maximum.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.OnMaximumPropertyChanged(System.Nullable{System.Double})">
            <summary>
            MaximumProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.NumericAxis.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.OnMinimumPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinimumProperty property changed handler.
            </summary>
            <param name="d">BaseNumericAxis that changed its Minimum.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.OnMinimumPropertyChanged(System.Nullable{System.Double})">
            <summary>
            MinimumProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.NumericAxis.ExtendRangeToOriginProperty">
            <summary>
            Identifies the ExtendRangeToOrigin dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.OnExtendRangeToOriginPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ExtendRangeToOriginProperty property changed handler.
            </summary>
            <param name="d">NumericAxis that changed its ExtendRangeToOrigin.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.OnExtendRangeToOriginPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            ExtendRangeToOriginProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.#ctor">
            <summary>
            Instantiates a new instance of the BaseNumericAxis class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.OnActualRangeChanged(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Updates the typed actual maximum and minimum properties when the
            actual range changes.
            </summary>
            <param name="range">The actual range.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.CanPlot(System.Object)">
            <summary>
            Returns a value indicating whether a value can plot.
            </summary>
            <param name="value">The value to plot.</param>
            <returns>A value indicating whether a value can plot.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.CreateAxisLabel">
            <summary>
            Returns a numeric axis label.
            </summary>
            <returns>A numeric axis label.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxis.OverrideDataRange(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Overrides the data value range and returns a range that takes the
            margins of the values into account.
            </summary>
            <param name="range">The range of data values.</param>
            <returns>A range that can store both the data values and their 
            margins.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.NumericAxis.ActualMaximum">
            <summary>
            Gets the actual maximum value plotted on the chart.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.NumericAxis.ActualMinimum">
            <summary>
            Gets the actual maximum value plotted on the chart.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.NumericAxis.Maximum">
            <summary>
            Gets or sets the maximum value plotted on the axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.NumericAxis.Minimum">
            <summary>
            Gets or sets the minimum value to plot on the axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.NumericAxis.ExtendRangeToOrigin">
            <summary>
            Gets or sets a value indicating whether to always show the origin.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.NumericAxis.Origin">
            <summary>
            Gets the origin value on the axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.LinearAxis.IntervalProperty">
            <summary>
            Identifies the Interval dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.OnIntervalPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IntervalProperty property changed handler.
            </summary>
            <param name="d">LinearAxis that changed its Interval.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.OnIntervalPropertyChanged">
            <summary>
            IntervalProperty property changed handler.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.LinearAxis.ActualIntervalProperty">
            <summary>
            Identifies the ActualInterval dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.#ctor">
            <summary>
            Instantiates a new instance of the LinearAxis class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.GetPlotAreaCoordinate(System.Object,System.Windows.Controls.DataVisualization.Range{System.IComparable},System.Double)">
            <summary>
            Returns the plot area coordinate of a value.
            </summary>
            <param name="value">The value to plot.</param>
            <param name="range">The range of values.</param>
            <param name="length">The length of axis.</param>
            <returns>The plot area coordinate of a value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.CalculateActualInterval(System.Windows.Size)">
            <summary>
            Returns the actual interval to use to determine which values are 
            displayed in the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>Actual interval to use to determine which values are 
            displayed in the axis.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.GetMajorTickMarkValues(System.Windows.Size)">
            <summary>
            Returns a sequence of values to create major tick marks for.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of values to create major tick marks for.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.GetMajorValues(System.Windows.Size)">
            <summary>
            Returns a sequence of major axis values.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of major axis values.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.GetLabelValues(System.Windows.Size)">
            <summary>
            Returns a sequence of values to plot on the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>A sequence of values to plot on the axis.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.AlignToInterval(System.Double,System.Double)">
            <summary>
            Aligns a value to the provided interval value.  The aligned value
            should always be smaller than or equal to than the provided value.
            </summary>
            <param name="value">The value to align to the interval.</param>
            <param name="interval">The interval to align to.</param>
            <returns>The aligned value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.GetValueAtPosition(System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Returns the value range given a plot area coordinate.
            </summary>
            <param name="value">The plot area position.</param>
            <returns>The value at that plot area coordinate.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.LengthToRange(System.Double,System.Double)">
            <summary>
            Function that uses the mid point of all the data values
            in the value margins to convert a length into a range
            of data with the mid point as the center of that range.
            </summary>
            <param name="midPoint">The mid point of the range.</param>
            <param name="length">The length of the range.</param>
            <returns>The range object.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LinearAxis.OverrideDataRange(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Overrides the actual range to ensure that it is never set to an
            empty range.
            </summary>
            <param name="range">The range to override.</param>
            <returns>Returns the overridden range.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LinearAxis.Interval">
            <summary>
            Gets or sets the axis interval.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LinearAxis.ActualInterval">
            <summary>
            Gets the actual interval of the axis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.NumericAxisLabel">
            <summary>
            A label used to display numeric axis values.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NumericAxisLabel.#ctor">
            <summary>
            Instantiates a new instance of the NumericAxisLabel class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.BarDataPoint">
            <summary>
            Represents a data point used for bar series.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BarDataPoint.#ctor">
            <summary>
            Initializes a new instance of the BarDataPoint class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint">
            <summary>
            Represents a data point used for bar series.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.SizeProperty">
            <summary>
            Identifies the Size dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.OnSizePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SizeProperty property changed handler.
            </summary>
            <param name="d">BubbleDataPoint that changed its Size.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.OnSizePropertyChanged(System.Double,System.Double)">
            <summary>
            SizeProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.ActualSizeProperty">
            <summary>
            Identifies the ActualSize dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.OnActualSizePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ActualSizeProperty property changed handler.
            </summary>
            <param name="d">BubbleDataPoint that changed its ActualSize.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.OnActualSizePropertyChanged(System.Double,System.Double)">
            <summary>
            ActualSizeProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.#ctor">
            <summary>
            Initializes a new instance of the bubble data point.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.Size">
            <summary>
            Gets or sets the size value of the bubble data point.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.SizePropertyChanged">
            <summary>
            This event is raised when the size property is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.ActualSize">
            <summary>
            Gets or sets the actual size of the bubble data point.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.BubbleDataPoint.ActualSizePropertyChanged">
            <summary>
            This event is raised when the actual size property is changed.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ColumnDataPoint">
            <summary>
            Represents a data point used for column series.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnDataPoint.#ctor">
            <summary>
            Initializes a new instance of the ColumnDataPoint class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ISeriesHost">
            <summary>
            Defines properties, methods and events for classes that host a 
            collection of Series objects.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.IStyleDispenser">
            <summary>
            Represents a service that dispenses Styles.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.IStyleDispenser.GetStylesWhere(System.Func{System.Windows.Style,System.Boolean})">
            <summary>
            Returns a rotating enumerator of Style objects that coordinates with 
            the style dispenser object to ensure that no two enumerators are
            currently on the same style if possible.  If the style
            dispenser is reset or its collection of styles is changed then
            the enumerators will also be reset.
            </summary>
            <param name="stylePredicate">A predicate that returns a value
            indicating whether to return a style.</param>
            <returns>An enumerator of styles.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.IStyleDispenser.ResetStyles">
            <summary>
            Resets the style dispenser.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ISeriesHost.Axes">
            <summary>
            Gets the collection of axes the series host has available.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ISeriesHost.Series">
            <summary>
            Gets the collection of series the series host has available.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ISeriesHost.ForegroundElements">
            <summary>
            Gets the foreground elements.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ISeriesHost.BackgroundElements">
            <summary>
            Gets the background elements.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.ISeriesHost.GlobalSeriesIndexesInvalidated">
            <summary>
            Occurs when the series descendents in the series host have changed.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ISeriesHostExtensions">
            <summary>
            Extension methods for series hosts.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ISeriesHostExtensions.GetDescendentSeries(System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            Gets all series that track their global indexes recursively.
            </summary>
            <param name="rootSeriesHost">The root series host.</param>
            <returns>A sequence of series.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ISeriesHostExtensions.IsUsedByASeries(System.Windows.Controls.DataVisualization.Charting.ISeriesHost,System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            Gets a value indicating whether an axis is in use by the series 
            host.
            </summary>
            <param name="that">The series host.</param>
            <param name="axis">The axis that may or may not be used by a 
            series.</param>
            <returns>A value indicating whether an axis is in use by the series 
            host.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.SeriesHostAxesCollection">
            <summary>
            An axes collection used by a series host.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.UniqueObservableCollection`1">
            <summary>
            An observable collection that does not allow duplicates.
            </summary>
            <typeparam name="T">The type of items in the collection.</typeparam>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UniqueObservableCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Inserts an item at an index. Throws if the item already exists in the collection.
            </summary>
            <param name="index">The index at which to insert the item.</param>
            <param name="item">The item to insert.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UniqueObservableCollection`1.SetItem(System.Int32,`0)">
            <summary>
            Sets an item at a given index. Throws if the item already exists at another index.
            </summary>
            <param name="index">The index at which to insert the item.</param>
            <param name="item">The item to be inserted.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UniqueObservableCollection`1.ClearItems">
            <summary>
            Clears all items in the collection by removing them individually.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesHostAxesCollection.#ctor(System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            Instantiates a new instance of the SeriesHostAxesCollection class.
            </summary>
            <param name="seriesHost">The series host.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesHostAxesCollection.#ctor(System.Windows.Controls.DataVisualization.Charting.ISeriesHost,System.Windows.Controls.DataVisualization.UniqueObservableCollection{System.Windows.Controls.DataVisualization.Charting.IAxis})">
            <summary>
            Instantiates a new instance of the SeriesHostAxesCollection class.
            </summary>
            <param name="seriesHost">The series host.</param>
            <param name="persistentAxes">A collection of axes that can never be 
            removed from the chart.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesHostAxesCollection.ThisCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            A method that attaches and removes listeners to axes added to this
            collection.
            </summary>
            <param name="sender">This object.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesHostAxesCollection.AxisRegisteredListenersCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Remove an axis from the collection if it is no longer used.
            </summary>
            <param name="sender">The axis that has had its registered 
            listeners collection changed.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesHostAxesCollection.PersistentAxesCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            This method synchronizes the collection with the persistent axes 
            collection when it is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.SeriesHostAxesCollection.RemoveItem(System.Int32)">
            <summary>
            Removes an item from the axes collection but throws an exception
            if a series in the series host is listening to it.
            </summary>
            <param name="index">The index of the item being removed.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesHostAxesCollection.SeriesHost">
            <summary>
            Gets or sets the series host field.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.SeriesHostAxesCollection.PersistentAxes">
            <summary>
            Gets or sets a collection of axes cannot be removed under any 
            circumstances.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.AreaSeries">
            <summary>
            Represents a control that contains a data series to be rendered in X/Y 
            line format.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1">
            <summary>
            A base class that contains methods used by both the line and area series.
            </summary>
            <typeparam name="T">The type of data point used by the series.</typeparam>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes">
            <summary>
            A dynamic series with axes and only one legend item and style for all 
            data points.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes">
            <summary>
            Represents a dynamic series that uses axes to display data points.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DataPointSeries">
            <summary>
            Represents a control that contains a dynamic data series.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Series">
            <summary>
            Represents a control that contains a data series.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Series._seriesHost">
            <summary>
            Stores the Parent instance the Series belongs to.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Series.OnSeriesHostPropertyChanged(System.Windows.Controls.DataVisualization.Charting.ISeriesHost,System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            Called when the value of the SeriesHost property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new series host value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Series.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Series.OnTitleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TitleProperty property changed callback.
            </summary>
            <param name="o">Series for which the Title changed.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Series.OnTitleChanged(System.Object,System.Object)">
            <summary>
            Called when the Title property changes.
            </summary>
            <param name="oldValue">The old value of the Title property.</param>
            <param name="newValue">The new value of the Title property.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Series.#ctor">
            <summary>
            Initializes a new instance of the Series class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Series.Refresh">
            <summary>
            Refreshes data from data source and renders the series.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Series.RefreshStyles">
            <summary>
            Refreshes styles from style dispenser and renders the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Series.SeriesHost">
            <summary>
            Gets or sets the parent instance the Series belongs to.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Series.LegendItems">
            <summary>
            Gets the legend items to be added to the legend.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Series.Title">
            <summary>
            Gets or sets the title content of the Series.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.PlotAreaName">
            <summary>
            The name of the template part with the plot area.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries._storyBoardQueue">
            <summary>
            Queue of hide/reveal storyboards to play.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries._dependentValueBinding">
            <summary>
            The binding used to identify the dependent value binding.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries._dataPointsByObject">
            <summary>
            Data points collection sorted by object.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries._independentValueBinding">
            <summary>
            The binding used to identify the independent value binding.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnItemsSourceChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemsSourceProperty property changed callback.
            </summary>
            <param name="o">Series for which the ItemsSource changed.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when the ItemsSource property changes.
            </summary>
            <param name="oldValue">Old value of the ItemsSource property.</param>
            <param name="newValue">New value of the ItemsSource property.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.TransitionEasingFunctionProperty">
            <summary>
            Identifies the TransitionEasingFunction dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.IsSelectionEnabledProperty">
            <summary>
            Identifies the IsSelectionEnabled dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnIsSelectionEnabledPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsSelectionEnabledProperty property changed handler.
            </summary>
            <param name="d">DynamicSeries that changed its IsSelectionEnabled.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnIsSelectionEnabledPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            IsSelectionEnabledProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.AnimationSequenceProperty">
            <summary>
            Identifies the AnimationSequence dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries._weakEventListener">
            <summary>
            WeakEventListener used to handle INotifyCollectionChanged events.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries._plotArea">
            <summary>
            The plot area canvas.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries._processingOnSelectedItemPropertyChanged">
            <summary>
            Tracks whether a call to OnSelectedItemPropertyChanged is already in progress.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.SelectedItemProperty">
            <summary>
            Identifies the SelectedItem dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnSelectedItemPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the SelectedItem property changes.
            </summary>
            <param name="d">DynamicSeries that changed its SelectedItem.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnSelectedItemPropertyChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the SelectedItem property changes.
            </summary>
            <param name="oldValue">The old selected index.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.LegendItemStyleProperty">
            <summary>
            Identifies the LegendItemStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnLegendItemStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            LegendItemStyleProperty property changed handler.
            </summary>
            <param name="d">DataPointSeries that changed its LegendItemStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnLegendItemStylePropertyChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            Called when the value of the LegendItemStyle property changes.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries._needRefreshWhenSizeChanged">
            <summary>
            Indicates whether a call to Refresh is required when the control's
            size changes.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.TransitionDurationProperty">
            <summary>
            Identifies the TransitionDuration dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.#ctor">
            <summary>
            Initializes a new instance of the Series class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.AddObject(System.Object)">
            <summary>
            Adds an object to the series host by creating a corresponding data point
            for it.
            </summary>
            <param name="dataContext">The object to add to the series host.</param>
            <returns>The data point created for the object.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.ShouldCreateDataPoint(System.Object)">
            <summary>
            Returns whether a data point should be created for the data context.
            </summary>
            <param name="dataContext">The data context that will be used for the
            data point.</param>
            <returns>A value indicating whether a data point should be created
            for the data context.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.GetInsertionIndex(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Returns the index at which to insert data point in the plot area
            child collection.
            </summary>
            <param name="dataPoint">The data point to retrieve the insertion
            index for.</param>
            <returns>The insertion index.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.AddDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Adds a data point to the plot area.
            </summary>
            <param name="dataPoint">The data point to add to the plot area.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.GetDataPoint(System.Object)">
            <summary>
            Retrieves the data point corresponding to the object passed as the
            parameter.
            </summary>
            <param name="dataContext">The data context used for the point.
            </param>
            <returns>The data point associated with the object.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.CreateAndPrepareDataPoint(System.Object)">
            <summary>
            Creates and prepares a data point.
            </summary>
            <param name="dataContext">The object to use as the data context
            of the data point.</param>
            <returns>The newly created data point.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.CreateDataPoint">
            <summary>
            Returns a Control suitable for the Series.
            </summary>
            <returns>The DataPoint instance.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.CreateLegendItem">
            <summary>
            Creates a legend item.
            </summary>
            <returns>A legend item for insertion in the legend items collection.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.ItemsSourceCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method that handles the ObservableCollection.CollectionChanged event for the ItemsSource property.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.LoadDataPoints(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Updates data points collection with items retrieved from items
            source and removes the old items.
            </summary>
            <param name="newItems">The items to load.</param>
            <param name="oldItems">The items to remove.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnApplyTemplate">
            <summary>
            Attaches handler plot area after loading it from XAML.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.InvokeOnLayoutUpdated(System.Action)">
            <summary>
            Invokes an action when the plot area's layout is updated.
            </summary>
            <param name="action">The action to execute.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnSeriesHostPropertyChanged(System.Windows.Controls.DataVisualization.Charting.ISeriesHost,System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            Handles changes to the SeriesHost property.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointsChanged(System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint},System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Called after data points have been loaded from the items source.
            </summary>
            <param name="newDataPoints">New active data points.</param>
            <param name="oldDataPoints">Old inactive data points.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnItemsSourceCollectionChanged(System.Collections.IEnumerable,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method called when the ItemsSource collection changes.
            </summary>
            <param name="collection">New value of the collection.</param>
            <param name="e">Information about the change.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnPlotAreaChanged(System.Windows.Controls.Panel,System.Windows.Controls.Panel)">
            <summary>
            Removes items from the existing plot area and adds items to new
            plot area.
            </summary>
            <param name="oldValue">The previous plot area.</param>
            <param name="newValue">The new plot area.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Updates the visual appearance of all the data points when the size
            changes.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.Refresh">
            <summary>
            Refreshes data from data source and renders the series.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.RemoveObject(System.Object)">
            <summary>
            Removes an object from the series host by removing its corresponding
            data point.
            </summary>
            <param name="dataContext">The object to remove from the series data
            source.</param>
            <returns>The data point corresponding to the removed object.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.RemoveDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Removes a data point from the plot area.
            </summary>
            <param name="dataPoint">The data point to remove.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.UpdateDataPoints(System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Updates the visual representation of all data points in the plot
            area.
            </summary>
            <param name="dataPoints">A sequence of data points to update.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.AttachEventHandlersToDataPoints(System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Attaches event handlers to the data points.
            </summary>
            <param name="dataPoints">A sequence of data points.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.DetachEventHandlersFromDataPoints(System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Detaches event handlers from the data points.
            </summary>
            <param name="dataPoints">A sequence of data points.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.AttachEventHandlersToDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Attaches event handlers to a data point.
            </summary>
            <param name="dataPoint">The data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.Unselect(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Unselects a data point.
            </summary>
            <param name="dataPoint">The data point to unselect.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.Select(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Selects a data point.
            </summary>
            <param name="dataPoint">The data point to select.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointIsSelectedChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Boolean})">
            <summary>
            Method executed when a data point is either selected or unselected.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.DetachEventHandlersFromDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Detaches event handlers from a data point.
            </summary>
            <param name="dataPoint">The data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnBeforeUpdateDataPoints">
            <summary>
            This method that executes before data points are updated.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnAfterUpdateDataPoints">
            <summary>
            This method that executes after data points are updated.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.UpdateDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Updates the visual representation of a single data point in the plot
            area.
            </summary>
            <param name="dataPoint">The data point to update.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.PrepareDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Object)">
            <summary>
            Prepares a data point by extracting binding it to a data context
            object.
            </summary>
            <param name="dataPoint">A data point.</param>
            <param name="dataContext">A data context object.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.StaggeredStateChange(System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.DataPoint},System.Int32,System.Windows.Controls.DataVisualization.Charting.DataPointState)">
            <summary>
            Reveals data points using a storyboard.
            </summary>
            <param name="dataPoints">The data points to change the state of.
            </param>
            <param name="dataPointCount">The number of data points in the sequence.</param>
            <param name="newState">The state to change to.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointStateChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Windows.Controls.DataVisualization.Charting.DataPointState})">
            <summary>
            Handles data point state property change.
            </summary>
            <param name="sender">The data point.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointStateChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Windows.Controls.DataVisualization.Charting.DataPointState,System.Windows.Controls.DataVisualization.Charting.DataPointState)">
            <summary>
            Handles data point state property change.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointActualDependentValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.IComparable})">
            <summary>
            Handles data point actual dependent value property changes.
            </summary>
            <param name="sender">The data point.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointActualDependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.IComparable,System.IComparable)">
            <summary>
            Handles data point actual dependent value property change.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointActualIndependentValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            Handles data point actual independent value property changes.
            </summary>
            <param name="sender">The data point.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointActualIndependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Object,System.Object)">
            <summary>
            Handles data point actual independent value property change.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointDependentValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.IComparable})">
            <summary>
            Handles data point dependent value property changes.
            </summary>
            <param name="sender">The data point.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointDependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.IComparable,System.IComparable)">
            <summary>
            Handles data point dependent value property change.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointIndependentValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            Handles data point independent value property changes.
            </summary>
            <param name="sender">The data point.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnDataPointIndependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Object,System.Object)">
            <summary>
            Handles data point independent value property change.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.DependentValueBinding">
            <summary>
            Gets or sets the Binding to use for identifying the dependent value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.DependentValuePath">
            <summary>
            Gets or sets the Binding Path to use for identifying the dependent value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.IndependentValueBinding">
            <summary>
            Gets or sets the Binding to use for identifying the independent value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.IndependentValuePath">
            <summary>
            Gets or sets the Binding Path to use for identifying the independent value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.ItemsSource">
            <summary>
            Gets or sets a collection used to contain the data points of the Series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.AnimationSequence">
            <summary>
            Gets or sets the animation sequence to use for the DataPoints of the Series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.ActiveDataPoints">
            <summary>
            Gets a stream of the active data points in the plot area.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.ActiveDataPointCount">
            <summary>
            Gets the number of active data points in the plot area.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.TransitionEasingFunction">
            <summary>
            Gets or sets the easing function to use when transitioning the
            data points.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.IsSelectionEnabled">
            <summary>
            Gets or sets a value indicating whether elements in the series can
            be selected.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.PlotArea">
            <summary>
            Gets the plot area canvas.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.PlotAreaSize">
            <summary>
            Gets the size of the plot area.
            </summary>
            <remarks>
            Use this method instead of PlotArea.ActualWidth/ActualHeight
            because the ActualWidth and ActualHeight properties are set after
            the SizeChanged handler runs.
            </remarks>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.SelectionChanged">
            <summary>
            Event raised when selection has changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.TemplateApplied">
            <summary>
            Gets or sets a value indicating whether the template has been
            applied.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.LegendItemStyle">
            <summary>
            Gets or sets the style to use for the legend items.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.ClipGeometry">
            <summary>
            Gets or sets the Geometry used to clip DataPoints to the PlotArea bounds.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.TransitionDuration">
            <summary>
            Gets or sets the duration of the value Transition animation.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeries.UpdatingDataPoints">
            <summary>
            Gets a value indicating whether all data points are being
            updated.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.CreateRangeAxisFromData(System.Object)">
            <summary>
            Creates the correct range axis based on the data.
            </summary>
            <param name="value">The value to evaluate to determine which type of
            axis to create.</param>
            <returns>The range axis appropriate that can plot the provided
            value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.GetActualDataPointAxisValue(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            Retrieves the value for a given access from a data point.
            </summary>
            <param name="dataPoint">The data point to retrieve the value from.</param>
            <param name="axis">The axis to retrieve the value for.</param>
            <returns>A function that returns a value appropriate for the axis
            when provided a DataPoint.</returns>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes._internalDependentAxis">
            <summary>
            Stores the internal dependent axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.OnInternalDependentAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IAxis,System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            DependentAxisProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes._internalIndependentAxis">
            <summary>
            The internal independent axis.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.OnInternalIndependentAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IAxis,System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.#ctor">
            <summary>
            Initializes a new instance of the DynamicSeriesWithAxes class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.OnDataPointActualDependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.IComparable,System.IComparable)">
            <summary>
            Update the axes when the specified data point's ActualDependentValue property changes.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.OnDataPointDependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.IComparable,System.IComparable)">
            <summary>
            Update the axes when the specified data point's DependentValue property changes.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.UpdateActualDependentAxis">
            <summary>
            Update axes when the specified data point's effective dependent value changes.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.OnDataPointActualIndependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Object,System.Object)">
            <summary>
            Update axes when the specified data point's actual independent value changes.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.OnDataPointIndependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Object,System.Object)">
            <summary>
            Update axes when the specified data point's independent value changes.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.UpdateActualIndependentAxis">
            <summary>
            Update axes when a data point's effective independent value changes.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.OnDataPointsChanged(System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint},System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Called after data points have been loaded from the items source.
            </summary>
            <param name="newDataPoints">New active data points.</param>
            <param name="oldDataPoints">Old inactive data points.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.UpdateDataPoints(System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Only updates all data points if series has axes.
            </summary>
            <param name="dataPoints">A sequence of data points to update.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.GetAxes">
            <summary>
            Method called to get series to acquire the axes it needs.  Acquires
            no axes by default.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.GetAxes(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Method called to get series to acquire the axes it needs.  Acquires
            no axes by default.
            </summary>
            <param name="firstDataPoint">The first data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.GetAxes(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Func{System.Windows.Controls.DataVisualization.Charting.IAxis,System.Boolean},System.Func{System.Windows.Controls.DataVisualization.Charting.IAxis},System.Func{System.Windows.Controls.DataVisualization.Charting.IAxis,System.Boolean},System.Func{System.Windows.Controls.DataVisualization.Charting.IAxis})">
            <summary>
            Method called to get the axes that the series needs.
            </summary>
            <param name="firstDataPoint">The first data point.</param>
            <param name="independentAxisPredicate">A predicate that returns
            a value indicating whether an axis is an acceptable candidate for
            the series independent axis.</param>
            <param name="independentAxisFactory">A function that creates an
            acceptable independent axis.</param>
            <param name="dependentAxisPredicate">A predicate that returns
            a value indicating whether an axis is an acceptable candidate for
            the series dependent axis.</param>
            <param name="dependentAxisFactory">A function that creates an
            acceptable dependent axis.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.System#Windows#Controls#DataVisualization#Charting#IAxisListener#AxisInvalidated(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            Updates data points when the axis is invalidated.
            </summary>
            <param name="axis">The axis that was invalidated.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.GetRange(System.Windows.Controls.DataVisualization.Charting.IRangeConsumer)">
            <summary>
            Returns the actual range of data for a given axis.
            </summary>
            <param name="consumer">The axis to retrieve the range for.</param>
            <returns>The actual range of data.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.GetValueMargins(System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer)">
            <summary>
            Returns the value margins for a given axis.
            </summary>
            <param name="consumer">The axis to retrieve the value margins for.
            </param>
            <returns>A sequence of value margins.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.System#Windows#Controls#DataVisualization#Charting#IDataProvider#GetData(System.Windows.Controls.DataVisualization.Charting.IDataConsumer)">
            <summary>
            Returns data to a data consumer.
            </summary>
            <param name="dataConsumer">The data consumer requesting the data.
            </param>
            <returns>The data for a given data consumer.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.OnSeriesHostPropertyChanged(System.Windows.Controls.DataVisualization.Charting.ISeriesHost,System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            Called when the value of the SeriesHost property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new series host value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.System#Windows#Controls#DataVisualization#Charting#IRangeProvider#GetRange(System.Windows.Controls.DataVisualization.Charting.IRangeConsumer)">
            <summary>
            Returns the data range.
            </summary>
            <param name="rangeConsumer">The consumer requesting the range.</param>
            <returns>The data range.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.System#Windows#Controls#DataVisualization#Charting#IValueMarginProvider#GetValueMargins(System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer)">
            <summary>
            Returns the value margins for a given axis.
            </summary>
            <param name="axis">The axis to retrieve the value margins for.
            </param>
            <returns>A sequence of value margins.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.DataPointsByActualDependentValue">
            <summary>
            Gets or sets the data points by dependent value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.InternalActualDependentAxis">
            <summary>
            Gets or sets the actual dependent axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.InternalDependentAxis">
            <summary>
            Gets or sets the value of the internal dependent axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.InternalActualIndependentAxis">
            <summary>
            Gets or sets the actual independent axis value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.InternalIndependentAxis">
            <summary>
            Gets or sets the value of the internal independent axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.UpdatingAllAxes">
            <summary>
            Gets or sets a value indicating whether to the axes are being 
            updated.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.AxesInvalidated">
            <summary>
            Gets or sets a value indicating whether the axes have been 
            invalidated.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.IRequireGlobalSeriesIndex">
            <summary>
            Defines methods on classes that contain a global index.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.IRequireGlobalSeriesIndex.GlobalSeriesIndexChanged(System.Nullable{System.Int32})">
            <summary>
            Occurs when a global series index changes.
            </summary>
            <param name="globalIndex">The global index that has changed.
            </param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.DataPointStyleProperty">
            <summary>
            Identifies the DataPointStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.GlobalSeriesIndexProperty">
            <summary>
            Identifies the GlobalSeriesIndex dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.OnGlobalSeriesIndexPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            GlobalSeriesIndexProperty property changed handler.
            </summary>
            <param name="d">Series that changed its Index.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.OnGlobalSeriesIndexPropertyChanged(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            GlobalSeriesIndexProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.OnTitleChanged(System.Object,System.Object)">
            <summary>
            Called when the Title property changes.
            </summary>
            <param name="oldValue">Old value of the Title property.</param>
            <param name="newValue">New value of the Title property.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.#ctor">
            <summary>
            Initializes a new instance of the DynamicSingleSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.GetStyleEnumeratorFromHost">
            <summary>
            Returns the data point style to use for all data points in the 
            series.
            </summary>
            <returns>The data point style to use for all charts in the series.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.OnPlotAreaChanged(System.Windows.Controls.Panel,System.Windows.Controls.Panel)">
            <summary>
            Insert grid containing data point used for legend item into the 
            plot area.
            </summary>
            <param name="oldValue">The old plot area.</param>
            <param name="newValue">The new plot area.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.OnSeriesHostPropertyChanged(System.Windows.Controls.DataVisualization.Charting.ISeriesHost,System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            When the series host property is set retrieves a style to use for all the
            data points.
            </summary>
            <param name="oldValue">The old series host value.</param>
            <param name="newValue">The new series host value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.CreateLegendItemDataPoint">
            <summary>
            Creates the LegendItem Control if conditions are right.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.OnDataPointsChanged(System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint},System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Called after data points have been loaded from the items source.
            </summary>
            <param name="newDataPoints">New active data points.</param>
            <param name="oldDataPoints">Old inactive data points.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.PrepareDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Object)">
            <summary>
            Sets the style of the data point to the single style used for all
            data points.
            </summary>
            <param name="dataPoint">The data point to apply the style to.
            </param>
            <param name="dataContext">The object associated with the data point.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.GlobalSeriesIndexChanged(System.Nullable{System.Int32})">
            <summary>
            This method updates the global series index property.
            </summary>
            <param name="globalIndex">The global index of the series.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.RefreshStyles">
            <summary>
            Refreshes the styles in the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.LegendItem">
            <summary>
            Gets the single legend item associated with the series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.CustomTitleInUse">
            <summary>
            Gets or sets a value indicating whether a custom title is in use.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.DataPointStyle">
            <summary>
            Gets or sets the style to use for the data points.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.ActualDataPointStyle">
            <summary>
            Gets or sets the actual style of used for the data points.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.GlobalSeriesIndex">
            <summary>
            Gets the index of the series in the Parent's series collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.#ctor">
            <summary>
            Initializes a new instance of the LineAreaBaseSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.OnDataPointsChanged(System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint},System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Called after data points have been loaded from the items source.
            </summary>
            <param name="newDataPoints">New active data points.</param>
            <param name="oldDataPoints">Old inactive data points.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.OnAfterUpdateDataPoints">
            <summary>
            This method executes after all data points have been updated.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.OnDataPointIndependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Object,System.Object)">
            <summary>
            Repositions line data point in the sorted collection if the actual 
            independent axis is a range axis.
            </summary>
            <param name="dataPoint">The data point that has changed.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.CreateDataPoint">
            <summary>
            Creates a new line data point.
            </summary>
            <returns>A line data point.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.GetStyleEnumeratorFromHost">
            <summary>
            Returns the style to use for all data points.
            </summary>
            <returns>The style to use for all data points.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.UpdateShape">
            <summary>
            Updates the point collection object.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.DataPointsByIndependentValue">
            <summary>
            Gets data points collection sorted by independent value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.ActualIndependentAxis">
            <summary>
            Gets the independent axis as a range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LineAreaBaseSeries`1.ActualDependentRangeAxis">
            <summary>
            Gets the dependent axis as a range axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AreaSeries.GeometryProperty">
            <summary>
            Identifies the Geometry dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AreaSeries.PathStyleProperty">
            <summary>
            Identifies the PathStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AreaSeries.#ctor">
            <summary>
            Initializes a new instance of the AreaSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AreaSeries.GetAxes(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Acquire a horizontal linear axis and a vertical linear axis.
            </summary>
            <param name="firstDataPoint">The first data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AreaSeries.OnApplyTemplate">
            <summary>
            Creates a DataPoint for determining the line color.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AreaSeries.DependentRangeAxisProperty">
            <summary>
            Identifies the DependentRangeAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AreaSeries.OnDependentRangeAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="d">AreaSeries that changed its DependentRangeAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AreaSeries.OnDependentRangeAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IRangeAxis)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AreaSeries.IndependentAxisProperty">
            <summary>
            Identifies the IndependentAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AreaSeries.OnIndependentAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="d">AreaSeries that changed its IndependentAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AreaSeries.OnIndependentAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AreaSeries.UpdateDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Updates the visual representation of the data point.
            </summary>
            <param name="dataPoint">The data point to update.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AreaSeries.UpdateShape">
            <summary>
            Updates the point collection object.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.AreaSeries.GetValueMargins(System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer)">
            <summary>
            Remove value margins from the side of the data points to ensure
            that area chart is flush against the edge of the chart.
            </summary>
            <param name="consumer">The value margin consumer.</param>
            <returns>A sequence of value margins.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.AreaSeries.Geometry">
            <summary>
            Gets the geometry property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.AreaSeries.PathStyle">
            <summary>
            Gets or sets the style of the Path object that follows the data 
            points.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.AreaSeries.DependentRangeAxis">
            <summary>
            Gets or sets the dependent range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.AreaSeries.IndependentAxis">
            <summary>
            Gets or sets the independent range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.AreaSeries.System#Windows#Controls#DataVisualization#Charting#IAnchoredToOrigin#AnchoredAxis">
            <summary>
            Gets the axis to which the series is anchored.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.StyleDispensedEventArgs">
            <summary>
            Information describing the style dispensed when a StyleDispensed event 
            is raised.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.StyleDispensedEventArgs.#ctor(System.Int32,System.Windows.Style)">
            <summary>
            Initializes a new instance of the StyleDispensedEventArgs class.
            </summary>
            <param name="index">The index of the style dispensed.</param>
            <param name="style">The style dispensed.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.StyleDispensedEventArgs.Equals(System.Object)">
            <summary>
            Returns a value indicating whether two style dispenser arguments are 
            equal.
            </summary>
            <param name="obj">The other StyleDispenser object.</param>
            <returns>A value indicating whether two style dispenser arguments 
            are equal.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.StyleDispensedEventArgs.GetHashCode">
            <summary>
            Returns a hash code.
            </summary>
            <returns>A hash code.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.StyleDispensedEventArgs.Index">
            <summary>
            Gets the index of the style dispensed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.StyleDispensedEventArgs.Style">
            <summary>
            Gets the style dispensed.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator">
            <summary>
            An enumerator that dispenses styles sequentially by coordinating with
            related enumerators.  Enumerators are related through an association
            with a parent StyleDispenser class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator.index">
            <summary>
            The index of current item in the StyleDispenser's list.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator._parentEnumerator">
            <summary>
            The parent enumerator.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator.#ctor(System.Windows.Controls.DataVisualization.Charting.StyleDispenser,System.Func{System.Windows.Style,System.Boolean})">
            <summary>
            Initializes a new instance of a StyleEnumerator.
            </summary>
            <param name="dispenser">The style dispenser that dispensed this
            StyleEnumerator.</param>
            <param name="stylePredicate">A predicate used to determine which
            styles to return.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator.StyleDispenserParentChanged">
            <summary>
            The style dispenser parent has changed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator.GetIndexOfNextSuitableStyle(System.Int32)">
            <summary>
            Returns the index of the next suitable style in the style dispenser
            list.
            </summary>
            <param name="startIndex">The index at which to start looking.</param>
            <returns>The index of the next suitable style.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator.StyleDispenserResetting">
            <summary>
            Resets the style dispenser.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator.StyleDispenserStyleDispensed(System.Object,System.Windows.Controls.DataVisualization.StyleDispensedEventArgs)">
            <summary>
            This method is invoked when one of the related style enumerator's 
            dispenses a style.  The enumerator checks to see if the style 
            dispensed would've been the next style it would have returned.  If
            so it updates it's index to the position after the previously
            returned style.
            </summary>
            <param name="sender">The style dispenser.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator.OnStyleDispensed(System.Windows.Controls.DataVisualization.StyleDispensedEventArgs)">
            <summary>
            Raises the style dispensed event.
            </summary>
            <param name="args">Information about the style dispensed.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator.MoveNext">
            <summary>
            Moves to the next style.
            </summary>
            <returns>A value indicating whether there are any more suitable
            styles.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator.Reset">
            <summary>
            Resets the style enumerator.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator.Dispose">
            <summary>
            Stops listening to style dispenser.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator.CurrentStyle">
            <summary>
            Gets or sets the current style.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator.ParentEnumerator">
            <summary>
            Gets the parent enumerator.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator.StylePredicate">
            <summary>
            Gets or sets a predicate that returns a value indicating whether a 
            style should be returned by this enumerator.
            </summary>
            <returns>A value indicating whether a style can be returned by this
            enumerator.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator.StyleDispenser">
            <summary>
            Gets the style dispenser that dispensed this enumerator.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator.Current">
            <summary>
            Gets the current style.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current style.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.StyleEnumerator.ShouldRetrieveFromParentEnumerator">
            <summary>
            Gets a value indicating whether a enumerator should return styles
            from its parent enumerator.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap">
            <summary>
            A class used to calculate axis range. 
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap.#ctor">
            <summary>
            Initializes a new instance of the ValueMarginCoordinateAndOverlap 
            class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap.ValueMargin">
            <summary>
            Gets or sets the value margin object.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap.Coordinate">
            <summary>
            Gets or sets the coordinate.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap.LeftOverlap">
            <summary>
            Gets or sets the left overlap.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ValueMarginCoordinateAndOverlap.RightOverlap">
            <summary>
            Gets or sets the right overlap.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2">
            <summary>
            Implements a left-leaning red-black tree.
            </summary>
            <remarks>
            Based on the research paper "Left-leaning Red-Black Trees"
            by Robert Sedgewick. More information available at:
            http://www.cs.princeton.edu/~rs/talks/LLRB/RedBlack.pdf
            http://www.cs.princeton.edu/~rs/talks/LLRB/08Penn.pdf
            </remarks>
            <typeparam name="TKey">Type of keys.</typeparam>
            <typeparam name="TValue">Type of values.</typeparam>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2._keyComparison">
            <summary>
            Stores the key comparison function.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2._valueComparison">
            <summary>
            Stores the value comparison function.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2._rootNode">
            <summary>
            Stores the root node of the tree.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.#ctor(System.Comparison{`0})">
            <summary>
            Initializes a new instance of the LeftLeaningRedBlackTree class implementing a normal dictionary.
            </summary>
            <param name="keyComparison">The key comparison function.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.#ctor(System.Comparison{`0},System.Comparison{`1})">
            <summary>
            Initializes a new instance of the LeftLeaningRedBlackTree class implementing an ordered multi-dictionary.
            </summary>
            <param name="keyComparison">The key comparison function.</param>
            <param name="valueComparison">The value comparison function.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Add(`0,`1)">
            <summary>
            Adds a key/value pair to the tree.
            </summary>
            <param name="key">Key to add.</param>
            <param name="value">Value to add.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Remove(`0)">
            <summary>
            Removes a key (and its associated value) from a normal (non-multi) dictionary.
            </summary>
            <param name="key">Key to remove.</param>
            <returns>True if key present and removed.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Remove(`0,`1)">
            <summary>
            Removes a key/value pair from the tree.
            </summary>
            <param name="key">Key to remove.</param>
            <param name="value">Value to remove.</param>
            <returns>True if key/value present and removed.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Clear">
            <summary>
            Removes all nodes in the tree.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.GetKeys">
            <summary>
            Gets a sorted list of keys in the tree.
            </summary>
            <returns>Sorted list of keys.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.GetValueForKey(`0)">
            <summary>
            Gets the value associated with the specified key in a normal (non-multi) dictionary.
            </summary>
            <param name="key">Specified key.</param>
            <returns>Value associated with the specified key.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.GetValuesForKey(`0)">
            <summary>
            Gets a sequence of the values associated with the specified key.
            </summary>
            <param name="key">Specified key.</param>
            <returns>Sequence of values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.GetValuesForAllKeys">
            <summary>
            Gets a sequence of all the values in the tree.
            </summary>
            <returns>Sequence of all values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.IsRed(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node)">
            <summary>
            Returns true if the specified node is red.
            </summary>
            <param name="node">Specified node.</param>
            <returns>True if specified node is red.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Add(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node,`0,`1)">
            <summary>
            Adds the specified key/value pair below the specified root node.
            </summary>
            <param name="node">Specified node.</param>
            <param name="key">Key to add.</param>
            <param name="value">Value to add.</param>
            <returns>New root node.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Remove(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node,`0,`1)">
            <summary>
            Removes the specified key/value pair from below the specified node.
            </summary>
            <param name="node">Specified node.</param>
            <param name="key">Key to remove.</param>
            <param name="value">Value to remove.</param>
            <returns>True if key/value present and removed.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.FlipColor(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node)">
            <summary>
            Flip the colors of the specified node and its direct children.
            </summary>
            <param name="node">Specified node.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.RotateLeft(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node)">
            <summary>
            Rotate the specified node "left".
            </summary>
            <param name="node">Specified node.</param>
            <returns>New root node.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.RotateRight(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node)">
            <summary>
            Rotate the specified node "right".
            </summary>
            <param name="node">Specified node.</param>
            <returns>New root node.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.MoveRedLeft(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node)">
            <summary>
            Moves a red node from the right child to the left child.
            </summary>
            <param name="node">Parent node.</param>
            <returns>New root node.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.MoveRedRight(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node)">
            <summary>
            Moves a red node from the left child to the right child.
            </summary>
            <param name="node">Parent node.</param>
            <returns>New root node.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.DeleteMinimum(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node)">
            <summary>
            Deletes the minimum node under the specified node.
            </summary>
            <param name="node">Specified node.</param>
            <returns>New root node.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.FixUp(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node)">
            <summary>
            Maintains invariants by adjusting the specified nodes children.
            </summary>
            <param name="node">Specified node.</param>
            <returns>New root node.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.GetNodeForKey(`0)">
            <summary>
            Gets the (first) node corresponding to the specified key.
            </summary>
            <param name="key">Key to search for.</param>
            <returns>Corresponding node or null if none found.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.GetExtreme``1(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node,System.Func{System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node,System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node},System.Func{System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node,``0})">
            <summary>
            Gets an extreme (ex: minimum/maximum) value.
            </summary>
            <typeparam name="T">Type of value.</typeparam>
            <param name="node">Node to start from.</param>
            <param name="successor">Successor function.</param>
            <param name="selector">Selector function.</param>
            <returns>Extreme value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Traverse``1(System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node,System.Func{System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node,System.Boolean},System.Func{System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree{`0,`1}.Node,``0})">
            <summary>
            Traverses a subset of the sequence of nodes in order and selects the specified nodes.
            </summary>
            <typeparam name="T">Type of elements.</typeparam>
            <param name="node">Starting node.</param>
            <param name="condition">Condition method.</param>
            <param name="selector">Selector method.</param>
            <returns>Sequence of selected nodes.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.KeyAndValueComparison(`0,`1,`0,`1)">
            <summary>
            Compares the specified keys (primary) and values (secondary).
            </summary>
            <param name="leftKey">The left key.</param>
            <param name="leftValue">The left value.</param>
            <param name="rightKey">The right key.</param>
            <param name="rightValue">The right value.</param>
            <returns>CompareTo-style results: -1 if left is less, 0 if equal, and 1 if greater than right.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.IsMultiDictionary">
            <summary>
            Gets a value indicating whether the tree is acting as an ordered multi-dictionary.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Count">
            <summary>
            Gets the count of key/value pairs in the tree.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.MinimumKey">
            <summary>
            Gets the minimum key in the tree.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.MaximumKey">
            <summary>
            Gets the maximum key in the tree.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.MinimumValue">
            <summary>
            Gets the minimum key's minimum value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.MaximumValue">
            <summary>
            Gets the maximum key's maximum value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Node">
            <summary>
            Represents a node of the tree.
            </summary>
            <remarks>
            Using fields instead of properties drops execution time by about 40%.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Node.Key">
            <summary>
            Gets or sets the node's key.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Node.Value">
            <summary>
            Gets or sets the node's value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Node.Left">
            <summary>
            Gets or sets the left node.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Node.Right">
            <summary>
            Gets or sets the right node.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Node.IsBlack">
            <summary>
            Gets or sets the color of the node.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Collections.LeftLeaningRedBlackTree`2.Node.Siblings">
            <summary>
            Gets or sets the number of "siblings" (nodes with the same key/value).
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Collections.MultipleDictionary`2">
            <summary>
            Implements a dictionary that can store multiple values for the same key.
            </summary>
            <typeparam name="TKey">Type for keys.</typeparam>
            <typeparam name="TValue">Type for values.</typeparam>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.MultipleDictionary`2.#ctor">
            <summary>
            Initializes a new instance of the MultipleDictionary class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.MultipleDictionary`2.#ctor(System.Boolean,System.Collections.Generic.IEqualityComparer{`0},System.Collections.Generic.IEqualityComparer{`1})">
            <summary>
            Initializes a new instance of the MultipleDictionary class.
            </summary>
            <param name="allowDuplicateValues">The parameter is not used.</param>
            <param name="keyEqualityComparer">The parameter is not used.</param>
            <param name="valueEqualityComparer">The parameter is not used.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.MultipleDictionary`2.Add(`0,`1)">
            <summary>
            Adds a key/value pair to the dictionary.
            </summary>
            <param name="key">Key to add.</param>
            <param name="value">Value to add.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.MultipleDictionary`2.Remove(`0,`1)">
            <summary>
            Removes a key/value pair from the dictionary.
            </summary>
            <param name="key">Key to remove.</param>
            <param name="value">Value to remove.</param>
            <returns>True if the value was present and removed.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.MultipleDictionary`2.Clear">
            <summary>
            Clears the items in the dictionary.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Collections.MultipleDictionary`2.BinaryTree">
            <summary>
            Gets or sets the BinaryTree instance used to store the dictionary values.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Collections.MultipleDictionary`2.Count">
            <summary>
            Gets the count of values in the dictionary.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Collections.MultipleDictionary`2.Item(`0)">
            <summary>
            Returns the collection of values corresponding to a key.
            </summary>
            <param name="key">Specified key.</param>
            <returns>Collection of values.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Collections.OrderedMultipleDictionary`2">
            <summary>
            Implements a dictionary that can store multiple values for the same key and sorts the values.
            </summary>
            <typeparam name="TKey">Type for keys.</typeparam>
            <typeparam name="TValue">Type for values.</typeparam>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.OrderedMultipleDictionary`2.#ctor(System.Boolean,System.Comparison{`0},System.Comparison{`1})">
            <summary>
            Initializes a new instance of the MultipleDictionary class.
            </summary>
            <param name="allowDuplicateValues">The parameter is not used.</param>
            <param name="keyComparison">Key comparison class.</param>
            <param name="valueComparison">Value comparison class.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.OrderedMultipleDictionary`2.GetKeyRange">
            <summary>
            Gets a Range corresponding to the keys in the dictionary.
            </summary>
            <returns>Range of keys.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.OrderedMultipleDictionary`2.GetLargestAndSmallestValues">
            <summary>
            Gets the largest and smallest key's extreme values from the dictionary.
            </summary>
            <returns>Tuple of the largest and smallest values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.OrderedMultipleDictionary`2.GetEnumerator">
            <summary>
            Gets an enumerator for the values in the dictionary.
            </summary>
            <returns>Enumerator for values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Collections.OrderedMultipleDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator for the values in the dictionary.
            </summary>
            <returns>Enumerator for the values.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.GenericEqualityComparer`1">
            <summary>
            A generic equality comparer.
            </summary>
            <typeparam name="T">The type of the objects being compared.</typeparam>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.GenericEqualityComparer`1.#ctor(System.Func{`0,`0,System.Boolean},System.Func{`0,System.Int32})">
            <summary>
            Initializes a new instance of the GenericEqualityComparer class.
            </summary>
            <param name="equalityFunction">A function which determines whether 
            two items are equal.</param>
            <param name="hashCodeFunction">A function that returns a hash code 
            for an object.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.GenericEqualityComparer`1.Equals(`0,`0)">
            <summary>
            A function which determines whether two items are equal.
            </summary>
            <param name="x">The left object.</param>
            <param name="y">The right object.</param>
            <returns>A value indicating whether the objects. are equal.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.GenericEqualityComparer`1.GetHashCode(`0)">
            <summary>
            A function that returns a hash code for an object.
            </summary>
            <param name="obj">The object to returns a hash code for.</param>
            <returns>The hash code for the object.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.GenericEqualityComparer`1.EqualityFunction">
            <summary>
            Gets or sets a function which determines whether two items are equal.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.GenericEqualityComparer`1.HashCodeFunction">
            <summary>
            Gets or sets a function that returns a hash code for an object.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.BubbleSeries">
            <summary>
            Represents a control that contains a data series to be rendered in X/Y 
            line format.  A third binding determines the size of the data point.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.MaximumBubbleSizeAsRatioOfSmallestDimension">
            <summary>
            The maximum bubble size as a ratio of the smallest dimension.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.BubbleSeries._sizeValueBinding">
            <summary>
            The binding used to identify the size value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.BubbleSeries._rangeOfActualSizeValues">
            <summary>
            Stores the range of ActualSize values for the BubbleDataPoints.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.#ctor">
            <summary>
            Initializes a new instance of the bubble series.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.CreateDataPoint">
            <summary>
            Creates a new instance of bubble data point.
            </summary>
            <returns>A new instance of bubble data point.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.GetStyleEnumeratorFromHost">
            <summary>
            Returns the style enumerator used to retrieve a style to use for 
            all data points.
            </summary>
            <returns>The style enumerator used to retrieve a style to use for 
            all data points.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.GetAxes(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Acquire a horizontal linear axis and a vertical linear axis.
            </summary>
            <param name="firstDataPoint">The first data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.PrepareDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Object)">
            <summary>
            Prepares a bubble data point by binding the size value binding to
            the size property.
            </summary>
            <param name="dataPoint">The data point to prepare.</param>
            <param name="dataContext">The data context of the data point.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.AttachEventHandlersToDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Attaches size change and actual size change event handlers to the
            data point.
            </summary>
            <param name="dataPoint">The data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.DetachEventHandlersFromDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Detaches size change and actual size change event handlers from the
            data point.
            </summary>
            <param name="dataPoint">The data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.BubbleDataPointActualSizePropertyChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Updates all data points when the actual size property of a data 
            point changes.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.BubbleDataPointSizePropertyChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Animates the value of the ActualSize property to the size property
            when it changes.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.OnBeforeUpdateDataPoints">
            <summary>
            Calculates the range of ActualSize values of all active BubbleDataPoints.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.UpdateDataPoints(System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Ensure that if any data points are updated, all data points are 
            updated.
            </summary>
            <param name="dataPoints">The data points to update.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.UpdateDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Updates the data point's visual representation.
            </summary>
            <param name="dataPoint">The data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.OnAfterUpdateDataPoints">
            <summary>
            Updates the value margins after all data points are updated.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.DependentRangeAxisProperty">
            <summary>
            Identifies the DependentRangeAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.OnDependentRangeAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="d">BubbleSeries that changed its DependentRangeAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.OnDependentRangeAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IRangeAxis)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.IndependentAxisProperty">
            <summary>
            Identifies the IndependentAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.OnIndependentAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="d">BubbleSeries that changed its IndependentAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.OnIndependentAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.GetValueMargins(System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer)">
            <summary>
            The margins required for each value.
            </summary>
            <param name="consumer">The consumer to return the value margins for.</param>
            <returns>A sequence of margins for each value.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.SizeValueBinding">
            <summary>
            Gets or sets the Binding to use for identifying the size of the bubble.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.SizeValuePath">
            <summary>
            Gets or sets the Binding Path to use for identifying the size of the bubble.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.ActualDependentRangeAxis">
            <summary>
            Gets the dependent axis as a range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.DependentRangeAxis">
            <summary>
            Gets or sets the dependent range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.ActualIndependentAxis">
            <summary>
            Gets the independent axis as a range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.BubbleSeries.IndependentAxis">
            <summary>
            Gets or sets independent range axis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1">
            <summary>
            This series serves as the base class for the column and bar series.
            </summary>
            <typeparam name="T">The type of the data point.</typeparam>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1._categoriesWithMultipleDataPoints">
            <summary>
            Keeps a list of DataPoints that share the same category.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.GetDataPointGroup(System.Object)">
            <summary>
            Returns the group of data points in a given category.
            </summary>
            <param name="category">The category for which to return the data
            point group.</param>
            <returns>The group of data points in a given category.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.GetIsDataPointGrouped(System.Object)">
            <summary>
            Returns a value indicating whether a data point corresponding to
            a category is grouped.
            </summary>
            <param name="category">The category.</param>
            <returns>A value indicating whether a data point corresponding to
            a category is grouped.</returns>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1._dataPointlength">
            <summary>
            The length of each data point.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.#ctor">
            <summary>
            Initializes a new instance of the ColumnBarBaseSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.OnBeforeUpdateDataPoints">
            <summary>
            Method run before DataPoints are updated.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.GetStyleEnumeratorFromHost">
            <summary>
            Returns the style enumerator used to retrieve a style to use for 
            all data points.
            </summary>
            <returns>The style enumerator used to retrieve a style to use for 
            all data points.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.OnDataPointActualDependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.IComparable,System.IComparable)">
            <summary>
            Updates a data point when its actual dependent value has changed.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.RedrawOtherSeries(System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            Redraws other column series to assure they allocate the right amount
            of space for their columns.
            </summary>
            <param name="seriesHost">The series host to update.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.OnDataPointsChanged(System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint},System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Called after data points have been loaded from the items source.
            </summary>
            <param name="newDataPoints">New active data points.</param>
            <param name="oldDataPoints">Old inactive data points.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.OnSeriesHostPropertyChanged(System.Windows.Controls.DataVisualization.Charting.ISeriesHost,System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            Redraw other column series when removed from a series host.
            </summary>
            <param name="oldValue">The old value of the series host property.</param>
            <param name="newValue">The new value of the series host property.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.CreateDataPoint">
            <summary>
            Creates the bar data point.
            </summary>
            <returns>A bar data point.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.CalculateDataPointLength">
            <summary>
            Calculates the length of the data points.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.GetValueMargins(System.Windows.Controls.DataVisualization.Charting.IValueMarginConsumer)">
            <summary>
            Returns the value margins for a given axis.
            </summary>
            <param name="consumer">The axis to retrieve the value margins for.
            </param>
            <returns>A sequence of value margins.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.GetCategoryRange(System.Object)">
            <summary>
            Gets a range in which to render a data point.
            </summary>
            <param name="category">The category to retrieve the range for.
            </param>
            <returns>The range in which to render a data point.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.ActualDependentRangeAxis">
            <summary>
            Gets the dependent axis as a range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.ActualIndependentAxis">
            <summary>
            Gets the independent axis as a category axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.System#Windows#Controls#DataVisualization#Charting#IAnchoredToOrigin#AnchoredAxis">
            <summary>
            Gets the axis to which the data is anchored.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.ObjectPool`1">
            <summary>
            A pool of objects that can be reused.
            </summary>
            <typeparam name="T">The type of object in the pool.</typeparam>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.ObjectPool`1.DefaultMinimumObjectsInThePool">
            <summary>
            The default minimum number objects to keep in the pool.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.ObjectPool`1._createObject">
            <summary>
            A function which creates objects.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.ObjectPool`1._objects">
            <summary>
            The list of objects.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.ObjectPool`1.currentIndex">
            <summary>
            The index of the current item in the list.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.ObjectPool`1.minimumObjectsInThePool">
            <summary>
            The minimum number of objects to keep in the pool.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObjectPool`1.#ctor(System.Int32,System.Func{`0})">
            <summary>
            Initializes a new instance of the ObjectPool class.
            </summary>
            <param name="minimumObjectsInThePool">The minimum number of objects
            to keep in the pool.</param>
            <param name="createObject">The function that creates the objects.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObjectPool`1.#ctor(System.Func{`0})">
            <summary>
            Initializes a new instance of the ObjectPool class.
            </summary>
            <param name="createObject">The function that creates the objects.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObjectPool`1.ForEachRemaining(System.Action{`0})">
            <summary>
            Performs an operation on the subsequent, already-created objects
            in the pool.
            </summary>
            <param name="action">The action to perform on the remaining objects.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObjectPool`1.Next">
            <summary>
            Creates a new object or reuses an existing object in the pool.
            </summary>
            <returns>A new or existing object in the pool.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObjectPool`1.Reset">
            <summary>
            Resets the pool of objects.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObjectPool`1.Done">
            <summary>
            Finishes the object creation process.
            </summary>
            <remarks>
            If there are substantially more remaining objects in the pool those
            objects may be removed.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObjectPool`1.Clear">
            <summary>
            Removes the objects from the pool.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.DependencyPropertyAnimationHelper">
            <summary>
            Represents a control that can animate the transitions between its specified
            dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.DependencyPropertyAnimationHelper.KeyFramesPerSecond">
            <summary>
            Number of key frames per second to generate the date time animations.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.DependencyPropertyAnimationHelper.StoryboardKeyPattern">
            <summary>
            The pattern used to ensure unique keys for the storyboards stored in
            a framework element's resource dictionary.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.DependencyPropertyAnimationHelper.GetStoryboardKey(System.String)">
            <summary>
            Returns a unique key for a storyboard.
            </summary>
            <param name="propertyPath">The property path of the property that 
            the storyboard animates.</param>
            <returns>A unique key for a storyboard.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.DependencyPropertyAnimationHelper.BeginAnimation(System.Windows.FrameworkElement,System.Windows.DependencyProperty,System.String,System.Object,System.TimeSpan,System.Windows.Media.Animation.IEasingFunction)">
            <summary>
            Starts animating a dependency property of a framework element to a 
            target value.
            </summary>
            <param name="target">The element to animate.</param>
            <param name="animatingDependencyProperty">The dependency property to
            animate.</param>
            <param name="propertyPath">The path of the dependency property to 
            animate.</param>
            <param name="targetValue">The value to animate the dependency
            property to.</param>
            <param name="timeSpan">The duration of the animation.</param>
            <param name="easingFunction">The easing function to uses to
            transition the data points.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.DependencyPropertyAnimationHelper.CreateStoryboard(System.Windows.FrameworkElement,System.Windows.DependencyProperty,System.String,System.Object@,System.TimeSpan,System.Windows.Media.Animation.IEasingFunction)">
            <summary>
            Creates a story board that animates a dependency property to a 
            value.
            </summary>
            <param name="target">The element that is the target of the 
            storyboard.</param>
            <param name="animatingDependencyProperty">The dependency property
            to animate.</param>
            <param name="propertyPath">The property path of the dependency
            property to animate.</param>
            <param name="toValue">The value to animate the dependency property
            to.</param>
            <param name="durationTimeSpan">The duration of the animation.
            </param>
            <param name="easingFunction">The easing function to use to
            transition the data points.</param>
            <returns>The story board that animates the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.GridExtensions">
            <summary>
            A set of extension methods for the Grid container.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.GridExtensions.Mirror(System.Windows.Controls.Grid,System.Windows.Controls.Orientation)">
            <summary>
            Mirrors the grid either horizontally or vertically.
            </summary>
            <param name="grid">The grid to mirror.</param>
            <param name="orientation">The orientation to mirror the grid along.
            </param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.LayoutTransformControl">
            <summary>
            Control that implements support for transformations as if applied by
            LayoutTransform (which does not exist in Silverlight).
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.LayoutTransformControl.AcceptableDelta">
            <summary>
            Value used to work around double arithmetic rounding issues in 
            Silverlight.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.LayoutTransformControl.DecimalsAfterRound">
            <summary>
            Value used to work around double arithmetic rounding issues in 
            Silverlight.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.LayoutTransformControl.ContentProperty">
            <summary>
            Identifies the ContentProperty.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.LayoutTransformControl.TransformProperty">
            <summary>
            Identifies the TransformProperty dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.LayoutTransformControl._layoutRoot">
            <summary>
            Host panel for Child element.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.LayoutTransformControl._matrixTransform">
            <summary>
            RenderTransform/MatrixTransform applied to layout root.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.LayoutTransformControl._transformation">
            <summary>
            Transformation matrix corresponding to matrix transform.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.LayoutTransformControl._childActualSize">
            <summary>
            Actual DesiredSize of Child element.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.#ctor">
            <summary>
            Initializes a new instance of the LayoutTransformControl class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.OnApplyTemplate">
            <summary>
            Called whenever the control's template changes.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.ChildChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle changes to the child dependency property.
            </summary>
            <param name="o">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.OnChildChanged(System.Windows.FrameworkElement)">
            <summary>
            Updates content when the child property is changed.
            </summary>
            <param name="newContent">The new child.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.TransformChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Transform DependencyProperty.
            </summary>
            <param name="o">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.OnTransformChanged(System.Windows.Media.Transform)">
            <summary>
            Processes the transform when the transform is changed.
            </summary>
            <param name="newValue">The transform to process.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.TransformUpdated">
            <summary>
            Notifies the LayoutTransformControl that some aspect of its 
            Transform property has changed.
            </summary>
            <remarks>
            Call this to update the LayoutTransform in cases where 
            LayoutTransformControl wouldn't otherwise know to do so.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.ProcessTransform(System.Windows.Media.Transform)">
            <summary>
            Processes the current transform to determine the corresponding 
            matrix.
            </summary>
            <param name="transform">The transform to use to determine the 
            matrix.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.GetTransformMatrix(System.Windows.Media.Transform)">
            <summary>
            Walks the Transform and returns the corresponding matrix.
            </summary>
            <param name="transform">The transform to create a matrix for.
            </param>
            <returns>The matrix calculated from the transform.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Measure" pass of layout.
            </summary>
            <param name="availableSize">The available size that this element can
            give to child elements. Infinity can be specified as a value to 
            indicate that the element will size to whatever content is 
            available.</param>
            <returns>The size that this element determines it needs during 
            layout, based on its calculations of child element sizes.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of layout.
            </summary>
            <param name="finalSize">The final area within the parent that this 
            element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
            <remarks>
            Using the WPF paramater name finalSize instead of Silverlight's 
            finalSize for clarity.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.ComputeLargestTransformedSize(System.Windows.Size)">
            <summary>
            Computes the largest usable size after applying the transformation 
            to the specified bounds.
            </summary>
            <param name="arrangeBounds">The size to arrange within.</param>
            <returns>The size required.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.IsSizeSmaller(System.Windows.Size,System.Windows.Size)">
            <summary>
            Return true if Size a is smaller than Size b in either dimension.
            </summary>
            <param name="a">The left size.</param>
            <param name="b">The right size.</param>
            <returns>A value indicating whether the left size is smaller than
            the right.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.RoundMatrix(System.Windows.Media.Matrix,System.Int32)">
            <summary>
            Rounds the non-offset elements of a matrix to avoid issues due to 
            floating point imprecision.
            </summary>
            <param name="matrix">The matrix to round.</param>
            <param name="decimalsAfterRound">The number of decimals after the
            round.</param>
            <returns>The rounded matrix.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.RectTransform(System.Windows.Rect,System.Windows.Media.Matrix)">
            <summary>
            Implement Windows Presentation Foundation's Rect.Transform on 
            Silverlight.
            </summary>
            <param name="rectangle">The rectangle to transform.</param>
            <param name="matrix">The matrix to use to transform the rectangle.
            </param>
            <returns>The transformed rectangle.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.MatrixMultiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
            <summary>
            Implements Windows Presentation Foundation's Matrix.Multiply on 
            Silverlight.
            </summary>
            <param name="matrix1">The left matrix.</param>
            <param name="matrix2">The right matrix.</param>
            <returns>The product of the two matrices.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.LayoutTransformControl.MatrixHasInverse(System.Windows.Media.Matrix)">
            <summary>
            Implements Windows Presentation Foundation's Matrix.HasInverse on
            Silverlight.
            </summary>
            <param name="matrix">The matrix.</param>
            <returns>True if matrix has an inverse.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.LayoutTransformControl.Child">
            <summary>
            Gets or sets the single child of the LayoutTransformControl.
            </summary>
            <remarks>
            Corresponds to Windows Presentation Foundation's Decorator.Child 
            property.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.LayoutTransformControl.Transform">
            <summary>
            Gets or sets the Transform of the LayoutTransformControl.
            </summary>
            <remarks>
            Corresponds to UIElement.RenderTransform.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.ObservableCollectionListAdapter`1">
            <summary>
            An object that synchronizes changes in an observable collection to 
            a list.
            </summary>
            <typeparam name="T">The type of the objects in the collection.
            </typeparam>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.ObservableCollectionListAdapter`1._collection">
            <summary>
            The collection to synchronize with a list.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObservableCollectionListAdapter`1.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method that synchronizes the panel's child collection with the 
            contents of the observable collection when it changes.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObservableCollectionListAdapter`1.Populate">
            <summary>
            A method that populates a panel with the items in the collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ObservableCollectionListAdapter`1.ClearItems">
            <summary>
            Removes the items in the adapted list from the target list.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.ObservableCollectionListAdapter`1.Collection">
            <summary>
            Gets or sets the collection to synchronize with a list.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.ObservableCollectionListAdapter`1.TargetList">
            <summary>
            Gets or sets the panel to synchronize with the collection.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.OrientedPanel">
            <summary>
            A panel that plots elements on a one dimensional plane.  In order to 
            minimize collisions it moves elements further and further from the edge 
            of the plane based on their priority.  Elements that have the same
            priority level are always the same distance from the edge.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.OrientedPanel.ActualMinimumDistanceBetweenChildrenProperty">
            <summary>
            Identifies the ActualMinimumDistanceBetweenChildren dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.OrientedPanel.MinimumDistanceBetweenChildrenProperty">
            <summary>
            Identifies the MinimumDistanceBetweenChildren dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnMinimumDistanceBetweenChildrenPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinimumDistanceBetweenChildrenProperty property changed handler.
            </summary>
            <param name="d">OrientedPanel that changed its MinimumDistanceBetweenChildren.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnMinimumDistanceBetweenChildrenPropertyChanged(System.Double,System.Double)">
            <summary>
            MinimumDistanceBetweenChildrenProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.OrientedPanel.ActualLengthProperty">
            <summary>
            Identifies the ActualLength dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.GetCenterCoordinate(System.Windows.UIElement)">
            <summary>
            Gets the value of the CenterCoordinate attached property for a specified UIElement.
            </summary>
            <param name="element">The UIElement from which the property value is read.</param>
            <returns>The CenterCoordinate property value for the UIElement.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.SetCenterCoordinate(System.Windows.UIElement,System.Double)">
            <summary>
            Sets the value of the CenterCoordinate attached property to a specified UIElement.
            </summary>
            <param name="element">The UIElement to which the attached property is written.</param>
            <param name="value">The needed CenterCoordinate value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.OrientedPanel.CenterCoordinateProperty">
            <summary>
            Identifies the CenterCoordinate dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnCenterCoordinatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CenterCoordinateProperty property changed handler.
            </summary>
            <param name="dependencyObject">UIElement that changed its CenterCoordinate.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.OrientedPanel.OffsetPaddingProperty">
            <summary>
            Identifies the OffsetPadding dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnOffsetPaddingPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            OffsetPaddingProperty property changed handler.
            </summary>
            <param name="d">OrientedPanel that changed its OffsetPadding.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnOffsetPaddingPropertyChanged(System.Double,System.Double)">
            <summary>
            OffsetPaddingProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.GetPriority(System.Windows.UIElement)">
            <summary>
            Gets the value of the Priority attached property for a specified UIElement.
            </summary>
            <param name="element">The UIElement from which the property value is read.</param>
            <returns>The Priority property value for the UIElement.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.SetPriority(System.Windows.UIElement,System.Int32)">
            <summary>
            Sets the value of the Priority attached property to a specified UIElement.
            </summary>
            <param name="element">The UIElement to which the attached property is written.</param>
            <param name="value">The needed Priority value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.OrientedPanel.PriorityProperty">
            <summary>
            Identifies the Priority dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnPriorityPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PriorityProperty property changed handler.
            </summary>
            <param name="dependencyObject">UIElement that changed its Priority.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.OrientedPanel.IsInvertedProperty">
            <summary>
            Identifies the IsInverted dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnIsInvertedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsInvertedProperty property changed handler.
            </summary>
            <param name="d">OrientedPanel that changed its IsInverted.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnIsInvertedPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            IsInvertedProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.OrientedPanel.IsReversedProperty">
            <summary>
            Identifies the IsReversed dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnIsReversedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsReversedProperty property changed handler.
            </summary>
            <param name="d">OrientedPanel that changed its IsReversed.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnIsReversedPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            IsReversedProperty property changed handler.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.OrientedPanel.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnOrientationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            OrientationProperty property changed handler.
            </summary>
            <param name="d">OrientedPanel that changed its Orientation.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.OnOrientationPropertyChanged(System.Windows.Controls.Orientation)">
            <summary>
            OrientationProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.#ctor">
            <summary>
            Instantiates a new instance of the OrientedPanel class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.UpdateActualLength">
            <summary>
            Updates the actual length property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.GetRanges(System.Collections.Generic.IEnumerable{System.Windows.UIElement},System.Func{System.Windows.UIElement,System.Double})">
            <summary>
            Returns a sequence of ranges for a given sequence of children and a
            length selector.
            </summary>
            <param name="children">A sequence of children.</param>
            <param name="lengthSelector">A function that returns a length given
            a UIElement.</param>
            <returns>A sequence of ranges.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures children and determines necessary size.
            </summary>
            <param name="availableSize">The available size.</param>
            <returns>The necessary size.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges items according to position and priority.
            </summary>
            <param name="finalSize">The final size of the panel.</param>
            <returns>The final size of the control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.OrientedPanel.GetCorrectedDesiredSize(System.Windows.UIElement)">
            <summary>
            Gets the "corrected" DesiredSize (for Line instances); one that is
            more consistent with how the elements actually render.
            </summary>
            <param name="element">UIElement to get the size for.</param>
            <returns>Corrected size.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.OrientedPanel.ActualMinimumDistanceBetweenChildren">
            <summary>
            Gets the actual minimum distance between children.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.OrientedPanel.MinimumDistanceBetweenChildren">
            <summary>
            Gets or sets the minimum distance between children.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.OrientedPanel.ActualLength">
            <summary>
            Gets the actual length of the panel.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.OrientedPanel.OffsetPadding">
            <summary>
            Gets or sets the amount of offset padding to add between items.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.OrientedPanel.IsInverted">
            <summary>
            Gets or sets a value indicating whether the panel is inverted.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.OrientedPanel.IsReversed">
            <summary>
            Gets or sets a value indicating whether the direction is reversed. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.OrientedPanel.Orientation">
            <summary>
            Gets or sets the orientation of the panel.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.OrientedPanel.PriorityOffsets">
            <summary>
            Gets or sets the offset of the edge to use for each priority group.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.StoryboardQueue">
            <summary>
            Represents a storyboard queue that plays storyboards in sequence.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.StoryboardQueue._storyBoards">
            <summary>
            A queue of the storyboards.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.StoryboardQueue.Enqueue(System.Windows.Media.Animation.Storyboard,System.EventHandler)">
            <summary>
            Accepts a new storyboard to play in sequence.
            </summary>
            <param name="storyBoard">The storyboard to play.</param>
            <param name="completedAction">An action to execute when the 
            storyboard completes.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.StoryboardQueue.Dequeue">
            <summary>
            Removes the next storyboard in the queue and plays it.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.AxisOrientation">
            <summary>
            Specifies the orientation of an axis.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisOrientation.None">
            <summary>
            Orientation is automatically set.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisOrientation.X">
            <summary>
            Indicates the axis plots along the X axis.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisOrientation.Y">
            <summary>
            Indicates the axis plots along the Y axis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType">
            <summary>
            Specifies an interval type.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Auto">
            <summary>
            Automatically determined by the ISeriesHost control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Number">
            <summary>
            The interval type is numerical.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Years">
            <summary>
            The interval type is years.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Months">
            <summary>
            The interval type is months.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Weeks">
            <summary>
            The interval type is weeks.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Days">
            <summary>
            The interval type is days.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Hours">
            <summary>
            The interval type is hours.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Minutes">
            <summary>
            The interval type is minutes.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Seconds">
            <summary>
            The interval type is seconds.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AxisIntervalType.Milliseconds">
            <summary>
            The interval type is milliseconds.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1">
            <summary>
            Converts a string or base value to a <see cref="T:System.Nullable"/> value.
            </summary>
            <typeparam name="T">The type should be value type.</typeparam>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the 
            specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.
            </param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            Returns true if this converter can perform the conversion; 
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the 
            specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.
            </param>
            <param name="destinationType">The type you want to convert to.
            </param>
            <returns>
            Returns true if this converter can perform the conversion; 
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.
            </param>
            <param name="culture">The 
            <see cref="T:System.Globalization.CultureInfo"/> to use as the 
            current culture.</param>
            <param name="value">The value to convert to the type of this 
            converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts from the specified value to the a specified type from the
            type of this converter.
            </summary>
            <param name="context">An object that provides a format context.
            </param>
            <param name="culture">The 
            <see cref="T:System.Globalization.CultureInfo"/> to use as the 
            current culture.</param>
            <param name="value">The value to convert to the type of this 
            converter.</param>
            <param name="destinationType">The type of convert the value to
            .</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.Chart">
            <summary>
            Represents a control that displays a Chart.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.ChartAreaName">
            <summary>
            Specifies the name of the ChartArea TemplatePart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.LegendName">
            <summary>
            Specifies the name of the legend TemplatePart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart._legendChildrenLegendAdapter">
            <summary>
            Stores the legend children.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart._chartAreaChildrenListAdapter">
            <summary>
            An adapter that synchronizes changes to the ChartAreaChildren
            property to the ChartArea panel's children collection.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart._axes">
            <summary>
            Stores the collection of Axes in the Chart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart._foregroundElements">
            <summary>
            The collection of foreground elements.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart._backgroundElements">
            <summary>
            The collection of background elements.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart._edgeAxes">
            <summary>
            Axes arranged along the edges.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart._series">
            <summary>
            Stores the collection of Series displayed by the Chart.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.ChartAreaStyleProperty">
            <summary>
            Identifies the ChartAreaStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.LegendStyleProperty">
            <summary>
            Identifies the LegendStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.LegendTitleProperty">
            <summary>
            Identifies the LegendTitle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.PlotAreaStyleProperty">
            <summary>
            Identifies the PlotAreaStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.StylePaletteProperty">
            <summary>
            Identifies the StylePalette dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.OnStylePalettePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the StylePalette property is changed.
            </summary>
            <param name="d">Chart that contains the changed StylePalette.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.OnStylePalettePropertyChanged(System.Collections.ObjectModel.Collection{System.Windows.Style})">
            <summary>
            Called when the value of the StylePalette property is changed.
            </summary>
            <param name="newValue">The new value for the StylePalette.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart.TitleStyleProperty">
            <summary>
            Identifies the TitleStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.#ctor">
            <summary>
            Initializes a new instance of the Chart class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.GetAutoAxisLocation(System.Windows.Controls.DataVisualization.Charting.Axis)">
            <summary>
            Determines the location of an axis based on the existing axes in
            the chart.
            </summary>
            <param name="axis">The axis to determine the location of.</param>
            <returns>The location of the axis.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.AddAxisToChartArea(System.Windows.Controls.DataVisualization.Charting.Axis)">
            <summary>
            Adds an axis to the ISeriesHost area.
            </summary>
            <param name="axis">The axis to add to the ISeriesHost area.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.AxisOrientationChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Windows.Controls.DataVisualization.Charting.AxisOrientation})">
            <summary>
            Rebuilds the chart area if an axis orientation is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.SetEdge(System.Windows.Controls.DataVisualization.Charting.Axis)">
            <summary>
            Sets the Edge property of an axis based on its location and
            orientation.
            </summary>
            <param name="axis">The axis to set the edge property of.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.AxisLocationChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Windows.Controls.DataVisualization.Charting.AxisLocation})">
            <summary>
            Rebuild the chart area if an axis location is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.AddSeriesToPlotArea(System.Windows.Controls.DataVisualization.Charting.Series)">
            <summary>
            Adds a series to the plot area and injects chart services.
            </summary>
            <param name="series">The series to add to the plot area.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.OnApplyTemplate">
            <summary>
            Builds the visual tree for the Chart control when a new template
            is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.ActualAxesCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Ensures that ISeriesHost is in a consistent state when axes collection is
            changed.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.Refresh">
            <summary>
            Causes the Chart to refresh the data obtained from its data source
            and render the resulting series.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.RemoveAxisFromChartArea(System.Windows.Controls.DataVisualization.Charting.Axis)">
            <summary>
            Removes an axis from the Chart area.
            </summary>
            <param name="axis">The axis to remove from the ISeriesHost area.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.RemoveSeriesFromPlotArea(System.Windows.Controls.DataVisualization.Charting.Series)">
            <summary>
            Removes a series from the plot area.
            </summary>
            <param name="series">The series to remove from the plot area.
            </param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.OnSeriesCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the ObservableCollection.CollectionChanged property
            changes.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.GetStylesWhere(System.Func{System.Windows.Style,System.Boolean})">
            <summary>
            Returns a rotating enumerator of Style objects that coordinates with 
            the style dispenser object to ensure that no two enumerators are
            currently on the same style if possible.  If the style
            dispenser is reset or its collection of styles is changed then
            the enumerators will also be reset.
            </summary>
            <param name="stylePredicate">A predicate that returns a value
            indicating whether to return a style.</param>
            <returns>An enumerator of styles.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.ResetStyles">
            <summary>
            Resets the styles dispensed by the chart.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.OnChildSeriesGlobalSeriesIndexesInvalidated(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Method handles the event raised when a child series' global series
            indexes have changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.OnGlobalSeriesIndexesInvalidated(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Updates the global indexes of all descendents that require a global
            index.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.Chart.UpdateGlobalIndexes">
            <summary>
            Updates the global index property of all Series that track their
            global index.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.Chart._globalSeriesIndicesInvalidated">
            <summary>
            This field is used to track listeners to the
            GlobalSeriesIndexesInvalidated event.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.ChartAreaChildren">
            <summary>
            Gets or sets the chart area children collection.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.Axes">
            <summary>
            Gets or sets a collection of Axes in the Chart.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.System#Windows#Controls#DataVisualization#Charting#ISeriesHost#ForegroundElements">
            <summary>
            Gets the collection of foreground elements.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.System#Windows#Controls#DataVisualization#Charting#ISeriesHost#BackgroundElements">
            <summary>
            Gets the collection of background elements.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.InternalActualAxes">
            <summary>
            Gets or sets the axes that are currently in the chart.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.ActualAxes">
            <summary>
            Gets the actual axes displayed in the chart.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.ChartArea">
            <summary>
            Gets or sets the reference to the template's ChartArea.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.Legend">
            <summary>
            Gets or sets the reference to the Chart's Legend.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.Series">
            <summary>
            Gets or sets the collection of Series displayed by the Chart.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.ChartAreaStyle">
            <summary>
            Gets or sets the Style of the ISeriesHost's ChartArea.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.LegendItems">
            <summary>
            Gets the collection of legend items.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.LegendStyle">
            <summary>
            Gets or sets the Style of the ISeriesHost's Legend.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.LegendTitle">
            <summary>
            Gets or sets the Title content of the Legend.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.PlotAreaStyle">
            <summary>
            Gets or sets the Style of the ISeriesHost's PlotArea.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.StylePalette">
            <summary>
            Gets or sets a palette of styles used by the children of the ISeriesHost.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.StyleDispenser">
            <summary>
            Gets or sets an object that rotates through the palette.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.Title">
            <summary>
            Gets or sets the title displayed for the Chart.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.TitleStyle">
            <summary>
            Gets or sets the Style of the ISeriesHost's Title.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.System#Windows#Controls#DataVisualization#Charting#IRequireSeriesHost#SeriesHost">
            <summary>
            Gets or sets the Series host of the chart.
            </summary>
            <remarks>This will always return null.</remarks>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.System#Windows#Controls#DataVisualization#Charting#ISeriesHost#Axes">
            <summary>
            Gets the axes collection of the chart.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.Chart.System#Windows#Controls#DataVisualization#Charting#ISeriesHost#Series">
            <summary>
            Gets the Series collection of the chart.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.Chart.System#Windows#Controls#DataVisualization#Charting#ISeriesHost#GlobalSeriesIndexesInvalidated">
            <summary>
            This event is raised when global Series indices are invalidated.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.LegendItem">
            <summary>
            Represents an item used by a Series in the Legend of a Chart.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LegendItem.#ctor">
            <summary>
            Initializes a new instance of the LegendItem class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.AnimationSequence">
            <summary>
            Specifies the supported animation sequences.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AnimationSequence.Simultaneous">
            <summary>
            Animates all of the data points simultaneously.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AnimationSequence.FirstToLast">
            <summary>
            Animates the data points from first to last.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.AnimationSequence.LastToFirst">
            <summary>
            Animates the data points from last to first.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.DataPointState">
            <summary>
            Describes the state a data point is in.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointState.Created">
            <summary>
            Data point has been created.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointState.Showing">
            <summary>
            Data point is in the process of being revealed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointState.Normal">
            <summary>
            Data point is visible in the plot area.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointState.PendingRemoval">
            <summary>
            Data point is in the process of being removed from the plot area.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointState.Hiding">
            <summary>
            Data point is in the process of being hidden.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.DataPointState.Hidden">
            <summary>
            Data point is hidden.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.LineDataPoint">
            <summary>
            Represents a data point used for line series.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineDataPoint.#ctor">
            <summary>
            Initializes a new instance of the LineDataPoint class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.PieDataPoint">
            <summary>
            Represents a data point used for pie charts.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.SliceName">
            <summary>
            The name of the slice template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.GeometryProperty">
            <summary>
            Identifies the Geometry dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnGeometryPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the Geometry property changes.
            </summary>
            <param name="d">Control that changed its Geometry.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.GeometrySelectionProperty">
            <summary>
            Identifies the GeometrySelection dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.GeometryHighlightProperty">
            <summary>
            Identifies the GeometryHighlight dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.ActualOffsetRatioProperty">
            <summary>
            Identifies the ActualOffsetRatio dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnActualOffsetRatioPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the ActualOffsetRatioProperty property changes.
            </summary>
            <param name="d">PieDataPoint that changed its ActualOffsetRatio.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnActualOffsetRatioPropertyChanged(System.Double,System.Double)">
            <summary>
            Called when the value of the ActualOffsetRatioProperty property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.ActualRatioProperty">
            <summary>
            Identifies the ActualRatio dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnActualRatioPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the ActualRatioProperty property changes.
            </summary>
            <param name="d">PieDataPoint that changed its ActualRatio.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnActualRatioPropertyChanged(System.Double,System.Double)">
            <summary>
            Called when the value of the ActualRatioProperty property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.FormattedRatioProperty">
            <summary>
            Identifies the FormattedRatio dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OffsetRatioProperty">
            <summary>
            Identifies the OffsetRatio dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnOffsetRatioPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the OffsetRatioProperty property changes.
            </summary>
            <param name="d">PieDataPoint that changed its OffsetRatio.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnOffsetRatioPropertyChanged(System.Double,System.Double)">
            <summary>
            Called when the value of the OffsetRatioProperty property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.RatioProperty">
            <summary>
            Identifies the Ratio dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnRatioPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the RatioProperty property changes.
            </summary>
            <param name="d">PieDataPoint that changed its Ratio.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnRatioPropertyChanged(System.Double,System.Double)">
            <summary>
            Called when the value of the RatioProperty property changes.
            </summary>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.RatioStringFormatProperty">
            <summary>
            Identifies the RatioStringFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnRatioStringFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the RatioStringFormatProperty property changes.
            </summary>
            <param name="d">PieDataPoint that changed its RatioStringFormat.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnRatioStringFormatPropertyChanged(System.String)">
            <summary>
            Called when the value of the RatioStringFormatProperty property changes.
            </summary>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.#ctor">
            <summary>
            Initializes a new instance of the PieDataPoint.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnApplyTemplate">
            <summary>
            Builds the visual tree for the PieDataPoint when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.SliceElement_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.SliceElement_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.Geometry">
            <summary>
            Gets or sets the Geometry property which defines the shape of the
            data point.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.GeometrySelection">
            <summary>
            Gets or sets the Geometry which defines the shape of a point. The 
            GeometrySelection property is a copy of the Geometry property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.GeometryHighlight">
            <summary>
            Gets or sets the GeometryHighlight property which is a clone of the
            Geometry property.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.ActualOffsetRatioChanged">
            <summary>
            Occurs when the actual offset ratio of the pie data point changes.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.ActualOffsetRatio">
            <summary>
            Gets or sets the offset ratio that is displayed on the screen.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.ActualRatioChanged">
            <summary>
            An event raised when the actual ratio of the pie data point is
            changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.ActualRatio">
            <summary>
            Gets or sets the ratio displayed on the screen.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.FormattedRatio">
            <summary>
            Gets the Ratio with the value of the RatioStringFormat property applied.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OffsetRatioChanged">
            <summary>
            An event raised when the offset ratio of the pie data point is
            changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.OffsetRatio">
            <summary>
            Gets or sets the offset ratio of the pie data point.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.RatioChanged">
            <summary>
            An event raised when the ratio of the pie data point is
            changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.Ratio">
            <summary>
            Gets or sets the ratio of the total that the data point 
            represents.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.RatioStringFormat">
            <summary>
            Gets or sets the format string for the FormattedRatio property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieDataPoint.SliceElement">
            <summary>
            Gets or sets the element that represents the pie slice.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ScatterDataPoint">
            <summary>
            Represents a data point used for scatter series.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterDataPoint.#ctor">
            <summary>
            Initializes a new instance of the ScatterDataPoint class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.BarSeries">
            <summary>
            Represents a control that contains a data series to be rendered in bar format.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.BarSeries.DependentRangeAxisProperty">
            <summary>
            Identifies the DependentRangeAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BarSeries.OnDependentRangeAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="d">ColumnBarBaseSeries that changed its DependentRangeAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BarSeries.OnDependentRangeAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IRangeAxis)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.BarSeries.IndependentAxisProperty">
            <summary>
            Identifies the IndependentAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BarSeries.OnIndependentAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="d">ColumnBarBaseSeries that changed its IndependentAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BarSeries.OnIndependentAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BarSeries.#ctor">
            <summary>
            Initializes a new instance of the BarSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BarSeries.GetAxes(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Acquire a horizontal category axis and a vertical linear axis.
            </summary>
            <param name="firstDataPoint">The first data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.BarSeries.UpdateDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Updates each point.
            </summary>
            <param name="dataPoint">The data point to update.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.BarSeries.DependentRangeAxis">
            <summary>
            Gets or sets the dependent range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.BarSeries.IndependentAxis">
            <summary>
            Gets or sets the independent category axis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.StringFormatConverter">
            <summary>
            Converts a value to a string using a format string.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.StringFormatConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value to a string by formatting it.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="targetType">The target type of the conversion.</param>
            <param name="parameter">The format string.</param>
            <param name="culture">The culture to use for conversion.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.StringFormatConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value from a string to a target type.
            </summary>
            <param name="value">The value to convert to a string.</param>
            <param name="targetType">The target type of the conversion.</param>
            <param name="parameter">A parameter used during the conversion
            process.</param>
            <param name="culture">The culture to use for the conversion.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.StyleDispenserExtensions">
            <summary>
            Extensions methods for the IStyleDispenser interface.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.StyleDispenserExtensions.GetStylesWithTargetType(System.Windows.Controls.DataVisualization.IStyleDispenser,System.Type,System.Boolean)">
            <summary>
            Returns a style enumerator that returns styles with a specified 
            target type or styles with a target type that is an ancestor of the
            specified target type.
            </summary>
            <param name="dispenser">The style dispenser.</param>
            <param name="targetType">The target type.</param>
            <param name="takeAncestors">A value indicating whether to accept 
            ancestors of the target type.</param>
            <returns>A style enumerator.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.BindingExtractor">
            <summary>
            Helper class which can extract the value from a source object using a binding path. It 
            creates a Binding object based on the path, and calls SetBinding to a temporary 
            FrameworkElement (base class) to extract the value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.BindingExtractor.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.BindingExtractor.RetrieveProperty(System.Object,System.Windows.Data.Binding)">
            <summary>
            Returns the value of the given Binding when applied on the given object instance.
            It does that by making a copy of the binding, setting its source to be the object
            instance and the target to be the member Value property.
            </summary>
            <param name="instance">Object instance containing the property.</param>
            <param name="valueBinding">Binding to the property to be retrieved.</param>
            <returns>The value of the binding.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.BindingExtractor.Value">
            <summary>
            Gets or sets a generic Value which will be the target of the binding.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.InterpolationMode">
            <summary>
            Specifies the supported interpolation modes.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.InterpolationMode.LeafNodesOnly">
            <summary>
            Interpolation shall be applied to leaf nodes only in the tree.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.InterpolationMode.AllNodes">
            <summary>
            Interpolation shall be applied to all nodes in the tree.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.SolidColorBrushInterpolator">
            <summary>
            Interpolator which converts a numeric value from its [RangeMinimum, RangeMaximum]
            range to a color in the range [From, To].
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.RangeInterpolator`1">
            <summary>
            Abstract class representing an interpolator which projects values to
            a continuous range defined by the From and To properties.
            </summary>
            <typeparam name="T">The data type of the values in the target range.</typeparam>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Interpolator">
            <summary>
            Abstract base class for Interpolator converters.
            </summary>
            <remarks>
            <para>
            An Interpolator is used to project a value from a source range 
            [ActualDataMinimum, ActualDataMaximum] to a target range [From, To]. 
            The source range can be specified directly by setting the DataMinimum 
            and/or DataMaximum properties, or indirectly by setting DataRangeBinding.
            When the DataRangeBinding property is set,the TreeMap will evaluate the 
            binding for the entire tree, calculating the minimum and maximum values 
            automatically. The custom target range and the actual interpolation 
            logic is defined by sub-classes of this abstract class.
            </para>
            </remarks>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Interpolator._helper">
            <summary>
            Holds a helper object used to extract values using a property path.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Interpolator.DataMinimumProperty">
            <summary>
            Identifies the DataMinimum dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Interpolator.DataMaximumProperty">
            <summary>
            Identifies the DataMaximum dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Interpolator._actualDataMaximum">
            <summary>
            This fields contains the automatically calculated maximal value in 
            the dataset.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Interpolator._actualDataMinimum">
            <summary>
            This fields contains the automatically calculated minimal value in 
            the dataset.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Interpolator.#ctor">
            <summary>
            Initializes a new instance of the Interpolator class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Interpolator.IncludeInRange(System.Object)">
            <summary>
            If the DataRangeBinding property is set then this method updates the minimum/maximum range
            of this object by including the value passed in.
            </summary>
            <param name="data">Object to extract the value from (the Source of the DataRangeBinding).</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Interpolator.Interpolate(System.Double)">
            <summary>
            Called to interpolate the value of the given object between the DataMinimum and DataMaximum
            extremes, and to project it in a specific [From, To] range defined. The target range (and
            therefore the implementation of this method) is defined in a specific sub-class.
            </summary>
            <param name="value">Value to interpolate.</param>
            <returns>An interpolated value.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Interpolator.InterpolationMode">
            <summary>
            Gets or sets a value telling to which tree nodes the interpolation 
            should be applied to. LeafNodesOnly by default.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Interpolator.TargetName">
            <summary>
            Gets or sets a value representing the x:Name of the element to which
            the interpolated value will be applied.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Interpolator.TargetProperty">
            <summary>
            Gets or sets a value representing the path to a property which will 
            receive the interpolated value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Interpolator.DataMinimum">
            <summary>
            Gets or sets a value representing the fixed minimum value across the 
            entire set. If the value is not set directly or is NaN, the 
            ActualDataMaximum will be calculated automatically from the data set 
            by using the DataRangeBinding property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Interpolator.DataMaximum">
            <summary>
            Gets or sets a value representing the fixed maximum value across the 
            entire set. If the value is not set directly or is NaN, the 
            ActualDataMinimum will be calculated automatically from the data set 
            by using the DataRangeBinding property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Interpolator.ActualDataMaximum">
            <summary>
            Gets the value representing the maximal value in the data set. It is
            automatically from the data set by using the DataRangeBinding 
            property if DataMaximum is not set. If it is set, DataMaximum is 
            returned.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Interpolator.ActualDataMinimum">
            <summary>
            Gets the value representing the minimal value in the data set. It is
            automatically from the data set by using the DataRangeBinding 
            property if DataMinimum is not set. If it is set, DataMinimum is 
            returned.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Interpolator.DataRangeBinding">
            <summary>
            Gets or sets a binding to a property which will be examined to retrieve the minimum and maximum range 
            values across the entire data set. If this value is null then the DataMinimum and DataMaximum values
            need be set manually.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.RangeInterpolator`1.From">
            <summary>
            Gets or sets a value representing the start value of the target range.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.RangeInterpolator`1.To">
            <summary>
            Gets or sets a value representing the end value of the target range.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.SolidColorBrushInterpolator.Interpolate(System.Double)">
            <summary>
            Interpolates the given value between its [RangeMinimum, RangeMaximum] range
            and returns a color in the range [From, To].
            </summary>
            <param name="value">Value to interpolate.</param>
            <returns>An interpolated color in the range [From, To].</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.DoubleInterpolator">
            <summary>
            Interpolator which converts a numeric value from its [RangeMinimum, RangeMaximum]
            range to another value in the range [From, To].
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.DoubleInterpolator.Interpolate(System.Double)">
            <summary>
            Interpolates the given value between its [RangeMinimum, RangeMaximum] range
            and returns an interpolated value in the range [From, To].
            </summary>
            <param name="value">Value to interpolate.</param>
            <returns>An interpolated value in the range [From, To].</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.SquaringAlgorithm">
            <summary>
            Class encapsulating the logic of sub-dividing a parent rectangular area into child rectangles.
            It implements the squaring tree map algorithm where all child nodes are allocated
            areas proportional to their values, but the aspect ratio of each rectangle is kept 
            as close as possible to a square.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.SquaringAlgorithm._areas">
            <summary>
            Holds the list of nodes being considered by the algorithm.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.SquaringAlgorithm._currentRectangle">
            <summary>
            The current rectangle being divided.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.SquaringAlgorithm._currentStart">
            <summary>
            Internal index in the list of nodes being divided.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.SquaringAlgorithm._factor">
            <summary>
            Temporary variable used during the algorithm. Represents the ratio between 
            the real area of the rectangle and the virtual value associated with the node.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.SquaringAlgorithm.Split(System.Windows.Rect,System.Windows.Controls.DataVisualization.TreeMapNode,System.Windows.Thickness)">
            <summary>
            Subdivides the parent rectangle using squaring tree map algorithm into
            rectangles with areas specified by the children. The areas must add up 
            to at most the area of the rectangle.
            </summary>
            <param name="parentRectangle">Total area being split.</param>
            <param name="parentNode">The node associated with the total area. The 
            children of this node will be allocated small chunks of the parent rectangle.</param>
            <param name="margin">How much of a gap should be left between the parent rectangle and the children.</param>
            <returns>A list of RectangularArea objects describing areas associated with each of the children of parentNode.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.SquaringAlgorithm.BuildTreeMap">
            <summary>
            This function returns an IEnumerable over the rectangles associated with the children,
            as divided using the tree map algorithm.
            </summary>
            <returns>A list of RectangularArea objects describing areas associated with each of the children.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.SquaringAlgorithm.BuildTreeMapStep">
            <summary>
            Performs one step of the body of the squaring tree map algorithm.
            </summary>
            <returns>List of rectangles calculated by this step.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.SquaringAlgorithm.GetArea(System.Int32)">
            <summary>
            Returns the calculated area of the node at the given index.
            </summary>
            <param name="i">Index of the node to consider.</param>
            <returns>Area of the node, calculated based on the node's value multiplied by the current factor.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.SquaringAlgorithm.GetAspect(System.Int32,System.Double)">
            <summary>
            Returns the aspect ratio of the area associated with the node at the given index.
            </summary>
            <param name="i">Index of the node to consider.</param>
            <param name="wh">Width of the area.</param>
            <returns>Positive supra-unitary ratio of the given area.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.TreeMapNode">
            <summary>
            Holds the information needed by the tree map layout algorithm, such as the area
            associated with this node and the list of children. The class also contains
            an DataContext object which is the real user context, and a reference to the UI
            container associated with this node.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapNode.Area">
            <summary>
            Gets or sets a value representing the area associated with this node.
            This value is relative to all the other values in the hierarchy; the layout
            algorithm will allocated a real area proportional to this value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapNode.Children">
            <summary>
            Gets or sets the list of children under this node.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapNode.WeakEventListener">
            <summary>
            Gets or sets a value representing the WeakEventListener associated with the
            ItemsSource that created the children of this node.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapNode.DataContext">
            <summary>
            Gets or sets a value representing a reference to the user's custom data object.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapNode.Element">
            <summary>
            Gets or sets a value representing the associated Silverlight UI element.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapNode.ItemDefinition">
            <summary>
            Gets or sets a value representing the TreeMapItemDefinition used to describe 
            properties of this item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapNode.ChildItemPadding">
            <summary>
            Gets or sets a value representing the padding between this node and its children.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapNode.Level">
            <summary>
            Gets or sets a value representing the level of this node in the tree (the
            root node is at level 0).
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.TreeMap">
            <summary>
            Represents a control which can display hierarchical data as a set of nested rectangles. 
            Each item in the hierarchy is laid out in a rectangular area of a size proportional to 
            the value associated with the item.
            </summary>
            <remarks>
            You populate a TreeMap by setting its ItemsSource property to the root of the hierarchy 
            you would like to display. The ItemDefinition property must be set to an instance of a 
            TreeMapItemDefinition with appropriate bindings for Value (identifying the value to be used
            when calculating relative item sizes) and ItemsSource (identifying the collection of 
            children for each item).
            </remarks>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap.ContainerName">
            <summary>
            The name of the Container template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap.InterpolatorValueProperty">
            <summary>
            Identifies the InterpolatorValue dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap._helper">
            <summary>
            Holds a helper object used to extract values using a property path.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap._nodeRoots">
            <summary>
            The roots of the pre-calculated parallel tree of TreeMapNodes.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap._getTreeMapNodesCache">
            <summary>
            Cached sequence of all TreeMapNodes used by GetTreeMapNodes.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap.ItemDefinitionSelectorProperty">
            <summary>
            Identifies the ItemDefinitionSelector dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnItemDefinitionSelectorPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the TreeMapItemDefinitionSelectorProperty property changes.
            </summary>
            <param name="d">Reference to the TreeMap object.</param>
            <param name="e">Event handler arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnItemDefinitionSelectorPropertyChanged(System.Windows.Controls.DataVisualization.TreeMapItemDefinitionSelector,System.Windows.Controls.DataVisualization.TreeMapItemDefinitionSelector)">
            <summary>
            Called when the value of the ItemDefinitionSelectorProperty property changes.
            Triggers a recalculation of the layout.
            </summary>
            <param name="oldValue">The old selector.</param>
            <param name="newValue">The new selector.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap.ItemDefinitionProperty">
            <summary>
            Identifies the ItemDefinition dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnItemDefinitionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the ItemDefinitionProperty property changes.
            </summary>
            <param name="d">Reference to the TreeMap object.</param>
            <param name="e">Event handler arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnItemDefinitionPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            This callback ensures that any change in TreeMapItemDefinition.
            </summary>
            <param name="sender">Source TreeMapItemDefinition object.</param>
            <param name="e">Event handler arguments (parameter name).</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnItemDefinitionPropertyChanged(System.Windows.Controls.DataVisualization.TreeMapItemDefinition,System.Windows.Controls.DataVisualization.TreeMapItemDefinition)">
            <summary>
            Called when the value of the ItemDefinitionProperty property changes.
            Triggers a recalculation of the layout.
            </summary>
            <param name="oldValue">The old item definition.</param>
            <param name="newValue">The new item definition.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnItemsSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the ItemsSourceProperty property changes.
            </summary>
            <param name="d">Reference to the TreeMap object.</param>
            <param name="e">Event handler arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnItemsSourcePropertyChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when the value of the ItemsSourceProperty property changes.
            </summary>
            <param name="oldValue">The old ItemsSource collection.</param>
            <param name="newValue">The new ItemsSource collection.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap._weakEventListener">
            <summary>
            WeakEventListener used to handle INotifyCollectionChanged events.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.ItemsSourceCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method that handles the ObservableCollection.CollectionChanged event for the ItemsSource property.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap.InterpolatorsProperty">
            <summary>
            Identifies the Interpolators dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnInterpolatorsPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the value of the InterpolatorsProperty property changes.
            </summary>
            <param name="d">Reference to the TreeMap object.</param>
            <param name="e">Event handler arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnInterpolatorsPropertyChanged(System.Collections.ObjectModel.Collection{System.Windows.Controls.DataVisualization.Interpolator},System.Collections.ObjectModel.Collection{System.Windows.Controls.DataVisualization.Interpolator})">
            <summary>
            Called when the value of the InterpolatorsProperty property changes.
            Triggers a recalculation of the layout.
            </summary>
            <param name="oldValue">The old Interpolators collection.</param>
            <param name="newValue">The new Interpolators collection.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMap._containerElement">
            <summary>
            The Container template part is used to hold all the items inside
            a TreeMap.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.#ctor">
            <summary>
            Initializes a new instance of the TreeMap class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes call ApplyTemplate. Gets references
            to the template parts required by this control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.GetContainerForItemOverride(System.Object,System.Int32)">
            <summary>
            Constructs a new instance of an element used to display an item in the tree. 
            </summary>
            <remarks>
            By default TreeMap will use the template set in its ItemDefinition property, or the value 
            returned from GetTemplateForItemOverride if overridden. Override this method to build a 
            custom element.
            </remarks>
            <param name="data">One of the items in the ItemsSource hierarchy.</param>
            <param name="level">The level of the item in the hierarchy.</param>
            <returns>A new FrameworkElement which will be added to the TreeMap control. If this
            method returns null the TreeMap will create the item using the ItemDefinition property,
            or the value returned by TreeMapItemDefinitionSelector if specified.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.ArrangeOverride(System.Windows.Size)">
            <summary>
            Performs the Arrange pass of the layout.
            </summary>
            <remarks>
            We round rectangles to snap to nearest pixels. We do that to avoid 
            anti-aliasing which results in better appearance. Moreover to get
            correct layout we would need to use UseLayoutRounding=false which
            is Silverlight specific. A side effect is that areas for rectangles 
            in the visual tree no longer can be used to compare them as dimensions
            are not rounded and therefore not precise. 
            </remarks>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.OnInterpolatorsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Triggers a recalculation of the layout when items are added/removed from the Interpolators collection.
            </summary>
            <param name="sender">Reference to the Interpolators collection.</param>
            <param name="e">Event handler arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.GetTreeMapNodes">
            <summary>
            Returns a sequence of TreeMapNodes in breadth-first order.
            </summary>
            <returns>Sequence of TreeMapNodes.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.ComputeRectangles(System.Windows.Controls.DataVisualization.TreeMapNode,System.Windows.Rect)">
            <summary>
            Recursively computes TreeMap rectangles given the root node and the bounding rectangle as start.
            </summary>
            <param name="root">Root of the TreeMapNode tree.</param>
            <param name="boundingRectangle">Bounding rectangle which will be sub-divided.</param>
            <returns>A list of RectangularAreas containing a rectangle for each node in the tree.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.BuildTreeMapTree(System.Collections.IEnumerable,System.Int32)">
            <summary>
            Builds the parallel trees of TreeMapNodes with references to the original user's trees.
            </summary>
            <param name="nodes">The list of roots of the user hierarchies (whatever was passed through ItemsSource).</param>
            <param name="level">Level being processed at this recursive call (the root node is at level 0).</param>
            <returns>The list of roots of the internal trees of TreeMapNodes.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.CreateChildren">
            <summary>
            Extracts all children from the user's trees (ItemsSource) into a flat list, and 
            creates UI elements for them.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMap.RebuildTree">
            <summary>
            Called internally whenever a property of TreeMap is changed and the internal 
            structures need to be rebuilt in order to recalculate the layout.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMap.InterpolatorValue">
            <summary>
            Gets or sets a generic value used as a temporary storage used as a source for TargetName/TargetProperty binding.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMap.ItemDefinitionSelector">
            <summary>
            Gets or sets the selector used to choose the item template dynamically.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMap.ItemDefinition">
            <summary>
            Gets or sets a value representing the template used to display each item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMap.ItemsSource">
            <summary>
            Gets or sets a value representing the list of hierarchies used to generate
            content for the TreeMap.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMap.Interpolators">
            <summary>
            Gets a value representing a collection of interpolators to use in TreeMap.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMap.ContainerElement">
            <summary>
            Gets the Container template part that is used to hold all the items inside
            a TreeMap.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.TreeMapItemDefinition">
            <summary>
            Represents a class that defines various aspects of TreeMap items.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMapItemDefinition._itemTemplate">
            <summary>
            A value representing the DataTemplate to instantiate in 
            order to create a representation of each TreeMap item.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMapItemDefinition._valueBinding">
            <summary>
            A value representing a binding which can be used 
            to retrieve the value associated with each item, needed to calculate 
            relative areas of TreeMap items.        
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMapItemDefinition._itemsSource">
            <summary>
            The binding that indicates where to find the collection
            that represents the next level in the data hierarchy.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.TreeMapItemDefinition._childItemPadding">
            <summary>
            A property representing the amount of space to leave 
            between a parent item and its children.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMapItemDefinition.#ctor">
            <summary>
            Initializes a new instance of the TreeMapItemDefinition class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMapItemDefinition.NotifyPropertyChanged(System.String)">
            <summary>
            Updates the TreeMap if one of properties changes.
            </summary>
            <param name="parameterName">The parameter name.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapItemDefinition.ItemTemplate">
            <summary>
            Gets or sets a value representing the DataTemplate to instantiate in 
            order to create a representation of each TreeMap item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapItemDefinition.ValueBinding">
            <summary>
            Gets or sets a value representing a binding which can be used 
            to retrieve the value associated with each item, needed to calculate 
            relative areas of TreeMap items.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapItemDefinition.ValuePath">
            <summary>
            Gets or sets the Value Path used to set ValueBinding for retrieving 
            the value associated with each item, needed to calculate relative 
            areas of TreeMap items.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapItemDefinition.ItemsSource">
            <summary>
            Gets or sets the binding that indicates where to find the collection
            that represents the next level in the data hierarchy.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.TreeMapItemDefinition.ChildItemPadding">
            <summary>
            Gets or sets a property representing the amount of space to leave 
            between a parent item and its children.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataVisualization.TreeMapItemDefinition.PropertyChanged">
            <summary>
            PropertyChanged event required by INotifyPropertyChanged.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.TreeMapItemDefinitionSelector">
            <summary>
            Provides a way to choose a TreeMapItemDefinition based on the data item and 
            the level of the item in the tree.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMapItemDefinitionSelector.#ctor">
            <summary>
            Initializes a new instance of the TreeMapItemDefinitionSelector class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.TreeMapItemDefinitionSelector.SelectItemDefinition(System.Windows.Controls.DataVisualization.TreeMap,System.Object,System.Int32)">
            <summary>
            Returns an instance of a TreeMapItemDefinition class used to specify properties for the
            current item.
            </summary>
            <param name="treeMap">Reference to the TreeMap class.</param>
            <param name="item">One of the nodes in the ItemsSource hierarchy.</param>
            <param name="level">The level of the node in the hierarchy.</param>
            <returns>The TreeMapItemDefinition to be used for this node. If this method returns null
            the TreeMap will use the value of its ItemDefinition property.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Tuple`2">
            <summary>
            A structure that groups two values.
            </summary>
            <typeparam name="T0">The type of the first value.</typeparam>
            <typeparam name="T1">The type of the second value.</typeparam>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Tuple`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the Tuple structure.
            </summary>
            <param name="first">The first value.</param>
            <param name="second">The second value.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Tuple`2.First">
            <summary>
            Gets the first value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Tuple`2.Second">
            <summary>
            Gets the second value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Unit">
            <summary>
            Units of measure.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Unit.Pixels">
            <summary>
            The corresponding value is in pixels.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Unit.Degrees">
            <summary>
            The corresponding value is in degrees.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.UnitValue">
            <summary>
            A value in units.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UnitValue.#ctor(System.Double,System.Windows.Controls.DataVisualization.Unit)">
            <summary>
            Instantiates a new instance of the UnitValue struct.
            </summary>
            <param name="value">The value associated with the units.</param>
            <param name="unit">The units associated with the value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UnitValue.CompareTo(System.Object)">
            <summary>
            Compares two unit values to determine if they are equal or not.
            </summary>
            <param name="obj">The object being compared.</param>
            <returns>A number smaller than zero if the obj is larger than this
            object.  A number equal to 0 if they are equal.  A number greater 
            than zero if this unit value is greater than obj.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UnitValue.Equals(System.Object)">
            <summary>
            Determines if two values are equal.
            </summary>
            <param name="obj">The other value.</param>
            <returns>A value indicating whether values are equal.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UnitValue.op_Equality(System.Windows.Controls.DataVisualization.UnitValue,System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Determines whether two unit value objects are equal.
            </summary>
            <param name="left">The left unit value.</param>
            <param name="right">The right unit value.</param>
            <returns>A value indicating  whether two unit value objects are 
            equal.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UnitValue.op_Inequality(System.Windows.Controls.DataVisualization.UnitValue,System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Determines whether two unit value objects are not equal.
            </summary>
            <param name="left">The left unit value.</param>
            <param name="right">The right unit value.</param>
            <returns>A value indicating whether two unit value objects are not
            equal.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UnitValue.op_LessThan(System.Windows.Controls.DataVisualization.UnitValue,System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Determines whether the left value is smaller than the right.
            </summary>
            <param name="left">The left unit value.</param>
            <param name="right">The right unit value.</param>
            <returns>A value indicating whether the left value is smaller than
            the right.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UnitValue.op_GreaterThan(System.Windows.Controls.DataVisualization.UnitValue,System.Windows.Controls.DataVisualization.UnitValue)">
            <summary>
            Determines whether the left value is larger than the right.
            </summary>
            <param name="left">The left unit value.</param>
            <param name="right">The right unit value.</param>
            <returns>A value indicating whether the left value is larger than
            the right.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.UnitValue.GetHashCode">
            <summary>
            Returns the hash code of the unit value object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.UnitValue.Value">
            <summary>
            Gets the value associated with the units.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.UnitValue.Unit">
            <summary>
            Gets the units associated with the value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.ValueHelper">
            <summary>
            A set of functions for data conversion operations.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.ValueHelper.Radian">
            <summary>
            The value of a single radian.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.CanGraph(System.Double)">
            <summary>
            Returns a value indicating whether this value can be graphed on a 
            linear axis.
            </summary>
            <param name="value">The value to evaluate.</param>
            <returns>A value indicating whether this value can be graphed on a 
            linear axis.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.TryConvert(System.Object,System.Double@)">
            <summary>
            Attempts to convert an object into a double.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="doubleValue">The double value.</param>
            <returns>A value indicating whether the value can be converted to a 
            double.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.TryConvert(System.Object,System.DateTime@)">
            <summary>
            Attempts to convert an object into a date time.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="dateTimeValue">The double value.</param>
            <returns>A value indicating whether the value can be converted to a 
            date time.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.ToDouble(System.Object)">
            <summary>
            Converts an object into a double.
            </summary>
            <param name="value">The value to convert to a double.</param>
            <returns>The converted double value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.ToDateTime(System.Object)">
            <summary>
            Converts a value to a date.
            </summary>
            <param name="value">The value to convert to a date.</param>
            <returns>The converted date value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.GetDateTimesBetweenInclusive(System.DateTime,System.DateTime,System.Int64)">
            <summary>
            Returns a sequence of date time values from a start and end date 
            time inclusive.
            </summary>
            <param name="start">The start date time.</param>
            <param name="end">The end date time.</param>
            <param name="count">The number of values to return.</param>
            <returns>A sequence of date time values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.GetTimeSpanIntervalsInclusive(System.TimeSpan,System.Int64)">
            <summary>
            Returns a sequence of time span values within a time span inclusive.
            </summary>
            <param name="timeSpan">The time span to split.</param>
            <param name="count">The number of time spans to return.</param>
            <returns>A sequence of time spans.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.GetIntervalsInclusive(System.Int64,System.Int64,System.Int64)">
            <summary>
            Returns that intervals between a start and end value, including those
            start and end values.
            </summary>
            <param name="start">The start value.</param>
            <param name="end">The end value.</param>
            <param name="count">The total number of intervals.</param>
            <returns>A sequence of intervals.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.RemoveNoiseFromDoubleMath(System.Double)">
            <summary>
            Removes the noise from double math.
            </summary>
            <param name="value">The value.</param>
            <returns>A double without a noise.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.ToDoubleRange(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Converts a range into a double range.
            </summary>
            <param name="range">The range to convert.</param>
            <returns>A range with its members converted to doubles.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.ToDateTimeRange(System.Windows.Controls.DataVisualization.Range{System.IComparable})">
            <summary>
            Converts a range into a date time range.
            </summary>
            <param name="range">The range to convert.</param>
            <returns>A range with its members converted to date times.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.Compare(System.IComparable,System.IComparable)">
            <summary>
            Compares two IComparables returning -1 if the left is null and 1 if
            the right is null.
            </summary>
            <param name="left">The left comparable.</param>
            <param name="right">The right comparable.</param>
            <returns>A value indicating which is larger.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.Translate(System.Windows.Point,System.Windows.Point)">
            <summary>
            Applies the translate transform to a point.
            </summary>
            <param name="origin">The origin point.</param>
            <param name="offset">The offset point.</param>
            <returns>The translated point.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.ToComparableRange(System.Windows.Controls.DataVisualization.Range{System.Double})">
            <summary>
            Converts any range to a range of IComparable.
            </summary>
            <param name="range">The range to be converted.</param>
            <returns>The new range type.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.LeftOrDefault(System.Windows.Rect,System.Double)">
            <summary>
            Returns the left value of the rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="value">The default value.</param>
            <returns>The left value of the rectangle.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.RightOrDefault(System.Windows.Rect,System.Double)">
            <summary>
            Returns the right value of the rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="value">The default value.</param>
            <returns>The right value of the rectangle.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.WidthOrDefault(System.Windows.Rect,System.Double)">
            <summary>
            Returns the width value of the rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="value">The default value.</param>
            <returns>The width value of the rectangle.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.HeightOrDefault(System.Windows.Rect,System.Double)">
            <summary>
            Returns the height value of the rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="value">The default value.</param>
            <returns>The height value of the rectangle.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.BottomOrDefault(System.Windows.Rect,System.Double)">
            <summary>
            Returns the bottom value of the rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="value">The default value.</param>
            <returns>The bottom value of the rectangle.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.TopOrDefault(System.Windows.Rect,System.Double)">
            <summary>
            Returns the top value of the rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="value">The default value.</param>
            <returns>The top value of the rectangle.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.ToComparableRange(System.Windows.Controls.DataVisualization.Range{System.DateTime})">
            <summary>
            Converts any range to a range of IComparable.
            </summary>
            <param name="range">The range to be converted.</param>
            <returns>The new range type.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.GetLength(System.Windows.Controls.DataVisualization.Range{System.DateTime})">
            <summary>
            Returns the time span of a date range.
            </summary>
            <param name="range">The range of values.</param>
            <returns>The length of the range.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.GetLength(System.Windows.Controls.DataVisualization.Range{System.Double})">
            <summary>
            Returns the time span of a date range.
            </summary>
            <param name="range">The range of values.</param>
            <returns>The length of the range.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.IsEmptyOrHasNoSize(System.Windows.Rect)">
            <summary>
            Returns a value indicating whether a rectangle is empty or has
            no width or height.
            </summary>
            <param name="rect">The rectangle.</param>
            <returns>A value indicating whether a rectangle is empty or has
            no width or height.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.ValueHelper.SetStyle(System.Windows.FrameworkElement,System.Windows.Style)">
            <summary>
            Sets the style property of an element.
            </summary>
            <param name="element">The element.</param>
            <param name="style">The style.</param>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Range`1">
            <summary>
            A range of values.
            </summary>
            <typeparam name="T">The type of the values.</typeparam>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Range`1._hasData">
            <summary>
            A flag that determines whether the range is empty or not.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Range`1._maximum">
            <summary>
            The maximum value in the range.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Range`1._minimum">
            <summary>
            The minimum value in the range.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the Range class.
            </summary>
            <param name="minimum">The minimum value.</param>
            <param name="maximum">The maximum value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.op_Equality(System.Windows.Controls.DataVisualization.Range{`0},System.Windows.Controls.DataVisualization.Range{`0})">
            <summary>
            Compare two ranges and return a value indicating whether they are
            equal.
            </summary>
            <param name="leftRange">Left-hand side range.</param>
            <param name="rightRange">Right-hand side range.</param>
            <returns>A value indicating whether the ranges are equal.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.op_Inequality(System.Windows.Controls.DataVisualization.Range{`0},System.Windows.Controls.DataVisualization.Range{`0})">
            <summary>
            Compare two ranges and return a value indicating whether they are
            not equal.
            </summary>
            <param name="leftRange">Left-hand side range.</param>
            <param name="rightRange">Right-hand side range.</param>
            <returns>A value indicating whether the ranges are not equal.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.Add(System.Windows.Controls.DataVisualization.Range{`0})">
            <summary>
            Adds a range to the current range.
            </summary>
            <param name="range">A range to add to the current range.</param>
            <returns>A new range that encompasses the instance range and the
            range parameter.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.Equals(System.Windows.Controls.DataVisualization.Range{`0})">
            <summary>
            Compares the range to another range.
            </summary>
            <param name="range">A different range.</param>
            <returns>A value indicating whether the ranges are equal.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.Equals(System.Object)">
            <summary>
            Compares the range to an object.
            </summary>
            <param name="obj">Another object.</param>
            <returns>A value indicating whether the other object is a range,
            and if so, whether that range is equal to the instance range.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.Contains(`0)">
            <summary>
            Returns a value indicating whether a value is within a range.
            </summary>
            <param name="value">The value.</param>
            <returns>Whether the value is within the range.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.IntersectsWith(System.Windows.Controls.DataVisualization.Range{`0})">
            <summary>
            Returns a value indicating whether two ranges intersect.
            </summary>
            <param name="range">The range to compare against this range.</param>
            <returns>A value indicating whether the ranges intersect.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.GetHashCode">
            <summary>
            Computes a hash code value.
            </summary>
            <returns>A hash code value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Range`1.ToString">
            <summary>
            Returns the string representation of the range.
            </summary>
            <returns>The string representation of the range.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Range`1.HasData">
            <summary>
            Gets a value indicating whether the range is empty or not.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Range`1.Maximum">
            <summary>
            Gets the maximum value in the range.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Range`1.Minimum">
            <summary>
            Gets the minimum value in the range.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ColumnSeries">
            <summary>
            Represents a control that contains a data series to be rendered in column format.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ColumnSeries.DependentRangeAxisProperty">
            <summary>
            Identifies the DependentRangeAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnSeries.OnDependentRangeAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="d">ColumnBarBaseSeries that changed its DependentRangeAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnSeries.OnDependentRangeAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IRangeAxis)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ColumnSeries.IndependentAxisProperty">
            <summary>
            Identifies the IndependentAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnSeries.OnIndependentAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="d">ColumnBarBaseSeries that changed its IndependentAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnSeries.OnIndependentAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnSeries.#ctor">
            <summary>
            Initializes a new instance of the ColumnSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnSeries.GetAxes(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Acquire a horizontal category axis and a vertical linear axis.
            </summary>
            <param name="firstDataPoint">The first data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ColumnSeries.UpdateDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Updates each point.
            </summary>
            <param name="dataPoint">The data point to update.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ColumnSeries.DependentRangeAxis">
            <summary>
            Gets or sets the dependent range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ColumnSeries.IndependentAxis">
            <summary>
            Gets or sets the independent category axis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.LineSeries">
            <summary>
            Represents a control that contains a data series to be rendered in X/Y 
            line format.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.LineSeries.PointsProperty">
            <summary>
            Identifies the Points dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.LineSeries.PolylineStyleProperty">
            <summary>
            Identifies the PolylineStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.LineSeries.DependentRangeAxisProperty">
            <summary>
            Identifies the DependentRangeAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineSeries.OnDependentRangeAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="d">LineSeries that changed its DependentRangeAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineSeries.OnDependentRangeAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IRangeAxis)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.LineSeries.IndependentAxisProperty">
            <summary>
            Identifies the IndependentAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineSeries.OnIndependentAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="d">LineSeries that changed its IndependentAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineSeries.OnIndependentAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineSeries.#ctor">
            <summary>
            Initializes a new instance of the LineSeries class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineSeries.OnApplyTemplate">
            <summary>
            Creates a DataPoint for determining the line color.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineSeries.GetAxes(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Acquire a horizontal linear axis and a vertical linear axis.
            </summary>
            <param name="firstDataPoint">The first data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineSeries.UpdateDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Updates the visual representation of the data point.
            </summary>
            <param name="dataPoint">The data point to update.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.LineSeries.UpdateShape">
            <summary>
            Updates the point collection object.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LineSeries.Points">
            <summary>
            Gets the collection of points that make up the line.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LineSeries.PolylineStyle">
            <summary>
            Gets or sets the style of the Polyline object that follows the data 
            points.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LineSeries.DependentRangeAxis">
            <summary>
            Gets or sets the dependent range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.LineSeries.IndependentAxis">
            <summary>
            Gets or sets the independent range axis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.ScatterSeries">
            <summary>
            Represents a control that contains a data series to be rendered in X/Y scatter format.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.#ctor">
            <summary>
            Initializes a new instance of the ScatterSeries class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.DependentRangeAxisProperty">
            <summary>
            Identifies the DependentRangeAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.OnDependentRangeAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="d">ScatterSeries that changed its DependentRangeAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.OnDependentRangeAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IRangeAxis)">
            <summary>
            DependentRangeAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.IndependentAxisProperty">
            <summary>
            Identifies the IndependentAxis dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.OnIndependentAxisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="d">ScatterSeries that changed its IndependentAxis.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.OnIndependentAxisPropertyChanged(System.Windows.Controls.DataVisualization.Charting.IAxis)">
            <summary>
            IndependentAxisProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>        
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.GetAxes(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Acquire a horizontal linear axis and a vertical linear axis.
            </summary>
            <param name="firstDataPoint">The first data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.CreateDataPoint">
            <summary>
            Creates a new scatter data point.
            </summary>
            <returns>A scatter data point.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.GetStyleEnumeratorFromHost">
            <summary>
            Returns the style enumerator used to retrieve a style to use for 
            all data points.
            </summary>
            <returns>The style enumerator used to retrieve a style to use for 
            all data points.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.UpdateDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            This method updates a single data point.
            </summary>
            <param name="dataPoint">The data point to update.</param>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.ActualDependentRangeAxis">
            <summary>
            Gets the dependent axis as a range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.DependentRangeAxis">
            <summary>
            Gets or sets the dependent range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.ActualIndependentAxis">
            <summary>
            Gets the independent axis as a range axis.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.ScatterSeries.IndependentAxis">
            <summary>
            Gets or sets the independent range axis.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.PieSeries">
            <summary>
            Represents a control that contains a data series to be rendered in pie
            format.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieSeries.StylePaletteProperty">
            <summary>
            Identifies the StylePalette dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnStylePalettePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StylePaletteProperty property changed handler.
            </summary>
            <param name="d">Parent that changed its StylePalette.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnStylePalettePropertyChanged(System.Collections.ObjectModel.Collection{System.Windows.Style})">
            <summary>
            StylePaletteProperty property changed handler.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieSeries._styleEnumerator">
            <summary>
            The pie data point style enumerator.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.#ctor">
            <summary>
            Initializes a new instance of the PieSeries class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.PieSeries._dataPointLegendItems">
            <summary>
            A dictionary that links data points to their legend items.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.ConvertRatioOfRotationToPoint(System.Double,System.Double,System.Double)">
            <summary>
            Accepts a ratio of a full rotation, the x and y length and returns
            the 2D point using trigonometric functions.
            </summary>
            <param name="ratio">The ratio of a full rotation [0..1].</param>
            <param name="radiusX">The x radius.</param>
            <param name="radiusY">The y radius.</param>
            <returns>The corresponding 2D point.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.AddDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Creates a legend item for each data point.
            </summary>
            <param name="dataPoint">The data point added.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.RemoveDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Removes data point's legend item when the data point is removed.
            </summary>
            <param name="dataPoint">The data point to remove.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.CreateDataPoint">
            <summary>
            Creates a data point.
            </summary>
            <returns>A data point.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnBeforeUpdateDataPoints">
            <summary>
            Updates all ratios before data points are updated.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnDataPointsChanged(System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint},System.Collections.Generic.IList{System.Windows.Controls.DataVisualization.Charting.DataPoint})">
            <summary>
            Called after data points have been loaded from the items source.
            </summary>
            <param name="newDataPoints">New active data points.</param>
            <param name="oldDataPoints">Old inactive data points.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.UpdateLegendItemIndexes">
            <summary>
            Updates the indexes of all legend items when a change is made to the collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.UpdateRatios">
            <summary>
            Updates the ratios of each data point.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.UpdateDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Updates a data point.
            </summary>
            <param name="dataPoint">The data point to update.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.UpdatePieDataPointGeometry(System.Windows.Controls.DataVisualization.Charting.PieDataPoint,System.Double,System.Double)">
            <summary>
            Updates the PieDataPoint's Geometry property.
            </summary>
            <param name="pieDataPoint">PieDataPoint instance.</param>
            <param name="plotAreaWidth">PlotArea width.</param>
            <param name="plotAreaHeight">PlotArea height.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.CreatePieLegendItem(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Int32)">
            <summary>
            Creates a legend item from a data point.
            </summary>
            <param name="dataPoint">The data point to use to create the legend item.</param>
            <param name="index">The 1-based index of the Control.</param>
            <returns>The series host legend item.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.AttachEventHandlersToDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Attach event handlers to a data point.
            </summary>
            <param name="dataPoint">The data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.DetachEventHandlersFromDataPoint(System.Windows.Controls.DataVisualization.Charting.DataPoint)">
            <summary>
            Detaches event handlers from a data point.
            </summary>
            <param name="dataPoint">The data point.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.GlobalSeriesIndexChanged(System.Nullable{System.Int32})">
            <summary>
            This method updates the global series index property.
            </summary>
            <param name="globalIndex">The global index of the series.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnDataPointDependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.IComparable,System.IComparable)">
            <summary>
            Updates the data point when the dependent value is changed.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnDataPointIndependentValueChanged(System.Windows.Controls.DataVisualization.Charting.DataPoint,System.Object,System.Object)">
            <summary>
            Updates the data point when the independent value is changed.
            </summary>
            <param name="dataPoint">The data point.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnPieDataPointActualRatioChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Updates the data point when the pie data point's actual ratio is
            changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnPieDataPointActualOffsetRatioChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Updates the data point when the pie data point's actual offset ratio
            is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnPieDataPointRatioChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Updates the data point when the pie data point's ratio is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnPieDataPointOffsetRatioChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Updates the data point when the pie data point's offset ratio is 
            changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.GetStylesWhere(System.Func{System.Windows.Style,System.Boolean})">
            <summary>
            Returns a rotating enumerator of Style objects that coordinates with 
            the style dispenser object to ensure that no two enumerators are
            currently on the same style if possible.  If the style
            dispenser is reset or its collection of styles is changed then
            the enumerators will also be reset.
            </summary>
            <param name="stylePredicate">A predicate that returns a value
            indicating whether to return a style.</param>
            <returns>An enumerator of styles.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.ResetStyles">
            <summary>
            Resets the styles dispensed by the series.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.OnSeriesHostPropertyChanged(System.Windows.Controls.DataVisualization.Charting.ISeriesHost,System.Windows.Controls.DataVisualization.Charting.ISeriesHost)">
            <summary>
            Sets the new series host to be the parent style dispenser of the
            local style dispenser object.
            </summary>
            <param name="oldValue">The new series host value.</param>
            <param name="newValue">The old series host value.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.PieSeries.RefreshStyles">
            <summary>
            Refreshes styles in the pie series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieSeries.StylePalette">
            <summary>
            Gets or sets a palette of styles used by the pie series.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieSeries.ActivePieDataPoints">
            <summary>
            Gets the active pie data points.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.PieSeries.StyleDispenser">
            <summary>
            Gets or sets an object used to dispense styles from the style 
            palette.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Charting.StyleDispenser">
            <summary>
            A class that rotates through a list of styles.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.StyleDispenser._stylesDispensed">
            <summary>
            A linked list of styles dispensed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.StyleDispenser._styleEnumerators">
            <summary>
            A bag of weak references to connected style enumerators.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.StyleDispenser._ignoreStyleDispensedByEnumerator">
            <summary>
            Value indicating whether to ignore that the style enumerator has 
            dispensed a style.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.StyleDispenser._styles">
            <summary>
            The list of styles of rotate.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StyleDispenser.StylesCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            This method is raised when the styles collection is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Charting.StyleDispenser._parent">
            <summary>
            The parent of the style dispenser.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StyleDispenser.#ctor">
            <summary>
            Initializes a new instance of the StyleDispenser class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StyleDispenser.ResetStyles">
            <summary>
            Resets the state of the StyleDispenser and its style enumerators.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StyleDispenser.Unregister(System.Windows.Controls.DataVisualization.Charting.StyleEnumerator)">
            <summary>
            Unregisters a style enumerator so that it can be garbage collected.
            </summary>
            <param name="enumerator">The style enumerator.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StyleDispenser.GetStylesWhere(System.Func{System.Windows.Style,System.Boolean})">
            <summary>
            Returns a rotating enumerator of Style objects that coordinates with 
            the style dispenser object to ensure that no two enumerators are
            currently on the same style if possible.  If the style
            dispenser is reset or its collection of styles is changed then
            the enumerators will also be reset.
            </summary>
            <param name="stylePredicate">A predicate that returns a value
            indicating whether to return a style.</param>
            <returns>An enumerator of styles.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StyleDispenser.EnumeratorStyleDispensed(System.Object,System.Windows.Controls.DataVisualization.StyleDispensedEventArgs)">
            <summary>
            This method is raised when an enumerator dispenses a style.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StyleDispenser.OnParentChanged">
            <summary>
            Raises the ParentChanged event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StyleDispenser.OnEnumeratorStyleDispensed(System.Object,System.Windows.Controls.DataVisualization.StyleDispensedEventArgs)">
            <summary>
            Raises the EnumeratorStyleDispensed event.
            </summary>
            <param name="source">The source of the event.</param>
            <param name="args">Information about the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Charting.StyleDispenser.OnResetting">
            <summary>
            This method raises the EnumeratorsResetting event.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.StyleDispenser.Styles">
            <summary>
            Gets or sets the list of styles to rotate.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Charting.StyleDispenser.Parent">
            <summary>
            Gets or sets the parent of the style dispenser.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.EnumerableFunctions">
            <summary>
            This class contains general purpose functions to manipulate the generic
            IEnumerable type.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.FastCount(System.Collections.IEnumerable)">
            <summary>
            Attempts to cast IEnumerable to a list in order to retrieve a count 
            in order one.  It attempts to cast fail the sequence is enumerated.
            </summary>
            <param name="that">The sequence.</param>
            <returns>The number of elements in the sequence.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns whether a sequence is empty.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="that">The sequence.</param>
            <returns>Whether the sequence is empty or not.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.MinOrNull``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.IComparable})">
            <summary>
            Returns the minimum value in the stream based on the result of a
            project function.
            </summary>
            <typeparam name="T">The stream type.</typeparam>
            <param name="that">The stream.</param>
            <param name="projectionFunction">The function that transforms the
            item.</param>
            <returns>The minimum value or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.SumOrDefault(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Returns the sum of all values in the sequence or the default value.
            </summary>
            <param name="that">The stream.</param>
            <returns>The sum of all values or the default value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.MaxOrNull``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.IComparable})">
            <summary>
            Returns the maximum value in the stream based on the result of a
            project function.
            </summary>
            <typeparam name="T">The stream type.</typeparam>
            <param name="that">The stream.</param>
            <param name="projectionFunction">The function that transforms the
            item.</param>
            <returns>The maximum value or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
            <summary>
            Accepts two sequences and applies a function to the corresponding 
            values in the two sequences.
            </summary>
            <typeparam name="T0">The type of the first sequence.</typeparam>
            <typeparam name="T1">The type of the second sequence.</typeparam>
            <typeparam name="R">The return type of the function.</typeparam>
            <param name="enumerable0">The first sequence.</param>
            <param name="enumerable1">The second sequence.</param>
            <param name="func">The function to apply to the corresponding values
            from the two sequences.</param>
            <returns>A sequence of transformed values from both sequences.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.Iterate``1(``0,System.Func{``0,``0})">
            <summary>
            Creates a sequence of values by accepting an initial value, an 
            iteration function, and apply the iteration function recursively.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="value">The initial value.</param>
            <param name="nextFunction">The function to apply to the value.
            </param>
            <returns>A sequence of the iterated values.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.IndexOf(System.Collections.IEnumerable,System.Object)">
            <summary>
            Returns the index of an item in a sequence.
            </summary>
            <param name="that">The sequence.</param>
            <param name="value">The item to search for.</param>
            <returns>The index of the item or -1 if not found.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.ForEachWithIndex``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})">
            <summary>
            Executes an action for each item and a sequence, passing in the 
            index of that item to the action procedure.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="that">The sequence.</param>
            <param name="action">A function that accepts a sequence item and its
            index in the sequence.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.MaxOrNullable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the maximum value or null if sequence is empty.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="that">The sequence to retrieve the maximum value from.
            </param>
            <returns>The maximum value or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.MinOrNullable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the minimum value or null if sequence is empty.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="that">The sequence to retrieve the minimum value from.
            </param>
            <returns>The minimum value or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.EnumerableFunctions.FastElementAt``1(System.Collections.IEnumerable,System.Int32)">
            <summary>
            Attempts to retrieve an element at an index by testing whether a 
            sequence is randomly accessible.  If not, performance degrades to a 
            linear search.
            </summary>
            <typeparam name="T">The type of the elements in the sequence.</typeparam>
            <param name="that">The sequence.</param>
            <param name="index">The index of the element in the sequence.</param>
            <returns>The element at the given index.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Legend">
            <summary>
            Represents a control that displays a list of items and has a title.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Legend.LegendItemsAreaName">
            <summary>
            Legend area name.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Legend.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Legend.OnTitlePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TitleProperty property changed handler.
            </summary>
            <param name="d">Legend that changed its Title.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Legend.TitleStyleProperty">
            <summary>
            Identifies the TitleStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Legend.#ctor">
            <summary>
            Initializes a new instance of the Legend class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Legend.OnApplyTemplate">
            <summary>
            Loads template parts when template is applied.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataVisualization.Legend._legendItemsLegendItemsAreaAdapter">
            <summary>
            Object that synchronizes the collection of legend items with the 
            children in the legend items area container.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Legend.CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event for ItemsSource.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Legend.UpdateLegendVisibility">
            <summary>
            Updates the Legend's Visibility property according to whether it has anything to display.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Legend.Title">
            <summary>
            Gets or sets the title content of the Legend.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Legend.TitleStyle">
            <summary>
            Gets or sets the style applied to the Title property of the Legend.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Legend.LegendItemsArea">
            <summary>
            Gets or sets the reference to the LegendItemsArea.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Legend.Items">
            <summary>
            Gets a collection of legend items to insert into the legend 
            area.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.RangeEnumerableExtensions">
            <summary>
            Collection of functions that manipulate streams of ranges.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.RangeEnumerableExtensions.GetRange``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the minimum and maximum values in a stream.
            </summary>
            <typeparam name="T">The type of the stream.</typeparam>
            <param name="that">The stream.</param>
            <returns>The range of values in the stream.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.RangeEnumerableExtensions.Sum``1(System.Collections.Generic.IEnumerable{System.Windows.Controls.DataVisualization.Range{``0}})">
            <summary>
            Returns a range encompassing all ranges in a stream.
            </summary>
            <typeparam name="T">The type of the minimum and maximum values.
            </typeparam>
            <param name="that">The stream.</param>
            <returns>A range encompassing all ranges in a stream.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.StylePalette">
            <summary>
            Represents a collection of Style objects.
            </summary>
            <remarks>
            For more information, see System.Windows.Controls.ObjectCollection.
            </remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.StylePalette.#ctor">
            <summary>
            Initializes a new instance of the StylePalette class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Title">
            <summary>
            Represents the title of a data visualization control.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.Title.#ctor">
            <summary>
            Initializes a new instance of the Title class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Chart_Axes_SetterNotSupported">
            <summary>
              Looks up a localized string similar to Changing the Chart&apos;s Axes property is not supported; changes to the collection should be made with its .Add/.Remove methods instead..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Chart_AxisLocationChanged_CantBeChangedToAutoWhenHostedInsideOfASeriesHost">
            <summary>
              Looks up a localized string similar to Axis location cannot be changed to auto when hosted inside of a series host..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Chart_Series_SetterNotSupported">
            <summary>
              Looks up a localized string similar to Changing the Chart&apos;s Series property is not supported; changes to the collection should be made with its .Add/.Remove methods instead..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.DataPointSeriesWithAxes_GetAxes_AssignedDependentAxisCannotBeUsed">
            <summary>
              Looks up a localized string similar to Assigned dependent axis cannot be used.  The data may not be able to be rendered on the provided axis or the series may require that they axis has an origin..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.DataPointSeriesWithAxes_GetAxes_AssignedIndependentAxisCannotBeUsed">
            <summary>
              Looks up a localized string similar to Assigned independent axis cannot be used..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.DataPointSeriesWithAxes_NoSuitableAxisAvailableForPlottingDependentValue">
            <summary>
              Looks up a localized string similar to No suitable axis is available for plotting the dependent value..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.DataPointSeriesWithAxes_ThisSeriesDoesNotSupportRadialAxes">
            <summary>
              Looks up a localized string similar to This series does not support radial axes..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.DisplayAxis_GetLength_CannotDetermineTheLengthOfAnAxisWithAnOrientationOfNone">
            <summary>
              Looks up a localized string similar to Cannot determine the size of an axis without an orientation..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.EdgePanel_OnEdgePropertyChanged">
            <summary>
              Looks up a localized string similar to Attempt to set Edge property to an invalid value..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Interpolator_IncludeInRange_DataRangeBindingNotIConvertible">
            <summary>
              Looks up a localized string similar to The DataRangeBinding property of the Interpolator must be bound to an IConvertible object..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Range_ctor_MaximumValueMustBeLargerThanOrEqualToMinimumValue">
            <summary>
              Looks up a localized string similar to The maximum value must be larger than or equal to the minimum value..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Range_get_Maximum_CannotReadTheMaximumOfAnEmptyRange">
            <summary>
              Looks up a localized string similar to &quot;Cannot read the Maximum of an empty range.&quot;.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Range_get_Minimum_CannotReadTheMinimumOfAnEmptyRange">
            <summary>
              Looks up a localized string similar to &quot;Cannot read the Minimum of an empty range.&quot;.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Range_ToString_Data">
            <summary>
              Looks up a localized string similar to [{0},{1}].
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Range_ToString_NoData">
            <summary>
              Looks up a localized string similar to No Data..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.RangeAxis_MaximumValueMustBeLargerThanOrEqualToMinimumValue">
            <summary>
              Looks up a localized string similar to The maximum value must be larger than or equal to the minimum value..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.RangeAxis_MinimumValueMustBeLargerThanOrEqualToMaximumValue">
            <summary>
              Looks up a localized string similar to The minimum value must be smaller than or equal to the maximum value..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.ReadOnlyObservableCollection_CollectionIsReadOnly">
            <summary>
              Looks up a localized string similar to Collection is read-only..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Series_OnGlobalSeriesIndexPropertyChanged_UntitledSeriesFormatString">
            <summary>
              Looks up a localized string similar to Series {0}.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.Series_SeriesHost_SeriesHostPropertyNotNull">
            <summary>
              Looks up a localized string similar to A series cannot be added to more than one series host..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.SeriesHostAxesCollection_InvalidAttemptToRemovePermanentAxisFromSeriesHost">
            <summary>
              Looks up a localized string similar to Invalid attempt to remove permanent axis from axis collection..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.SeriesHostAxesCollection_RemoveItem_AxisCannotBeRemovedFromASeriesHostWhenOneOrMoreSeriesAreListeningToIt">
            <summary>
              Looks up a localized string similar to An axis cannot be removed from a series host when one or more hosted series is listening to it..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.StyleEnumerator_CantResetEnumeratorResetStyleDispenserInstead">
            <summary>
              Looks up a localized string similar to Cannot reset a style enumerator.  Reset style dispenser instead..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.TreeMap_BuildTreeMapTree_TemplateNotSet">
            <summary>
              Looks up a localized string similar to Either ItemTemplate must be set or TreeMapItemDefinitionSelector must return a non-null template..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.TreeMap_CreateChildren_InterpolatorBindingNotSet">
            <summary>
              Looks up a localized string similar to The value of PropertyBinding property of an interpolator cannot be null..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.Properties.Resources.UniqueObservableCollection_InvalidAttemptToInsertADuplicateItem">
            <summary>
              Looks up a localized string similar to Invalid attempt to insert a duplicate item..
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataVisualization.WeakReferenceBag`1">
            <summary>
            A bag of weak references to items.
            </summary>
            <typeparam name="T">The type of the item.</typeparam>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.WeakReferenceBag`1.#ctor">
            <summary>
            Initializes a new instance of the WeakEvent class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.WeakReferenceBag`1.Add(`0)">
            <summary>
            Adds an item to the bag.
            </summary>
            <param name="item">The item to add to the bag.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.WeakReferenceBag`1.Remove(`0)">
            <summary>
            Removes an item from the bag.
            </summary>
            <param name="item">The item to remove.</param>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.WeakReferenceBag`1.GetEnumerator">
            <summary>
            Returns a sequence of the elements in the bag.
            </summary>
            <returns>A sequence of the elements in the bag.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataVisualization.WeakReferenceBag`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns a sequence of the elements in the bag.
            </summary>
            <returns>A sequence of the elements in the bag.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataVisualization.WeakReferenceBag`1.Items">
            <summary>
            Gets or sets the list of event listeners.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.extmap.xml ===
<?xml version="1.0"?>
<manifest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
          xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <assembly>
    <name>System.Windows.Controls</name>
    <version>3.0.30630.2242</version>
    <publickeytoken>2c5c654d367bf4a7</publickeytoken>
    <relpath>System.Windows.Controls.dll</relpath>
    <extension downloadUri="http://go.microsoft.com/fwlink/?LinkID=142571" />
  </assembly>

</manifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Input.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Input.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.ToolboxCategoryPaths">
            <summary>
            Names for ToolboxCategoryAttribute.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.BasicControls">
            <summary>
            Basic Controls category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.Controls">
            <summary>
            Controls category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.ControlParts">
            <summary>
            Control Parts category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.DataVisualization">
            <summary>
            DataVisualization category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.DataVisualizationControlParts">
            <summary>
            DataVisualization/Control Parts category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.Theming">
            <summary>
            Theming category.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.AutoCompleteBoxMetadata">
            <summary>
            To register design time metadata for AutoCompleteBox.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.AutoCompleteBoxMetadata.#ctor">
            <summary>
            To register design time metadata for AutoCompleteBox.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.AutoComplete">
            <summary>
              Looks up a localized string similar to Auto Complete.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.MetadataRegistration.#ctor">
            <summary>
            Design time metadata registration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Input.Expression.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Input.Expression.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.AutoCompleteBoxMetadata">
            <summary>
            To register design time metadata for AutoCompleteBox.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.AutoCompleteBoxMetadata.#ctor">
            <summary>
            To register design time metadata for AutoCompleteBox.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Expression.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Expression.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Input.Expression.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Input.Toolkit.Expression.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Input.Toolkit.Expression.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.DomainUpDownMetadata">
            <summary>
            To register design time metadata for SSWC.DomainUpDown.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.DomainUpDownMetadata.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:System.Windows.Controls.Input.Design.DomainUpDownMetadata"/> class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Expression.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Expression.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Input.Expression.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Input.Toolkit.VisualStudio.Design.4.0.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Input.Toolkit.VisualStudio.Design.4.0</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.VisualStudio.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.VisualStudio.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Input.VisualStudio.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Input.Toolkit.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Input.Toolkit.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1">
            <summary>
            Design mode value provider base class that always returns true for a Boolean property 
            of a model item when the item or any of its visual tree descendants is selected; and 
            returns the real value of the property when the item is de-selected. This is used to 
            expand and show hidden parts during of control at design time.
            </summary>
            <remarks>
            * SelectionPolicy can't be applied to DesignModeValueProvider directoly,
              so the AdornerProxy is needed as a proxy to apply the selection policy; 
            * The use of static variable InSelection is OK, because UI is singled 
              threaded, and ValueTranslationService.InvalidateProperty is synchronous.
            * Nest SelfOrDescendantSelectedPolicy and AdornerProxy inside the
              TrueIfSelectedDesignModeValueProvider because they are tightly coupled.
            * No need to abstract the DMVP class further to support multiple porperties, 
              types, and/or custom value translation logic yet.
            </remarks>
            <typeparam name="T">
            The Silverlight type whose property this DMVP is used for. 
            </typeparam>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.InSelection">
            <summary>
            Flag to TranslatePropertyValue method whether it is called by 
            AdornerProxy for the model item selected or de-selected.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.#cctor">
            <summary>
            Default constructor to add the property for translation.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.TranslatePropertyValue(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Metadata.PropertyIdentifier,System.Object)">
            <summary>
            Translate property value at design time.
            </summary>
            <param name="item">The model item whose property is to be translated.</param>
            <param name="identifier">The property to translate.</param>
            <param name="value">Value of the property.</param>
            <returns>Translated value of the property at design time.</returns>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.Identifiers">
            <summary>
            Gets the static dictionary of control type and its Boolean property to be translated.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.SelfOrDescendantSelectedPolicy">
            <summary>
            Item policy to apply extensibility features when an model item 
            or any of its visual tree descendants is selected or de-selected.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.SelfOrDescendantSelectedPolicy.GetPolicyItems(Microsoft.Windows.Design.Interaction.Selection)">
            <summary>
            Return the policy items from the specified selection.
            </summary>
            <param name="selection">The current selection.</param>
            <returns>An enumeration of ModelItem objects to use for this policy.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.AdornerProxyBase">
            <summary>
            An adorner provider to apply selection policy.
            </summary>
            <remarks>
            CS0416: type parameter can't be used as attribute argument.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.AdornerProxyBase.cachedItem">
            <summary>
            Cached model item for InvalidateValue call in Deactivate.
            </summary>
            <remarks>
            Assume there is a separate AdornerCheap instance for each item in policy.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.AdornerProxyBase.Activate(Microsoft.Windows.Design.Model.ModelItem)">
            <summary>
            Set selection state and trigger value translation.
            </summary>
            <param name="item">The model item.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.AdornerProxyBase.Deactivate">
            <summary>
            Revert selection state and revert to real property value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.ToolboxCategoryPaths">
            <summary>
            Names for ToolboxCategoryAttribute.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.BasicControls">
            <summary>
            Basic Controls category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.Controls">
            <summary>
            Controls category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.ControlParts">
            <summary>
            Control Parts category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.DataVisualization">
            <summary>
            DataVisualization category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.DataVisualizationControlParts">
            <summary>
            DataVisualization/Control Parts category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.Theming">
            <summary>
            Theming category.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.EmptyDefaultInitializer">
            <summary>
            Empty default initializer to prevent Blend from adding its own default initialization. 
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.ButtonSpinnerMetadata">
            <summary>
            To register design time metadata for ButtonSpinner.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.ButtonSpinnerMetadata.#ctor">
            <summary>
            To register design time metadata for ButtonSpinner.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.DomainUpDownMetadata">
            <summary>
            To register design time metadata for SSWC.DomainUpDown.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.DomainUpDownMetadata.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:System.Windows.Controls.Input.Design.DomainUpDownMetadata"/> class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.LinearClipperMetadata">
            <summary>
            To register design time metadata for Accordion.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.LinearClipperMetadata.#ctor">
            <summary>
            To register design time metadata for Accordion.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.NumericUpDownMetadata">
            <summary>
            To register design time metadata for SSWC.NumericUpDown.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.NumericUpDownMetadata.#ctor">
            <summary>
            To register design time metadata for SSWC.NumericUpDown.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.AutoComplete">
            <summary>
              Looks up a localized string similar to Auto Complete.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.TimeInput">
            <summary>
              Looks up a localized string similar to TimeInput.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.MetadataRegistration.#ctor">
            <summary>
            Design time metadata registration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.CultureInfoEditor">
            <summary>
            Editor for CultureInfo.
            </summary>
            <remarks>Currently does not support binding from xaml to the editor.</remarks>
        </member>
        <member name="F:System.Windows.Controls.Input.Design.CultureInfoEditor._owner">
            <summary>
            The ComboBox being used to edit the value.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.CultureInfoEditor.#ctor(System.Windows.DataTemplate)">
            <summary>
            Preserve the constructor prototype from PropertyValueEditor.
            </summary>
            <param name="inlineEditorTemplate">Inline editor template.</param>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.CultureInfoEditor.#ctor">
            <summary>
            Default constructor builds a ComboBox inline editor template.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.CultureInfoEditor.EditorSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Handles the SelectionChanged event of the owner control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Controls.SelectionChangedEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.CultureInfoEditor.DatacontextPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyChanged event of the context object.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.CultureInfoEditor.CultureDatacontextChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the context is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.RatingDefaultInitializer">
            <summary>
            Default initializer for Rating. 
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.RatingDefaultInitializer.InitializeDefaults(Microsoft.Windows.Design.Model.ModelItem)">
            <summary>
            Sets the default property values for Rating. 
            </summary>
            <param name="item">SSWCDC.Rating ModelItem.</param>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.RatingMetadata">
            <summary>
            To register design time metadata for Accordion.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.RatingMetadata.#ctor">
            <summary>
            To register design time metadata for Accordion.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.RatingItemMetadata">
            <summary>
            To register design time metadata for RatingItem.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.Design.RatingItemMetadata.#ctor">
            <summary>
            To register design time metadata for RatingItem.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.TimePickerIsDropDownOpenDesignModeValueProvider">
            <summary>
            Design mode value provider for TimePicker.IsDropDownOpen property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Input.Design.TimePickerIsDropDownOpenDesignModeValueProvider._propertyIdentifier">
            <summary>
            Identifier of the property this DMVP is for.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.TimePickerIsDropDownOpenDesignModeValueProvider.#cctor">
            <summary>
            Use the static constructor to add one property identifier to base.Identifiers.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.TimePickerIsDropDownOpenDesignModeValueProvider.#ctor">
            <summary>
            Default constructor to add the property for design time translation.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.TimePickerIsDropDownOpenDesignModeValueProvider.AdornerProxy">
            <summary>
            An adorner provider to apply selection policy.
            </summary>
            <remarks>
            Work around CS0416: have specialized types for and to apply UsesItemPolicy attribute.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.TimePickerMetadata">
            <summary>
            Metadata for the SSWC.TimePicker control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.TimePickerMetadata.#ctor">
            <summary>
            To register design time metadata for SSWC.TimePicker.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.TimePickerPopupMetadata">
            <summary>
            Implements design time support for SSWC.TimePickerPopup.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.TimePickerPopupMetadata.#ctor">
            <summary>
            To register design time metadata for SSWC.TimePickerPopup.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.TimeUpDownMetadata">
            <summary>
            To register design time metadata for SSWC.TimeUpDown.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.TimeUpDownMetadata.#ctor">
            <summary>
            To register design time metadata for SSWC.TimeUpDown.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Input.Toolkit.VisualStudio.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Input.Toolkit.VisualStudio.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.ButtonSpinnerMetadata">
            <summary>
            To register design time metadata for ButtonSpinner.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.ButtonSpinnerMetadata.#ctor">
            <summary>
            To register design time metadata for ButtonSpinner.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.DomainUpDownMetadata">
            <summary>
            To register design time metadata for SSWC.DomainUpDown.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.DomainUpDownMetadata.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:System.Windows.Controls.Input.Design.DomainUpDownMetadata"/> class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.NumericUpDownMetadata">
            <summary>
            To register design time metadata for SSWC.NumericUpDown.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.NumericUpDownMetadata.#ctor">
            <summary>
            To register design time metadata for SSWC.NumericUpDown.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.VisualStudio.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Input.VisualStudio.Design.MetadataRegistration._initialized">
            <summary>
            Borrowed from System.Windows.Controls.Toolbox.Design.MetadataRegistration:
            use a static flag to ensure metadata is registered only one.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.VisualStudio.Design.MetadataRegistration.Register">
            <summary>
            Called by tools to register design time metadata.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.VisualStudio.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Input.VisualStudio.Design.4.0.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Input.VisualStudio.Design.4.0</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.VisualStudio.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.VisualStudio.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Input.VisualStudio.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Input.VisualStudio.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Input.VisualStudio.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.AutoCompleteBoxMetadata">
            <summary>
            To register design time metadata for AutoCompleteBox.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.Design.AutoCompleteBoxMetadata.#ctor">
            <summary>
            To register design time metadata for AutoCompleteBox.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.AutoComplete">
            <summary>
              Looks up a localized string similar to Auto Complete.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Input.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Input.VisualStudio.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Input.VisualStudio.Design.MetadataRegistration._initialized">
            <summary>
            Borrowed from System.Windows.Controls.Toolbox.Design.MetadataRegistration:
            use a static flag to ensure metadata is registered only one.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.VisualStudio.Design.MetadataRegistration.Register">
            <summary>
            Called by tools to register design time metadata.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Input.VisualStudio.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Layout.Toolkit.Design.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Layout.Toolkit.Design</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Design.Common.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.Extensions.GetMemberName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Helper method to get member name with compile time verification to avoid typo.
            </summary>
            <typeparam name="T">The containing class of the member whose name is retrieved.</typeparam>
            <param name="expr">The lambda expression usually in the form of o => o.member.</param>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.EmptyDefaultInitializer">
            <summary>
            Empty default initializer to prevent Blend from adding its own default initialization. 
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.MetadataRegistrationBase">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.BuildAttributeTable">
            <summary>
            Build design time metadata attribute table.
            </summary>
            <returns>Custom attribute table.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddTables(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Find all AttributeTableBuilder subclasses in the assembly 
            and add their attributes to the assembly attribute table.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddDescriptions(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Create description attribute from run time assembly xml file.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.ParseDescription(System.Xml.Linq.XElement)">
            <summary>
            Create description string from xml doc summary tag.
            </summary>
            <param name="member">A single node of the xml doc.</param>
            <returns>Description string.</returns>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.XmlResourceName">
            <summary>
            Gets or sets the case sensitive resource name of the embedded XML file.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.MetadataRegistrationBase.AssemblyFullName">
            <summary>
            Gets or sets the FullName of the corresponding run time assembly.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1">
            <summary>
            Design mode value provider base class that always returns true for a Boolean property 
            of a model item when the item or any of its visual tree descendants is selected; and 
            returns the real value of the property when the item is de-selected. This is used to 
            expand and show hidden parts during of control at design time.
            </summary>
            <remarks>
            * SelectionPolicy can't be applied to DesignModeValueProvider directoly,
              so the AdornerProxy is needed as a proxy to apply the selection policy; 
            * The use of static variable InSelection is OK, because UI is singled 
              threaded, and ValueTranslationService.InvalidateProperty is synchronous.
            * Nest SelfOrDescendantSelectedPolicy and AdornerProxy inside the
              TrueIfSelectedDesignModeValueProvider because they are tightly coupled.
            * No need to abstract the DMVP class further to support multiple porperties, 
              types, and/or custom value translation logic yet.
            </remarks>
            <typeparam name="T">
            The Silverlight type whose property this DMVP is used for. 
            </typeparam>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.InSelection">
            <summary>
            Flag to TranslatePropertyValue method whether it is called by 
            AdornerProxy for the model item selected or de-selected.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.#cctor">
            <summary>
            Default constructor to add the property for translation.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.TranslatePropertyValue(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Metadata.PropertyIdentifier,System.Object)">
            <summary>
            Translate property value at design time.
            </summary>
            <param name="item">The model item whose property is to be translated.</param>
            <param name="identifier">The property to translate.</param>
            <param name="value">Value of the property.</param>
            <returns>Translated value of the property at design time.</returns>
        </member>
        <member name="P:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.Identifiers">
            <summary>
            Gets the static dictionary of control type and its Boolean property to be translated.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.SelfOrDescendantSelectedPolicy">
            <summary>
            Item policy to apply extensibility features when an model item 
            or any of its visual tree descendants is selected or de-selected.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.SelfOrDescendantSelectedPolicy.GetPolicyItems(Microsoft.Windows.Design.Interaction.Selection)">
            <summary>
            Return the policy items from the specified selection.
            </summary>
            <param name="selection">The current selection.</param>
            <returns>An enumeration of ModelItem objects to use for this policy.</returns>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.AdornerProxyBase">
            <summary>
            An adorner provider to apply selection policy.
            </summary>
            <remarks>
            CS0416: type parameter can't be used as attribute argument.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.AdornerProxyBase.cachedItem">
            <summary>
            Cached model item for InvalidateValue call in Deactivate.
            </summary>
            <remarks>
            Assume there is a separate AdornerCheap instance for each item in policy.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.AdornerProxyBase.Activate(Microsoft.Windows.Design.Model.ModelItem)">
            <summary>
            Set selection state and trigger value translation.
            </summary>
            <param name="item">The model item.</param>
        </member>
        <member name="M:System.Windows.Controls.Design.Common.TrueIfSelectedDesignModeValueProvider`1.AdornerProxyBase.Deactivate">
            <summary>
            Revert selection state and revert to real property value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Design.Common.ToolboxCategoryPaths">
            <summary>
            Names for ToolboxCategoryAttribute.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.BasicControls">
            <summary>
            Basic Controls category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.Controls">
            <summary>
            Controls category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.ControlParts">
            <summary>
            Control Parts category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.DataVisualization">
            <summary>
            DataVisualization category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.DataVisualizationControlParts">
            <summary>
            DataVisualization/Control Parts category.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Design.Common.ToolboxCategoryPaths.Theming">
            <summary>
            Theming category.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.AccordionItemDefaultInitializer">
            <summary>
            Default initializer for AccordionItem. 
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.Design.AccordionItemDefaultInitializer.InitializeDefaults(Microsoft.Windows.Design.Model.ModelItem)">
            <summary>
            Sets the default property values for AccordionItem.
            </summary>
            <param name="item">The AccordionItem ModelItem.</param>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.AccordionItemIsSelectedDesignModeValueProvider">
            <summary>
            Design mode value provider for AccordionItem.IsDropDownOpen property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Layout.Design.AccordionItemIsSelectedDesignModeValueProvider._propertyIdentifier">
            <summary>
            Identifier of the property this DMVP is for.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.Design.AccordionItemIsSelectedDesignModeValueProvider.#cctor">
            <summary>
            Use the static constructor to add one property identifier to base.Identifiers.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.Design.AccordionItemIsSelectedDesignModeValueProvider.#ctor">
            <summary>
            Default constructor to add the property for design time translation.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.AccordionItemIsSelectedDesignModeValueProvider.AdornerProxy">
            <summary>
            An adorner provider to apply selection policy.
            </summary>
            <remarks>
            Work around CS0416: have specialized types for and to apply UsesItemPolicy attribute.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.AccordionItemMetadata">
            <summary>
            To register design time metadata for AccordionItem.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.Design.AccordionItemMetadata.#ctor">
            <summary>
            To register design time metadata for AccordionItem.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.AccordionMetadata">
            <summary>
            To register design time metadata for Accordion.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.Design.AccordionMetadata.#ctor">
            <summary>
            To register design time metadata for Accordion.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.ExpandableContentControlMetadata">
            <summary>
            To register design time metadata for SSWC.ExpandableContentControl.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.Design.ExpandableContentControlMetadata.#ctor">
            <summary>
            To register design time metadata for SSWC.ExpandableContentControl.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.LayoutTransformerMetadata">
            <summary>
            To register design time metadata for SSWC.LayoutTransformer.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.Design.LayoutTransformerMetadata.#ctor">
            <summary>
            To register design time metadata for SSWC.LayoutTransformer.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.MetadataRegistration">
            <summary>
            MetadataRegistration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.Design.MetadataRegistration.#ctor">
            <summary>
            Design time metadata registration class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.Design.MetadataRegistration.AddAttributes(Microsoft.Windows.Design.Metadata.AttributeTableBuilder)">
            <summary>
            Provide a place to add custom attributes without creating a AttributeTableBuilder subclass.
            </summary>
            <param name="builder">The assembly attribute table builder.</param>
        </member>
        <member name="P:System.Windows.Controls.Layout.Design.MetadataRegistration.AttributeTable">
            <summary>
            Gets the AttributeTable for design time metadata.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Layout.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Layout.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Layout.Design.Properties.Resources.AccordionItem_Content">
            <summary>
              Looks up a localized string similar to Content.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Layout.Design.Properties.Resources.AccordionItem_Header">
            <summary>
              Looks up a localized string similar to Header.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Layout.Design.Properties.Resources.AutoComplete">
            <summary>
              Looks up a localized string similar to Auto Complete.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Layout.Design.Properties.Resources.CommonProperties">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Layout.Design.TransitioningContentControlMetadata">
            <summary>
            To register design time metadata for SSWC.TransitioningContentControl.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Layout.Design.TransitioningContentControlMetadata.#ctor">
            <summary>
            To register design time metadata for SSWC.TransitioningContentControl.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\3.0\Toolkit\Aug09\Samples\Source\Binaries\System.Windows.Controls.Input.Toolkit.XML ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Input.Toolkit</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Automation_OperationCannotBePerformed">
            <summary>
              Looks up a localized string similar to Cannot perform operation..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.DomainUpDown_CurrentIndex_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid index value &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.DomainUpDown_InvalidInputAction_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid InvalidInputAction value &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Expander_OnExpandDirectionPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid ExpandDirection value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.InvalidAttemptToChangeReadOnlyProperty">
            <summary>
              Looks up a localized string similar to Invalid attempt to change read-only property &quot;{0}.&quot;.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ListTimePickerPopup_TimeItemsSelection_ReadOnly">
            <summary>
              Looks up a localized string similar to Cannot set read-only property TimeItemsSelection..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.NumericUpDown_EnsureValidDoubleValue_InvalidDoubleValue">
            <summary>
              Looks up a localized string similar to Invalid double value &apos;{0}&apos;: valid value is of double type and within decimal range..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.NumericUpDown_EnsureValidIncrementValue_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid Increment value &apos;{0}&apos;: valid value is of double type, within decimal range, and positive.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.NumericUpDown_OnDecimalPlacesPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid DecimalPlaces value &apos;{0}&apos;: valid value is of int type and within 0 and 15 inclusive..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ObservableObjectCollection_ReadOnly">
            <summary>
              Looks up a localized string similar to The collection is currently ReadOnly and should not be modified..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Picker_OnMaxDropDownHeightPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid maximum drop down height value &apos;{0}&apos;. The value must be greater than or equal to zero..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Picker_PopupButtonModeNotValid">
            <summary>
              Looks up a localized string similar to Invalid PopupButtonMode value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Rating_SetItemCount_ItemCountMustBeLargerThanOrEqualToZero">
            <summary>
              Looks up a localized string similar to Value must be larger than or equal to 0..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.RatingAutomationPeer_GetLocalizedControlTypeCore">
            <summary>
              Looks up a localized string similar to Rating.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.RatingAutomationPeer_SetValue">
            <summary>
              Looks up a localized string similar to Value must be null or a number between 0 and 1..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.RatingItemAutomationPeer_GetLocalizedControlTypeCore">
            <summary>
              Looks up a localized string similar to Star.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Spinner_SpinNotValid">
            <summary>
              Looks up a localized string similar to Spin action is not valid at this moment..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TimeInput_PopupMinutesInterval_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid PopupMinutesInterval &apos;{0}&apos;. The interval can be set to 0 (no interval) to and including 59..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TimeInput_PopupSecondsInterval_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid PopupSecondsInterval &apos;{0}&apos;.The interval can be set to 0 (no interval) to and including 59..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TimePicker_PopupSetInStyle">
            <summary>
              Looks up a localized string similar to Cannot set the PopupProperty in a style. Please use PopupTemplate..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TimePicker_PopupTimeSelectionModeNotValid">
            <summary>
              Looks up a localized string similar to Invalid PopupTimeSelectionMode for this popup, value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TimeUpDown_OnTimeHintContentChanged">
            <summary>
              Looks up a localized string similar to Cannot set read-only property TimeHintContent..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TypeConverters_Convert_CannotConvert">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is unable to convert &apos;{1}&apos; to &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TypeConverters_ConvertFrom_CannotConvertFromType">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; cannot convert from &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.UpDown_ParseException">
            <summary>
              Looks up a localized string similar to Cannot parse text &apos;{0}&apos;.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Extensions.Invert(System.Windows.Media.Matrix,System.Windows.Media.Matrix@)">
            <summary>
            Inverts a Matrix. The Invert functionality on the Matrix type is 
            internal to the framework only. Since Matrix is a struct, an out 
            parameter must be presented.
            </summary>
            <param name="m">The Matrix object.</param>
            <param name="outputMatrix">The matrix to return by an output 
            parameter.</param>
            <returns>Returns a value indicating whether the type was 
            successfully inverted. If the determinant is 0.0, then it cannot 
            be inverted and the original instance will remain untouched.</returns>
        </member>
        <member name="M:System.Windows.Controls.Extensions.Contains(System.String,System.String,System.StringComparison)">
            <summary>
            An implementation of the Contains member of string that takes in a 
            string comparison. The traditional .NET string Contains member uses 
            StringComparison.Ordinal.
            </summary>
            <param name="s">The string.</param>
            <param name="value">The string value to search for.</param>
            <param name="comparison">The string comparison type.</param>
            <returns>Returns true when the substring is found.</returns>
        </member>
        <member name="T:System.Windows.Controls.BindingSourceEvaluator`1">
            <summary>
            A framework element that permits a binding to be evaluated in a new data
            context leaf node. Uses the BindingSource to do the evaluation.
            </summary>
            <typeparam name="T">The type of dynamic binding to return.</typeparam>
            <remarks>Mimicks the class BindingEvaluator that uses DataContext
            to do evaluation.</remarks>
        </member>
        <member name="F:System.Windows.Controls.BindingSourceEvaluator`1.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.BindingSourceEvaluator`1.#ctor(System.Windows.Data.Binding)">
            <summary>
            Initializes a new instance of the BindingSourceEvaluator class.
            </summary>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:System.Windows.Controls.BindingSourceEvaluator`1.GetDynamicValue(System.Object)">
            <summary>
            Evaluates the specified source.
            </summary>
            <param name="source">The object used as a source for the
            evaluation.</param>
            <returns>The evaluated binding.</returns>
            <remarks>Only uses Path, Converter, ConverterCulture and
            ConverterParameter.</remarks>
        </member>
        <member name="P:System.Windows.Controls.BindingSourceEvaluator`1.Value">
            <summary>
            Gets the data item string value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.BindingSourceEvaluator`1.ValueBinding">
            <summary>
            Gets the value binding that is used as a template
            for the actual evaluation.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.InteractionHelper">
            <summary>
            The InteractionHelper provides controls with support for all of the
            common interactions like mouse movement, mouse clicks, key presses,
            etc., and also incorporates proper event semantics when the control is
            disabled.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InteractionHelper.SequentialClickThresholdInMilliseconds">
            <summary>
            The threshold used to determine whether two clicks are temporally
            local and considered a double click (or triple, quadruple, etc.).
            500 milliseconds is the default double click value on Windows.
            This value would ideally be pulled form the system settings.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InteractionHelper.SequentialClickThresholdInPixelsSquared">
            <summary>
            The threshold used to determine whether two clicks are spatially
            local and considered a double click (or triple, quadruple, etc.)
            in pixels squared.  We use pixels squared so that we can compare to
            the distance delta without taking a square root.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InteractionHelper._updateVisualState">
            <summary>
            Reference used to call UpdateVisualState on the base class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.#ctor(System.Windows.Controls.Control)">
            <summary>
            Initializes a new instance of the InteractionHelper class.
            </summary>
            <param name="control">Control receiving interaction.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
            <remarks>
            UpdateVisualState works differently than the rest of the injected
            functionality.  Most of the other events are overridden by the
            calling class which calls Allow, does what it wants, and then calls
            Base.  UpdateVisualState is the opposite because a number of the
            methods in InteractionHelper need to trigger it in the calling
            class.  We do this using the IUpdateVisualState internal interface.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.UpdateVisualStateBase(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the control's Loaded event.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle changes to the control's IsEnabled property.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnIsReadOnlyChanged(System.Boolean)">
            <summary>
            Handles changes to the control's IsReadOnly property.
            </summary>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnApplyTemplateBase">
            <summary>
            Update the visual state of the control when its template is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Check if the control's GotFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnGotFocusBase">
            <summary>
            Base implementation of the virtual GotFocus event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Check if the control's LostFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnLostFocusBase">
            <summary>
            Base implementation of the virtual LostFocus event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Check if the control's MouseEnter event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseEnterBase">
            <summary>
            Base implementation of the virtual MouseEnter event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Check if the control's MouseLeave event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseLeaveBase">
            <summary>
            Base implementation of the virtual MouseLeave event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseLeftButtonDownBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonDown event
            handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseLeftButtonUpBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonUp event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Check if the control's KeyDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Check if the control's KeyUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.Control">
            <summary>
            Gets the control the InteractionHelper is targeting.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsFocused">
            <summary>
            Gets a value indicating whether the control has focus.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsMouseOver">
            <summary>
            Gets a value indicating whether the mouse is over the control.
            </summary> 
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsReadOnly">
            <summary>
            Gets a value indicating whether the read-only property is set.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsPressed">
            <summary>
            Gets a value indicating whether the mouse button is pressed down
            over the control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.LastClickTime">
            <summary>
            Gets or sets the last time the control was clicked.
            </summary>
            <remarks>
            The value is stored as Utc time because it is slightly more
            performant than converting to local time.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.LastClickPosition">
            <summary>
            Gets or sets the mouse position of the last click.
            </summary>
            <remarks>The value is relative to the control.</remarks>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.ClickCount">
            <summary>
            Gets the number of times the control was clicked.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ItemsControlHelper">
            <summary>
            The ItemContainerGenerator provides useful utilities for ItemsControls.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.ItemsControlHelper._itemsHost">
            <summary>
            A Panel that is used as the ItemsHost of the ItemsControl.  This
            property will only be valid when the ItemsControl is live in the
            tree and has generated containers for some of its items.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ItemsControlHelper._scrollHost">
            <summary>
            A ScrollViewer that is used to scroll the items in the ItemsHost.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlHelper.#ctor(System.Windows.Controls.ItemsControl)">
            <summary>
            Initializes a new instance of the ItemContainerGenerator.
            </summary>
            <param name="control">
            The ItemsControl being tracked by the ItemContainerGenerator.
            </param>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlHelper.OnApplyTemplate">
            <summary>
            Apply a control template to the ItemsControl.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlHelper.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Windows.Style)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="element">
            Container element used to display the specified item.
            </param>
            <param name="parentItemContainerStyle">
            The ItemContainerStyle for the parent ItemsControl.
            </param>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlHelper.UpdateItemContainerStyle(System.Windows.Style)">
            <summary>
            Update the style of any generated items when the ItemContainerStyle
            has been changed.
            </summary>
            <param name="itemContainerStyle">The ItemContainerStyle.</param>
            <remarks>
            Silverlight does not support setting a Style multiple times, so we
            only attempt to set styles on elements whose style hasn't already
            been set.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlHelper.ScrollIntoView(System.Windows.FrameworkElement)">
            <summary>
            Scroll the desired element into the ScrollHost's viewport.
            </summary>
            <param name="element">Element to scroll into view.</param>
        </member>
        <member name="P:System.Windows.Controls.ItemsControlHelper.ItemsControl">
            <summary>
            Gets or sets the ItemsControl being tracked by the
            ItemContainerGenerator.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ItemsControlHelper.ItemsHost">
            <summary>
            Gets a Panel that is used as the ItemsHost of the ItemsControl.
            This property will only be valid when the ItemsControl is live in
            the tree and has generated containers for some of its items.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ItemsControlHelper.ScrollHost">
            <summary>
            Gets a ScrollViewer that is used to scroll the items in the
            ItemsHost.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.IUpdateVisualState">
            <summary>
            The IUpdateVisualState interface is used to provide the
            InteractionHelper with access to the type's UpdateVisualState method.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.IUpdateVisualState.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="T:System.Windows.Controls.TypeConverters">
            <summary>
            Common TypeConverter functionality.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.CanConvertFrom``1(System.Type)">
            <summary>
            Returns a value indicating whether this converter can convert an
            object of the given type to an instance of the expected type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="sourceType">
            The type of the source that is being evaluated for conversion.
            </param>
            <returns>
            A value indicating whether the converter can convert the provided
            type.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.ConvertFrom``1(System.ComponentModel.TypeConverter,System.Object)">
            <summary>
            Attempts to convert a specified object to an instance of the
            expected type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="converter">TypeConverter instance.</param>
            <param name="value">The object being converted.</param>
            <returns>
            The instance of the expected type created from the converted object.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.CanConvertTo``1(System.Type)">
            <summary>
            Determines whether conversion is possible to a specified type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="destinationType">
            Identifies the data type to evaluate for conversion.
            </param>
            <returns>
            A value indicating whether conversion is possible.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.ConvertTo(System.ComponentModel.TypeConverter,System.Object,System.Type)">
            <summary>
            Attempts to convert a specified object to an instance of the
            desired type.
            </summary>
            <param name="converter">TypeConverter instance.</param>
            <param name="value">The object being converted.</param>
            <param name="destinationType">
            The type to convert the value to.
            </param>
            <returns>
            The value of the conversion to the specified type.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.VisualStates">
            <summary>
            Names and helpers for visual states in the controls.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupCommon">
            <summary>
            Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNormal">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateReadOnly">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateMouseOver">
            <summary>
            MouseOver state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePressed">
            <summary>
            Pressed state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDisabled">
            <summary>
            Disabled state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupFocus">
            <summary>
            Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnfocused">
            <summary>
            Unfocused state of the Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateFocused">
            <summary>
            Focused state of the Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupSelection">
            <summary>
            Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSelected">
            <summary>
            Selected state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnselected">
            <summary>
            Unselected state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSelectedInactive">
            <summary>
            Selected inactive state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupExpansion">
            <summary>
            Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpanded">
            <summary>
            Expanded state of the Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCollapsed">
            <summary>
            Collapsed state of the Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupPopup">
            <summary>
            Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePopupOpened">
            <summary>
            Opened state of the Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePopupClosed">
            <summary>
            Closed state of the Popup state group.
            </summary>
