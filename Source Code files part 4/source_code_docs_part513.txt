ember name="P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.UpdateMode">
      <summary>Gets or sets the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.UpdateMode" /> for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection" />.</summary>
      <returns>An <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.UpdateMode" /> enumeration.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.DBKINDENUM">
      <summary>Provides an enumeration for use by the tools for upgrading Visual Basic 6.0 applications to Visual Basic 2010.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBKINDENUM.DBKIND_GUID_NAME">
      <summary>0</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBKINDENUM.DBKIND_GUID_PROPID">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBKINDENUM.DBKIND_NAME">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBKINDENUM.DBKIND_PGUID_NAME">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBKINDENUM.DBKIND_PGUID_PROPID">
      <summary>4</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBKINDENUM.DBKIND_PROPID">
      <summary>5</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBKINDENUM.DBKIND_GUID">
      <summary>6</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.DBPROPIDSET">
      <summary>Provides a Structure for use in an application that has been upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBPROPIDSET.cPropertyIDs">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBPROPIDSET" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBPROPIDSET.guidPropertySet">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBPROPIDSET" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBPROPIDSET.rgPropertyIDs">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBPROPIDSET" /> Structure.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IAccessor">
      <summary>Provides an implementation of the OLE DB IAccessor interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(System.Int32,System.Int32@)">
      <summary>Adds a reference count to an existing accessor.</summary>
      <param name="hAccessor">The handle of the accessor for which to increment the reference count.</param>
      <param name="cRefCount">A pointer to memory in which to return the reference count of the accessor handle. If <paramref name="cRefCount" /> is a null pointer, no reference count is returned.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(System.Int32,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[],System.Int32,System.Int32@,System.IntPtr)">
      <summary>Creates an accessor from a set of bindings.</summary>
      <param name="accessorFlags">A bitmask that describes the properties of the accessor and how it can be used. </param>
      <param name="cBindings">The number of bindings in the accessor.</param>
      <param name="bindings">An array of <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> structures.</param>
      <param name="cbRowSize">The number of bytes allocated for a single set of parameters or criteria values in the consumer's buffer.</param>
      <param name="hAccessor">A pointer to memory in which to return the handle of the created accessor.</param>
      <param name="pBindStatus">A pointer to an array of DBBINDSTATUS values.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(System.Int32,System.Int32@,System.Int32@,System.IntPtr@)">
      <summary>Returns the bindings in an accessor.</summary>
      <param name="hAccessor">The handle of the accessor for which to return the bindings.</param>
      <param name="accessorFlags">A pointer to memory in which to return a bitmask that describes the properties of the accessor and how it is intended to be used.</param>
      <param name="cBindings">A pointer to memory in which to return the number of bindings in the accessor.</param>
      <param name="rgBindings">A pointer to memory in which to return an array of DBBINDSTATUS structures.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(System.Int32,System.Int32@)">
      <summary>Releases an accessor.</summary>
      <param name="hAccessor">The handle of the accessor to release.</param>
      <param name="cRefCount">A pointer to memory in which to return the remaining reference count of the accessor handle.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IChapteredRowset">
      <summary>Provides an implementation of the OLE DB IAccessor interface for use by applications upgraded from Visual Basic 6.0.  </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IChapteredRowset.AddRefChapter(System.Int32,System.Int32@)">
      <summary>Adds a reference count to an existing chapter.</summary>
      <param name="hChapter">The handle of the chapter for which to increment the reference count.</param>
      <param name="cRefCount">A pointer to memory in which to return the reference count of the chapter handle.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IChapteredRowset.ReleaseChapter(System.Int32,System.Int32@)">
      <summary>Releases a chapter.</summary>
      <param name="hChapter">The chapter handle.</param>
      <param name="cRefCount">A pointer to memory in which to return the reference count of the chapter handle.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IColumnsInfo">
      <summary>Provides an implementation of the OLE DB IColumnInfo interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IColumnsInfo.GetColumnInfo(System.Int32@,System.IntPtr@,System.IntPtr@)">
      <summary>Returns the column metadata needed by most consumers.</summary>
      <param name="cColumns">A pointer to memory in which to return the number of columns in the rowset; this number includes the bookmark column, if there is one.</param>
      <param name="pColumnInfo">A pointer to memory in which to return an array of DBCOLUMNINFO structures.</param>
      <param name="pStringsBuffer">A pointer to memory in which to return a pointer to storage for all string values (names used either within columnid or for pwszName) within a single allocation block.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IColumnsInfo.MapColumnIDs(System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBID[],System.Int32[])">
      <summary>Returns an array of ordinals of the columns in a rowset that are identified by the specified column IDs.</summary>
      <param name="cColumnIDs">The number of column IDs to map.</param>
      <param name="columnIDs">An array of IDs of the columns for which to determine the column ordinals.</param>
      <param name="rgColumns">An array of <paramref name="cColumnIDs" /> ordinals of the columns identified by the elements of <paramref name="columnIDs" />.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint">
      <summary>Provides an implementation of the OLE DB IConnectionPoint interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint.Advise(System.IntPtr,System.Int32@)">
      <summary>Establishes an advisory connection between the connection point and the caller's sink object.</summary>
      <param name="sink">A reference to the sink to receive calls for the outgoing interface managed by this connection point.</param>
      <param name="cookie">When this method returns, contains the connection cookie. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint.EnumConnections(Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections@)">
      <summary>Creates an enumerator object for iteration through the connections that exist to this connection point.</summary>
      <param name="enumC">When this method returns, contains the newly created enumerator. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint.GetConnectionInterface(System.Guid@)">
      <summary>Returns the IID of the outgoing interface managed by this connection point.</summary>
      <param name="piid">When this parameter returns, contains the IID of the outgoing interface managed by this connection point. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint.GetConnectionPointContainer(Microsoft.VisualBasic.Compatibility.VB6.IConnectionPointContainer@)">
      <summary>Retrieves the IConnectionPointContainer interface pointer to the connectable object that conceptually owns this connection point. </summary>
      <param name="cpc">When this parameter returns, contains the connectable object's IConnectionPointContainer interface. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint.Unadvise(System.Int32)">
      <summary>Closes an advisory connection that was previously established through the <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint.Advise(System.IntPtr,System.Int32@)" /> method.</summary>
      <param name="cookie">The connection cookie previously returned from the <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint.Advise(System.IntPtr,System.Int32@)" /> method.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPointContainer">
      <summary>Provides an implementation of the OLE DB IConnectionPointContainer interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPointContainer.EnumConnectionPoints(Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints@)">
      <summary>Creates an enumerator of all the connection points supported in the connectable object, one connection point per IID.</summary>
      <param name="enumC">When the method returns, this parameter contains the interface pointer of the enumerator. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPointContainer.FindConnectionPoint(System.Guid@,Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint@)">
      <summary>Queries the connectable object about whether it has a connection point for a particular IID, and, if so, returns the IConnectionPoint interface pointer to that connection point.</summary>
      <param name="riid">A reference to the outgoing interface IID whose connection point is being requested. </param>
      <param name="cp">When the method returns, this parameter contains the connection point that manages the outgoing interface <paramref name="riid" />. This parameter is passed uninitialized.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat">
      <summary>Provides support for the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DBinding.DataFormat" /> property of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBinding" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.Clone(Microsoft.VisualBasic.Compatibility.VB6.IDataFormat@)">
      <summary>Creates a shallow copy of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" />.</summary>
      <param name="newObject">An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.Convert(System.Int32,System.Object,System.Object@)">
      <summary>Converts an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> to a Visual Basic 6.0 Variant.</summary>
      <param name="cookie">An Integer.</param>
      <param name="from">An <see cref="T:System.Object" />.</param>
      <param name="varTo">A <see cref="T:Microsoft.VisualBasic.VariantType" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.Default(System.Boolean@)">
      <summary>Determines whether an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> is the default <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" />.</summary>
      <param name="fDefault">A <see cref="T:System.Boolean" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.GetBinding(System.Runtime.InteropServices.VarEnum,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.IRowset,Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO@,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING@,System.Int32@,System.Int32@)">
      <summary>Gets a binding for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" />.</summary>
      <param name="vtPropHint">A <see cref="T:System.Runtime.InteropServices.VarEnum" />.</param>
      <param name="rgfDataFormat">An Integer.</param>
      <param name="rowset">An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IRowset" />.</param>
      <param name="columnInfo">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO" /> structure.</param>
      <param name="binding">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> structure.</param>
      <param name="size">An Integer.</param>
      <param name="cookie">An Integer.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.GetData(System.Int32,System.IntPtr,System.Object@,System.Int32@,System.Object)">
      <summary>Gets the data for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> interface.</summary>
      <param name="cookie">An Integer.</param>
      <param name="from">An <see cref="T:System.IntPtr" />.</param>
      <param name="varTo">A <see cref="T:Microsoft.VisualBasic.VariantType" />.</param>
      <param name="dbStatus">An Integer.</param>
      <param name="pObject">An <see cref="T:System.Object" /> .</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.GetLcid(System.Int32@)">
      <summary>Gets a locale ID for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> interface.</summary>
      <param name="lcid">An Integer.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.GetRawData(System.Int32,System.IntPtr,System.Object@,System.Int32@)">
      <summary>Gets the raw data for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> interface.</summary>
      <param name="cookie">An Integer.</param>
      <param name="from">An <see cref="T:System.IntPtr" />.</param>
      <param name="varTo">A <see cref="T:Microsoft.VisualBasic.VariantType" />.</param>
      <param name="dbStatus">An Integer.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.GetSubFormatType(System.Int32@)">
      <summary>Gets the subformat type for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> interface.</summary>
      <param name="subFormatType">An Integer.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.ReleaseBinding(System.Int32)">
      <summary>Releases a binding for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> interface.</summary>
      <param name="cookie">An Integer.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.ReleaseData(System.Int32,System.IntPtr)">
      <summary>Releases the data for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> interface.</summary>
      <param name="cookie">An Integer.</param>
      <param name="pv">An <see cref="T:System.IntPtr" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.SetData(System.Int32,System.Object@,System.IntPtr,System.Object)">
      <summary>Sets the data for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> interface.</summary>
      <param name="cookie">An Integer.</param>
      <param name="from">An <see cref="T:System.IntPtr" />.</param>
      <param name="pVarTo">A <see cref="T:Microsoft.VisualBasic.VariantType" />.</param>
      <param name="pObject">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.SetLcid(System.Int32)">
      <summary>Sets the locale ID for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" />.</summary>
      <param name="lcid">An Integer.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.SetRawData(System.Int32,System.Object,System.IntPtr)">
      <summary>Sets the raw data for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" />.</summary>
      <param name="cookie">An Integer.</param>
      <param name="from">An <see cref="T:System.IntPtr" />.</param>
      <param name="pVarTo">A <see cref="T:Microsoft.VisualBasic.VariantType" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.SetSubFormatType(System.Int32)">
      <summary>Sets the subformat type for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> interface.</summary>
      <param name="subFormatType">An Integer.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp">
      <summary>Provides support for the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DBinding.DataFormat" /> property of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBinding" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints">
      <summary>Manages the definition of the IEnumConnectionPoints interface.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Clone(Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints@)">
      <summary>Creates a new enumerator that contains the same enumeration state as the current one. </summary>
      <param name="ecp">When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Next(System.Int32,Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint[]@,System.Int32@)">
      <summary>Retrieves a specified number of items in the enumeration sequence.  </summary>
      <param name="cConnections">The number of <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint" /> references to return in <paramref name="cp" />.</param>
      <param name="cp">When this method returns, contains a reference to the enumerated connections. This parameter is passed uninitialized.</param>
      <param name="cFetched">When this method returns, contains a reference to the actual number of connections enumerated in <paramref name="cp" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Reset">
      <summary>Resets the enumeration sequence to the beginning.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Skip(System.Int32)">
      <summary>Skips a specified number of items in the enumeration sequence.</summary>
      <param name="cConnections">The number of elements to skip in the enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections">
      <summary>Manages the definition of the IEnumConnections interface.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Clone(Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections@)">
      <summary>Creates a new enumerator that contains the same enumeration state as the current one.</summary>
      <param name="ec">When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Next(System.Int32,Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA[]@,System.Int32@)">
      <summary>Retrieves a specified number of items in the enumeration sequence.</summary>
      <param name="cConnections">The number of <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA" /> structures to return in <paramref name="cd" />.</param>
      <param name="cd">When this method returns, contains a reference to the enumerated connections. This parameter is passed uninitialized.</param>
      <param name="cFetched">When this method returns, contains a reference to the actual number of connections enumerated in <paramref name="cd" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Reset">
      <summary>Resets the enumeration sequence to the start.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Skip(System.Int32)">
      <summary>Skips a specified number of items in the enumeration sequence.</summary>
      <param name="cConnections">The number of elements to skip in the enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IRowPosition">
      <summary>Provides an implementation of the OLE DB IRowPosition interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowPosition.ClearRowPosition">
      <summary>Clears the row position.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowPosition.GetRowPosition(System.Int32@,System.Int32@,System.Int32@)">
      <summary>Retrieves the current row position.</summary>
      <param name="hChapter">A pointer to memory in which to return the chapter associated with the current row. If the rowset is not chaptered, <paramref name="hChapter" /> is set to DB_NULL_HCHAPTER. If <paramref name="hChapter" /> is a null pointer on input, no chapter value is returned.</param>
      <param name="hRow">A pointer to memory in which to return the hRow of the current row position; or DB_NULL_HROW if there is no current row position.</param>
      <param name="dbPositionFlags">A pointer to memory in which to return additional information about the row position.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowPosition.GetRowset(System.Guid@,System.Object@)">
      <summary>Returns the current underlying Rowset.</summary>
      <param name="iid">The requested IID for the rowset returned in <paramref name="rowset" />.</param>
      <param name="rowset">A pointer to memory in which to return the interface pointer of the underlying rowset.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowPosition.Initialize(System.Object)">
      <summary>Initializes the row position object by setting the source rowset.</summary>
      <param name="rowset">Pointer to an interface on the source rowset.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowPosition.SetRowPosition(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the current row position.</summary>
      <param name="hChapter">The chapter associated with the current row, or with DB_NULL_HCHAPTER if the rowset is not chaptered.</param>
      <param name="hRow">The new current row.</param>
      <param name="dbPositionFlags">A flag indicating additional information about the new row position.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IRowPositionChange">
      <summary>Provides an implementation of the OLE DB IRowPositionChange interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowPositionChange.OnRowPositionChange(System.Int32,System.Int32,System.Int32)">
      <summary>Notifies the consumer of a row position object of a change to the current row position.</summary>
      <returns>An Integer that represents the result.  </returns>
      <param name="dbReason">The reason of the event that caused this change.</param>
      <param name="eventPhase">The phase of this notification.</param>
      <param name="fCantDeny">When this flag is set to true, the consumer cannot veto the event by returning S_FALSE because the provider cannot undo the event.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IRowset">
      <summary>Provides an implementation of the OLE DB IRowset interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowset.AddRefRows(System.Int32,System.Int32[],System.Int32[]@,System.Int32[]@)">
      <summary>Adds a reference count to an existing row handle.</summary>
      <param name="cRows">The number of rows for which to increment the reference count.</param>
      <param name="hRows">An array of row handles for which to increment the reference count. The reference count of row handles is incremented by one for each time they appear in the array.</param>
      <param name="refCounts">An array with <paramref name="cRows" /> elements in which to return the new reference count for each row handle. The consumer allocates memory for this array. If <paramref name="refCounts" /> is a null pointer, no reference counts are returned.</param>
      <param name="rowStatus">An array with <paramref name="cRows" /> elements in which to return values indicating the status of each row specified in <paramref name="hRows" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetData(System.Int32,System.Int32,System.IntPtr)">
      <summary>Retrieves data from the rowset's copy of the row.</summary>
      <param name="hRow">The handle of the row from which to get the data.</param>
      <param name="hAccessor">The handle of the accessor to use.</param>
      <param name="pData">A pointer to a buffer in which to return the data.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetNextRows(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32[]@)">
      <summary>Fetches rows sequentially, remembering the previous position.</summary>
      <param name="hChapter">The chapter handle designating the rows to fetch.</param>
      <param name="lRowsOffset">The signed count of rows to skip before fetching rows. Deleted rows that the provider has removed from the rowset are not counted in the skip.</param>
      <param name="cRows">The number of rows to fetch. A negative number means to fetch backward.</param>
      <param name="cRowsObtained">A pointer to memory in which to return the actual number of fetched rows.</param>
      <param name="hRows">A pointer to memory in which to return an array of handles of the fetched rows.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowset.ReleaseRows(System.Int32,System.Int32[],System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary>Releases rows.</summary>
      <returns>An Integer representing the result.</returns>
      <param name="cRows">The number of rows to release.</param>
      <param name="hRows">An array of handles of the rows to be released. The row handles do not need to form a logical cluster; they may have been obtained at separate times and need not be for contiguous underlying rows. Row handles are decremented by one reference count for each time they appear in the array.</param>
      <param name="rowOptions">An array of <paramref name="cRows" /> elements containing bitmasks indicating additional options to be specified when a row is released.</param>
      <param name="rowRefCounts">An array with <paramref name="cRows" /> elements in which to return the new reference count of each row.</param>
      <param name="rgRowStatus">An array with <paramref name="cRows" /> elements in which to return values indicating the status of each row specified in <paramref name="hRows" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowset.RestartPosition(System.Int32)">
      <summary>Repositions the next fetch position to its initial position.</summary>
      <returns>An Integer representing the result.</returns>
      <param name="hChapter">The chapter handle designating the rows on which to reposition.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IRowsetChange">
      <summary>Provides an implementation of the OLE DB IRowsetChange interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetChange.DeleteRows(System.Int32,System.Int32,System.Int32[],System.Int32[]@)">
      <summary>Deletes rows.</summary>
      <param name="hChapterReserved">The chapter handle.</param>
      <param name="cRows">The number of rows to be deleted.</param>
      <param name="rghRows">An array of handles of the rows to be deleted.</param>
      <param name="rgRowStatus">An array with <paramref name="cRows" /> elements in which to return values indicating the status of each row specified in <paramref name="rghRows" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetChange.InsertRow(System.Int32,System.Int32,System.IntPtr,System.Int32@)">
      <summary>Creates and initializes a new row.</summary>
      <param name="hChapterReserved">The chapter handle.</param>
      <param name="hAccessor">The handle of the accessor to use.</param>
      <param name="pData">A pointer to memory containing the new data values, at offsets that correspond to the bindings in the accessor.</param>
      <param name="hRow">A pointer to memory in which to return the handle of the new row.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetChange.SetData(System.Int32,System.Int32,System.IntPtr)">
      <summary>Sets data values in one or more columns in a row.</summary>
      <param name="hRow">The handle of the row in which to set data.</param>
      <param name="hAccessor">The handle of the accessor to use.</param>
      <param name="pData">A pointer to memory containing the new data values, at offsets that correspond to the bindings in the accessor.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IRowsetIdentity">
      <summary>Provides an implementation of the OLE DB IRowsetIdentity interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetIdentity.IsSameRow(System.Int32,System.Int32)">
      <summary>Compares two row handles to see whether they refer to the same row instance.</summary>
      <returns>An Integer representing the result.</returns>
      <param name="hThisRow">The handle of an active row.</param>
      <param name="hThatRow">The handle of an active row.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IRowsetInfo">
      <summary>Provides an implementation of the OLE DB IRowsetInfo interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetInfo.GetProperties(System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBPROPIDSET[],System.Int32@,System.IntPtr@)">
      <summary>Returns the current settings of all properties supported by the rowset.</summary>
      <param name="cPropertyIDSets">The number of DBPROPIDSET structures in <paramref name="rgPropertyIDSets" />.</param>
      <param name="rgPropertyIDSets">An array of DBPROPIDSET structures.</param>
      <param name="cPropertySets">A pointer to memory in which to return the number of DBPROPSET structures returned in <paramref name="prgPropertySets" />.</param>
      <param name="prgPropertySets">A pointer to memory in which to return an array of DBPROPSET structures.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetInfo.GetReferencedRowset(System.Int32,System.Guid,System.Object@)">
      <summary>Returns an interface pointer to the rowset to which a bookmark or chapter applies.</summary>
      <param name="iOrdinal">The bookmark or chapter column for which to get the related rowset.</param>
      <param name="riid">The IID of the interface pointer to return in <paramref name="referencedRowset" />.</param>
      <param name="referencedRowset">A pointer to memory in which to return an IUnknown interface pointer on the rowset that interprets values from this column.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetInfo.GetSpecification(System.Guid,System.Object@)">
      <summary>Returns an interface pointer on the object (command or session) that created this rowset.</summary>
      <param name="riid">The IID of the interface on which to return a pointer.</param>
      <param name="specification">A pointer to memory in which to return the interface pointer.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IRowsetNotify">
      <summary>Provides an implementation of the OLE DB IRowsetNotify interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetNotify.OnFieldChange(Microsoft.VisualBasic.Compatibility.VB6.IRowset,System.Int32,System.Int32,System.Int32[],System.Int32,System.Int32,System.Int32)">
      <summary>Notifies the consumer of any change to the value of a column.</summary>
      <returns>An Integer representing the result.</returns>
      <param name="rowset">A pointer to the rowset, because the consumer may be receiving notifications from multiple rowsets and this identifies which one is calling.</param>
      <param name="hRow">The handle of the row in which the column value was changed.</param>
      <param name="cColumns">The count of columns in <paramref name="rgColumns" />.</param>
      <param name="rgColumns">An array of columns in the row for which the value was changed.</param>
      <param name="dbReason">The reason for the change, as indicated by the value of DBREASON.</param>
      <param name="eventPhase">The phase of this notification.</param>
      <param name="fCantDeny">When this flag is set to true, the consumer cannot veto the event by returning S_FALSE because the provider cannot undo the event.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetNotify.OnRowChange(Microsoft.VisualBasic.Compatibility.VB6.IRowset,System.Int32,System.Int32[],System.Int32,System.Int32,System.Int32)">
      <summary>Notifies the consumer of the first change to a row or of any change that affects the entire row.</summary>
      <returns>An Integer representing the result.</returns>
      <param name="rowset">A pointer to the rowset, because the consumer may be receiving notifications from multiple rowsets and this identifies which one is calling.</param>
      <param name="cRows">The count of row handles in <paramref name="rghRows" />.</param>
      <param name="rghRows">An array of handles of rows that are changing.</param>
      <param name="dbReason">The reason for the change, as indicated by the value of DBREASON.</param>
      <param name="eventPhase">The phase of this notification.</param>
      <param name="fCantDeny">When this flag is set to true, the consumer cannot veto the event by returning S_FALSE because the provider cannot undo the event.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetNotify.OnRowsetChange(Microsoft.VisualBasic.Compatibility.VB6.IRowset,System.Int32,System.Int32,System.Int32)">
      <summary>Notifies the consumer of any change affecting the entire rowset.</summary>
      <returns>An Integer representing the result.</returns>
      <param name="rowset">A pointer to the rowset, because the consumer may be receiving notifications from multiple rowsets and this identifies which one is calling.</param>
      <param name="dbReason">The reason for the change, as indicated by the value of DBREASON.</param>
      <param name="eventPhase">The phase of this notification.</param>
      <param name="fCantDeny">When this flag is set to true, the consumer cannot veto the event by returning S_FALSE because the provider cannot undo the event.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding">
      <summary>Enables Windows Forms controls to be bound to ADO recordsets. This type is a managed equivalent of the Visual Basic 6.0 msbind library.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBinding.DataChanged">
      <summary>Gets or sets a value indicating whether data has changed.</summary>
      <returns>true if data has changed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBinding.DataField">
      <summary>Gets a data field.</summary>
      <returns>A String that contains the data.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBinding.DataFormat">
      <summary>Gets or sets the data format for a data field.</summary>
      <returns>An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp" /> interface.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBinding.Dispose">
      <summary>Releases the unmanaged resources that are used by an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBinding.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> and, optionally, releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBinding.Key">
      <summary>Gets the key value for a data field.</summary>
      <returns>A String that contains the key value.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBinding.Object">
      <summary>Gets a data object.</summary>
      <returns>An <see cref="T:System.Object" /> that contains data.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBinding.PropertyName">
      <summary>Gets the name of a property from a data object.</summary>
      <returns>A String that contains the property name.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection">
      <summary>Provides an interface to replace COM-based data binding in an application upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.#ctor">
      <summary>Initializes an instance of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Add(System.Object,System.String,System.String,Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp,System.String)">
      <summary>Adds a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> to a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> interface.</returns>
      <param name="obj">An <see cref="T:System.Object" /> that contains data.</param>
      <param name="propertyName">A String that contains a property name.</param>
      <param name="dataField">A String that contains the name of a data field.</param>
      <param name="dataFormat">Optional. An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp" /> interface.</param>
      <param name="key">Optional. A String that contains the key value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Add(System.Object,System.String,System.String,Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp,System.String,System.Boolean)">
      <summary>Adds a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> to a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> interface.</returns>
      <param name="obj">An <see cref="T:System.Object" /> that contains data.</param>
      <param name="propertyName">A String that contains a property name.</param>
      <param name="dataField">A String that contains the name of a data field.</param>
      <param name="dataFormat">An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp" /> interface.</param>
      <param name="key">A String that contains the key value.</param>
      <param name="immediateBind">true to bind immediately; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Clear">
      <summary>Clears the collection of binding objects.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Count">
      <summary>Gets the total number of bindings in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
      <returns>An Integer that contains the count.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.DataMember">
      <summary>Gets or sets the data member for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
      <returns>A String that contains the name of the data member.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.DataSource">
      <summary>Gets or sets the data source for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
      <returns>A COM-based msdatasrc.DataSource object.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Dispose">
      <summary>Releases the unmanaged resources that are used by a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.GetEnumerator">
      <summary>Gets an enumerator for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the collection.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Item(System.Object)">
      <summary>Gets the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> at the specified index.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> interface.</returns>
      <param name="index">An <see cref="T:System.Object" /> that represents the index.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Remove(System.Object)">
      <summary>Removes a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> interface from a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
      <param name="index">An <see cref="T:System.Object" /> that represents the index.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.SavePendingChanges">
      <summary>Determines whether to save changes in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.UpdateControls">
      <summary>Gets the current row from the data source of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" /> object and resets the contents of controls bound through the object.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.UpdateMode">
      <summary>Gets or sets the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.UpdateMode" /> for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
      <returns>A <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.UpdateMode" /> enumeration.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.SRDescriptionAttribute">
      <summary>Provides an attribute for use in upgrading Visual Basic 6.0 applications to Visual Basic 2010.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SRDescriptionAttribute.#ctor(System.String)">
      <summary>Initializes an instance of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SRDescriptionAttribute" />.</summary>
      <param name="description">A <see cref="T:System.String" /> that contains the description.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.SRDescriptionAttribute.Description">
      <summary>Gets the string that contains the description for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SRDescriptionAttribute" />.</summary>
      <returns>A <see cref="T:System.String" /> that contains the description.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.UGUID">
      <summary>Provides a Structure that represents a <see cref="T:System.Guid" /> in an application that has been upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.UGUID.guid">
      <summary>A field containing a <see cref="T:System.Guid" /> for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.UGUID" /> Structure.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.UNAME">
      <summary>Provides a Structure that represents a pointer to a Name property in an application that has been upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.UNAME.name">
      <summary>Contains a <see cref="T:System.IntPtr" /> for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.UNAME" />Structure.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.UpdateMode">
      <summary>Provides constants for compatibility with the Visual Basic 6.0 UpdateMode method.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.UpdateMode.vbUsePropertyAttributes">
      <summary>0</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.UpdateMode.vbUpdateWhenPropertyChanges">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.UpdateMode.vbUpdateWhenRowChanges">
      <summary>2</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Microsoft.VisualC.STLCLR.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualC.STLCLR</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualC.StlClr.BinaryDelegate`3">
      <summary>Describes a two-argument delegate. You use it to specify the arguments and return type of the delegate.</summary>
      <returns>The return type of the delegate.</returns>
      <param name="param0">The first argument.</param>
      <param name="param1">The second argument.</param>
      <typeparam name="TArg1">The first delegate argument.</typeparam>
      <typeparam name="TArg2">The second delegate argument.</typeparam>
      <typeparam name="TResult">The return type of the delegate.</typeparam>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.DequeEnumerator`1">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IDeque`1" /> interface.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.
   </typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.#ctor(Microsoft.VisualC.StlClr.IDeque{`0},System.Int32)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" /> object.</summary>
      <param name="_Cont">The container to iterate over.</param>
      <param name="_First">The offset of the current first element in the container.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.DequeEnumerator`1.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose(System.Boolean)">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" /> object.</summary>
      <param name="__unnamed0">true to dispose of managed objects; false to dispose of unmanaged objects.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IDeque`1" /> interface.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.IDeque{`0},System.Int32)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" /> object.</summary>
      <param name="_Cont">The container over which to iterate.</param>
      <param name="_First">The offset of the current first element in the container.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.GenericPair`2">
      <summary>Describes an object that wraps a pair of values.</summary>
      <typeparam name="TValue1">Type of the first value in the pair.</typeparam>
      <typeparam name="TValue2">Type of the second value in the pair.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor">
      <summary>Constructs a new <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object with default values for <see cref="F:Microsoft.VisualC.StlClr.GenericPair`2.first" /> and <see cref="F:Microsoft.VisualC.StlClr.GenericPair`2.second" />.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Constructs a new <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object.</summary>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object to be copied into the new <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(System.Collections.Generic.KeyValuePair{`0,`1}@)">
      <summary>Constructs a new <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object from an existing <see cref="T:System.Collections.Generic.KeyValuePair`2" /> object.</summary>
      <param name="_Right">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> object to be copied into the new <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0)">
      <summary>Constructs a new <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object and assigns its first value to the specified value.</summary>
      <param name="_Val1">The value to store in <see cref="F:Microsoft.VisualC.StlClr.GenericPair`2.first" />. The <see cref="F:Microsoft.VisualC.StlClr.GenericPair`2.second" /> value is assigned the default value for its type.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0,`1)">
      <summary>Constructs a new <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object with the two values specified.</summary>
      <param name="_Val1">The value to store in <see cref="F:Microsoft.VisualC.StlClr.GenericPair`2.first" />.</param>
      <param name="_Val2">The value to store in <see cref="F:Microsoft.VisualC.StlClr.GenericPair`2.second" />.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.GenericPair`2.Equals(System.Object)">
      <summary>Determines if two <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> objects are equal.</summary>
      <returns>true if the two <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> objects are equal; otherwise, false.</returns>
      <param name="_Right_arg">The <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object.</param>
    </member>
    <member name="F:Microsoft.VisualC.StlClr.GenericPair`2.first">
      <summary>The first wrapped value of the <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.GenericPair`2.op_Assign(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Replaces the stored pair of values in the <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object.</summary>
      <returns>This method returns *this.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object to copy.</param>
    </member>
    <member name="F:Microsoft.VisualC.StlClr.GenericPair`2.second">
      <summary>The second wrapped value of the <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.GenericPair`2.swap(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Swaps the contents of two <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> objects.</summary>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object to swap contents with.</param>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.HashEnumerator`2">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IHash`2" /> interface.</summary>
      <typeparam name="TKey">The type of the hash iterator key. </typeparam>
      <typeparam name="TValue">The type of the hash iterator value.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.HashEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.HashEnumerator`2" /> object.</summary>
      <param name="_First">The first node in the container over which to iterate.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.HashEnumerator`2.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.HashEnumerator`2" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose(System.Boolean)">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.HashEnumerator`2" /> object.</summary>
      <param name="__unnamed0">true to dispose of managed objects; false to dispose of unmanaged objects.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.HashEnumerator`2.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IHash`2" /> interface.</summary>
      <typeparam name="TKey">The type of the hash iterator key.</typeparam>
      <typeparam name="TValue">The type of the hash iterator value.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" /> object.</summary>
      <param name="_First">The first node in the container over which to iterate.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.IDeque`1">
      <summary>Defines the interface of an STL/CLR deque object.</summary>
      <typeparam name="TValue">The type that is contained.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Replaces all elements of the container with the elements specified by the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> objects.</summary>
      <param name="_First">The starting position of the range to insert into the container.</param>
      <param name="_Last">The first position beyond the end of the range to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)">
      <summary>Replaces all elements of the container with the elements in the given <see cref="T:System.Collections.IEnumerable" /> object.</summary>
      <param name="_Right">The enumeration to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)">
      <summary>Replaces all elements of the container with the given number of specified elements.</summary>
      <param name="_Count">The number of elements to insert into the container.</param>
      <param name="_Val">The value of the element to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)">
      <summary>Accesses an element at a specified position in the container.</summary>
      <returns>The element of the controlled sequence at position <paramref name="pos" />.</returns>
      <param name="_Pos">Position of element to access.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.back">
      <summary>Accesses the last element of the container.</summary>
      <returns>The last element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IDeque`1.back_item">
      <summary>Accesses the last element of a non-empty deque collection.</summary>
      <returns>The last element of the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <summary>Designates the beginning of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A random-access iterator that designates the first element of the controlled sequence, or just beyond the end of an empty sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.begin_bias">
      <summary>Gets the bias of the beginning of the current sequence. The bias is the offset of the current element zero.</summary>
      <returns>The bias of the beginning of the current sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.clear">
      <summary>Removes all elements in the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.empty">
      <summary>Tests whether the container holds no elements.</summary>
      <returns>true if the container is empty; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <summary>Designates the end of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A random-access iterator that points to the location immediately beyond the end of the controlled sequence. You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.end_bias">
      <summary>Gets the bias of the end of the current sequence. The bias is the offset of the current element zero.</summary>
      <returns>The bias of the end of the current sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes the element at the specified position.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element remaining beyond any elements removed, or <see cref="M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" /> if no such element exists.</param>
      <param name="_Where">The element to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes the elements between the specified iterators.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element remaining beyond any elements removed, or <see cref="M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" /> if no such element exists.</param>
      <param name="_First_iter">The beginning position of the range to erase.</param>
      <param name="_Last_iter">The position one beyond the last element of the range to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.front">
      <summary>Accesses the first element of the container.</summary>
      <returns>The first element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IDeque`1.front_item">
      <summary>Accesses the first element of a non-empty deque collection.</summary>
      <returns>The first element of the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.get_generation">
      <summary>Gets the current change generation of the underlying container.</summary>
      <returns>The current change generation of the underlying container.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)">
      <summary>Adds an element at a specified position in the container.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the newly inserted element.</param>
      <param name="_Where">The location in the container in front of which to insert.</param>
      <param name="_Val">The element to be inserted into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Adds elements at a specified position in the container.</summary>
      <param name="_Where">The location in the container in front of which to insert.</param>
      <param name="_First">The beginning of the range to insert into the container.</param>
      <param name="_Last">The first position beyond the end of the range to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)">
      <summary>Adds elements at a specified position in the container.</summary>
      <param name="_Where_iter">The location in the container in front of which to insert.</param>
      <param name="_Right">The enumeration of elements to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)">
      <summary>Adds the given number of elements at a specified position in the container.</summary>
      <param name="_Where">The location in the container in front of which to insert.</param>
      <param name="_Count">The number of elements to insert into the container.</param>
      <param name="_Val">The value of the elements to be inserted into the container.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)">
      <summary>Gets or sets the element at the indicated position in the container.</summary>
      <returns>The element at the indicated position.</returns>
      <param name="_Pos">The position of the element to get or set.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.pop_back">
      <summary>Removes the last element of a non-empty container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.pop_front">
      <summary>Removes the first element of a non-empty container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)">
      <summary>Adds an element to the end of a container.</summary>
      <param name="_Val">The element to append to the end of the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)">
      <summary>Adds an element to the beginning of a container.</summary>
      <param name="_Val">The element to add to the beginning of the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <summary>Designates the beginning of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that designates the last element of the controlled sequence, or just beyond the beginning of an empty sequence. Hence, it designates the <paramref name="beginning" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <summary>Designates the end of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that points just beyond the beginning of the controlled sequence. Hence, it designates the <paramref name="end" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)">
      <summary>Changes the number of elements.</summary>
      <param name="_Newsize">The new size of the controlled sequence.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)">
      <summary>Changes the number of elements.</summary>
      <param name="_Newsize">The new size of the controlled sequence.</param>
      <param name="_Val">The value of the padding element.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.size">
      <summary>Counts the number of elements.</summary>
      <returns>The length of the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque{`0})">
      <summary>Swaps the contents of two containers.</summary>
      <param name="param0"></param>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.IHash`2">
      <summary>Defines the interface of the STL/CLR hash_map, hash_multimap, hash_set, and hash_multiset objects.</summary>
      <typeparam name="TKey">The type of the key component of an element in the controlled sequence.</typeparam>
      <typeparam name="TValue">The type of the value component of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)">
      <summary>Designates the beginning of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A bidirectional iterator that designates the first element of the controlled sequence, or just beyond the end of an empty sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.bucket_count">
      <summary>Counts the number of buckets in the hash table.</summary>
      <returns>The current number of buckets in the hash table.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.clear">
      <summary>Removes all elements from the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.count(`0)">
      <summary>Finds the number of elements that match a specified key.</summary>
      <returns>The number of elements in the controlled sequence that have the same key as <paramref name="_Keyval" />. You use it to determine the number of elements currently in the controlled sequence that match a specified key.</returns>
      <param name="_Keyval">The key value for which to search.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.empty">
      <summary>Tests whether no elements are present in the container.</summary>
      <returns>true if the container has no elements; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)">
      <summary>Designates the end of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A bidirectional iterator that points just beyond the end of the controlled sequence. You use it to obtain an iterator that designates the end of the controlled sequence. Its status does not change when the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)">
      <summary>Finds the range that matches a specified key.</summary>
      <returns>A pair of iterators.</returns>
      <param name="__unnamed0">A pair of iterators that determine the range of elements currently in the controlled sequence that match a specified key.</param>
      <param name="_Keyval">The key value for which to search.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes from the container the element that is specified by the given iterator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element beyond the removed element, or <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no such element exists.</param>
      <param name="_Where">An iterator that points to the element to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes from the container the elements between the specified iterators.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element beyond the elements removed, or <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no such element exists.</param>
      <param name="_First_iter">An iterator that points to the beginning of the range to erase.</param>
      <param name="_Last_iter">An iterator that points to the position that immediately follows the range to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.erase(`0)">
      <summary>Removes elements from the container that match the specified key.</summary>
      <returns>The number of elements removed.</returns>
      <param name="_Keyval">The key value to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <summary>Finds an element that matches a specified key.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates one of the found elements; or <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no element is found.</param>
      <param name="_Keyval">The key value for which to search.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.hash_delegate">
      <summary>Returns the delegate that is used to convert a key value to an integer.</summary>
      <returns>The delegate that is used to convert a key value to an integer.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)">
      <summary>Adds the given element to the container.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the newly inserted element.</param>
      <param name="_Where">An iterator that specifies where in the container to insert the element. This is a hint only and is used to improve performance. The element might not be inserted at this location.</param>
      <param name="_Val">The key value to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})">
      <summary>Adds to the container the elements specified by the given iterators.</summary>
      <param name="_First">An iterator that points to the beginning of the range of elements to insert.</param>
      <param name="_Last">An iterator that points to the element that immediately follows the range of elements to insert.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)">
      <summary>Adds the given value to the container.</summary>
      <returns>A pair of iterators.</returns>
      <param name="__unnamed0">A pair of values X. If X.second is true, X.first designates the newly inserted element; otherwise X.first designates an element with equivalent ordering that already exists, and no new element is inserted.</param>
      <param name="_Val">The key value to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)">
      <summary>Adds the given enumeration to the container.</summary>
      <param name="_Right">The enumeration to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.key_comp">
      <summary>Returns the ordering delegate that is used to order the controlled sequence. You use it to compare two keys.</summary>
      <returns>The ordering delegate that is used to order the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.load_factor">
      <summary>Counts the average number of elements per bucket in the hash table.</summary>
      <returns>The average number of elements per bucket in the hash table.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <summary>Finds the beginning of the range of elements that match a specified key.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element in the controlled sequence that hashes to the same bucket as <paramref name="_Keyval" /> and has equivalent ordering to <paramref name="_Keyval" />. If no such element exists, it returns <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />.</param>
      <param name="_Keyval">The key value for which to search.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor">
      <summary>Gets the maximum number of elements per bucket in the hash table.</summary>
      <returns>The maximum number of elements per bucket in the hash table.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)">
      <summary>Sets the maximum number of elements per bucket in the hash table.</summary>
      <param name="_Newmax">The maximum number of elements per bucket in the hash table.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)">
      <summary>Designates the beginning of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that designates the last element of the controlled sequence, or just beyond the beginning of an empty sequence. Hence, it designates the <paramref name="beginning" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence seen in reverse order. Its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)">
      <summary>Rebuilds the hash table.</summary>
      <param name="_Buckets">The number of buckets for the hash table.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)">
      <summary>Designates the end of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that points just beyond the beginning of the controlled sequence. Hence, it designates the <paramref name="end" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence seen in reverse order. Its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.size">
      <summary>Counts the number of elements in the container.</summary>
      <returns>The length of the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash{`0,`1})">
      <summary>Swaps the contents of two containers.</summary>
      <param name="_Right">The container with which to swap contents.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <summary>Finds the end of the range of elements that match a specified key.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element beyond the last element in the controlled sequence that hashes to the same bucket as <paramref name="_Keyval" /> and has equivalent ordering to <paramref name="_Keyval" />. If no such element exists, it returns <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />.</param>
      <param name="_Keyval">The key value to search for.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.value_comp">
      <summary>Returns the ordering delegate that is used to order the controlled sequence.</summary>
      <returns>The ordering delegate that is used to order the controlled sequence.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.IList`1">
      <summary>Defines the interface for an STL/CLR list object.</summary>
      <typeparam name="TValue">The type of a list element.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Replaces the controlled sequence with the sequence [<paramref name="_First" />, <paramref name="_Last" />).</summary>
      <param name="_First">The beginning position of the range of elements to insert into the container.</param>
      <param name="_Last">The first position beyond the range of elements to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)">
      <summary>Replaces the controlled sequence with the sequence that is designated by the given enumerator.</summary>
      <param name="_Right">The enumeration whose elements are to be inserted into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)">
      <summary>Replaces the controlled sequence with the specified number of the given element.</summary>
      <param name="_Count">The number of elements to insert into the container.</param>
      <param name="_Val">The value of the elements to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.back">
      <summary>Accesses the last element of the container.</summary>
      <returns>The last element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IList`1.back_item">
      <summary>Accesses the last element of the container.</summary>
      <returns>The last element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
      <summary>Designates the beginning of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A random-access iterator that designates the first element of the controlled sequence, or just beyond the end of an empty sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.clear">
      <summary>Removes all elements from the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.empty">
      <summary>Tests whether the container has no elements.</summary>
      <returns>true if the container has no elements; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
      <summary>Designates the end of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A random-access iterator that points just beyond the end of the controlled sequence. You use it to obtain an iterator that designates the end of the controlled sequence. Its status does not change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes the single element of the controlled sequence pointed to by the given iterator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element remaining beyond any elements removed, or <see cref="M:Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" /> if no such element exists.</param>
      <param name="_Where">The position of the element to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes the elements of the controlled sequence in the range [<paramref name="_First_iter" />, <paramref name="_Last_iter" />).</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element remaining beyond any elements removed, or <see cref="M:Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" /> if no such element exists.</param>
      <param name="_First_iter">The beginning position of the range of elements to erase.</param>
      <param name="_Last_iter">The first position beyond the range of elements to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.front">
      <summary>Accesses the first element of the container.</summary>
      <returns>The first element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IList`1.front_item">
      <summary>Accesses the first element of the container.</summary>
      <returns>The first element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)">
      <summary>Inserts an element of the given value into the container.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the newly inserted element.</param>
      <param name="_Where">The position in the container immediately following the newly inserted elements.</param>
      <param name="_Val">The value of the element to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Inserts the sequence [<paramref name="_First" />, <paramref name="_Last" />) into the container.</summary>
      <param name="_Where">The position in the container immediately following the newly inserted elements.</param>
      <param name="_First">The beginning position of the range of elements to insert into the container.</param>
      <param name="_Last">The first position beyond the range of elements to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)">
      <summary>Inserts the elements of the specified enumerator into the container.</summary>
      <param name="_Where_iter">The position in the container to insert before.</param>
      <param name="_Right">The enumeration whose elements are to be inserted into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)">
      <summary>Inserts the specified number of elements of the given value into the container.</summary>
      <param name="_Where">The position in the container immediately following the newly inserted elements.</param>
      <param name="_Count">The number of elements to insert into the container.</param>
      <param name="_Val">The value of the elements to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
      <summary>Merges two ordered controlled sequences.</summary>
      <param name="_Right">The container to merge into this container.</param>
      <param name="_Pred">The Boolean functor for comparing pairs of elements.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.pop_back">
      <summary>Removes the last element from the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.pop_front">
      <summary>Removes the first element from the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.push_back(`0)">
      <summary>Adds a new element to the end of the container.</summary>
      <param name="_Val">The value of the element to append to the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.push_front(`0)">
      <summary>Adds a new element to the beginning of the container.</summary>
      <param name="_Val">The value of the element to insert at the beginning of the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
      <summary>Designates the beginning of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that designates the last element of the controlled sequence, or the position just beyond the beginning of an empty sequence. Hence, it designates the <paramref name="beginning" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence that is seen in reverse order, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.remove(`0)">
      <summary>Removes an element that has a specified value from the container.</summary>
      <param name="_Val">The value of the element to remove from the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.remove_if(Microsoft.VisualC.StlClr.UnaryDelegate{`0,System.Boolean})">
      <summary>Removes elements from the container that pass a specified test.</summary>
      <param name="_Pred">A Boolean test that determines which elements will be removed.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
      <summary>Designates the end of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that points just beyond the beginning of the controlled sequence. Hence, it designates the <paramref name="end" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)">
      <summary>Changes the number of elements in the container to the specified size.</summary>
      <param name="_Newsize">The new size of the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)">
      <summary>Changes the number of elements in the container to the specified size. If the new size is larger than the old size, the given values will be appended to the container.</summary>
      <param name="_Newsize">The new size of the container.</param>
      <param name="_Val">The value of the padding elements.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.reverse">
      <summary>Reverses the elements of the controlled sequence.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.size">
      <summary>Counts the number of elements in the container.</summary>
      <returns>The length of the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
      <summary>Orders the controlled sequence.</summary>
      <param name="_Pred">The operator that will be used to compare elements for ordering.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0})">
      <summary>Inserts the given sequence into the container before the specified position.</summary>
      <param name="_Where">The position in the container before which to splice.</param>
      <param name="_Right">The container to splice from. All elements will be removed from this container after the splice operation.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes the element from the given container pointed to by <paramref name="_First" /> and inserts it before the element in the controlled sequence pointed to by <paramref name="_Where" />.</summary>
      <param name="_Where">The position in the container before which to splice.</param>
      <param name="_Right">The container to splice from.</param>
      <param name="_First">The position of the element to splice.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes the range of elements [<paramref name="_First" />, <paramref name="_Last" />) from the given container and inserts it before the element in the controlled sequence pointed to by <paramref name="_Where" />.</summary>
      <param name="_Where">The position in the container before which to splice.</param>
      <param name="_Right">The container to splice from.</param>
      <param name="_First">The beginning position of the range of elements to splice.</param>
      <param name="_Last">The first position beyond the range of elements to splice.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})">
      <summary>Swaps the contents of two containers.</summary>
      <param name="_Right">The container to swap contents with.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
      <summary>Removes adjacent elements that pass a specified test.</summary>
      <param name="_Pred">The comparer that determines whether element pairs are unique. An element that is not unique will be removed from the container.</param>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.IPriorityQueue`2">
      <summary>Defines the interface for an STL/CLR priority_queue object.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
      <typeparam name="TCont">The type of the underlying container.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.assign(Microsoft.VisualC.StlClr.IPriorityQueue{`0,`1})">
      <summary>Replaces all elements of the container.</summary>
      <param name="_Right">The container adapter to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.empty">
      <summary>Determines whether the container contains no elements.</summary>
      <returns>true if the container contains no elements; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.get_container">
      <summary>Accesses the underlying container.</summary>
      <returns>The underlying container. You can use it to bypass the restrictions that are imposed by the container wrapper.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.pop">
      <summary>Removes the highest-priority element of the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)">
      <summary>Adds a new element to the container.</summary>
      <param name="_Val">An element to insert into the controlled sequence. The controlled sequence is then reordered to maintain the heap discipline.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.size">
      <summary>Counts the number of elements in the container.</summary>
      <returns>The length of the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.top">
      <summary>Accesses the highest-priority element of the container.</summary>
      <returns>The top (highest-priority) element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item">
      <summary>Accesses the highest-priority element of the container.</summary>
      <returns>The top (highest-priority) element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp">
      <summary>Copies the ordering delegate for two elements.</summary>
      <returns>The ordering delegate used to order the controlled sequence. You use it to compare two values.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.IQueue`2">
      <summary>Defines the interface for an STL/CLR queue object.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
      <typeparam name="TCont">The type of the underlying container.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IQueue`2.assign(Microsoft.VisualC.StlClr.IQueue{`0,`1})">
      <summary>Replaces all elements of the container with the contents of the provided container.</summary>
      <param name="_Right">The container adapter whose elements will be inserted into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IQueue`2.back">
      <summary>Accesses the last element of the container.</summary>
      <returns>The last element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IQueue`2.empty">
      <summary>Determines whether the container contains no elements.</summary>
      <returns>true if the container contains no elements; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IQueue`2.front">
      <summary>Accesses the first element of the container.</summary>
      <returns>The first element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IQueue`2.get_container">
      <summary>Accesses the underlying container.</summary>
      <returns>The underlying container. You use it to bypass the restrictions that are imposed by the container wrapper.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IQueue`2.pop">
      <summary>Removes the last element of the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IQueue`2.push(`0)">
      <summary>Adds an element to the beginning of the container.</summary>
      <param name="_Val">The value to add to the beginning of the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IQueue`2.size">
      <summary>Counts the number of elements in the container.</summary>
      <returns>The length of the controlled sequence.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.IStack`2">
      <summary>Defines the interface of an STL/CLR stack object.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
      <typeparam name="TCont">The type of the underlying container.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IStack`2.assign(Microsoft.VisualC.StlClr.IStack{`0,`1})">
      <summary>Replaces all elements in the container with the elements in the provided container.</summary>
      <param name="_Right">The container adapter whose elements are to be inserted into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IStack`2.empty">
      <summary>Determines whether the container contains no elements.</summary>
      <returns>true if the container contains no elements; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IStack`2.get_container">
      <summary>Accesses the underlying container.</summary>
      <returns>The underlying container. You use it to bypass the restrictions that are imposed by the container wrapper.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IStack`2.pop">
      <summary>Removes the last element of the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IStack`2.push(`0)">
      <summary>Appends an element to the container.</summary>
      <param name="_Val">The value to be appended to the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IStack`2.size">
      <summary>Counts the number of elements in the container.</summary>
      <returns>The length of the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IStack`2.top">
      <summary>Accesses the last element of the container.</summary>
      <returns>The last element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IStack`2.top_item">
      <summary>Accesses the last element of the container.</summary>
      <returns>The last element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.ITree`2">
      <summary>Defines the interface of the STL/CLR hash_map, hash_multimap, hash_set, and hash_multiset objects.</summary>
      <typeparam name="TKey">The type of the key component of an element in the controlled sequence.</typeparam>
      <typeparam name="TValue">The type of the value component of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)">
      <summary>Designates the beginning of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A bidirectional iterator that designates the first element of the controlled sequence, or just beyond the end of an empty sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.clear">
      <summary>Removes all elements from the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.count(`0)">
      <summary>Finds the number of elements that match a specified key.</summary>
      <returns>The number of elements in the controlled sequence that have the same key as <paramref name="_Keyval" />. You use it to determine the number of elements currently in the controlled sequence that match a specified key.</returns>
      <param name="_Keyval">The key value for which to search.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.empty">
      <summary>Tests whether no elements are present in the container.</summary>
      <returns>true if the container has no elements; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)">
      <summary>Designates the end of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A bidirectional iterator that points just beyond the end of the controlled sequence. You use it to obtain an iterator that designates the end of the controlled sequence. Its status does not change when the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)">
      <summary>Finds the range that matches a specified key.</summary>
      <returns>A pair of iterators.</returns>
      <param name="__unnamed0">A pair of iterators that determine the range of elements currently in the controlled sequence that match a specified key.</param>
      <param name="_Keyval">The key value for which to search.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes from the container the element that is specified by the given iterator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element beyond the removed element, or <see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no such element exists.</param>
      <param name="_Where">An iterator that points to the element to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes from the container the elements between the specified iterators.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element beyond the elements removed, or <see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no such element exists.</param>
      <param name="_First_iter">An iterator that points to the beginning of the range to erase.</param>
      <param name="_Last_iter">An iterator that points to the position that immediately follows the range to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.erase(`0)">
      <summary>Removes elements from the container that match the specified key.</summary>
      <returns>The number of elements removed.</returns>
      <param name="_Keyval">The key value to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <summary>Finds an element that matches a specified key.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates one of the found elements; or <see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no element is found.</param>
      <param name="_Keyval">The key value for which to search.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)">
      <summary>Adds the given element to the container.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the newly inserted element.</param>
      <param name="_Where">An iterator that specifies where in the container to insert the element. This is a hint only and is used to improve performance. The element might not be inserted at this location.</param>
      <param name="_Val">The key value to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})">
      <summary>Adds to the container the elements specified by the given iterators.</summary>
      <param name="_First">An iterator that points to the beginning of the range of elements to insert.</param>
      <param name="_Last">An iterator that points to the element that immediately follows the range of elements to insert.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)">
      <summary>Adds the given value to the container.</summary>
      <returns>A pair of iterators.</returns>
      <param name="__unnamed0">A pair of values X. If X.second is true, X.first designates the newly inserted element; otherwise X.first designates an element with equivalent ordering that already exists, and no new element is inserted.</param>
      <param name="_Val">The key value to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})">
      <summary>Adds the given enumeration to the container.</summary>
      <param name="_Right">The enumeration to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.key_comp">
      <summary>Returns the ordering delegate that is used to order the controlled sequence. You use it to compare two keys.</summary>
      <returns>The ordering delegate that is used to order the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <summary>Finds the beginning of the range of elements that match a specified key.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element in the controlled sequence that hashes to the same bucket as <paramref name="_Keyval" /> and has equivalent ordering to <paramref name="_Keyval" />. If no such element exists, it returns <see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />.</param>
      <param name="_Keyval">The key value for which to search.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)">
      <summary>Designates the beginning of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that designates the last element of the controlled sequence, or just beyond the beginning of an empty sequence. Hence, it designates the <paramref name="beginning" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence seen in reverse order. Its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)">
      <summary>Designates the end of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that points just beyond the beginning of the controlled sequence. Hence, it designates the <paramref name="end" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence seen in reverse order. Its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.size">
      <summary>Counts the number of elements in the container.</summary>
      <returns>The length of the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.swap(Microsoft.VisualC.StlClr.ITree{`0,`1})">
      <summary>Swaps the contents of two containers.</summary>
      <param name="_Right">The container with which to swap contents.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <summary>Finds the end of the range of elements that match a specified key.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element beyond the last element in the controlled sequence that hashes to the same bucket as <paramref name="_Keyval" /> and has equivalent ordering to <paramref name="_Keyval" />. If no such element exists, it returns <see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />.</param>
      <param name="_Keyval">The key value to search for.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.value_comp">
      <summary>Returns the ordering delegate that is used to order the controlled sequence.</summary>
      <returns>The ordering delegate that is used to order the controlled sequence.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.IVector`1">
      <summary>Defines the interface for an STL/CLR vector object.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Replaces all elements in the container with the elements between the given iterators.</summary>
      <param name="_First">The beginning position of the range of elements to insert.</param>
      <param name="_Last">The first position beyond the end of the range of elements to insert.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)">
      <summary>Replaces all elements in the container with the elements in the specified enumeration.</summary>
      <param name="_Right">The enumeration whose elements are to be inserted into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)">
      <summary>Replaces all elements in the container with the specified number of elements that have given values.</summary>
      <param name="_Count">The number of elements to insert into the container.</param>
      <param name="_Val">The value of the element to insert.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.at(System.Int32)">
      <summary>Accesses an element at a specified position in the container.</summary>
      <returns>The element of the controlled sequence at position <paramref name="_Pos" />.</returns>
      <param name="_Pos">The position of the element to access.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.back">
      <summary>Accesses the last element of the container.</summary>
      <returns>The last element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IVector`1.back_item">
      <summary>Accesses the last element of the container.</summary>
      <returns>The last element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <summary>Designates the beginning of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A random-access iterator that designates the first element of the controlled sequence, or just beyond the end of an empty sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.capacity">
      <summary>Reports the size of allocated storage for the container.</summary>
      <returns>The storage that is currently allocated to hold the controlled sequence, a value at least as large as <see cref="M:Microsoft.VisualC.StlClr.IVector`1.size" />.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.clear">
      <summary>Removes all elements from the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.empty">
      <summary>Tests whether the container has no elements.</summary>
      <returns>true if the container has no elements; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <summary>Designates the end of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A random-access iterator that points just beyond the end of the controlled sequence. You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes the single element of the controlled sequence that is pointed to by <paramref name="_Where" />.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element that remains beyond any removed elements, or <see cref="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" /> if no such element exists.</param>
      <param name="_Where">The position of the element to remove.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes the elements of the controlled sequence in the range [<paramref name="_First_iter" />, <paramref name="_Last_iter" />).</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element that remains beyond any removed elements, or <see cref="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" /> if no such element exists.</param>
      <param name="_First_iter">The beginning of the range of elements to erase.</param>
      <param name="_Last_iter">The first position beyond the range of elements to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.front">
      <summary>Accesses the first element of the container.</summary>
      <returns>The first element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IVector`1.front_item">
      <summary>Accesses the first element of the container.</summary>
      <returns>The first element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.get_generation">
      <summary>Gets the current change generation of the underlying container.</summary>
      <returns>The current change generation of the underlying container.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)">
      <summary>Inserts the specified value into the container.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the newly inserted element.</param>
      <param name="_Where">The position in the container before which to insert.</param>
      <param name="_Val">The value of the element to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Inserts the sequence beginning with <paramref name="_First" /> and ending with the element preceding <paramref name="_Last" /> into the container.</summary>
      <param name="_Where">The position in the container before which to insert.</param>
      <param name="_First">The beginning position of the range to insert into the container.</param>
      <param name="_Last">The first position beyond the range to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)">
      <summary>Inserts the sequence that is designated by an enumerator into the container.</summary>
      <param name="_Where_iter">The position in the container before which to insert.</param>
      <param name="_Right">The enumeration to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)">
      <summary>Inserts the specified number of the given elements into the container.</summary>
      <param name="_Where">The position in the container before which to insert.</param>
      <param name="_Count">The number of elements to insert into the container.</param>
      <param name="_Val">The value of the element to insert into the container.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IVector`1.Item(System.Int32)">
      <summary>Accesses an element at a specified position in the container.</summary>
      <returns>The element at position <paramref name="_Pos" />.</returns>
      <param name="_Pos">The position of the element to access.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.pop_back">
      <summary>Removes the last element from the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.push_back(`0)">
      <summary>Adds a new element to the end of the container.</summary>
      <param name="_Val">The value of the element to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <summary>Designates the beginning of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that designates the last element of the controlled sequence, or just beyond the beginning of an empty sequence. Hence, it designates the <paramref name="beginning" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <summary>Designates the end of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that points just beyond the beginning of the controlled sequence. Hence, it designates the <paramref name="end" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.reserve(System.Int32)">
      <summary>Reserves storage to ensure the minimum growth capacity for the container.</summary>
      <param name="_Capacity">The new minimum capacity of the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)">
      <summary>Changes the number of elements in the container to the specified size.</summary>
      <param name="_Newsize">The new size of the controlled sequence.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)">
      <summary>Changes the number of elements in the container to the specified size. If the new size is larger than the old size, the method appends elements that have value <paramref name="_Val" />.</summary>
      <param name="_Newsize">The new size of the controlled sequence.</param>
      <param name="_Val">The value of the elements to insert.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.size">
      <summary>Counts the number of elements in the container.</summary>
      <returns>The length of the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.swap(Microsoft.VisualC.StlClr.IVector{`0})">
      <summary>Swaps the contents of two containers.</summary>
      <param name="param0"></param>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.ListEnumerator`1">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IList`1" /> interface.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ListEnumerator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.ListEnumerator`1" /> object.</summary>
      <param name="_First">The first node in the container over which to iterate.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.ListEnumerator`1.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.ListEnumerator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose(System.Boolean)">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.ListEnumerator`1" /> object.</summary>
      <param name="__unnamed0">true to dispose of managed objects; false to dispose of unmanaged objects.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ListEnumerator`1.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IList`1" /> interface.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" /> object.</summary>
      <param name="_First">The first node in the container over which to iterate.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.TreeEnumerator`2">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.ITree`2" /> interface.</summary>
      <typeparam name="TKey">The type of the key component of an element in the controlled sequence.</typeparam>
      <typeparam name="TValue">The type of the value component of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" /> object.</summary>
      <param name="_First">The first node in the container over which to iterate.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.TreeEnumerator`2.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose(System.Boolean)">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" /> object.</summary>
      <param name="__unnamed0">true to dispose of managed objects; false to dispose of unmanaged objects.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.ITree`2" /> interface.</summary>
      <typeparam name="TKey">The type of the key component of an element in the controlled sequence.</typeparam>
      <typeparam name="TValue">The type of the value component of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" /> object.</summary>
      <param name="_First">The first node in the container over which to iterate.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.UnaryDelegate`2">
      <summary>Describes a one-argument delegate. You use it to specify the argument and return type of the delegate.</summary>
      <returns>The return type of the delegate.</returns>
      <param name="param0"></param>
      <typeparam name="TArg">The type of the delegate argument.</typeparam>
      <typeparam name="TResult">The return type of the delegate.</typeparam>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.VectorEnumerator`1">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IVector`1" /> interface.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.#ctor(Microsoft.VisualC.StlClr.IVector{`0},System.Int32)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> object.</summary>
      <param name="_Cont">The container over which to iterate.</param>
      <param name="_First">The offset of the current first element in the container.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.VectorEnumerator`1.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose(System.Boolean)">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> object.</summary>
      <param name="__unnamed0">true to dispose of managed objects; false to dispose of unmanaged objects.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IVector`1" /> interface.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.IVector{`0},System.Int32)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" /> object.</summary>
      <param name="_Cont">The container over which to iterate.</param>
      <param name="_First">The offset of the current first element in the container.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1">
      <summary>Defines an iterator that can access elements in a container in the forward direction by using the increment operator and in the backward direction by using the decrement operator. The element that the iterator points to cannot be modified. Bidirectional iterators can be used anywhere that a constant input or constant output iterator is required.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.
   </typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object that points to the given node.</summary>
      <param name="_Node">The node that the iterator will point to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object to copy.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object to copy.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.Clone">
      <summary>Returns a copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</summary>
      <returns>A copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.container">
      <summary>Gets the container that the iterator is traversing.</summary>
      <returns>The container that the iterator is traversing.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> objects are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_bias">
      <summary>Gets the bias of the iterator. The bias is the offset of the iterator from element zero.</summary>
      <returns>The bias of the iterator.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_cref">
      <summary>Returns a constant reference to the element that the iterator is currently pointing to.</summary>
      <returns>A constant reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_node">
      <summary>Gets the node, or element, that the iterator is pointing to.</summary>
      <returns>The node that the iterator is pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_ref">
      <summary>Returns a reference to the element that the iterator is currently pointing to.</summary>
      <returns>A reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.next">
      <summary>Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)">
      <summary>Decrements the iterator by one element. This is the prefix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by one element. This is the postfix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the decrement operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}">
      <summary>Converts a <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> to an <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />.</summary>
      <returns>The current iterator as an <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)">
      <summary>Increments the iterator by one element. This is the prefix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)">
      <summary>Increments the iterator by one element. This is the postfix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the increment operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.prev">
      <summary>Positions the iterator to the element immediately before the current element.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.valid">
      <summary>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</summary>
      <returns>true if the iterator is valid and safe to use; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1">
      <summary>Provides an iterator that supports the following operations: moving forward one position by calling operator++, moving backward one position by calling operator--, accessing an element by using operator[], and accessing an element by using pointer arithmetic. The element pointed to by the iterator cannot be modified.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" /> object.</summary>
      <param name="_Cont">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" /> object to be copied to the current container.</param>
      <param name="_Offset">The offset of the element that the iterator will point to after creation.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object to be copied to the current container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object to be copied to the current container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Clone">
      <summary>Creates a copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</summary>
      <returns>A copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.container">
      <summary>Gets the container that the iterator is traversing.</summary>
      <returns>The container that the iterator is traversing.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</summary>
      <returns>The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to. This number is negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</summary>
      <returns>The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to. This number is negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> objects are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_bias">
      <summary>Gets the bias of the iterator. The bias is the offset of the iterator from element zero.</summary>
      <returns>The bias of the iterator.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_cref">
      <summary>Returns a constant reference to the element that the iterator is currently pointing to.</summary>
      <returns>A constant reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_node">
      <summary>Gets the node, or element, that the iterator is pointing to.</summary>
      <returns>The node that the iterator is pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_ref">
      <summary>Returns a reference to the element that the iterator is currently pointing to.</summary>
      <returns>A reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Item(System.Int32)">
      <summary>Accesses the element at the given position in the container.</summary>
      <returns>The element at the given position in the container.</returns>
      <param name="_Pos">The position of the element to access.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.</summary>
      <returns>true if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, false.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.</summary>
      <returns>true if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, false.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.move(System.Int32)">
      <summary>Moves the iterator by the given number of elements.</summary>
      <returns>The actual number of elements traversed. This number will differ from <paramref name="_Offset" /> if the beginning or end of the container is reached before iterating the desired number of elements.</returns>
      <param name="_Offset">The number of elements to traverse. To move the iterator forward, specify a positive number. To move the iterator backward, use a negative number.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.next">
      <summary>Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)">
      <summary>Increments the iterator by the given number of elements. The integer parameter is specified on the right side of the addition operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Right">The number of elements to increment.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Increments the iterator by the given number of elements. The integer parameter is specified on the left side of the addition operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Left">The number of elements to increment.</param>
      <param name="_Right">The iterator to increment.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)">
      <summary>Decrements the iterator by one element. This is the prefix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by one element. This is the postfix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the given left-side iterator is greater than the position of the given right-side iterator.</summary>
      <returns>true if the given left-side iterator is greater than the given right-side iterator; otherwise, false.</returns>
      <param name="_Left">The iterator to compare with the right-side iterator.</param>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is greater than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines whether the position of the left-side iterator is greater than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is greater than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}">
      <summary>Converts a <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> to an <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />.</summary>
      <returns>The current iterator as an <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)">
      <summary>Increments the iterator by one element. This is the prefix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)">
      <summary>Increments the iterator by one element. This is the postfix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines whether the position of the left-side iterator is less than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is less than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the given left-side iterator is less than the position of the given right-side iterator.</summary>
      <returns>true if the given left-side iterator is less than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Left">The iterator to compare with the right-side iterator.</param>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is less than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by the given number of elements. The integer parameter is specified on the right side of the addition operator.</summary>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Right">The number of elements to decrement.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines the difference between two iterators.</summary>
      <returns>The difference, in number of elements, between the two iterators.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> to be subtracted from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.prev">
      <summary>Positions the iterator to the element immediately before the current element.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.valid">
      <summary>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</summary>
      <returns>true if the iterator is valid and safe to use; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1">
      <summary>Defines an iterator that accesses elements in a container in the reverse direction. Elements can be accessed in the forward direction by using the decrement operator and in the backward direction by using the increment operator. The element that the iterator points to cannot be modified. Constant reverse bidirectional iterators can be used anywhere that a constant reverse input or constant reverse output iterator is required.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" /> object.</summary>
      <param name="_Iter">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" /> object to copy.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object to copy.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <param name="_Iter">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object to copy.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.base">
      <summary>Gets the underlying base iterator for the <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
      <returns>The underlying base iterator for the <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.Clone">
      <summary>Returns a copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
      <returns>A copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.container">
      <summary>Gets the container that the iterator is traversing.</summary>
      <returns>The container that the iterator is traversing.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> objects are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_bias">
      <summary>Gets the bias of the iterator. The bias is the offset of the iterator from element zero.</summary>
      <returns>The bias of the iterator.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_cref">
      <summary>Returns a constant reference to the element that the iterator is currently pointing to.</summary>
      <returns>A constant reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_node">
      <summary>Gets the node, or element, that the iterator is pointing to.</summary>
      <returns>The node that the iterator is pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_ref">
      <summary>Returns a reference to the element that the iterator is currently pointing to.</summary>
      <returns>A reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.next">
      <summary>Decrements the iterator to the previous position in the underlying container, or to the first position in front of the beginning of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)">
      <summary>Decrements the iterator by one element. Decrementing a reverse iterator is the same as incrementing a regular iterator. This is the prefix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by one element. Decrementing a reverse iterator is the same as incrementing a regular iterator. This is the postfix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}">
      <summary>Converts a <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> to an <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />.</summary>
      <returns>The current iterator as an <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)">
      <summary>Increments the iterator by one element. Incrementing a reverse iterator is the same as decrementing a regular iterator. This is the prefix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)">
      <summary>Increments the iterator by one element. Incrementing a reverse iterator is the same as decrementing a regular iterator. This is the postfix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">Indicates that this is the postfix version of the increment operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.prev">
      <summary>Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.valid">
      <summary>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</summary>
      <returns>true if the iterator is valid and safe to use; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1">
      <summary>Provides an iterator that supports the following operations: moving forward one position by calling operator--, moving backward one position by calling operator++, accessing an element by using operator[], and accessing an element by using pointer arithmetic. The element accessed by the iterator cannot be modified.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> object.</summary>
      <param name="_Iter">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> object to be copied to the current container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object to be copied to the current container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</summary>
      <param name="_Iter">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to be copied to the current container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.base">
      <summary>Gets the underlying base iterator for the <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</summary>
      <returns>The underlying base iterator for the <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Clone">
      <summary>Creates a copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</summary>
      <returns>A copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.container">
      <summary>Gets the container that the iterator is traversing.</summary>
      <returns>The container that the iterator is traversing.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</summary>
      <returns>The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to. This number is negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</summary>
      <returns>The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to. This number is negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> objects are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_bias">
      <summary>Gets the bias of the iterator. The bias is the offset of the iterator from element zero.</summary>
      <returns>The bias of the iterator.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_cref">
      <summary>Returns a constant reference to the element that the iterator is currently pointing to.</summary>
      <returns>A constant reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_node">
      <summary>Gets the node, or element, that the iterator is pointing to.</summary>
      <returns>The node that the iterator is pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_ref">
      <summary>Returns a reference to the element that the iterator is currently pointing to.</summary>
      <returns>A reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Item(System.Int32)">
      <summary>Accesses the element at the given position in the container.</summary>
      <returns>The element at the given position in the container.</returns>
      <param name="_Pos">The position of the element to access.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.</summary>
      <returns>true if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, false.</returns>
      <param name="_Right">A valid iterator pointing to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.</summary>
      <returns>true if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, false.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.move(System.Int32)">
      <summary>Moves the iterator by the given number of elements.</summary>
      <returns>The actual number of elements traversed. This number will differ from <paramref name="_Offset" /> if the beginning or end of the container is reached before iterating the desired number of elements.</returns>
      <param name="_Offset">The number of elements to traverse. To move the iterator forward, specify a negative number. To move the iterator backward, use a positive number.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.next">
      <summary>Increments the reverse iterator to the next position in the underlying container, or to the first position in front of the beginning of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)">
      <summary>Increments the reverse iterator by the given number of elements. The integer parameter is specified on the right side of the addition operator.</summary>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Right">The number of elements to increment.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Increments the reverse iterator by the given number of elements. The integer parameter is specified on the left side of the addition operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Left">The number of elements to increment.</param>
      <param name="_Right">The iterator to increment.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)">
      <summary>Decrements the reverse iterator by one element. This is the prefix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)">
      <summary>Decrements the reverse iterator by one element. This is the postfix version of the decrement operator.</summary>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether two iterators are the same object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is greater than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is greater than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}">
      <summary>Converts a <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> to an <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />.</summary>
      <returns>The current iterator as an <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)">
      <summary>Increments the reverse iterator by one element. This is the prefix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)">
      <summary>Increments the reverse iterator by one element. This is the postfix version of the increment operator.</summary>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">Indicates that this is the postfix version of the increment operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is less than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is less than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by the given number of elements. The integer parameter is specified on the right side of the subtraction operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Right">The number of elements to decrement.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines the difference between two iterators.</summary>
      <returns>The difference (number of elements) between the two iterators.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> to be subtracted from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.prev">
      <summary>Positions the iterator to the element immediately after the current element.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.valid">
      <summary>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</summary>
      <returns>true if the iterator is valid and safe to use; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1">
      <summary>Defines an iterator that can access elements in a container in the forward direction by using the increment operator and in the backward direction by using the decrement operator. The element that the iterator points to can be both written to and read from any number of times. Bidirectional iterators can be used anywhere that an input or output iterator is required.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object that points to the given node.</summary>
      <param name="_Node">The node that the iterator will point to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object to copy.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.Clone">
      <summary>Returns a copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
      <returns>A copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.container">
      <summary>Gets the container that the iterator is traversing.</summary>
      <returns>The container that the iterator is traversing.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines if the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> objects are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_bias">
      <summary>Gets the bias of the iterator. The bias is the offset of the iterator from element zero.</summary>
      <returns>The bias of the iterator.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_cref">
      <summary>Returns a constant reference to the element that the iterator is currently pointing to.</summary>
      <returns>A constant reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_node">
      <summary>Gets the node, or element, that the iterator is pointing to.</summary>
      <returns>The node that the iterator is pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_ref">
      <summary>Returns a reference to the element that the iterator is currently pointing to.</summary>
      <returns>A reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.next">
      <summary>Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
      <summary>Decrements the iterator by one element. This is the prefix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by one element. This is the postfix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}">
      <summary>Converts a <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> to an <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />.</summary>
      <returns>The current iterator as an <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
      <summary>Increments the iterator by one element. This is the prefix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)">
      <summary>Increments the iterator by one element. This is the postfix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.prev">
      <summary>Positions the iterator to the element immediately before the current element.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.valid">
      <summary>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</summary>
      <returns>true if the iterator is valid and safe to use; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1">
      <summary>Provides an iterator that supports the following operations: moving forward one position by calling operator++, moving backward one position by calling operator--, accessing an element by using operator[], and accessing an element by using pointer arithmetic.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" /> object.</summary>
      <param name="_Cont">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" /> object to be copied to the current container.</param>
      <param name="_Offset">The offset of the element that the iterator will point to after creation.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object to be copied to the current container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone">
      <summary>Creates a copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
      <returns>A copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container">
      <summary>Gets the container that the iterator is traversing.</summary>
      <returns>The container that the iterator is traversing.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</summary>
      <returns>The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to. This number will be negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</summary>
      <returns>The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to. This number will be negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> objects are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_bias">
      <summary>Gets the bias of the iterator. The bias is the offset of the iterator from element zero.</summary>
      <returns>The bias of the iterator.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_cref">
      <summary>Returns a constant reference to the element that the iterator is currently pointing to.</summary>
      <returns>A constant reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_node">
      <summary>Gets the node, or element, that the iterator is pointing to.</summary>
      <returns>The node that the iterator is pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_ref">
      <summary>Returns a reference to the element that the iterator is currently pointing to.</summary>
      <returns>A reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item(System.Int32)">
      <summary>Accesses the element at the given position in the container.</summary>
      <returns>The element at the given position in the container.</returns>
      <param name="_Pos">The position of the element to access.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.</summary>
      <returns>true if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, false.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.</summary>
      <returns>true if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, false.</returns>
      <param name="_Right">A valid iterator pointing to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move(System.Int32)">
      <summary>Moves the iterator by the given number of elements.</summary>
      <returns>The actual number of elements traversed. This number will differ from <paramref name="_Offset" /> if the beginning or end of the container is reached before iterating the desired number of elements.</returns>
      <param name="_Offset">The number of elements to traverse. To move the iterator forward, specify a positive number. To move the iterator backward, use a negative number.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next">
      <summary>Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)">
      <summary>Increments the iterator by the given number of elements. The integer parameter is specified on the right side of the addition operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Right">The number of elements to increment.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Increments the iterator by the given number of elements. The integer parameter is specified on the left side of the addition operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Left">The number of elements to increment.</param>
      <param name="_Right">The iterator to increment.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <summary>Decrements the iterator by one element. This is the prefix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by one element. This is the postfix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the given left-side iterator is greater than the position of the given right-side iterator.</summary>
      <returns>true if the given left-side iterator is greater than the given right-side iterator; otherwise, false.</returns>
      <param name="_Left">The iterator to compare with the right-side iterator.</param>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is greater than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines whether the position of the left-side iterator is greater than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is greater than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}">
      <summary>Converts a <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> to an <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />.</summary>
      <returns>The current iterator as an <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <summary>Increments the iterator by one element. This is the prefix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)">
      <summary>Increments the iterator by one element. This is the postfix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines whether the position of the left-side iterator is less than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is less than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the given left-side iterator is less than the position of the given right-side iterator.</summary>
      <returns>true if the given left-side iterator is less than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Left">The iterator to compare with the right-side iterator.</param>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is less than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by the given number of elements. The integer parameter is specified on the right side of the subtraction operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Right">The number of elements to decrement.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines the difference between two iterators.</summary>
      <returns>The difference (number of elements) between the two iterators.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> to be subtracted from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev">
      <summary>Positions the iterator to the element immediately before the current element.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid">
      <summary>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</summary>
      <returns>true if the iterator is valid and safe to use; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1">
      <summary>Defines the base interface for all STL/CLR iterators.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container">
      <summary>Gets the container that the iterator is traversing.</summary>
      <returns>The container that the iterator is traversing.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_bias">
      <summary>Gets the bias of the iterator. The bias is the offset of the iterator from element zero.</summary>
      <returns>The bias of the iterator.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_node">
      <summary>Gets the node, or element, that the iterator is pointing to.</summary>
      <returns>The node that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next">
      <summary>Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid">
      <summary>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</summary>
      <returns>true if the iterator is valid and safe to use; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1">
      <summary>Interface for a container that supports both forward and backward iteration. Containers that implement bidirectional iteration support the following operations: moving forward one position by calling operator++, and moving backward one position by calling operator--.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation">
      <summary>Gets the current change generation of the underlying container.</summary>
      <returns>The current change generation of the underlying container.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1">
      <summary>Interface for an iterator that can access elements in a container in the forward direction by using the increment operator and in the backward direction by using the decrement operator. The element that the iterator points to can be both written to and read from any number of times. Bidirectional iterators can be used anywhere an input or output iterator is required.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev">
      <summary>Positions the iterator to the element immediately before the current element.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1">
      <summary>Interface for an iterator that can access elements in a container only in the forward direction by using the increment operator. The element that the iterator points to can be both written to and read from any number of times. Forward iterators can be used anywhere an input or output iterator is required.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1">
      <summary>Interface for an iterator that is used to read a sequence from a container only in the forward direction. The element that the iterator points to can be read only one time, and it cannot be modified.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether two <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> objects are equal.</summary>
      <returns>true if the current iterator and the specified iterator are equal; otherwise, false.</returns>
      <param name="param0"></param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.get_cref">
      <summary>Returns a constant reference to the element that the iterator is currently pointing to.</summary>
      <returns>A constant reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.INode`1">
      <summary>Interface for the node data structure. Containers that support bidirectional iteration contain nodes. A node consists of a value for the element at that position in the container and pointers to the next and previous elements in the container.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.Generic.INode`1._Value">
      <summary>Gets or sets the value of the element for this node in the container.</summary>
      <returns>The value of the element for this node in the container.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.INode`1.container">
      <summary>Gets the container that the current node is in.</summary>
      <returns>The container that the current node is in.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.INode`1.is_head">
      <summary>Determines whether the current node is the first node of the container.</summary>
      <returns>true if the current node is the first node in the container; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.INode`1.next_node">
      <summary>Gets the next node in the container past the current node.</summary>
      <returns>The next node in the container past the current node.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.INode`1.prev_node">
      <summary>Gets the node in the container immediately before the current node.</summary>
      <returns>The node in the container immediately before the current node.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1">
      <summary>Interface for an iterator that is used to write a sequence to a container only in the forward direction. The element that the iterator points to can be written to only one time.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1.get_ref">
      <summary>Returns a reference to the element that the iterator is currently pointing to.</summary>
      <returns>A reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1">
      <summary>Interface for a container that supports random access iteration. Containers that implement random access iteration support the following operations: moving forward one position by calling operator++, moving backward one position by calling operator--, accessing an element by using operator[], and accessing an element by using pointer arithmetic.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)">
      <summary>Gets the element at the current bias of the container. The bias is the offset from the current element zero.</summary>
      <returns>The element at the given bias.</returns>
      <param name="param0"></param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)">
      <summary>Determines if a given bias is valid for the container. The bias is the offset from the current element zero.</summary>
      <returns>true if the given bias is valid for the container; otherwise, false.</returns>
      <param name="param0"></param>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1">
      <summary>Defines the interface for a random access iterator. Random access iterators support the following operations: moving forward one position by calling operator++, moving backward one position by calling operator--, accessing an element by using operator[], and accessing an element by using pointer arithmetic.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</summary>
      <returns>The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to. This number is negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines whether the current iterator is pointing to an element in the container that precedes the element that the given iterator points to.</summary>
      <returns>true if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, false.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)">
      <summary>Moves the iterator by the given number of elements.</summary>
      <returns>The actual number of elements traversed. This number will differ from <paramref name="_Offset" /> if the beginning or end of the container is reached before iterating the desired number of elements.</returns>
      <param name="_Offset">The number of elements to traverse. To move the iterator forward, specify a positive number. To move the iterator backward, use a negative number.</param>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1">
      <summary>Defines an iterator that accesses elements in a container in the reverse direction. Elements can be accessed in the forward direction by using the decrement operator and in the backward direction by using the increment operator. The element that the iterator points to can be both written to and read from any number of times. Reverse bidirectional iterators can be used anywhere that a reverse input or reverse output iterator is required.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" /> object.</summary>
      <param name="_Iter">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" /> object to copy.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object to copy.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base">
      <summary>Gets the underlying base iterator for the <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <returns>The underlying base iterator for the <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone">
      <summary>Returns a copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <returns>A copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container">
      <summary>Gets the container that the iterator is traversing.</summary>
      <returns>The container that the iterator is traversing.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> objects are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_bias">
      <summary>Gets the bias of the iterator. The bias is the offset of the iterator from element zero.</summary>
      <returns>The bias of the iterator.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_cref">
      <summary>Returns a constant reference to the element that the iterator is currently pointing to.</summary>
      <returns>A constant reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_node">
      <summary>Gets the node, or element, that the iterator is pointing to.</summary>
      <returns>The node that the iterator is pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_ref">
      <summary>Returns a reference to the element that the iterator is currently pointing to.</summary>
      <returns>A reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next">
      <summary>Decrements the iterator to the previous position in the underlying container, or to the first position in front of the beginning of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
      <summary>Decrements the iterator by one element. Decrementing a reverse iterator is the same as incrementing a regular iterator. This is the prefix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by one element. Decrementing a reverse iterator is the same as incrementing a regular iterator. This is the postfix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}">
      <summary>Converts a <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> to an <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />.</summary>
      <returns>The current iterator as an <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
      <summary>Increments the iterator by one element. Incrementing a reverse iterator is the same as decrementing a regular iterator. This is the prefix version of the increment operator.</summary>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)">
      <summary>Increments the iterator by one element. Incrementing a reverse iterator is the same as decrementing a regular iterator. This is the postfix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev">
      <summary>Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid">
      <summary>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</summary>
      <returns>true if the iterator is valid and safe to use; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1">
      <summary>Provides an iterator that supports the following operations: moving forward one position by calling operator--, moving backward one position by calling operator++, accessing an element by using operator[], and accessing an element by using pointer arithmetic.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> object.</summary>
      <param name="_Iter">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> object to be copied to the current container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to be copied to the current container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base">
      <summary>Gets the underlying base iterator for the <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</summary>
      <returns>The underlying base iterator for the <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone">
      <summary>Creates a copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</summary>
      <returns>A copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container">
      <summary>Gets the container that the iterator is traversing.</summary>
      <returns>The container that the iterator is traversing.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</summary>
      <returns>The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to. This number is negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</summary>
      <returns>The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to. This number is negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> objects are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_bias">
      <summary>Gets the bias of the iterator. The bias is the offset of the iterator from element zero.</summary>
      <returns>The bias of the iterator.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_cref">
      <summary>Returns a constant reference to the element that the iterator is currently pointing to.</summary>
      <returns>A constant reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_node">
      <summary>Gets the node, or element, that the iterator is pointing to.</summary>
      <returns>The node that the iterator is pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_ref">
      <summary>Returns a reference to the element that the iterator is currently pointing to.</summary>
      <returns>A reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item(System.Int32)">
      <summary>Accesses the element at the given position in the container.</summary>
      <returns>The element at the given position in the container.</returns>
      <param name="_Pos">The position of the element to access.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.</summary>
      <returns>true if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, false.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.</summary>
      <returns>true if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, false.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move(System.Int32)">
      <summary>Moves the iterator by the given number of elements.</summary>
      <returns>The actual number of elements traversed. This number will differ from <paramref name="_Offset" /> if the beginning or end of the container is reached before iterating the desired number of elements.</returns>
      <param name="_Offset">The number of elements to traverse. To move the iterator forward, specify a negative number. To move the iterator backward, use a positive number.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next">
      <summary>Increments the reverse iterator to the next position in the underlying container, or to the first position in front of the beginning of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)">
      <summary>Increments the reverse iterator by the given number of elements. The integer parameter is specified on the right side of the addition operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Right">The number of elements to increment.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Increments the reverse iterator by the given number of elements. The integer parameter is specified on the left side of the addition operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Left">The number of elements to increment.</param>
      <param name="_Right">The iterator to increment.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <summary>Decrements the reverse iterator by one element. This is the prefix version of the decrement operator.</summary>
      <returns>An iterator. </returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)">
      <summary>Decrements the reverse iterator by one element. This is the postfix version of the decrement operator.</summary>
      <returns>An iterator. </returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether two iterators are the same object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is greater than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is greater than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}">
      <summary>Converts a <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> to an <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />.</summary>
      <returns>The current iterator as an <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <summary>Increments the reverse iterator by one element. This is the prefix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)">
      <summary>Increments the reverse iterator by one element. This is the postfix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is less than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is less than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines the difference between two iterators.</summary>
      <returns>The difference, in number of elements, between the two iterators.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> to be subtracted from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by the given number of elements. The integer parameter is specified on the right side of the subtraction operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Right">The number of elements to decrement.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev">
      <summary>Positions the iterator to the element immediately after the current element.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid">
      <summary>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</summary>
      <returns>true if the iterator is valid and safe to use; otherwise, false.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Microsoft.VisualBasic.Compatibility.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualBasic.Compatibility</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray">
      <summary>Implements the basic functionality common to control arrays in applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class, optionally specifying a container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(System.Object)">
      <summary>Gets a value that indicates whether a control is a member of a control array.</summary>
      <returns>true if the control is a member of the control array; otherwise, false.</returns>
      <param name="target">The <see cref="T:System.Windows.Forms.Control" /> to test.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(System.Object)">
      <summary>Gets the index of a control in a control array.</summary>
      <returns>A Short integer representing the index of the control in the control array.</returns>
      <param name="ctl">The <see cref="T:System.Windows.Forms.Control" /> for which you want to retrieve the index.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(System.Int16)">
      <summary>Gets the control for a specified index in a control array.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> at the specified <paramref name="Index" />.</returns>
      <param name="Index">An integer that represents the index of the control in the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(System.Object)">
      <summary>Not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(System.Object,System.Int16,System.Boolean)">
      <summary>Sets the index for a control in a control array.</summary>
      <param name="ctl">The <see cref="T:System.Windows.Forms.Control" /> for which you want to set the index.</param>
      <param name="Index">A Short integer that represents the index for the control.</param>
      <param name="fIsDynamic">Optional. A Boolean specifying whether the control was created at design time (false) or at run time (true).</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(System.Object)">
      <summary>Returns a value that indicates whether a control is a member of a control array. </summary>
      <returns>true if the control is a member of the control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>Begins the initialization of the control. </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components">
      <summary>Stores the container for a control array.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime">
      <summary>Stores values to track whether a control in a control array was created at design time or at run time.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls">
      <summary>Stores values that represent the controls in a control array.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count">
      <summary>Returns the number of controls in a control array.</summary>
      <returns>A Short that contains the number of controls.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by a control in a control array and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>Ends the initialization of a control.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled">
      <summary>Stores a value indicating whether the initialization code for a control array's container has finished executing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType">
      <summary>Returns the type of a control in a control array.</summary>
      <returns>This method must be overridden.The <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0. Because this class is not typically used to create an instance of the class, this Protected method is usually not called directly but is instead called by a derived class.NoteFunctions and objects in the <see cref="N:Microsoft.VisualBasic.Compatibility.VB6" /> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic 2010. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the .NET Framework. They are necessary only when the Visual Basic 6.0 code model differs significantly from the .NET Framework implementation.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator">
      <summary>Returns a reference to an enumerator object, which is used to iterate over a control array.</summary>
      <returns>A <see cref="T:System.Collections.IEnumerator" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)">
      <summary>Adds event handlers for a control in a control array.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices">
      <summary>Stores the indices for a control array.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound">
      <summary>Returns a Short that contains the smallest available subscript for a control array.</summary>
      <returns>A Short that contains the lower bounds of a control array.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(System.Int16)">
      <summary>Creates a new element in a control array.</summary>
      <param name="Index">A Short that represents the index of the new control.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound">
      <summary>Returns a Short that contains the largest available subscript for a control array.</summary>
      <returns>A Short that contains the upper bounds of a control array.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(System.Int16)">
      <summary>Removes a control from a control array.</summary>
      <param name="Index">A Short that represents the index of the control to remove.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray">
      <summary>Provides a control array of ActiveX controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.#ctor">
      <summary>Initializes a new instance of the BaseOCXArray class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the BaseOCXArray class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.Button" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ButtonBase.AutoSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ButtonBase.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.BackgroundImageLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.Button" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.Button" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.GetIndex(System.Windows.Forms.Button)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.Button" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.Button" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.Button" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Button" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array. </param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" />  property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ResetIndex(System.Windows.Forms.Button)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.SetIndex(System.Windows.Forms.Button,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.Button" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Button" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.Button" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ShouldSerializeIndex(System.Windows.Forms.Button)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.Button" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.Button" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.CheckBox" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.AppearanceChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.Appearance" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.BackgroundImageLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.CheckBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.CheckedChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.CheckStateChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.CheckBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.GetIndex(System.Windows.Forms.CheckBox)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.CheckBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.CheckBox" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.CheckBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.CheckBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array. </param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ResetIndex(System.Windows.Forms.CheckBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.SetIndex(System.Windows.Forms.CheckBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.CheckBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.CheckBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.CheckBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ShouldSerializeIndex(System.Windows.Forms.CheckBox)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.CheckBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.CheckBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.CheckedListBox" /> controls. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.CheckedListBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.CheckedListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.CheckedListBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Format">
      <summary>Occurs when the control is bound to a data value.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.FormatStringChanged">
      <summary>Occurs when value of the <see cref="P:System.Windows.Forms.ListControl.FormatString" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.FormattingEnabledChanged">
      <summary>Occurs when value of the <see cref="P:System.Windows.Forms.ListControl.FormattingEnabled" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.GetIndex(System.Windows.Forms.CheckedListBox)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.CheckedListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.CheckedListBox" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.CheckedListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ImeModeChanged">
      <summary>Occurs when value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.CheckedListBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ItemCheck">
      <summary>Occurs when the checked state of an item changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MouseDoubleClick">
      <summary>Occurs when a control is double-clicked by the mouse. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ResetIndex(System.Windows.Forms.CheckedListBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.SelectedIndexChanged">
      <summary>Occurs when the selected index in a control array changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.SelectedValueChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedValue" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.SetIndex(System.Windows.Forms.CheckedListBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.CheckedListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.CheckedListBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.CheckedListBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ShouldSerializeIndex(System.Windows.Forms.CheckedListBox)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.CheckedListBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.CheckedListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.ColorDialog" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.ColorDialog" /> control.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.GetIndex(System.Windows.Forms.ColorDialog)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.ColorDialog" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ColorDialog" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ColorDialog" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.HelpRequest">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ColorDialog" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.ResetIndex(System.Windows.Forms.ColorDialog)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.SetIndex(System.Windows.Forms.ColorDialog,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.ColorDialog" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.ColorDialog" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ColorDialog" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.ShouldSerializeIndex(System.Windows.Forms.ColorDialog)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.ColorDialog" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ColorDialog" /> in the control array.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.ComboBox" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.ComboBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ComboBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DataSourceChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ComboBox.DataSource" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DisplayMemberChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ComboBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DrawItem">
      <summary>Occurs when a visual aspect of an owner-drawn <see cref="T:System.Windows.Forms.ComboBox" /> changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DropDown">
      <summary>Occurs when the drop-down part of a <see cref="T:System.Windows.Forms.ComboBox" /> is shown.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DropDownClosed">
      <summary>Occurs when the drop-down part of the <see cref="T:System.Windows.Forms.ComboBox" /> is no longer visible.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DropDownStyleChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ComboBox.DropDownStyle" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Format">
      <summary>Occurs when the control is bound to a data value.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.FormatStringChanged">
      <summary>Occurs when value of the <see cref="P:System.Windows.Forms.ListControl.FormatString" /> property changes </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.FormattingEnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.FormattingEnabled" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.GetIndex(System.Windows.Forms.ComboBox)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.ComboBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ComboBox" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ComboBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ComboBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MeasureItem">
      <summary>Occurs every time that an owner-drawn <see cref="T:System.Windows.Forms.ComboBox" /> item has to be drawn and when the sizes of the list items are determined. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ResetIndex(System.Windows.Forms.ComboBox)">
      <summary>Not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.SelectedIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ComboBox.SelectedIndex" /> property has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.SelectedValueChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedValue" /> property has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.SelectionChangeCommitted">
      <summary>Occurs when the selected item has changed and that change is displayed in the <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.SetIndex(System.Windows.Forms.ComboBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.ComboBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.ComboBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ComboBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ShouldSerializeIndex(System.Windows.Forms.ComboBox)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.ComboBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ComboBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.TextUpdate">
      <summary>Occurs when the control has formatted the text, but before the text is displayed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ValueMemberChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox">
      <summary>Displays directories and paths at run time.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> class.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Change">
      <summary>Occurs when the contents of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> control has changed.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ColumnWidth">
      <summary>Gets or sets the width of columns in a multicolumn <see cref="T:System.Windows.Forms.ListBox" />.</summary>
      <returns>The width, in pixels, of each column in the control. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DataSource">
      <summary>Gets or sets the data source for a <see cref="T:System.Windows.Forms.ListControl" />.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IList" /> or <see cref="T:System.ComponentModel.IListSource" /> interfaces, such as a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Array" />. The default is null.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirList(System.Int32)">
      <summary>Gets the items that are contained in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> control's list portion.</summary>
      <returns>A String that contains the directory and path for the specified item.</returns>
      <param name="Index">The number of a specific item in the list.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListCount">
      <summary>Gets the number of items in the list section of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> control.</summary>
      <returns>An Integer that represents the number of items in the list.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListIndex">
      <summary>Gets or sets the index of the currently selected item in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> control.</summary>
      <returns>An Integer that represents the index of the currently selected item.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> control and optionally releases the managed resources.</summary>
      <param name="Disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DrawMode">
      <summary>Gets or sets the drawing mode for a <see cref="T:System.Windows.Forms.ListBox" />.</summary>
      <returns>One of the <see cref="P:System.Windows.Forms.ListBox.DrawMode" /> values that represent the mode for drawing the items of the control. The default is <see cref="F:System.Windows.Forms.DrawMode.Normal" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ItemHeight">
      <summary>Gets the height of an item in the <see cref="T:System.Windows.Forms.ListBox" />.</summary>
      <returns>The height, in pixels, of an item in the control.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Items">
      <summary>Gets the items that are contained in a <see cref="T:System.Windows.Forms.ListBox" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> that represents the items in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.MultiColumn">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Forms.ListBox" /> supports multiple columns.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.ListBox" /> supports multiple columns; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnChange(System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Change" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnDoubleClick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DoubleClick" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
      <summary>Raise the <see cref="E:System.Windows.Forms.ListBox.DrawItem" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnHandleCreated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnSelectedIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ListBox.SelectedIndexChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Path">
      <summary>Gets or sets the current path in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> control.</summary>
      <returns>A String that represents the path of the currently selected directory. The default is the current path when the control is created at run time.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Refresh">
      <summary>Forces the control to invalidate its client area and immediately redraw itself.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.SelectionMode">
      <summary>Gets or sets the method in which items are selected in a <see cref="T:System.Windows.Forms.ListBox" />.</summary>
      <returns>One of the <see cref="P:System.Windows.Forms.ListBox.SelectionMode" /> values. The default is <see cref="F:System.Windows.Forms.SelectionMode.One" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Sorted">
      <summary>Gets a value that indicates whether the items in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> are sorted alphabetically.</summary>
      <returns>true if items in the control are sorted; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ValueMember">
      <summary>Gets or sets the property to use as the actual value for the items in a <see cref="T:System.Windows.Forms.ListControl" />.</summary>
      <returns>A String that represents the name of an object property that is contained in the collection specified by the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DataSource" /> property. The default is an empty string ("").</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray">
      <summary>Provides a control array of <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.Change">
      <summary>Occurs when the contents of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> control has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.DataSourceChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.DataSource" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.DisplayMemberChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.DrawItem">
      <summary>Occurs when a visual aspect of an owner-drawn <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.GetIndex(Microsoft.VisualBasic.Compatibility.VB6.DirListBox)">
      <summary>Gets the index of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" />.</returns>
      <param name="o">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.MeasureItem">
      <summary>Occurs each time an owner-drawn <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> item needs to be drawn and when the sizes of the list items are determined.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.ResetIndex(Microsoft.VisualBasic.Compatibility.VB6.DirListBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.SelectedIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedIndex" /> property has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.SelectedValueChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedValue" /> property has changed.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.SetIndex(Microsoft.VisualBasic.Compatibility.VB6.DirListBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" />.</summary>
      <param name="o">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.ShouldSerializeIndex(Microsoft.VisualBasic.Compatibility.VB6.DirListBox)">
      <summary>Returns a value that indicates whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.ValueMemberChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox">
      <summary>Enables a user to select a valid disk drive at run time.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DataSource">
      <summary>Gets or sets the data source for a <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IList" /> or <see cref="T:System.ComponentModel.IListSource" /> interfaces, such as a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Array" />. The default is null.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DisplayMember">
      <summary>Gets or sets the property to display for this <see cref="T:System.Windows.Forms.ListControl" />.</summary>
      <returns>A String that represents the name of an object property and is contained in the collection specified by the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DataSource" /> property. The default is an empty string ("").</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> control and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DrawMode">
      <summary>Gets or sets the drawing mode for a <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <returns>One of the <see cref="P:System.Windows.Forms.ComboBox.DrawMode" /> values that represent the mode for drawing the items of the control. The default is <see cref="F:System.Windows.Forms.DrawMode.Normal" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Drive">
      <summary>Gets or sets the selected drive at run time.</summary>
      <returns>A String expression that specifies the selected drive.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DropDownStyle">
      <summary>Gets or sets a value that specifies the style of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> combo box.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.ComboBoxStyle" /> values. The default is <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDown" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.ItemHeight">
      <summary>Gets the height of an item in the <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <returns>The height, in pixels, of an item in the control.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Items">
      <summary>Gets the items that are contained in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> that represents the items in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Items(System.Int32)">
      <summary>Gets the item for a specified index in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</summary>
      <returns>A String that contains the name of the drive at the specified <paramref name="Index" />.</returns>
      <param name="Index">The number of a specific item in the list.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.MaxLength">
      <summary>Gets or sets a value that specifies the maximum length of text displayed in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</summary>
      <returns>An Integer that specifies the maximum length for the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Drive" /> property.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.OnBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
      <summary>Raise the <see cref="E:System.Windows.Forms.ListBox.DrawItem" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.OnFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.OnHandleCreated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.OnSelectedIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ListBox.SelectedIndexChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Refresh">
      <summary>Forces the control to invalidate its client area and immediately redraw itself.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Sorted">
      <summary>Gets a value indicating whether the items in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> is sorted alphabetically.</summary>
      <returns>true if items in the control are sorted; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Text">
      <summary>Gets the text displayed in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</summary>
      <returns>A String that contains the text that is displayed.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.ValueMember">
      <summary>Gets or sets the property to use as the actual value for the items in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</summary>
      <returns>A String that represents the name of an object property and is contained in the collection specified by the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DataSource" /> property. The default is an empty string ("").</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
      <param name="m">The Windows Message to process. </param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray">
      <summary>Provides a control array of <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.Click">
      <summary>Occurs when a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DataSourceChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.DataSource" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DisplayMemberChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DrawItem">
      <summary>Occurs when a visual aspect of an owner-drawn <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DropDown">
      <summary>Occurs when the drop-down portion of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> is shown.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DropDownStyleChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ComboBox.DropDownStyle" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.GetIndex(Microsoft.VisualBasic.Compatibility.VB6.DriveListBox)">
      <summary>Gets the index of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</returns>
      <param name="o">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.MeasureItem">
      <summary>Occurs each time an owner-drawn <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> item needs to be drawn and when the sizes of the list items are determined.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.ResetIndex(Microsoft.VisualBasic.Compatibility.VB6.DriveListBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.SelectedIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedIndex" /> property has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.SelectedValueChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedValue" /> property has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.SelectionChangeCommitted">
      <summary>Occurs when the selected item has changed and that change is displayed in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.SetIndex(Microsoft.VisualBasic.Compatibility.VB6.DriveListBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" />.</summary>
      <param name="o">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.ShouldSerializeIndex(Microsoft.VisualBasic.Compatibility.VB6.DriveListBox)">
      <summary>Returns a value that indicates whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" />.</summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.ValueMemberChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox">
      <summary>Locates and lists files in the directory specified by the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Path" /> property at run time.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Archive">
      <summary>Gets or sets a value that determines whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control displays files that have Archive attributes.</summary>
      <returns>true if files that have the Archive attribute will be displayed; otherwise false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.DataSource">
      <summary>Gets or sets the data source for a <see cref="T:System.Windows.Forms.ListControl" />.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IList" /> or <see cref="T:System.ComponentModel.IListSource" /> interfaces, such as a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Array" />. The default is null.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.DisplayMember">
      <summary>Gets or sets the property to display for this <see cref="T:System.Windows.Forms.ListControl" />.</summary>
      <returns>A String that represents the name of an object property that is contained in the collection specified by the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.DataSource" /> property. The default is an empty string ("").</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.FileName">
      <summary>Gets or sets the file name of the selected file in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" />.</summary>
      <returns>A String that contains the file name of the selected file.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Hidden">
      <summary>Gets or sets a value that determines whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control displays files that have Hidden attributes.</summary>
      <returns>true if files that have the Hidden attribute will be displayed; otherwise false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.ItemHeight">
      <summary>Gets the height of an item in the <see cref="T:System.Windows.Forms.ListBox" />.</summary>
      <returns>This property is not required for the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control; the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> does not support items of variable height. It is provided only because the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control inherits from <see cref="T:System.Windows.Forms.ListBox" />.NoteFunctions and objects in the <see cref="N:Microsoft.VisualBasic.Compatibility.VB6" /> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic 2008. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the .NET Framework. They are necessary only when the Visual Basic 6.0 code model differs significantly from the .NET Framework implementation.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Items">
      <summary>Gets the items that are contained in a <see cref="T:System.Windows.Forms.ListBox" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> representing the items in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Items(System.Int32)">
      <summary>Gets the items that are contained in a <see cref="T:System.Windows.Forms.ListBox" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> that represents the items in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" />.</returns>
      <param name="Index">An Integer representing the index of the item.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Normal">
      <summary>Gets or sets a value that determines whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control displays files that have Normal attributes.</summary>
      <returns>true if files that have the Normal attribute will be displayed; otherwise false. The default is true.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.OnDoubleClick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DoubleClick" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.OnPathChange(System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.PathChange" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.OnPatternChange(System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.PatternChange" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.OnSelectedIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ListBox.SelectedIndexChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Path">
      <summary>Gets or sets the current path for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" />.</summary>
      <returns>A String that contains the current path, not including the file name.</returns>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.PathChange">
      <summary>Occurs when the path is changed by setting the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.FileName" /> or <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Path" /> property in code.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Pattern">
      <summary>Gets or sets a value indicating the file names displayed in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control at run time.</summary>
      <returns>A string expression indicating a file specification, such as "*.*" or "*.FRM". The default is "*.*", which returns a list of all files. </returns>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.PatternChange">
      <summary>Occurs when the file listing pattern, such as "*.*", is changed by setting the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.FileName" /> or <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Pattern" /> property in code.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.ReadOnly">
      <summary>Gets or sets a value that determines whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control contains files that have read-only attributes.</summary>
      <returns>true if files that have the ReadOnly attribute will be displayed; otherwise false. The default is true.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Refresh">
      <summary>Forces the control to invalidate its client area and immediately redraw itself.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Sorted">
      <summary>Gets a value indicating whether the items in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> are sorted alphabetically.</summary>
      <returns>true if items in the control are sorted; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.System">
      <summary>Gets or sets a value that determines whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control displays files that have System attributes.</summary>
      <returns>true if files that have the System attribute will be displayed; otherwise false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.ValueMember">
      <summary>Gets or sets the property to use as the actual value for the items in a <see cref="T:System.Windows.Forms.ListControl" />.</summary>
      <returns>A String representing the name of an object property that is contained in the collection specified by the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.DataSource" /> property. The default is an empty string ("").</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray">
      <summary>Provides a control array of <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.DataSourceChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.DataSource" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.DisplayMemberChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.DrawItem">
      <summary>Occurs when a visual aspect of an owner-drawn <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.GetIndex(Microsoft.VisualBasic.Compatibility.VB6.FileListBox)">
      <summary>Gets the index of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" />.</returns>
      <param name="o">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.FileListBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.MeasureItem">
      <summary>Occurs every time an owner-drawn <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> item has to be drawn and when the sizes of the list items are determined.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.PathChange">
      <summary>Occurs when the path is changed by setting the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.FileName" /> or <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Path" /> property in code.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.PatternChange">
      <summary>Occurs when the file listing pattern, such as "*.*", is changed by setting the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.FileName" /> or <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Pattern" /> property in code.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.QueryAccessibilityHelp">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.ResetIndex(Microsoft.VisualBasic.Compatibility.VB6.FileListBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.SelectedIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedIndex" /> property has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.SelectedValueChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedValue" /> property has changed.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.SetIndex(Microsoft.VisualBasic.Compatibility.VB6.FileListBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" />.</summary>
      <param name="o">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.ShouldSerializeIndex(Microsoft.VisualBasic.Compatibility.VB6.FileListBox)">
      <summary>Returns a value that indicates whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.ValueMemberChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString">
      <summary>Emulates the behavior of a Visual Basic 6.0 fixed-length string.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" /> class, specifying the length.</summary>
      <param name="MaxChars">An Integer that specifies the length of the string.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.#ctor(System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" /> class, specifying the length and the initial value.</summary>
      <param name="MaxChars">An Integer that specifies the length of the string.</param>
      <param name="InitialValue">A <see cref="T:System.String" /> that specifies the initial contents.</param>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.m_nMaxChars">
      <summary>Stores the length of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.m_strValue">
      <summary>Stores the value of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.ToString">
      <summary>Converts a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> that contains the value of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.Value">
      <summary>Gets or sets the contents of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" />.</summary>
      <returns>A <see cref="T:System.String" /> that contains the value.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.FontDialog" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.Apply">
      <summary>Occurs when the user clicks the Apply button in the font dialog box.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.FontDialog" /> control.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.GetIndex(System.Windows.Forms.FontDialog)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.FontDialog" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.FontDialog" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.FontDialog" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.HelpRequest">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.FontDialog" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.ResetIndex(System.Windows.Forms.FontDialog)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.SetIndex(System.Windows.Forms.FontDialog,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.FontDialog" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.FontDialog" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.FontDialog" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.ShouldSerializeIndex(System.Windows.Forms.FontDialog)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.FontDialog" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.FontDialog" /> in the control array.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants">
      <summary>Provides constants for compatibility with the Visual Basic 6.0 Show method.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants.Modeless">
      <summary>Equivalent to the Visual Basic 6.0 constant vbModeless.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants.Modal">
      <summary>Equivalent to the Visual Basic 6.0 constant vbModal.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.GroupBox" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.BackgroundImageLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.GroupBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.GetIndex(System.Windows.Forms.GroupBox)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.GroupBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.GroupBox" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.GroupBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.GroupBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" />  property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ResetIndex(System.Windows.Forms.GroupBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.SetIndex(System.Windows.Forms.GroupBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.GroupBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.GroupBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.GroupBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ShouldSerializeIndex(System.Windows.Forms.GroupBox)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.GroupBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.GroupBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.HScrollBar" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">An <see cref="T:System.Windows.Forms.HScrollBar" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.GetIndex(System.Windows.Forms.HScrollBar)">
      <summary>Gets the index of an <see cref="T:System.Windows.Forms.HScrollBar" /> in an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" />.</summary>
      <returns>An <see cref="T:System.Windows.Forms.HScrollBar" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="o">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.HookUpControlEvents(System.Object)">
      <summary>Gets a value that determines whether a control is a member of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" />.</summary>
      <param name="o">An <see cref="T:System.Windows.Forms.HScrollBar" /> control.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.Item(System.Int16)">
      <summary>Gets a specific element of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" /> by index. Read-only.</summary>
      <returns>An <see cref="T:System.Windows.Forms.HScrollBar" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ResetIndex(System.Windows.Forms.HScrollBar)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.Scroll">
      <summary>Occurs when the user scrolls the <see cref="T:System.Windows.Forms.HScrollBar" /> control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.SetIndex(System.Windows.Forms.HScrollBar,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.HScrollBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" />.</summary>
      <param name="o">An <see cref="T:System.Windows.Forms.HScrollBar" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.HScrollBar" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ShouldSerializeIndex(System.Windows.Forms.HScrollBar)">
      <summary>Returns a value that indicates whether an <see cref="T:System.Windows.Forms.HScrollBar" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">An <see cref="T:System.Windows.Forms.HScrollBar" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ValueChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ScrollBar.Value" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.ImageList" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">An <see cref="T:System.Windows.Forms.ImageList" /> control.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.GetIndex(System.Windows.Forms.ImageList)">
      <summary>Gets the index of an <see cref="T:System.Windows.Forms.ImageList" /> in an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ImageList" />.</returns>
      <param name="o">An <see cref="T:System.Windows.Forms.ImageList" /> in the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.Item(System.Int16)">
      <summary>Gets a specific element of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray" /> by index. Read-only.</summary>
      <returns>An <see cref="T:System.Windows.Forms.ImageList" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.ResetIndex(System.Windows.Forms.ImageList)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.SetIndex(System.Windows.Forms.ImageList,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.ImageList" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray" />.</summary>
      <param name="o">An <see cref="T:System.Windows.Forms.ImageList" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ImageList" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.ShouldSerializeIndex(System.Windows.Forms.ImageList)">
      <summary>Returns a value that indicates whether an <see cref="T:System.Windows.Forms.ImageList" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">An <see cref="T:System.Windows.Forms.ImageList" /> in the control array.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.Label" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.Label" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.Label" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.Label" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.GetIndex(System.Windows.Forms.Label)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.Label" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.Label" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.Label" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Label" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ResetIndex(System.Windows.Forms.Label)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.SetIndex(System.Windows.Forms.Label,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.Label" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Label" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.Label" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ShouldSerializeIndex(System.Windows.Forms.Label)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.Label" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.Label" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.TextAlignChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Label.TextAlign" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.ListBox" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.ListBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DataSourceChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.DataSource" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DisplayMemberChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ListBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DrawItem">
      <summary>Occurs when a visual aspect of an owner-drawn <see cref="T:System.Windows.Forms.ListBox" /> changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Format">
      <summary>Occurs when the control is bound to a data value.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.FormatStringChanged">
      <summary>Occurs when value of the <see cref="P:System.Windows.Forms.ListControl.FormatString" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.FormattingEnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.FormattingEnabled" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.GetIndex(System.Windows.Forms.ListBox)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.ListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ListBox" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ListBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MeasureItem">
      <summary>Occurs each time an owner-drawn <see cref="T:System.Windows.Forms.ListBox" /> item needs to be drawn and when the sizes of the list items are determined.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ResetIndex(System.Windows.Forms.ListBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.SelectedIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListBox.SelectedIndex" /> property has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.SelectedValueChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedValue" /> property has changed.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.SetIndex(System.Windows.Forms.ListBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.ListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.ListBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ListBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ShouldSerializeIndex(System.Windows.Forms.ListBox)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.ListBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ValueMemberChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem">
      <summary>Represents an item in a <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control in an application that was upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> class.</summary>
      <param name="ItemString">A <see cref="T:System.String" /> that contains the list item.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.#ctor(System.String,System.Int32)">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> class.</summary>
      <param name="ItemString">A <see cref="T:System.String" /> that contains the list item.</param>
      <param name="ItemData">An Integer that represents the Visual Basic 6.0 ItemData value.</param>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData">
      <summary>Stores the ItemData value for an item in a <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control in an application that was upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString">
      <summary>Stores the List value for an item in a <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control in an application that was upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ToString">
      <summary>Converts a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> that contains the value of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.ListView" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.AfterLabelEdit">
      <summary>Occurs when the label for an item is edited by the user. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.BeforeLabelEdit">
      <summary>Occurs when the user starts editing the label of an item.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.CacheVirtualItems">
      <summary>Occurs when the contents of the display area for a <see cref="T:System.Windows.Forms.ListView" /> in virtual mode has changed and the <see cref="T:System.Windows.Forms.ListView" /> determines that a new range of items is needed. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.ListView" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ListView" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ColumnClick">
      <summary>Occurs when the user clicks a column header within the <see cref="T:System.Windows.Forms.ListView" /> control. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ColumnReordered">
      <summary>Occurs when the column header order is changed. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ColumnWidthChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridViewColumn.Width" /> property for a column changes. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ColumnWidthChanging">
      <summary>Occurs when the width of a column is changing.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ListView" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.DrawColumnHeader">
      <summary>Occurs when the details view of a <see cref="T:System.Windows.Forms.ListView" /> is drawn and the <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> property is set to true. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.DrawItem">
      <summary>Occurs when a visual aspect of an owner-drawn <see cref="T:System.Windows.Forms.ListView" /> changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.DrawSubItem">
      <summary>Occurs when the details view of a <see cref="T:System.Windows.Forms.ListView" /> is drawn and the <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> property is set to true. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.GetIndex(System.Windows.Forms.ListView)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.ListView" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ListView" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ListView" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ListView" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ItemActivate">
      <summary>Occurs when an item is activated. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ItemCheck">
      <summary>Occurs when the checked state of an item changes. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ItemChecked">
      <summary>Occurs when the checked state of an item changes. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ItemDrag">
      <summary>Occurs when the user begins dragging an item. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ItemMouseHover">
      <summary>Occurs when the mouse hovers over an item. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ItemSelectionChanged">
      <summary>Occurs when the selection state of an item changes. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ResetIndex(System.Windows.Forms.ListView)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.RetrieveVirtualItem">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.ListView" /> is in virtual mode and requires a <see cref="T:System.Windows.Forms.ListViewItem" />. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.RightToLeftLayoutChanged">
      <summary>Occurs when the RightToLeftLayout property changes. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.SearchForVirtualItem">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.ListView" /> is in virtual mode and a search is taking place.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.SelectedIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedIndex" /> property has changed.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.SetIndex(System.Windows.Forms.ListView,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.ListView" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.ListView" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ListView" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ShouldSerializeIndex(System.Windows.Forms.ListView)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.ListView" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ListView" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.VirtualItemsSelectionRangeChanged">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ListView" /> is in virtual mode and the selection state of a range of items has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants">
      <summary>Provides constants for compatibility with the Visual Basic 6.0 LoadResPicture function.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants.ResBitmap">
      <summary>Equivalent to the Visual Basic 6.0 constant vbResBitmap.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants.ResIcon">
      <summary>Equivalent to the Visual Basic 6.0 constant vbResIcon.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants.ResCursor">
      <summary>Equivalent to the Visual Basic 6.0 constant vbResCursor.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.MaskedTextBox" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.BorderStyleChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.MaskedTextBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.MaskedTextBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.MaskedTextBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.GetIndex(System.Windows.Forms.MaskedTextBox)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.MaskedTextBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.MaskedTextBox" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.MaskedTextBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.HideSelectionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.IsOverwriteModeChanged">
      <summary>Occurs after the insert mode has changed.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.MaskedTextBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MaskChanged">
      <summary>Occurs after the input mask is changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MaskInputRejected">
      <summary>Occurs when the user's input or assigned character does not match the corresponding format element of the input mask.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ModifiedChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> property has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ReadOnlyChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.MaskedTextBox.ReadOnly" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ResetIndex(System.Windows.Forms.MaskedTextBox)">
      <summary>Not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.SetIndex(System.Windows.Forms.MaskedTextBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.MaskedTextBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.MaskedTextBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.MaskedTextBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ShouldSerializeIndex(System.Windows.Forms.MaskedTextBox)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.MaskedTextBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.MaskedTextBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.TextAlignChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.MaskedTextBox.TextAlign" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.TypeValidationCompleted">
      <summary>Occurs when <see cref="T:System.Windows.Forms.MaskedTextBox" /> has finished parsing the current value by using the <see cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" /> property.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.MenuItem" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.MenuItem" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.MenuItem" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.DrawItem">
      <summary>Occurs when a visual aspect of an owner-drawn <see cref="T:System.Windows.Forms.MenuItem" /> changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.GetIndex(System.Windows.Forms.MenuItem)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.MenuItem" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.MenuItem" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.MenuItem" /> in the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.MenuItem" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.MeasureItem">
      <summary>Occurs each time an owner-drawn <see cref="T:System.Windows.Forms.MenuItem" /> needs to be drawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.Popup">
      <summary>Occurs before a menu item's list of menu items is displayed.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.ResetIndex(System.Windows.Forms.MenuItem)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.Select">
      <summary>Occurs when the user rests the mouse pointer over a menu item.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.SetIndex(System.Windows.Forms.MenuItem,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.MenuItem" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.MenuItem" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.MenuItem" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.ShouldSerializeIndex(System.Windows.Forms.MenuItem)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.MenuItem" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.MenuItem" /> in the control array.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.MouseButtonConstants">
      <summary>Provides constants for compatibility with the shift parameter mask constants in Visual Basic 6.0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.MouseButtonConstants.LeftButton">
      <summary>Equivalent to the Visual Basic 6.0 constant vbLeftButton.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.MouseButtonConstants.RightButton">
      <summary>Equivalent to the Visual Basic 6.0 constant vbRightButton.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.MouseButtonConstants.MiddleButton">
      <summary>Equivalent to the Visual Basic 6.0 constant vbMiddleButton.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.OpenFileDialog" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">An <see cref="T:System.Windows.Forms.OpenFileDialog" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.FileOk">
      <summary>Occurs when the user clicks on the Open or Save button on an <see cref="T:System.Windows.Forms.OpenFileDialog" /> dialog box.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.GetIndex(System.Windows.Forms.OpenFileDialog)">
      <summary>Gets the index of an <see cref="T:System.Windows.Forms.OpenFileDialog" /> in an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.OpenFileDialog" />.</returns>
      <param name="o">An <see cref="T:System.Windows.Forms.OpenFileDialog" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.HelpRequest">
      <summary>Occurs when the user clicks the Help button on an <see cref="T:System.Windows.Forms.OpenFileDialog" /> dialog box. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.Item(System.Int16)">
      <summary>Gets a specific element of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" /> by index. Read-only.</summary>
      <returns>An <see cref="T:System.Windows.Forms.OpenFileDialog" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.ResetIndex(System.Windows.Forms.OpenFileDialog)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.SetIndex(System.Windows.Forms.OpenFileDialog,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.OpenFileDialog" /> in an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />.</summary>
      <param name="o">An <see cref="T:System.Windows.Forms.OpenFileDialog" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.OpenFileDialog" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.ShouldSerializeIndex(System.Windows.Forms.OpenFileDialog)">
      <summary>Returns a value that indicates whether an <see cref="T:System.Windows.Forms.OpenFileDialog" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">An <see cref="T:System.Windows.Forms.OpenFileDialog" /> in the control array.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.Panel" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Panel.AutoSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.BackgroundImageLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.Panel" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.Panel" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.Panel" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.GetIndex(System.Windows.Forms.Panel)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.Panel" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.Panel" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.Panel" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Panel" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ResetIndex(System.Windows.Forms.Panel)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Scroll">
      <summary>Occurs when the user scrolls the <see cref="T:System.Windows.Forms.Panel" /> control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.SetIndex(System.Windows.Forms.Panel,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.Panel" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Panel" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.Panel" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ShouldSerializeIndex(System.Windows.Forms.Panel)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.Panel" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.Panel" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.PictureBox" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.BackgroundImageLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.PictureBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.PictureBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.PictureBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.GetIndex(System.Windows.Forms.PictureBox)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.PictureBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.PictureBox" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.PictureBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.PictureBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.LoadCompleted">
      <summary>Occurs when the asynchronous image-load operation is completed, been canceled, or raised an exception.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.LoadProgressChanged">
      <summary>Occurs when the progress of an asynchronous image-loading operation has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.ResetIndex(System.Windows.Forms.PictureBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.SetIndex(System.Windows.Forms.PictureBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.PictureBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.PictureBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.PictureBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.ShouldSerializeIndex(System.Windows.Forms.PictureBox)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.PictureBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.PictureBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.SizeModeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.PictureBox.SizeMode" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.PrintDialog" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.PrintDialog" /> control.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.GetIndex(System.Windows.Forms.PrintDialog)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.PrintDialog" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.PrintDialog" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.PrintDialog" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.HelpRequest">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.PrintDialog" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.ResetIndex(System.Windows.Forms.PrintDialog)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.SetIndex(System.Windows.Forms.PrintDialog,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.PrintDialog" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.PrintDialog" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.PrintDialog" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.ShouldSerializeIndex(System.Windows.Forms.PrintDialog)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.PrintDialog" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.PrintDialog" /> in the control array.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.ProgressBar" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.ProgressBar" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ProgressBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.GetIndex(System.Windows.Forms.ProgressBar)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.ProgressBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ProgressBar" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ProgressBar" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ProgressBar" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ResetIndex(System.Windows.Forms.ProgressBar)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.RightToLeftLayoutChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ProgressBar.RightToLeftLayout" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.SetIndex(System.Windows.Forms.ProgressBar,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.ProgressBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.ProgressBar" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ProgressBar" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ShouldSerializeIndex(System.Windows.Forms.ProgressBar)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.ProgressBar" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ProgressBar" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.RadioButton" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.AppearanceChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.RadioButton.Appearance" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.BackgroundImageLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.RadioButton" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.CheckedChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.RadioButton.Checked" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.RadioButton" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.GetIndex(System.Windows.Forms.RadioButton)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.RadioButton" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.RadioButton" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.RadioButton" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.RadioButton" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array. </param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ResetIndex(System.Windows.Forms.RadioButton)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.SetIndex(System.Windows.Forms.RadioButton,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.RadioButton" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.RadioButton" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.RadioButton" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ShouldSerializeIndex(System.Windows.Forms.RadioButton)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.RadioButton" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.RadioButton" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.RichTextBox" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.AcceptsTabChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.BorderStyleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.RichTextBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.CausesValidationChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.RichTextBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ContentsResized">
      <summary>Occurs when contents within the control are resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.RichTextBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.GetIndex(System.Windows.Forms.RichTextBox)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.RichTextBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.RichTextBox" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.RichTextBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.HideSelectionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.HScroll">
      <summary>Occurs when the user clicks the horizontal scroll bar of the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ImeChange">
      <summary>Occurs when the user switches input methods on an Asian version of the Windows operating system.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.RichTextBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.LinkClicked">
      <summary>Occurs when the user clicks on a link within the text of the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ModifiedChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MultilineChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Protected">
      <summary>Occurs when the user attempts to modify protected text in the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ReadOnlyChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ResetIndex(System.Windows.Forms.RichTextBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.SelectionChanged">
      <summary>Occurs when the selection of text within the control has changed.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.SetIndex(System.Windows.Forms.RichTextBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.RichTextBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.RichTextBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.RichTextBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ShouldSerializeIndex(System.Windows.Forms.RichTextBox)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.RichTextBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.RichTextBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.VScroll">
      <summary>Occurs when the user clicks the vertical scroll bars of the control.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.SaveFileDialog" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">An <see cref="T:System.Windows.Forms.OpenFileDialog" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.FileOk">
      <summary>Occurs when the user clicks on the Open or Save button on a <see cref="T:System.Windows.Forms.SaveFileDialog" /> dialog box.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.GetIndex(System.Windows.Forms.SaveFileDialog)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.SaveFileDialog" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.SaveFileDialog" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.SaveFileDialog" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.HelpRequest">
      <summary>Occurs when the user clicks the Help button on a <see cref="T:System.Windows.Forms.SaveFileDialog" /> dialog box. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.SaveFileDialog" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.ResetIndex(System.Windows.Forms.SaveFileDialog)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.SetIndex(System.Windows.Forms.SaveFileDialog,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.SaveFileDialog" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.SaveFileDialog" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.SaveFileDialog" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.ShouldSerializeIndex(System.Windows.Forms.SaveFileDialog)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.SaveFileDialog" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.SaveFileDialog" /> in the control array.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode">
      <summary>Provides constants for compatibility with the ScaleMode constants in Visual Basic 6.0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode.Points">
      <summary>Equivalent to the Visual Basic 6.0 constant vbPoints.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode.Characters">
      <summary>Equivalent to the Visual Basic 6.0 constant vbCharacters.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode.Inches">
      <summary>Equivalent to the Visual Basic 6.0 constant vbInches.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode.Millimeters">
      <summary>Equivalent to the Visual Basic 6.0 constant vbMillimeters.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode.Centimeters">
      <summary>Equivalent to the Visual Basic 6.0 constant vbCentimeters.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode.Himetric">
      <summary>Equivalent to the Visual Basic 6.0 constant vbHimetric.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ShiftConstants">
      <summary>Provides constants for compatibility with the shift parameter mask constants in Visual Basic 6.0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ShiftConstants.ShiftMask">
      <summary>Equivalent to the Visual Basic 6.0 constant vbShiftMask.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ShiftConstants.CtrlMask">
      <summary>Equivalent to the Visual Basic 6.0 constant vbCtrlMask.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ShiftConstants.AltMask">
      <summary>Equivalent to the Visual Basic 6.0 constant vbAltMask.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.StatusBar" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.StatusBar" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.StatusBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.StatusBar" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.DrawItem">
      <summary>Occurs when a visual aspect of an owner-drawn <see cref="T:System.Windows.Forms.StatusBar" /><see cref="T:System.Windows.Forms.StatusBar" /> control changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.GetIndex(System.Windows.Forms.StatusBar)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.StatusBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.StatusBar" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.StatusBar" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.StatusBar" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.PanelClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.StatusBarPanel" /> object on a <see cref="T:System.Windows.Forms.StatusBar" /> control is clicked. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.ResetIndex(System.Windows.Forms.StatusBar)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.SetIndex(System.Windows.Forms.StatusBar,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.StatusBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.StatusBar" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.StatusBar" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.ShouldSerializeIndex(System.Windows.Forms.StatusBar)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.StatusBar" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.StatusBar" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.StatusStrip" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property changes. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.BackgroundImageLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.BeginDrag">
      <summary>Occurs when the user begins to drag the <see cref="T:System.Windows.Forms.StatusStrip" /> control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.StatusStrip" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.StatusStrip" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.StatusStrip" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.EndDrag">
      <summary>Occurs when the user stops dragging the <see cref="T:System.Windows.Forms.StatusStrip" /> control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.GetIndex(System.Windows.Forms.StatusStrip)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.StatusStrip" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.StatusStrip" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.StatusStrip" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">A <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.StatusStrip" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ItemAdded">
      <summary>Occurs when a new <see cref="T:System.Windows.Forms.ToolStripItem" /> is added to the <see cref="T:System.Windows.Forms.ToolStripItemCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ItemClicked">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.ToolStripItem" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ItemRemoved">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolStripItem" /> is removed from the <see cref="T:System.Windows.Forms.ToolStripItemCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.LayoutCompleted">
      <summary>Occurs when the layout of the <see cref="T:System.Windows.Forms.StatusStrip" /> is complete.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.LayoutStyleChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.StatusStrip.LayoutStyle" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.PaintGrip">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.StatusStrip" /> move handle is painted.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ResetIndex(System.Windows.Forms.StatusStrip)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Scroll">
      <summary>Occurs when the user or code scrolls through the client area.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.SetIndex(System.Windows.Forms.StatusStrip,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.StatusStrip" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.StatusStrip" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.StatusStrip" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ShouldSerializeIndex(System.Windows.Forms.StatusStrip)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.StatusStrip" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.StatusStrip" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.Support">
      <summary>Contains various utility functions for backward compatibility with Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray(System.Array)">
      <summary>Duplicates Visual Basic 6.0 functionality of assigning an Array to a Variant.</summary>
      <returns>A <see cref="T:System.Array" />.</returns>
      <param name="SourceArray">A <see cref="T:System.Array" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture(System.Windows.Forms.Cursor)">
      <summary>Returns an OLE IPicture object that corresponds to the specified <see cref="T:System.Windows.Forms.Cursor" />.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the OLE IPicture object.</returns>
      <param name="curs">The <see cref="T:System.Windows.Forms.Cursor" /> to convert.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)">
      <summary>Performs a logical equivalence on two <see cref="T:System.Boolean" /> expressions.</summary>
      <returns>true if the two expressions are equal; otherwise false.</returns>
      <param name="a">A <see cref="T:System.Boolean" /> to compare.</param>
      <param name="b">A <see cref="T:System.Boolean" /> to compare.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
      <summary>Performs a logical equivalence on two <see cref="T:System.Byte" /> expressions.</summary>
      <returns>A <see cref="T:System.Byte" /> that contains the result of the bitwise comparison.</returns>
      <param name="a">A <see cref="T:System.Byte" /> to compare.</param>
      <param name="b">A <see cref="T:System.Byte" /> to compare.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int16,System.Int16)">
      <summary>Performs a logical equivalence on two <see cref="T:System.Int16" /> expressions.</summary>
      <returns>A <see cref="T:System.Int16" /> that contains the result of the comparison.</returns>
      <param name="a">A <see cref="T:System.Int16" /> to compare.</param>
      <param name="b">A <see cref="T:System.Int16" /> to compare.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int32,System.Int32)">
      <summary>Performs a logical equivalence on two <see cref="T:System.Int32" /> expressions.</summary>
      <returns>A <see cref="T:System.Int32" /> that contains the result of the comparison.</returns>
      <param name="a">A <see cref="T:System.Int32" /> to compare.</param>
      <param name="b">A <see cref="T:System.Int32" /> to compare.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int64,System.Int64)">
      <summary>Performs a logical equivalence on two <see cref="T:System.Int64" /> expressions.</summary>
      <returns>A <see cref="T:System.Int64" /> that contains the result of the comparison.</returns>
      <param name="a">A <see cref="T:System.Int64" /> to compare.</param>
      <param name="b">A <see cref="T:System.Int64" /> to compare.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Object,System.Object)">
      <summary>Performs a logical equivalence on two <see cref="T:System.Object" /> expressions.</summary>
      <returns>A <see cref="T:System.Object" /> that contains the result of the comparison.</returns>
      <param name="a">A <see cref="T:System.Object" /> to compare.</param>
      <param name="b">A <see cref="T:System.Object" /> to compare.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold(System.Drawing.Font,System.Boolean)">
      <summary>Changes the <see cref="F:System.Drawing.FontStyle.Bold" /> style bit for a font.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> with the new style applied.</returns>
      <param name="CurrentFont">A <see cref="T:System.Drawing.Font" />.</param>
      <param name="Bold">true to set the <see cref="F:System.Drawing.FontStyle.Bold" /> style bit; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(System.Drawing.Font,System.Byte)">
      <summary>Returns a font for a specified GDI character set.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> for the specified GDI character set.</returns>
      <param name="CurrentFont">A <see cref="T:System.Drawing.Font" />.</param>
      <param name="GdiCharSet">A byte value that specifies the GDI character set to use.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic(System.Drawing.Font,System.Boolean)">
      <summary>Changes the <see cref="F:System.Drawing.FontStyle.Italic" /> style bit for a font.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> with the new style applied.</returns>
      <param name="CurrentFont">A <see cref="T:System.Drawing.Font" />.</param>
      <param name="Italic">true to set the <see cref="F:System.Drawing.FontStyle.Italic" /> style bit; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName(System.Drawing.Font,System.String)">
      <summary>Returns a new <see cref="T:System.Drawing.Font" /> for a given Visual Basic 6.0 Font.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> that matches the Visual Basic 6.0 Font.</returns>
      <param name="CurrentFont">A <see cref="T:System.Drawing.Font" />.</param>
      <param name="Name">A String that represents the Visual Basic 6.0 Font property.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize(System.Drawing.Font,System.Single)">
      <summary>Changes the <see cref="P:System.Drawing.Font.Size" /> property for a font.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> that matches the Visual Basic 6.0 FontSize.</returns>
      <param name="CurrentFont">A <see cref="T:System.Drawing.Font" />.</param>
      <param name="Size">A Single that represents the Visual Basic 6.0 FontSize property.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout(System.Drawing.Font,System.Boolean)">
      <summary>Changes the <see cref="F:System.Drawing.FontStyle.Strikeout" /> style bit for a font.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> with the new style applied.</returns>
      <param name="CurrentFont">A <see cref="T:System.Drawing.Font" />.</param>
      <param name="Strikeout">true to set the <see cref="F:System.Drawing.FontStyle.Strikeout" /> style bit; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline(System.Drawing.Font,System.Boolean)">
      <summary>Changes the <see cref="F:System.Drawing.FontStyle.Underline" /> style bit for a font.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> with the new style applied.</returns>
      <param name="CurrentFont">A <see cref="T:System.Drawing.Font" />.</param>
      <param name="Underline">true to set the <see cref="F:System.Drawing.FontStyle.Underline" /> style bit; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont(System.Drawing.Font)">
      <summary>Converts a <see cref="T:System.Drawing.Font" /> to a Visual Basic 6.0 stdFont object.</summary>
      <returns>A stdFont object.</returns>
      <param name="fnt">The <see cref="T:System.Drawing.Font" /> to convert.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Converts the Visual Basic 6.0 Format function to be compatible with Visual Basic 2010.</summary>
      <returns>A <see cref="T:System.String" /> that contains the formatted data.</returns>
      <param name="Expression">The <see cref="T:System.Object" /> expression to convert.</param>
      <param name="Style">Optional. A <see cref="T:System.String" /> that represents a date format.</param>
      <param name="DayOfWeek">Optional. A <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration.</param>
      <param name="WeekOfYear">Optional. A <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)">
      <summary>Converts a pixel measurement to a Visual Basic 6.0 ScaleHeight measurement.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 ScaleHeight. </returns>
      <param name="Height">A <see cref="T:System.Double" /> that represents the height.</param>
      <param name="ScaleHeight">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleHeight for the current ScaleMode.</param>
      <param name="OriginalHeightInPixels">An Integer that represents the height in pixels.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)">
      <summary>Converts a pixel measurement to a Visual Basic 6.0 ScaleWidth measurement.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 ScaleWidth. </returns>
      <param name="Width">A <see cref="T:System.Double" /> that represents the width.</param>
      <param name="ScaleWidth">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleWidth for the current ScaleMode.</param>
      <param name="OriginalWidthInPixels">An Integer that represents the width in pixels.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
      <summary>Converts a pixel measurement to a Visual Basic 6.0 ScaleLeft measurement.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 ScaleLeft. </returns>
      <param name="X">A <see cref="T:System.Double" /> that represents the X coordinate.</param>
      <param name="ScaleLeft">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleLeft for the current ScaleMode.</param>
      <param name="ScaleWidth">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleWidth for the current ScaleMode.</param>
      <param name="OriginalWidthInPixels">An Integer that represents the width in pixels.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
      <summary>Converts a pixel measurement to a Visual Basic 6.0 ScaleTop measurement.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 ScaleTop. </returns>
      <param name="Y">A <see cref="T:System.Double" /> that represents the X coordinate.</param>
      <param name="ScaleTop">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleTop for the current ScaleMode.</param>
      <param name="ScaleHeight">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleHeight for the current ScaleMode.</param>
      <param name="OriginalHeightInPixels">An Integer that represents the height in pixels.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
      <summary>Converts a pixel measurement to a Visual Basic 6.0 measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the Visual Basic 6.0 value for the specified ScaleMode.</returns>
      <param name="X">A <see cref="T:System.Double" /> that represents the X coordinate in pixels.</param>
      <param name="ToScale">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 ScaleMode to convert to.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
      <summary>Converts a pixel measurement to a Visual Basic 6.0 measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the Visual Basic 6.0 value for the specified ScaleMode.</returns>
      <param name="Y">A <see cref="T:System.Double" /> that represents the Y coordinate in pixels.</param>
      <param name="ToScale">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 ScaleMode to convert to.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl">
      <summary>Gets the control that currently has focus.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Control" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel(System.Windows.Forms.Button)">
      <summary>Gets a value that indicates whether a <see cref="T:System.Windows.Forms.Button" /> is the cancel button on a form.</summary>
      <returns>true if <paramref name="btn" /> is the cancel button; otherwise false.</returns>
      <param name="btn">A <see cref="T:System.Windows.Forms.Button" /> control.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault(System.Windows.Forms.Button)">
      <summary>Gets sets a value that determines whether a <see cref="T:System.Windows.Forms.Button" /> control is the default button on a form.</summary>
      <returns>true if <paramref name="btn" /> is the default button; otherwise false.</returns>
      <param name="btn">A <see cref="T:System.Windows.Forms.Button" /> control.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName">
      <summary>Gets the name of the executable file (.exe) for the current application.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name without a file name extension.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance">
      <summary>Gets the instance handle (HINSTANCE) for the current application.</summary>
      <returns>An <see cref="T:System.IntPtr" /> for the current application instance.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData(System.Windows.Forms.Control,System.Int32)">
      <summary>Gets an Integer associated with a <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> item.</summary>
      <returns>The Integer associated with the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</returns>
      <param name="Control">A <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</param>
      <param name="Index">An Integer that represents the index of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString(System.Windows.Forms.Control,System.Int32)">
      <summary>Gets a <see cref="T:System.String" /> associated with a <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> item.</summary>
      <returns>The <see cref="T:System.String" /> associated with the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</returns>
      <param name="Control">A <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</param>
      <param name="Index">An Integer that represents the index of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath">
      <summary>Gets the current path for the application.</summary>
      <returns>A <see cref="T:System.String" /> that contains the path of the currently executing assembly.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture(System.Drawing.Icon)">
      <summary>Gets an OLE IPicture object for a given <see cref="T:System.Drawing.Icon" />.</summary>
      <returns>An <see cref="T:System.Object" /> representing the OLE IPicture object.</returns>
      <param name="ico">A <see cref="T:System.Drawing.Icon" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont(System.Object)">
      <summary>Converts a Visual Basic 6.0 stdFont object to a <see cref="T:System.Drawing.Font" />.</summary>
      <returns>A <see cref="T:System.Drawing.Font" />.</returns>
      <param name="objFnt">An <see cref="T:System.Object" /> that contains a Visual Basic 6.0 stdFont.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture(System.Drawing.Image)">
      <summary>Gets an OLE IPicture object for a given <see cref="T:System.Drawing.Image" />.</summary>
      <returns>An <see cref="T:System.Object" /> representing the OLE IPicture object.</returns>
      <param name="img">A <see cref="T:System.Drawing.Image" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp(System.Drawing.Image)">
      <summary>Gets an OLE IPictureDisp object for a given <see cref="T:System.Drawing.Image" />.</summary>
      <returns>An <see cref="T:System.Object" /> representing the OLE IPictureDisp object.</returns>
      <param name="img">A <see cref="T:System.Drawing.Image" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Boolean,System.Boolean)">
      <summary>Performs a logical implication on two <see cref="T:System.Boolean" /> expressions.</summary>
      <returns>A <see cref="T:System.Boolean" /> that contains the result.</returns>
      <param name="a">A <see cref="T:System.Boolean" /> expression.</param>
      <param name="b">A <see cref="T:System.Boolean" /> expression.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Byte,System.Byte)">
      <summary>Performs a logical implication on two <see cref="T:System.Byte" /> expressions.</summary>
      <returns>A <see cref="T:System.Byte" /> that contains the result.</returns>
      <param name="a">A <see cref="T:System.Byte" /> expression.</param>
      <param name="b">A <see cref="T:System.Byte" /> expression.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int16,System.Int16)">
      <summary>Performs a logical implication on two <see cref="T:System.Int16" /> expressions.</summary>
      <returns>A Short that contains the result.</returns>
      <param name="a">A Short expression.</param>
      <param name="b">A Short expression.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int32,System.Int32)">
      <summary>Performs a logical implication on two <see cref="T:System.Int32" /> expressions.</summary>
      <returns>An Integer that contains the result.</returns>
      <param name="a">An Integer expression.</param>
      <param name="b">An Integer expression.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int64,System.Int64)">
      <summary>Performs a logical implication on two <see cref="T:System.Int64" /> expressions.</summary>
      <returns>A Long that contains the result.</returns>
      <param name="a">A Long expression.</param>
      <param name="b">A Long expression.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Object,System.Object)">
      <summary>Performs a logical implication on two <see cref="T:System.Object" /> expressions.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the result.</returns>
      <param name="a">An <see cref="T:System.Object" /> expression.</param>
      <param name="b">An <see cref="T:System.Object" /> expression.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage(System.Object)">
      <summary>Gets a <see cref="T:System.Drawing.Image" /> for a given OLE IPictureDisp object.</summary>
      <returns>A <see cref="T:System.Drawing.Image" />.</returns>
      <param name="pict">An OLE IPictureDisp object.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage(System.Object)">
      <summary>Gets a <see cref="T:System.Drawing.Image" /> for a given OLE IPicture object.</summary>
      <returns>A <see cref="T:System.Drawing.Image" />.</returns>
      <param name="pict">An OLE IPicture object.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)">
      <summary>Loads data of several possible types from a resource (.res) file.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the resource.</returns>
      <param name="ID">An <see cref="T:System.Object" /> that specifies the data in the resource file.</param>
      <param name="restype">An <see cref="T:System.Object" /> that specifies the resource type.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)">
      <summary>Loads data of several possible types from a resource (.res) file, specifying a locale.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the resource.</returns>
      <param name="ID">An <see cref="T:System.Object" /> that specifies the data in the resource file.</param>
      <param name="restype">An <see cref="T:System.Object" /> that specifies the resource type.</param>
      <param name="Culture">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the locale.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)">
      <summary>Loads a bitmap, icon, or cursor from a resource (.res) file.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the resource.</returns>
      <param name="ID">An <see cref="T:System.Object" /> that specifies the data in the resource file.</param>
      <param name="restype">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> enumeration that specifies the resource type.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)">
      <summary>Loads a bitmap, icon, or cursor from a resource (.res) file, specifying a locale.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the resource.</returns>
      <param name="ID">An <see cref="T:System.Object" /> that specifies the data in the resource file.</param>
      <param name="restype">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> enumeration that specifies the resource type.</param>
      <param name="Culture">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the locale.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)">
      <summary>Loads a string from a resource (.res) file.</summary>
      <returns>A <see cref="T:System.String" /> that contains the resource.</returns>
      <param name="ID">An <see cref="T:System.Object" /> that specifies the data in the resource file.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)">
      <summary>Loads a string from a resource (.res) file, specifying a locale.</summary>
      <returns>A <see cref="T:System.String" /> that contains the resource.</returns>
      <param name="ID">An <see cref="T:System.Object" /> that specifies the data in the resource file.</param>
      <param name="Culture">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the locale.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX(System.Double)">
      <summary>Converts an X coordinate from pixels to twips.</summary>
      <returns>A Double that contains the X coordinate expressed in twips.</returns>
      <param name="X">A Double that contains the X coordinate to convert.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY(System.Double)">
      <summary>Converts a Y coordinate from pixels to twips.</summary>
      <returns>A Double that contains the Y coordinate expressed in twips.</returns>
      <param name="Y">A Double that contains the Y coordinate to convert.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys(System.String,System.Boolean)">
      <summary>Sends one or more keystrokes to the active window as if typed at the keyboard.</summary>
      <param name="Keys">A <see cref="T:System.String" /> that contains the key values.</param>
      <param name="Wait">true to process keystrokes before control is returned to the procedure; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(System.Windows.Forms.Button,System.Boolean)">
      <summary>Sets the <see cref="P:System.Windows.Forms.Form.CancelButton" /> property of a <see cref="T:System.Windows.Forms.Form" />.</summary>
      <param name="btn">A <see cref="T:System.Windows.Forms.Button" />.</param>
      <param name="Cancel">true if the Visual Basic 6.0 CommandButton control's Cancel property is true; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(System.Windows.Forms.Button,System.Boolean)">
      <summary>Sets the <see cref="P:System.Windows.Forms.Form.AcceptButton" /> property of a <see cref="T:System.Windows.Forms.Form" />.</summary>
      <param name="btn">A <see cref="T:System.Windows.Forms.Button" />.</param>
      <param name="Default">true if the Visual Basic 6.0 CommandButton control's Default property is true; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData(System.Windows.Forms.Control,System.Int32,System.Int32)">
      <summary>Sets the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /> property for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</summary>
      <param name="Control">A <see cref="T:System.Windows.Forms.ListBox" /><see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</param>
      <param name="Index">The Index of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</param>
      <param name="ItemData">An Integer to assign to the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /> property.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString(System.Windows.Forms.Control,System.Int32,System.String)">
      <summary>Sets the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /> property for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</summary>
      <param name="Control">A <see cref="T:System.Windows.Forms.ListBox" /><see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</param>
      <param name="Index">The Index of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</param>
      <param name="ItemString">A <see cref="T:System.String" /> to assign to the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /> property.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String)">
      <summary>Assigns the name of a Visual Basic 6.0 resource file to the current Visual Basic 2010 project namespace.</summary>
      <param name="BaseFileName">A resource file (.res).</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String,System.String)">
      <summary>Assigns the name of a Visual Basic 6.0 resource file to a Visual Basic 2010 project namespace.</summary>
      <param name="ProjectNamespace">A <see cref="T:System.String" /> that contains the Namespace for the resource file.</param>
      <param name="BaseFileName">A resource file (.res).</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)">
      <summary>Displays a form by calling either the <see cref="M:System.Windows.Forms.Control.Show" /> or <see cref="M:System.Windows.Forms.Form.ShowDialog" /> method.</summary>
      <param name="Form">The <see cref="T:System.Windows.Forms.Form" /> to display.</param>
      <param name="Modal">Optional. A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants" /> enumeration that specifies modality.</param>
      <param name="OwnerForm">Optional. The <paramref name="owner" /> parameter of the <see cref="M:System.Windows.Forms.Form.ShowDialog" /> method.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout(System.Object[])">
      <summary>Formats strings to simulate the Visual Basic 6.0 Debug.Print functionality.</summary>
      <returns>A formatted <see cref="T:System.String" />.</returns>
      <param name="Args">An expression or list of expressions to print.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)">
      <summary>Converts a Visual Basic 6.0 ScaleHeight measurement to a pixel measurement.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 ScaleHeight. </returns>
      <param name="Height">A <see cref="T:System.Double" /> that represents the height.</param>
      <param name="ScaleHeight">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleHeight for the current ScaleMode.</param>
      <param name="OriginalHeightInPixels">An Integer that represents the height in pixels.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)">
      <summary>Converts a Visual Basic 6.0 ScaleWidth measurement to a pixel measurement.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 ScaleWidth. </returns>
      <param name="Width">A <see cref="T:System.Double" /> that represents the width.</param>
      <param name="ScaleWidth">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleWidth for the current ScaleMode.</param>
      <param name="OriginalWidthInPixels">An Integer that represents the width in pixels.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
      <summary>Converts a Visual Basic 6.0 ScaleLeft measurement to a pixel measurement.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 ScaleLeft. </returns>
      <param name="X">A <see cref="T:System.Double" /> that represents the X coordinate.</param>
      <param name="ScaleLeft">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleLeft for the current ScaleMode.</param>
      <param name="ScaleWidth">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleWidth for the current ScaleMode.</param>
      <param name="OriginalWidthInPixels">An Integer that represents the width in pixels.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
      <summary>Converts a Visual Basic 6.0 ScaleTop measurement to a pixel measurement.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 ScaleLeft. </returns>
      <param name="Y">A <see cref="T:System.Double" /> that represents the Y coordinate.</param>
      <param name="ScaleTop">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleTop for the current ScaleMode.</param>
      <param name="ScaleHeight">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleHeight for the current ScaleMode.</param>
      <param name="OriginalHeightInPixels">An Integer that represents the height in pixels.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
      <summary>Converts a Visual Basic 6.0 measurement to a pixel measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the pixel value for the specified ScaleMode.</returns>
      <param name="X">A <see cref="T:System.Double" /> that represents the X coordinate.</param>
      <param name="FromScale"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
      <summary>Converts a Visual Basic 6.0 measurement to a pixel measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the pixel value for the specified ScaleMode.</returns>
      <param name="Y">A <see cref="T:System.Double" /> that represents the Y coordinate.</param>
      <param name="FromScale">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 ScaleMode to convert from.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX">
      <summary>Gets a value that is used to convert twips to pixels based on screen settings.</summary>
      <returns>A Double that contains the conversion factor.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY">
      <summary>Gets a value that is used to convert twips to pixels based on screen settings.</summary>
      <returns>A Double that contains the conversion factor.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX(System.Double)">
      <summary>Converts an X coordinate from twips to pixels.</summary>
      <returns>A Double that contains the X coordinate expressed in pixels.</returns>
      <param name="X">A Double that contains the X coordinate to convert.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY(System.Double)">
      <summary>Converts a Y coordinate from twips to pixels.</summary>
      <returns>A Double that contains the Y coordinate expressed in pixels.</returns>
      <param name="Y">A Double that contains the X coordinate to convert.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls(System.Windows.Forms.ContainerControl)">
      <summary>Emulates the behavior of the Visual Basic 6.0 ValidateControls method.</summary>
      <param name="Form">The <see cref="T:System.Windows.Forms.ContainerControl" /> where the control is parented.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode(System.Windows.Forms.Form)">
      <summary>Displays pop-up Help for a form upgraded from Visual Basic 6.0.</summary>
      <param name="Form">A <see cref="T:System.Windows.Forms.Form" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder(System.Windows.Forms.Control,System.Int32)">
      <summary>Converts the Visual Basic ZOrder method for use in Visual Basic 2010.</summary>
      <param name="Control">A <see cref="T:System.Windows.Forms.Control" />.</param>
      <param name="Position">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants" /> enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.TabControl" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.TabControl" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.TabControl" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Deselected">
      <summary>Occurs when a tab is deselected.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Deselecting">
      <summary>Occurs before a tab is deselected, enabling a handler to cancel the tab change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.TabControl" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.DrawItem">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.TabControl" /> needs to paint each of its tabs if the <see cref="P:System.Windows.Forms.TabControl.DrawMode" /> property is set to <see cref="F:System.Windows.Forms.TabDrawMode.OwnerDrawFixed" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.GetIndex(System.Windows.Forms.TabControl)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.TabControl" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.TabControl" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.TabControl" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.TabControl" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ResetIndex(System.Windows.Forms.TabControl)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.RightToLeftLayoutChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TabControl.RightToLeftLayout" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Selected">
      <summary>Occurs when a tab is selected.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.SelectedIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TabControl.SelectedIndex" /> property has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Selecting">
      <summary>Occurs before a tab is selected, enabling a handler to cancel the tab change.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.SetIndex(System.Windows.Forms.TabControl,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.TabControl" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.TabControl" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.TabControl" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ShouldSerializeIndex(System.Windows.Forms.TabControl)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.TabControl" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.TabControl" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.TextBox" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.AcceptsTabChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property changes. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.BorderStyleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.TextBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.CausesValidationChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.TextBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.TextBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.GetIndex(System.Windows.Forms.TextBox)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.TextBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.TextBox" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.TextBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.HideSelectionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.TextBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ModifiedChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MultilineChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ReadOnlyChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ResetIndex(System.Windows.Forms.TextBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.SetIndex(System.Windows.Forms.TextBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.TextBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.TextBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.TextBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ShouldSerializeIndex(System.Windows.Forms.TextBox)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.TextBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.TextBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.TextAlignChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TextBox.TextAlign" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.Timer" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.Timer" /> control.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetIndex(System.Windows.Forms.Timer)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.Timer" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.Timer" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.Timer" /> in the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Timer" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ResetIndex(System.Windows.Forms.Timer)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.SetIndex(System.Windows.Forms.Timer,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.Timer" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Timer" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.Timer" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ShouldSerializeIndex(System.Windows.Forms.Timer)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.Timer" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.Timer" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Tick">
      <summary>Occurs when the specified timer interval has elapsed and the timer is enabled.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.ToolBar" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ToolBar.AutoSize" /> property changes. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ButtonClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolBarButton" /> on the <see cref="T:System.Windows.Forms.ToolBar" /> is clicked. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ButtonDropDown">
      <summary>Occurs when a drop-down style <see cref="T:System.Windows.Forms.ToolBarButton" /> or its down arrow is clicked. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.ToolBar" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolBar" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.GetIndex(System.Windows.Forms.ToolBar)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.ToolBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ToolBar" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ToolBar" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ToolBar" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ResetIndex(System.Windows.Forms.ToolBar)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.SetIndex(System.Windows.Forms.ToolBar,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.ToolBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.ToolBar" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ToolBar" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ShouldSerializeIndex(System.Windows.Forms.ToolBar)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.ToolBar" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ToolBar" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.ToolStrip" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ToolStrip.AutoSize" /> property changes. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.BackgroundImageLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.BeginDrag">
      <summary>Occurs when the user starts to drag the <see cref="T:System.Windows.Forms.ToolStrip" /> control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.ToolStrip" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolStrip" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolStrip" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.EndDrag">
      <summary>Occurs when the user stops dragging the <see cref="T:System.Windows.Forms.ToolStrip" /> control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.GetIndex(System.Windows.Forms.ToolStrip)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.ToolStrip" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ToolStrip" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ToolStrip" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ToolStrip" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ItemAdded">
      <summary>Occurs when a new <see cref="T:System.Windows.Forms.ToolStripItem" /> is added to the <see cref="T:System.Windows.Forms.ToolStripItemCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ItemClicked">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.ToolStripItem" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ItemRemoved">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolStripItem" /> is removed from the <see cref="T:System.Windows.Forms.ToolStripItemCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.LayoutCompleted">
      <summary>Occurs when the layout of the <see cref="T:System.Windows.Forms.ToolStrip" /> is complete.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.LayoutStyleChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ToolStrip.LayoutStyle" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.PaintGrip">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.ToolStrip" /> move handle is painted.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ResetIndex(System.Windows.Forms.ToolStrip)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Scroll">
      <summary>Occurs when the user or code scrolls through the client area.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.SetIndex(System.Windows.Forms.ToolStrip,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.ToolStrip" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.ToolStrip" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ToolStrip" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ShouldSerializeIndex(System.Windows.Forms.ToolStrip)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.ToolStrip" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ToolStrip" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.CheckedChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.CheckStateChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.DisplayStyleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ToolStripItem.DisplayStyle" /> has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.DropDownClosed">
      <summary>Occurs when the drop-down part of the <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> is no longer visible.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.DropDownItemClicked">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.ToolStripDropDown" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.DropDownOpened">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.ToolStripDropDown" /> has opened.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.DropDownOpening">
      <summary>Occurs as the <see cref="T:System.Windows.Forms.ToolStripDropDown" /> is opening. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.GetIndex(System.Windows.Forms.ToolStripMenuItem)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ToolStripMenuItem" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> in the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.OwnerChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ToolStripItem.Owner" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.Paint">
      <summary>Occurs when the item is redrawn. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.ResetIndex(System.Windows.Forms.ToolStripMenuItem)">
      <summary>Not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.SetIndex(System.Windows.Forms.ToolStripMenuItem,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ToolStripMenuItem" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.ShouldSerializeIndex(System.Windows.Forms.ToolStripMenuItem)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.TreeView" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.AfterCheck">
      <summary>Occurs after the tree node check box is selected. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.AfterCollapse">
      <summary>Occurs after the tree node is collapsed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.AfterExpand">
      <summary>Occurs after the tree node is expanded. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.AfterLabelEdit">
      <summary>Occurs when the label for an item is edited by the user. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.AfterSelect">
      <summary>Occurs after the tree node is selected.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.BeforeCheck">
      <summary>Occurs before the tree node check box is checked. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.BeforeCollapse">
      <summary>Occurs before the tree node is collapsed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.BeforeExpand">
      <summary>Occurs before the tree node is expanded. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.BeforeLabelEdit">
      <summary>Occurs before the tree node label text is edited. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.BeforeSelect">
      <summary>Occurs before the tree node is selected.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.TreeView" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.TreeView" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.TreeView" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.DrawNode">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.TreeView" /> is drawn and the <see cref="P:System.Windows.Forms.TreeView.DrawMode" /> property is set to a <see cref="T:System.Windows.Forms.TreeViewDrawMode" /> value other than Normal. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.GetIndex(System.Windows.Forms.TreeView)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.TreeView" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.TreeView" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.TreeView" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.TreeView" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ItemDrag">
      <summary>Occurs when the user starts dragging a node.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.NodeMouseClick">
      <summary>Occurs when the user clicks a <see cref="T:System.Windows.Forms.TreeNode" /> with the mouse. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.NodeMouseDoubleClick">
      <summary>Occurs when the user double-clicks a <see cref="T:System.Windows.Forms.TreeNode" /> with the mouse. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.NodeMouseHover">
      <summary>Occurs when the mouse hovers over a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ResetIndex(System.Windows.Forms.TreeView)">
      <summary>Not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.RightToLeftLayoutChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TreeView.RightToLeftLayout" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.SetIndex(System.Windows.Forms.TreeView,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.TreeView" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.TreeView" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.TreeView" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ShouldSerializeIndex(System.Windows.Forms.TreeView)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.TreeView" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.TreeView" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.VScrollBar" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.VScrollBar" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.GetIndex(System.Windows.Forms.VScrollBar)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.VScrollBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VScrollBar" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="o">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.HelpRequested">
      <summary>Occurs when the user requests Help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.HookUpControlEvents(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.VScrollBar" /> control.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VScrollBar" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ResetIndex(System.Windows.Forms.VScrollBar)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.Scroll">
      <summary>Occurs when the user scrolls the <see cref="T:System.Windows.Forms.VScrollBar" /> control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.SetIndex(System.Windows.Forms.VScrollBar,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.VScrollBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.VScrollBar" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.VScrollBar" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ShouldSerializeIndex(System.Windows.Forms.VScrollBar)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.VScrollBar" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.VScrollBar" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ValueChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ScrollBar.Value" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.WebBrowser" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.WebBrowser" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.DocumentCompleted">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.WebBrowser" /> control finishes loading a document.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.FileDownload">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.WebBrowser" /> control downloads a file.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.GetIndex(System.Windows.Forms.WebBrowser)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.WebBrowser" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.WebBrowser" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.WebBrowser" /> in the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.WebBrowser" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.Navigated">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.WebBrowser" /> control has navigated to a new document and has begun loading it. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.Navigating">
      <summary>Occurs before the <see cref="T:System.Windows.Forms.WebBrowser" /> control navigates to a new document.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.NewWindow">
      <summary>Occurs before a new browser window is opened.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.ProgressChanged">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.WebBrowser" /> control has updated information about the download progress of a document that it is navigating to. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.ResetIndex(System.Windows.Forms.WebBrowser)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.SetIndex(System.Windows.Forms.WebBrowser,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.WebBrowser" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.WebBrowser" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.WebBrowser" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.ShouldSerializeIndex(System.Windows.Forms.WebBrowser)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.WebBrowser" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.WebBrowser" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass">
      <summary>Enables upgraded Visual Basic 6.0 WebClass projects to run in ASP.NET.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClass.#ctor(System.String,System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass" /> class.</summary>
      <param name="UserWebClassName">A <see cref="T:System.String" /> that contains the Name property for the Visual Basic 6.0 WebClass object.</param>
      <param name="WebClassFileName">A <see cref="T:System.String" /> that contains the file name for the Visual Basic 6.0 WebClass object.</param>
      <param name="ContainingClass">A <see cref="T:System.String" /> that contains the Application property for the Visual Basic 6.0 WebClass object.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.WebClass.Name">
      <summary>Gets the name that is used in code to identify a WebClass object. </summary>
      <returns>A <see cref="T:System.String" /> that contains the name for the WebClass object.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.WebClass.NextItem">
      <summary>Gets or sets another <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> object in the current <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass" /> object. </summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClass.ProcessEvents(System.Web.HttpRequest)">
      <summary>Renders a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass" />.</summary>
      <param name="Request">An <see cref="T:System.Web.HttpRequest" /> object.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.WebClass.UrlData">
      <summary>Gets or sets a parameter that is appended to the end of any URL that is generated by using the <see cref="Overload:Microsoft.VisualBasic.Compatibility.VB6.WebClass.URLFor" /> method.</summary>
      <returns>A <see cref="T:System.String" /> that contains the parameter that will be appended.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClass.URLFor(Microsoft.VisualBasic.Compatibility.VB6.WebItem,System.String)">
      <summary>Specifies the URL that the system must have to reference a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass" /><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> in the browser.</summary>
      <returns>A <see cref="T:System.String" /> that contains the URL.</returns>
      <param name="obj">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> object for which you want to generate a URL and raise an event.</param>
      <param name="EventName">Optional. A <see cref="T:System.String" /> that refers to an event in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClass.URLFor(System.String,System.String)">
      <summary>Specifies the URL that the system must have to reference a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass" /><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> in the browser.</summary>
      <returns>A <see cref="T:System.String" /> that contains the URL.</returns>
      <param name="objName">A <see cref="T:System.String" /> that contains the name of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> object for which you want to generate a URL and raise an event.</param>
      <param name="EventName">Optional. A <see cref="T:System.String" /> that refers to an event in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" />.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassContainingClassNotOptional">
      <summary>Raises an <see cref="T:System.Exception" /> if the ContainingClass value is missing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClassContainingClassNotOptional.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassContainingClassNotOptional" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassCouldNotFindEvent">
      <summary>Raises an <see cref="T:System.Exception" /> for a missing event parameter in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClassCouldNotFindEvent.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassCouldNotFindEvent" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClassCouldNotFindEvent.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassCouldNotFindEvent" /> class.</summary>
      <param name="eventName">A <see cref="T:System.String" /> that contains the name of the missing event parameter.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassNextItemCannotBeCurrentWebItem">
      <summary>Raises an <see cref="T:System.Exception" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClassNextItemCannotBeCurrentWebItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassNextItemCannotBeCurrentWebItem" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassNextItemRespondNotFound">
      <summary>Raises an <see cref="T:System.Exception" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClassNextItemRespondNotFound.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassNextItemRespondNotFound" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassUserWebClassNameNotOptional">
      <summary>Raises an <see cref="T:System.Exception" /> if the UserWebClassName value is missing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClassUserWebClassNameNotOptional.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassUserWebClassNameNotOptional" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassWebClassFileNameNotOptional">
      <summary>Raises an <see cref="T:System.Exception" /> if the WebClassFileName value is missing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClassWebClassFileNameNotOptional.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassWebClassFileNameNotOptional" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassWebItemNotValid">
      <summary>Raises an <see cref="T:System.Exception" /> if the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> value is not valid.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClassWebItemNotValid.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassWebItemNotValid" /> class.</summary>
      <param name="itemName">A String that represents the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" />.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem">
      <summary>Enables upgraded Visual Basic 6.0 WebClass projects to run in ASP.NET.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItem.#ctor(System.String,Microsoft.VisualBasic.Compatibility.VB6.WebClass,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> class.</summary>
      <param name="Name">A <see cref="T:System.String" /> that contains the Name property for the Visual Basic 6.0 WebClass object.</param>
      <param name="AssociatedWebClass">The <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass" /> object that contains this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" />.</param>
      <param name="HtmlTemplateFilename">Optional. The file name of a Visual Basic 6.0 Template that was associated with the Visual Basic 6.0 WebItem.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.WebItem.Name">
      <summary>Gets the name that is used in code to identify a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name for the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.WebItem.ReScanReplacements">
      <summary>Gets or sets a value that determines whether to rescan for tokens that are contained within replacement text. </summary>
      <returns>true if the text should be rescanned; otherwise false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.WebItem.TagPrefix">
      <summary>Gets or sets the string that is used to prefix replacement tag names in an HTML template.</summary>
      <returns>A <see cref="T:System.String" /> that identifies the TagPrefix sequence used to recognize replacement tags in an HTML template.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItem.WriteTemplate(System.Web.HttpResponse,System.String)">
      <summary>Processes an HTML template attached to a WebItem object and returns it to the browser.</summary>
      <param name="Response">A <see cref="T:System.Web.HttpResponse" /> object.</param>
      <param name="HtmlTemplateFilename">Optional. The file name of a Visual Basic 6.0 Template that was associated with the Visual Basic 6.0 WebItem.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemAssociatedWebClassNotOptional">
      <summary>Raises an <see cref="T:System.Exception" /> if the AssociatedWebClass value for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> is missing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItemAssociatedWebClassNotOptional.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemAssociatedWebClassNotOptional" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemClosingTagNotFound">
      <summary>Raises an <see cref="T:System.Exception" /> if the closing tag for a template associated with a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> is missing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItemClosingTagNotFound.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemClosingTagNotFound" /> class.</summary>
      <param name="TagName">A <see cref="T:System.String" /> that contains the name of the tag.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemCouldNotLoadEmbeddedResource">
      <summary>Raises an <see cref="T:System.Exception" /> when an embedded resource specified in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> is missing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItemCouldNotLoadEmbeddedResource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemCouldNotLoadEmbeddedResource" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemCouldNotLoadTemplateFile">
      <summary>Raises an <see cref="T:System.Exception" /> if a template file for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> is missing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItemCouldNotLoadTemplateFile.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemCouldNotLoadTemplateFile" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemNameNotOptional">
      <summary>Raises an <see cref="T:System.Exception" /> if the Name value for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> is missing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItemNameNotOptional.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemNameNotOptional" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemNoTemplateSpecified">
      <summary>Raises an <see cref="T:System.Exception" /> if the Template value for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> is missing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItemNoTemplateSpecified.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemNoTemplateSpecified" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemTooManyNestedTags">
      <summary>Raises an <see cref="T:System.Exception" /> if the template for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> contains too many nested tags.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItemTooManyNestedTags.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemTooManyNestedTags" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemUnexpectedErrorReadingTemplateFile">
      <summary>Raises an <see cref="T:System.Exception" /> if the template for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> cannot be opened or read.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItemUnexpectedErrorReadingTemplateFile.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemUnexpectedErrorReadingTemplateFile" /> class.</summary>
      <param name="innerMessage">A <see cref="T:System.String" /> that contains the error message.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants">
      <summary>Provides constants for compatibility with the Visual Basic 6.0 ZOrder method.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants.BringToFront">
      <summary>Equivalent to the Visual Basic 6.0 constant vbBringToFront.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants.SendToBack">
      <summary>Equivalent to the Visual Basic 6.0 constant vbSend ToBack.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\PresentationCFFRasterizer.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>PresentationCFFRasterizer</name>
	</assembly>
	<members />
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\PresentationBuildTasks.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PresentationBuildTasks</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Build.Tasks.Windows.FileClassifier">
      <summary>Implements the FileClassifer task. Use the FileClassifer element in your project file to create and execute this task. For usage and parameter information, see FileClassifier Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Windows.FileClassifier.#ctor"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.FileClassifier.CLREmbeddedResource"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.FileClassifier.CLRResourceFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.FileClassifier.CLRSatelliteEmbeddedResource"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.FileClassifier.Culture"></member>
    <member name="M:Microsoft.Build.Tasks.Windows.FileClassifier.Execute"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.FileClassifier.MainEmbeddedFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.FileClassifier.OutputType"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.FileClassifier.SatelliteEmbeddedFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.FileClassifier.SourceFiles"></member>
    <member name="T:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly">
      <summary>Implements the GenerateTemporaryTargetAssembly task. Use the GenerateTemporaryTargetAssembly element in your project file to create and execute this task. For usage and parameter information, see GenerateTemporaryTargetAssembly Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.#ctor"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.AssemblyName"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.CompileTargetName"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.CompileTypeName"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.CurrentProject"></member>
    <member name="M:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.Execute"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.GeneratedCodeFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.IntermediateOutputPath"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.MSBuildBinPath"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.ReferencePath"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.ReferencePathTypeName"></member>
    <member name="T:Microsoft.Build.Tasks.Windows.GetWinFXPath">
      <summary>Implements the GetWinFXPath task. Use the GetWinFXPath element in your project file to create and execute this task. For usage and parameter information, see GetWinFXPath Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Windows.GetWinFXPath.#ctor"></member>
    <member name="M:Microsoft.Build.Tasks.Windows.GetWinFXPath.Execute"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GetWinFXPath.WinFXNativePath"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GetWinFXPath.WinFXPath"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GetWinFXPath.WinFXWowPath"></member>
    <member name="T:Microsoft.Build.Tasks.Windows.MarkupCompilePass1">
      <summary>Implements the MarkupCompilePass1 task. Use the MarkupCompilePass1 element in your project file to create and execute this task. For usage and parameter information, see MarkupCompilePass1 Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.#ctor"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AllGeneratedFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AlwaysCompileMarkupFilesInSeparateDomain"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ApplicationMarkup"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssembliesGeneratedDuringBuild"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyName"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyPublicKeyToken"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyVersion"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ContentFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.DefineConstants"></member>
    <member name="M:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Execute"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ExtraBuildControlFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedBamlFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedCodeFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedLocalizationFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.HostInBrowser"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.KnownReferencePaths"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Language"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LanguageSourceExtension"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LocalizationDirectivesToLocFile"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputPath"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputType"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.PageMarkup"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.References"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForMainAssembly"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForSatelliteAssembly"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RootNamespace"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SourceCodeFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SplashScreen">
      <summary>The task that corresponds to the splash screen image to be displayed before application initialization.</summary>
      <returns>The task that corresponds to the splash screen image.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.UICulture"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.XamlDebuggingInformation"></member>
    <member name="T:Microsoft.Build.Tasks.Windows.MarkupCompilePass2">
      <summary>Implements the MarkupCompilePass2 task. Use the MarkupCompilePass2 element in your project file to create and execute this task. For usage and parameter information, see MarkupCompilePass2 Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.#ctor"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AlwaysCompileMarkupFilesInSeparateDomain"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssembliesGeneratedDuringBuild"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssemblyName"></member>
    <member name="M:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Execute"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.GeneratedBaml"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.KnownReferencePaths"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Language"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.LocalizationDirectivesToLocFile"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputPath"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputType"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.References"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.RootNamespace"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.XamlDebuggingInformation"></member>
    <member name="T:Microsoft.Build.Tasks.Windows.MergeLocalizationDirectives">
      <summary>Implements the MergeLocalizationDirectives task. Use the MergeLocalizationDirectives element in your project file to create and execute this task. For usage and parameter information, see MergeLocalizationDirectives Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Windows.MergeLocalizationDirectives.#ctor"></member>
    <member name="M:Microsoft.Build.Tasks.Windows.MergeLocalizationDirectives.Execute"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MergeLocalizationDirectives.GeneratedLocalizationFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MergeLocalizationDirectives.OutputFile"></member>
    <member name="T:Microsoft.Build.Tasks.Windows.ResourcesGenerator">
      <summary>Implements the ResourcesGenerator task. Use the ResourcesGenerator element in your project file to create and execute this task. For usage and parameter information, see ResourcesGenerator Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Windows.ResourcesGenerator.#ctor"></member>
    <member name="M:Microsoft.Build.Tasks.Windows.ResourcesGenerator.Execute"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.ResourcesGenerator.OutputPath"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.ResourcesGenerator.OutputResourcesFile"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.ResourcesGenerator.ResourceFiles"></member>
    <member name="T:Microsoft.Build.Tasks.Windows.UidManager">
      <summary>Implements the UidManager task. Use the UidManager element in your project file to create and execute this task. For usage and parameter information, see UidManager Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Windows.UidManager.#ctor"></member>
    <member name="M:Microsoft.Build.Tasks.Windows.UidManager.Execute"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.UidManager.IntermediateDirectory"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.UidManager.MarkupFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.UidManager.Task"></member>
    <member name="T:Microsoft.Build.Tasks.Windows.UpdateManifestForBrowserApplication">
      <summary>Implements the UpdateManifestForBrowserApplication task. Use the UpdateManifestForBrowserApplication element in your project file to create and execute this task. For usage and parameter information, see UpdateManifestForBrowserApplication Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Windows.UpdateManifestForBrowserApplication.#ctor"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.UpdateManifestForBrowserApplication.ApplicationManifest"></member>
    <member name="M:Microsoft.Build.Tasks.Windows.UpdateManifestForBrowserApplication.Execute"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.UpdateManifestForBrowserApplication.HostInBrowser"></member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\PresentationFramework.Aero.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PresentationFramework.Aero</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Windows.Themes.ButtonChrome">
      <summary>Creates the theme-specific look for Microsoft .NET Framework <see cref="T:System.Windows.Controls.Button" /> elements.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.ButtonChrome.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.Themes.BulletChrome" /> class.</summary>
    </member>
    <member name="P:Microsoft.Windows.Themes.ButtonChrome.Background">
      <summary>Gets or sets the brush used to fill the background of the <see cref="T:System.Windows.Controls.Button" />.  </summary>
      <returns>The brush used to fill the background of the <see cref="T:System.Windows.Controls.Button" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ButtonChrome.BackgroundProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.Background" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.Background" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ButtonChrome.BorderBrush">
      <summary>Gets or sets the brush used to draw the outer border of the <see cref="T:System.Windows.Controls.Button" />.  </summary>
      <returns>The brush used to draw the outer border of the <see cref="T:System.Windows.Controls.Button" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ButtonChrome.BorderBrushProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.BorderBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.BorderBrush" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ButtonChrome.RenderDefaulted">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.Button" /> has the appearance of the default button on the form.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Button" /> has the appearance of the default button; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ButtonChrome.RenderDefaultedProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.RenderDefaulted" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.RenderDefaulted" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ButtonChrome.RenderMouseOver">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.Button" /> appears as if the mouse is over it.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Button" /> appears as if the mouse is over it; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ButtonChrome.RenderMouseOverProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.RenderMouseOver" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.RenderMouseOver" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ButtonChrome.RenderPressed">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.Button" /> appears pressed.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Button" /> appears pressed; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ButtonChrome.RenderPressedProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.RenderPressed" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.RenderPressed" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ButtonChrome.RoundCorners">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.Button" /> has round corners.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Button" /> has round corners; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ButtonChrome.RoundCornersProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.RoundCorners" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.RoundCorners" /> dependency property.</returns>
    </member>
    <member name="T:Microsoft.Windows.Themes.DataGridHeaderBorder">
      <summary>Creates the theme specific-look for headers in .NET Framework version 4 <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.DataGridHeaderBorder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.Themes.DataGridHeaderBorder" /> class. </summary>
    </member>
    <member name="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsClickable">
      <summary>Gets or sets a value that indicates whether the header is clickable.</summary>
      <returns>true if the header clickable; otherwise, false. The registered default is true. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.DataGridHeaderBorder.IsClickableProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsClickable" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsClickable" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsHovered">
      <summary>Gets or sets a value that indicates whether the header appears as if the mouse pointer is moved over it.</summary>
      <returns>true if the header appears as if the mouse pointer is moved over it; otherwise, false. The registered default is false. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.DataGridHeaderBorder.IsHoveredProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsHovered" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsHovered" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsPressed">
      <summary>Gets or sets a value that indicates whether the header appears pressed.</summary>
      <returns>true if the header appears pressed; otherwise, false. The registered default is false. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.DataGridHeaderBorder.IsPressedProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsPressed" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsPressed" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsSelected">
      <summary>Gets or sets a value that indicates whether the header appears selected.</summary>
      <returns>true if the header appears selected; otherwise, false. The registered default is false. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.DataGridHeaderBorder.IsSelectedProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsSelected" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsSelected" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.DataGridHeaderBorder.Orientation">
      <summary>Gets or sets whether the header renders in the vertical direction, as a column header, or horizontal direction, as a row header.</summary>
      <returns>One of the enumeration values that indicates which direction the header renders. The registered default is <see cref="F:System.Windows.Controls.Orientation.Vertical" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.DataGridHeaderBorder.OrientationProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.Orientation" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.Orientation" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SeparatorBrush">
      <summary>Gets or sets the brush that draws the separation between headers.</summary>
      <returns>The brush that draws the separation between headers. The registered default is null. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.DataGridHeaderBorder.SeparatorBrushProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SeparatorBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SeparatorBrush" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SeparatorVisibility">
      <summary>Gets or sets the value that indicates whether the separation between headers is visible.</summary>
      <returns>One of the enumeration values that indicates whether the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SeparatorBrush" /> is visible. The registered default is <see cref="F:System.Windows.Visibility.Visible" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.DataGridHeaderBorder.SeparatorVisibilityProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SeparatorVisibility" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SeparatorVisibility" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SortDirection">
      <summary>Gets or sets the header sort direction.</summary>
      <returns>One of the enumeration values that indicates which direction the column is sorted. The registered default is null. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.DataGridHeaderBorder.SortDirectionProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SortDirection" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SortDirection" /> dependency property.</returns>
    </member>
    <member name="T:Microsoft.Windows.Themes.ListBoxChrome">
      <summary>Creates the theme-specific look for Microsoft .NET Framework <see cref="T:System.Windows.Controls.ListBox" /> elements.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.ListBoxChrome.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.Themes.ListBoxChrome" /> class.</summary>
    </member>
    <member name="P:Microsoft.Windows.Themes.ListBoxChrome.Background">
      <summary>Gets or sets the brush used to fill the background of the <see cref="T:System.Windows.Controls.ListBox" />.  </summary>
      <returns>The brush used to fill the background of the <see cref="T:System.Windows.Controls.ListBox" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ListBoxChrome.BackgroundProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.Background" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.Background" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ListBoxChrome.BorderBrush">
      <summary>Gets or sets the brush used to draw the outer border of the <see cref="T:System.Windows.Controls.ListBox" />.  </summary>
      <returns>The brush used to draw the outer border of the <see cref="T:System.Windows.Controls.ListBox" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ListBoxChrome.BorderBrushProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.BorderBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.BorderBrush" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ListBoxChrome.BorderThickness">
      <summary>Gets or sets the thickness of the border of the <see cref="T:System.Windows.Controls.ListBox" />.  </summary>
      <returns>The thickness of the border.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ListBoxChrome.BorderThicknessProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.BorderThickness" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.BorderThickness" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ListBoxChrome.RenderFocused">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.ListBox" /> appears as if it has keyboard focus.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.ListBox" /> appears as if it has keyboard focus; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ListBoxChrome.RenderFocusedProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.RenderFocused" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.RenderFocused" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ListBoxChrome.RenderMouseOver">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.ListBox" /> appears as if the mouse is over it.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.ListBox" /> appears as if the mouse is over it; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ListBoxChrome.RenderMouseOverProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.RenderMouseOver" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.RenderMouseOver" /> dependency property.</returns>
    </member>
    <member name="T:Microsoft.Windows.Themes.PlatformCulture">
      <summary>Provides culture-specific information used by the Microsoft .NET Framework system themes.</summary>
    </member>
    <member name="P:Microsoft.Windows.Themes.PlatformCulture.FlowDirection">
      <summary>Gets a value that specifies whether the primary text advance direction shall be left-to-right, right-to-left, or top-to-bottom.</summary>
      <returns>One of the enumeration values.</returns>
    </member>
    <member name="T:Microsoft.Windows.Themes.ProgressBarHighlightConverter">
      <summary>Creates a <see cref="T:System.Windows.Media.DrawingBrush" /> used to draw the highlighting for the <see cref="T:System.Windows.Controls.ProgressBar" />.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.ProgressBarHighlightConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.Themes.ProgressBarHighlightConverter" /> class.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.ProgressBarHighlightConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Creates the <see cref="T:System.Windows.Media.DrawingBrush" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.DrawingBrush" />. </returns>
      <param name="values">The <see cref="T:System.Windows.Media.Brush" /> used for the <see cref="P:System.Windows.Controls.Control.Foreground" /> of the <see cref="T:System.Windows.Controls.ProgressBar" />, the <see cref="T:System.Double" /> defining the <see cref="P:System.Windows.FrameworkElement.Width" />, and the <see cref="T:System.Double" /> defining the <see cref="P:System.Windows.FrameworkElement.Height" />. </param>
      <param name="targetType">This parameter is not used.</param>
      <param name="parameter">This parameter is not used.</param>
      <param name="culture">This parameter is not used.</param>
    </member>
    <member name="M:Microsoft.Windows.Themes.ProgressBarHighlightConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented.</summary>
      <returns>null.</returns>
      <param name="value">This parameter is not used.</param>
      <param name="targetTypes">This parameter is not used.</param>
      <param name="parameter">This parameter is not used.</param>
      <param name="culture">This parameter is not used.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Microsoft.VisualBasic.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualBasic</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.AppWinStyle">
      <summary>Indicates the window style to use for the invoked program when calling the Shell function.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.Hide">
      <summary>Window is hidden and focus is passed to the hidden window. This member is equivalent to the Visual Basic constant vbHide.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalFocus">
      <summary>Window has focus and is restored to its original size and position. This member is equivalent to the Visual Basic constant vbNormalFocus.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedFocus">
      <summary>Window is displayed as an icon with focus. This member is equivalent to the Visual Basic constant vbMinimizedFocus.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MaximizedFocus">
      <summary>Window is maximized with focus. This member is equivalent to the Visual Basic constant vbMaximizedFocus.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalNoFocus">
      <summary>Window is restored to its most recent size and position. The currently active window remains active. This member is equivalent to the Visual Basic constant vbNormalNoFocus.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedNoFocus">
      <summary>Window is displayed as an icon. The currently active window remains active. This member is equivalent to the Visual Basic constant vbMinimizedNoFocus.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.AudioPlayMode">
      <summary>Indicates how to play sounds when calling audio methods.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.WaitToComplete">
      <summary>Causes the My.Computer.Audio.Play method to play the sound, and waits until it completes before calling code continues.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.Background">
      <summary>Causes the My.Computer.Audio.Play method to play the sound in the background. The calling code continues to execute.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.BackgroundLoop">
      <summary>Causes the My.Computer.Audio.Play method to play the sound in the background until the <see cref="M:Microsoft.VisualBasic.Devices.Audio.Stop" /> method is called. The calling code continues to execute.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CallType">
      <summary>Indicates the type of procedure being invoked when calling the CallByName function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Method">
      <summary>A method is being invoked.  This member is equivalent to the Visual Basic constant vbMethod.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Get">
      <summary>A property value is being retrieved.  This member is equivalent to the Visual Basic constant vbGet.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Let">
      <summary>An Object property value is being determined. This member is equivalent to the Visual Basic constant vbLet.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Set">
      <summary>A property value is being determined.  This member is equivalent to the Visual Basic constant vbSet.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Collection">
      <summary>A Visual Basic Collection is an ordered set of items that can be referred to as a unit.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.#ctor">
      <summary>Creates and returns a new Visual Basic <see cref="T:Microsoft.VisualBasic.Collection" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
      <summary>Adds an element to a Collection object.</summary>
      <param name="Item">Required. An object of any type that specifies the element to add to the collection.</param>
      <param name="Key">Optional. A unique String expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.</param>
      <param name="Before">Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection before the element identified by the <paramref name="Before" /> argument. If <paramref name="Before" /> is a numeric expression, it must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property. If <paramref name="Before" /> is a String expression, it must correspond to the key string specified when the element being referred to was added to the collection. You cannot specify both <paramref name="Before" /> and <paramref name="After" />.</param>
      <param name="After">Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection after the element identified by the <paramref name="After" /> argument. If <paramref name="After" /> is a numeric expression, it must be a number from 1 through the value of the collection's Count property. If <paramref name="After" /> is a String expression, it must correspond to the key string specified when the element referred to was added to the collection. You cannot specify both <paramref name="Before" /> and <paramref name="After" />.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Clear">
      <summary>Deletes all elements of a Visual Basic Collection object.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
      <summary>Returns a Boolean value indicating whether a Visual Basic Collection object contains an element with a specific key.</summary>
      <returns>Returns a Boolean value indicating whether a Visual Basic Collection object contains an element with a specific key.</returns>
      <param name="Key">Required. A String expression that specifies the key for which to search the elements of the collection.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Count">
      <summary>Returns an Integer containing the number of elements in a collection. Read-only.</summary>
      <returns>Returns an Integer containing the number of elements in a collection. Read-only.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.GetEnumerator">
      <summary>Returns a reference to an enumerator object, which is used to iterate over a <see cref="T:Microsoft.VisualBasic.Collection" /> object.</summary>
      <returns>Returns a reference to an enumerator object, which is used to iterate over a <see cref="T:Microsoft.VisualBasic.Collection" /> object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Returns the data needed to serialize the <see cref="T:Microsoft.VisualBasic.Collection" /> object. Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:Microsoft.VisualBasic.Collection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index. Implements the <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:Microsoft.VisualBasic.Collection" /> object. The <see cref="T:System.Array" /> must have zero-based indexing. </param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or- The number of elements in the source <see cref="T:Microsoft.VisualBasic.Collection" /> object is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:Microsoft.VisualBasic.Collection" /> object cannot be cast automatically to the type of the destination <paramref name="array" />. </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#ICollection#Count">
      <summary>Gets the number of items in this collection. Implements the <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <returns>The number of items in this collection.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection. Implements the <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:Microsoft.VisualBasic.Collection" /> object is synchronized (thread safe). Implements the <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <returns>Returns True if access to the <see cref="T:Microsoft.VisualBasic.Collection" /> object is synchronized (thread safe); otherwise, False.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:Microsoft.VisualBasic.Collection" /> object. Implements the <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Add(System.Object)">
      <summary>Adds an item to the <see cref="T:Microsoft.VisualBasic.Collection" /> object. Implements the <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.-or- The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size. </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Clear">
      <summary>Removes all items from the <see cref="T:Microsoft.VisualBasic.Collection" /> object. Implements the <see cref="T:System.Collections.IList" /> interface.</summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList" /> is read-only. </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the <see cref="T:Microsoft.VisualBasic.Collection" /> object contains a specific value. Implements the <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>Returns True if the <see cref="T:System.Object" /> is found in the <see cref="T:Microsoft.VisualBasic.Collection" /> object; otherwise, False.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specific item in the <see cref="T:Microsoft.VisualBasic.Collection" /> object. Implements the <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>The index of <paramref name="value" /> if found in the collection; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item to the <see cref="T:Microsoft.VisualBasic.Collection" /> object at the specified index. Implements the <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted. </param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.-or- The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size. </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="value" /> is null reference in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#IList#IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size. Implements the <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>Returns True if the <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size; otherwise, False.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#IList#IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only. Implements the <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>Returns True if the <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only; otherwise, False.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the element at the specified index. Implements the <see cref="T:System.Collections.IList" /> interface</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </exception>
      <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only. </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:Microsoft.VisualBasic.Collection" /> object. Implements the <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.-or- The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size. </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:Microsoft.VisualBasic.Collection" /> object item at the specified index. Implements the <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="index">The zero-based index of the item to remove. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.-or- The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size. </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
      <summary>Returns a specific element of a Collection object either by position or by key. Read-only.</summary>
      <returns>Returns a specific element of a Collection object either by position or by key. Read-only.</returns>
      <param name="Index">(A) A numeric expression that specifies the position of an element of the collection. <paramref name="Index" /> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property. Or (B) An Object expression that specifies the position or key string of an element of the collection.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
      <summary>Returns a specific element of a Collection object either by position or by key. Read-only.</summary>
      <returns>Returns a specific element of a Collection object either by position or by key. Read-only.</returns>
      <param name="Index">(A) A numeric expression that specifies the position of an element of the collection. <paramref name="Index" /> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property. Or (B) An Object expression that specifies the position or key string of an element of the collection.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.String)">
      <summary>Returns a specific element of a Collection object either by position or by key. Read-only.</summary>
      <returns>Returns a specific element of a Collection object either by position or by key. Read-only.</returns>
      <param name="Key">A unique String expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. <paramref name="Key" /> must correspond to the <paramref name="Key" /> argument specified when the element was added to the collection.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>Runs after the entire <see cref="T:Microsoft.VisualBasic.Collection" /> object graph has been deserialized. Implements the <see cref="T:System.Runtime.Serialization.IDeserializationCallback" /> interface.</summary>
      <param name="sender">The object that initiated the callback. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
      <summary>Removes an element from a Collection object.</summary>
      <param name="Index">A numeric expression that specifies the position of an element of the collection. <paramref name="Index" /> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
      <summary>Removes an element from a Collection object.</summary>
      <param name="Key">A unique String expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. <paramref name="Key" /> must correspond to the <paramref name="Key" /> argument specified when the element was added to the collection.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ComClassAttribute">
      <summary>The ComClassAttribute attribute instructs the compiler to add metadata that allows a class to be exposed as a COM object.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor">
      <summary>Initializes a new instance of the ComClassAttribute class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the ComClassAttribute class.</summary>
      <param name="_ClassID">Initializes the value of the ClassID property that is used to uniquely identify a class.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the ComClassAttribute class.</summary>
      <param name="_ClassID">Initializes the value of the ClassID property that is used to uniquely identify a class.</param>
      <param name="_InterfaceID">Initializes the value of the InterfaceID property that is used to uniquely identify an interface.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the ComClassAttribute class.</summary>
      <param name="_ClassID">Initializes the value of the ClassID property that is used to uniquely identify a class.</param>
      <param name="_InterfaceID">Initializes the value of the InterfaceID property that is used to uniquely identify an interface.</param>
      <param name="_EventId">Initializes the value of the EventID property that is used to uniquely identify an event.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.ClassID">
      <summary>Gets a class ID used to uniquely identify a class.</summary>
      <returns>Read-only. A string that can be used by the compiler to uniquely identify the class when a COM object is created.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.EventID">
      <summary>Gets an event ID used to uniquely identify an event.</summary>
      <returns>Read only. A string that can be used by the compiler to uniquely identify an event for the class when a COM object is created.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID">
      <summary>Gets an interface ID used to uniquely identify an interface.</summary>
      <returns>Read-only. A string that can be used by the compiler to uniquely identify an interface for the class when a COM object is created.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows">
      <summary>Indicates that the COM interface name shadows another member of the class or base class.</summary>
      <returns>A Boolean value that indicates that the COM interface name shadows another member of the class or base class.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.CompareMethod">
      <summary>Indicates how to compare strings when calling comparison functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Binary">
      <summary>Performs a binary comparison. This member is equivalent to the Visual Basic constant vbBinaryCompare.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Text">
      <summary>Performs a textual comparison. This member is equivalent to the Visual Basic constant vbTextCompare.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Constants">
      <summary>The Constants module contains miscellaneous constants. These constants can be used anywhere in your code.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbort">
      <summary>Indicates that the Abort button was clicked in a message box. Returned by the MsgBox function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore">
      <summary>Indicates that the Abort, Retry, and Ignore buttons will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbApplicationModal">
      <summary>Indicates that the message box will be displayed as a modal dialog box when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArchive">
      <summary>Indicates that the file has changed since the last backup operation for file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArray">
      <summary>Indicates that the type of a variant object is an array. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBack">
      <summary>Represents a backspace character for print and display functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBinaryCompare">
      <summary>Specifies that a binary comparison should be performed when comparison functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBoolean">
      <summary>Indicates that the type of a variant object is Boolean. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbByte">
      <summary>Indicates that the type of a variant object is Byte. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCancel">
      <summary>Indicates that the Cancel button was clicked in a message box. Returned by the MsgBox function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCr">
      <summary>Represents a carriage-return character for print and display functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCritical">
      <summary>Indicates that the critical message icon will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCrLf">
      <summary>Represents a carriage-return character combined with a linefeed character for print and display functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCurrency">
      <summary>Indicates that the type of a variant object is Currency. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDate">
      <summary>Indicates that the type of a variant object is Date. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDecimal">
      <summary>Indicates that the type of a variant object is Decimal. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton1">
      <summary>Indicates that the leftmost button is selected as the default button when the message box appears.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton2">
      <summary>Indicates that the second button from the left is selected as the default button when the message box appears.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton3">
      <summary>Indicates that the third button from the left is selected as the default button when the message box appears.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDirectory">
      <summary>Indicates that the file is a directory or folder for file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDouble">
      <summary>Indicates that the type of a variant object is Double. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbEmpty">
      <summary>Indicates that the type of a variant object is Empty. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbExclamation">
      <summary>Indicates that the exclamation icon will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFalse">
      <summary>Indicates that a Boolean value of False should be used when number-formatting functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFourDays">
      <summary>Indicates that the first week of the year that has at least four days should be used when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek">
      <summary>Indicates that the first full week of the year should be used when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstJan1">
      <summary>Indicates that the week of the year in which January 1 occurs should be used when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFormFeed">
      <summary>Represents a form-feed character for print functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFriday">
      <summary>Specifies that Friday should be used as the first day of the week when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGeneralDate">
      <summary>Indicates that the general date format for the current culture should be used when the FormatDateTime function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGet">
      <summary>Specifies that a property value should be retrieved when the CallByName function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHidden">
      <summary>Indicates that the file is a hidden file for file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHide">
      <summary>Indicates that the window style is hidden for the invoked program when the Shell function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHiragana">
      <summary>Indicates Hiragana characters should be converted to Katakana characters when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbIgnore">
      <summary>Indicates that the Ignore button was clicked in a message box. Returned by the MsgBox function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInformation">
      <summary>Indicates that the information icon will display when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInteger">
      <summary>Indicates that the type of a variant object is Integer. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbKatakana">
      <summary>Indicates that Katakana characters should be converted to Hiragana characters when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLet">
      <summary>Indicates that a property value should be set to an object instance when the CallByName function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLf">
      <summary>Represents a linefeed character for print and display functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing">
      <summary>Indicates that characters should be converted to use linguistic rules for casing instead of file system rules for casing to when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLong">
      <summary>Indicates the type of a variant object is Long. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongDate">
      <summary>Indicates that the long date format for the current culture should be used when the FormatDateTime function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongTime">
      <summary>Indicates that the long time format for the current culture should be used when the FormatDateTime function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLowerCase">
      <summary>Indicates that characters should be converted to lowercase when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus">
      <summary>Indicates that the window style is maximized with focus for the invoked program when the Shell function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMethod">
      <summary>Specifies that a method should be called when the CallByName function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus">
      <summary>Indicates that the window style is minimized with focus for the invoked program when the Shell function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus">
      <summary>Indicates that the window style is minimized without focus for the invoked program when the Shell function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMonday">
      <summary>Specifies that Monday should be used as the first day of the week when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp">
      <summary>Indicates that the Help button will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight">
      <summary>Indicates that text will be right-aligned when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading">
      <summary>Indicates that right-to-left reading text (Hebrew and Arabic systems) will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground">
      <summary>Indicates that the message box will display in the foreground when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNarrow">
      <summary>Indicates that wide (double-byte) characters should be converted to narrow (single-byte) characters when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNewLine">
      <summary>Represents a newline character for print and display functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNo">
      <summary>Indicates that the No button was clicked in a message box. Returned by the MsgBox function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormal">
      <summary>Indicates that the file is a normal file for file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalFocus">
      <summary>Indicates that the window style is normal with focus for the invoked program when the Shell function is called. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus">
      <summary>Indicates that the window style is normal without focus for the invoked program when the Shell function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNull">
      <summary>Indicates that the type of a variant object is Nothing. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullChar">
      <summary>Represents a null character for print and display functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullString">
      <summary>Represents a zero-length string for print and display functions, and for calling external procedures.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObject">
      <summary>Indicates that the type of a variant object is Object. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObjectError">
      <summary>Represents the object error number. User-defined error numbers should be greater than this value.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOK">
      <summary>Indicates that the OK button was clicked in a message box. Returned by the MsgBox function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKCancel">
      <summary>Indicates that the OK and Cancel buttons will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKOnly">
      <summary>Indicates that only the OK button will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbProperCase">
      <summary>Indicates that the first letter of every word in a string should be converted to uppercase and the remaining characters to lowercase when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbQuestion">
      <summary>Indicates that the question icon will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbReadOnly">
      <summary>Indicates that the file is a read-only file for file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetry">
      <summary>Indicates that the Retry button was clicked in a message box. Returned by the MsgBox function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetryCancel">
      <summary>Indicates that the Retry and Cancel buttons will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSaturday">
      <summary>Specifies that Saturday should be used as the first day of the week when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSet">
      <summary>Indicates that a property value should be set when the CallByName function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortDate">
      <summary>Indicates that the short-date format for the current culture should be used when the FormatDateTime function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortTime">
      <summary>Indicates that the short-time format for the current culture should be used when the FormatDateTime function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese">
      <summary>Indicates that characters should be converted to Simplified Chinese when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSingle">
      <summary>Indicates that the type of a variant object is Single. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbString">
      <summary>Indicates that the type of a variant object is String. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSunday">
      <summary>Specifies that Sunday should be used as the first day of the week when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystem">
      <summary>Indicates that the file is a system file for file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystemModal">
      <summary>Indicates that the message box will be displayed as a modal dialog box when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTab">
      <summary>Represents a tab character for print and display functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTextCompare">
      <summary>Indicates that a text comparison should be performed when comparison functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbThursday">
      <summary>Specifies that Thursday should be used as the first day of the week when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese">
      <summary>Indicates that characters should be converted to Traditional Chinese when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTrue">
      <summary>Indicates that a Boolean value of True should be used when number-formatting functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTuesday">
      <summary>Specifies that Tuesday should be used as the first day of the week when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUpperCase">
      <summary>Indicates that characters should be converted to uppercase when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseDefault">
      <summary>Indicates that the default Boolean value should be used when number-formatting functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUserDefinedType">
      <summary>Indicates that the type of a variant object is a user-defined type. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystem">
      <summary>Indicates that the week specified by your system as the first week of the year should be used when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek">
      <summary>Indicates that the day specified by your system as the first day of the week should be used when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVariant">
      <summary>Indicates that the type of a variant object is Variant. Returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVerticalTab">
      <summary>Represents a carriage-return character for print functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVolume">
      <summary>Indicates the volume label file attribute for file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWednesday">
      <summary>Specifies that Wednesday should be used as the first day of the week when date-related functions are called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWide">
      <summary>Indicates that narrow (single-byte) characters should be converted to wide (double-byte) characters when the StrConv function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYes">
      <summary>Indicates that the Yes button was clicked in a message box. Returned by the MsgBox function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNo">
      <summary>Indicates that the Yes and No buttons will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNoCancel">
      <summary>Indicates that the Yes, No, and Cancel buttons will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ControlChars">
      <summary>The ControlChars module contains constants used as control characters. These constants can be used anywhere in your code.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ControlChars.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ControlChars" /> class. </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Back">
      <summary>Represents a backspace character (vbBack).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Cr">
      <summary>Represents a carriage return character (vbCr).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.CrLf">
      <summary>Represents a carriage return/linefeed character combination (vbCrLf).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.FormFeed">
      <summary>Represents a form feed character for print functions (vbFormFeed).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Lf">
      <summary>Represents a line feed character (vbLf).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NewLine">
      <summary>Represents a new line character (vbNewLine).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NullChar">
      <summary>Represents a null character (vbNullChar).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Quote">
      <summary>Represents a double-quote character.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Tab">
      <summary>Represents a tab character (vbTab).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.VerticalTab">
      <summary>Represents a vertical tab character (vbVerticalTab).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Conversion">
      <summary>The Conversion module contains the procedures used to perform various conversion operations.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)">
      <summary>Converts an object to the specified generic type.</summary>
      <returns>An object statically typed as the requested generic type.</returns>
      <param name="Expression">The object to convert.</param>
      <typeparam name="TargetType">The type to which to convert the object.</typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)">
      <summary>Converts an object to the specified type.</summary>
      <returns>An object whose type at run time is the requested target type.</returns>
      <param name="Expression">The object to convert.</param>
      <param name="TargetType">The type to which to convert the object.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString">
      <summary>Returns the error message that corresponds to a given error number.</summary>
      <returns>The error message that corresponds to the most recent run-time error.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ErrorNumber" /> is out of range.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)">
      <summary>Returns the error message that corresponds to a given error number.</summary>
      <returns>The error message that corresponds to a given error number.</returns>
      <param name="ErrorNumber">Optional. Any valid error number.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ErrorNumber" /> is out of range.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)">
      <summary>Returns a string representing the hexadecimal value of a number.</summary>
      <returns>Returns a string representing the hexadecimal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)">
      <summary>Returns a string representing the hexadecimal value of a number.</summary>
      <returns>Returns a string representing the hexadecimal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)">
      <summary>Returns a string representing the hexadecimal value of a number.</summary>
      <returns>Returns a string representing the hexadecimal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)">
      <summary>Returns a string representing the hexadecimal value of a number.</summary>
      <returns>Returns a string representing the hexadecimal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)">
      <summary>Returns a string representing the hexadecimal value of a number.</summary>
      <returns>Returns a string representing the hexadecimal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)">
      <summary>Returns a string representing the hexadecimal value of a number.</summary>
      <returns>Returns a string representing the hexadecimal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)">
      <summary>Returns a string representing the hexadecimal value of a number.</summary>
      <returns>Returns a string representing the hexadecimal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)">
      <summary>Returns a string representing the hexadecimal value of a number.</summary>
      <returns>Returns a string representing the hexadecimal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)">
      <summary>Returns a string representing the hexadecimal value of a number.</summary>
      <returns>Returns a string representing the hexadecimal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Double)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Object)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Single)">
      <summary>Return the integer portion of a number.</summary>
      <returns>Return the integer portion of a number.</returns>
      <param name="Number">Required. A number of type Double or any valid numeric expression. If <paramref name="Number" /> contains Nothing, Nothing is returned.</param>
      <exception cref="T:System.ArgumentNullException">Number is not specified.</exception>
      <exception cref="T:System.ArgumentException">Number is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)">
      <summary>Returns a string representing the octal value of a number.</summary>
      <returns>Returns a string representing the octal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)">
      <summary>Returns a string representing the octal value of a number.</summary>
      <returns>Returns a string representing the octal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)">
      <summary>Returns a string representing the octal value of a number.</summary>
      <returns>Returns a string representing the octal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)">
      <summary>Returns a string representing the octal value of a number.</summary>
      <returns>Returns a string representing the octal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)">
      <summary>Returns a string representing the octal value of a number.</summary>
      <returns>Returns a string representing the octal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)">
      <summary>Returns a string representing the octal value of a number.</summary>
      <returns>Returns a string representing the octal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)">
      <summary>Returns a string representing the octal value of a number.</summary>
      <returns>Returns a string representing the octal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)">
      <summary>Returns a string representing the octal value of a number.</summary>
      <returns>Returns a string representing the octal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)">
      <summary>Returns a string representing the octal value of a number.</summary>
      <returns>Returns a string representing the octal value of a number.</returns>
      <param name="Number">Required. Any valid numeric expression or String expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Str(System.Object)">
      <summary>Returns a String representation of a number.</summary>
      <returns>Returns a String representation of a number.</returns>
      <param name="Number">Required. An Object containing any valid numeric expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> is not specified.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Number" /> is not a numeric type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Char)">
      <summary>Returns the numbers contained in a string as a numeric value of appropriate type.</summary>
      <returns>Returns the numbers contained in a string as a numeric value of appropriate type.</returns>
      <param name="Expression">Required. Any valid String expression, Object variable, or Char value. If <paramref name="Expression" /> is of type Object, its value must be convertible to String or an <see cref="T:System.ArgumentException" /> error occurs.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> is too large.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> is an Object type expression that is not convertible to String.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Object)">
      <summary>Returns the numbers contained in a string as a numeric value of appropriate type.</summary>
      <returns>Returns the numbers contained in a string as a numeric value of appropriate type.</returns>
      <param name="Expression">Required. Any valid String expression, Object variable, or Char value. If <paramref name="Expression" /> is of type Object, its value must be convertible to String or an <see cref="T:System.ArgumentException" /> error occurs.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> is too large.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> is an Object type expression that is not convertible to String.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.String)">
      <summary>Returns the numbers contained in a string as a numeric value of appropriate type.</summary>
      <returns>Returns the numbers contained in a string as a numeric value of appropriate type.</returns>
      <param name="InputStr">Required. Any valid String expression, Object variable, or Char value. If <paramref name="Expression" /> is of type Object, its value must be convertible to String or an <see cref="T:System.ArgumentException" /> error occurs.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> is too large.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> is an Object type expression that is not convertible to String.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.DateAndTime">
      <summary>The DateAndTime module contains the procedures and properties used in date and time operations. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)">
      <summary>Returns a Date value containing a date and time value to which a specified time interval has been added.</summary>
      <returns>Returns a Date value containing a date and time value to which a specified time interval has been added.</returns>
      <param name="Interval">Required. DateInterval enumeration value or String expression representing the time interval you want to add.</param>
      <param name="Number">Required. Double. Floating-point expression representing the number of intervals you want to add. <paramref name="Number" /> can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when <paramref name="Interval" /> specifies hours, minutes, or seconds. For other values of <paramref name="Interval" />, any fractional part of <paramref name="Number" /> is ignored.</param>
      <param name="DateValue">Required. Date. An expression representing the date and time to which the interval is to be added. <paramref name="DateValue" /> itself is not changed in the calling program.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> is not coercible to Date.</exception>
      <exception cref="T:System.ArgumentException">Interval is invalid.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)">
      <summary>Returns a Date value containing a date and time value to which a specified time interval has been added.</summary>
      <returns>Returns a Date value containing a date and time value to which a specified time interval has been added.</returns>
      <param name="Interval">Required. DateInterval enumeration value or String expression representing the time interval you want to add.</param>
      <param name="Number">Required. Double. Floating-point expression representing the number of intervals you want to add. <paramref name="Number" /> can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when <paramref name="Interval" /> specifies hours, minutes, or seconds. For other values of <paramref name="Interval" />, any fractional part of <paramref name="Number" /> is ignored.</param>
      <param name="DateValue">Required. Date. An expression representing the date and time to which the interval is to be added. <paramref name="DateValue" /> itself is not changed in the calling program.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> is not coercible to Date.</exception>
      <exception cref="T:System.ArgumentException">Interval is invalid.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Returns a Long value specifying the number of time intervals between two Date values.</summary>
      <returns>Returns a Long value specifying the number of time intervals between two Date values.</returns>
      <param name="Interval">Required. DateInterval enumeration value or String expression representing the time interval you want to use as the unit of difference between <paramref name="Date1" /> and <paramref name="Date2" />.</param>
      <param name="Date1">Required. Date. The first date/time value you want to use in the calculation. </param>
      <param name="Date2">Required. Date. The second date/time value you want to use in the calculation.</param>
      <param name="DayOfWeek">Optional. A value chosen from the FirstDayOfWeek enumeration that specifies the first day of the week. If not specified, FirstDayOfWeek.Sunday is used.</param>
      <param name="WeekOfYear">Optional. A value chosen from the FirstWeekOfYear enumeration that specifies the first week of the year. If not specified, FirstWeekOfYear.Jan1 is used.</param>
      <exception cref="T:System.ArgumentException">Invalid <paramref name="Interval" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Returns a Long value specifying the number of time intervals between two Date values.</summary>
      <returns>Returns a Long value specifying the number of time intervals between two Date values.</returns>
      <param name="Interval">Required. DateInterval enumeration value or String expression representing the time interval you want to use as the unit of difference between <paramref name="Date1" /> and <paramref name="Date2" />.</param>
      <param name="Date1">Required. Date. The first date/time value you want to use in the calculation. </param>
      <param name="Date2">Required. Date. The second date/time value you want to use in the calculation.</param>
      <param name="DayOfWeek">Optional. A value chosen from the FirstDayOfWeek enumeration that specifies the first day of the week. If not specified, FirstDayOfWeek.Sunday is used.</param>
      <param name="WeekOfYear">Optional. A value chosen from the FirstWeekOfYear enumeration that specifies the first week of the year. If not specified, FirstWeekOfYear.Jan1 is used.</param>
      <exception cref="T:System.ArgumentException">Invalid <paramref name="Interval" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Returns an Integer value containing the specified component of a given Date value.</summary>
      <returns>Returns an Integer value containing the specified component of a given Date value.</returns>
      <param name="Interval">Required. DateInterval enumeration value or String expression representing the part of the date/time value you want to return.</param>
      <param name="DateValue">Required. Date value that you want to evaluate.</param>
      <param name="FirstDayOfWeekValue">Optional. A value chosen from the FirstDayOfWeek enumeration that specifies the first day of the week. If not specified, FirstDayOfWeek.Sunday is used.</param>
      <param name="FirstWeekOfYearValue">Optional. A value chosen from the FirstWeekOfYear enumeration that specifies the first week of the year. If not specified, FirstWeekOfYear.Jan1 is used.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> is invalid. </exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> is not coercible to Date.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Returns an Integer value containing the specified component of a given Date value.</summary>
      <returns>Returns an Integer value containing the specified component of a given Date value.</returns>
      <param name="Interval">Required. DateInterval enumeration value or String expression representing the part of the date/time value you want to return.</param>
      <param name="DateValue">Required. Date value that you want to evaluate.</param>
      <param name="DayOfWeek">Optional. A value chosen from the FirstDayOfWeek enumeration that specifies the first day of the week. If not specified, FirstDayOfWeek.Sunday is used.</param>
      <param name="WeekOfYear">Optional. A value chosen from the FirstWeekOfYear enumeration that specifies the first week of the year. If not specified, FirstWeekOfYear.Jan1 is used.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> is invalid. </exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> is not coercible to Date.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)">
      <summary>Returns a Date value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</summary>
      <returns>Returns a Date value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</returns>
      <param name="Year">Required. Integer expression from 1 through 9999. However, values below this range are also accepted. If <paramref name="Year" /> is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the "Remarks" section below. If <paramref name="Year" /> is less than 1, it is subtracted from the current year.</param>
      <param name="Month">Required. Integer expression from 1 through 12. However, values outside this range are also accepted. The value of <paramref name="Month" /> is offset by 1 and applied to January of the calculated year. In other words, (<paramref name="Month" /> - 1) is added to January. The year is recalculated if necessary. The following results illustrate this effect:If <paramref name="Month" /> is 1, the result is January of the calculated year.If <paramref name="Month" /> is 0, the result is December of the previous year.If <paramref name="Month" /> is -1, the result is November of the previous year.If <paramref name="Month" /> is 13, the result is January of the following year.</param>
      <param name="Day">Required. Integer expression from 1 through 31. However, values outside this range are also accepted. The value of <paramref name="Day" /> is offset by 1 and applied to the first day of the calculated month. In other words, (<paramref name="Day" /> - 1) is added to the first of the month. The month and year are recalculated if necessary. The following results illustrate this effect:If <paramref name="Day" /> is 1, the result is the first day of the calculated month.If <paramref name="Day" /> is 0, the result is the last day of the previous month.If <paramref name="Day" /> is -1, the result is the penultimate day of the previous month.If <paramref name="Day" /> is past the end of the current month, the result is the appropriate day of the following month. For example, if <paramref name="Month" /> is 4 and <paramref name="Day" /> is 31, the result is May 1.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.DateString">
      <summary>Returns or sets a String value representing the current date according to your system.</summary>
      <returns>Returns or sets a String value representing the current date according to your system.</returns>
      <exception cref="T:System.InvalidCastException">Invalid format used to set value of DateString.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)">
      <summary>Returns a Date value containing the date information represented by a string, with the time information set to midnight (00:00:00).</summary>
      <returns>Date value containing the date information represented by a string, with the time information set to midnight (00:00:00).</returns>
      <param name="StringDate">Required. String expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="StringDate" /> includes invalid time information.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)">
      <summary>Returns an Integer value from 1 through 31 representing the day of the month.</summary>
      <returns>Returns an Integer value from 1 through 31 representing the day of the month.</returns>
      <param name="DateValue">Required. Date value from which you want to extract the day.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)">
      <summary>Returns an Integer value from 0 through 23 representing the hour of the day.</summary>
      <returns>Returns an Integer value from 0 through 23 representing the hour of the day.</returns>
      <param name="TimeValue">Required. Date value from which you want to extract the hour.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)">
      <summary>Returns an Integer value from 0 through 59 representing the minute of the hour.</summary>
      <returns>Returns an Integer value from 0 through 59 representing the minute of the hour.</returns>
      <param name="TimeValue">Required. Date value from which you want to extract the minute.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)">
      <summary>Returns an Integer value from 1 through 12 representing the month of the year.</summary>
      <returns>Returns an Integer value from 1 through 12 representing the month of the year.</returns>
      <param name="DateValue">Required. Date value from which you want to extract the month.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)">
      <summary>Returns a String value containing the name of the specified month.</summary>
      <returns>Returns a String value containing the name of the specified month.</returns>
      <param name="Month">Required. Integer. The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December. You can use the value 13 with a 13-month calendar. If your system is using a 12-month calendar and <paramref name="Month" /> is 13, MonthName returns an empty string.</param>
      <param name="Abbreviate">Optional. Boolean value that indicates if the month name is to be abbreviated. If omitted, the default is False, which means the month name is not abbreviated.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Month" /> is less than 1 or greater than 13.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Now">
      <summary>Returns a Date value containing the current date and time according to your system.</summary>
      <returns>Returns a Date value containing the current date and time according to your system.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)">
      <summary>Returns an Integer value from 0 through 59 representing the second of the minute.</summary>
      <returns>Returns an Integer value from 0 through 59 representing the second of the minute.</returns>
      <param name="TimeValue">Required. Date value from which you want to extract the second.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay">
      <summary>Returns or sets a Date value containing the current time of day according to your system.</summary>
      <returns>Returns or sets a Date value containing the current time of day according to your system.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Timer">
      <summary>Returns a Double value representing the number of seconds elapsed since midnight.</summary>
      <returns>Returns a Double value representing the number of seconds elapsed since midnight.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)">
      <summary>Returns a Date value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</summary>
      <returns>Returns a Date value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</returns>
      <param name="Hour">Required. Integer expression from 0 through 23. However, values outside this range are also accepted.</param>
      <param name="Minute">Required. Integer expression from 0 through 59. However, values outside this range are also accepted. The value of <paramref name="Minute" /> is added to the calculated hour, so a negative value specifies minutes before that hour.</param>
      <param name="Second">Required. Integer expression from 0 through 59. However, values outside this range are also accepted. The value of <paramref name="Second" /> is added to the calculated minute, so a negative value specifies seconds before that minute.</param>
      <exception cref="T:System.ArgumentException">Argument is outside the range -2,147,483,648 through 2,147,483,647</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Calculated time is less than negative 24 hours.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeString">
      <summary>Returns or sets a String value representing the current time of day according to your system.</summary>
      <returns>Returns or sets a String value representing the current time of day according to your system.</returns>
      <exception cref="T:System.InvalidCastException">Invalid format used to set value of TimeString.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)">
      <summary>Returns a Date value containing the time information represented by a string, with the date information set to January 1 of the year 1.</summary>
      <returns>Returns a Date value containing the time information represented by a string, with the date information set to January 1 of the year 1.</returns>
      <param name="StringTime">Required. String expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="StringTime" /> includes invalid date information.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Today">
      <summary>Returns or sets a Date value containing the current date according to your system.</summary>
      <returns>Returns or sets a Date value containing the current date according to your system.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>Returns an Integer value containing a number representing the day of the week.</summary>
      <returns>Returns an Integer value containing a number representing the day of the week.</returns>
      <param name="DateValue">Required. Date value for which you want to determine the day of the week.</param>
      <param name="DayOfWeek">Optional. A value chosen from the FirstDayOfWeek enumeration that specifies the first day of the week. If not specified, FirstDayOfWeek.Sunday is used.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="DayOfWeek" /> is less than 0 or more than 7.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>Returns a String value containing the name of the specified weekday.</summary>
      <returns>Returns a String value containing the name of the specified weekday.</returns>
      <param name="Weekday">Required. Integer. The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week. The identities of the first and last days depend on the setting of <paramref name="FirstDayOfWeekValue" />.</param>
      <param name="Abbreviate">Optional. Boolean value that indicates if the weekday name is to be abbreviated. If omitted, the default is False, which means the weekday name is not abbreviated.</param>
      <param name="FirstDayOfWeekValue">Optional. A value chosen from the FirstDayOfWeek enumeration that specifies the first day of the week. If not specified, FirstDayOfWeek.System is used.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Weekday" /> is less than 1 or greater than 7, or <paramref name="FirstDayOfWeekValue" /> is less than 0 or greater than 7.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)">
      <summary>Returns an Integer value from 1 through 9999 representing the year.</summary>
      <returns>Returns an Integer value from 1 through 9999 representing the year.</returns>
      <param name="DateValue">Required. Date value from which you want to extract the year.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.DateFormat">
      <summary>Indicates how to display dates when calling the FormatDateTime function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.GeneralDate">
      <summary>For real numbers, displays a date and time. If the number has no fractional part, displays only a date. If the number has no integer part, displays time only. Date and time display is determined by your computer's regional settings. This member is equivalent to the Visual Basic constant vbGeneralDate.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongDate">
      <summary>Displays a date using the long-date format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant vbLongDate.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortDate">
      <summary>Displays a date using the short-date format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant vbShortDate.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongTime">
      <summary>Displays a time using the long-time format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant vbLongTime.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortTime">
      <summary>Displays a time using the short-time format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant vbShortTime.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateInterval">
      <summary>Indicates how to determine and format date intervals when calling date-related functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Year">
      <summary>Year</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Quarter">
      <summary>Quarter of year (1 through 4)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Month">
      <summary>Month (1 through 12)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.DayOfYear">
      <summary>Day of year (1 through 366)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Day">
      <summary>Day of month (1 through 31)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.WeekOfYear">
      <summary>Week of year (1 through 53)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Weekday">
      <summary>Day of week (1 through 7)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Hour">
      <summary>Hour (1 through 24)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Minute">
      <summary>Minute (1 through 60)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Second">
      <summary>Second (1 through 60)</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DueDate">
      <summary>Indicates when payments are due when calling financial methods.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.EndOfPeriod">
      <summary>Falls at the end of the date interval</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.BegOfPeriod">
      <summary>Falls at the beginning of the date interval</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ErrObject">
      <summary>The ErrObject module contains properties and procedures used to identify and handle run-time errors using the Err object. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Clear">
      <summary>Clears all property settings of the Err object.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Description">
      <summary>Returns or sets a String expression containing a descriptive string associated with an error. Read/write.</summary>
      <returns>Returns or sets a String expression containing a descriptive string associated with an error. Read/write.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Erl">
      <summary>Returns an integer indicating the line number of the last executed statement. Read-only.</summary>
      <returns>Returns an integer indicating the line number of the last executed statement. Read-only.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.GetException">
      <summary>Returns the exception representing the error that occurred.</summary>
      <returns>Returns the exception representing the error that occurred.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.HelpContext">
      <summary>Returns or sets an Integer containing the context ID for a topic in a Help file. Read/write.</summary>
      <returns>Returns or sets an Integer containing the context ID for a topic in a Help file. Read/write.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.HelpFile">
      <summary>Returns or sets a String expression containing the fully qualified path to a Help file. Read/write.</summary>
      <returns>Returns or sets a String expression containing the fully qualified path to a Help file. Read/write.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.LastDllError">
      <summary>Returns a system error code produced by a call to a dynamic-link library (DLL). Read-only.</summary>
      <returns>Returns a system error code produced by a call to a dynamic-link library (DLL). Read-only.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Number">
      <summary>Returns or sets a numeric value specifying an error. Read/write.</summary>
      <returns>Returns or sets a numeric value specifying an error. Read/write.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is greater than 65535.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
      <summary>Generates a run-time error; can be used instead of the Error statement.</summary>
      <param name="Number">Required. Long integer that identifies the nature of the error. Visual Basic errors are in the range 0–65535; the range 0–512 is reserved for system errors; the range 513–65535 is available for user-defined errors. When setting the Number property to your own error code in a class module, you add your error code number to the vbObjectError constant. For example, to generate the error number 513, assign vbObjectError + 513 to the Number property.</param>
      <param name="Source">Optional. String expression naming the object or application that generated the error. When setting this property for an object, use the form project.class. If <paramref name="Source" /> is not specified, the process ID of the current Visual Basic project is used.</param>
      <param name="Description">Optional. String expression describing the error. If unspecified, the value in the Number property is examined. If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the Error function is used as the Description property. If there is no Visual Basic error corresponding to the Number property, the "Application-defined or object-defined error" message is used.</param>
      <param name="HelpFile">Optional. The fully qualified path to the Help file in which help on this error can be found. If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</param>
      <param name="HelpContext">Optional. The context ID identifying a topic within <paramref name="HelpFile" /> that provides help for the error. If omitted, the Visual Basic Help-file context ID for the error corresponding to the Number property is used, if it exists.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Source">
      <summary>Returns or sets a String expression specifying the name of the object or application that originally generated the error. Read/write.</summary>
      <returns>Returns or sets a String expression specifying the name of the object or application that originally generated the error. Read/write.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.FileAttribute">
      <summary>Indicates the file attributes to use when calling file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Normal">
      <summary>Normal (default for Dir and SetAttr). No special characteristics apply to this file. This member is equivalent to the Visual Basic constant vbNormal.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.ReadOnly">
      <summary>Read only. This member is equivalent to the Visual Basic constant vbReadOnly.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Hidden">
      <summary>Hidden. This member is equivalent to the Visual Basic constant vbHidden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.System">
      <summary>System file. This member is equivalent to the Visual Basic constant vbSystem.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Volume">
      <summary>Volume label. This attribute is not valid when used with SetAttr. This member is equivalent to the Visual Basic constant vbVolume.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Directory">
      <summary>Directory or folder. This member is equivalent to the Visual Basic constant vbDirectory.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Archive">
      <summary>File has changed since last backup. This member is equivalent to the Visual Basic constant vbArchive.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileSystem">
      <summary>The FileSystem module contains the procedures that are used to perform file, directory or folder, and system operations. The My feature gives you better productivity and performance in file I/O operations than using the FileSystem module. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)">
      <summary>Changes the current directory or folder. The My feature gives you better productivity and performance in file I/O operations than the ChDir function. For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" /> .</summary>
      <param name="Path">Required. A String expression that identifies which directory or folder becomes the new default directory or folder. <paramref name="Path" /> may include the drive. If no drive is specified, ChDir changes the default directory or folder on the current drive. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> is empty.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Invalid drive is specified, or drive is unavailable.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)">
      <summary>Changes the current drive.</summary>
      <param name="Drive">Required. String expression that specifies an existing drive. If you supply a zero-length string (""), the current drive does not change. If the <paramref name="Drive" /> argument is a multiple-character string, ChDrive uses only the first letter.</param>
      <exception cref="T:System.IO.IOException">Invalid drive is specified, or drive is unavailable.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)">
      <summary>Changes the current drive.</summary>
      <param name="Drive">Required. String expression that specifies an existing drive. If you supply a zero-length string (""), the current drive does not change. If the <paramref name="Drive" /> argument is a multiple-character string, ChDrive uses only the first letter.</param>
      <exception cref="T:System.IO.IOException">Invalid drive is specified, or drive is unavailable.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir">
      <summary>Returns a string representing the current path. The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />  gives you better productivity and performance in file I/O operations than CurDir. For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <returns>A string representing the current path.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)">
      <summary>Returns a string representing the current path. The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />  gives you better productivity and performance in file I/O operations than CurDir. For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <returns>A string representing the current path. </returns>
      <param name="Drive">Optional. Char expression that specifies an existing drive. If no drive is specified, or if <paramref name="Drive" /> is a zero-length string (""), CurDir returns the path for the current drive.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir">
      <summary>Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive. The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the Dir function. See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />  for more information.</summary>
      <returns>A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive. The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the Dir function. See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />  for more information.</summary>
      <returns>A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</returns>
      <param name="PathName">Optional. String expression that specifies a file name, directory or folder name, or drive volume label. A zero-length string ("") is returned if <paramref name="PathName" /> is not found. </param>
      <param name="Attributes">Optional. Enumeration or numeric expression whose value specifies file attributes. If omitted, Dir returns files that match <paramref name="PathName" /> but have no attributes.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)">
      <summary>Returns a Boolean value True when the end of a file opened for Random or sequential Input has been reached.</summary>
      <returns>Returns a Boolean value True when the end of a file opened for Random or sequential Input has been reached.</returns>
      <param name="FileNumber">Required. An Integer that contains any valid file number.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)">
      <summary>Returns an enumeration representing the file mode for files opened using the FileOpen function. The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the FileAttr function. See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /> for more information.</summary>
      <returns>The following enumeration values indicate the file access mode:ValueMode1OpenMode.Input2OpenMode.Output4OpenMode.Random8OpenMode.Append32OpenMode.Binary</returns>
      <param name="FileNumber">Required. Integer. Any valid file number.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])">
      <summary>Concludes input/output (I/O) to a file opened using the FileOpen function. My gives you better productivity and performance in file I/O operations. See <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />  for more information.</summary>
      <param name="FileNumbers">Optional. Parameter array of 0 or more channels to be closed. </param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)">
      <summary>Copies a file. The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than FileCopy. See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" /> for more information.</summary>
      <param name="Source">Required. String expression that specifies the name of the file to be copied. <paramref name="Source" /> may include the directory or folder, and drive, of the source file.</param>
      <param name="Destination">Required. String expression that specifies the destination file name. <paramref name="Destination" /> may include the directory or folder, and drive, of the destination file.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> or <paramref name="Destination" /> is invalid or not specified.</exception>
      <exception cref="T:System.IO.IOException">File is already open.</exception>
      <exception cref="T:System.IO.FileNotFoundException">File does not exist.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)">
      <summary>Returns a Date value that indicates the date and time a file was written to. The My feature gives you better productivity and performance in file I/O operations than FileDateTime. For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></summary>
      <returns>Date value that indicates the date and time a file was created or last modified. </returns>
      <param name="PathName">Required. String expression that specifies a file name. <paramref name="PathName" /> may include the directory or folder, and the drive.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="PathName" /> is invalid or contains wildcards.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Target file does not exist.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <param name="ArrayIsDynamic">Optional. Applies only when writing an array. Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.</param>
      <param name="StringIsFixedLength">Optional. Applies only when writing a string. Specifies whether to write a two-byte descriptor for the string that describes the length. The default is False.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <param name="StringIsFixedLength">Optional. Applies only when writing a string. Specifies whether to write a two-byte descriptor for the string that describes the length. The default is False.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)">
      <summary>Reads data from an open disk file into a variable. The My feature gives you better productivity and performance in file I/O operations than FileGet. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)">
      <summary>Reads data from an open disk file into a variable.  The My feature gives you better productivity and performance in file I/O operations than FileGetObject. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name into which data is read.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which reading starts.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)">
      <summary>Returns a Long value that specifies the length of a file in bytes. The My feature gives you better productivity and performance in file I/O operations than FileLen. For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</summary>
      <returns>Long value that specifies the length of a file in bytes. </returns>
      <param name="PathName">Required. String expression that specifies a file. <paramref name="PathName" /> may include the directory or folder, and the drive.</param>
      <exception cref="T:System.IO.FileNotFoundException">File does not exist.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)">
      <summary>Opens a file for input or output. The My feature gives you better productivity and performance in file I/O operations than FileOpen. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number. Use the FreeFile function to obtain the next available file number.</param>
      <param name="FileName">Required. String expression that specifies a file name—may include directory or folder, and drive.</param>
      <param name="Mode">Required. Enumeration specifying the file mode: Append, Binary, Input, Output, or Random. For more information, see <see cref="T:Microsoft.VisualBasic.OpenMode" /> .</param>
      <param name="Access">Optional. Enumeration specifying the operations permitted on the open file: Read, Write, or ReadWrite. Defaults to ReadWrite. For more information, see <see cref="T:Microsoft.VisualBasic.OpenAccess" /> .</param>
      <param name="Share">Optional. Enumeration specifying the operations not permitted on the open file by other processes: Shared, Lock Read, Lock Write, and Lock Read Write. Defaults to Lock Read Write. For more information, see <see cref="T:Microsoft.VisualBasic.OpenShare" /> .</param>
      <param name="RecordLength">Optional. Number less than or equal to 32,767 (bytes). For files opened for random access, this value is the record length. For sequential files, this value is the number of characters buffered.</param>
      <exception cref="T:System.ArgumentException">Invalid Access, Share, or Mode.</exception>
      <exception cref="T:System.ArgumentException">WriteOnly file is opened for Input.</exception>
      <exception cref="T:System.ArgumentException">ReadOnly file is opened for Output.</exception>
      <exception cref="T:System.ArgumentException">ReadOnly file is opened for Append.</exception>
      <exception cref="T:System.ArgumentException">Record length is negative (and not equal to -1).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> is invalid (&lt;-1 or &gt;255), or <paramref name="FileNumber" /> is already in use.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileName" /> is already open, or <paramref name="FileName" /> is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <param name="ArrayIsDynamic">Optional. Applies only when writing an array. Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length. </param>
      <param name="StringIsFixedLength">Optional. Applies only when writing a string. Specifies whether to write a two-byte string length descriptor for the string to the file. The default is False.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />..</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <param name="StringIsFixedLength">Optional. Applies only when writing a string. Specifies whether to write a two-byte string length descriptor for the string to the file. The default is False.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)">
      <summary>Writes data from a variable to a disk file. The My feature gives you better productivity and performance in file I/O operations than FilePut. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)">
      <summary>Writes data from a variable to a disk file.  The My feature gives you better productivity and performance in file I/O operations than FilePutObject. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Valid variable name that contains data written to disk.</param>
      <param name="RecordNumber">Optional. Record number (Random mode files) or byte number (Binary mode files) at which writing starts.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)">
      <summary>Assigns an output line width to a file opened by using the FileOpen function.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="RecordWidth">Required. Numeric expression in the range 0–255, inclusive, which indicates how many characters appear on a line before a new line is started. If <paramref name="RecordWidth" /> equals 0, there is no limit to the length of a line. The default value for <paramref name="RecordWidth" /> is 0.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FreeFile">
      <summary>Returns an Integer value that represents the next file number available for use by the FileOpen function.</summary>
      <returns>Returns an Integer value that represents the next file number available for use by the FileOpen function.</returns>
      <exception cref="T:System.IO.IOException">More than 255 files are in use.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)">
      <summary>Returns a FileAttribute value that represents the attributes of a file, directory, or folder. The My feature gives you better productivity and performance in file I/O operations than FileAttribute. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <returns>The value returned by GetAttr is the sum of the following enumeration values:ValueConstantDescriptionNormalvbNormalNormal.ReadOnlyvbReadOnlyRead-only.HiddenvbHiddenHidden.SystemvbSystemSystem file.DirectoryvbDirectoryDirectory or folder.ArchivevbArchiveFile has changed since last backup.AliasvbAliasFile has a different name.NoteThese enumerations are specified by the Visual Basic language. The names can be used anywhere in your code in place of the actual values.</returns>
      <param name="PathName">Required. String expression that specifies a file, directory, or folder name. <paramref name="PathName" /> can include the directory or folder, and the drive.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="Pathname" /> is invalid or contains wildcards.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Target file does not exist.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)">
      <summary>Reads data from an open sequential file and assigns the data to variables.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Value">Required. Variable that is assigned the values read from the file—cannot be an array or object variable.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)">
      <summary>Returns String value that contains characters from a file opened in Input or Binary mode. The My feature gives you better productivity and performance in file I/O operations than InputString. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <returns>Returns String value that contains characters from a file opened in Input or Binary mode. The My feature gives you better productivity and performance in file I/O operations than InputString. </returns>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="CharCount">Required. Any valid numeric expression specifying the number of characters to read.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCount" /> &lt; 0 or &gt; 214.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)">
      <summary>Deletes files from a disk. The My feature gives you better productivity and performance in file I/O operations than Kill. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> .</summary>
      <param name="PathName">Required. String expression that specifies one or more file names to be deleted. <paramref name="PathName" /> can include the directory or folder, and the drive.</param>
      <exception cref="T:System.IO.IOException">Target file(s) open.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Target file(s) not found.</exception>
      <exception cref="T:System.Security.SecurityException">Permission denied.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)">
      <summary>Reads a single line from an open sequential file and assigns it to a String variable.</summary>
      <returns>Reads a single line from an open sequential file and assigns it to a String variable.</returns>
      <param name="FileNumber">Required. Any valid file number.</param>
      <exception cref="T:System.IO.EndOfStreamException">End of file reached.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)">
      <summary>Returns a Long value that specifies the current read/write position in an open file.</summary>
      <returns>Returns a Long value that specifies the current read/write position in an open file.</returns>
      <param name="FileNumber">Required. Any valid Integer file number.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)">
      <summary>Controls access by other processes to all or part of a file opened by using the Open function. The My feature gives you better productivity and performance in file I/O operations than Lock and Unlock. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)">
      <summary>Controls access by other processes to all or part of a file opened by using the Open function. The My feature gives you better productivity and performance in file I/O operations than Lock and Unlock. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Record">Optional. Number of the only record or byte to lock or unlock</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)">
      <summary>Controls access by other processes to all or part of a file opened by using the Open function. The My feature gives you better productivity and performance in file I/O operations than Lock and Unlock. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="FromRecord">Optional. Number of the first record or byte to lock or unlock.</param>
      <param name="ToRecord">Optional. Number of the last record or byte to lock or unlock.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)">
      <summary>Returns a Long representing the size, in bytes, of a file opened by using the FileOpen function. The My feature gives you better productivity and performance in file I/O operations than LOF. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <returns>Returns a Long representing the size, in bytes, of a file opened by using the FileOpen function. The My feature gives you better productivity and performance in file I/O operations than LOF.</returns>
      <param name="FileNumber">Required. An Integer that contains a valid file number.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)">
      <summary>Creates a new directory. The My feature gives you better productivity and performance in file I/O operations than MkDir. For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</summary>
      <param name="Path">Required. String expression that identifies the directory to be created. The <paramref name="Path" /> may include the drive. If no drive is specified, MkDir creates the new directory on the current drive.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> is not specified or is empty.</exception>
      <exception cref="T:System.Security.SecurityException">Permission denied.</exception>
      <exception cref="T:System.IO.IOException">Directory already exists.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])">
      <summary>Writes display-formatted data to a sequential file.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Output">Optional. Zero or more comma-delimited expressions to write to a file.The <paramref name="Output" /> argument settings are: </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])">
      <summary>Writes display-formatted data to a sequential file.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Output">Optional. Zero or more comma-delimited expressions to write to a file.The <paramref name="Output" /> argument settings are: </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)">
      <summary>Renames a disk file or directory. The My feature gives you better productivity and performance in file I/O operations than Rename. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="OldPath">Required. String expression that specifies the existing file name and location. <paramref name="OldPath" /> may include the directory, and drive, of the file.</param>
      <param name="NewPath">Required. String expression that specifies the new file name and location. <paramref name="NewPath" /> may include directory and drive of the destination location. The file name specified by <paramref name="NewPath" /> cannot already exist.</param>
      <exception cref="T:System.ArgumentException">Path is invalid.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="OldPath" /> file does not exist.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="NewPath" /> file already exists.</exception>
      <exception cref="T:System.IO.IOException">Access is invalid.</exception>
      <exception cref="T:System.IO.IOException">Cannot rename to different device.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Reset">
      <summary>Closes all disk files opened by using the FileOpen function. The My feature gives you better productivity and performance in file I/O operations than Reset. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)">
      <summary>Removes an existing directory. The My feature gives you better productivity and performance in file I/O operations than RmDir. For more information, see <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</summary>
      <param name="Path">Required. String expression that identifies the directory or folder to be removed. <paramref name="Path" /> can include the drive. If no drive is specified, RmDir removes the directory on the current drive.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> is not specified or is empty.</exception>
      <exception cref="T:System.IO.IOException">Target directory contains files.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Directory does not exist.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)">
      <summary>Returns a Long specifying the current read/write position in a file opened by using the FileOpen function, or sets the position for the next read/write operation in a file opened by using the FileOpen function. The My feature gives you better productivity and performance in file I/O operations than Seek. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <returns>Returns a Long specifying the current read/write position in a file opened by using the FileOpen function, or sets the position for the next read/write operation in a file opened by using the FileOpen function. </returns>
      <param name="FileNumber">Required. An Integer that contains a valid file number.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)">
      <summary>Returns a Long specifying the current read/write position in a file opened by using the FileOpen function, or sets the position for the next read/write operation in a file opened by using the FileOpen function. The My feature gives you better productivity and performance in file I/O operations than Seek. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. An Integer that contains a valid file number.</param>
      <param name="Position">Required. Number in the range 1–2,147,483,647, inclusive, that indicates where the next read/write operation should occur.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>Sets attribute information for a file. The My feature gives you better productivity and performance in file I/O operations than SetAttr. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName">Required. String expression that specifies a file name. <paramref name="PathName" /> can include directory or folder, and drive.</param>
      <param name="Attributes">Required. Constant or numeric expression, whose sum specifies file attributes.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="PathName" /> invalid or does not exist.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Attribute" /> type is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)">
      <summary>Used with the Print or PrintLine function to position output.</summary>
      <returns>Used with the Print or PrintLine function to position output.</returns>
      <param name="Count">Required. The number of spaces to insert before displaying or printing the next expression in a list.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB">
      <summary>Used with the Print or PrintLine functions to position output.</summary>
      <returns>Used with the Print or PrintLine functions to position output.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)">
      <summary>Used with the Print or PrintLine functions to position output.</summary>
      <returns>Used with the Print or PrintLine functions to position output.</returns>
      <param name="Column">Optional. The column number moved to before displaying or printing the next expression in a list. If omitted, TAB moves the insertion point to the start of the next print zone. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)">
      <summary>Controls access by other processes to all or part of a file opened by using the Open function. The My feature gives you better productivity and performance in file I/O operations than Lock and Unlock. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)">
      <summary>Controls access by other processes to all or part of a file opened by using the Open function. The My feature gives you better productivity and performance in file I/O operations than Lock and Unlock. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="Record">Optional. Number of the only record or byte to lock or unlock</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)">
      <summary>Controls access by other processes to all or part of a file opened by using the Open function. The My feature gives you better productivity and performance in file I/O operations than Lock and Unlock. For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Required. Any valid file number.</param>
      <param name="FromRecord">Optional. Number of the first record or byte to lock or unlock.</param>
      <param name="ToRecord">Optional. Number of the last record or byte to lock or unlock.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])">
      <summary>Writes data to a sequential file. Data written with Write is usually read from a file by using Input.</summary>
      <param name="FileNumber">Required. An Integer expression that contains any valid file number.</param>
      <param name="Output">Optional. One or more comma-delimited expressions to write to a file.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> does not exist.</exception>
      <exception cref="T:System.IO.IOException">File mode is invalid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])">
      <summary>Writes data to a sequential file. Data written with Write is usually read from a file by using Input.</summary>
      <param name="FileNumber">Required. An Integer expression that contains any valid file number.</param>
      <param name="Output">Optional. One or more comma-delimited expressions to write to a file.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.Financial">
      <summary>The Financial module contains procedures used to perform financial operations. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>Returns a Double specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</summary>
      <returns>Returns a Double specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</returns>
      <param name="Cost">Required. Double specifying initial cost of the asset.</param>
      <param name="Salvage">Required. Double specifying value of the asset at the end of its useful life.</param>
      <param name="Life">Required. Double specifying length of useful life of the asset.</param>
      <param name="Period">Required. Double specifying period for which asset depreciation is calculated.</param>
      <param name="Factor">Optional. Double specifying rate at which the balance declines. If omitted, 2 (double-declining method) is assumed.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Factor" /> &lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt;= 0, or <paramref name="Period" /> &gt; <paramref name="Life." /></exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Returns a Double specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.</summary>
      <returns>Returns a Double specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.</returns>
      <param name="Rate">Required. Double specifying interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</param>
      <param name="NPer">Required. Double specifying total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</param>
      <param name="Pmt">Required. Double specifying payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.</param>
      <param name="PV">Optional. Double specifying present value (or lump sum) of a series of future payments. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make. If omitted, 0 is assumed.</param>
      <param name="Due">Optional. Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due. This argument must be either DueDate.EndOfPeriod if payments are due at the end of the payment period, or DueDate.BegOfPeriod if payments are due at the beginning of the period. If omitted, DueDate.EndOfPeriod is assumed.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Returns a Double specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</summary>
      <returns>Returns a Double specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</returns>
      <param name="Rate">Required. Double specifying interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</param>
      <param name="Per">Required. Double specifying payment period in the range 1 through <paramref name="NPer" />.</param>
      <param name="NPer">Required. Double specifying total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</param>
      <param name="PV">Required. Double specifying present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</param>
      <param name="FV">Optional. Double specifying future value or cash balance you want after you've made the final payment. For example, the future value of a loan is $0 because that's its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.</param>
      <param name="Due">Optional. Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due. This argument must be either DueDate.EndOfPeriod if payments are due at the end of the payment period, or DueDate.BegOfPeriod if payments are due at the beginning of the period. If omitted, DueDate.EndOfPeriod is assumed.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Per" /> &lt;= 0 or <paramref name="Per" /> &gt; <paramref name="NPer" /></exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)">
      <summary>Returns a Double specifying the internal rate of return for a series of periodic cash flows (payments and receipts).</summary>
      <returns>Returns a Double specifying the internal rate of return for a series of periodic cash flows (payments and receipts).</returns>
      <param name="ValueArray">Required. Array of Double specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).</param>
      <param name="Guess">Optional. Object specifying value you estimate will be returned by IRR. If omitted, <paramref name="Guess" /> is 0.1 (10 percent).</param>
      <exception cref="T:System.ArgumentException">Array argument values are invalid or <paramref name="Guess" /> &lt;= -1.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)">
      <summary>Returns a Double specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).</summary>
      <returns>Returns a Double specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).</returns>
      <param name="ValueArray">Required. Array of Double specifying cash-flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).</param>
      <param name="FinanceRate">Required. Double specifying interest rate paid as the cost of financing.</param>
      <param name="ReinvestRate">Required. Double specifying interest rate received on gains from cash reinvestment.</param>
      <exception cref="T:System.ArgumentException">Rank of <paramref name="ValueArray" /> does not equal 1, <paramref name="FinanceRate" /> = -1, or <paramref name="ReinvestRate" /> = -1</exception>
      <exception cref="T:System.DivideByZeroException">Division by zero has occurred.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Returns a Double specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</summary>
      <returns>Returns a Double specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</returns>
      <param name="Rate">Required. Double specifying interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</param>
      <param name="Pmt">Required. Double specifying payment to be made each period. Payments usually contain principal and interest that does not change over the life of the annuity.</param>
      <param name="PV">Required. Double specifying present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</param>
      <param name="FV">Optional. Double specifying future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.</param>
      <param name="Due">Optional. Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due. This argument must be either DueDate.EndOfPeriod if payments are due at the end of the payment period, or DueDate.BegOfPeriod if payments are due at the beginning of the period. If omitted, DueDate.EndOfPeriod is assumed.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Rate" /> &lt;= -1.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Rate" /> = 0 and <paramref name="Pmt" /> = 0</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)">
      <summary>Returns a Double specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</summary>
      <returns>Returns a Double specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</returns>
      <param name="Rate">Required. Double specifying discount rate over the length of the period, expressed as a decimal.</param>
      <param name="ValueArray">Required. Array of Double specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ValueArray" /> is Nothing, rank of <paramref name="ValueArray" /> &lt;&gt; 1, or <paramref name="Rate" /> = -1 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Returns a Double specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.</summary>
      <returns>Returns a Double specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.</returns>
      <param name="Rate">Required. Double specifies the interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</param>
      <param name="NPer">Required. Double specifies the total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 × 12 (or 48) payment periods.</param>
      <param name="PV">Required. Double specifies the present value (or lump sum) that a series of payments to be paid in the future is worth now. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</param>
      <param name="FV">Optional. Double specifying future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 during 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.</param>
      <param name="Due">Optional. Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due. This argument must be either DueDate.EndOfPeriod if payments are due at the end of the payment period, or DueDate.BegOfPeriod if payments are due at the beginning of the period. If omitted, DueDate.EndOfPeriod is assumed.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="NPer" /> = 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Returns a Double specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</summary>
      <returns>Returns a Double specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</returns>
      <param name="Rate">Required. Double specifies the interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</param>
      <param name="Per">Required. Double specifies the payment period in the range 1 through <paramref name="NPer" />.</param>
      <param name="NPer">Required. Double specifies the total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</param>
      <param name="PV">Required. Double specifies the current value of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</param>
      <param name="FV">Optional. Double specifying future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.</param>
      <param name="Due">Optional. Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due. This argument must be either DueDate.EndOfPeriod if payments are due at the end of the payment period, or DueDate.BegOfPeriod if payments are due at the beginning of the period. If omitted, DueDate.EndOfPeriod is assumed.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Per" /> &lt;=0 or <paramref name="Per" /> &gt; <paramref name="NPer" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Returns a Double specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</summary>
      <returns>Returns a Double specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</returns>
      <param name="Rate">Required. Double specifies the interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</param>
      <param name="NPer">Required. Double specifies the total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has 4 x 12 (or 48) payment periods.</param>
      <param name="Pmt">Required. Double specifies the payment to be made each period. Payments usually contain principal and interest that does not change during the life of the annuity.</param>
      <param name="FV">Optional. Double specifies the future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.</param>
      <param name="Due">Optional. Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due. This argument must be either DueDate.EndOfPeriod if payments are due at the end of the payment period, or DueDate.BegOfPeriod if payments are due at the beginning of the period. If omitted, DueDate.EndOfPeriod is assumed.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)">
      <summary>Returns a Double specifying the interest rate per period for an annuity.</summary>
      <returns>Returns a Double specifying the interest rate per period for an annuity.</returns>
      <param name="NPer">Required. Double specifies the total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 * 12 (or 48) payment periods.</param>
      <param name="Pmt">Required. Double specifies the payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.</param>
      <param name="PV">Required. Double specifies the present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</param>
      <param name="FV">Optional. Double specifies the future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.</param>
      <param name="Due">Optional. Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due. This argument must be either DueDate.EndOfPeriod if payments are due at the end of the payment period, or DueDate.BegOfPeriod if payments are due at the beginning of the period. If omitted, DueDate.EndOfPeriod is assumed.</param>
      <param name="Guess">Optional. Double specifying value you estimate is returned by Rate. If omitted, <paramref name="Guess" /> is 0.1 (10 percent).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="NPer" /> &lt;= 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)">
      <summary>Returns a Double specifying the straight-line depreciation of an asset for a single period.</summary>
      <returns>Returns a Double specifying the straight-line depreciation of an asset for a single period.</returns>
      <param name="Cost">Required. Double specifying initial cost of the asset.</param>
      <param name="Salvage">Required. Double specifying value of the asset at the end of its useful life.</param>
      <param name="Life">Required. Double specifying length of the useful life of the asset.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Life" /> = 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)">
      <summary>Returns a Double specifying the sum-of-years digits depreciation of an asset for a specified period.</summary>
      <returns>Returns a Double specifying the sum-of-years digits depreciation of an asset for a specified period.</returns>
      <param name="Cost">Required. Double specifying the initial cost of the asset.</param>
      <param name="Salvage">Required. Double specifying the value of the asset at the end of its useful life.</param>
      <param name="Life">Required. Double specifying the length of the useful life of the asset.</param>
      <param name="Period">Required. Double specifying the period for which asset depreciation is calculated.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &gt; <paramref name="Life" />, or <paramref name="Period" /> &lt;=0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstDayOfWeek">
      <summary>Indicates the first day of the week to use when calling date-related functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.System">
      <summary>The first day of the week as specified in your system settings This member is equivalent to the Visual Basic constant vbUseSystemDayOfWeek.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday">
      <summary>Sunday (default) This member is equivalent to the Visual Basic constant vbSunday.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Monday">
      <summary>Monday This member is equivalent to the Visual Basic constant vbMonday.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Tuesday">
      <summary>Tuesday This member is equivalent to the Visual Basic constant vbTuesday.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Wednesday">
      <summary>Wednesday This member is equivalent to the Visual Basic constant vbWednesday.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Thursday">
      <summary>Thursday This member is equivalent to the Visual Basic constant vbThursday.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Friday">
      <summary>Friday This member is equivalent to the Visual Basic constant vbFriday.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Saturday">
      <summary>Saturday This member is equivalent to the Visual Basic constant vbSaturday.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstWeekOfYear">
      <summary>Indicates the first week of the year to use when calling date-related functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.System">
      <summary>The weekspecified in your system settings as the first week of the year. This member is equivalent to the Visual Basic constant vbUseSystem.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1">
      <summary>The week in which January 1 occurs (default). This member is equivalent to the Visual Basic constant vbFirstJan1.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFourDays">
      <summary>The first week that has at least four days in the new year. This member is equivalent to the Visual Basic constant vbFirstFourDays.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFullWeek">
      <summary>The first full week of the year. This member is equivalent to the Visual Basic constant vbFirstFullWeek.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Globals">
      <summary>The Globals module contains script engine functions. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Globals.ScriptEngine">
      <summary>Returns a String representing the runtime currently in use.</summary>
      <returns>Returns a String representing the runtime currently in use.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Globals.ScriptEngineBuildVersion">
      <summary>Returns an Integer containing the build version number of the runtime currently in use.</summary>
      <returns>Returns an Integer containing the build version number of the runtime currently in use.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Globals.ScriptEngineMajorVersion">
      <summary>Returns an Integer containing the major version number of the runtime currently in use.</summary>
      <returns>Returns an Integer containing the major version number of the runtime currently in use.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Globals.ScriptEngineMinorVersion">
      <summary>Returns an Integer containing the minor version number of the runtime currently in use.</summary>
      <returns>Returns an Integer containing the minor version number of the runtime currently in use.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.HideModuleNameAttribute">
      <summary>The HideModuleNameAttribute attribute, when applied to a module, allows the module members to be accessed using only the qualification needed for the module.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.HideModuleNameAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.HideModuleNameAttribute" /> attribute. </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Information">
      <summary>The Information module contains the procedures used to return, test for, or verify information. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Erl">
      <summary>Returns an integer indicating the line number of the last executed statement. Read-only.</summary>
      <returns>Returns an integer indicating the line number of the last executed statement. Read-only.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Err">
      <summary>Contains information about run-time errors.</summary>
      <returns>Contains information about run-time errors.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
      <summary>Returns a Boolean value indicating whether a variable points to an array.</summary>
      <returns>Returns a Boolean value indicating whether a variable points to an array.</returns>
      <param name="VarName">Required. Object variable.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
      <summary>Returns a Boolean value indicating whether an expression represents a valid Date value.</summary>
      <returns>Returns a Boolean value indicating whether an expression represents a valid Date value.</returns>
      <param name="Expression">Required. Object expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
      <summary>Returns a Boolean value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</summary>
      <returns>Returns a Boolean value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</returns>
      <param name="Expression">Required. Object expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
      <summary>Returns a Boolean value indicating whether an expression is an exception type.</summary>
      <returns>Returns a Boolean value indicating whether an expression is an exception type.</returns>
      <param name="Expression">Required. Object expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
      <summary>Returns a Boolean value indicating whether an expression has no object assigned to it.</summary>
      <returns>Returns a Boolean value indicating whether an expression has no object assigned to it.</returns>
      <param name="Expression">Required. Object expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
      <summary>Returns a Boolean value indicating whether an expression can be evaluated as a number.</summary>
      <returns>Returns a Boolean value indicating whether an expression can be evaluated as a number.</returns>
      <param name="Expression">Required. Object expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
      <summary>Returns a Boolean value indicating whether an expression evaluates to a reference type.</summary>
      <returns>Returns a Boolean value indicating whether an expression evaluates to a reference type.</returns>
      <param name="Expression">Required. Object expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
      <summary>Returns the lowest available subscript for the indicated dimension of an array.</summary>
      <returns>Integer. The lowest value the subscript for the specified dimension can contain. LBound always returns 0 as long as <paramref name="Array" /> has been initialized, even if it has no elements, for example if it is a zero-length string. If <paramref name="Array" /> is Nothing, LBound throws an <see cref="T:System.ArgumentNullException" />.</returns>
      <param name="Array">Required. Array of any data type. The array in which you want to find the lowest possible subscript of a dimension.</param>
      <param name="Rank">Optional. Integer. The dimension for which the lowest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If <paramref name="Rank" /> is omitted, 1 is assumed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Array" /> is Nothing.</exception>
      <exception cref="T:System.RankException">
        <paramref name="Rank" /> &lt; 1 or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
      <summary>Returns an Integer value representing the RGB color code corresponding to the specified color number.</summary>
      <returns>Returns an Integer value representing the RGB color code corresponding to the specified color number.</returns>
      <param name="Color">Required. A whole number in the range 0–15.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Color" /> is outside of range 0 to 15, inclusive.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
      <summary>Returns an Integer value representing an RGB color value from a set of red, green and blue color components.</summary>
      <returns>Returns an Integer value representing an RGB color value from a set of red, green and blue color components.</returns>
      <param name="Red">Required. Integer in the range 0–255, inclusive, that represents the intensity of the red component of the color.</param>
      <param name="Green">Required. Integer in the range 0–255, inclusive, that represents the intensity of the green component of the color.</param>
      <param name="Blue">Required. Integer in the range 0–255, inclusive, that represents the intensity of the blue component of the color.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Green" />, <paramref name="Blue" />, or <paramref name="Red" /> outside of range 0 and 255, inclusive.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
      <summary>Returns a String value containing the system data type name of a variable.</summary>
      <returns>Returns a String value containing the system data type name of a variable.</returns>
      <param name="VbName">Required. A String variable containing a Visual Basic type name.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
      <summary>Returns a String value containing data-type information about a variable.</summary>
      <returns>Returns a String value containing data-type information about a variable.</returns>
      <param name="VarName">Required. Object variable. If Option Strict is Off, you can pass a variable of any data type except a structure.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
      <summary>Returns the highest available subscript for the indicated dimension of an array.</summary>
      <returns>Integer. The highest value the subscript for the specified dimension can contain. If <paramref name="Array" /> has only one element, UBound returns 0. If <paramref name="Array" /> has no elements, for example if it is a zero-length string, UBound returns -1. </returns>
      <param name="Array">Required. Array of any data type. The array in which you want to find the highest possible subscript of a dimension.</param>
      <param name="Rank">Optional. Integer. The dimension for which the highest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If <paramref name="Rank" /> is omitted, 1 is assumed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Array" /> is Nothing</exception>
      <exception cref="T:System.RankException">
        <paramref name="Rank" /> is less than 1 or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
      <summary>Returns an Integer value containing the data type classification of a variable.</summary>
      <returns>Returns an Integer value containing the data type classification of a variable.</returns>
      <param name="VarName">Required. Object variable. If Option Strict is Off, you can pass a variable of any data type except a structure.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
      <summary>Returns a String value containing the Visual Basic data type name of a variable.</summary>
      <returns>Returns a String value containing the Visual Basic data type name of a variable.</returns>
      <param name="UrtName">Required. String variable containing a type name used by the common language runtime.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Interaction">
      <summary>The Interaction module contains procedures used to interact with objects, applications, and systems. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
      <summary>Activates an application that is already running.</summary>
      <param name="ProcessId">Integer specifying the Win32 process ID number assigned to this process. You can use the ID returned by the <see cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />, provided it is not zero.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="AllWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
      <summary>Activates an application that is already running.</summary>
      <param name="Title">String expression specifying the title in the title bar of the application you want to activate. You can use the title assigned to the application when it was launched.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="AllWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Beep">
      <summary>Sounds a tone through the computer's speaker.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>Executes a method on an object, or sets or returns a property on an object.</summary>
      <returns>Executes a method on an object, or sets or returns a property on an object.</returns>
      <param name="ObjectRef">Required. Object. A pointer to the object exposing the property or method.</param>
      <param name="ProcName">Required. String. A string expression containing the name of the property or method on the object.</param>
      <param name="UseCallType">Required. An enumeration member of type <see cref="T:Microsoft.VisualBasic.CallType" /> representing the type of procedure being called. The value of CallType can be Method, Get, or Set.</param>
      <param name="Args">Optional. ParamArray. A parameter array containing the arguments to be passed to the property or method being called.</param>
      <exception cref="T:System.ArgumentException">Invalid <paramref name="UseCallType" /> value; must be Method, Get, or Set.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
      <summary>Selects and returns a value from a list of arguments.</summary>
      <returns>Selects and returns a value from a list of arguments.</returns>
      <param name="Index">Required. Double. Numeric expression that results in a value between 1 and the number of elements passed in the <paramref name="Choice" /> argument.</param>
      <param name="Choice">Required. Object parameter array. You can supply either a single variable or an expression that evaluates to the Object data type, to a list of Object variables or expressions separated by commas, or to a single-dimensional array of Object elements.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Command">
      <summary>Returns the argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic. The My feature provides greater productivity and performance than the Command function. For more information, see <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />.</summary>
      <returns>Returns the argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic.The My feature provides greater productivity and performance than the Command function. For more information, see <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="Path" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
      <summary>Creates and returns a reference to a COM object. CreateObject cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.</summary>
      <returns>Creates and returns a reference to a COM object. CreateObject cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.</returns>
      <param name="ProgId">Required. String. The program ID of the object to create.</param>
      <param name="ServerName">Optional. String. The name of the network server where the object will be created. If <paramref name="ServerName" /> is an empty string (""), the local computer is used.</param>
      <exception cref="T:System.Exception">
        <paramref name="ProgId" /> not found or not supplied-or-<paramref name="ServerName" /> fails the DnsValidateName function, most likely because it is longer than 63 characters or contains an invalid character.</exception>
      <exception cref="T:System.Exception">Server is unavailable</exception>
      <exception cref="T:System.IO.FileNotFoundException">No object of the specified type exists</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="COMPUTERNAME" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
      <summary>Deletes a section or key setting from an application's entry in the Windows registry. The My feature gives you greater productivity and performance in registry operations than the DeleteSetting function. For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /> .</summary>
      <param name="AppName">Required. String expression containing the name of the application or project to which the section or key setting applies.</param>
      <param name="Section">Required. String expression containing the name of the section from which the key setting is being deleted. If only <paramref name="AppName" /> and <paramref name="Section" /> are provided, the specified section is deleted along with all related key settings.</param>
      <param name="Key">Optional. String expression containing the name of the key setting being deleted.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Section" />, <paramref name="AppName" />, or <paramref name="Key" /> setting does not exist.</exception>
      <exception cref="T:System.ArgumentException">User is not logged in. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
      <summary>Returns the string associated with an operating-system environment variable. </summary>
      <returns>Returns the string associated with an operating-system environment variable. </returns>
      <param name="Expression">Required. Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> is missing.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
      <summary>Returns the string associated with an operating-system environment variable. </summary>
      <returns>Returns the string associated with an operating-system environment variable. </returns>
      <param name="Expression">Required. Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> is missing.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
      <summary>Returns a list of key settings and their respective values (originally created with SaveSetting) from an application's entry in the Windows registry. Using the My feature gives you greater productivity and performance in registry operations than GetAllSettings. For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</summary>
      <returns>Returns a list of key settings and their respective values (originally created with SaveSetting) from an application's entry in the Windows registry.Using the My feature gives you greater productivity and performance in registry operations than GetAllSettings. For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</returns>
      <param name="AppName">Required. String expression containing the name of the application or project whose key settings are requested.</param>
      <param name="Section">Required. String expression containing the name of the section whose key settings are requested. GetAllSettings returns an object that contains a two-dimensional array of strings. The strings contain all the key settings in the specified section, plus their corresponding values.</param>
      <exception cref="T:System.ArgumentException">User is not logged in. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
      <summary>Returns a reference to an object provided by a COM component.</summary>
      <returns>Returns a reference to an object provided by a COM component.</returns>
      <param name="PathName">Optional. String. The full path and name of the file containing the object to retrieve. If <paramref name="PathName" /> is omitted, <paramref name="Class" /> is required.</param>
      <param name="Class">Required if <paramref name="PathName" /> is not supplied. String. A string representing the class of the object. The <paramref name="Class" /> argument has the following syntax and parts:<paramref name="appname" />.<paramref name="objecttype" />ParameterDescription<paramref name="appname" />Required. String. The name of the application providing the object.<paramref name="objecttype" />Required. String. The type or class of object to create.</param>
      <exception cref="T:System.Exception">No object of the specified class type exists.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No object with the specified path and file name exists.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
      <summary>Returns a key setting value from an application's entry in the Windows registry. The My feature gives you greater productivity and performance in registry operations than GetAllSettings. For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</summary>
      <returns>Returns a key setting value from an application's entry in the Windows registry.The My feature gives you greater productivity and performance in registry operations than GetAllSettings. </returns>
      <param name="AppName">Required. String expression containing the name of the application or project whose key setting is requested.</param>
      <param name="Section">Required. String expression containing the name of the section in which the key setting is found.</param>
      <param name="Key">Required. String expression containing the name of the key setting to return.</param>
      <param name="Default">Optional. Expression containing the value to return if no value is set in the <paramref name="Key" /> setting. If omitted, <paramref name="Default" /> is assumed to be a zero-length string ("").</param>
      <exception cref="T:System.ArgumentException">One or more arguments are not String expressions, or user is not logged in.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
      <summary>Returns one of two objects, depending on the evaluation of an expression.</summary>
      <returns>Returns one of two objects, depending on the evaluation of an expression.</returns>
      <param name="Expression">Required. Boolean. The expression you want to evaluate.</param>
      <param name="TruePart">Required. Object. Returned if <paramref name="Expression" /> evaluates to True.</param>
      <param name="FalsePart">Required. Object. Returned if <paramref name="Expression" /> evaluates to False.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.</summary>
      <returns>Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.</returns>
      <param name="Prompt">Required String expression displayed as the message in the dialog box. The maximum length of <paramref name="Prompt" /> is approximately 1024 characters, depending on the width of the characters used. If <paramref name="Prompt" /> consists of more than one line, you can separate the lines using a carriage return character (Chr(13)), a line feed character (Chr(10)), or a carriage return/line feed combination (Chr(13) &amp; Chr(10)) between each line.</param>
      <param name="Title">Optional. String expression displayed in the title bar of the dialog box. If you omit <paramref name="Title" />, the application name is placed in the title bar.</param>
      <param name="DefaultResponse">Optional. String expression displayed in the text box as the default response if no other input is provided. If you omit <paramref name="DefaultResponse" />, the displayed text box is empty.</param>
      <param name="XPos">Optional. Numeric expression that specifies, in twips, the distance of the left edge of the dialog box from the left edge of the screen. If you omit <paramref name="XPos" />, the dialog box is centered horizontally.</param>
      <param name="YPos">Optional. Numeric expression that specifies, in twips, the distance of the upper edge of the dialog box from the top of the screen. If you omit <paramref name="YPos" />, the dialog box is positioned vertically approximately one-third of the way down the screen.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
      <summary>Displays a message in a dialog box, waits for the user to click a button, and then returns an integer indicating which button the user clicked.</summary>
      <returns>ConstantValueOK1Cancel2Abort3Retry4Ignore5Yes6No7</returns>
      <param name="Prompt">Required. String expression displayed as the message in the dialog box. The maximum length of <paramref name="Prompt" /> is approximately 1024 characters, depending on the width of the characters used. If <paramref name="Prompt" /> consists of more than one line, you can separate the lines using a carriage return character (Chr(13)), a line feed character (Chr(10)), or a carriage return/linefeed character combination (Chr(13) &amp; Chr(10)) between each line.</param>
      <param name="Buttons">Optional. Numeric expression that is the sum of values specifying the number and type of buttons to display, the icon style to use, the identity of the default button, and the modality of the message box. If you omit <paramref name="Buttons" />, the default value is zero.</param>
      <param name="Title">Optional. String expression displayed in the title bar of the dialog box. If you omit <paramref name="Title" />, the application name is placed in the title bar.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Prompt" /> is not a String expression, or <paramref name="Title" /> is invalid.</exception>
      <exception cref="T:System.InvalidOperationException">Process is not running in User Interactive mode.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">One or more parameters not a member of MsgBoxResult or MsgBoxStyle enumeration.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>Returns a string representing the calculated range that contains a number.</summary>
      <returns>Returns a string representing the calculated range that contains a number.</returns>
      <param name="Number">Required. Long. Whole number that you want to locate within one of the calculated ranges.</param>
      <param name="Start">Required. Long. Whole number that indicates the start of the set of calculated ranges. <paramref name="Start" /> cannot be less than 0.</param>
      <param name="Stop">Required. Long. Whole number that indicates the end of the set of calculated ranges. <paramref name="Stop" /> cannot be less than or equal to <paramref name="Start" />.</param>
      <param name="Interval">Required. Long. Whole number that indicates the size of each range calculated between <paramref name="Start" /> and <paramref name="Stop" />. <paramref name="Interval" /> cannot be less than 1.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt; 0, <paramref name="Stop" /> &lt;= <paramref name="Start" />, or <paramref name="Interval" /> &lt; 1.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
      <summary>Saves or creates an application entry in the Windows registry. The My feature gives you greater productivity and performance in registry operations than SaveSetting. For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</summary>
      <param name="AppName">Required. String expression containing the name of the application or project to which the setting applies.</param>
      <param name="Section">Required. String expression containing the name of the section in which the key setting is being saved.</param>
      <param name="Key">Required. String expression containing the name of the key setting being saved.</param>
      <param name="Setting">Required. Expression containing the value to which <paramref name="Key" /> is being set.</param>
      <exception cref="T:System.ArgumentException">Key registry could not be created, or user is not logged in.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
      <summary>Runs an executable program and returns an integer containing the program's process ID if it is still running.</summary>
      <returns>Runs an executable program and returns an integer containing the program's process ID if it is still running.</returns>
      <param name="PathName">Required. String. Name of the program to execute, together with any required arguments and command-line switches. <paramref name="PathName" /> can also include the drive and the directory path or folder.If you do not know the path to the program, you can use the <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" /> to locate it. For example, you can call My.Computer.FileSystem.GetFiles("C:\", True, "testFile.txt"), which returns the full path of every file named testFile.txt anywhere on drive C:\.</param>
      <param name="Style">Optional. AppWinStyle. A value chosen from the <see cref="T:Microsoft.VisualBasic.AppWinStyle" /> specifying the style of the window in which the program is to run. If <paramref name="Style" /> is omitted, Shell uses AppWinStyle.MinimizedFocus, which starts the program minimized and with focus. </param>
      <param name="Wait">Optional. Boolean. A value indicating whether the Shell function should wait for completion of the program. If <paramref name="Wait" /> is omitted, Shell uses False.</param>
      <param name="Timeout">Optional. Integer. The number of milliseconds to wait for completion if <paramref name="Wait" /> is True. If <paramref name="Timeout" /> is omitted, Shell uses -1, which means there is no timeout and Shell does not return until the program finishes. Therefore, if you omit <paramref name="Timeout" /> or set it to -1, it is possible that Shell might never return control to your program.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Style" /> is not within range 0 through 9, inclusive.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Shell cannot find the <paramref name="PathName" /> file.</exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="PathName" /> is Nothing.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="AllWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
      <summary>Evaluates a list of expressions and returns an Object value corresponding to the first expression in the list that is True.</summary>
      <returns>Evaluates a list of expressions and returns an Object value corresponding to the first expression in the list that is True.</returns>
      <param name="VarExpr">Required. Object parameter array. Must have an even number of elements. You can supply a list of Object variables or expressions separated by commas, or a single-dimensional array of Object elements.</param>
      <exception cref="T:System.ArgumentException">Number of arguments is odd.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxResult">
      <summary>Indicates which button was pressed on a message box, returned by the MsgBox function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ok">
      <summary>OK button was pressed. This member is equivalent to the Visual Basic constant vbOK.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Cancel">
      <summary>Cancel button was pressed. This member is equivalent to the Visual Basic constant vbCancel.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Abort">
      <summary>Abort button was pressed. This member is equivalent to the Visual Basic constant vbAbort.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Retry">
      <summary>Retry button was pressed. This member is equivalent to the Visual Basic constant vbRetry.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ignore">
      <summary>Ignore button was pressed. This member is equivalent to the Visual Basic constant vbIgnore.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Yes">
      <summary>Yes button was pressed. This member is equivalent to the Visual Basic constant vbYes.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.No">
      <summary>No button was pressed. This member is equivalent to the Visual Basic constant vbNo.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.OK">
      <summary />
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxStyle">
      <summary>Indicates which buttons to display when calling the MsgBox function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkOnly">
      <summary>OK button only (default). This member is equivalent to the Visual Basic constant vbOKOnly.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkCancel">
      <summary>OK and Cancel buttons. This member is equivalent to the Visual Basic constant vbOKCancel.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore">
      <summary>Abort, Retry, and Ignore buttons. This member is equivalent to the Visual Basic constant vbAbortRetryIgnore.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel">
      <summary>Yes, No, and Cancel buttons. This member is equivalent to the Visual Basic constant vbYesNoCancel.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo">
      <summary>Yes and No buttons. This member is equivalent to the Visual Basic constant vbYesNo.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel">
      <summary>Retry and Cancel buttons. This member is equivalent to the Visual Basic constant vbRetryCancel.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Critical">
      <summary>Critical message. This member is equivalent to the Visual Basic constant vbCritical.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Question">
      <summary>Warning query. This member is equivalent to the Visual Basic constant vbQuestion.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Exclamation">
      <summary>Warning message. This member is equivalent to the Visual Basic constant vbExclamation.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Information">
      <summary>Information message. This member is equivalent to the Visual Basic constant vbInformation.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton1">
      <summary>First button is default. This member is equivalent to the Visual Basic constant vbDefaultButton1.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton2">
      <summary>Second button is default. This member is equivalent to the Visual Basic constant vbDefaultButton2.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton3">
      <summary>Third button is default. This member is equivalent to the Visual Basic constant vbDefaultButton3.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal">
      <summary>Application modal message box. This member is equivalent to the Visual Basic constant vbApplicationModal.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.SystemModal">
      <summary>System modal message box. This member is equivalent to the Visual Basic constant vbSystemModal.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxHelp">
      <summary>Help text. This member is equivalent to the Visual Basic constant vbMsgBoxHelp.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRight">
      <summary>Right-aligned text. This member is equivalent to the Visual Basic constant vbMsgBoxRight.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRtlReading">
      <summary>Right-to-left reading text (Hebrew and Arabic systems). This member is equivalent to the Visual Basic constant vbMsgBoxRtlReading.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxSetForeground">
      <summary>Foreground message box window. This member is equivalent to the Visual Basic constant vbMsgBoxSetForeground.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OKOnly">
      <summary />
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OKCancel">
      <summary />
    </member>
    <member name="T:Microsoft.VisualBasic.MyGroupCollectionAttribute">
      <summary>This attribute supports My.Forms and My.WebServices in Visual Basic.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyGroupCollectionAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>This attribute supports My.Forms and My.WebServices in Visual Basic.</summary>
      <param name="typeToCollect">String. Initializes the <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName" /> property. The compiler generates accessor properties for classes that derive from this type.</param>
      <param name="createInstanceMethodName">String. Initializes the <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod" /> property. Specifies the method in the class that creates the type's instances.</param>
      <param name="disposeInstanceMethodName">String. Initializes the <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod" /> property. Specifies the method in the class that disposes of the type's instances.</param>
      <param name="defaultInstanceAlias">String. Initializes the <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias" /> property. Specifies the name of the property that returns the default instance of the class.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod">
      <summary>This property supports My in Visual Basic.</summary>
      <returns>Specifies the method in the class that creates the type's instances.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias">
      <summary>This property supports My in Visual Basic.</summary>
      <returns>Specifies the name of the property that returns the default instance of the class.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod">
      <summary>This property supports My in Visual Basic.</summary>
      <returns>Specifies the method in the class that disposes of the type's instances.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName">
      <summary>This property supports My in Visual Basic.</summary>
      <returns>Specifies the name of the type for which the compiler generates accessor properties.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenAccess">
      <summary>Indicates how to open a file when calling file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Default">
      <summary>Read and write access permitted. This is the default.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Read">
      <summary>Read access permitted.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.ReadWrite">
      <summary>Read and write access permitted.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Write">
      <summary>Write access permitted.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenMode">
      <summary>Indicates how to open a file when calling file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Input">
      <summary>File opened for read access.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Output">
      <summary>File opened for write access.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Random">
      <summary>File opened for random access.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Append">
      <summary>File opened to append to it. Default.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Binary">
      <summary>File opened for binary access.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenShare">
      <summary>Indicates how to open a file when calling file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Default">
      <summary>LockReadWrite. This is the default.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Shared">
      <summary>Any process can read or write to the file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockRead">
      <summary>Other processes cannot read the file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockReadWrite">
      <summary>Other processes cannot read or write to the file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockWrite">
      <summary>Other processes cannot write to the file.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.SpcInfo">
      <summary>This class supports the Visual Basic Print and PrintLine functions.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.SpcInfo.Count">
      <summary>This field supports the Visual Basic Print and PrintLine functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Strings">
      <summary>The Strings module contains procedures used to perform string operations. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
      <summary>Returns an Integer value representing the character code corresponding to a character.</summary>
      <returns>Returns an Integer value representing the character code corresponding to a character.</returns>
      <param name="String">Required. Any valid Char or String expression. If <paramref name="String" /> is a String expression, only the first character of the string is used for input. If <paramref name="String" /> is Nothing or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
      <summary>Returns an Integer value representing the character code corresponding to a character.</summary>
      <returns>Returns an Integer value representing the character code corresponding to a character.</returns>
      <param name="String">Required. Any valid Char or String expression. If <paramref name="String" /> is a String expression, only the first character of the string is used for input. If <paramref name="String" /> is Nothing or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
      <summary>Returns an Integer value representing the character code corresponding to a character.</summary>
      <returns>Returns an Integer value representing the character code corresponding to a character.</returns>
      <param name="String">Required. Any valid Char or String expression. If <paramref name="String" /> is a String expression, only the first character of the string is used for input. If <paramref name="String" /> is Nothing or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
      <summary>Returns an Integer value representing the character code corresponding to a character.</summary>
      <returns>Returns an Integer value representing the character code corresponding to a character.</returns>
      <param name="String">Required. Any valid Char or String expression. If <paramref name="String" /> is a String expression, only the first character of the string is used for input. If <paramref name="String" /> is Nothing or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
      <summary>Returns the character associated with the specified character code.</summary>
      <returns>Returns the character associated with the specified character code.</returns>
      <param name="CharCode">Required. An Integer expression representing the code point, or character code, for the character.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCode" /> &lt; 0 or &gt; 255 for Chr.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
      <summary>Returns the character associated with the specified character code.</summary>
      <returns>Returns the character associated with the specified character code.</returns>
      <param name="CharCode">Required. An Integer expression representing the code point, or character code, for the character. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCode" /> &lt; -32768 or &gt; 65535 for ChrW.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>Returns a zero-based array containing a subset of a String array based on specified filter criteria.</summary>
      <returns>Returns a zero-based array containing a subset of a String array based on specified filter criteria.</returns>
      <param name="Source">Required. One-dimensional array of strings to be searched.</param>
      <param name="Match">Required. String to search for.</param>
      <param name="Include">Optional. Boolean value indicating whether to return substrings that include or exclude <paramref name="Match" />. If <paramref name="Include" /> is True, the Filter function returns the subset of the array that contains <paramref name="Match" /> as a substring. If <paramref name="Include" /> is False, the Filter function returns the subset of the array that does not contain <paramref name="Match" /> as a substring.</param>
      <param name="Compare">Optional. Numeric value indicating the kind of string comparison to use. See "Settings" for values.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> is Nothing or is not a one-dimensional array.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>Returns a zero-based array containing a subset of a String array based on specified filter criteria.</summary>
      <returns>Returns a zero-based array containing a subset of a String array based on specified filter criteria.</returns>
      <param name="Source">Required. One-dimensional array of strings to be searched.</param>
      <param name="Match">Required. String to search for.</param>
      <param name="Include">Optional. Boolean value indicating whether to return substrings that include or exclude <paramref name="Match" />. If <paramref name="Include" /> is True, the Filter function returns the subset of the array that contains <paramref name="Match" /> as a substring. If <paramref name="Include" /> is False, the Filter function returns the subset of the array that does not contain <paramref name="Match" /> as a substring.</param>
      <param name="Compare">Optional. Numeric value indicating the kind of string comparison to use. See "Settings" for values.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> is Nothing or is not a one-dimensional array.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
      <summary>Returns a string formatted according to instructions contained in a format String expression.</summary>
      <returns>Returns a string formatted according to instructions contained in a format String expression.</returns>
      <param name="Expression">Required. Any valid expression.</param>
      <param name="Style">Optional. A valid named or user-defined format String expression.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</summary>
      <returns>Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</returns>
      <param name="Expression">Required. Expression to be formatted.</param>
      <param name="NumDigitsAfterDecimal">Optional. Numeric value indicating how many places are displayed to the right of the decimal. Default value is –1, which indicates that the computer's regional settings are used.</param>
      <param name="IncludeLeadingDigit">Optional. <see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not a leading zero is displayed for fractional values. See "Remarks" for values.</param>
      <param name="UseParensForNegativeNumbers">Optional. <see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not to place negative values within parentheses. See "Remarks" for values.</param>
      <param name="GroupDigits">Optional. <see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings. See "Remarks" for values.</param>
      <exception cref="T:System.ArgumentException">Number of digits after decimal point is greater than 99.</exception>
      <exception cref="T:System.InvalidCastException">Type is not numeric.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
      <summary>Returns a string expression representing a date/time value.</summary>
      <returns>Returns a string expression representing a date/time value.</returns>
      <param name="Expression">Required. Date expression to be formatted.</param>
      <param name="NamedFormat">Optional. Numeric value that indicates the date/time format used. If omitted, DateFormat.GeneralDate is used.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="NamedFormat" /> setting is not valid.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Returns an expression formatted as a number.</summary>
      <returns>Returns an expression formatted as a number.</returns>
      <param name="Expression">Required. Expression to be formatted.</param>
      <param name="NumDigitsAfterDecimal">Optional. Numeric value indicating how many places are displayed to the right of the decimal. The default value is –1, which indicates that the computer's regional settings are used.</param>
      <param name="IncludeLeadingDigit">Optional. <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether a leading 0 is displayed for fractional values. See "Settings" for values.</param>
      <param name="UseParensForNegativeNumbers">Optional. <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether to place negative values within parentheses. See "Settings" for values.</param>
      <param name="GroupDigits">Optional. <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See "Settings" for values.</param>
      <exception cref="T:System.InvalidCastException">Type is not numeric.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</summary>
      <returns>Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</returns>
      <param name="Expression">Required. Expression to be formatted.</param>
      <param name="NumDigitsAfterDecimal">Optional. Numeric value indicating how many places to the right of the decimal are displayed. Default value is –1, which indicates that the locale settings are used.</param>
      <param name="IncludeLeadingDigit">Optional. <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not a leading zero displays for fractional values. See "Settings" for values.</param>
      <param name="UseParensForNegativeNumbers">Optional. <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not to place negative values within parentheses. See "Settings" for values.</param>
      <param name="GroupDigits">Optional. <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See "Settings" for values.</param>
      <exception cref="T:System.InvalidCastException">Type is not numeric.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
      <summary>Returns a Char value representing the character from the specified index in the supplied string.</summary>
      <returns>Char value representing the character from the specified index in the supplied string.</returns>
      <param name="str">Required. Any valid String expression.</param>
      <param name="Index">Required. Integer expression. The (1-based) index of the character in <paramref name="str" /> to be returned.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="str" /> is Nothing, <paramref name="Index" /> &lt; 1, or <paramref name="Index" /> is greater than index of last character of <paramref name="str" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Returns an integer specifying the start position of the first occurrence of one string within another.</summary>
      <returns>IfInStr returns<paramref name="String1" /> is zero length or Nothing0<paramref name="String2" /> is zero length or Nothing<paramref name="start" /><paramref name="String2" /> is not found0<paramref name="String2" /> is found within <paramref name="String1" />Position where match begins<paramref name="Start" /> &gt; <paramref name="String2" />0</returns>
      <param name="Start">Optional. Numeric expression that sets the starting position for each search. If omitted, search begins at the first character position. The start index is 1-based.</param>
      <param name="String1">Required. String expression being searched.</param>
      <param name="String2">Required. String expression sought.</param>
      <param name="Compare">Optional. Specifies the type of string comparison. If <paramref name="Compare" /> is omitted, the Option Compare setting determines the type of comparison. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt; 1.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Returns an integer specifying the start position of the first occurrence of one string within another.</summary>
      <returns>IfInStr returns<paramref name="String1" /> is zero length or Nothing0<paramref name="String2" /> is zero length or Nothing<paramref name="start" /><paramref name="String2" /> is not found0<paramref name="String2" /> is found within <paramref name="String1" />Position where match begins<paramref name="Start" /> &gt; <paramref name="String2" />0</returns>
      <param name="String1">Required. String expression being searched.</param>
      <param name="String2">Required. String expression sought.</param>
      <param name="Compare">Optional. Specifies the type of string comparison. If <paramref name="Compare" /> is omitted, the Option Compare setting determines the type of comparison. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt; 1.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Returns the position of the first occurrence of one string within another, starting from the right side of the string.</summary>
      <returns>IfInStrRev returns<paramref name="StringCheck" /> is zero-length0<paramref name="StringMatch" /> is zero-length<paramref name="Start" /><paramref name="StringMatch" /> is not found0<paramref name="StringMatch" /> is found within <paramref name="StringCheck" />Position at which the first match is found, starting with the right side of the string.<paramref name="Start" /> is greater than length of <paramref name="StringMatch" />0</returns>
      <param name="StringCheck">Required. String expression being searched.</param>
      <param name="StringMatch">Required. String expression being searched for.</param>
      <param name="Start">Optional. Numeric expression setting the one-based starting position for each search, starting from the left side of the string. If <paramref name="Start" /> is omitted then –1 is used, meaning the search begins at the last character position. Search then proceeds from right to left.</param>
      <param name="Compare">Optional. Numeric value indicating the kind of comparison to use when evaluating substrings. If omitted, a binary comparison is performed. See Settings for values.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> = 0 or <paramref name="Start" /> &lt; -1.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
      <summary>Returns a string created by joining a number of substrings contained in an array.</summary>
      <returns>Returns a string created by joining a number of substrings contained in an array.</returns>
      <param name="SourceArray">Required. One-dimensional array containing substrings to be joined.</param>
      <param name="Delimiter">Optional. Any string, used to separate the substrings in the returned string. If omitted, the space character (" ") is used. If <paramref name="Delimiter" /> is a zero-length string ("") or Nothing, all items in the list are concatenated with no delimiters.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="SourceArray" /> is not one dimensional.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
      <summary>Returns a string created by joining a number of substrings contained in an array.</summary>
      <returns>Returns a string created by joining a number of substrings contained in an array.</returns>
      <param name="SourceArray">Required. One-dimensional array containing substrings to be joined.</param>
      <param name="Delimiter">Optional. Any string, used to separate the substrings in the returned string. If omitted, the space character (" ") is used. If <paramref name="Delimiter" /> is a zero-length string ("") or Nothing, all items in the list are concatenated with no delimiters.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="SourceArray" /> is not one dimensional.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
      <summary>Returns a string or character converted to lowercase.</summary>
      <returns>Returns a string or character converted to lowercase.</returns>
      <param name="Value">Required. Any valid String or Char expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
      <summary>Returns a string or character converted to lowercase.</summary>
      <returns>Returns a string or character converted to lowercase.</returns>
      <param name="Value">Required. Any valid String or Char expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
      <summary>Returns a string containing a specified number of characters from the left side of a string.</summary>
      <returns>Returns a string containing a specified number of characters from the left side of a string.</returns>
      <param name="str">Required. String expression from which the leftmost characters are returned.</param>
      <param name="Length">Required. Integer expression. Numeric expression indicating how many characters to return. If 0, a zero-length string ("") is returned. If greater than or equal to the number of characters in <paramref name="str" />, the entire string is returned.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Length" /> &lt; 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.String)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
      <summary>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</summary>
      <returns>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</returns>
      <param name="Expression">Any valid String expression or variable name. If <paramref name="Expression" /> is of type Object, the Len function returns the size as it will be written to the file by the FilePut function.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
      <summary>Returns a left-aligned string containing the specified string adjusted to the specified length.</summary>
      <returns>Returns a left-aligned string containing the specified string adjusted to the specified length.</returns>
      <param name="Source">Required. String expression. Name of string variable.</param>
      <param name="Length">Required. Integer expression. Length of returned string.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
      <summary>Returns a string containing a copy of a specified string with no leading spaces (LTrim), no trailing spaces (RTrim), or no leading or trailing spaces (Trim).</summary>
      <returns>Returns a string containing a copy of a specified string with no leading spaces (LTrim), no trailing spaces (RTrim), or no leading or trailing spaces (Trim).</returns>
      <param name="str">Required. Any valid String expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
      <summary>Returns a string containing a specified number of characters from a string.</summary>
      <returns>Returns a string containing a specified number of characters from a string.</returns>
      <param name="str">Required. String expression from which characters are returned.</param>
      <param name="Start">Required. Integer expression. Starting position of the characters to return. If <paramref name="Start" /> is greater than the number of characters in <paramref name="str" />, the Mid function returns a zero-length string (""). <paramref name="Start" /> is one based.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt;= 0 or <paramref name="Length" /> &lt; 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
      <summary>Returns a string containing a specified number of characters from a string.</summary>
      <returns>Returns a string containing a specified number of characters from a string.</returns>
      <param name="str">Required. String expression from which characters are returned.</param>
      <param name="Start">Required. Integer expression. Starting position of the characters to return. If <paramref name="Start" /> is greater than the number of characters in <paramref name="str" />, the Mid function returns a zero-length string (""). <paramref name="Start" /> is one based.</param>
      <param name="Length">Optional. Integer expression. Number of characters to return. If omitted or if there are fewer than <paramref name="Length" /> characters in the text (including the character at position <paramref name="Start" />), all characters from the start position to the end of the string are returned.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt;= 0 or <paramref name="Length" /> &lt; 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Returns a string in which a specified substring has been replaced with another substring a specified number of times.</summary>
      <returns>Replace returns the following values.IfReplace returns<paramref name="Find" /> is zero-length or NothingCopy of <paramref name="Expression" /><paramref name="Replace" /> is zero-lengthCopy of <paramref name="Expression" /> with no occurrences of <paramref name="Find" /><paramref name="Expression" /> is zero-length or Nothing, or <paramref name="Start" /> is greater than length of <paramref name="Expression" />Nothing<paramref name="Count" /> is 0Copy of <paramref name="Expression" /></returns>
      <param name="Expression">Required. String expression containing substring to replace.</param>
      <param name="Find">Required. Substring being searched for.</param>
      <param name="Replacement">Required. Replacement substring.</param>
      <param name="Start">Optional. Position within <paramref name="Expression" /> where substring search is to begin. If omitted, 1 is assumed.</param>
      <param name="Count">Optional. Number of substring substitutions to perform. If omitted, the default value is –1, which means "make all possible substitutions."</param>
      <param name="Compare">Optional. Numeric value indicating the kind of comparison to use when evaluating substrings. See Settings for values.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Count" /> &lt; -1 or <paramref name="Start" /> &lt;= 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
      <summary>Returns a string containing a specified number of characters from the right side of a string.</summary>
      <returns>Returns a string containing a specified number of characters from the right side of a string.</returns>
      <param name="str">Required. String expression from which the rightmost characters are returned.</param>
      <param name="Length">Required. Integer. Numeric expression indicating how many characters to return. If 0, a zero-length string ("") is returned. If greater than or equal to the number of characters in <paramref name="str" />, the entire string is returned.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Length" /> &lt; 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
      <summary>Returns a right-aligned string containing the specified string adjusted to the specified length. </summary>
      <returns>Returns a right-aligned string containing the specified string adjusted to the specified length. </returns>
      <param name="Source">Required. String expression. Name of string variable.</param>
      <param name="Length">Required. Integer expression. Length of returned string.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
      <summary>Returns a string containing a copy of a specified string with no leading spaces (LTrim), no trailing spaces (RTrim), or no leading or trailing spaces (Trim).</summary>
      <returns>Returns a string containing a copy of a specified string with no leading spaces (LTrim), no trailing spaces (RTrim), or no leading or trailing spaces (Trim).</returns>
      <param name="str">Required. Any valid String expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
      <summary>Returns a string consisting of the specified number of spaces.</summary>
      <returns>Returns a string consisting of the specified number of spaces.</returns>
      <param name="Number">Required. Integer expression. The number of spaces you want in the string.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> &lt; 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Returns a zero-based, one-dimensional array containing a specified number of substrings.</summary>
      <returns>String array. If <paramref name="Expression" /> is a zero-length string (""), Split returns a single-element array containing a zero-length string. If <paramref name="Delimiter" /> is a zero-length string, or if it does not appear anywhere in <paramref name="Expression" />, Split returns a single-element array containing the entire <paramref name="Expression" /> string.</returns>
      <param name="Expression">Required. String expression containing substrings and delimiters.</param>
      <param name="Delimiter">Optional. Any single character used to identify substring limits. If <paramref name="Delimiter" /> is omitted, the space character (" ") is assumed to be the delimiter.</param>
      <param name="Limit">Optional. Maximum number of substrings into which the input string should be split. The default, –1, indicates that the input string should be split at every occurrence of the <paramref name="Delimiter" /> string.</param>
      <param name="Compare">Optional. Numeric value indicating the comparison to use when evaluating substrings. See "Settings" for values.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Returns -1, 0, or 1, based on the result of a string comparison. </summary>
      <returns>The StrComp function has the following return values.IfStrComp returns<paramref name="String1" /> sorts ahead of <paramref name="String2" />-1<paramref name="String1" /> is equal to <paramref name="String2" /> 0<paramref name="String1" /> sorts after <paramref name="String2" /> 1</returns>
      <param name="String1">Required. Any valid String expression.</param>
      <param name="String2">Required. Any valid String expression.</param>
      <param name="Compare">Optional. Specifies the type of string comparison. If <paramref name="Compare" /> is omitted, the Option Compare setting determines the type of comparison.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Compare" /> value is not valid.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
      <summary>Returns a string converted as specified.</summary>
      <returns>Returns a string converted as specified.</returns>
      <param name="str">Required. String expression to be converted.</param>
      <param name="Conversion">Required. <see cref="T:Microsoft.VisualBasic.VbStrConv" /> member. The enumeration value specifying the type of conversion to perform.</param>
      <param name="LocaleID">Optional. The LocaleID value, if different from the system LocaleID value. (The system LocaleID value is the default.)</param>
      <exception cref="T:System.ArgumentException">Unsupported <paramref name="LocaleID" />, <paramref name="Conversion" /> &lt; 0 or &gt; 2048, or unsupported conversion for specified locale.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
      <summary>Returns a string or object consisting of the specified character repeated the specified number of times.</summary>
      <returns>Returns a string or object consisting of the specified character repeated the specified number of times.</returns>
      <param name="Number">Required. Integer expression. The length to the string to be returned.</param>
      <param name="Character">Required. Any valid Char, String, or Object expression. Only the first character of the expression will be used. If Character is of type Object, it must contain either a Char or a String value. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> is Nothing.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
      <summary>Returns a string or object consisting of the specified character repeated the specified number of times.</summary>
      <returns>Returns a string or object consisting of the specified character repeated the specified number of times.</returns>
      <param name="Number">Required. Integer expression. The length to the string to be returned.</param>
      <param name="Character">Required. Any valid Char, String, or Object expression. Only the first character of the expression will be used. If Character is of type Object, it must contain either a Char or a String value. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> is Nothing.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
      <summary>Returns a string or object consisting of the specified character repeated the specified number of times.</summary>
      <returns>Returns a string or object consisting of the specified character repeated the specified number of times.</returns>
      <param name="Number">Required. Integer expression. The length to the string to be returned.</param>
      <param name="Character">Required. Any valid Char, String, or Object expression. Only the first character of the expression will be used. If Character is of type Object, it must contain either a Char or a String value. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> is Nothing.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
      <summary>Returns a string in which the character order of a specified string is reversed.</summary>
      <returns>Returns a string in which the character order of a specified string is reversed.</returns>
      <param name="Expression">Required. String expression whose characters are to be reversed. If <paramref name="Expression" /> is a zero-length string (""), a zero-length string is returned.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
      <summary>Returns a string containing a copy of a specified string with no leading spaces (LTrim), no trailing spaces (RTrim), or no leading or trailing spaces (Trim).</summary>
      <returns>Returns a string containing a copy of a specified string with no leading spaces (LTrim), no trailing spaces (RTrim), or no leading or trailing spaces (Trim).</returns>
      <param name="str">Required. Any valid String expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
      <summary>Returns a string or character containing the specified string converted to uppercase.</summary>
      <returns>Returns a string or character containing the specified string converted to uppercase.</returns>
      <param name="Value">Required. Any valid String or Char expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
      <summary>Returns a string or character containing the specified string converted to uppercase.</summary>
      <returns>Returns a string or character containing the specified string converted to uppercase.</returns>
      <param name="Value">Required. Any valid String or Char expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.TabInfo">
      <summary>This class supports the Visual Basic Print and PrintLine functions.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.TabInfo.Column">
      <summary>This field supports the Visual Basic Print and PrintLine functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.TriState">
      <summary>Indicates a Boolean value or whether the default should be used when calling number-formatting functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.False">
      <summary>False. The numeric value of this member is 0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.True">
      <summary>True. The numeric value of this member is -1.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.UseDefault">
      <summary>Default setting. The numeric value of this member is -2.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VariantType">
      <summary>Indicates the type of a variant object, returned by the VarType function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Empty">
      <summary>Null reference. This member is equivalent to the Visual Basic constant vbEmpty.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Null">
      <summary>Null object. This member is equivalent to the Visual Basic constant vbNull.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Short">
      <summary>Short. (-32,768 through 32,767.)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Integer">
      <summary>Integer. (-2,147,483,648 through 2,147,483,647.) This member is equivalent to the Visual Basic constant vbInteger.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Single">
      <summary>Single. (-3.402823E+38 through -1.401298E-45 for negative values; 1.401298E-45 through 3.402823E+38 for positive values.) This member is equivalent to the Visual Basic constant vbSingle.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Double">
      <summary>Double. (-1.79769313486231E+308 through -4.94065645841247E-324 for negative values; 4.94065645841247E-324 through 1.79769313486231E+308 for positive values.) This member is equivalent to the Visual Basic constant vbDouble.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Currency">
      <summary>Currency. This member is equivalent to the Visual Basic constant vbCurrency.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Date">
      <summary>Date. (0:00:00 on January 1, 0001 through 11:59:59 PM on December 31, 9999.) This member is equivalent to the Visual Basic constant vbDate.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.String">
      <summary>String. (0 to approximately 2 billion Unicode characters.) This member is equivalent to the Visual Basic constant vbString.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Object">
      <summary>Any type can be stored in a variable of type Object. This member is equivalent to the Visual Basic constant vbObject.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Error">
      <summary>
        <see cref="T:System.Exception" />
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Boolean">
      <summary>Boolean. (True or False.) This member is equivalent to the Visual Basic constant vbBoolean.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Variant">
      <summary>Variant. This member is equivalent to the Visual Basic constant vbVariant.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.DataObject">
      <summary>DataObject.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Decimal">
      <summary>Decimal. (0 through +/-79,228,162,514,264,337,593,543,950,335 with no decimal point; 0 through +/-7.9228162514264337593543950335 with 28 places to the right of the decimal; smallest non-zero number is +/-0.0000000000000000000000000001.) This member is equivalent to the Visual Basic constant vbDecimal.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Byte">
      <summary>Byte. (0 through 255.) This member is equivalent to the Visual Basic constant vbByte.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Char">
      <summary>Char. (0 through 65535.) This member is equivalent to the Visual Basic constant vbChar.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Long">
      <summary>Long. (-9,223,372,036,854,775,808 through 9,223,372,036,854,775,807.) This member is equivalent to the Visual Basic constant vbLong.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.UserDefinedType">
      <summary>User-defined type. Each member of the structure has a range determined by its data type and independent of the ranges of the other members. This member is equivalent to the Visual Basic constant vbUserDefinedType.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Array">
      <summary>Array. This member is equivalent to the Visual Basic constant vbArray.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedArrayAttribute">
      <summary>Indicates that an array in a structure or non-local variable should be treated as a fixed-length array.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32)">
      <summary>Initializes the value of the Bounds property.</summary>
      <param name="UpperBound1">Initializes the value of upper field, which represents the size of the first dimension of the array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32,System.Int32)">
      <summary>Initializes the value of the Bounds property.</summary>
      <param name="UpperBound1">Initializes the value of upper field, which represents the size of the first dimension of the array.</param>
      <param name="UpperBound2">Initializes the value of upper field, which represents the size of the second dimension of the array.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Bounds">
      <summary>Returns the bounds of the array.</summary>
      <returns>Contains an integer array that represents the bounds of the array.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Length">
      <summary>Returns the size of the array.</summary>
      <returns>Contains an integer that represents the number of elements in the array.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedStringAttribute">
      <summary>Indicates that a string should be treated as if it were fixed length.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedStringAttribute.#ctor(System.Int32)">
      <summary>Initializes the value of the SizeConst field.</summary>
      <param name="Length">The length of the fixed string.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedStringAttribute.Length">
      <summary>Gets the length of the string.</summary>
      <returns>Returns the length of the string.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.VBMath">
      <summary>The VbMath module contains procedures used to perform mathematical operations. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize">
      <summary>Initializes the random-number generator.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
      <summary>Initializes the random-number generator.</summary>
      <param name="Number">Optional. An Object or any valid numeric expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd">
      <summary>Returns a random number of type Single.</summary>
      <returns>The next random number in the sequence.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
      <summary>Returns a random number of type Single.</summary>
      <returns>If number is less than zero, Rnd generates the same number every time, using <paramref name="Number" /> as the seed. If number is greater than zero, Rnd generates the next random number in the sequence. If number is equal to zero, Rnd generates the most recently generated number. If number is not supplied, Rnd generates the next random number in the sequence.</returns>
      <param name="Number">Optional. A Single value or any valid Single expression.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.VbStrConv">
      <summary>Indicates which type of conversion to perform when calling the StrConv function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.None">
      <summary>Performs no conversion.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Uppercase">
      <summary>Converts the string to uppercase characters. This member is equivalent to the Visual Basic constant vbUpperCase.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Lowercase">
      <summary>Converts the string to lowercase characters. This member is equivalent to the Visual Basic constant vbLowerCase.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.ProperCase">
      <summary>Converts the first letter of every word in the string to uppercase. This member is equivalent to the Visual Basic constant vbProperCase.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Wide">
      <summary>Converts narrow (single-byte) characters in the string to wide (double-byte) characters. Applies to Asian locales. This member is equivalent to the Visual Basic constant vbWide.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Narrow">
      <summary>Converts wide (double-byte) characters in the string to narrow (single-byte) characters. Applies to Asian locales. This member is equivalent to the Visual Basic constant vbNarrow.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Katakana">
      <summary>Converts Hiragana characters in the string to Katakana characters. Applies to Japanese locale only. This member is equivalent to the Visual Basic constant vbKatakana.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Hiragana">
      <summary>Converts Katakana characters in the string to Hiragana characters. Applies to Japanese locale only. This member is equivalent to the Visual Basic constant vbHiragana.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.SimplifiedChinese">
      <summary>Converts the string to Simplified Chinese characters. This member is equivalent to the Visual Basic constant vbSimplifiedChinese.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.TraditionalChinese">
      <summary>Converts the string to Traditional Chinese characters. This member is equivalent to the Visual Basic constant vbTraditionalChinese.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LinguisticCasing">
      <summary>Converts the string from file system rules for casing to linguistic rules. This member is equivalent to the Visual Basic constant vbLinguisticCasing.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.UpperCase">
      <summary />
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LowerCase">
      <summary />
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
      <summary>Provides properties, methods, and events related to the current application.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)">
      <summary>Changes the culture used by the current thread for string manipulation and for string formatting.</summary>
      <param name="cultureName">String. Name of the culture as a string. For a list of possible names, see <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> is Nothing.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> is not a valid culture name.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)">
      <summary>Changes the culture that the current thread uses for retrieving culture-specific resources.</summary>
      <param name="cultureName">String. Name of the culture as a string. For a list of possible names, see <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> is Nothing.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> is not a valid culture name.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture">
      <summary>Gets the culture that the current thread uses for string manipulation and string formatting.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture the current thread uses for string manipulation and string formatting.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)">
      <summary>Returns the value of the specified environment variable.</summary>
      <returns>A String containing the value of the environment variable with the name <paramref name="name" />.</returns>
      <param name="name">A String containing the name of the environment variable.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is Nothing.</exception>
      <exception cref="T:System.ArgumentException">The environment variable specified by <paramref name="name" /> does not exist.</exception>
      <exception cref="T:System.Security.SecurityException">The calling code does not have <see cref="T:System.Security.Permissions.EnvironmentPermission" /> with Read access.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info">
      <summary>Gets an object that provides properties for getting information about the application's assembly, such as the version number, description, and so on. </summary>
      <returns>The <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> object for the current application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log">
      <summary>Gets an object that provides properties and methods for writing event and exception information to the application's log listeners. </summary>
      <returns>The <see cref="T:Microsoft.VisualBasic.Logging.Log" /> object for the current application.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture">
      <summary>Gets the culture that the current thread uses for retrieving culture-specific resources.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture that the current thread uses for retrieving culture-specific resources.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
      <summary>Provides properties for getting the information about the application, such as the version number, description, loaded assemblies, and so on.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> class with the specified assembly information. </summary>
      <param name="currentAssembly">
        <see cref="T:System.Reflection.Assembly" />. The assembly for which to obtain the information.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName">
      <summary>Gets the name, without the extension, of the assembly file for the application.</summary>
      <returns>A String containing the file name.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName">
      <summary>Gets the company name associated with the application.</summary>
      <returns>A String that contains the company name associated with the application.</returns>
      <exception cref="T:System.InvalidOperationException">The assembly does not have an <see cref="T:System.Reflection.AssemblyCompanyAttribute" /> attribute.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright">
      <summary>Gets the copyright notice associated with the application.</summary>
      <returns>A String containing the copyright notice associated with the application.</returns>
      <exception cref="T:System.InvalidOperationException">The assembly does not have an <see cref="T:System.Reflection.AssemblyCopyrightAttribute" /> attribute.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description">
      <summary>Gets the description associated with the application.</summary>
      <returns>A String containing the description associated with the application.</returns>
      <exception cref="T:System.InvalidOperationException">The assembly does not have an <see cref="T:System.Reflection.AssemblyDescriptionAttribute" /> attribute.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath">
      <summary>Gets the directory where the application is stored.</summary>
      <returns>A String that contains the directory where the application is stored.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies">
      <summary>Gets a collection of all assemblies loaded by the application.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Reflection.Assembly" /> containing all the assemblies loaded by the application.</returns>
      <exception cref="T:System.AppDomainUnloadedException">The application domain is not loaded.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName">
      <summary>Gets the product name associated with the application.</summary>
      <returns>A String containing the product name associated with the application.</returns>
      <exception cref="T:System.InvalidOperationException">The assembly does not have an <see cref="T:System.Reflection.AssemblyProductAttribute" /> attribute.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace">
      <summary>Gets the current stack-trace information.</summary>
      <returns>A String containing the current stack-trace information. The return value can be <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The requested stack-trace information is out of range.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title">
      <summary>Gets the title associated with the application.</summary>
      <returns>A String containing the <see cref="T:System.Reflection.AssemblyTitleAttribute" /> associated with the application.</returns>
      <exception cref="T:System.InvalidOperationException">The assembly does not have an <see cref="T:System.Reflection.AssemblyTitleAttribute" /> attribute.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark">
      <summary>Gets the trademark notice associated with the application.</summary>
      <returns>A String containing the trademark notice associated with the application.</returns>
      <exception cref="T:System.InvalidOperationException">The assembly does not have an <see cref="T:System.Reflection.AssemblyTrademarkAttribute" /> attribute.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version">
      <summary>Gets the version number of the application.</summary>
      <returns>A <see cref="T:System.Version" /> object containing the version number of the application.</returns>
      <exception cref="T:System.Security.SecurityException">The application does not have sufficient permissions to access the assembly version.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet">
      <summary>Gets the amount of physical memory mapped to the process context.</summary>
      <returns>A Long containing the number of bytes of physical memory mapped to the process context.</returns>
      <exception cref="T:System.Security.SecurityException">A situation in which partial trust exists and the user lacks necessary permissions.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode">
      <summary>Indicates how a Visual Basic application authenticates the user for the My.User object.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows">
      <summary>The <see cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)" /> constructor initializes the principal for the application's main thread with the current user's Windows user information. </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.ApplicationDefined">
      <summary>The <see cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)" /> constructor does not initialize the principal for the application's main thread. The application needs to initialize the principal for the application's main thread.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole">
      <summary>Indicates the type of role to check when calling the <see cref="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)" /> method.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.AccountOperator">
      <summary>Account operators manage the user accounts on a computer or domain.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.Administrator">
      <summary>Administrators have complete and unrestricted access to the computer or domain.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.BackupOperator">
      <summary>Backup operators can override security restrictions for the sole purpose of backing up or restoring files.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.Guest">
      <summary>Guests are more restricted than users.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.PowerUser">
      <summary>Power users possess most administrative permissions with some restrictions. Thus, power users can run legacy applications, in addition to certified applications.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.PrintOperator">
      <summary>Print operators can take control of a printer.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.Replicator">
      <summary>Replicators support file replication in a domain.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.SystemOperator">
      <summary>System operators manage a particular computer.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.User">
      <summary>Users are prevented from making accidental or intentional system-wide changes. Thus, users can run certified applications, but not most legacy applications.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter">
      <summary>Provides a type converter to convert <see cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" /> enumeration values to <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> enumeration values.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</summary>
      <returns>A <see cref="T:System.Boolean" /> object that indicates whether this converter can perform the conversion.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that provides a format context. </param>
      <param name="destinationType">A <see cref="T:System.Type" /> object that represents the type you wish to convert to. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given object to another type.</summary>
      <returns>The converted object.</returns>
      <param name="context">A formatter context. </param>
      <param name="culture">The culture into which <paramref name="value" /> will be converted.</param>
      <param name="value">The object to convert. </param>
      <param name="destinationType">The type to convert the object to. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is Nothing.</exception>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException">
      <summary>This exception is thrown when a subsequent instance of a single-instance application is unable to connect to the first application instance.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> class with a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">A <see cref="T:System.String" /> object describing the error.</param>
      <param name="inner">The <see cref="T:System.Exception" /> object that is the cause of the current exception. If the <see cref="P:System.Exception.InnerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a Catch block that handles the inner exception.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase">
      <summary>Provides properties, methods, and events related to the current application.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs">
      <summary>Gets a collection containing the command-line arguments as strings for the current application.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of String, containing the command-line arguments as strings for the current application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment">
      <summary>Gets the current application's ClickOnce deployment object, which provides support for updating the current deployment programmatically and support for the on-demand download of files.</summary>
      <returns>Returns the <see cref="T:System.Deployment.Application.ApplicationDeployment" /> object for the application's ClickOnce deployment.</returns>
      <exception cref="T:System.Deployment.Application.InvalidDeploymentException">The application is not deployed as a ClickOnce application.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine">
      <summary>Sets the values to use as the current application's command-line arguments.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of String, containing the strings to use as the command-line arguments for the current application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed">
      <summary>Gets a Boolean that represents whether the application was deployed from a network using ClickOnce.</summary>
      <returns>A Boolean that represents whether the application was deployed from a network. The value is True if the current application was deployed from a network; otherwise the value is False.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException">
      <summary>This exception is thrown by the Visual Basic Application Model when the <see cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" /> property has not been set.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> class with a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">A <see cref="T:System.String" /> object describing the error.</param>
      <param name="inner">The <see cref="T:System.Exception" /> object that is the cause of the current exception. If the <see cref="P:System.Exception.InnerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler">
      <summary>Represents the method that will handle the My.Application.Shutdown event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.EventArgs" /> object that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ShutdownMode">
      <summary>Indicates which condition should cause a Windows Forms application to shut down.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses">
      <summary>Shut down when the main form closes.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterAllFormsClose">
      <summary>Shut down only after the last form closes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs">
      <summary>Provides data for the My.Application.Startup event. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" /> class.</summary>
      <param name="args">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object that contains the command-line arguments of the application.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine">
      <summary>Gets the command-line arguments of the application.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object that contains the command-line arguments of the application.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventHandler">
      <summary>Represents the method that will handle the My.Application.Startup event. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" /> object that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs">
      <summary>Provides data for the My.Application.StartupNextInstance event. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> class.</summary>
      <param name="args">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object that contains the command-line arguments of the subsequent application instance.</param>
      <param name="bringToForegroundFlag">A <see cref="T:System.Boolean" /> that indicates whether the first application instance should be brought to the foreground upon exiting the exception handler.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground">
      <summary>Indicates whether the first application instance should be brought to the foreground upon exiting the exception handler.</summary>
      <returns>A <see cref="T:System.Boolean" /> that indicates whether the first application instance should be brought to the foreground upon exiting the exception handler.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.CommandLine">
      <summary>Gets the command-line arguments of the subsequent application instance.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object that contains the command-line arguments of the subsequent application instance.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler">
      <summary>Represents the method that will handle the My.Application.StartupNextInstance event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs">
      <summary>Provides data for the My.Application.UnhandledException event. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor(System.Boolean,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" /> class.</summary>
      <param name="exitApplication">A <see cref="T:System.Boolean" /> that indicates whether the application should exit upon exiting the exception handler.</param>
      <param name="exception">The <see cref="T:System.Exception" /> that occurred. </param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication">
      <summary>Indicates whether the application should exit upon exiting the exception handler.</summary>
      <returns>A <see cref="T:System.Boolean" /> that indicates whether the application should exit upon exiting the exception handler.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler">
      <summary>Represents the method that will handle the My.Application.UnhandledException event. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" /> object that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.User">
      <summary>Provides access to the information about the current user.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal">
      <summary>Gets or sets the current principal (for role-based security).</summary>
      <returns>A <see cref="T:System.Security.Principal.IPrincipal" /> value representing the security context.</returns>
      <exception cref="T:System.Security.SecurityException">The caller does not have the permission required to set the principal.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser">
      <summary>Sets the thread's current principal to the Windows user that started the application.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal">
      <summary>Gets or sets the principal object representing the current user.</summary>
      <returns>An <see cref="T:System.Security.Principal.IPrincipal" /> object representing the current user.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated">
      <summary>Gets a value that indicates whether the user has been authenticated.</summary>
      <returns>True if the user was authenticated; otherwise, False.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)">
      <summary>Determines whether the current user belongs to the specified role. </summary>
      <returns>True if the current user is a member of the specified role; otherwise, False.</returns>
      <param name="role">The built-in Windows role for which to check membership. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)">
      <summary>Determines whether the current user belongs to the specified role. </summary>
      <returns>True if the current user is a member of the specified role; otherwise, False.</returns>
      <param name="role">The name of the role for which to check membership. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.Name">
      <summary>Gets the name of the current user. </summary>
      <returns>String. The name of the current user.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.WebUser">
      <summary>Provides access to the information about the current user.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WebUser.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.WebUser" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal">
      <summary>Gets or sets the principal object representing the current user.</summary>
      <returns>An <see cref="T:System.Security.Principal.IPrincipal" /> object representing the current user.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase">
      <summary>Provides properties, methods, and events related to the current application.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> class with the specified authentication mode.</summary>
      <param name="authenticationMode">
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode" />. Specifies the application's authentication mode.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext">
      <summary>Gets the <see cref="T:System.Windows.Forms.ApplicationContext" /> object for the current thread of a Windows Forms application.</summary>
      <returns>This property returns the <see cref="T:System.Windows.Forms.ApplicationContext" /> object for the current thread. That object contains contextual information about the thread.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents">
      <summary>Processes all Windows messages currently in the message queue.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles">
      <summary>Determines whether this application will use the Windows XP styles for windows, controls, and so on.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether this application will use the XP Windows styles for windows, controls, and so on.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen">
      <summary>Hides the application's splash screen.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance">
      <summary>Determines whether this application is a single-instance application.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether this application is a single-instance application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm">
      <summary>Gets or sets the main form for this application.</summary>
      <returns>Gets or sets the main form for this application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime">
      <summary>Determines the minimum length of time, in milliseconds, for which the splash screen is displayed.</summary>
      <returns>Integer. The minimum length of time, in milliseconds, for which the splash screen is displayed.</returns>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged">
      <summary>Occurs when the network availability changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm">
      <summary>When overridden in a derived class, allows a designer to emit code that configures the splash screen and main form.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen">
      <summary>When overridden in a derived class, allows a designer to emit code that initializes the splash screen.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>Sets the visual styles, text display styles, and current principal for the main application thread (if the application uses Windows authentication), and initializes the splash screen, if defined.</summary>
      <returns>A <see cref="T:System.Boolean" /> indicating if application startup should continue.</returns>
      <param name="commandLineArgs">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of String, containing the command-line arguments as strings for the current application.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun">
      <summary>Provides the starting point for when the main application is ready to start running, after the initialization is done.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown">
      <summary>When overridden in a derived class, allows for code to run when the application shuts down.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)">
      <summary>When overridden in a derived class, allows for code to run when the application starts.</summary>
      <returns>A <see cref="T:System.Boolean" /> that indicates if the application should continue starting up.</returns>
      <param name="eventArgs">
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />. Contains the command-line arguments of the application and indicates whether the application startup should be canceled.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)">
      <summary>When overridden in a derived class, allows for code to run when a subsequent instance of a single-instance application starts.</summary>
      <param name="eventArgs">
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />. Contains the command-line arguments of the subsequent application instance and indicates whether the first application instance should be brought to the foreground upon exiting the exception handler.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)">
      <summary>When overridden in a derived class, allows for code to run when an unhandled exception occurs in the application.</summary>
      <returns>A <see cref="T:System.Boolean" /> that indicates whether the <see cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" /> event was raised.</returns>
      <param name="e">
        <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms">
      <summary>Gets a collection of all the application's open forms.</summary>
      <returns>A <see cref="T:System.Windows.Forms.FormCollection" /> object that contains all of the application's open forms.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="AllWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])">
      <summary>Sets up and starts the Visual Basic Application model. </summary>
      <param name="commandLine">Array of type String. The command line from Sub Main.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal, RemotingConfiguration" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit">
      <summary>Determines whether the application saves the user settings on exit.</summary>
      <returns>Boolean. True indicates that the application saves the user settings on exit. Otherwise, the settings are not implicitly saved.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen">
      <summary>Determines if the application has a splash screen defined, and if it does, displays it.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown">
      <summary>Occurs when the application shuts down.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle">
      <summary>Determines what happens when the application's main form closes.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.ApplicationServices.ShutdownMode" /> enumeration value, indicating what the application should do when the main form closes.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen">
      <summary>Gets or sets the splash screen for this application.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Form" /> object that the application uses as the splash screen.</returns>
      <exception cref="T:System.ArgumentNullException">The same value is assigned to this property and the <see cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" />  property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup">
      <summary>Occurs when the application starts.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance">
      <summary>Occurs when attempting to start a single-instance application and the application is already active.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException">
      <summary>Occurs when the application encounters an unhandled exception.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering">
      <summary>When overridden in a derived class, this property allows a designer to specify the default text rendering engine for the application's forms.</summary>
      <returns>Boolean. A value of False indicates that the application should use the default text rendering engine for Visual Basic 2005. A value of True indicates that the application should use the text rendering engine for Visual Basic .NET 2002 and Visual Basic .NET 2003.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.BooleanType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromObject(System.Object)">
      <summary>Returns a Boolean value that corresponds to the specified object.</summary>
      <returns>The Boolean value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Boolean value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromString(System.String)">
      <summary>Returns a Boolean value that corresponds to the specified string. </summary>
      <returns>The Boolean value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Boolean value.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ByteType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromObject(System.Object)">
      <summary>Returns a Byte value that corresponds to the specified object. </summary>
      <returns>The Byte value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Byte value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromString(System.String)">
      <summary>Returns a Byte value that corresponds to the specified string. </summary>
      <returns>The Byte value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Byte value.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharArrayType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromObject(System.Object)">
      <summary>Returns a CharArray value that corresponds to the specified object. </summary>
      <returns>The CharArray value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a CharArray value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromString(System.String)">
      <summary>Returns a CharArray value that corresponds to the specified string. </summary>
      <returns>The CharArray value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a CharArray value.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromObject(System.Object)">
      <summary>Returns a Char value that corresponds to the specified object. </summary>
      <returns>The Char value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Char value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromString(System.String)">
      <summary>Returns a Char value that corresponds to the specified string. </summary>
      <returns>The Char value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Char value.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Conversions">
      <summary>Provides methods that perform various type conversions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ChangeType(System.Object,System.Type)">
      <summary>Converts an object to the specified type.</summary>
      <returns>An object of the specified target type.</returns>
      <param name="Expression">The object to convert.</param>
      <param name="TargetType">The type to which to convert the object.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FallbackUserDefinedConversion(System.Object,System.Type)">
      <summary>Executes a late-bound call to a user-defined conversion expression. This helper method is not meant to be called directly from your code.</summary>
      <returns>The result returned from the user-defined conversion expression.</returns>
      <param name="Expression">The user-defined conversion expression.</param>
      <param name="TargetType">The type to convert to.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharAndCount(System.Char,System.Int32)">
      <summary>Converts a <see cref="T:System.Char" /> value to a string, given a byte count.</summary>
      <returns>The string representation of the specified value.</returns>
      <param name="Value">The Char value to convert.</param>
      <param name="Count">The byte count of the Char value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArray(System.Char[])">
      <summary>Converts a <see cref="T:System.Char" /> array to a string.</summary>
      <returns>The string representation of the specified array.</returns>
      <param name="Value">The Char array to convert.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArraySubset(System.Char[],System.Int32,System.Int32)">
      <summary>Converts a subset of a <see cref="T:System.Char" /> array to a string.</summary>
      <returns>The string representation of the specified array from the start position to the specified length.</returns>
      <param name="Value">The Char array to convert.</param>
      <param name="StartIndex">Zero-based index of the start position.</param>
      <param name="Length">Length of the subset in bytes.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.Object)">
      <summary>Converts an object to a <see cref="T:System.Boolean" /> value.</summary>
      <returns>A Boolean value. Returns False if the object is null; otherwise, True.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.String)">
      <summary>Converts a string to a <see cref="T:System.Boolean" /> value.</summary>
      <returns>A Boolean value. Returns False if the string is null; otherwise, True.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.Object)">
      <summary>Converts an object to a <see cref="T:System.Byte" /> value.</summary>
      <returns>The Byte value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.String)">
      <summary>Converts a string to a <see cref="T:System.Byte" /> value.</summary>
      <returns>The Byte value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.Object)">
      <summary>Converts an object to a <see cref="T:System.Char" /> value.</summary>
      <returns>The Char value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.String)">
      <summary>Converts a string to a <see cref="T:System.Char" /> value.</summary>
      <returns>The Char value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.Object)">
      <summary>Converts an object to a one-dimensional <see cref="T:System.Char" /> array.</summary>
      <returns>A one-dimensional Char array.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.String)">
      <summary>Converts a string to a one-dimensional <see cref="T:System.Char" /> array.</summary>
      <returns>A one-dimensional Char array.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.Object)">
      <summary>Converts an object to a <see cref="T:System.DateTime" /> value.</summary>
      <returns>The DateTime value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.String)">
      <summary>Converts a string to a <see cref="T:System.DateTime" /> value.</summary>
      <returns>The DateTime value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Boolean)">
      <summary>Converts a <see cref="T:System.Boolean" /> value to a <see cref="T:System.Decimal" /> value.</summary>
      <returns>The Decimal value of the Boolean value.</returns>
      <param name="Value">A Boolean value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Object)">
      <summary>Converts an object to a <see cref="T:System.Decimal" /> value.</summary>
      <returns>The Decimal value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.String)">
      <summary>Converts a string to a <see cref="T:System.Decimal" /> value.</summary>
      <returns>The Decimal value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.Object)">
      <summary>Converts an object to a <see cref="T:System.Double" /> value.</summary>
      <returns>The Double value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.String)">
      <summary>Converts a string to a <see cref="T:System.Double" /> value.</summary>
      <returns>The Double value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToGenericParameter``1(System.Object)">
      <summary>Converts an object to a generic type <paramref name="T" />.</summary>
      <returns>A structure or object of generic type <paramref name="T" />.</returns>
      <param name="Value">The object to convert.</param>
      <typeparam name="T">The type to convert <paramref name="Value" /> to.</typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.Object)">
      <summary>Converts an object to an integer value.</summary>
      <returns>The int value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.String)">
      <summary>Converts a string to an integer value.</summary>
      <returns>The int value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.Object)">
      <summary>Converts an object to a Long value.</summary>
      <returns>The Long value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.String)">
      <summary>Converts a string to a Long value.</summary>
      <returns>The Long value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.Object)">
      <summary>Converts an object to an <see cref="T:System.SByte" /> value.</summary>
      <returns>The SByte value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.String)">
      <summary>Converts a string to an <see cref="T:System.SByte" /> value.</summary>
      <returns>The SByte value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.Object)">
      <summary>Converts an object to a Short value.</summary>
      <returns>The Short value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.String)">
      <summary>Converts a string to a Short value.</summary>
      <returns>The Short value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.Object)">
      <summary>Converts an object to a <see cref="T:System.Single" /> value.</summary>
      <returns>The Single value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.String)">
      <summary>Converts a <see cref="T:System.String" /> to a <see cref="T:System.Single" /> value.</summary>
      <returns>The Single value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Boolean)">
      <summary>Converts a <see cref="T:System.Boolean" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The String representation of the Boolean value.</returns>
      <param name="Value">The Boolean value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Byte)">
      <summary>Converts a <see cref="T:System.Byte" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The String representation of the Byte value.</returns>
      <param name="Value">The Byte value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Char)">
      <summary>Converts a <see cref="T:System.Char" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The String representation of the Char value.</returns>
      <param name="Value">The Char value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.DateTime)">
      <summary>Converts a <see cref="T:System.DateTime" /> value to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the DateTime value.</returns>
      <param name="Value">The DateTime value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal)">
      <summary>Converts a <see cref="T:System.Decimal" /> value to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the Decimal value.</returns>
      <param name="Value">The Decimal value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>Converts a <see cref="T:System.Decimal" /> value to a <see cref="T:System.String" /> value, using the specified number format.</summary>
      <returns>The String representation of the Decimal value.</returns>
      <param name="Value">The decimal value to convert.</param>
      <param name="NumberFormat">The number format to use, according to <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double)">
      <summary>Converts a <see cref="T:System.Double" /> value to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the Double value.</returns>
      <param name="Value">The Double value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>Converts a <see cref="T:System.Double" /> value to a <see cref="T:System.String" /> value, using the specified number format.</summary>
      <returns>The String representation of the Double value.</returns>
      <param name="Value">The Double value to convert.</param>
      <param name="NumberFormat">The number format to use, according to <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int16)">
      <summary>Converts a Short value to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the Short value.</returns>
      <param name="Value">The Short value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int32)">
      <summary>Converts an integer value to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the int value.</returns>
      <param name="Value">The int value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int64)">
      <summary>Converts a Long value to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the Long value.</returns>
      <param name="Value">The Long value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Object)">
      <summary>Converts an object to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single)">
      <summary>Converts a <see cref="T:System.Single" /> value (a single-precision floating point number) to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the Single value.</returns>
      <param name="Value">The Single value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>Converts a <see cref="T:System.Single" /> value to a <see cref="T:System.String" /> value, using the specified number format.</summary>
      <returns>The String representation of the Single value.</returns>
      <param name="Value">The Single value to convert.</param>
      <param name="NumberFormat">The number format to use, according to <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt32)">
      <summary>Converts a uint value to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the Uint value.</returns>
      <param name="Value">The Uint value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt64)">
      <summary>Converts a Ulong value to a <see cref="T:System.String" /> value.</summary>
      <returns>The String representation of the Ulong value.</returns>
      <param name="Value">The Ulong value to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.Object)">
      <summary>Converts an object to a Uint value.</summary>
      <returns>The Uint value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.String)">
      <summary>Converts a string to a Uint value.</summary>
      <returns>The Uint value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.Object)">
      <summary>Converts an object to a Ulong value.</summary>
      <returns>The Ulong value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.String)">
      <summary>Converts a string to a Ulong value.</summary>
      <returns>The Ulong value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.Object)">
      <summary>Converts an object to a Ushort value.</summary>
      <returns>The Ushort value of the object.</returns>
      <param name="Value">The object to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.String)">
      <summary>Converts a string to a Ushort value.</summary>
      <returns>The Ushort value of the string.</returns>
      <param name="Value">The string to convert.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DateType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromObject(System.Object)">
      <summary>Returns a Date value that corresponds to the specified object. </summary>
      <returns>The Date value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Date value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String)">
      <summary>Returns a Date value that corresponds to the specified string.</summary>
      <returns>The Date value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Date value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String,System.Globalization.CultureInfo)">
      <summary>Returns a Date value that corresponds to the specified string and culture information. </summary>
      <returns>The Date value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Date value.</param>
      <param name="culture">Required. A <see cref="T:System.Globalization.CultureInfo" /> object that defines how date values are formatted and displayed, depending on the culture.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DecimalType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromBoolean(System.Boolean)">
      <summary>Returns a Decimal value that corresponds to the specified Boolean value. </summary>
      <returns>The Decimal value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Boolean value to convert to a Decimal value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object)">
      <summary>Returns a Decimal value that corresponds to the specified object. </summary>
      <returns>The Decimal value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Decimal value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Returns a Decimal value that corresponds to the specified object and number format information. </summary>
      <returns>The Decimal value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Decimal value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String)">
      <summary>Returns a Decimal value that corresponds to the specified string. </summary>
      <returns>The Decimal value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Decimal value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Returns a Decimal value that corresponds to the specified string and number format information. </summary>
      <returns>The Decimal value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Decimal value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Returns a Decimal value that corresponds to the specified string and number format information. </summary>
      <returns>The Decimal value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Decimal value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute">
      <summary>When applied to a class, the compiler implicitly calls a component-initializing method from the default synthetic constructor.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute" /> attribute.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DoubleType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object)">
      <summary>Returns a Double value that corresponds to the specified object. </summary>
      <returns>The Double value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Double value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Returns a Double value that corresponds to the specified object. </summary>
      <returns>The Double value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Double value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String)">
      <summary>Returns a Double value that corresponds to the specified string. </summary>
      <returns>The Double value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Double value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Returns a Double value that corresponds to the specified string and number format information. </summary>
      <returns>The Double value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Double value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String)">
      <summary>Returns a Double value that corresponds to the specified string. </summary>
      <returns>The Double value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Double value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Returns a Double value that corresponds to the specified string and number format information. </summary>
      <returns>The Double value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Double value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ExceptionUtils">
      <summary>Provides exception handling support for the Visual Basic runtime. This class is not intended to be used from your code.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.FlowControl">
      <summary>Provides services to the Visual Basic compiler for compiling For...Next and For Each loops.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary>Checks for a synchronization lock on the specified type.</summary>
      <param name="obj">The data type for which to check for synchronization lock.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInArr(System.Array)">
      <summary>Gets the enumerator for an array being iterated over in a For Each loop.</summary>
      <returns>The enumerator for <paramref name="ary" />.</returns>
      <param name="ary">An array being iterated over in a For Each loop.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInObj(System.Object)">
      <summary>Gets the enumerator for an object being iterated over in a For Each loop.</summary>
      <returns>The enumerator for <paramref name="obj" />.</returns>
      <param name="obj">An object being iterated over in a For Each loop.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachNextObj(System.Object@,System.Collections.IEnumerator)">
      <summary>Sets a reference to the next object in a For Each loop.</summary>
      <returns>True if <paramref name="obj" /> refers to the next object; False if there are no more objects and <paramref name="obj" /> is Nothing.</returns>
      <param name="obj">The range variable of the For Each loop.</param>
      <param name="enumerator">The <see cref="T:System.Collections.IEnumerator" /> of the object being iterated over in the For Each loop.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary>Initializes a For...Next loop.</summary>
      <returns>False if the loop has terminated; otherwise, True.</returns>
      <param name="Counter">The loop counter variable.</param>
      <param name="Start">The initial value of the loop counter.</param>
      <param name="Limit">The value of the To option.</param>
      <param name="StepValue">The value of the Step option.</param>
      <param name="LoopForResult">An object that contains verified values for loop values.</param>
      <param name="CounterResult">The counter value for the next loop iteration.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary>Checks for valid values for the loop counter, Step, and To values.</summary>
      <returns>True if <paramref name="StepValue" /> is greater than zero and <paramref name="count" /> is less than or equal to <paramref name="limit" />, or if <paramref name="StepValue" /> is less than or equal to zero and <paramref name="count" /> is greater than or equal to <paramref name="limit" />; otherwise, False.</returns>
      <param name="count">Required. A Decimal value that represents the initial value passed for the loop counter variable.</param>
      <param name="limit">Required. A Decimal value that represents the value passed by using the To keyword.</param>
      <param name="StepValue">Required. A Decimal value that represents the value passed by using the Step keyword.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary>Increments a For...Next loop.</summary>
      <returns>False if the loop has terminated; otherwise, True.</returns>
      <param name="Counter">The loop counter variable.</param>
      <param name="LoopObj">An object that contains verified values for loop values.</param>
      <param name="CounterResult">The counter value for the next loop iteration.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary>Checks for valid values for the loop counter, Step, and To values.</summary>
      <returns>True if <paramref name="StepValue" /> is greater than zero and <paramref name="count" /> is less than or equal to <paramref name="limit" />, or if <paramref name="StepValue" /> is less than or equal to zero and <paramref name="count" /> is greater than or equal to <paramref name="limit" />; otherwise, False.</returns>
      <param name="count">Required. A Single value that represents the initial value passed for the loop counter variable.</param>
      <param name="limit">Required. A Single value that represents the value passed by using the To keyword.</param>
      <param name="StepValue">Required. A Single value that represents the value passed by using the Step keyword.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary>Checks for valid values for the loop counter, Step, and To values.</summary>
      <returns>True if <paramref name="StepValue" /> is greater than zero and <paramref name="count" /> is less than or equal to <paramref name="limit" />, or if <paramref name="StepValue" /> is less than or equal to zero and <paramref name="count" /> is greater than or equal to <paramref name="limit" />; otherwise, False.</returns>
      <param name="count">Required. A Double value that represents the initial value passed for the loop counter variable.</param>
      <param name="limit">Required. A Double value that represents the value passed by using the To keyword.</param>
      <param name="StepValue">Required. A Double value that represents the value passed by using the Step keyword.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.HostServices">
      <summary>Returns a reference to and information about the current Visual Basic host window. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.HostServices.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.HostServices" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.CompilerServices.HostServices.VBHost">
      <summary>Gets the current Visual Basic host object.</summary>
      <returns>A <see cref="P:Microsoft.VisualBasic.CompilerServices.HostServices.VBHost" /> object that returns a reference to and information about the current Visual Basic host window. </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization">
      <summary>The Visual Basic compiler uses this class during static local initialization; it is not meant to be called directly from your code. An exception of this type is thrown if a static local variable fails to initialize.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" /> class.</summary>
      <param name="message">A string representing the message to be sent.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" /> class.</summary>
      <param name="message">A string representing the message to be sent.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IntegerType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromObject(System.Object)">
      <summary>Returns an Integer value that corresponds to the specified object. </summary>
      <returns>The Integer value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to an Integer value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromString(System.String)">
      <summary>Returns an Integer value that corresponds to the specified string. </summary>
      <returns>The Integer value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to an Integer value.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.InternalErrorException">
      <summary>The exception thrown for internal Visual Basic compiler errors. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalErrorException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.InternalErrorException" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalErrorException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.InternalErrorException" /> class, specifying an error message. </summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalErrorException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.InternalErrorException" /> class, specifying an error message and an inner exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current internal exception.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper">
      <summary>Provides properties and methods that support Visual Basic XML literals. This class is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary>Gets or sets the value of an XML attribute. This property is not intended to be used from your code.</summary>
      <returns>The value of the XML attribute identified by the <paramref name="name" /> parameter from the first element in the supplied collection of XML elements. If the collection is empty, returns Nothing.</returns>
      <param name="source">A collection of XML elements to get an attribute value from or set an attribute value for.</param>
      <param name="name">The name of the XML attribute to get a value from or set a value for.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Xml.Linq.XElement,System.Xml.Linq.XName)">
      <summary>Gets or sets the value of an XML attribute. This property is not intended to be used from your code.</summary>
      <returns>The value of the XML attribute identified by the <paramref name="name" /> parameter in the supplied XML element.</returns>
      <param name="source">An XML element to get an attribute value from or set an attribute value for.</param>
      <param name="name">The name of the XML attribute to get a value from or set a value for.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute(System.Xml.Linq.XName,System.Object)">
      <summary>Creates an XML attribute that has the supplied name and value. This method is not intended to be used from your code.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XAttribute" /> object that has the supplied name and value.</returns>
      <param name="name">The name of the XML attribute to create.</param>
      <param name="value">The value to assign to the created XML attribute. If <paramref name="value" /> is Nothing, this method returns Nothing.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute(System.Xml.Linq.XName,System.Xml.Linq.XNamespace)">
      <summary>Creates an XML attribute that has the supplied name and namespace value. This method is not intended to be used from your code.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XAttribute" /> object that has the supplied name and namespace value.</returns>
      <param name="name">The name of the XML attribute to create.</param>
      <param name="ns">The namespace value to assign to the created XML attribute.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Collections.IEnumerable)">
      <summary>Removes XML namespace attributes from an XML element. This method is not intended to be used from your code.</summary>
      <returns>The supplied XML element with the specified XML namespace attributes removed.</returns>
      <param name="inScopePrefixes">The list of XML namespace prefixes for XML elements in the current scope.</param>
      <param name="inScopeNs">The list of XML namespaces for XML elements in the current scope.</param>
      <param name="attributes">The list of namespace attributes to remove from the XML element.</param>
      <param name="obj">The XML element to remove XML namespace attributes from.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Object)">
      <summary>Removes XML namespace attributes from an XML element. This method is not intended to be used from your code.</summary>
      <returns>The supplied XML element with the specified XML namespace attributes removed.</returns>
      <param name="inScopePrefixes">The list of XML namespace prefixes for XML elements in the current scope.</param>
      <param name="inScopeNs">The list of XML namespaces for XML elements in the current scope.</param>
      <param name="attributes">The list of namespace attributes to remove from the XML element.</param>
      <param name="obj">The XML element to remove XML namespace attributes from.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Xml.Linq.XElement)">
      <summary>Removes XML namespace attributes from an XML element. This method is not intended to be used from your code.</summary>
      <returns>The supplied XML element with the specified XML namespace attributes removed.</returns>
      <param name="inScopePrefixes">The list of XML namespace prefixes for XML elements in the current scope.</param>
      <param name="inScopeNs">The list of XML namespaces for XML elements in the current scope.</param>
      <param name="attributes">The list of namespace attributes to remove from the XML element.</param>
      <param name="e">The XML element to remove XML namespace attributes from.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>Gets or sets the value of an XML element. This property is not intended to be used from your code.</summary>
      <returns>The value of the first XML element in the supplied collection. If the collection is empty, returns Nothing.</returns>
      <param name="source">A collection of XML elements to get a value from or set a value for.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IVbHost">
      <summary>Represents a host window for Visual Basic. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IVbHost.GetParentWindow">
      <summary>Gets the host Window for the current Visual Basic environment.</summary>
      <returns>The host window for the current Visual Basic environment.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IVbHost.GetWindowTitle">
      <summary>Gets the title of the host window for the current Visual Basic environment.</summary>
      <returns>The title of the host window for the current Visual Basic environment.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LateBinding">
      <summary>This class has been deprecated since Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>Performs a late-bound call to an object method.</summary>
      <param name="o">The object to call a method on.</param>
      <param name="objType">The type of the object.</param>
      <param name="name">The method name of <paramref name="o" /> to call.</param>
      <param name="args">An array of parameter values to pass to the method.</param>
      <param name="paramnames">An array that contains the names of the parameters to which the values in the <paramref name="args" /> array are passed. </param>
      <param name="CopyBack">An array of Boolean values, where True indicates that the associated parameter is passed ByRef.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>Returns a late-bound value from an object.</summary>
      <returns>If <paramref name="o" /> is an array, the value from <paramref name="o" /> at the location specified by <paramref name="args" />. If <paramref name="o" /> is an object, the return value of <paramref name="o" /> invoked by using the named parameters in <paramref name="paramnames" /> and their associated values in <paramref name="args" />.</returns>
      <param name="o">The object to return the value from.</param>
      <param name="objType">The type of the object.</param>
      <param name="name">The member name of <paramref name="o" /> to retrieve a value from.</param>
      <param name="args">An array of one or more index values that specify the location in <paramref name="o" /> if <paramref name="o" /> is a one-dimensional or multi-dimensional array, or argument values to pass to the object <paramref name="o" />.</param>
      <param name="paramnames">An array that contains the names of the parameters to which the values in the <paramref name="args" /> array are passed. </param>
      <param name="CopyBack">An array of Boolean values, where True indicates that the associated parameter is passed ByRef.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>Returns a late-bound value from an object, using the specified index or parameters.</summary>
      <returns>If <paramref name="o" /> is an array, the value from <paramref name="o" /> at the location specified by <paramref name="args" />. If <paramref name="o" /> is an object, the return value of <paramref name="o" /> invoked by using the named parameters in <paramref name="paramnames" /> and their associated values in <paramref name="args" />.</returns>
      <param name="o">The object to return the value from.</param>
      <param name="args">An array of one or more index values that specify the location in <paramref name="o" /> if <paramref name="o" /> is a one-dimensional or multi-dimensional array, or argument values to pass to the object <paramref name="o" />.</param>
      <param name="paramnames">An array that contains the names of the parameters to which the values in the <paramref name="args" /> array are passed. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Sets a late-bound value of an object, using the specified parameters.</summary>
      <param name="o">The object to set the value for.</param>
      <param name="args">An array of one or more index values that specify the location in <paramref name="o" /> if <paramref name="o" /> is a one-dimensional or multi-dimensional array, or argument values to pass to the object <paramref name="o" />.</param>
      <param name="paramnames">An array that contains the names of the parameters to which the values in the <paramref name="args" /> array are passed. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Sets a late-bound value of an object, using the specified parameters.</summary>
      <param name="o">The object to set the value for.</param>
      <param name="args">An array of one or more parameter values to pass to the object <paramref name="o" />.</param>
      <param name="paramnames">An array that contains the names of the parameters to which the values in the <paramref name="args" /> array are passed. </param>
      <param name="OptimisticSet">True to suppress the exception thrown when the set member is not found.</param>
      <param name="RValueBase">True to identify <paramref name="o" /> as the result of a late-bound expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[])">
      <summary>Sets a late-bound value of a member of an object, using the specified parameters.</summary>
      <param name="o">The object to set the member value for.</param>
      <param name="objType">The type of the object.</param>
      <param name="name">The member name to set.</param>
      <param name="args">An array of one or parameter values to pass to the member of <paramref name="o" />.</param>
      <param name="paramnames">An array that contains the names of the parameters to which the values in the <paramref name="args" /> array are passed. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Sets a late-bound value of a member of an object, using the specified parameters.</summary>
      <param name="o">The object to set the member value for.</param>
      <param name="objType">The type of the object.</param>
      <param name="name">The member name to set.</param>
      <param name="args">An array of one or more parameter values to pass to the member of <paramref name="o" />.</param>
      <param name="paramnames">An array that contains the names of the parameters to which the values in the <paramref name="args" /> array are passed. </param>
      <param name="OptimisticSet">True to suppress the exception thrown when the set member is not found.</param>
      <param name="RValueBase">True to identify <paramref name="o" /> as the result of a late-bound expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LikeOperator">
      <summary>This class provides helpers that the Visual Basic compiler uses to do the work for the Like Operator (Visual Basic). It is not meant to be called directly from your code.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>Performs binary or text string comparison given two objects. This helper method is not meant to be called directly from your code.</summary>
      <returns>A Boolean value indicating whether the strings match. Returns True if the strings match; otherwise False.</returns>
      <param name="Source">The string to compare.</param>
      <param name="Pattern">The string against which <paramref name="Source" /> is being compared.</param>
      <param name="CompareOption">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> enumeration specifying whether or not to use text comparison. If <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, this method uses text comparison; if <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, this method uses binary comparison.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Performs binary or text string comparison given two strings. This helper method is not meant to be called directly from your code.</summary>
      <returns>A Boolean value indicating whether the strings match. Returns True if the strings match; otherwise False.</returns>
      <param name="Source">The string to compare.</param>
      <param name="Pattern">The string against which <paramref name="Source" /> is being compared.</param>
      <param name="CompareOption">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> enumeration specifying whether or not to use text comparison. If <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, this method uses text comparison; if <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, this method uses binary comparison.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LongType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromObject(System.Object)">
      <summary>Returns a Long value that corresponds to the specified object. </summary>
      <returns>The Long value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Long value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromString(System.String)">
      <summary>Returns a Long value that corresponds to the specified string. </summary>
      <returns>The Long value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Long value.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.NewLateBinding">
      <summary>This class provides helpers that the Visual Basic compiler uses for late binding calls; it is not meant to be called directly from your code.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackCall(System.Object,System.String,System.Object[],System.String[],System.Boolean)">
      <summary>Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.</summary>
      <returns>An instance of the call object.</returns>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="MemberName">The name of the property or method on the call object.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="IgnoreReturn">A Boolean value indicating whether or not the return value can be ignored.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackGet(System.Object,System.String,System.Object[],System.String[])">
      <summary>Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.</summary>
      <returns>An instance of the call object.</returns>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="MemberName">The name of the property or method on the call object.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</summary>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</summary>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="OptimisticSet">A Boolean value used to determine whether the set operation will work. Set to True when you believe that an intermediate value has been set in the property or field; otherwise False.</param>
      <param name="RValueBase">A Boolean value that specifies when the base reference of the late reference is an RValue. Set to True when the base reference of the late reference is an RValue; this allows you to generate a run-time exception for late assignments to fields of RValues of value types. Otherwise, set to False.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault1(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Executes a late-bound get of the default property or field, or call to the default method or function. This helper method is not meant to be called directly from your code.</summary>
      <returns>An instance of the call object.</returns>
      <param name="Instance">An instance of the call object exposing the property or method. If <paramref name="Instance" /> is of type <see cref="T:System.Dynamic.IDynamicMetaObjectProvider" />, then bind using the Dynamic Language Runtime; otherwise perform standard late-binding.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="ReportErrors">A Boolean value used to specify whether to throw exceptions when an error is encountered. Set to True to throw exceptions. Set to False to return Nothing when an error is encountered.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault2(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Executes a late-bound get of the default property or field, or call to the default method or function. This helper method is not meant to be called directly from your code.</summary>
      <returns>An instance of the call object.</returns>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="ReportErrors">A Boolean value used to specify whether to throw exceptions when an error is encountered. Set to True to throw exceptions. Set to False to return Nothing when an error is encountered.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSet(System.Object,System.String,System.Object[])">
      <summary>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</summary>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="MemberName">The name of the property or method on the call object.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSetComplex(System.Object,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</summary>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="MemberName">The name of the property or method on the call object.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="OptimisticSet">A Boolean value used to determine whether the set operation will work. Set to True when you believe that an intermediate value has been set in the property or field; otherwise False.</param>
      <param name="RValueBase">A Boolean value that specifies when the base reference of the late reference is an RValue. Set to True when the base reference of the late reference is an RValue; this allows you to generate a run-time exception for late assignments to fields of RValues of value types. Otherwise, set to False.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)">
      <summary>Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.</summary>
      <returns>An instance of the call object.</returns>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Type">The type of the call object.</param>
      <param name="MemberName">The name of the property or method on the call object.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="TypeArguments">An array of argument types; used only for generic calls to pass argument types.</param>
      <param name="CopyBack">An array of Boolean values that the late binder uses to communicate back to the call site which arguments match ByRef parameters. Each True value indicates that the arguments matched and should be copied out after the call to LateCall is complete.</param>
      <param name="IgnoreReturn">A Boolean value indicating whether or not the return value can be ignored.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCallInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Executes a late-bound call to the default method or function. This helper method is not meant to be called directly from your code.</summary>
      <returns>An instance of the call object.</returns>
      <param name="Instance">An instance of the call object exposing the property or method. </param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="ReportErrors">A Boolean value used to specify whether to throw exceptions when an error is encountered. Set to True to throw exceptions. Set to False to return Nothing when an error is encountered.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCanEvaluate(System.Object,System.Type,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary>Indicates whether a call requires late-bound evaluation. This helper method is not meant to be called directly from your code.</summary>
      <returns>A Boolean value that indicates whether the expression requires late-bound evaluation.</returns>
      <param name="instance">An instance of the call object exposing the property or method.</param>
      <param name="type">The type of the call object.</param>
      <param name="memberName">The name of the property or method on the call object.</param>
      <param name="arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="allowFunctionEvaluation">A Boolean value that specifies whether to allow function evaluation.</param>
      <param name="allowPropertyEvaluation">A Boolean value that specifies whether to allow property evaluation.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])">
      <summary>Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.</summary>
      <returns>An instance of the call object.</returns>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Type">The type of the call object.</param>
      <param name="MemberName">The name of the property or method on the call object.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="TypeArguments">An array of argument types; used only for generic calls to pass argument types.</param>
      <param name="CopyBack">An array of Boolean values that the late binder uses to communicate back to the call site which arguments match ByRef parameters. Each True value indicates that the arguments matched and should be copied out after the call to LateCall is complete.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGetInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Executes a late-bound get of the default property or field. This helper method is not meant to be called directly from your code.</summary>
      <returns>An instance of the call object.</returns>
      <param name="Instance">An instance of the call object exposing the property or method. </param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="ReportErrors">A Boolean value used to specify whether to throw exceptions when an error is encountered. Set to True to throw exceptions. Set to False to return Nothing when an error is encountered.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.</summary>
      <returns>An instance of the call object.</returns>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</summary>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</summary>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="OptimisticSet">A Boolean value used to determine whether the set operation will work. Set to True when you believe that an intermediate value has been set in the property or field; otherwise False.</param>
      <param name="RValueBase">A Boolean value that specifies when the base reference of the late reference is an RValue. Set to True when the base reference of the late reference is an RValue; this allows you to generate a run-time exception for late assignments to fields of RValues of value types. Otherwise, set to False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])">
      <summary>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</summary>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Type">The type of the call object.</param>
      <param name="MemberName">The name of the property or method on the call object.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="TypeArguments">An array of argument types; used only for generic calls to pass argument types.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)">
      <summary>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</summary>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Type">The type of the call object.</param>
      <param name="MemberName">The name of the property or method on the call object.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="TypeArguments">An array of argument types; used only for generic calls to pass argument types.</param>
      <param name="OptimisticSet">A Boolean value used to determine whether the set operation will work. Set to True when you believe that an intermediate value has been set in the property or field; otherwise False.</param>
      <param name="RValueBase">A Boolean value that specifies when the base reference of the late reference is an RValue. Set to True when the base reference of the late reference is an RValue; this allows you to generate a run-time exception for late assignments to fields of RValues of value types. Otherwise, set to False.</param>
      <param name="CallType">An enumeration member of type <see cref="T:Microsoft.VisualBasic.CallType" /> representing the type of procedure being called. The value of CallType can be Method, Get, or Set. Only Set is used.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)">
      <summary>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</summary>
      <param name="Instance">An instance of the call object exposing the property or method.</param>
      <param name="Type">The type of the call object.</param>
      <param name="MemberName">The name of the property or method on the call object.</param>
      <param name="Arguments">An array containing the arguments to be passed to the property or method being called.</param>
      <param name="ArgumentNames">An array of argument names.</param>
      <param name="TypeArguments">An array of argument types; used only for generic calls to pass argument types.</param>
      <param name="OptimisticSet">A Boolean value used to determine whether the set operation will work. Set to True when you believe that an intermediate value has been set in the property or field; otherwise False.</param>
      <param name="RValueBase">A Boolean value that specifies when the base reference of the late reference is an RValue. Set to True when the base reference of the late reference is an RValue; this allows you to generate a run-time exception for late assignments to fields of RValues of value types. Otherwise, set to False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl">
      <summary>The Visual Basic compiler uses this class for object flow control; it is not meant to be called directly from your code.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary>Checks for a synchronization lock on the specified type.</summary>
      <param name="Expression">The data type for which to check for synchronization lock.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl">
      <summary>Provides services to the Visual Basic compiler for compiling For...Next loops.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary>Initializes a For...Next loop.</summary>
      <returns>False if the loop has terminated; otherwise, True.</returns>
      <param name="Counter">The loop counter variable.</param>
      <param name="Start">The initial value of the loop counter.</param>
      <param name="Limit">The value of the To option.</param>
      <param name="StepValue">The value of the Step option.</param>
      <param name="LoopForResult">An object that contains verified values for loop values.</param>
      <param name="CounterResult">The counter value for the next loop iteration.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary>Checks for valid values for the loop counter, Step, and To values.</summary>
      <returns>True if <paramref name="StepValue" /> is greater than zero and <paramref name="count" /> is less than or equal to <paramref name="limit" /> or <paramref name="StepValue" /> is less than or equal to zero and <paramref name="count" /> is greater than or equal to <paramref name="limit" />; otherwise, False.</returns>
      <param name="count">Required. A Decimal value that represents the initial value passed for the loop counter variable.</param>
      <param name="limit">Required. A Decimal value that represents the value passed by using the To keyword.</param>
      <param name="StepValue">Required. A Decimal value that represents the value passed by using the Step keyword.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary>Increments a For...Next loop.</summary>
      <returns>False if the loop has terminated; otherwise, True.</returns>
      <param name="Counter">The loop counter variable.</param>
      <param name="LoopObj">An object that contains verified values for loop values.</param>
      <param name="CounterResult">The counter value for the next loop iteration.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary>Checks for valid values for the loop counter, Step, and To values.</summary>
      <returns>True if <paramref name="StepValue" /> is greater than zero and <paramref name="count" /> is less than or equal to <paramref name="limit" />, or if <paramref name="StepValue" /> is less than or equal to zero and <paramref name="count" /> is greater than or equal to <paramref name="limit" />; otherwise, False.</returns>
      <param name="count">Required. A Single value that represents the initial value passed for the loop counter variable.</param>
      <param name="limit">Required. A Single value that represents the value passed by using the To keyword.</param>
      <param name="StepValue">Required. A Single value that represents the value passed by using the Step keyword.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary>Checks for valid values for the loop counter, Step, and To values.</summary>
      <returns>True if <paramref name="StepValue" /> is greater than zero and <paramref name="count" /> is less than or equal to <paramref name="limit" />, or if <paramref name="StepValue" /> is less than or equal to zero and <paramref name="count" /> is greater than or equal to <paramref name="limit" />; otherwise, False.</returns>
      <param name="count">Required. A Double value that represents the initial value passed for the loop counter variable.</param>
      <param name="limit">Required. A Double value that represents the value passed by using the To keyword.</param>
      <param name="StepValue">Required. A Double value that represents the value passed by using the Step keyword.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)">
      <summary>Performs an addition (+) operation.</summary>
      <returns>The sum of <paramref name="o1" /> and <paramref name="o2" />.</returns>
      <param name="o1">Required. Any numeric expression.</param>
      <param name="o2">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)">
      <summary>Performs a bitwise And operation.</summary>
      <returns>1 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 1; otherwise, 0.</returns>
      <param name="obj1">Required. Any Boolean or numeric expression.</param>
      <param name="obj2">Required. Any Boolean or numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)">
      <summary>Performs a bitwise Or operation.</summary>
      <returns>0 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 0; otherwise, 1.</returns>
      <param name="obj1">Required. Any Boolean or numeric expression.</param>
      <param name="obj2">Required. Any Boolean or numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)">
      <summary>Performs an Xor operation.</summary>
      <returns>A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator (Visual Basic).</returns>
      <param name="obj1">Required. Any Boolean or numeric expression.</param>
      <param name="obj2">Required. Any Boolean or numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)">
      <summary>Performs a division (/) operation.</summary>
      <returns>The full quotient of <paramref name="o1" /> divided by <paramref name="o2" />, including any remainder.</returns>
      <param name="o1">Required. Any numeric expression.</param>
      <param name="o2">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)">
      <summary>Returns a boxed primitive value. This method is used to prevent copying structures multiple times.</summary>
      <returns>The primitive value of <paramref name="o" /> typed as object.</returns>
      <param name="o">Required. Any expression.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)">
      <summary>Performs an integer division (\) operation.</summary>
      <returns>The integer quotient of <paramref name="o1" /> divided by <paramref name="o2" />, which discards any remainder and retains only the integer portion.</returns>
      <param name="o1">Required. Any numeric expression.</param>
      <param name="o2">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>Performs a Like comparison.</summary>
      <returns>True if the string representation of the value in <paramref name="vLeft" /> satisfies the pattern that is contained in <paramref name="vRight" />; otherwise, False. True if both <paramref name="vLeft" /> and <paramref name="vRight" /> are Nothing.</returns>
      <param name="vLeft">Required. Any expression.</param>
      <param name="vRight">Required. Any string expression conforming to the pattern-matching conventions described in Like Operator (Visual Basic).</param>
      <param name="CompareOption">Required. A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)">
      <summary>Performs a modulus (Mod) operation.</summary>
      <returns>The remainder after <paramref name="o1" /> is divided by <paramref name="o2" />. </returns>
      <param name="o1">Required. Any numeric expression.</param>
      <param name="o2">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)">
      <summary>Performs a multiplication (*) operation.</summary>
      <returns>The product of <paramref name="o1" /> and <paramref name="o2" />.</returns>
      <param name="o1">Required. Any numeric expression.</param>
      <param name="o2">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)">
      <summary>Performs a unary minus (–) operation.</summary>
      <returns>The negative value of <paramref name="obj" />.</returns>
      <param name="obj">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)">
      <summary>Performs a Not operation.</summary>
      <returns>For Boolean operations, False if <paramref name="obj" /> is True; otherwise, True. For bitwise operations, 1 if <paramref name="obj" /> is 0; otherwise, 0.</returns>
      <param name="obj">Required. Any Boolean or numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)">
      <summary>Performs binary or text string comparison when given two objects.</summary>
      <returns>Value Condition -1 <paramref name="o1" /> is less than <paramref name="o2" />. 0<paramref name="o1" /> is equal to <paramref name="o2" />. 1 <paramref name="o1" /> is greater than <paramref name="o2" />. </returns>
      <param name="o1">Required. Any expression.</param>
      <param name="o2">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)">
      <summary>Performs a unary plus (+) operation.</summary>
      <returns>The value of <paramref name="obj" />. (The sign of the <paramref name="obj" /> is unchanged.)</returns>
      <param name="obj">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)">
      <summary>Performs an exponent (^) operation.</summary>
      <returns>The result of <paramref name="obj1" /> raised to the power of <paramref name="obj2" />.</returns>
      <param name="obj1">Required. Any numeric expression.</param>
      <param name="obj2">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)">
      <summary>Performs an arithmetic left shift (&lt;&lt;) operation.</summary>
      <returns>An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of <paramref name="o1" />.</returns>
      <param name="o1">Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (SByte, Byte, Short, UShort, Integer, UInteger, Long, or ULong).</param>
      <param name="amount">Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be Integer or widen to Integer.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)">
      <summary>Performs an arithmetic right shift (&gt;&gt;) operation.</summary>
      <returns>An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of <paramref name="o1" />.</returns>
      <param name="o1">Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (SByte, Byte, Short, UShort, Integer, UInteger, Long, or ULong).</param>
      <param name="amount">Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be Integer or widen to Integer.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)">
      <summary>Performs a string concatenation (&amp;) operation.</summary>
      <returns>A string representing the concatenation of <paramref name="vLeft" /> and <paramref name="vRight" />.</returns>
      <param name="vLeft">Required. Any expression.</param>
      <param name="vRight">Required. Any expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)">
      <summary>Performs a subtraction (–) operation.</summary>
      <returns>The difference between <paramref name="o1" /> and <paramref name="o2" />.</returns>
      <param name="o1">Required. Any numeric expression. </param>
      <param name="o2">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)">
      <summary>Performs an Xor comparison.</summary>
      <returns>A Boolean or numeric value. For a Boolean comparison, the return value is the logical exclusion (exclusive logical disjunction) of two Boolean values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator (Visual Basic).</returns>
      <param name="obj1">Required. Any Boolean or numeric expression.</param>
      <param name="obj2">Required. Any Boolean or numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Operators">
      <summary>Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic addition (+) operator.</summary>
      <returns>The sum of <paramref name="Left" /> and <paramref name="Right" />.</returns>
      <param name="Left">Required. Any numeric expression.</param>
      <param name="Right">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic And operator.</summary>
      <returns>For Boolean operations, True if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to True; otherwise, False. For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</returns>
      <param name="Left">Required. Any Boolean or numeric expression.</param>
      <param name="Right">Required. Any Boolean or numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
      <summary>Represents Visual Basic comparison operators.</summary>
      <returns>Value Condition -1 <paramref name="Left" /> is less than <paramref name="Right" />.0 <paramref name="Left" /> and <paramref name="Right" /> are equal.1 <paramref name="Left" /> is greater than <paramref name="Right" />.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>Represents the Visual Basic equal (=) operator.</summary>
      <returns>True if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, False.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>Represents the Visual Basic greater-than (&gt;) operator.</summary>
      <returns>True if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, False.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</summary>
      <returns>True if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, False.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>Represents the Visual Basic less-than (&lt;) operator.</summary>
      <returns>True if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, False.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>Represents the Visual Basic less-than or equal-to (&lt;=) operator.</summary>
      <returns>True if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, False.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>Represents the Visual Basic not-equal (&lt;&gt;) operator.</summary>
      <returns>True if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, False.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
      <summary>Performs binary or text string comparison when given two strings.</summary>
      <returns>Value Condition -1 <paramref name="Left" /> is less than <paramref name="Right" />. 0<paramref name="Left" /> is equal to <paramref name="Right" />. 1 <paramref name="Left" /> is greater than <paramref name="Right" />. </returns>
      <param name="Left">Required. Any String expression.</param>
      <param name="Right">Required. Any String expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic concatenation (&amp;) operator.</summary>
      <returns>A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>Represents the overloaded Visual Basic equals (=) operator.</summary>
      <returns>The result of the overloaded equals operator. False if operator overloading is not supported.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>Represents the overloaded Visual Basic greater-than (&gt;) operator.</summary>
      <returns>The result of the overloaded greater-than operator. False if operator overloading is not supported.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</summary>
      <returns>The result of the overloaded greater-than or equal-to operator. False if operator overloading is not supported.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>Represents the overloaded Visual Basic less-than (&lt;) operator.</summary>
      <returns>The result of the overloaded less-than operator. False if operator overloading is not supported.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</summary>
      <returns>The result of the overloaded less-than or equal-to operator. False if operator overloading is not supported.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</summary>
      <returns>The result of the overloaded not-equal operator. False if operator overloading is not supported.</returns>
      <param name="Left">Required. Any expression.</param>
      <param name="Right">Required. Any expression.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive string comparison; otherwise, False.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic division (/) operator.</summary>
      <returns>The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</returns>
      <param name="Left">Required. Any numeric expression.</param>
      <param name="Right">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic exponent (^) operator.</summary>
      <returns>The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</returns>
      <param name="Left">Required. Any numeric expression.</param>
      <param name="Right">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
      <summary>Executes a late-bound evaluation of a user-defined operator. This helper method is not meant to be called directly from your code.</summary>
      <returns>The result returned from the user-defined operator.</returns>
      <param name="vbOp">The user-defined operator.</param>
      <param name="Arguments">Argument values to pass to the user-defined operator.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic integer division (\) operator.</summary>
      <returns>The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</returns>
      <param name="Left">Required. Any numeric expression.</param>
      <param name="Right">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</summary>
      <returns>An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of <paramref name="Operand" />.</returns>
      <param name="Operand">Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (SByte, Byte, Short, UShort, Integer, UInteger, Long, or ULong).</param>
      <param name="Amount">Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be Integer or widen to Integer.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>Represents the Visual Basic Like operator.</summary>
      <returns>True if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, False. True if both <paramref name="Source" /> and <paramref name="Pattern" /> are Nothing.</returns>
      <param name="Source">Required. Any expression.</param>
      <param name="Pattern">Required. Any string expression conforming to the pattern-matching conventions described in Like Operator (Visual Basic).</param>
      <param name="CompareOption">Required. A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Represents the Visual Basic Like operator.</summary>
      <returns>True if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, False. True if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</returns>
      <param name="Source">Required. Any String expression. </param>
      <param name="Pattern">Required. Any String expression conforming to the pattern-matching conventions described in Like Operator (Visual Basic).</param>
      <param name="CompareOption">Required. A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic Mod operator.</summary>
      <returns>The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />. </returns>
      <param name="Left">Required. Any numeric expression.</param>
      <param name="Right">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic multiply (*) operator.</summary>
      <returns>The product of <paramref name="Left" /> and <paramref name="Right" />.</returns>
      <param name="Left">Required. Any numeric expression.</param>
      <param name="Right">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
      <summary>Represents the Visual Basic unary minus (–) operator.</summary>
      <returns>The negative value of <paramref name="Operand" />.</returns>
      <param name="Operand">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
      <summary>Represents the Visual Basic Not operator.</summary>
      <returns>For Boolean operations, False if <paramref name="Operand" /> is True; otherwise, True. For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</returns>
      <param name="Operand">Required. Any Boolean or numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic Or operator.</summary>
      <returns>For Boolean operations, False if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to False; otherwise, True. For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</returns>
      <param name="Left">Required. Any Boolean or numeric expression.</param>
      <param name="Right">Required. Any Boolean or numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
      <summary>Represents the Visual Basic unary plus (+) operator.</summary>
      <returns>The value of <paramref name="Operand" />. (The sign of the <paramref name="Operand" /> is unchanged.)</returns>
      <param name="Operand">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</summary>
      <returns>An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of <paramref name="Operand" />.</returns>
      <param name="Operand">Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (SByte, Byte, Short, UShort, Integer, UInteger, Long, or ULong).</param>
      <param name="Amount">Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be Integer or widen to Integer.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic subtraction (–) operator.</summary>
      <returns>The difference between <paramref name="Left" /> and <paramref name="Right" />.</returns>
      <param name="Left">Required. Any numeric expression. </param>
      <param name="Right">Required. Any numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
      <summary>Represents the Visual Basic Xor operator.</summary>
      <returns>A Boolean or numeric value. For a Boolean comparison, the return value is the logical exclusion (exclusive logical disjunction) of two Boolean values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator (Visual Basic).</returns>
      <param name="Left">Required. Any Boolean or numeric expression.</param>
      <param name="Right">Required. Any Boolean or numeric expression.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute">
      <summary>Specifies that the current Option Compare setting should be passed as the default value for an argument. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute">
      <summary>The Visual Basic compiler emits this helper class to indicate (for Visual Basic debugging) which comparison option, binary or text, is being used</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute" /> class. This is a helper method.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ProjectData">
      <summary>Provides helpers for the Visual Basic Err object. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError">
      <summary>Performs the work for the Clear method of the Err object. A helper method.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.CreateProjectError(System.Int32)">
      <summary>Performs the work for the Raise method of the Err object. A helper method.</summary>
      <returns>An <see cref="T:System.Exception" /> object.</returns>
      <param name="hr">An integer value that identifies the nature of the error. Visual Basic errors are in the range 0–65535; the range 0–512 is reserved for system errors; the range 513–65535 is available for user-defined errors.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.EndApp">
      <summary>Closes all files for the calling assembly and stops the process.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)">
      <summary>The Visual Basic compiler uses this helper method to capture exceptions in the Err object.</summary>
      <param name="ex">The <see cref="T:System.Exception" /> object to be caught.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)">
      <summary>The Visual Basic compiler uses this helper method to capture exceptions in the Err object.</summary>
      <param name="ex">The <see cref="T:System.Exception" /> object to be caught.</param>
      <param name="lErl">The line number of the exception.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ShortType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromObject(System.Object)">
      <summary>Returns a Short value that corresponds to the specified object. </summary>
      <returns>The Short value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Short value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromString(System.String)">
      <summary>Returns a Short value that corresponds to the specified string. </summary>
      <returns>The Short value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Short value.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.SingleType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object)">
      <summary>Returns a Single value that corresponds to the specified object. </summary>
      <returns>The Single value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Single value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Returns a Single value that corresponds to the specified object. </summary>
      <returns>The Single value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a Single value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String)">
      <summary>Returns a Single value that corresponds to the specified string. </summary>
      <returns>The Single value that corresponds to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Single value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Returns a Single value that corresponds to the specified string and number format information. </summary>
      <returns>The Single value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. String to convert to a Single value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute">
      <summary>This class provides attributes that are applied to the standard module construct when it is emitted to Intermediate Language (IL). It is not intended to be called directly from your code.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag">
      <summary>The Visual Basic compiler uses this class internally when initializing static local members; it is not meant to be called directly from your code.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag" /> class.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State">
      <summary>Returns the state of the static local member's initialization flag (initialized or not).</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StringType">
      <summary>This class has been deprecated as of Visual Basic 2005. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
      <summary>Returns a String value that corresponds to the specified Boolean. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Boolean to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
      <summary>Returns a String value that corresponds to the specified Byte. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Byte to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
      <summary>Returns a String value that corresponds to the specified Char. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Char to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
      <summary>Returns a String value that corresponds to the specified date. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Date to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
      <summary>Returns a String value that corresponds to the specified Decimal. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Decimal to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>Returns a String value that corresponds to a specified Decimal and number format information. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Decimal to convert to a String value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
      <summary>Returns a String value that corresponds to a specified Double. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Double to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>Returns a String value that corresponds to a specified Double and number format information. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Double to convert to a String value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
      <summary>Returns a String value that corresponds to a specified Integer. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Integer to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
      <summary>Returns a String value that corresponds to a specified Int64 (64-bit integer).</summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Int64 to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
      <summary>Returns a String value that corresponds to the specified object. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Object to convert to a String value.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
      <summary>Returns a String value that corresponds to a specified Int16 (16-bit integer).</summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Int616 to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
      <summary>Returns a String value that corresponds to a specified Single. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Single to convert to a String value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>Returns a String value that corresponds to a specified Single and number format information. </summary>
      <returns>The String value corresponding to <paramref name="Value" />.</returns>
      <param name="Value">Required. Sinble to convert to a String value.</param>
      <param name="NumberFormat">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
      <summary>Overwrites the <paramref name="sDest" /> parameter with the contents of the <paramref name="sInsert" /> parameter.</summary>
      <param name="sDest">Required. String variable to modify.</param>
      <param name="StartPosition">Required. Location in the <paramref name="sDest" /> parameter to begin overwriting from. The index is 1-based.</param>
      <param name="MaxInsertLength">Required. Maximum number of characters from the <paramref name="sInsert" /> parameter to use, starting from the first character.</param>
      <param name="sInsert">Required. String value to overwrite the <paramref name="sDest" /> parameter with.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
      <summary>Compares two strings.</summary>
      <returns>Value Condition zero The two strings are equal. less than zero <paramref name="sLeft" /> is less than <paramref name="sRight" />. greater than zero <paramref name="sLeft" /> is greater than <paramref name="sRight" />. </returns>
      <param name="sLeft">Required. String to compare with <paramref name="sRight" />.</param>
      <param name="sRight">Required. String to compare with <paramref name="sLeft" />.</param>
      <param name="TextCompare">Required. True to perform a case-insensitive comparison; otherwise False.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Compares the parameters <paramref name="Source" /> and <paramref name="Pattern" /> and returns the same results as the Like operator.</summary>
      <returns>A Boolean value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is True. If the string does not satisfy the pattern, result is False. If both string and pattern are empty strings, the result is True.</returns>
      <param name="Source">Required. Any String expression.</param>
      <param name="Pattern">Any String expression conforming to the pattern-matching conventions described in Like Operator (Visual Basic).</param>
      <param name="CompareOption">Specifies how to compare strings to patterns, according to the <see cref="T:Microsoft.VisualBasic.CompareMethod" />. Can be vbBinaryCompare for binary comparison or vbTextCompare for comparison based on a case-insensitive text sort order determined by your system's LocaleID value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
      <summary>Compares the parameters <paramref name="Source" /> and <paramref name="Pattern" /> and returns the same results as the Like operator, using binary comparison.</summary>
      <returns>A Boolean value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is True. If the string does not satisfy the pattern, result is False. If both string and pattern are empty strings, the result is True.</returns>
      <param name="Source">Required. Any String expression.</param>
      <param name="Pattern">Required. Any String expression conforming to the pattern-matching conventions described in Like Operator (Visual Basic).</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
      <summary>Compares the parameters <paramref name="Source" /> and <paramref name="Pattern" /> and returns the same results as the Like operator, using text comparison.</summary>
      <returns>A Boolean value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is True. If the string does not satisfy the pattern, result is False. If both string and pattern are empty strings, the result is True.</returns>
      <param name="Source">Required. Any String expression.</param>
      <param name="Pattern">Required. Any String expression conforming to the pattern-matching conventions described in Like Operator (Visual Basic).</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Utils">
      <summary>Contains utilities that the Visual Basic compiler uses.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)">
      <summary>Used by the Visual Basic compiler as a helper for Redim.</summary>
      <returns>The copied array.</returns>
      <param name="arySrc">The array to be copied.</param>
      <param name="aryDest">The destination array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.GetResourceString(System.String,System.String[])">
      <summary>Retrieves and formats a localized resource string or error message.</summary>
      <returns>A formatted resource string or error message.</returns>
      <param name="ResourceKey">The identifier of the string or error message to retrieve.</param>
      <param name="Args">An array of parameters to replace placeholders in the string or error message.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.MethodToString(System.Reflection.MethodBase)">
      <summary>Returns a Visual Basic method signature.</summary>
      <returns>The Visual Basic method signature for the supplied <see cref="T:System.Reflection.MethodBase" /> object.</returns>
      <param name="Method">A <see cref="T:System.Reflection.MethodBase" /> object to return a Visual Basic method signature for.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.SetCultureInfo(System.Globalization.CultureInfo)">
      <summary>Sets the culture of the current thread.</summary>
      <returns>The previous value of the <see cref="P:System.Threading.Thread.CurrentCulture" /> property for the current thread.</returns>
      <param name="Culture">A <see cref="T:System.Globalization.CultureInfo" /> object to set as the culture of the current thread.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlThread" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.ThrowException(System.Int32)">
      <summary>Throws a localized Visual Basic exception.</summary>
      <param name="hr">The Visual Basic error identifier.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Versioned">
      <summary>The <see cref="T:Microsoft.VisualBasic.CompilerServices.Versioned" /> module contains procedures used to interact with objects, applications, and systems.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>Executes a method on an object, or sets or returns a property on an object.</summary>
      <returns>Executes a method on an object, or sets or returns a property on an object.</returns>
      <param name="Instance">Required. Object. A pointer to the object exposing the property or method.</param>
      <param name="MethodName">Required. String. A string expression containing the name of the property or method on the object.</param>
      <param name="UseCallType">Required. An enumeration member of type <see cref="T:Microsoft.VisualBasic.CallType" /> representing the type of procedure being called. The value of CallType can be Method, Get, or Set.</param>
      <param name="Arguments">Optional. ParamArray. A parameter array containing the arguments to be passed to the property or method being called.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)">
      <summary>Returns a Boolean value indicating whether an expression can be evaluated as a number.</summary>
      <returns>Returns a Boolean value indicating whether an expression can be evaluated as a number.</returns>
      <param name="Expression">Required. Object expression.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)">
      <summary>Returns a string value containing the system data type name of a variable.</summary>
      <returns>Returns a string value containing the system data type name of a variable.</returns>
      <param name="VbName">Required. A string variable containing a Visual Basic type name.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)">
      <summary>Returns a string value containing data type information about a variable.</summary>
      <returns>Returns a string value containing data type information about a variable.</returns>
      <param name="Expression">Required. Object variable. If Option Strict is Off, you can pass a variable of any data type except a structure.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)">
      <summary>Returns a string value containing the Visual Basic data type name of a variable.</summary>
      <returns>Returns a string value containing the Visual Basic data type name of a variable.</returns>
      <param name="SystemName">Required. String variable containing a type name used by the common language runtime.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Audio">
      <summary>Provides methods for playing sounds.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Audio" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.Byte[],Microsoft.VisualBasic.AudioPlayMode)">
      <summary>Plays a .wav sound file.</summary>
      <param name="data">Byte array that represents the sound file.</param>
      <param name="playMode">
        <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> mode for playing the sound. By default, AudioPlayMode.Background.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is Nothing.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="playMode" /> is not one of the <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> enumeration values.</exception>
      <exception cref="T:System.Security.SecurityException">A partial-trust situation exists in which the user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlThread" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.IO.Stream,Microsoft.VisualBasic.AudioPlayMode)">
      <summary>Plays a .wav sound file.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> that represents the sound file.</param>
      <param name="playMode">
        <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> mode for playing the sound. By default, AudioPlayMode.Background.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is Nothing.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="playMode" /> is not one of the <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> enumeration values.</exception>
      <exception cref="T:System.Security.SecurityException">A partial-trust situation exists in which the user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlThread" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.String)">
      <summary>Plays a .wav sound file.</summary>
      <param name="location">A String containing the name of the sound file </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="location" /> is an empty string.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file named by <paramref name="location" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The file path is malformed in <paramref name="location" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path name in <paramref name="location" /> is too long.</exception>
      <exception cref="T:System.Security.SecurityException">A partial-trust situation exists in which the user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlThread" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.String,Microsoft.VisualBasic.AudioPlayMode)">
      <summary>Plays a .wav sound file.</summary>
      <param name="location">A String containing the name of the sound file </param>
      <param name="playMode">
        <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> mode for playing the sound. By default, AudioPlayMode.Background.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="location" /> is an empty string.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file named by <paramref name="location" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The file path is malformed in <paramref name="location" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path name in <paramref name="location" /> is too long.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="playMode" /> is not one of the <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> enumeration values.</exception>
      <exception cref="T:System.Security.SecurityException">A partial-trust situation exists in which the user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlThread" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.PlaySystemSound(System.Media.SystemSound)">
      <summary>Plays a system sound.</summary>
      <param name="systemSound">
        <see cref="T:System.Media.SystemSound" /> object representing the system sound to play.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="systemSound" /> is Nothing.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Stop">
      <summary>Stops a sound playing in the background.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Clock">
      <summary>Provides properties for accessing the current local time and Universal Coordinated Time (equivalent to Greenwich Mean Time) from the system clock.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Clock.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Clock" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.GmtTime">
      <summary>Gets a Date object that contains the current local date and time on the computer, expressed as a UTC (GMT) time.</summary>
      <returns>A Date object that contains the current date and time expressed as UTC (GMT) time.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.LocalTime">
      <summary>Gets a Date object that contains the current local date and time on this computer.</summary>
      <returns>A Date object that contains the current local date and time.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.TickCount">
      <summary>Gets the millisecond count from the computer's system timer.</summary>
      <returns>An Integer containing the millisecond count from the computer's system timer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Computer">
      <summary>Provides properties for manipulating computer components such as audio, the clock, the keyboard, the file system, and so on.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Computer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Computer" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Audio">
      <summary>Gets an object that provides properties for methods for playing sounds.</summary>
      <returns>The My.Computer.Audio object for the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Clipboard">
      <summary>Gets an object that provides methods for manipulating the Clipboard.</summary>
      <returns>The My.Computer.Clipboard object for the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Keyboard">
      <summary>Gets an object that provides properties for accessing the current state of the keyboard, such as what keys are currently pressed, and provides a method to send keystrokes to the active window.</summary>
      <returns>The My.Computer.Keyboard object for the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Mouse">
      <summary>Gets an object that provides properties for getting information about the format and configuration of the mouse installed on the local computer.</summary>
      <returns>The My.Computer.Mouse object for the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Ports">
      <summary>Gets an object that provides a property and a method for accessing the computer's serial ports.</summary>
      <returns>The My.Computer.Ports object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Screen">
      <summary>Gets the <see cref="T:System.Windows.Forms.Screen" /> object that represents the computer's primary display screen.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Screen" /> object that represents the computer's primary screen.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ComputerInfo">
      <summary>Provides properties for getting information about the computer's memory, loaded assemblies, name, and operating system.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory">
      <summary>Gets the total amount of free physical memory for the computer.</summary>
      <returns>A ULong containing the number of bytes of free physical memory for the computer.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">The application cannot obtain the memory status.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory">
      <summary>Gets the total amount of the computer's free virtual address space.</summary>
      <returns>A ULong containing the number of bytes of the computer's free virtual address space.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">The application cannot obtain the memory status.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture">
      <summary>Gets the current UI culture installed with the operating system.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> object represents the UI culture installed on the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName">
      <summary>Gets the full operating system name. </summary>
      <returns>A String containing the operating-system name.</returns>
      <exception cref="T:System.Security.SecurityException">The calling code does not have full trust.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform">
      <summary>Gets the platform identifier for the operating system of the computer.</summary>
      <returns>A String containing the platform identifier for the operating system of the computer, chosen from the member names of the <see cref="T:System.PlatformID" /> enumeration.</returns>
      <exception cref="T:System.ExecutionEngineException">The application cannot obtain the operating-system platform information.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion">
      <summary>Gets the version of the computer's operating system.</summary>
      <returns>A String containing the current version number of the operating system.</returns>
      <exception cref="T:System.ExecutionEngineException">The application cannot obtain the operating-system version information.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory">
      <summary>Gets the total amount of physical memory for the computer.</summary>
      <returns>A ULong containing the number of bytes of physical memory for the computer.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">The application cannot obtain the memory status.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory">
      <summary>Gets the total amount of virtual address space available for the computer.</summary>
      <returns>A ULong containing the number of bytes of virtual address space available for the computer.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">The application cannot obtain the memory status.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Keyboard">
      <summary>Provides properties for accessing the current state of the keyboard, such as what keys are currently pressed, and provides a method to send keystrokes to the active window.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown">
      <summary>Gets a Boolean indicating if the ALT key is down.</summary>
      <returns>A Boolean value: True if the ALT key is down; otherwise False.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.CapsLock">
      <summary>Gets a Boolean indicating if CAPS LOCK is turned on. </summary>
      <returns>A Boolean value: True if CAPS LOCK is turned on; otherwise False.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown">
      <summary>Gets a Boolean indicating if a CTRL key is down.</summary>
      <returns>A Boolean value. True if a CTRL key is down; otherwise False.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.NumLock">
      <summary>Gets a Boolean indicating if the NUM LOCK key is on. </summary>
      <returns>A Boolean value. True if NUM LOCK is on; otherwise False.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.ScrollLock">
      <summary>Gets a Boolean indicating whether the SCROLL LOCK key is on. </summary>
      <returns>A Boolean value. True if SCROLL LOCK is on; otherwise False.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)">
      <summary>Sends one or more keystrokes to the active window, as if typed on the keyboard.</summary>
      <param name="keys">A String that defines the keys to send.</param>
      <exception cref="T:System.Security.SecurityException">A partial-trust situation exists in which the user lacks necessary permissions.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)">
      <summary>Sends one or more keystrokes to the active window, as if typed on the keyboard.</summary>
      <param name="keys">A String that defines the keys to send.</param>
      <param name="wait">Optional. A Boolean that specifies whether or not to wait for keystrokes to get processed before the application continues. True by default.</param>
      <exception cref="T:System.Security.SecurityException">A partial-trust situation exists in which the user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown">
      <summary>Gets a Boolean indicating if a SHIFT key is down.</summary>
      <returns>A Boolean value. True if a SHIFT key is down; otherwise False.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Mouse">
      <summary>Provides properties for getting information about the format and configuration of the mouse installed on the local computer.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Mouse.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Mouse" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped">
      <summary>Gets a Boolean that indicates if the functionality of the left and right mouse buttons has been swapped.</summary>
      <returns>A Boolean with a value True if the functionality of the left and right mouse buttons has been swapped; otherwise, False.</returns>
      <exception cref="T:System.InvalidOperationException">The computer has no mouse installed.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.WheelExists">
      <summary>Gets a Boolean that indicates if the mouse has a scroll wheel.</summary>
      <returns>A Boolean with value True if the mouse has a scroll wheel; otherwise False.</returns>
      <exception cref="T:System.InvalidOperationException">The computer has no mouse installed.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines">
      <summary>Gets a number that indicates how much to scroll when the mouse wheel is rotated one notch.</summary>
      <returns>An Integer that indicates how much to scroll when the mouse wheel is rotated one notch. A positive value indicates scrolling by that number of lines, while a negative value indicates scrolling by one screen at a time.</returns>
      <exception cref="T:System.InvalidOperationException">The computer has no mouse installed.</exception>
      <exception cref="T:System.InvalidOperationException">The mouse has no scroll wheel.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Network">
      <summary>Provides a property, event, and methods for interacting with the network to which the computer is connected.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Network" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">File name and path of the downloaded file. </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
      <exception cref="T:System.Security.SecurityException">The target web site requires user credentials.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">File name and path of the downloaded file. </param>
      <param name="userName">User name to authenticate. Default is an empty string, "". </param>
      <param name="password">Password to authenticate. Default is an empty string, "". </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">File name and path of the downloaded file. </param>
      <param name="userName">User name to authenticate. Default is an empty string, "". </param>
      <param name="password">Password to authenticate. Default is an empty string, "". </param>
      <param name="showUI">True to display the progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">
        <see cref="T:System.Int32" />. Timeout interval, in milliseconds. Default is 100 seconds. </param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False. </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> is set to False and the destination file already exists.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">File name and path of the downloaded file. </param>
      <param name="userName">User name to authenticate. Default is an empty string, "". </param>
      <param name="password">Password to authenticate. Default is an empty string, "". </param>
      <param name="showUI">True to display the progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds. </param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False. </param>
      <param name="onUserCancel">Specifies behavior when the user clicks Cancel or No on the dialog box shown as a result of <paramref name="ShowUI" /> set to True. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />. </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> is set to False and the destination file already exists.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">File name and path of the downloaded file. </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
      <exception cref="T:System.Security.SecurityException">The target web site requires user credentials.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">String or <see cref="T:System.Uri" />. Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">String. File name and path of the downloaded file. </param>
      <param name="networkCredentials">
        <see cref="T:System.Net.ICredentials" />. Credentials to be supplied. </param>
      <param name="showUI">True to display the progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds. </param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False. </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> is set to False and the destination file already exists.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">File name and path of the downloaded file. </param>
      <param name="networkCredentials">Credentials to be supplied. </param>
      <param name="showUI">True to display the progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds. </param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False. </param>
      <param name="onUserCancel">Specifies behavior when the user clicks Cancel or No on the dialog box shown as a result of <paramref name="showUI" /> set to True. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />. </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> is set to False and the destination file already exists.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">File name and path of the downloaded file. </param>
      <param name="userName">User name to authenticate. Default is an empty string, "". </param>
      <param name="password">Password to authenticate. Default is an empty string, "". </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">File name and path of the downloaded file. </param>
      <param name="userName">User name to authenticate. Default is an empty string, "". </param>
      <param name="password">Password to authenticate. Default is an empty string, "". </param>
      <param name="showUI">True to display the progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds. </param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False. </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> is set to False and the destination file already exists.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      <param name="address">Path of the file to download, including file name and host address. </param>
      <param name="destinationFileName">File name and path of the downloaded file. </param>
      <param name="userName">User name to authenticate. Default is an empty string, "". </param>
      <param name="password">Password to authenticate. Default is an empty string, "". </param>
      <param name="showUI">True to display the progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds. </param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False. </param>
      <param name="onUserCancel">Specifies behavior when the user clicks Cancel or No on the dialog box shown as a result of <paramref name="ShowUI" /> set to True. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />. </param>
      <exception cref="T:System.ArgumentException">The drive name is not valid</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> is set to False and the destination file already exists.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Network.IsAvailable">
      <summary>Indicates whether a computer is connected to a network.</summary>
      <returns>True if the computer is connected to a network; otherwise False.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
      </PermissionSet>
    </member>
    <member name="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged">
      <summary>Occurs when the network availability changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)">
      <summary>Pings the specified server.</summary>
      <returns>True if the operation was successful; otherwise False.</returns>
      <param name="hostNameOrAddress">The URL, computer name, or IP number of the server to ping.</param>
      <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)">
      <summary>Pings the specified server.</summary>
      <returns>True if the operation was successful; otherwise False.</returns>
      <param name="hostNameOrAddress">The URL, computer name, or IP number of the server to ping.</param>
      <param name="timeout">Time threshold in milliseconds for contacting the destination. Default is 500.</param>
      <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)">
      <summary>Pings the specified server.</summary>
      <returns>True if the operation was successful; otherwise False.</returns>
      <param name="address">The URI of the server to ping.</param>
      <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)">
      <summary>Pings the specified server.</summary>
      <returns>True if the operation was successful; otherwise False.</returns>
      <param name="address">The URI of the server to ping.</param>
      <param name="timeout">Time threshold in milliseconds for contacting the destination. Default is 500.</param>
      <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">The target server requires user credentials.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <param name="userName">User name to authenticate. Default is an empty string: "".</param>
      <param name="password">Password to authenticate. Default is an empty string: "".</param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">Authentication failed.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <param name="userName">User name to authenticate. Default is an empty string: "".</param>
      <param name="password">Password to authenticate. Default is an empty string: "".</param>
      <param name="showUI">True to display progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds. </param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">Authentication failed.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <param name="userName">User name to authenticate. Default is an empty string: "".</param>
      <param name="password">Password to authenticate. Default is an empty string: "".</param>
      <param name="showUI">Whether to display progress of the operation. Default is False. </param>
      <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds. </param>
      <param name="onUserCancel">Action to be taken when the user clicks Cancel. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">Authentication failed.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">The target server requires user credentials.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <param name="networkCredentials">Credentials for authentication. </param>
      <param name="showUI">True to display progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds. </param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">Authentication failed.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <param name="networkCredentials">Credentials for authentication. </param>
      <param name="showUI">True to display progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds. </param>
      <param name="onUserCancel">Action to be taken when the user clicks Cancel. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">Authentication failed.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <param name="userName">User name to authenticate. Default is an empty string: "".</param>
      <param name="password">Password to authenticate. Default is an empty string: "".</param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">Authentication failed.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <param name="userName">User name to authenticate. Default is an empty string: "".</param>
      <param name="password">Password to authenticate. Default is an empty string: "".</param>
      <param name="showUI">True to display progress of the operation; otherwise False. Default is False. </param>
      <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds. </param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">Authentication failed.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Sends the specified file to the specified host address.</summary>
      <param name="sourceFileName">Path and name of file to upload. </param>
      <param name="address">URL, IP address, or URI of destination server. </param>
      <param name="userName">User name to authenticate. Default is an empty string: "".</param>
      <param name="password">Password to authenticate. Default is an empty string: "".</param>
      <param name="showUI">Whether to display progress of the operation. Default is False. </param>
      <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds. </param>
      <param name="onUserCancel">Action to be taken when the user clicks Cancel. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> does not include a file name.</exception>
      <exception cref="T:System.Security.SecurityException">Authentication failed.</exception>
      <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
      <exception cref="T:System.Security.SecurityException">The user authentication fails.</exception>
      <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
      <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs">
      <summary>Provides data for the My.Application.NetworkAvailabilityChanged and My.Computer.Network.NetworkAvailabilityChanged events. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> class.</summary>
      <param name="networkAvailable">A <see cref="T:System.Boolean" /> that indicates whether a network is available to the application.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable">
      <summary>Gets a value indicating whether a network is available to the application.</summary>
      <returns>A <see cref="T:System.Boolean" /> that indicates whether a network is available to the application.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler">
      <summary>Represents the method that will handle the My.Application.NetworkAvailabilityChanged or My.Computer.Network.NetworkAvailabilityChanged event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" /> object that contains the event data.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Ports">
      <summary>Provides a property and a method for accessing the computer's serial ports.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Ports" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)">
      <summary>Creates and opens a <see cref="T:System.IO.Ports.SerialPort" /> object.</summary>
      <returns>An open <see cref="T:System.IO.Ports.SerialPort" /> object, configured with the supplied arguments.</returns>
      <param name="portName">String. Required. Name of the port to open.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="portName" /> is Nothing or an empty string.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)">
      <summary>Creates and opens a <see cref="T:System.IO.Ports.SerialPort" /> object.</summary>
      <returns>An open <see cref="T:System.IO.Ports.SerialPort" /> object, configured with the supplied arguments.</returns>
      <param name="portName">String. Required. Name of the port to open.</param>
      <param name="baudRate">Integer. Baud rate of the port.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="portName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="baudRate" /> is less than or equal to zero.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)">
      <summary>Creates and opens a <see cref="T:System.IO.Ports.SerialPort" /> object.</summary>
      <returns>An open <see cref="T:System.IO.Ports.SerialPort" /> object, configured with the supplied arguments.</returns>
      <param name="portName">String. Required. Name of the port to open.</param>
      <param name="baudRate">Integer. Baud rate of the port.</param>
      <param name="parity">
        <see cref="T:System.IO.Ports.Parity" />. Parity of the port.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="portName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="baudRate" /> is less than or equal to zero.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="parity" /> is not one of the <see cref="T:System.IO.Ports.Parity" /> enumeration values.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)">
      <summary>Creates and opens a <see cref="T:System.IO.Ports.SerialPort" /> object.</summary>
      <returns>An open <see cref="T:System.IO.Ports.SerialPort" /> object, configured with the supplied arguments.</returns>
      <param name="portName">String. Required. Name of the port to open.</param>
      <param name="baudRate">Integer. Baud rate of the port.</param>
      <param name="parity">
        <see cref="T:System.IO.Ports.Parity" />. Parity of the port.</param>
      <param name="dataBits">Integer. Data-bit setting of the port.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="portName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="baudRate" /> is less than or equal to zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dataBits" /> is less than or equal to zero.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="parity" /> is not one of the <see cref="T:System.IO.Ports.Parity" /> enumeration values.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
      <summary>Creates and opens a <see cref="T:System.IO.Ports.SerialPort" /> object.</summary>
      <returns>An open <see cref="T:System.IO.Ports.SerialPort" /> object, configured with the supplied arguments.</returns>
      <param name="portName">String. Required. Name of the port to open.</param>
      <param name="baudRate">Integer. Baud rate of the port.</param>
      <param name="parity">
        <see cref="T:System.IO.Ports.Parity" />. Parity of the port.</param>
      <param name="dataBits">Integer. Data-bit setting of the port.</param>
      <param name="stopBits">
        <see cref="T:System.IO.Ports.StopBits" />. Stop-bit setting of the port.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="portName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="baudRate" /> is less than or equal to zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dataBits" /> is less than or equal to zero.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="parity" /> is not one of the <see cref="T:System.IO.Ports.Parity" /> enumeration values.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="stopBits" /> is not one of the <see cref="T:System.IO.Ports.StopBits" /> enumeration values.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames">
      <summary>Gets a collection of the names of the serial ports on the computer.</summary>
      <returns>A collection of the names of the serial ports on the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ServerComputer">
      <summary>Provides properties for manipulating computer components such as audio, the clock, the keyboard, the file system, and so on.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ServerComputer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.ServerComputer" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Clock">
      <summary>Gets an object that provides properties for accessing the current local time and Universal Coordinated Time (the equivalent to Greenwich Mean Time) from the system clock.</summary>
      <returns>The My.Computer.Clock object for the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.FileSystem">
      <summary>Gets an object that provides properties and methods for working with drives, files, and directories.</summary>
      <returns>The My.Computer.FileSystem object for the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Info">
      <summary>Gets an object that provides properties for getting information about the computer's memory, loaded assemblies, name, and operating system.</summary>
      <returns>The My.Computer.Info object for the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Name">
      <summary>Gets the computer name.</summary>
      <returns>A String containing the name of the computer.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="COMPUTERNAME" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Network">
      <summary>Gets an object that provides a property and methods for interacting with the network to which the computer is connected.</summary>
      <returns>The My.Computer.Network object for the computer.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Net.NetworkInformation.NetworkInformationPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Access="Read" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry">
      <summary>Gets an object that provides properties and methods for manipulating the registry.</summary>
      <returns>The My.Computer.Registry object for the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
      <summary>Specifies what should be done when a directory that is to be deleted contains files or directories.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty">
      <summary>Throw an <see cref="T:System.IO.IOException" /> if the directory is not empty. The Data property of the exception lists the file(s) that could not be deleted.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents">
      <summary>Delete the contents of the directory along with the directory. Default.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FieldType">
      <summary>Indicates whether text fields are delimited or fixed width.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited">
      <summary>Indicates that the fields are delimited.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth">
      <summary>Indicates that the fields are fixed width.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FileSystem">
      <summary>Provides properties and methods for working with drives, files, and directories.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)">
      <summary>Combines two paths and returns a properly formatted path.</summary>
      <returns>The combination of the specified paths.</returns>
      <param name="baseDirectory">String. First path to be combined. </param>
      <param name="relativePath">String. Second path to be combined. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> or <paramref name="relativePath" /> are malformed paths.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)">
      <summary>Copies a directory to another directory.</summary>
      <param name="sourceDirectoryName">The directory to be copied.</param>
      <param name="destinationDirectoryName">The location to which the directory should be copied.</param>
      <exception cref="T:System.ArgumentException">The new name specified for the directory contains a colon (:) or slash (\ or /).</exception>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The source directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source directory is a root directory</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing file.</exception>
      <exception cref="T:System.IO.IOException">The source path and target path are the same.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A folder name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">A destination file exists but cannot be accessed.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copies a directory to another directory.</summary>
      <param name="sourceDirectoryName">The directory to be copied.</param>
      <param name="destinationDirectoryName">The location to which the directory should be copied.</param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs.</param>
      <exception cref="T:System.ArgumentException">The new name specified for the directory contains a colon (:) or slash (\ or /).</exception>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The source directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source directory is a root directory</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing file.</exception>
      <exception cref="T:System.IO.IOException">The source path and target path are the same.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A folder name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">A destination file exists but cannot be accessed.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> is set to UIOption.AllDialogs and the user cancels the operation, or one or more files in the directory cannot be copied.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copies a directory to another directory.</summary>
      <param name="sourceDirectoryName">The directory to be copied.</param>
      <param name="destinationDirectoryName">The location to which the directory should be copied.</param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs.</param>
      <param name="onUserCancel">Specifies what should be done if the user clicks Cancel during the operation. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">The new name specified for the directory contains a colon (:) or slash (\ or /).</exception>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The source directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source directory is a root directory</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing file.</exception>
      <exception cref="T:System.IO.IOException">The source path and target path are the same.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A folder name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">A destination file exists but cannot be accessed.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> is set to UIOption.AllDialogs and the user cancels the operation, or one or more files in the directory cannot be copied.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>Copies a directory to another directory.</summary>
      <param name="sourceDirectoryName">The directory to be copied.</param>
      <param name="destinationDirectoryName">The location to which the directory should be copied.</param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False.</param>
      <exception cref="T:System.ArgumentException">The new name specified for the directory contains a colon (:) or slash (\ or /).</exception>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The source directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source directory is a root directory</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing file.</exception>
      <exception cref="T:System.IO.IOException">The source path and target path are the same.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A folder name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">A destination file exists but cannot be accessed.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)">
      <summary>Copies a file to a new location.</summary>
      <param name="sourceFileName">The file to be copied. </param>
      <param name="destinationFileName">The location to which the file should be copied. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">The system could not retrieve the absolute path.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName " />contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing directory.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file.</exception>
      <exception cref="T:System.IO.IOException">A file in the target directory with the same name is in use.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copies a file to a new location.</summary>
      <param name="sourceFileName">The file to be copied. </param>
      <param name="destinationFileName">The location to which the file should be copied. </param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">The system could not retrieve the absolute path.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName " />contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing directory.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file.</exception>
      <exception cref="T:System.IO.IOException">A file in the target directory with the same name is in use.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copies a file to a new location.</summary>
      <param name="sourceFileName">The file to be copied. </param>
      <param name="destinationFileName">The location to which the file should be copied. </param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs.</param>
      <param name="onUserCancel">Specifies what should be done if the user clicks Cancel during the operation. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">The system could not retrieve the absolute path.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName " />contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing directory.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file.</exception>
      <exception cref="T:System.IO.IOException">A file in the target directory with the same name is in use.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> is set to ThrowException, and the user has canceled the operation or an unspecified I/O error occurs.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)">
      <summary>Copies a file to a new location.</summary>
      <param name="sourceFileName">The file to be copied. </param>
      <param name="destinationFileName">The location to which the file should be copied. </param>
      <param name="overwrite">True if existing files should be overwritten; otherwise False. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">The system could not retrieve the absolute path.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName " />contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing directory.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file.</exception>
      <exception cref="T:System.IO.IOException">A file in the target directory with the same name is in use.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)">
      <summary>Creates a directory.</summary>
      <param name="directory">Name and location of the directory. </param>
      <exception cref="T:System.ArgumentException">The directory name is malformed. For example, it contains illegal characters or is only white space.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The directory name is too long.</exception>
      <exception cref="T:System.NotSupportedException">The directory name is only a colon (:).</exception>
      <exception cref="T:System.IO.IOException">The parent directory of the directory to be created is read-only</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have permission to create the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory">
      <summary>Gets or sets the current directory.</summary>
      <returns>The current directory for file I/O operations.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is not valid.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>Deletes a directory.</summary>
      <param name="directory">Directory to be deleted. </param>
      <param name="onDirectoryNotEmpty">Specifies what should be done when a directory that is to be deleted contains files or directories. Default is DeleteDirectoryOption.DeleteAllContents.</param>
      <exception cref="T:System.ArgumentException">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist or is a file.</exception>
      <exception cref="T:System.IO.IOException">The directory is not empty, and <paramref name="onDirectoryNotEmpty" /> is set to ThrowIfDirectoryNonEmpty.</exception>
      <exception cref="T:System.IO.IOException">The user does not have permission to delete the directory or subdirectory.</exception>
      <exception cref="T:System.IO.IOException">A file in the directory or subdirectory is in use.</exception>
      <exception cref="T:System.NotSupportedException">The directory name contains a colon (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have required permissions.</exception>
      <exception cref="T:System.OperationCanceledException">The user cancels the operation or the directory cannot be deleted.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Deletes a directory.</summary>
      <param name="directory">Directory to be deleted. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="recycle">Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is RecycleOption.DeletePermanently. </param>
      <exception cref="T:System.ArgumentException">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist or is a file.</exception>
      <exception cref="T:System.IO.IOException">The directory is not empty, and <paramref name="onDirectoryNotEmpty" /> is set to ThrowIfDirectoryNonEmpty.</exception>
      <exception cref="T:System.IO.IOException">The user does not have permission to delete the directory or subdirectory.</exception>
      <exception cref="T:System.IO.IOException">A file in the directory or subdirectory is in use.</exception>
      <exception cref="T:System.NotSupportedException">The directory name contains a colon (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have required permissions.</exception>
      <exception cref="T:System.OperationCanceledException">The user cancels the operation or the directory cannot be deleted.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Deletes a directory.</summary>
      <param name="directory">Directory to be deleted. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="recycle">Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is RecycleOption.DeletePermanently. </param>
      <param name="onUserCancel">Specifies whether to throw an exception if the user clicks Cancel. </param>
      <exception cref="T:System.ArgumentException">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist or is a file.</exception>
      <exception cref="T:System.IO.IOException">The directory is not empty, and <paramref name="onDirectoryNotEmpty" /> is set to ThrowIfDirectoryNonEmpty.</exception>
      <exception cref="T:System.IO.IOException">The user does not have permission to delete the directory or subdirectory.</exception>
      <exception cref="T:System.IO.IOException">A file in the directory or subdirectory is in use.</exception>
      <exception cref="T:System.NotSupportedException">The directory name contains a colon (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have required permissions.</exception>
      <exception cref="T:System.OperationCanceledException">The user cancels the operation or the directory cannot be deleted.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)">
      <summary>Deletes a file.</summary>
      <param name="file">Name and path of the file to be deleted. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.IOException">The file is in use.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have permission to delete the file or the file is read-only.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Deletes a file.</summary>
      <param name="file">Name and path of the file to be deleted. </param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="recycle">Whether or not the deleted file should be sent to the Recycle Bin. Default is RecycleOption.DeletePermanently. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.IOException">The file is in use.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have permission to delete the file or the file is read-only.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Deletes a file.</summary>
      <param name="file">Name and path of the file to be deleted. </param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="recycle">Whether or not the deleted file should be sent to the Recycle Bin. Default is RecycleOption.DeletePermanently. </param>
      <param name="onUserCancel">Specifies whether or not an exception is thrown when the user cancels the operation. Default is UICancelOption.ThrowException. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.IOException">The file is in use.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have permission to delete the file or the file is read-only.</exception>
      <exception cref="T:System.OperationCanceledException">The user cancelled the operation and <paramref name="onUserCancel" /> is set to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)">
      <summary>Returns True if the specified directory exists.</summary>
      <returns>True if the directory exists; otherwise False.</returns>
      <param name="directory">Path of the directory. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives">
      <summary>Returns a read-only collection of all available drive names.</summary>
      <returns>A read-only collection of all available drives as <see cref="T:System.IO.DriveInfo" /> objects.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)">
      <summary>Returns True if the specified file exists.</summary>
      <returns>Returns True if the file exists; otherwise this method returns False.</returns>
      <param name="file">Name and path of the file. </param>
      <exception cref="T:System.ArgumentException">The name of the file ends with a backslash (\).</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>Returns a read-only collection of strings representing the names of files containing the specified text.</summary>
      <returns>Read-only collection of the names of files containing the specified text..</returns>
      <param name="directory">The directory to be searched.</param>
      <param name="containsText">The search text.</param>
      <param name="ignoreCase">True if the search should be case-sensitive; otherwise False. Default is True.</param>
      <param name="searchType">Whether to include subfolders. Default is SearchOption.SearchTopLevelOnly. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The specified directory points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">The specified directory path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Returns a read-only collection of strings representing the names of files containing the specified text.</summary>
      <returns>Read-only collection of the names of files containing the specified text..</returns>
      <param name="directory">The directory to be searched.</param>
      <param name="containsText">The search text.</param>
      <param name="ignoreCase">True if the search should be case-sensitive; otherwise False. Default is True.</param>
      <param name="searchType">Whether to include subfolders. Default is SearchOption.SearchTopLevelOnly. </param>
      <param name="fileWildcards">Pattern to be matched.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The specified directory points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">The specified directory path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)">
      <summary>Returns a collection of strings representing the path names of subdirectories within a directory.</summary>
      <returns>Read-only collection of the path names of subdirectories within the specified directory..</returns>
      <param name="directory">Name and path of directory. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The specified directory points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Returns a collection of strings representing the path names of subdirectories within a directory.</summary>
      <returns>Read-only collection of the path names of subdirectories within the specified directory.</returns>
      <param name="directory">Name and path of directory. </param>
      <param name="searchType">Whether to include subfolders. Default is SearchOption.SearchTopLevelOnly. </param>
      <param name="wildcards">Pattern to match names. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">One or more of the specified wildcard characters is Nothing, an empty string, or contains only spaces.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The specified directory points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)">
      <summary>Returns a <see cref="T:System.IO.DirectoryInfo" /> object for the specified path.</summary>
      <returns>
        <see cref="T:System.IO.DirectoryInfo" /> object for the specified path.</returns>
      <param name="directory">String. Path of directory. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">The directory path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)">
      <summary>Returns a <see cref="T:System.IO.DriveInfo" /> object for the specified drive.</summary>
      <returns>
        <see cref="T:System.IO.DriveInfo" /> object for the specified drive.</returns>
      <param name="drive">Drive to be examined. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="drive" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)">
      <summary>Returns a <see cref="T:System.IO.FileInfo" /> object for the specified file.</summary>
      <returns>
        <see cref="T:System.IO.FileInfo" /> object for the specified file</returns>
      <param name="file">Name and path of the file. </param>
      <exception cref="T:System.ArgumentException">The path name is malformed. For example, it contains invalid characters or is only white space. The file name has a trailing slash mark.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.NotSupportedException">The path contains a colon in the middle of the string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path is too long.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks ACL (access control list) access to the file.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)">
      <summary>Returns a read-only collection of strings representing the names of files within a directory.</summary>
      <returns>Read-only collection of file names from the specified directory.</returns>
      <param name="directory">Directory to be searched. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory to search does not exist.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Returns a read-only collection of strings representing the names of files within a directory.</summary>
      <returns>Read-only collection of file names from the specified directory.</returns>
      <param name="directory">Directory to be searched. </param>
      <param name="searchType">Whether to include subfolders. Default is SearchOption.SearchTopLevelOnly. </param>
      <param name="wildcards">Pattern to be matched. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory to search does not exist.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)">
      <summary>Parses the file name out of the path provided.</summary>
      <returns>The file name from the specified path.</returns>
      <param name="path">Required. Path to be parsed. String.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)">
      <summary>Returns the parent path of the provided path.</summary>
      <returns>The parent path of the provided path.</returns>
      <param name="path">Path to be examined. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">Path does not have a parent path because it is a root path.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is Nothing.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName">
      <summary>Creates a uniquely named zero-byte temporary file on disk and returns the full path of that file.</summary>
      <returns>String containing the full path of the temporary file.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)">
      <summary>Moves a directory from one location to another.</summary>
      <param name="sourceDirectoryName">Path of the directory to be moved. </param>
      <param name="destinationDirectoryName">Path of the directory to which the source directory is being moved. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source is a root directory or The source path and the target path are the same.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Moves a directory from one location to another.</summary>
      <param name="sourceDirectoryName">Path of the directory to be moved. </param>
      <param name="destinationDirectoryName">Path of the directory to which the source directory is being moved. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source is a root directory or The source path and the target path are the same.</exception>
      <exception cref="T:System.IO.IOException">The target directory already exists and o<paramref name="verwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Moves a directory from one location to another.</summary>
      <param name="sourceDirectoryName">Path of the directory to be moved. </param>
      <param name="destinationDirectoryName">Path of the directory to which the source directory is being moved. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="onUserCancel">Specifies whether or not an exception is thrown when the user cancels the operation. Default is UICancelOption.ThrowException. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source is a root directory or The source path and the target path are the same.</exception>
      <exception cref="T:System.IO.IOException">The target directory already exists and o<paramref name="verwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> is set to ThrowException and a subdirectory of the file cannot be copied.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> is set to ThrowException, and the user cancels the operation, or the operation cannot be completed.</exception>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="onUserCancel" /> is set to ThrowException, and the user lacks necessary permissions.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>Moves a directory from one location to another.</summary>
      <param name="sourceDirectoryName">Path of the directory to be moved. </param>
      <param name="destinationDirectoryName">Path of the directory to which the source directory is being moved. </param>
      <param name="overwrite">True if existing directories should be overwritten; otherwise False. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source is a root directory or The source path and the target path are the same.</exception>
      <exception cref="T:System.IO.IOException">The target directory already exists and o<paramref name="verwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)">
      <summary>Moves a file to a new location.</summary>
      <param name="sourceFileName">Path of the file to be moved. </param>
      <param name="destinationFileName">Path of the directory into which the file should be moved. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Moves a file to a new location.</summary>
      <param name="sourceFileName">Path of the file to be moved. </param>
      <param name="destinationFileName">Path of the directory into which the file should be moved. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Moves a file to a new location.</summary>
      <param name="sourceFileName">Path of the file to be moved. </param>
      <param name="destinationFileName">Path of the directory into which the file should be moved. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="onUserCancel">Specifies whether or not an exception is thrown when the user cancels the operation. Default is UICancelOption.ThrowException. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> is set to ThrowException, and either the user has cancelled the operation or an unspecified I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)">
      <summary>Moves a file to a new location.</summary>
      <param name="sourceFileName">Path of the file to be moved. </param>
      <param name="destinationFileName">Path of the directory into which the file should be moved. </param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)">
      <summary>The OpenTextFieldParser method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object,  which provides a way to easily and efficiently parse structured text files, such as logs. The TextFieldParser object can be used to read both delimited and fixed-width files.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</returns>
      <param name="file">The file to be opened with the TextFieldParser.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />  property is assigned the text contained in the line.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>The OpenTextFieldParser method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs. The TextFieldParser object can be used to read both delimited and fixed-width files.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</returns>
      <param name="file">The file to be opened with the TextFieldParser.</param>
      <param name="fieldWidths">Widths of the fields.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />  property is assigned the text contained in the line.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])">
      <summary>The OpenTextFieldParser method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs. The TextFieldParser object can be used to read both delimited and fixed-width files.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</returns>
      <param name="file">The file to be opened with the TextFieldParser.</param>
      <param name="delimiters">Delimiters for the fields.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />  property is assigned the text contained in the line.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)">
      <summary>Opens a <see cref="T:System.IO.StreamReader" /> object to read from a file.</summary>
      <returns>
        <see cref="T:System.IO.StreamReader" /> object to read from the file</returns>
      <param name="file">File to be read. </param>
      <exception cref="T:System.ArgumentException">The file name ends with a backslash (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">The specified file cannot be found.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to read from the file.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>Opens a <see cref="T:System.IO.StreamReader" /> object to read from a file.</summary>
      <returns>
        <see cref="T:System.IO.StreamReader" /> object to read from the file</returns>
      <param name="file">File to be read. </param>
      <param name="encoding">The encoding to use for the file contents. Default is ASCII. </param>
      <exception cref="T:System.ArgumentException">The file name ends with a backslash (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">The specified file cannot be found.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to read from the file.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>Opens a <see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</summary>
      <returns>
        <see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</returns>
      <param name="file">File to be written to. </param>
      <param name="append">True to append to the contents of the file; False to overwrite the contents of the file. Default is False. </param>
      <exception cref="T:System.ArgumentException">The file name ends with a trailing slash.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>Opens a <see cref="T:System.IO.StreamWriter" /> to write to the specified file.</summary>
      <returns>
        <see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</returns>
      <param name="file">File to be written to. </param>
      <param name="append">True to append to the contents in the file; False to overwrite the contents of the file. Default is False. </param>
      <param name="encoding">Encoding to be used in writing to the file. Default is ASCII. </param>
      <exception cref="T:System.ArgumentException">The file name ends with a trailing slash.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)">
      <summary>Returns the contents of a file as a byte array.</summary>
      <returns>Byte array containing the contents of the file.</returns>
      <param name="file">File to be read. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)">
      <summary>Returns the contents of a text file as a String.</summary>
      <returns>String containing the contents of the file.</returns>
      <param name="file">Name and path of the file to read. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)">
      <summary>Returns the contents of a text file as a String.</summary>
      <returns>String containing the contents of the file.</returns>
      <param name="file">Name and path of the file to read. </param>
      <param name="encoding">Character encoding to use in reading the file. Default is UTF-8.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)">
      <summary>Renames a directory.</summary>
      <param name="directory">Path and name of directory to be renamed. </param>
      <param name="newName">New name for directory. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing.-or-<paramref name="newName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">There is an existing file or directory with the name specified in <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds 248 characters.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)">
      <summary>Renames a file.</summary>
      <param name="file">File to be renamed. </param>
      <param name="newName">New name of file. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contains path information or ends with a backslash (\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.-or-<paramref name="newName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">There is an existing file or directory with the name specified in <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>Writes data to a binary file.</summary>
      <param name="file">Path and name of the file to be written to. </param>
      <param name="data">Data to be written to the file. </param>
      <param name="append">True to append to the file contents; False to overwrite the file contents. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>Writes text to a file.</summary>
      <param name="file">File to be written to. </param>
      <param name="text">Text to be written to file. </param>
      <param name="append">True to append to the contents of the file; False to overwrite the contents of the file. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>Writes text to a file.</summary>
      <param name="file">File to be written to. </param>
      <param name="text">Text to be written to file. </param>
      <param name="append">True to append to the contents of the file; False to overwrite the contents of the file. Default is False. </param>
      <param name="encoding">What encoding to use when writing to file. Default is UTF-8.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <summary>The exception that is thrown when the <see cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" /> method cannot parse a row using the specified format.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> class with a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">A <see cref="T:System.String" /> describing the error.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> object that is the cause of the current exception. If the <see cref="P:System.Exception.InnerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> class with a specified error message and a line number.</summary>
      <param name="message">The message for the exception.</param>
      <param name="lineNumber">The line number of the malformed line.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> class with a specified error message, a line number, and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message for the exception.</param>
      <param name="lineNumber">The line number of the malformed line.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that is the cause of the current exception. If the <see cref="P:System.Exception.InnerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that contains contextual information about the source or destination.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, SerializationFormatter" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber">
      <summary>Gets the line number of the malformed line.</summary>
      <returns>The line number of the malformed line.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString">
      <summary>Creates and returns a string representation of the current exception. </summary>
      <returns>A string representation of the current exception.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.RecycleOption">
      <summary>Specifies whether a file should be deleted permanently or placed in the Recycle Bin.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently">
      <summary>Delete the file or directory permanently. Default.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin">
      <summary>Send the file or directory to the Recycle Bin.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SearchOption">
      <summary>Specifies whether to search all or only top-level directories.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly">
      <summary>Search only the specified directory and exclude subdirectories.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories">
      <summary>Search the specified directory and all subdirectories within it. Default.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <summary>Provides properties for accessing commonly referenced directories.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor">
      <summary>Returns an instance of the <see cref="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData">
      <summary>Gets a path name pointing to the Application Data directory for the all users.</summary>
      <returns>The path to the Application Data directory for the all users.</returns>
      <exception cref="T:System.Security.Permissions.EnvironmentPermission">Controls access to system and user environment variables. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData">
      <summary>Gets a path name pointing to the Application Data directory for the current user.</summary>
      <returns>The path to the Application Data directory for the current user.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop">
      <summary>Gets a path name pointing to the Desktop directory.</summary>
      <returns>The path to the Desktop directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments">
      <summary>Gets a path name pointing to the My Documents directory.</summary>
      <returns>The path to the My Documents directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic">
      <summary>Gets a path name pointing to the My Music directory.</summary>
      <returns>The path to the My Music directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures">
      <summary>Gets a path name pointing to the My Pictures directory.</summary>
      <returns>The path to the My Pictures directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles">
      <summary>Gets a path pointing to the Program Files directory.</summary>
      <returns>The path to the Program Files directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs">
      <summary>Gets a path name pointing to the Programs directory.</summary>
      <returns>The path to the Programs directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp">
      <summary>Gets a path name pointing to the Temp directory.</summary>
      <returns>The path to the Temp directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <summary>Provides methods and properties for parsing structured text files.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the TextFieldParser class.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. The stream to be parsed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is Nothing.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> cannot be read from.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Initializes a new instance of the TextFieldParser class.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. The stream to be parsed.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. The character encoding to use if encoding is not determined from file. Default is <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> or <paramref name="defaultEncoding" /> is Nothing.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> cannot be read from.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Initializes a new instance of the TextFieldParser class.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. The stream to be parsed.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. The character encoding to use if encoding is not determined from file. Default is <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">Boolean. Indicates whether to look for byte order marks at the beginning of the file. Default is True.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> or <paramref name="defaultEncoding" /> is Nothing.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> cannot be read from.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the TextFieldParser class.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. The stream to be parsed.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. The character encoding to use if encoding is not determined from file. Default is <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">Boolean. Indicates whether to look for byte order marks at the beginning of the file. Default is True.</param>
      <param name="leaveOpen">Boolean. Indicates whether to leave <paramref name="stream" /> open when the TextFieldParser object is closed. Default is False.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> or <paramref name="defaultEncoding" /> is Nothing.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> cannot be read from.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
      <summary>Initializes a new instance of the TextFieldParser class.</summary>
      <param name="reader">
        <see cref="T:System.IO.TextReader" />. The <see cref="T:System.IO.TextReader" /> stream to be parsed. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is Nothing.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
      <summary>Initializes a new instance of the TextFieldParser class.</summary>
      <param name="path">String. The complete path of the file to be parsed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is an empty string.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
      <summary>Initializes a new instance of the TextFieldParser class.</summary>
      <param name="path">String. The complete path of the file to be parsed.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. The character encoding to use if encoding is not determined from file. Default is <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is an empty string or <paramref name="defaultEncoding" /> is Nothing.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary>Initializes a new instance of the TextFieldParser class.</summary>
      <param name="path">String. The complete path of the file to be parsed.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. The character encoding to use if encoding is not determined from file. Default is <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">Boolean. Indicates whether to look for byte order marks at the beginning of the file. Default is True.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is an empty string or <paramref name="defaultEncoding" /> is Nothing.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
      <summary>Closes the current TextFieldParser object.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
      <summary>Defines comment tokens. A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.</summary>
      <returns>A string array that contains all of the comment tokens for the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</returns>
      <exception cref="T:System.ArgumentException">A comment token includes white space.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
      <summary>Defines the delimiters for a text file. </summary>
      <returns>A string array that contains all of the field delimiters for the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</returns>
      <exception cref="T:System.ArgumentException">A delimiter value is set to a newline character, an empty string, or Nothing.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose">
      <summary>Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
      <summary>Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</summary>
      <param name="disposing">Boolean. True releases both managed and unmanaged resources; False releases only unmanaged resources.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
      <summary>Returns True if there are no non-blank, non-comment lines between the current cursor position and the end of the file.</summary>
      <returns>True if there is no more data to read; otherwise, False.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
      <summary>Returns the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</summary>
      <returns>The line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
      <summary>Returns the number of the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</summary>
      <returns>The number of the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
      <summary>Denotes the width of each column in the text file being parsed.</summary>
      <returns>An integer array that contains the width of each column in the text file that is being parsed.</returns>
      <exception cref="T:System.ArgumentException">A width value in any location other than the last entry of the array is less than or equal to zero.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
      <summary>Allows the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
      <summary>Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.</summary>
      <returns>True if fields are enclosed in quotation marks; otherwise, False.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
      <summary>Returns the current line number, or returns -1 if no more characters are available in the stream.</summary>
      <returns>The current line number.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
      <summary>Reads the specified number of characters without advancing the cursor.</summary>
      <returns>A string that contains the specified number of characters read.</returns>
      <param name="numberOfChars">Int32. Number of characters to read. Required. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="numberOfChars" /> is less than 0.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
      <summary>Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.</summary>
      <returns>An array of strings that contains field values for the current line.</returns>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">A field cannot be parsed by using the specified format.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
      <summary>Returns the current line as a string and advances the cursor to the next line.</summary>
      <returns>The current line from the file or stream.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
      <summary>Reads the remainder of the text file and returns it as a string.</summary>
      <returns>The remaining text from the file or stream.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
      <summary>Sets the delimiters for the reader to the specified values, and sets the field type to Delimited.</summary>
      <param name="delimiters">Array of type String. </param>
      <exception cref="T:System.ArgumentException">A delimiter is zero-length.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
      <summary>Sets the delimiters for the reader to the specified values.</summary>
      <param name="fieldWidths">Array of Integer. </param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
      <summary>Indicates whether the file to be parsed is delimited or fixed-width.</summary>
      <returns>A <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> value that indicates whether the file to be parsed is delimited or fixed-width.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
      <summary>Indicates whether leading and trailing white space should be trimmed from field values.</summary>
      <returns>True if leading and trailing white space should be trimmed from field values; otherwise, False.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UICancelOption">
      <summary>Specifies whether an exception is thrown if the user clicks Cancel during an operation.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing">
      <summary>Do nothing when the user clicks Cancel.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException">
      <summary>Throw an exception when the user clicks Cancel.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UIOption">
      <summary>Specifies which dialog boxes to show when copying, deleting, or moving files or directories.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs">
      <summary>Only show error dialog boxes and hide progress dialog boxes. Default.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs">
      <summary>Show progress dialog box and any error dialog boxes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.AspLog">
      <summary>Provides a property and methods for writing event and exception information to the application's log listeners.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.AspLog.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.AspLog" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.AspLog" /> class. </summary>
      <param name="name">
        <see cref="T:System.String" />. The name to give to the <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> property object.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists">
      <summary>Creates a new <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> and adds it to the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption">
      <summary>Determines what to do when the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object attempts to write to a log and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException">
      <summary>Throw an exception.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages">
      <summary>Discard log messages.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
      <summary>Provides a simple listener that directs logging output to file.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the default name.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the supplied name.</summary>
      <param name="name">String. The name of the instance object.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
      <summary>Determines whether to append the output to the current file or write it to a new file.</summary>
      <returns>Boolean, with True indicating that the output is appended to the current file, and False indicating that output is written to a new file. The default setting for this property is True.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
      <summary>Indicates whether or not the writing to the log file stream flushes the buffer.</summary>
      <returns>Boolean, with True indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently. The default setting for this property is False.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
      <summary>Gets or sets the base name for the log files, which is used to create the full log-file name.</summary>
      <returns>String. The base name for the log files. The default is the application's product name.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close">
      <summary>Closes the underlying stream for the current log file and releases any resources associated with the current stream.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
      <summary>Gets or sets the log file directory when the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> property is set to <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</summary>
      <returns>String, which is the name of the log-file directory. The default setting for this property is the user's directory for application data.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
      <summary>Gets or sets the delimiter used to delimit fields within a log message.</summary>
      <returns>String, which is the delimiter used for fields within a log message. The default setting for this property is the TAB character.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
      <summary>Determines what to do when writing to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />. Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property, or if the log file size is greater than what the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> property allows. The default value is <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
      <summary>Closes the underlying stream and optionally releases the managed resources.</summary>
      <param name="disposing">True releases both managed and unmanaged resources; False releases only unmanaged resources. </param>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
      <summary>Gets or sets the encoding to use when creating a new log file.</summary>
      <returns>
        <see cref="T:System.Text.Encoding" />, which is the encoding to use when creating a new log file. The default value of this property is <see cref="T:System.Text.UTF8Encoding" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush">
      <summary>Flushes the underlying stream that writes to the current log file.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
      <summary>Gets the current full log-file name.</summary>
      <returns>String, which is the current full log-file name.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
      <summary>Gets the custom XML configuration attributes supported by the trace listener.</summary>
      <returns>String array containing the XML configuration attributes recognized by this listener.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
      <summary>Indicates whether or not the host name of the logging machine should be included in the output.</summary>
      <returns>Boolean. Use True if the host identifier should be included; otherwise use False. The default value is False.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
      <summary>Gets or sets location for the log files.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, which is the location for the log file. The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
      <summary>Determines which date to include in the names of the log files.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />. This indicates which date to include in the log-file names. The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
      <summary>Gets or sets the maximum allowed size of the log file, in bytes.</summary>
      <returns>Long. This is the maximum allowed log-file size, in bytes. The default value is 5000000.</returns>
      <exception cref="T:System.ArgumentException">When this property is set to a value less than 1000.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
      <summary>Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</summary>
      <returns>Long. This is the amount of free disk space necessary. The default value is 10000000.</returns>
      <exception cref="T:System.ArgumentException">When this property is set to a value less than 0.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary>Writes trace information, a data object, and event information to the output file or stream.</summary>
      <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
      <param name="source">A name of the trace source that invoked this method. </param>
      <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</param>
      <param name="id">A numeric identifier for the event.</param>
      <param name="data">The trace data to emit.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary>Writes trace information, an array of data objects, and event information to the output file or stream.</summary>
      <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
      <param name="source">The name of the trace source that invoked this method. </param>
      <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</param>
      <param name="id">A numeric identifier for the event.</param>
      <param name="data">An array of objects to emit as data.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary>Writes trace information, a message and event information to the output file or stream.</summary>
      <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
      <param name="source">A name of the trace source that invoked this method. </param>
      <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</param>
      <param name="id">A numeric identifier for the event.</param>
      <param name="message">A message to write.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary>Writes trace information, a formatted array of objects, and event information to the output file or stream.</summary>
      <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
      <param name="source">A name of the trace source that invoked this method. </param>
      <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</param>
      <param name="id">A numeric identifier for the event.</param>
      <param name="format">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</param>
      <param name="args">An Object array containing zero or more objects to format.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
      <summary>Writes a verbatim message to disk, without any additional context information.</summary>
      <param name="message">String. The custom message to write.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
      <summary>Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</summary>
      <param name="message">String. The custom message to write.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.Log">
      <summary>Provides a property and methods for writing event and exception information to the application's log listeners.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class. </summary>
      <param name="name">
        <see cref="T:System.String" />. The name to give to the <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> property object.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter">
      <summary>Gets the file the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object that underlies the Log object. </summary>
      <returns>Returns the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object that underlies the Log object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists">
      <summary>Creates a new <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object and adds it to the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
      <summary>Gets to the <see cref="T:System.Diagnostics.TraceSource" /> object that underlies the Log object.</summary>
      <returns>Returns the <see cref="T:System.Diagnostics.TraceSource" /> object that underlies the Log object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
      <summary>Writes a message to the application's log listeners.</summary>
      <param name="message">Required. The message to log. If <paramref name="message" /> is Nothing, an empty string is used.</param>
      <exception cref="T:System.Security.SecurityException">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
      <summary>Writes a message to the application's log listeners.</summary>
      <param name="message">Required. The message to log. If <paramref name="message" /> is Nothing, an empty string is used.</param>
      <param name="severity">The type of message. By default, TraceEventType.Information.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</exception>
      <exception cref="T:System.Security.SecurityException">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
      <summary>Writes a message to the application's log listeners.</summary>
      <param name="message">Required. The message to log. If <paramref name="message" /> is Nothing, an empty string is used.</param>
      <param name="severity">The type of message. By default, TraceEventType.Information.</param>
      <param name="id">Message identifier, typically used for correlation. By default, related to <paramref name="entryType" /> as described in the table.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</exception>
      <exception cref="T:System.Security.SecurityException">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
      <summary>Writes exception information to the application's log listeners.</summary>
      <param name="ex">Required. Exception to log.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ex" /> is Nothing.</exception>
      <exception cref="T:System.Security.SecurityException">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
      <summary>Writes exception information to the application's log listeners.</summary>
      <param name="ex">Required. Exception to log.</param>
      <param name="severity">The type of message. By default, <see cref="F:System.Diagnostics.TraceEventType.Error" />.</param>
      <param name="additionalInfo">String to append to the message. By default, this is an empty string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ex" /> is Nothing.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</exception>
      <exception cref="T:System.Security.SecurityException">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
      <summary>Writes exception information to the application's log listeners.</summary>
      <param name="ex">Required. Exception to log.</param>
      <param name="severity">The type of message. By default, <see cref="F:System.Diagnostics.TraceEventType.Error" />.</param>
      <param name="additionalInfo">String to append to the message. By default, this is an empty string.</param>
      <param name="id">Message identifier, typically used for correlation. By default, related to <paramref name="entryType" /> as described in the table in the Remarks section.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ex" /> is Nothing.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</exception>
      <exception cref="T:System.Security.SecurityException">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption">
      <summary>Determines which date to include in the names of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class log files.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None">
      <summary>Do not include the date in the log file name.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily">
      <summary>Include the current date in the log file name.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly">
      <summary>Include the first day of the current week in the log file name.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.LogFileLocation">
      <summary>Determines which predefined path the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class uses to write its log files.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory">
      <summary>Use the path of the current system's temporary folder.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory">
      <summary>Use the path for a user's application data.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory">
      <summary>Use the path for the application data that is shared among all users.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory">
      <summary>Use the path for the executable file that started the application.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom">
      <summary>If the string specified by <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" /> is not empty, then use it as the path. Otherwise, use the path for a user's application data.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.ClipboardProxy">
      <summary>Provides methods for manipulating the Clipboard.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear">
      <summary>Clears the Clipboard.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio">
      <summary>Indicates whether the Clipboard contains audio data.</summary>
      <returns>True if audio data is stored on the Clipboard; otherwise False.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)">
      <summary>Indicates whether the Clipboard contains data in the specified custom format.</summary>
      <returns>True if data in the specified custom format is stored on the Clipboard; otherwise False.</returns>
      <param name="format">String. Name of the custom format to be checked. Required. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList">
      <summary>Returns a Boolean indicating whether the Clipboard contains a file drop list.</summary>
      <returns>True if a file drop list is stored on the Clipboard; otherwise False.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage">
      <summary>Returns a Boolean indicating whether an image is stored on the Clipboard.</summary>
      <returns>True if an image is stored on the Clipboard; otherwise False.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText">
      <summary>Determines if there is text on the Clipboard.</summary>
      <returns>True if the Clipboard contains text; otherwise False.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(System.Windows.Forms.TextDataFormat)">
      <summary>Determines if there is text on the Clipboard.</summary>
      <returns>True if the Clipboard contains text; otherwise False.</returns>
      <param name="format">
        <see cref="T:System.Windows.Forms.TextDataFormat" />. If specified, identifies what text format to be checked for. Required. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream">
      <summary>Retrieves an audio stream from the Clipboard.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> object containing audio data or Nothing if the Clipboard does not contain any audio data.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)">
      <summary>Retrieves data in a custom format from the Clipboard.</summary>
      <returns>An Object representing the Clipboard data or Nothing if the Clipboard does not contain any data that is in the specified format or can be converted to that format.</returns>
      <param name="format">String. Name of the data format. Required. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject">
      <summary>Retrieves data from the Clipboard as an <see cref="T:System.Windows.Forms.IDataObject" />.</summary>
      <returns>An <see cref="T:System.Windows.Forms.IDataObject" /> object that represents the data currently on the Clipboard, or Nothing if there is no data on the Clipboard.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList">
      <summary>Retrieves a collection of strings representing file names from the Clipboard.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> containing file names or Nothing if the Clipboard does not contain any data that is in the <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> format or can be converted to that format.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage">
      <summary>Retrieves an image from the Clipboard.</summary>
      <returns>An <see cref="T:System.Drawing.Image" /> representing the Clipboard image data or Nothing if the Clipboard does not contain any data that is in the <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> format or can be converted to that format.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText">
      <summary>Retrieves text from the Clipboard.</summary>
      <returns>The Clipboard text data or an empty string if the Clipboard does not contain data in the <see cref="F:System.Windows.Forms.DataFormats.Text" /> or <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format, depending on the operating system.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(System.Windows.Forms.TextDataFormat)">
      <summary>Retrieves text from the Clipboard.</summary>
      <returns>The Clipboard text data or an empty string if the Clipboard does not contain data in the specified format.</returns>
      <param name="format">
        <see cref="T:System.Windows.Forms.TextDataFormat" />. If specified, identifies what text format should be retrieved. Default is <see cref="F:System.Windows.Forms.TextDataFormat.CommaSeparatedValue" />. Required. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.Byte[])">
      <summary>Writes audio data to the Clipboard.</summary>
      <param name="audioBytes">Byte array. Audio data to be written to the Clipboard. Required. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.IO.Stream)">
      <summary>Writes audio data to the Clipboard.</summary>
      <param name="audioStream">
        <see cref="T:System.IO.Stream" /> Audio data to be written to the clipboard. Required. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)">
      <summary>Writes data in a custom format to the Clipboard.</summary>
      <param name="format">String. Format of data. Required. </param>
      <param name="data">Object. Data object to be written to the Clipboard. Required. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)">
      <summary>Writes a <see cref="T:System.Windows.Forms.DataObject" /> to the Clipboard.</summary>
      <param name="data">
        <see cref="T:System.Windows.Forms.DataObject" />. Data object to be written to the Clipboard. Required. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)">
      <summary>Writes a collection of strings representing file paths to the Clipboard.</summary>
      <param name="filePaths">
        <see cref="T:System.Collections.Specialized.StringCollection" />. List of file names. Required. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)">
      <summary>Writes an image to the Clipboard.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" />. Image to be written. Required. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String)">
      <summary>Writes text to the Clipboard.</summary>
      <param name="text">String. Text to be written. Required. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is Nothing.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String,System.Windows.Forms.TextDataFormat)">
      <summary>Writes text to the Clipboard.</summary>
      <param name="text">String. Text to be written. Required. </param>
      <param name="format">
        <see cref="T:System.Windows.Forms.TextDataFormat" />. Format to be used when writing text. Default is <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />. Required. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is Nothing.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.FileSystemProxy">
      <summary>Provides properties and methods for working with drives, files, and directories.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)">
      <summary>Combines two paths and returns a properly formatted path.</summary>
      <returns>The combination of the specified paths.</returns>
      <param name="baseDirectory">String. First path to be combined. </param>
      <param name="relativePath">String. Second path to be combined. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> or <paramref name="relativePath" /> are malformed paths.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)">
      <summary>Copies a directory to another directory.</summary>
      <param name="sourceDirectoryName">The directory to be copied.</param>
      <param name="destinationDirectoryName">The location to which the directory should be copied.</param>
      <exception cref="T:System.ArgumentException">The new name specified for the directory contains a colon (:) or slash (\ or /).</exception>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The source directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source directory is a root directory</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing file.</exception>
      <exception cref="T:System.IO.IOException">The source path and target path are the same.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A folder name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">A destination file exists but cannot be accessed.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copies a directory to another directory.</summary>
      <param name="sourceDirectoryName">The directory to be copied.</param>
      <param name="destinationDirectoryName">The location to which the directory should be copied.</param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs.</param>
      <exception cref="T:System.ArgumentException">The new name specified for the directory contains a colon (:) or slash (\ or /).</exception>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The source directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source directory is a root directory</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing file.</exception>
      <exception cref="T:System.IO.IOException">The source path and target path are the same.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A folder name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">A destination file exists but cannot be accessed.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> is set to UIOption.AllDialogs and the user cancels the operation, or one or more files in the directory cannot be copied.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copies a directory to another directory.</summary>
      <param name="sourceDirectoryName">The directory to be copied.</param>
      <param name="destinationDirectoryName">The location to which the directory should be copied.</param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs.</param>
      <param name="onUserCancel">Specifies what should be done if the user clicks Cancel during the operation. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">The new name specified for the directory contains a colon (:) or slash (\ or /).</exception>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The source directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source directory is a root directory</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing file.</exception>
      <exception cref="T:System.IO.IOException">The source path and target path are the same.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A folder name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">A destination file exists but cannot be accessed.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> is set to UIOption.AllDialogs and the user cancels the operation, or one or more files in the directory cannot be copied.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>Copies a directory to another directory.</summary>
      <param name="sourceDirectoryName">The directory to be copied.</param>
      <param name="destinationDirectoryName">The location to which the directory should be copied.</param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False.</param>
      <exception cref="T:System.ArgumentException">The new name specified for the directory contains a colon (:) or slash (\ or /).</exception>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The source directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source directory is a root directory</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing file.</exception>
      <exception cref="T:System.IO.IOException">The source path and target path are the same.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A folder name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">A destination file exists but cannot be accessed.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)">
      <summary>Copies a file to a new location.</summary>
      <param name="sourceFileName">The file to be copied. </param>
      <param name="destinationFileName">The location to which the file should be copied. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">The system could not retrieve the absolute path.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName " />contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing directory.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file.</exception>
      <exception cref="T:System.IO.IOException">A file in the target directory with the same name is in use.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copies a file to a new location.</summary>
      <param name="sourceFileName">The file to be copied. </param>
      <param name="destinationFileName">The location to which the file should be copied. </param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">The system could not retrieve the absolute path.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName " />contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing directory.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file.</exception>
      <exception cref="T:System.IO.IOException">A file in the target directory with the same name is in use.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copies a file to a new location.</summary>
      <param name="sourceFileName">The file to be copied. </param>
      <param name="destinationFileName">The location to which the file should be copied. </param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs.</param>
      <param name="onUserCancel">Specifies what should be done if the user clicks Cancel during the operation. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">The system could not retrieve the absolute path.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName " />contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing directory.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file.</exception>
      <exception cref="T:System.IO.IOException">A file in the target directory with the same name is in use.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> is set to ThrowException, and the user has canceled the operation or an unspecified I/O error occurs.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)">
      <summary>Copies a file to a new location.</summary>
      <param name="sourceFileName">The file to be copied. </param>
      <param name="destinationFileName">The location to which the file should be copied. </param>
      <param name="overwrite">True if existing files should be overwritten; otherwise False. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">The system could not retrieve the absolute path.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName " />contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The combined path points to an existing directory.</exception>
      <exception cref="T:System.IO.IOException">The user does not have sufficient permissions to access the file.</exception>
      <exception cref="T:System.IO.IOException">A file in the target directory with the same name is in use.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)">
      <summary>Creates a directory.</summary>
      <param name="directory">Name and location of the directory. </param>
      <exception cref="T:System.ArgumentException">The directory name is malformed. For example, it contains illegal characters or is only white space.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The directory name is too long.</exception>
      <exception cref="T:System.NotSupportedException">The directory name is only a colon (:).</exception>
      <exception cref="T:System.IO.IOException">The parent directory of the directory to be created is read-only</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have permission to create the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory">
      <summary>Gets or sets the current directory.</summary>
      <returns>The current directory for file I/O operations.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is not valid.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>Deletes a directory.</summary>
      <param name="directory">Directory to be deleted. </param>
      <param name="onDirectoryNotEmpty">Specifies what should be done when a directory that is to be deleted contains files or directories. Default is DeleteDirectoryOption.DeleteAllContents.</param>
      <exception cref="T:System.ArgumentException">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist or is a file.</exception>
      <exception cref="T:System.IO.IOException">The directory is not empty, and <paramref name="onDirectoryNotEmpty" /> is set to ThrowIfDirectoryNonEmpty.</exception>
      <exception cref="T:System.IO.IOException">The user does not have permission to delete the directory or subdirectory.</exception>
      <exception cref="T:System.IO.IOException">A file in the directory or subdirectory is in use.</exception>
      <exception cref="T:System.NotSupportedException">The directory name contains a colon (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have required permissions.</exception>
      <exception cref="T:System.OperationCanceledException">The user cancels the operation or the directory cannot be deleted.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Deletes a directory.</summary>
      <param name="directory">Directory to be deleted. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="recycle">Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is RecycleOption.DeletePermanently. </param>
      <exception cref="T:System.ArgumentException">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist or is a file.</exception>
      <exception cref="T:System.IO.IOException">The directory is not empty, and <paramref name="onDirectoryNotEmpty" /> is set to ThrowIfDirectoryNonEmpty.</exception>
      <exception cref="T:System.IO.IOException">The user does not have permission to delete the directory or subdirectory.</exception>
      <exception cref="T:System.IO.IOException">A file in the directory or subdirectory is in use.</exception>
      <exception cref="T:System.NotSupportedException">The directory name contains a colon (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have required permissions.</exception>
      <exception cref="T:System.OperationCanceledException">The user cancels the operation or the directory cannot be deleted.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Deletes a directory.</summary>
      <param name="directory">Directory to be deleted. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="recycle">Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is RecycleOption.DeletePermanently. </param>
      <param name="onUserCancel">Specifies whether to throw an exception if the user clicks Cancel. </param>
      <exception cref="T:System.ArgumentException">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist or is a file.</exception>
      <exception cref="T:System.IO.IOException">The directory is not empty, and <paramref name="onDirectoryNotEmpty" /> is set to ThrowIfDirectoryNonEmpty.</exception>
      <exception cref="T:System.IO.IOException">The user does not have permission to delete the directory or subdirectory.</exception>
      <exception cref="T:System.IO.IOException">A file in the directory or subdirectory is in use.</exception>
      <exception cref="T:System.NotSupportedException">The directory name contains a colon (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.Security.SecurityException">The user does not have required permissions.</exception>
      <exception cref="T:System.OperationCanceledException">The user cancels the operation or the directory cannot be deleted.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)">
      <summary>Deletes a file.</summary>
      <param name="file">Name and path of the file to be deleted. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.IOException">The file is in use.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have permission to delete the file or the file is read-only.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Deletes a file.</summary>
      <param name="file">Name and path of the file to be deleted. </param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="recycle">Whether or not the deleted file should be sent to the Recycle Bin. Default is RecycleOption.DeletePermanently. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.IOException">The file is in use.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have permission to delete the file or the file is read-only.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Deletes a file.</summary>
      <param name="file">Name and path of the file to be deleted. </param>
      <param name="showUI">Whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="recycle">Whether or not the deleted file should be sent to the Recycle Bin. Default is RecycleOption.DeletePermanently. </param>
      <param name="onUserCancel">Specifies whether or not an exception is thrown when the user cancels the operation. Default is UICancelOption.ThrowException. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.IO.IOException">The file is in use.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have permission to delete the file or the file is read-only.</exception>
      <exception cref="T:System.OperationCanceledException">The user cancelled the operation and <paramref name="onUserCancel" /> is set to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)">
      <summary>Returns True if the specified directory exists.</summary>
      <returns>True if the directory exists; otherwise False.</returns>
      <param name="directory">Path of the directory. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives">
      <summary>Returns a read-only collection of all available drive names.</summary>
      <returns>A read-only collection of all available drives as <see cref="T:System.IO.DriveInfo" /> objects.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)">
      <summary>Returns True if the specified file exists.</summary>
      <returns>Returns True if the file exists; otherwise this method returns False.</returns>
      <param name="file">Name and path of the file. </param>
      <exception cref="T:System.ArgumentException">The name of the file ends with a backslash (\).</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>Returns a read-only collection of strings representing the names of files containing the specified text.</summary>
      <returns>Read-only collection of the names of files containing the specified text..</returns>
      <param name="directory">The directory to be searched.</param>
      <param name="containsText">The search text.</param>
      <param name="ignoreCase">True if the search should be case-sensitive; otherwise False. Default is True.</param>
      <param name="searchType">Whether to include subfolders. Default is SearchOption.SearchTopLevelOnly. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The specified directory points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">The specified directory path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Returns a read-only collection of strings representing the names of files containing the specified text.</summary>
      <returns>Read-only collection of the names of files containing the specified text..</returns>
      <param name="directory">The directory to be searched.</param>
      <param name="containsText">The search text.</param>
      <param name="ignoreCase">True if the search should be case-sensitive; otherwise False. Default is True.</param>
      <param name="searchType">Whether to include subfolders. Default is SearchOption.SearchTopLevelOnly. </param>
      <param name="fileWildcards">Pattern to be matched.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The specified directory points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">The specified directory path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)">
      <summary>Returns a collection of strings representing the path names of subdirectories within a directory.</summary>
      <returns>Read-only collection of the path names of subdirectories within the specified directory..</returns>
      <param name="directory">Name and path of directory. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The specified directory points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Returns a collection of strings representing the path names of subdirectories within a directory.</summary>
      <returns>Read-only collection of the path names of subdirectories within the specified directory.</returns>
      <param name="directory">Name and path of directory. </param>
      <param name="searchType">Whether to include subfolders. Default is SearchOption.SearchTopLevelOnly. </param>
      <param name="wildcards">Pattern to match names. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">One or more of the specified wildcard characters is Nothing, an empty string, or contains only spaces.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The specified directory points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)">
      <summary>Returns a <see cref="T:System.IO.DirectoryInfo" /> object for the specified path.</summary>
      <returns>
        <see cref="T:System.IO.DirectoryInfo" /> object for the specified path.</returns>
      <param name="directory">String. Path of directory. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">The directory path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)">
      <summary>Returns a <see cref="T:System.IO.DriveInfo" /> object for the specified drive.</summary>
      <returns>
        <see cref="T:System.IO.DriveInfo" /> object for the specified drive.</returns>
      <param name="drive">Drive to be examined. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="drive" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)">
      <summary>Returns a <see cref="T:System.IO.FileInfo" /> object for the specified file.</summary>
      <returns>
        <see cref="T:System.IO.FileInfo" /> object for the specified file</returns>
      <param name="file">Name and path of the file. </param>
      <exception cref="T:System.ArgumentException">The path name is malformed. For example, it contains invalid characters or is only white space. The file name has a trailing slash mark.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.NotSupportedException">The path contains a colon in the middle of the string.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path is too long.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks ACL (access control list) access to the file.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)">
      <summary>Returns a read-only collection of strings representing the names of files within a directory.</summary>
      <returns>Read-only collection of file names from the specified directory.</returns>
      <param name="directory">Directory to be searched. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory to search does not exist.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Returns a read-only collection of strings representing the names of files within a directory.</summary>
      <returns>Read-only collection of file names from the specified directory.</returns>
      <param name="directory">Directory to be searched. </param>
      <param name="searchType">Whether to include subfolders. Default is SearchOption.SearchTopLevelOnly. </param>
      <param name="wildcards">Pattern to be matched. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory to search does not exist.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> points to an existing file.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user lacks necessary permissions.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)">
      <summary>Parses the file name out of the path provided.</summary>
      <returns>The file name from the specified path.</returns>
      <param name="path">Required. Path to be parsed. String.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)">
      <summary>Returns the parent path of the provided path.</summary>
      <returns>The parent path of the provided path.</returns>
      <param name="path">Path to be examined. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">Path does not have a parent path because it is a root path.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is Nothing.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName">
      <summary>Creates a uniquely named zero-byte temporary file on disk and returns the full path of that file.</summary>
      <returns>String containing the full path of the temporary file.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)">
      <summary>Moves a directory from one location to another.</summary>
      <param name="sourceDirectoryName">Path of the directory to be moved. </param>
      <param name="destinationDirectoryName">Path of the directory to which the source directory is being moved. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source is a root directory or The source path and the target path are the same.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Moves a directory from one location to another.</summary>
      <param name="sourceDirectoryName">Path of the directory to be moved. </param>
      <param name="destinationDirectoryName">Path of the directory to which the source directory is being moved. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source is a root directory or The source path and the target path are the same.</exception>
      <exception cref="T:System.IO.IOException">The target directory already exists and o<paramref name="verwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Moves a directory from one location to another.</summary>
      <param name="sourceDirectoryName">Path of the directory to be moved. </param>
      <param name="destinationDirectoryName">Path of the directory to which the source directory is being moved. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="onUserCancel">Specifies whether or not an exception is thrown when the user cancels the operation. Default is UICancelOption.ThrowException. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source is a root directory or The source path and the target path are the same.</exception>
      <exception cref="T:System.IO.IOException">The target directory already exists and o<paramref name="verwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> is set to ThrowException and a subdirectory of the file cannot be copied.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> is set to ThrowException, and the user cancels the operation, or the operation cannot be completed.</exception>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="onUserCancel" /> is set to ThrowException, and the user lacks necessary permissions.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>Moves a directory from one location to another.</summary>
      <param name="sourceDirectoryName">Path of the directory to be moved. </param>
      <param name="destinationDirectoryName">Path of the directory to which the source directory is being moved. </param>
      <param name="overwrite">True if existing directories should be overwritten; otherwise False. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">The source is a root directory or The source path and the target path are the same.</exception>
      <exception cref="T:System.IO.IOException">The target directory already exists and o<paramref name="verwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is cyclic.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)">
      <summary>Moves a file to a new location.</summary>
      <param name="sourceFileName">Path of the file to be moved. </param>
      <param name="destinationFileName">Path of the directory into which the file should be moved. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Moves a file to a new location.</summary>
      <param name="sourceFileName">Path of the file to be moved. </param>
      <param name="destinationFileName">Path of the directory into which the file should be moved. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Moves a file to a new location.</summary>
      <param name="sourceFileName">Path of the file to be moved. </param>
      <param name="destinationFileName">Path of the directory into which the file should be moved. </param>
      <param name="showUI">Specifies whether to visually track the operation's progress. Default is UIOption.OnlyErrorDialogs. </param>
      <param name="onUserCancel">Specifies whether or not an exception is thrown when the user cancels the operation. Default is UICancelOption.ThrowException. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> is set to ThrowException, and either the user has cancelled the operation or an unspecified I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)">
      <summary>Moves a file to a new location.</summary>
      <param name="sourceFileName">Path of the file to be moved. </param>
      <param name="destinationFileName">Path of the directory into which the file should be moved. </param>
      <param name="overwrite">True to overwrite existing files; otherwise False. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The source file is not valid or does not exist.</exception>
      <exception cref="T:System.IO.IOException">The destination file exists and <paramref name="overwrite" /> is set to False.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeSubWindows" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)">
      <summary>The OpenTextFieldParser method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs. The TextFieldParser object can be used to read both delimited and fixed-width files.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</returns>
      <param name="file">The file to be opened with the TextFieldParser.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />  property is assigned the text contained in the line.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>The OpenTextFieldParser method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs. The TextFieldParser object can be used to read both delimited and fixed-width files.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</returns>
      <param name="file">The file to be opened with the TextFieldParser.</param>
      <param name="fieldWidths">Widths of the fields.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />  property is assigned the text contained in the line.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])">
      <summary>The OpenTextFieldParser method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs. The TextFieldParser object can be used to read both delimited and fixed-width files.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</returns>
      <param name="file">The file to be opened with the TextFieldParser.</param>
      <param name="delimiters">Delimiters for the fields.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />  property is assigned the text contained in the line.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)">
      <summary>Opens a <see cref="T:System.IO.StreamReader" /> object to read from a file.</summary>
      <returns>
        <see cref="T:System.IO.StreamReader" /> object to read from the file</returns>
      <param name="file">File to be read. </param>
      <exception cref="T:System.ArgumentException">The file name ends with a backslash (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">The specified file cannot be found.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to read from the file.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>Opens a <see cref="T:System.IO.StreamReader" /> object to read from a file.</summary>
      <returns>
        <see cref="T:System.IO.StreamReader" /> object to read from the file</returns>
      <param name="file">File to be read. </param>
      <param name="encoding">The encoding to use for the file contents. Default is ASCII. </param>
      <exception cref="T:System.ArgumentException">The file name ends with a backslash (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">The specified file cannot be found.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to read from the file.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>Opens a <see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</summary>
      <returns>
        <see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</returns>
      <param name="file">File to be written to. </param>
      <param name="append">True to append to the contents of the file; False to overwrite the contents of the file. Default is False. </param>
      <exception cref="T:System.ArgumentException">The file name ends with a trailing slash.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>Opens a <see cref="T:System.IO.StreamWriter" /> to write to the specified file.</summary>
      <returns>
        <see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</returns>
      <param name="file">File to be written to. </param>
      <param name="append">True to append to the contents in the file; False to overwrite the contents of the file. Default is False. </param>
      <param name="encoding">Encoding to be used in writing to the file. Default is ASCII. </param>
      <exception cref="T:System.ArgumentException">The file name ends with a trailing slash.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)">
      <summary>Returns the contents of a file as a byte array.</summary>
      <returns>Byte array containing the contents of the file.</returns>
      <param name="file">File to be read. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)">
      <summary>Returns the contents of a text file as a String.</summary>
      <returns>String containing the contents of the file.</returns>
      <param name="file">Name and path of the file to read. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)">
      <summary>Returns the contents of a text file as a String.</summary>
      <returns>String containing the contents of the file.</returns>
      <param name="file">Name and path of the file to read. </param>
      <param name="encoding">Character encoding to use in reading the file. Default is UTF-8.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)">
      <summary>Renames a directory.</summary>
      <param name="directory">Path and name of directory to be renamed. </param>
      <param name="newName">New name for directory. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contains path information.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> is Nothing.-or-<paramref name="newName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The directory does not exist.</exception>
      <exception cref="T:System.IO.IOException">There is an existing file or directory with the name specified in <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds 248 characters.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)">
      <summary>Renames a file.</summary>
      <param name="file">File to be renamed. </param>
      <param name="newName">New name of file. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contains path information or ends with a backslash (\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.-or-<paramref name="newName" /> is Nothing or an empty string.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">There is an existing file or directory with the name specified in <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have required permission.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories">
      <summary>Gets an object that provides properties for accessing commonly referenced directories.</summary>
      <returns>This property returns the <see cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" /> object for the computer.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>Writes data to a binary file.</summary>
      <param name="file">Path and name of the file to be written to. </param>
      <param name="data">Data to be written to the file. </param>
      <param name="append">True to append to the file contents; False to overwrite the file contents. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>Writes text to a file.</summary>
      <param name="file">File to be written to. </param>
      <param name="text">Text to be written to file. </param>
      <param name="append">True to append to the contents of the file; False to overwrite the contents of the file. Default is False. </param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>Writes text to a file.</summary>
      <param name="file">File to be written to. </param>
      <param name="text">Text to be written to file. </param>
      <param name="append">True to append to the contents of the file; False to overwrite the contents of the file. Default is False. </param>
      <param name="encoding">What encoding to use when writing to file. Default is UTF-8.</param>
      <exception cref="T:System.ArgumentException">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> is Nothing.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file does not exist.</exception>
      <exception cref="T:System.IO.IOException">The file is in use by another process, or an I/O error occurs.</exception>
      <exception cref="T:System.IO.PathTooLongException">The path exceeds the system-defined maximum length.</exception>
      <exception cref="T:System.NotSupportedException">A file or directory name in the path contains a colon (:) or is in an invalid format.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to write the string to buffer.</exception>
      <exception cref="T:System.Security.SecurityException">The user lacks necessary permissions to view the path.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.RegistryProxy">
      <summary>Provides properties and methods for manipulating the registry.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot">
      <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type which provides access to HKEY_CLASSES_ROOT.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig">
      <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type which provides access to HKEY_CURRENT_CONFIG.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser">
      <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type which provides access to HKEY_CURRENT_USER.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.DynData">
      <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type, which provides access to HKEY_DYNDATA.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)">
      <summary>Gets a value from a registry key.</summary>
      <returns>Gets a value from a registry key.</returns>
      <param name="keyName">String. Key from which the value is to be retrieved. Required. </param>
      <param name="valueName">String. Value to be retrieved. Required. </param>
      <param name="defaultValue">Object. Default value to be supplied if the value does not exist. Required. </param>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key. </exception>
      <exception cref="T:System.IO.IOException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" /> does not begin with a valid registry root. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine">
      <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type, which provides access to HKEY_LOCAL_MACHINE.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData">
      <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type, which provides access to HKEY_PERFORMANCE_DATA.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)">
      <summary>Writes a value to a registry key.</summary>
      <param name="keyName">String. Name of the key to be written to. Required. </param>
      <param name="valueName">String. Name of the value to be written. Required. </param>
      <param name="value">Object. Value to be written. Required. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is Nothing. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" /> does not begin with a valid registry root.-or-<paramref name="valueName" /> is longer than the maximum length allowed (255 characters). </exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only and thus cannot be written to; for example, it is a root-level node, or it has not been opened with write access.. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
      <summary>Writes a value to a registry key.</summary>
      <param name="keyName">String. Name of the key to be written to. Required. </param>
      <param name="valueName">String. Name of the value to be written. Required. </param>
      <param name="value">Object. Value to be written. Required. </param>
      <param name="valueKind">
        <see cref="T:Microsoft.Win32.RegistryValueKind" />. Required. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is Nothing. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" /> does not begin with a valid registry root.-or-<paramref name="keyName" /> is longer than the maximum length allowed (255 characters).-or- The type of <paramref name="value" /> does not match the registry data type specified by <paramref name="valueKind" />, therefore the data cannot be converted properly. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and thus cannot be written to; for example, it is a root-level node, or it has not been opened with write access. </exception>
      <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.Users">
      <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type, which provides access to HKEY_USERS.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy">
      <summary>Provides properties for accessing commonly referenced directories.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.AllUsersApplicationData">
      <summary>Gets a path name pointing to the Application Data directory for the all users.</summary>
      <returns>The path to the Application Data directory for the all users.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.CurrentUserApplicationData">
      <summary>Gets a path name pointing to the Application Data directory for the current user.</summary>
      <returns>The path to the Application Data directory for the current user.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Desktop">
      <summary>Gets a path name pointing to the Desktop directory.</summary>
      <returns>The path to the Desktop directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyDocuments">
      <summary>Gets a path name pointing to the My Documents directory.</summary>
      <returns>The path to the My Documents directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyMusic">
      <summary>Gets a path name pointing to the My Music directory.</summary>
      <returns>The path to the My Music directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyPictures">
      <summary>Gets a path name pointing to the My Pictures directory.</summary>
      <returns>The path to the My Pictures directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.ProgramFiles">
      <summary>Gets a path pointing to the Program Files directory.</summary>
      <returns>The path to the Program Files directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Programs">
      <summary>Gets a path name pointing to the Programs directory.</summary>
      <returns>The path to the Programs directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Temp">
      <summary>Gets a path name pointing to the Temp directory.</summary>
      <returns>The path to the Temp directory.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">The path is empty, usually because the operating system does not support the directory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1">
      <summary>This class supports My in Visual Basic.</summary>
      <typeparam name="T">The type of the object to store.</typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.#ctor">
      <summary>This class supports My in Visual Basic.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.Value">
      <summary>This property supports My in Visual Basic.</summary>
      <returns>The value associated with this class.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\PresentationFramework.Royale.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PresentationFramework.Royale</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Windows.Themes.BulletChrome">
      <summary>Creates the theme-specific look for Windows Presentation Foundation (WPF) <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> elements. A <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> defines the appearance of <see cref="T:System.Windows.Controls.CheckBox" /> and <see cref="T:System.Windows.Controls.RadioButton" /> elements.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.BulletChrome.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.Themes.BulletChrome" /> class.</summary>
    </member>
    <member name="P:Microsoft.Windows.Themes.BulletChrome.Background">
      <summary>Gets or sets the brush used to fill the background of the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" />.  </summary>
      <returns>The brush used to fill the background of the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.BulletChrome.BackgroundProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.BulletChrome.Background" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.BulletChrome.Background" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.BulletChrome.BorderBrush">
      <summary>Gets or sets the brush used to draw the outer border of the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" />.  </summary>
      <returns>The brush used to draw the outer border of the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.BulletChrome.BorderBrushProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.BulletChrome.BorderBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.BulletChrome.BorderBrush" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.BulletChrome.BorderThickness">
      <summary>Gets or sets the thickness used to draw the outer border of the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" />.  </summary>
      <returns>The thickness used to draw the border of the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.BulletChrome.BorderThicknessProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.BulletChrome.BorderThickness" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.BulletChrome.BorderThickness" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.BulletChrome.IsChecked">
      <summary>Gets or sets a value indicating whether the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> is checked.  </summary>
      <returns>true if the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> is checked; false if the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> is not checked; otherwise, null.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.BulletChrome.IsCheckedProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.BulletChrome.IsChecked" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.BulletChrome.IsChecked" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.BulletChrome.IsRound">
      <summary>Gets or sets a value indicating whether the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> has round corners.   </summary>
      <returns>true if the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> has round corners; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.BulletChrome.IsRoundProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.BulletChrome.IsRound" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.BulletChrome.IsRound" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.BulletChrome.RenderMouseOver">
      <summary>Gets or sets a value indicating whether the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> appears as if the mouse is over it.  </summary>
      <returns>true if the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> appears as if the mouse is over it; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.BulletChrome.RenderMouseOverProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.BulletChrome.RenderMouseOver" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.BulletChrome.RenderMouseOver" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.BulletChrome.RenderPressed">
      <summary>Gets or sets a value indicating whether the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> appears pressed.  </summary>
      <returns>true if the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> appears pressed; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.BulletChrome.RenderPressedProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.BulletChrome.RenderPressed" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.BulletChrome.RenderPressed" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ButtonChrome.Fill">
      <summary>Gets or sets the brush used to draw the color inside the <see cref="T:System.Windows.Controls.Button" />.  </summary>
      <returns>The brush.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ButtonChrome.FillProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.Fill" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.Fill" /> dependency property.</returns>
    </member>
    <member name="T:Microsoft.Windows.Themes.ProgressBarBrushConverter">
      <summary>Creates the <see cref="T:System.Windows.Media.Brush" /> used to draw the <see cref="T:System.Windows.Controls.ProgressBar" />.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.ProgressBarBrushConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.Themes.ProgressBarBrushConverter" /> class.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.ProgressBarBrushConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Creates the <see cref="T:System.Windows.Media.DrawingBrush" /> for the <see cref="T:System.Windows.Controls.ProgressBar" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.DrawingBrush" />.</returns>
      <param name="values">ForegroundBrush, IsIndeterminate, Indicator Width, Indicator Height, Track WidthThe <see cref="T:System.Windows.Media.Brush" /> used for the <see cref="P:System.Windows.Controls.Control.Foreground" /> of the <see cref="T:System.Windows.Controls.ProgressBar" />, the Boolean indicating whether the <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate" /> is true, the <see cref="T:System.Double" /> defining the <see cref="P:System.Windows.FrameworkElement.Width" /> of the indicator, and the <see cref="T:System.Double" /> defining the <see cref="P:System.Windows.FrameworkElement.Height" /> of the indicator, and the <see cref="T:System.Double" /> defining the width of the <see cref="T:System.Windows.Controls.Primitives.Track" />. </param>
      <param name="targetType">This parameter is not used.</param>
      <param name="parameter">This parameter is not used.</param>
      <param name="culture">This parameter is not used.</param>
    </member>
    <member name="M:Microsoft.Windows.Themes.ProgressBarBrushConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented.</summary>
      <returns>null.</returns>
      <param name="value">This parameter is not used.</param>
      <param name="targetTypes">This parameter is not used.</param>
      <param name="parameter">This parameter is not used.</param>
      <param name="culture">This parameter is not used.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\PresentationFramework.Classic.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PresentationFramework.Classic</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Windows.Themes.ClassicBorderDecorator">
      <summary>Creates the theme-specific look for <see cref="T:System.Windows.Controls.Decorator" /> types, for use with the Classic theme.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.ClassicBorderDecorator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.Themes.ClassicBorderDecorator" /> class.</summary>
    </member>
    <member name="P:Microsoft.Windows.Themes.ClassicBorderDecorator.Background">
      <summary>Gets or sets the brush used to fill the background of the element.  </summary>
      <returns>The brush used to fill the background of the element.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderDecorator.BackgroundProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ClassicBorderDecorator.Background" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.Background" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderBrush">
      <summary>Gets or sets the brush used to draw the outer border of the element.  </summary>
      <returns>The brush used to draw the outer border of the element.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderBrushProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.BorderBrush" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderStyle">
      <summary>Gets or sets the <see cref="T:Microsoft.Windows.Themes.ClassicBorderStyle" /> used to draw the border of the element.  </summary>
      <returns>The <see cref="T:Microsoft.Windows.Themes.ClassicBorderStyle" /> used to draw the border of the element.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderStyleProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderStyle" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderThickness">
      <summary>Gets or sets the width of the border.  </summary>
      <returns>The width of the border.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderThicknessProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderThickness" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ClassicBorderDecorator.BorderThickness" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ClassicBorderDecorator.ClassicBorderBrush">
      <summary>Gets the brush used to draw the border.</summary>
      <returns>The brush used to draw the border.</returns>
    </member>
    <member name="T:Microsoft.Windows.Themes.ClassicBorderStyle">
      <summary>Specifics the type of <see cref="T:System.Windows.Controls.Border" /> to draw. </summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.None">
      <summary>No border.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.Raised">
      <summary>Used for <see cref="T:System.Windows.Controls.Button" /> elements in their normal state.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.RaisedPressed">
      <summary>Used for <see cref="T:System.Windows.Controls.Button" /> elements in their pressed state.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.RaisedFocused">
      <summary>Used for <see cref="T:System.Windows.Controls.Button" /> elements that have keyboard focus or are the default <see cref="T:System.Windows.Controls.Button" />.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.Sunken">
      <summary>Used for <see cref="T:System.Windows.Controls.ListBox" />, <see cref="T:System.Windows.Controls.TextBox" />, and <see cref="T:System.Windows.Controls.CheckBox" />.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.Etched">
      <summary>Used for <see cref="T:System.Windows.Controls.GroupBox" />.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.HorizontalLine">
      <summary>Used for horizontal <see cref="T:System.Windows.Controls.Separator" />.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.VerticalLine">
      <summary>Used for vertical <see cref="T:System.Windows.Controls.Separator" />.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.TabRight">
      <summary>Used for <see cref="T:System.Windows.Controls.TabItem" />. </summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.TabTop">
      <summary>Used for <see cref="T:System.Windows.Controls.TabItem" />.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.TabLeft">
      <summary>Used for <see cref="T:System.Windows.Controls.TabItem" />.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.TabBottom">
      <summary>Used for <see cref="T:System.Windows.Controls.TabItem" />.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.ThinRaised">
      <summary>Used for top level <see cref="T:System.Windows.Controls.MenuItem" /> when the mouse or other input device is hovering over them.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.ThinPressed">
      <summary>Used for top level <see cref="T:System.Windows.Controls.MenuItem" /> in their pressed state.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.AltRaised">
      <summary>Used for the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> on a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> in a normal state.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.AltPressed">
      <summary>Used for the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> on a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> in their pressed state.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ClassicBorderStyle.RadioButton">
      <summary>A <see cref="T:System.Windows.Controls.RadioButton" /> border.</summary>
    </member>
    <member name="T:Microsoft.Windows.Themes.SystemDropShadowChrome">
      <summary>Creates a theme specific look for drop shadow effects.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.SystemDropShadowChrome.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.Themes.SystemDropShadowChrome" /> class.</summary>
    </member>
    <member name="P:Microsoft.Windows.Themes.SystemDropShadowChrome.Color">
      <summary>Gets or sets the color used by the drop shadow.  </summary>
      <returns>The color.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.SystemDropShadowChrome.ColorProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.SystemDropShadowChrome.Color" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.SystemDropShadowChrome.Color" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.SystemDropShadowChrome.CornerRadius">
      <summary>Gets or sets the radii of a rectangle's corners.  </summary>
      <returns>The radii of a rectangle's corners.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.SystemDropShadowChrome.CornerRadiusProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.SystemDropShadowChrome.CornerRadius" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.SystemDropShadowChrome.CornerRadius" /> dependency property.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\PresentationFramework.Luna.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PresentationFramework.Luna</name>
  </assembly>
  <members>
    <member name="P:Microsoft.Windows.Themes.ButtonChrome.ThemeColor">
      <summary>Gets or sets the theme color.  </summary>
      <returns>A value in the enumeration.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ButtonChrome.ThemeColorProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.ThemeColor" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.ThemeColor" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.DataGridHeaderBorder.ThemeColor"></member>
    <member name="F:Microsoft.Windows.Themes.DataGridHeaderBorder.ThemeColorProperty"></member>
    <member name="T:Microsoft.Windows.Themes.ScrollChrome">
      <summary>Creates the theme-specific look for Microsoft .NET Framework <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> elements.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.ScrollChrome.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.Themes.ScrollChrome" /> class.    </summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.ScrollChrome.GetScrollGlyph(System.Windows.DependencyObject)">
      <summary>Gets the <see cref="T:Microsoft.Windows.Themes.ScrollGlyph" /> for the specified object.    </summary>
      <returns>One of the enumeration values.   </returns>
      <param name="element">The dependency object to which the <see cref="T:Microsoft.Windows.Themes.ScrollGlyph" /> is attached.   </param>
    </member>
    <member name="P:Microsoft.Windows.Themes.ScrollChrome.HasOuterBorder">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> renders with a white outer border.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> renders with a white outer border; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollChrome.HasOuterBorderProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.HasOuterBorder" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.HasOuterBorder" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ScrollChrome.Padding">
      <summary>Gets or sets a value that describes the amount of space between a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> and its child element.  </summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> value that describes the amount of space between a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> and its child element.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollChrome.PaddingProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.Padding" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.Padding" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ScrollChrome.RenderMouseOver">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> appears as if the mouse is over it.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> appears as if the mouse is over it; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollChrome.RenderMouseOverProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.RenderMouseOver" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.RenderMouseOver" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ScrollChrome.RenderPressed">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> appears pressed.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> appears pressed; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollChrome.RenderPressedProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.RenderPressed" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.RenderPressed" /> dependency property.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollChrome.ScrollGlyphProperty">
      <summary>Identifies the <see cref="T:Microsoft.Windows.Themes.ScrollGlyph" /> attached property.   </summary>
      <returns>The <see cref="T:Microsoft.Windows.Themes.ScrollGlyph" /> attached property identifier. </returns>
    </member>
    <member name="M:Microsoft.Windows.Themes.ScrollChrome.SetScrollGlyph(System.Windows.DependencyObject,Microsoft.Windows.Themes.ScrollGlyph)">
      <summary>Sets the <see cref="T:Microsoft.Windows.Themes.ScrollGlyph" /> on the specified object.</summary>
      <param name="element">The dependency object to which the <see cref="T:Microsoft.Windows.Themes.ScrollGlyph" /> is attached.   </param>
      <param name="value">One of the enumeration values.   </param>
    </member>
    <member name="P:Microsoft.Windows.Themes.ScrollChrome.ThemeColor">
      <summary>Gets or sets the color of the theme. </summary>
      <returns>A value in the enumeration.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollChrome.ThemeColorProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.ThemeColor" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.ThemeColor" /> dependency property.</returns>
    </member>
    <member name="T:Microsoft.Windows.Themes.ScrollGlyph">
      <summary>Describes the glyphs used to represent the <see cref="T:System.Windows.Controls.Primitives.Thumb" />.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollGlyph.None">
      <summary>No glyph is used. </summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollGlyph.LeftArrow">
      <summary>An arrow glyph pointing to the left.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollGlyph.RightArrow">
      <summary>An arrow glyph pointing to the right.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollGlyph.UpArrow">
      <summary>An arrow glyph pointing up.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollGlyph.DownArrow">
      <summary>An arrow glyph pointing down.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollGlyph.VerticalGripper">
      <summary>A vertical gripper glyph.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollGlyph.HorizontalGripper">
      <summary> horizontal gripper glyph.</summary>
    </member>
    <member name="T:Microsoft.Windows.Themes.ThemeColor">
      <summary>Represents possible color variants for the Microsoft themes. </summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ThemeColor.NormalColor">
      <summary>Used by the Luna, Aero, and Classic themes; the localized color name is Blue.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ThemeColor.Homestead">
      <summary>Used by the Luna theme; the localized color name is Olive.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ThemeColor.Metallic">
      <summary>Used by the Luna theme; the localized color name is Sliver.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\PresentationUI.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PresentationUI</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Documents.PresentationUIStyleResources">
      <summary>Supports component resource keys.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.Activities.Core.Presentation.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Activities.Core.Design</name>
  </assembly>
  <members>
    <member name="T:System.Activities.Core.Design.ActivityCategoryEditor"></member>
    <member name="M:System.Activities.Core.Design.ActivityCategoryEditor.#ctor"></member>
    <member name="M:System.Activities.Core.Design.ActivityCategoryEditor.ConsumesProperty(System.Activities.Design.PropertyEditing.PropertyEntry)"></member>
    <member name="P:System.Activities.Core.Design.ActivityCategoryEditor.EditorTemplate"></member>
    <member name="P:System.Activities.Core.Design.ActivityCategoryEditor.EditorTemplateName"></member>
    <member name="M:System.Activities.Core.Design.ActivityCategoryEditor.GetImage(System.Windows.Size)"></member>
    <member name="P:System.Activities.Core.Design.ActivityCategoryEditor.TargetCategory"></member>
    <member name="P:System.Activities.Core.Design.ActivityCategoryEditor.TargetCategoryImage"></member>
    <member name="P:System.Activities.Core.Design.ActivityCategoryEditor.TargetCategoryName"></member>
    <member name="T:System.Activities.Core.Design.ConnectionPointType"></member>
    <member name="F:System.Activities.Core.Design.ConnectionPointType.Default">
      <summary />
    </member>
    <member name="F:System.Activities.Core.Design.ConnectionPointType.Incoming">
      <summary />
    </member>
    <member name="F:System.Activities.Core.Design.ConnectionPointType.Outgoing">
      <summary />
    </member>
    <member name="T:System.Activities.Core.Design.DesignerMetadata"></member>
    <member name="M:System.Activities.Core.Design.DesignerMetadata.#ctor"></member>
    <member name="M:System.Activities.Core.Design.DesignerMetadata.Register"></member>
    <member name="T:System.Activities.Core.Design.FlowchartDesignerCommands"></member>
    <member name="F:System.Activities.Core.Design.FlowchartDesignerCommands.ConnectNodesCommand"></member>
    <member name="T:System.Activities.Core.Design.ForEach"></member>
    <member name="M:System.Activities.Core.Design.ForEach.#ctor"></member>
    <member name="M:System.Activities.Core.Design.ForEach.Create"></member>
    <member name="T:System.Activities.Core.Design.ForEach`1">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Activities.Core.Design.ForEach`1.#ctor"></member>
    <member name="M:System.Activities.Core.Design.ForEach`1.Create"></member>
    <member name="T:System.Activities.Core.Design.GenericTypeArgumentConverter"></member>
    <member name="M:System.Activities.Core.Design.GenericTypeArgumentConverter.#ctor"></member>
    <member name="M:System.Activities.Core.Design.GenericTypeArgumentConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"></member>
    <member name="M:System.Activities.Core.Design.GenericTypeArgumentConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"></member>
    <member name="T:System.Activities.Core.Design.LocationChangedEventArgs"></member>
    <member name="M:System.Activities.Core.Design.LocationChangedEventArgs.#ctor(System.Windows.Point)"></member>
    <member name="P:System.Activities.Core.Design.LocationChangedEventArgs.NewLocation"></member>
    <member name="T:System.Activities.Core.Design.ParallelForEach"></member>
    <member name="M:System.Activities.Core.Design.ParallelForEach.#ctor"></member>
    <member name="M:System.Activities.Core.Design.ParallelForEach.Create"></member>
    <member name="T:System.Activities.Core.Design.ParallelForEach`1">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Activities.Core.Design.ParallelForEach`1.#ctor"></member>
    <member name="M:System.Activities.Core.Design.ParallelForEach`1.Create"></member>
    <member name="T:System.Activities.Core.Design.Pick"></member>
    <member name="M:System.Activities.Core.Design.Pick.#ctor"></member>
    <member name="M:System.Activities.Core.Design.Pick.Create"></member>
    <member name="T:System.Activities.Core.Design.Themes.DesignerStylesDictionary">
      <summary>Contains a dictionary for designer styles.</summary>
    </member>
    <member name="M:System.Activities.Core.Design.Themes.DesignerStylesDictionary.InitializeComponent">
      <summary>Initializes the current instance.</summary>
    </member>
    <member name="P:System.Activities.Core.Design.Themes.DesignerStylesDictionary.SequenceStyle"></member>
    <member name="M:System.Activities.Core.Design.Themes.DesignerStylesDictionary.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)">
      <summary>Attaches events and names to compiled content. </summary>
      <param name="connectionId">The connection ID.</param>
      <param name="target">The target.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.Design.ReceiveAndSendReply"></member>
    <member name="M:System.ServiceModel.Activities.Design.ReceiveAndSendReply.#ctor"></member>
    <member name="M:System.ServiceModel.Activities.Design.ReceiveAndSendReply.Create"></member>
    <member name="T:System.ServiceModel.Activities.Design.SendAndReceiveReply"></member>
    <member name="M:System.ServiceModel.Activities.Design.SendAndReceiveReply.#ctor"></member>
    <member name="M:System.ServiceModel.Activities.Design.SendAndReceiveReply.Create"></member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\sysglobl.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>sysglobl</name>
  </assembly>
  <members>
    <member name="T:System.Globalization.CultureAndRegionInfoBuilder">
      <summary>Defines a custom culture that is new or based on another culture and country/region. The custom culture can be installed on a computer and subsequently used by any application running on that computer. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Globalization.CultureAndRegionInfoBuilder.#ctor(System.String,System.Globalization.CultureAndRegionModifiers)">
      <summary>Initializes a new instance of the <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> class. </summary>
      <param name="cultureName">The name of a culture.</param>
      <param name="flags">One of the <see cref="T:System.Globalization.CultureAndRegionModifiers" /> values that specifies whether the new <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object is a neutral culture, replaces an existing culture and country/region, or is a new culture. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> is the empty string ("").-or-<paramref name="cultureName" /> contains characters other than "0" through "9", "a" through "z", "A" through "Z", hyphen (-), or underscore (_).-or-<paramref name="cultureName" /> contains hyphens (-) to delimit components, but one or more of the <paramref name="prefix" />, <paramref name="language" />, <paramref name="region" />, or <paramref name="suffix" /> components is absent. That is, two or more hyphens are adjacent.-or-<paramref name="cultureName" /> is longer than 84 characters.-or-<paramref name="cultureName" /> contains hyphens to delimit components, but one or more of the components is longer than 8 characters.-or-<paramref name="cultureName" /> contains a leading or trailing hyphen (-) or underscore (_).-or-<paramref name="cultureName" /> specifies an alternate sort replacement culture instead of a .NET Framework culture. For example, <paramref name="culturenName" /> is "de-de_phoneb", a culture that sorts strings as they appear in a German telephone book, instead of "de-DE", the German (Germany) culture.-or-<paramref name="flags" /> contains an invalid combination of <see cref="T:System.Globalization.CultureAndRegionModifiers" /> values.-or-<paramref name="flags" /> contains <see cref="F:System.Globalization.CultureAndRegionModifiers.Replacement" /> or <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" /> and <paramref name="cultureName" /> specifies a culture that is not found.-or-<paramref name="flags" /> contains <see cref="F:System.Globalization.CultureAndRegionModifiers.Replacement" /> and <paramref name="cultureName" /> specifies a user-created custom culture that does not replace a culture shipped with the .NET Framework.-or-<paramref name="flags" /> contains <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" /> and <paramref name="cultureName" /> specifies a culture that is not a neutral culture.-or-<paramref name="flags" /> contains <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" /> and <paramref name="cultureName" /> specifies a user-created custom culture that replaces a specific culture shipped with the .NET Framework.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars">
      <summary>Gets or sets an array of calendars that are supported by this <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object.</summary>
      <returns>An array of calendars.</returns>
      <exception cref="T:System.ArgumentNullException">In a set operation, the assigned array is null, or an element of the assigned array is null.</exception>
      <exception cref="T:System.NotSupportedException">This property is not supported for neutral cultures.-or-In a set operation, the assigned array contains <see cref="T:System.Globalization.PersianCalendar" />, <see cref="T:System.Globalization.TaiwanLunisolarCalendar" />, <see cref="T:System.Globalization.KoreanLunisolarCalendar" />, <see cref="T:System.Globalization.JapaneseLunisolarCalendar" />, <see cref="T:System.Globalization.ChineseLunisolarCalendar" />, or <see cref="T:System.Globalization.JulianCalendar" />.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo">
      <summary>Gets or sets the <see cref="T:System.Globalization.CompareInfo" /> object that defines how to compare strings for the culture.</summary>
      <returns>The <see cref="T:System.Globalization.CompareInfo" /> object that defines how to compare strings for the culture.</returns>
      <exception cref="T:System.ArgumentNullException">In a set operation the assigned value is null.</exception>
      <exception cref="T:System.NotSupportedException">This custom culture is an override of a built-in culture.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture">
      <summary>Gets or sets an alternate user interface culture suitable for console applications when the default graphic user interface culture is inappropriate.</summary>
      <returns>An alternate culture that is used to read and display text on the console.</returns>
      <exception cref="T:System.ArgumentException">In a set operation where the specified culture is not null, the <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture" /> property of the specified culture is not the same as the specified culture. </exception>
    </member>
    <member name="M:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml(System.String)">
      <summary>Reconstitutes a <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object from a specified XML file that contains a representation of the object.</summary>
      <returns>A new <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object that is equivalent to the information stored in the <paramref name="xmlFileName" /> parameter.</returns>
      <param name="xmlFileName">A file name that contains the XML representation of a <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlFileName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="xmlFileName" /> is an empty string (""), or invalid file or path name.</exception>
      <exception cref="T:System.Xml.XmlException">The data in <paramref name="xmlFileName" /> is not in valid XML format.-or-An I/O error occurred while accessing <paramref name="xmlFileName" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">The data in <paramref name="xmlFileName" /> is not in valid LDML format.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName">
      <summary>Gets or sets the culture name in English.</summary>
      <returns>The culture name in English.</returns>
      <exception cref="T:System.ArgumentNullException">The value in a set operation is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of the value in a set operation does not range from 0 to 79 characters.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.CultureName">
      <summary>Gets the name of the culture being created.</summary>
      <returns>The culture name of the current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object.</returns>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName">
      <summary>Gets or sets the culture name in the format and language that the culture is set to display.</summary>
      <returns>The culture name in the format and language that the culture is set to display.</returns>
      <exception cref="T:System.ArgumentNullException">The value in a set operation is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of the value in a set operation does not range from 0 to 79 characters.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.CultureTypes">
      <summary>Gets the <see cref="T:System.Globalization.CultureTypes" /> value that describes the culture represented by the current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object.</summary>
      <returns>One of the <see cref="T:System.Globalization.CultureTypes" /> values.</returns>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName">
      <summary>Gets or sets the name, in English, of the currency used in the country/region represented by the current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object.</summary>
      <returns>The name, in English, of the currency used in the region.</returns>
      <exception cref="T:System.ArgumentNullException">The value in a set operation is null.</exception>
      <exception cref="T:System.ArgumentException">The value in a set operation is the empty string ("").</exception>
      <exception cref="T:System.NotSupportedException">The current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object is a neutral culture.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName">
      <summary>Gets or sets the native name of the currency used in the country/region represented by the current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object.</summary>
      <returns>The name of the currency used in the country/region represented by the current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object, formatted in the language associated with the ISO 3166 country/region code of the region. </returns>
      <exception cref="T:System.ArgumentNullException">The value in a set operation is null.</exception>
      <exception cref="T:System.ArgumentException">The value in a set operation is the empty string ("").</exception>
      <exception cref="T:System.NotSupportedException">The current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object is a neutral culture.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.GeoId">
      <summary>Gets or sets a unique identification number for a geographical region, country, city, or location.</summary>
      <returns>A 32-bit signed number that uniquely identifies a geographical location.</returns>
      <exception cref="T:System.NotSupportedException">The current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object defines a neutral culture.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat">
      <summary>Gets or sets a <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that defines the format of dates and times according to the Gregorian calendar.</summary>
      <returns>A <see cref="T:System.Globalization.DateTimeFormatInfo" /> object. </returns>
      <exception cref="T:System.ArgumentNullException">The value in a set operation is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A property of the value in a set operation returned an invalid property value.</exception>
      <exception cref="T:System.NotSupportedException">The current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object is a neutral culture.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.IetfLanguageTag">
      <summary>Gets or sets a culture name formatted according to the RFC 4646 standard, "Tags for the Identification of Languages."</summary>
      <returns>A culture name formatted according to RFC 4646.</returns>
      <exception cref="T:System.ArgumentNullException">In a set operation, the value is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">In a set operation, the length of the value is not from 1 through 84 characters.</exception>
      <exception cref="T:System.ArgumentException">In a set operation, a component of the name specified in the value is empty or longer than 8 characters, not an alphanumeric character or hyphen (-), or the name contains a leading or trailing hyphen. </exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.IsMetric">
      <summary>Gets or sets a value indicating whether the country/region uses the metric system for measurements.</summary>
      <returns>true if the country/region uses the metric system for measurements; otherwise, false.</returns>
      <exception cref="T:System.NotSupportedException">This operation is not valid for a neutral culture.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol">
      <summary>Gets or sets the three-character ISO 4217 currency symbol associated with the country/region.</summary>
      <returns>The three-character ISO 4217 currency symbol associated with the country/region.</returns>
      <exception cref="T:System.NotSupportedException">This is a neutral culture.</exception>
      <exception cref="T:System.ArgumentNullException">In a set operation, the value is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">In a set operation, the value is not from 0 through 8 characters long.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.IsRightToLeft">
      <summary>Gets or sets the predominant direction of lines of text in the writing system associated with the current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object. </summary>
      <returns>true if the predominant direction of lines of text in the current writing system is right-to-left; otherwise, false.</returns>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.KeyboardLayoutId">
      <summary>Gets or sets the active input locale identifier.</summary>
      <returns>A 32-bit signed number that specifies an input locale identifier.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">In a set operation, the value is zero.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.LCID">
      <summary>Gets the culture identifier for the current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object.</summary>
      <returns>The culture identifier for the current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object.</returns>
    </member>
    <member name="M:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo(System.Globalization.CultureInfo)">
      <summary>Sets the properties of the current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object with the corresponding properties of the specified <see cref="T:System.Globalization.CultureInfo" /> object.</summary>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object to read.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> is null.</exception>
    </member>
    <member name="M:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo(System.Globalization.RegionInfo)">
      <summary>Sets the properties of the current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object with the corresponding properties of the specified <see cref="T:System.Globalization.RegionInfo" /> object.</summary>
      <param name="region">A <see cref="T:System.Globalization.RegionInfo" /> object to read.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> is null.</exception>
      <exception cref="T:System.ArgumentException">Country/region information cannot be set because the current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object specifies a neutral culture.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat">
      <summary>Gets or sets a <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines the culturally appropriate format of displaying numbers, currency, and percentage.</summary>
      <returns>A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines the culturally appropriate format of displaying numbers, currency, and percentage.</returns>
      <exception cref="T:System.ArgumentNullException">The value in a set operation is null.</exception>
      <exception cref="T:System.NotSupportedException">This operation is not valid for a neutral culture.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The specification for a number, currency, or percent property for this culture contains too many digits or is out of range.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.Parent">
      <summary>Gets or sets the <see cref="T:System.Globalization.CultureInfo" /> object that represents the parent culture of the current custom culture.</summary>
      <returns>The <see cref="T:System.Globalization.CultureInfo" /> object that represents the parent culture of the current custom culture.</returns>
      <exception cref="T:System.InvalidOperationException">In a set operation, the culture value cannot be found. Possibly, the assigned value is an unregistered custom culture.</exception>
      <exception cref="T:System.ArgumentNullException">In a set operation, the value is null.</exception>
      <exception cref="T:System.ArgumentException">In a set operation, which traverses the ancestors of the current culture, the invariant culture cannot be found within 10 generations of ancestors. -or- In a set operation, a circular reference was discovered: the assigned value is an ancestor of the current custom culture. </exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName">
      <summary>Gets or sets the full name of the country/region in English.</summary>
      <returns>The full name of the country/region in English.</returns>
      <exception cref="T:System.NotSupportedException">This operation is not valid for a neutral culture.</exception>
      <exception cref="T:System.ArgumentNullException">The value in a set operation is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of the value in a set operation does not range from 0 to 79 characters.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.RegionName">
      <summary>Gets the name of the country/region for the current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object.</summary>
      <returns>The name of the country/region for the current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object.</returns>
      <exception cref="T:System.NotSupportedException">This operation is not valid for a neutral culture.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName">
      <summary>Gets or sets the full name of the country/region as known by the people of this custom culture.</summary>
      <returns>The local name of the country/region.</returns>
      <exception cref="T:System.NotSupportedException">This operation is not valid for a neutral culture.</exception>
      <exception cref="T:System.ArgumentNullException">The value in a set operation is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of the value in a set operation does not range from 1 to 79 characters.</exception>
    </member>
    <member name="M:System.Globalization.CultureAndRegionInfoBuilder.Register">
      <summary>Persists the current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object as a custom culture on the local computer and makes that culture available to applications. Requires administrative privileges.</summary>
      <exception cref="T:System.InvalidOperationException">The custom culture is already registered.-or-The current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object has a property that must be set before the culture can be registered. All cultures, neutral or specific, must have <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" /> and <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" /> set. Specific cultures must also have <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat" />, <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />, and <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars" /> set.This method also throws <see cref="T:System.InvalidOperationException" /> if the following properties are not defined:<see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.Parent" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object property value exceeds its maximum length or value.</exception>
      <exception cref="T:System.UnauthorizedAccessException">User does not have administrative privileges.</exception>
    </member>
    <member name="M:System.Globalization.CultureAndRegionInfoBuilder.Save(System.String)">
      <summary>Writes an XML representation of the current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object to the specified file.</summary>
      <param name="filename">The name of a file to contain the XML representation of this custom culture.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" /> is an empty string ("").</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of a property of a <see cref="T:System.Globalization.DateTimeFormatInfo" />, <see cref="T:System.Globalization.TextInfo" />, or <see cref="T:System.Globalization.NumberFormatInfo" /> object contained in the current <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object is invalid.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo">
      <summary>Gets or sets the <see cref="T:System.Globalization.TextInfo" /> object that defines the writing system associated with this custom culture.</summary>
      <returns>The <see cref="T:System.Globalization.TextInfo" /> object that defines the writing system associated with this custom culture.</returns>
      <exception cref="T:System.NotSupportedException">This operation is not supported for replacement cultures.</exception>
      <exception cref="T:System.ArgumentNullException">The value in a set operation is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The number of characters in a list separator does not range from 0 to 3 characters.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName">
      <summary>Gets or sets the ISO 639-2 three-letter code for the language of this custom culture.</summary>
      <returns>The ISO 639-2 three-letter code for the language of the current <see cref="T:System.Globalization.CultureInfo" /> object.</returns>
      <exception cref="T:System.ArgumentNullException">The value in a set operation is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of the value in a set operation does not range from 1 to 8 characters. </exception>
      <exception cref="T:System.ArgumentException">The value in a set operation contains a character that is not in the range "a" to "z", "A" to "Z", or "0" to "9".</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName">
      <summary>Gets or sets the three-letter code defined in ISO 3166 for the country/region.</summary>
      <returns>The three-letter code defined in ISO 3166 for the country/region.</returns>
      <exception cref="T:System.ArgumentNullException">The value in a set operation is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of the value in a set operation does not range from 1 to 8 characters. </exception>
      <exception cref="T:System.ArgumentException">The value in a set operation contains a character that is not in the range "a" to "z", "A" to "Z", or "0" to "9".</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName">
      <summary>Gets or sets the three-letter code for the language as defined in the Windows API.</summary>
      <returns>The three-letter code for the language as defined in the Windows API.</returns>
      <exception cref="T:System.ArgumentNullException">The value in a set operation is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of the value in a set operation does not range from 1 to 8 characters.</exception>
      <exception cref="T:System.ArgumentException">The value in a set operation contains a character that is not in the range "a" to "z", "A" to "Z", or "0" to "9".</exception>
      <exception cref="T:System.NotSupportedException">In a set operation, the current custom culture is a replacement culture.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName">
      <summary>Gets or sets the three-letter code assigned by Windows to the country/region represented by the current custom culture.</summary>
      <returns>The three-letter code assigned by Windows to the country/region represented by this <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object.</returns>
      <exception cref="T:System.ArgumentNullException">The value in a set operation is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of the value in a set operation does not range from 1 to 8 characters.</exception>
      <exception cref="T:System.ArgumentException">The value in a set operation contains a character that is not in the range "a" to "z", "A" to "Z", or "0" to "9".</exception>
      <exception cref="T:System.NotSupportedException">In a set operation, the current custom culture is a replacement culture or a neutral culture.</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName">
      <summary>Gets or sets the ISO 639-1 two-letter code for the language of the current <see cref="T:System.Globalization.CultureInfo" /> object.</summary>
      <returns>The ISO 639-1 two-letter code for the language of the current <see cref="T:System.Globalization.CultureInfo" /> object.</returns>
      <exception cref="T:System.ArgumentNullException">The value in a set operation is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of the value in a set operation does not range from 1 to 8 characters. </exception>
      <exception cref="T:System.ArgumentException">The value in a set operation contains a character that is not in the range "a" to "z", "A" to "Z", or "0" to "9".</exception>
    </member>
    <member name="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName">
      <summary>Gets or sets the two-letter code defined in ISO 3166 for the country/region.</summary>
      <returns>The two-letter code defined in ISO 3166 for the country/region.</returns>
      <exception cref="T:System.ArgumentNullException">The value in a set operation is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of the value in a set operation does not range from 1 to 8 characters.</exception>
      <exception cref="T:System.ArgumentException">The value in a set operation contains a character that is not in the range "a" to "z", "A" to "Z", or "0" to "9".</exception>
      <exception cref="T:System.NotSupportedException">In a set operation, the current custom culture is a neutral culture.</exception>
    </member>
    <member name="M:System.Globalization.CultureAndRegionInfoBuilder.Unregister(System.String)">
      <summary>Deletes a custom culture from the local computer.</summary>
      <param name="cultureName">The name of a custom culture.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="cultureName" /> is a parent culture or console fallback user interface culture of a dependent culture.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Application does not have administrative privileges.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> specifies a culture that is not found.</exception>
    </member>
    <member name="T:System.Globalization.CultureAndRegionModifiers">
      <summary>Specifies constants that define a <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object. </summary>
    </member>
    <member name="F:System.Globalization.CultureAndRegionModifiers.None">
      <summary>A specific, supplemental custom culture.</summary>
    </member>
    <member name="F:System.Globalization.CultureAndRegionModifiers.Neutral">
      <summary>A neutral custom culture.</summary>
    </member>
    <member name="F:System.Globalization.CultureAndRegionModifiers.Replacement">
      <summary>A custom culture that replaces an existing .NET Framework culture or Windows locale.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\ReachFramework.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>ReachFramework</name>
  </assembly>
  <members>
    <member name="T:System.Printing.Collation">
      <summary>Specifies whether a printer collates output when it prints multiple copies of a multi-page print job. </summary>
    </member>
    <member name="F:System.Printing.Collation.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.Collation.Collated">
      <summary>Collated output.</summary>
    </member>
    <member name="F:System.Printing.Collation.Uncollated">
      <summary>Uncollated output.</summary>
    </member>
    <member name="T:System.Printing.ConflictStatus">
      <summary>Specifies whether any changes were made to a merged <see cref="T:System.Printing.PrintTicket" /> to ensure a viable <see cref="T:System.Printing.PrintTicket" />.</summary>
    </member>
    <member name="F:System.Printing.ConflictStatus.NoConflict">
      <summary>No conflicts were found between the initial merged print ticket and the supported printer functions.</summary>
    </member>
    <member name="F:System.Printing.ConflictStatus.ConflictResolved">
      <summary>One or more conflicts were found and all conflicts were resolved.</summary>
    </member>
    <member name="T:System.Printing.DeviceFontSubstitution">
      <summary>Specifies whether device font substitution is enabled on a printer.</summary>
    </member>
    <member name="F:System.Printing.DeviceFontSubstitution.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.DeviceFontSubstitution.Off">
      <summary>Device font substitution is disabled.</summary>
    </member>
    <member name="F:System.Printing.DeviceFontSubstitution.On">
      <summary>Device font substitution is enabled.</summary>
    </member>
    <member name="T:System.Printing.Duplexing">
      <summary>Specifies whether a printer uses one-sided printing or some type of two-sided (duplex) printing.</summary>
    </member>
    <member name="F:System.Printing.Duplexing.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.Duplexing.OneSided">
      <summary>Output prints on only one side of each sheet. </summary>
    </member>
    <member name="F:System.Printing.Duplexing.TwoSidedShortEdge">
      <summary>Output prints on both sides of each sheet, which flips along the edge parallel to <see cref="P:System.Printing.PrintDocumentImageableArea.MediaSizeWidth" />.</summary>
    </member>
    <member name="F:System.Printing.Duplexing.TwoSidedLongEdge">
      <summary>Output prints on both sides of each sheet, which flips along the edge parallel to the <see cref="P:System.Printing.PrintDocumentImageableArea.MediaSizeHeight" />.</summary>
    </member>
    <member name="T:System.Printing.InputBin">
      <summary>Specifies the input bin that is used as the source of blank paper or other print media.</summary>
    </member>
    <member name="F:System.Printing.InputBin.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.InputBin.AutoSelect">
      <summary>The automatic selection of an input bin according to the page size and media output type.</summary>
    </member>
    <member name="F:System.Printing.InputBin.Cassette">
      <summary>A removable paper bin is used.</summary>
    </member>
    <member name="F:System.Printing.InputBin.Tractor">
      <summary>A tractor feed (also called a pin feed) of continuous-feed paper is used.</summary>
    </member>
    <member name="F:System.Printing.InputBin.AutoSheetFeeder">
      <summary>The automatic sheet feeder is used.</summary>
    </member>
    <member name="F:System.Printing.InputBin.Manual">
      <summary>The manual input bin is used.</summary>
    </member>
    <member name="T:System.Printing.OutputColor">
      <summary>Specifies how to print content that contains color or shades of gray.</summary>
    </member>
    <member name="F:System.Printing.OutputColor.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema..</summary>
    </member>
    <member name="F:System.Printing.OutputColor.Color">
      <summary>Output that prints in color.</summary>
    </member>
    <member name="F:System.Printing.OutputColor.Grayscale">
      <summary>Output that prints in a grayscale. </summary>
    </member>
    <member name="F:System.Printing.OutputColor.Monochrome">
      <summary>Output that prints in a single color and with the same degree of intensity.</summary>
    </member>
    <member name="T:System.Printing.OutputQuality">
      <summary>Specifies the types of output quality for a print device.</summary>
    </member>
    <member name="F:System.Printing.OutputQuality.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.OutputQuality.Automatic">
      <summary>Automatically selects a quality type that is based on the contents of a print job.</summary>
    </member>
    <member name="F:System.Printing.OutputQuality.Draft">
      <summary>Draft quality.</summary>
    </member>
    <member name="F:System.Printing.OutputQuality.Fax">
      <summary>Fax quality.</summary>
    </member>
    <member name="F:System.Printing.OutputQuality.High">
      <summary>Higher than normal quality.</summary>
    </member>
    <member name="F:System.Printing.OutputQuality.Normal">
      <summary>Normal quality.</summary>
    </member>
    <member name="F:System.Printing.OutputQuality.Photographic">
      <summary>Photographic quality.</summary>
    </member>
    <member name="F:System.Printing.OutputQuality.Text">
      <summary>Text quality.</summary>
    </member>
    <member name="T:System.Printing.PageBorderless">
      <summary>Specifies whether a print device prints to the edge of the media or provides an unprinted margin around the edge.</summary>
    </member>
    <member name="F:System.Printing.PageBorderless.Unknown">
      <summary>The feature (whose options are represented by this enumeration) is set to an option not defined in the Print Schema.</summary>
    </member>
    <member name="F:System.Printing.PageBorderless.Borderless">
      <summary>Borderless printing, that is, the device prints to the edge of the print media.</summary>
    </member>
    <member name="F:System.Printing.PageBorderless.None">
      <summary>Printing with a border, that is, the device provides an unprinted margin around the edge of the print media.</summary>
    </member>
    <member name="T:System.Printing.PageImageableArea">
      <summary>Represents the area of a page that can be printed. </summary>
    </member>
    <member name="P:System.Printing.PageImageableArea.ExtentHeight">
      <summary>Gets the height of the imageable area. </summary>
      <returns>A <see cref="T:System.Double" /> that represents the height of the imageable area in pixels (1/96 of an inch).</returns>
    </member>
    <member name="P:System.Printing.PageImageableArea.ExtentWidth">
      <summary>Gets the width of the imageable area. </summary>
      <returns>A <see cref="T:System.Double" /> that represents the width of the imageable area in pixels (1/96 of an inch). </returns>
    </member>
    <member name="P:System.Printing.PageImageableArea.OriginHeight">
      <summary>Gets the origin height, which is the distance from the upper-left corner of the imageable area (also called the "origin" of the imageable area) to the nearest point on the top edge of the page.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the distance from the top edge of the page to the top of the imageable area in pixels (1/96 of an inch).</returns>
    </member>
    <member name="P:System.Printing.PageImageableArea.OriginWidth">
      <summary>Gets the origin width, which is the distance from the left edge of the page to the upper-left corner of the imageable area (also called the "origin" of the imageable area).</summary>
      <returns>A <see cref="T:System.Double" /> that represents the distance from the left edge of the page to the left edge of the imageable area in pixels (1/96 of an inch).</returns>
    </member>
    <member name="M:System.Printing.PageImageableArea.ToString">
      <summary>Returns the <see cref="T:System.String" /> representation of <see cref="T:System.Printing.PageImageableArea" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the property values of the <see cref="T:System.Printing.PageImageableArea" />.</returns>
    </member>
    <member name="T:System.Printing.PageMediaSize">
      <summary>Describes the page size for paper or other media.</summary>
    </member>
    <member name="M:System.Printing.PageMediaSize.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PageMediaSize" /> class by using the width and height.</summary>
      <param name="width">The width, in pixels, which are 1/96 inch units.</param>
      <param name="height">The height, in pixels, which are 1/96 inch units.</param>
    </member>
    <member name="M:System.Printing.PageMediaSize.#ctor(System.Printing.PageMediaSizeName)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PageMediaSize" /> class by using the specified <see cref="T:System.Printing.PageMediaSizeName" />. </summary>
      <param name="mediaSizeName">The name of the page size for paper (or other media), for example, <see cref="F:System.Printing.PageMediaSizeName.NorthAmericaLetter" /> or <see cref="F:System.Printing.PageMediaSizeName.ISOA4" />. </param>
    </member>
    <member name="M:System.Printing.PageMediaSize.#ctor(System.Printing.PageMediaSizeName,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PageMediaSize" /> class by using the specified <see cref="T:System.Printing.PageMediaSizeName" /> and the width and height.</summary>
      <param name="mediaSizeName">The name of the page size for paper (or other media), for example, <see cref="F:System.Printing.PageMediaSizeName.NorthAmericaLetter" /> or <see cref="F:System.Printing.PageMediaSizeName.ISOA4" />.</param>
      <param name="width">The width, in pixels, which are 1/96 inch units.</param>
      <param name="height">The height, in pixels, which are 1/96 inch units.</param>
    </member>
    <member name="P:System.Printing.PageMediaSize.Height">
      <summary>Gets the page height.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the page height, in pixels, which are 1/96 inch units.</returns>
    </member>
    <member name="P:System.Printing.PageMediaSize.PageMediaSizeName">
      <summary>Gets the name of the page size for paper or other media.</summary>
      <returns>A <see cref="T:System.Printing.PageMediaSizeName" /> value that names the page size.</returns>
    </member>
    <member name="M:System.Printing.PageMediaSize.ToString">
      <summary>Displays the page size for paper or other media.</summary>
      <returns>A <see cref="T:System.String" /> that represents the page size for paper or other media.</returns>
    </member>
    <member name="P:System.Printing.PageMediaSize.Width">
      <summary>Gets the page width.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the page width, in pixels, which are 1/96 inch units.</returns>
    </member>
    <member name="T:System.Printing.PageMediaSizeName">
      <summary>Specifies the page size or roll width of the paper or other print media.</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.Unknown">
      <summary>Unknown paper size</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA0">
      <summary>A0</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA1">
      <summary>A1</summary>
    </member>
    <member name="F:System.Printing.PageMediaSizeName.ISOA10">
      <summary>A10</summary>
    </member>
    <member name="F:System.Printi