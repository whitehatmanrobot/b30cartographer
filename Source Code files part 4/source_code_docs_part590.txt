object that contains the value of the <paramref name="value" /> parameter as its real part and zero as its imaginary part.</returns>
      <param name="value">The value to convert to a complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Returns a value that indicates whether two complex numbers are not equal.</summary>
      <returns>true if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Multiplies two specified complex numbers.</summary>
      <returns>The product of <paramref name="left" /> and <paramref name="right" />.</returns>
      <param name="left">The first value to multiply.</param>
      <param name="right">The second value to multiply.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Subtracts a complex number from another complex number.</summary>
      <returns>The result of subtracting <paramref name="right" /> from <paramref name="left" />.</returns>
      <param name="left">The value to subtract from (the minuend).</param>
      <param name="right">The value to subtract (the subtrahend).</param>
    </member>
    <member name="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
      <summary>Returns the additive inverse of a specified complex number.</summary>
      <returns>The result of the <see cref="P:System.Numerics.Complex.Real" /> and <see cref="P:System.Numerics.Complex.Imaginary" /> components of the <paramref name="value" /> parameter multiplied by -1.</returns>
      <param name="value">The value to negate.</param>
    </member>
    <member name="P:System.Numerics.Complex.Phase">
      <summary>Gets the phase of a complex number.</summary>
      <returns>The phase of a complex number, in radians.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
      <summary>Returns a specified complex number raised to a power specified by a double-precision floating-point number.</summary>
      <returns>The complex number <paramref name="value" /> raised to the power <paramref name="power" />.</returns>
      <param name="value">A complex number to be raised to a power.</param>
      <param name="power">A double-precision floating-point number that specifies a power.</param>
    </member>
    <member name="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Returns a specified complex number raised to a power specified by a complex number.</summary>
      <returns>The complex number <paramref name="value" /> raised to the power <paramref name="power" />.</returns>
      <param name="value">A complex number to be raised to a power.</param>
      <param name="power">A complex number that specifies a power.</param>
    </member>
    <member name="P:System.Numerics.Complex.Real">
      <summary>Gets the real component of the current <see cref="T:System.Numerics.Complex" /> object.</summary>
      <returns>The real component of a complex number.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
      <summary>Returns the multiplicative inverse of a complex number.</summary>
      <returns>The reciprocal of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
      <summary>Returns the sine of the specified complex number.</summary>
      <returns>The sine of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
      <summary>Returns the hyperbolic sine of the specified complex number.</summary>
      <returns>The hyperbolic sine of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
      <summary>Returns the square root of a specified complex number.</summary>
      <returns>The square root of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Subtracts one complex number from another and returns the result.</summary>
      <returns>The result of subtracting <paramref name="right" /> from <paramref name="left" />.</returns>
      <param name="left">The value to subtract from (the minuend).</param>
      <param name="right">The value to subtract (the subtrahend).</param>
    </member>
    <member name="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
      <summary>Returns the tangent of the specified complex number.</summary>
      <returns>The tangent of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
      <summary>Returns the hyperbolic tangent of the specified complex number.</summary>
      <returns>The hyperbolic tangent of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.ToString">
      <summary>Converts the value of the current complex number to its equivalent string representation in Cartesian form.</summary>
      <returns>The string representation of the current instance in Cartesian form.</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
      <summary>Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified culture-specific formatting information.</summary>
      <returns>The string representation of the current instance in Cartesian form, as specified by <paramref name="provider" />.</returns>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.String)">
      <summary>Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format for its real and imaginary parts.</summary>
      <returns>The string representation of the current instance in Cartesian form.</returns>
      <param name="format">A standard or custom numeric format string.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is not a valid format string.</exception>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
      <summary>Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format and culture-specific format information for its real and imaginary parts.</summary>
      <returns>The string representation of the current instance in Cartesian form, as specified by <paramref name="format" /> and <paramref name="provider" />.</returns>
      <param name="format">A standard or custom numeric format string.</param>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is not a valid format string.</exception>
    </member>
    <member name="F:System.Numerics.Complex.Zero">
      <summary>Returns a new <see cref="T:System.Numerics.Complex" /> instance with a real number equal to zero and an imaginary number equal to zero.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.ServiceModel.Syndication.extmap.xml ===
<?xml version="1.0"?>
<manifest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
          xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <assembly>
    <name>System.ServiceModel.Syndication</name>
    <version>2.0.5.0</version>
    <publickeytoken>31bf3856ad364e35</publickeytoken>
    <relpath>System.ServiceModel.Syndication.dll</relpath>
    <extension downloadUri="System.ServiceModel.Syndication.zip" />
  </assembly>


</manifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Data.Services.Client.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.Services.Client</name>
  </assembly>
  <members>
    <member name="T:System.Data.Services.Client.ChangeOperationResponse">
      <summary>Results that are returned after a call to the <see cref="M:System.Data.Services.Client.DataServiceContext.EndSaveChanges(System.IAsyncResult)" /> method when enumerating operation responses that are returned by the <see cref="T:System.Data.Services.Client.DataServiceResponse" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Client.ChangeOperationResponse.Descriptor">
      <summary>Gets the <see cref="T:System.Data.Services.Client.EntityDescriptor" /> or <see cref="T:System.Data.Services.Client.LinkDescriptor" /> modified by a change operation.</summary>
      <returns>An <see cref="T:System.Data.Services.Client.EntityDescriptor" /> or <see cref="T:System.Data.Services.Client.LinkDescriptor" /> modified by a change operation.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceClientException">
      <summary>Represents errors from an WCF Data Services client application.</summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceClientException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceClientException" /> class by using a system-supplied message that describes the error. </summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceClientException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceClientException" /> class by using a specified message that describes the error. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string was localized for the current system culture.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceClientException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceClientException" /> class by using a specified error message and a reference to the inner exception that is the cause of this exception. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string was localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceClientException.#ctor(System.String,System.Exception,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceClientException" /> class. </summary>
      <param name="message">The string value that contains the error message.</param>
      <param name="innerException">The System.Exception object that contains the inner exception.</param>
      <param name="statusCode">The integer value that contains the status code.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceClientException.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceClientException" /> class. </summary>
      <param name="message">The string value that contains the error message.</param>
      <param name="statusCode">The integer value that contains the status code.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceClientException.StatusCode">
      <summary>Gets the HTTP error status code returned after a <see cref="T:System.Data.Services.Client.DataServiceClientException" />.</summary>
      <returns>An integer value that represents the exception.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceCollection`1">
      <summary>Represents a dynamic entity collection that provides notifications when items get added, removed, or when the list is refreshed.</summary>
      <typeparam name="T">An entity type.</typeparam>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> class with automatic change tracking enabled.</summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> class based on query execution.</summary>
      <param name="items">A <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> or LINQ query that returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of objects that are used to initialize the collection.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode)">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> class based on query execution and with the specified tracking mode.</summary>
      <param name="items">A <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> or LINQ query that returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of objects that are used to initialize the collection.</param>
      <param name="trackingMode">A <see cref="T:System.Data.Services.Client.TrackingMode" /> value that indicated whether or not changes made to items in the collection are automatically tracked.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> class a based on query execution and with the supplied change method delegates.</summary>
      <param name="items">A <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> or LINQ query that returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of objects that are used to initialize the collection.</param>
      <param name="trackingMode">A <see cref="T:System.Data.Services.Client.TrackingMode" /> value that indicated whether or not changes made to items in the collection are automatically tracked.</param>
      <param name="entitySetName">The entity set of the objects in the collection.</param>
      <param name="entityChangedCallback">A delegate that encapsulates a method that is called when an entity changes.</param>
      <param name="collectionChangedCallback">A delegate that encapsulates a method that is called when the collection of entities changes.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext)">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> class that uses the specified <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
      <param name="context">The <see cref="T:System.Data.Services.Client.DataServiceContext" /> used to track changes to objects in the collection.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> class a based on query execution, with the supplied change method delegates, and that uses the supplied <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
      <param name="context">The <see cref="T:System.Data.Services.Client.DataServiceContext" /> used to track items in the collection.</param>
      <param name="items">A <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> or LINQ query that returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of objects that are used to initialize the collection.</param>
      <param name="trackingMode">A <see cref="T:System.Data.Services.Client.TrackingMode" /> value that indicated whether or not changes made to items in the collection are automatically tracked.</param>
      <param name="entitySetName">The entity set of the objects in the collection.</param>
      <param name="entityChangedCallback">A delegate that encapsulates a method that is called when an entity changes.</param>
      <param name="collectionChangedCallback">A delegate that encapsulates a method that is called when the collection of entities changes.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> class with the supplied change method delegates and that uses the specified <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
      <param name="context">The <see cref="T:System.Data.Services.Client.DataServiceContext" /> used to track items in the collection.</param>
      <param name="entitySetName">The entity set of the objects in the collection.</param>
      <param name="entityChangedCallback">A delegate that encapsulates a method that is called when an entity changes.</param>
      <param name="collectionChangedCallback">A delegate that encapsulates a method that is called when the collection of entities changes.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.Add(`0)">
      <summary>Adds a new item to the collection.</summary>
      <param name="item">The entity to add to the collection.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.Clear(System.Boolean)">
      <summary>Removes all items from the collection, and optionally detaches all the items from the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
      <param name="stopTracking">When true, detaches all items from the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceCollection`1.Continuation">
      <summary>Gets a continuation object that is used to return the next set of paged results.</summary>
      <returns>A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that contains the URI to return the next set of paged results.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.Detach">
      <summary>Disables <see cref="T:System.Data.Services.Client.DataServiceContext" /> tracking of all items in the collection. </summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.InsertItem(System.Int32,`0)">
      <summary>Adds a specified item to the collection at the specified index. </summary>
      <param name="index">Index at which to add the item.</param>
      <param name="item">The item to add.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.Load(System.Collections.Generic.IEnumerable{`0})">
      <summary>Loads a collection of entity objects into the collection.</summary>
      <param name="items">Collection of entity objects to be added to the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">When the method is called.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.Load(`0)">
      <summary>Loads a single entity object into the collection.</summary>
      <param name="item">Entity object to be added.</param>
      <exception cref="T:System.NotSupportedException">When the method is called.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.LoadAsync">
      <summary>Asynchronously loads items into the collection, when it represents the navigation property of an entity.</summary>
      <exception cref="T:System.InvalidOperationException">When the collection does not belong to a parent entity.-or-When the parent entity is not tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.-or-When a previous call to <see cref="M:System.Data.Services.Client.DataServiceCollection`1.LoadAsync" /> is not yet complete.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.LoadAsync(System.Linq.IQueryable{`0})">
      <summary>Asynchronously loads the collection by executing a <see cref="T:System.Data.Services.Client.DataServiceQuery`1" />.</summary>
      <param name="query">The <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> that, when executed, returns the entities to load into the collection.</param>
      <exception cref="T:System.ArgumentException">When query is null or not a <see cref="T:System.Data.Services.Client.DataServiceQuery`1" />.</exception>
      <exception cref="T:System.InvalidOperationException">When a previous call to <see cref="M:System.Data.Services.Client.DataServiceCollection`1.LoadAsync" /> is not yet complete.</exception>
    </member>
    <member name="E:System.Data.Services.Client.DataServiceCollection`1.LoadCompleted">
      <summary>Occurs when an asynchronous load operation completes.</summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.LoadNextPartialSetAsync">
      <summary>Loads the next page of data into the collection.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true when the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> has a continuation token; otherwise false.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceContext">
      <summary>The <see cref="T:System.Data.Services.Client.DataServiceContext" /> represents the runtime context of an WCF Data Services. WCF Data Services are stateless, but the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is not. State on the client is maintained between interactions in order to support features such as update management. This class, and the <see cref="T:System.Data.Services.Client.DataServiceQuery" /> class that represents a particular HTTP request to a data service, are the two main classes in the client library. </summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceContext" /> class by using the specified <paramref name="baseURI" />.</summary>
      <param name="serviceRoot">An absolute URI that identifies the root of a data service.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="serviceRoot" /> is null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">When <paramref name="serviceRoot" /> is not an absolute, well-formed URI, does not begin with http or https, or contains a query or query fragment.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.AddLink(System.Object,System.String,System.Object)">
      <summary>Adds the specified link to the set of objects the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking.</summary>
      <param name="source">The source object for the new link.</param>
      <param name="sourceProperty">The property on the source object that identifies the object to which the source adds a link.</param>
      <param name="target">The object in the new link to which the source will be linked. The target object must be of the type identified by the <paramref name="sourceProperty" /> parameter or a subtype of the type.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="source" />, <paramref name="sourceProperty" /> or <paramref name="target" /> are null.</exception>
      <exception cref="T:System.InvalidOperationException">When the link already exists.-or-When the source or target objects are in a <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> state.-or-When <paramref name="sourceProperty" /> is not property that returns a collection.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.AddObject(System.String,System.Object)">
      <summary>Adds the specified object to the set of objects that the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking.</summary>
      <param name="entitySetName">The name of the entity set to which the resource will be added.</param>
      <param name="entity">The resource to be tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> in the added state.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="entitySetName" /> or <paramref name="entity" /> is null.</exception>
      <exception cref="T:System.ArgumentException">When <paramref name="entitySetName" /> is an empty string.-or-When <paramref name="entity" /> does not have a key property.</exception>
      <exception cref="T:System.InvalidOperationException">When <paramref name="entity" /> is already being tracked by the context.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)">
      <summary>Adds a related object to the context and creates the link that defines the relationship between the two objects in a single request.</summary>
      <param name="source">The parent object that is being tracked by the context.</param>
      <param name="sourceProperty">The name of the navigation property that returns the related object based on an association between the two entities.</param>
      <param name="target">The related object that is being added.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.ApplyingChanges">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is currently applying changes to tracked objects.</summary>
      <returns>Returns true when changes are currently being applied; otherwise, returns false.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.AttachLink(System.Object,System.String,System.Object)">
      <summary>Notifies the <see cref="T:System.Data.Services.Client.DataServiceContext" /> to start tracking the specified link between the source and the specified target entity.</summary>
      <param name="source">The source object in the new link.</param>
      <param name="sourceProperty">The name of the property on the source object that represents the link between the source and target object.</param>
      <param name="target">The target object in the link that is bound to the source object specified in this call. The target object must be of the type identified by the source property or a subtype.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="source" />, <paramref name="sourceProperty" /> or <paramref name="target" /> are null.</exception>
      <exception cref="T:System.InvalidOperationException">When the link binding already exists.-or-When the source or target objects are in an <see cref="F:System.Data.Services.Client.EntityStates.Added" /> or <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> state.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object)">
      <summary>Notifies the <see cref="T:System.Data.Services.Client.DataServiceContext" /> to start tracking the specified resource and supplies the location of the resource within the specified resource set.</summary>
      <param name="entitySetName">The name of the set that contains the resource.</param>
      <param name="entity">The resource to be tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />. The resource is attached in the Unchanged state.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> or <paramref name="entitySetName" /> are null.</exception>
      <exception cref="T:System.ArgumentException">When <paramref name="entitySetName" /> is an empty string.-or-When <paramref name="entity" /> does not have a key property.</exception>
      <exception cref="T:System.InvalidOperationException">When <paramref name="entity" /> is already being tracked by the context.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object,System.String)">
      <summary>Notifies the <see cref="T:System.Data.Services.Client.DataServiceContext" /> to start tracking the specified resource and supplies the location of the resource within the specified resource set.</summary>
      <param name="entitySetName">The string value that contains the name of the entity set to which the entity is attached.</param>
      <param name="entity">The entity to add.</param>
      <param name="etag">An eTag value that represents the state of the entity the last time that it was retrieved from the data service. This value is treated as an opaque string; no validation is performed on it by the client library.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> or <paramref name="entitySetName" /> are null.</exception>
      <exception cref="T:System.ArgumentException">When <paramref name="entitySetName" /> is an empty string.-or-When <paramref name="entity" /> does not have a key property.</exception>
      <exception cref="T:System.InvalidOperationException">When <paramref name="entity" /> is already being tracked by the context.</exception>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.BaseUri">
      <summary>Gets the absolute URI identifying the root of the target data service. </summary>
      <returns>An absolute URI that identifies the root of an WCF Data Services.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.AsyncCallback,System.Object)">
      <summary>Asynchronously sends a request to the data service to retrieve the next page of data in a paged query result.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the status of the operation.</returns>
      <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that represents the next page of data to return from the data service.</param>
      <param name="callback">The delegate to invoke when results are available for client consumption.</param>
      <param name="state">The user-defined state object that is passed to the callback.</param>
      <typeparam name="T">The type returned by the query.</typeparam>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)">
      <summary>Asynchronously sends the request so that this call does not block processing while waiting for the results from the service.</summary>
      <returns>The query result.</returns>
      <param name="requestUri">The URI to which the query request will be sent. The URI may be any valid data service URI; it can contain $ query parameters.</param>
      <param name="callback">Delegate to invoke when results are available for client consumption.</param>
      <param name="state">User-defined state object that was passed to the callback.</param>
      <typeparam name="TElement">The type returned by the query.</typeparam>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])">
      <summary>Asynchronously submits a group of queries as a batch to the data service.</summary>
      <returns>The query result.</returns>
      <param name="callback">The delegate that is called when a response to the batch request is received.</param>
      <param name="state">User-defined state object that is used to pass context data to the callback method.</param>
      <param name="queries">The array of query requests to include in the batch request.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)">
      <summary>Asynchronously gets binary property data for the specified entity as a data stream along with the specified message headers.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that is used to track the status of the asynchronous operation. </returns>
      <param name="entity">The entity that has the binary property to retrieve. </param>
      <param name="args">The instance of the <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> class that contains settings for the HTTP request message.</param>
      <param name="callback">The delegate to invoke when results are available for client consumption.</param>
      <param name="state">The user-defined state object that is passed to the callback.</param>
      <exception cref="T:System.ArgumentNullException">Any of the parameters supplied to the method is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" />.-or-The <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.-or-The <paramref name="entity" /> is not a Media Link Entry and does not have a binary property.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)">
      <summary>Begins the operation to load the value of the specified property from the data service.</summary>
      <returns>An IAsyncResult that represents the status of the asynchronous operation.</returns>
      <param name="entity">The entity that contains the property to load.</param>
      <param name="propertyName">The name of the property on the specified entity to load.</param>
      <param name="callback">The delegate called when a response to the request is received.</param>
      <param name="state">The user-defined state object used to pass context data to the callback method.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.AsyncCallback,System.Object)">
      <summary>Asynchronously loads a page of related entities from the data service by using the supplied next link URI.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that is used to track the status of the asynchronous operation. </returns>
      <param name="entity">The entity that contains the property to load.</param>
      <param name="propertyName">The name of the property of the specified entity to load.</param>
      <param name="continuation">The <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation" /> object that contains the URI used to load the next results page.</param>
      <param name="callback">The delegate to invoke when results are available for client consumption.</param>
      <param name="state">The user-defined state object that is passed to the callback.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Uri,System.AsyncCallback,System.Object)">
      <summary>Asynchronously loads a page of related entities from the data service by using the supplied next link URI.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that is used to track the status of the asynchronous operation.</returns>
      <param name="entity">The entity that contains the property to load.</param>
      <param name="propertyName">The name of the property of the specified entity to load.</param>
      <param name="nextLinkUri">The URI used to load the next results page.</param>
      <param name="callback">The delegate to invoke when results are available for client consumption.</param>
      <param name="state">The user-defined state object that is passed to the callback.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)">
      <summary>Asynchronously submits the pending changes to the data service collected by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> since the last time changes were saved.</summary>
      <returns>An IAsyncResult that represents the status of the asynchronous operation.</returns>
      <param name="callback">The delegate to call when the operation finishes.</param>
      <param name="state">The user-defined state object used to pass context data to the callback method.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.Data.Services.Client.SaveChangesOptions,System.AsyncCallback,System.Object)">
      <summary>Asynchronously submits the pending changes to the data service collected by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> since the last time changes were saved.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation.</returns>
      <param name="options">The options for how the client can save the pending set of changes. For more information, see <see cref="T:System.Data.Services.Client.SaveChangesOptions" />.</param>
      <param name="callback">The delegate to call when the operation finishes.</param>
      <param name="state">The user-defined state object used to pass context data to the callback method.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.CancelRequest(System.IAsyncResult)">
      <summary>Cancels a request to the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
      <param name="asyncResult">The status of the asynchronous operation to be cancelled.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.CreateQuery``1(System.String)">
      <summary>Creates a data service query for data of a specified generic type.</summary>
      <returns>A new <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> instance that represents a data service query.</returns>
      <param name="entitySetName">A string that resolves to a URI.</param>
      <typeparam name="T">The type returned by the query.</typeparam>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.Credentials">
      <summary>Gets or sets the authentication information that is used when you send a request to the data service.</summary>
      <returns>The base authentication interface for retrieving credentials for Web client authentication.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.DataNamespace">
      <summary>Gets or sets the XML namespace for data items, not metadata items, of an Atom payload.</summary>
      <returns>A string representing the XML namespace for data items of a payload in the Atom format.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.DeleteLink(System.Object,System.String,System.Object)">
      <summary>Changes the state of the link to Deleted in the list of links being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
      <param name="source">The source object in the link to be marked for deletion.</param>
      <param name="sourceProperty">The name of the property on the source object that represents the source in the link between the source and the target.</param>
      <param name="target">The target object involved in the link that is bound to the source object. The target object must be of the type identified by the source property or a subtype.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="source" />, <paramref name="sourceProperty" /> or <paramref name="target" /> are null.</exception>
      <exception cref="T:System.InvalidOperationException">When the source or target objects are in an <see cref="F:System.Data.Services.Client.EntityStates.Added" /> or <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> state.-or-When <paramref name="sourceProperty" /> is not property that returns a collection.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.DeleteObject(System.Object)">
      <summary>Changes the state of the specified object to Deleted in the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
      <param name="entity">The tracked entity to be changed to the <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> state.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">When <paramref name="entity" /> is not being tracked by the context.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.Detach(System.Object)">
      <summary>Removes the entity from the list of entities that the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking.</summary>
      <returns>Returns true if the specified entity was detached; otherwise false.</returns>
      <param name="entity">The tracked entity to be detached from the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> is null.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.DetachLink(System.Object,System.String,System.Object)">
      <summary>Removes the specified link from the list of links being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
      <returns>Returns true if the specified entity was detached; otherwise false.</returns>
      <param name="source">The source object participating in the link to be marked for deletion.</param>
      <param name="sourceProperty">The name of the property on the source object that represents the source in the link between the source and the target.</param>
      <param name="target">The target object involved in the link that is bound to the source object. The target object must be of the type identified by the source property or a subtype.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="source" /> or <paramref name="sourceProperty" /> are null.</exception>
      <exception cref="T:System.ArgumentException">When sourceProperty is empty.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)">
      <summary>Called to complete the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)" />.</summary>
      <returns>The response to the query operation.</returns>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> object.</param>
      <typeparam name="TElement">The type returned by the query.</typeparam>
      <exception cref="T:System.ArgumentNullException">When <paramref name="asyncResult" /> is null.</exception>
      <exception cref="T:System.ArgumentException">When <paramref name="asyncResult" /> did not originate from this instance or <see cref="M:System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)" /> was previously called.</exception>
      <exception cref="T:System.InvalidOperationException">When an error occurs in the request or when materializing the results of a query into objects.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.EndExecuteBatch(System.IAsyncResult)">
      <summary>Called to complete the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])" />.</summary>
      <returns>The <see cref="T:System.Data.Services.Client.DataServiceResponse" /> object that indicates the result of the batch operation.</returns>
      <param name="asyncResult">An IAsyncResult that represents the status of the asynchronous operation.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.EndGetReadStream(System.IAsyncResult)">
      <summary>Called to complete the asynchronous operation of retrieving a binary property as a stream.</summary>
      <returns>An instance of <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> which contains the response stream along with its metadata.</returns>
      <param name="asyncResult">The result from the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)" /> operation that contains the binary data stream.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.EndLoadProperty(System.IAsyncResult)">
      <summary>Called to complete the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)" /> operation.</summary>
      <returns>The response to the query.</returns>
      <param name="asyncResult">An IAsyncResult that represents the status of the asynchronous operation.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.EndSaveChanges(System.IAsyncResult)">
      <summary>Called to complete the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" /> operation.</summary>
      <returns>A <see cref="T:System.Data.Services.Client.DataServiceResponse" /> object that indicates the result of the batch operation.</returns>
      <param name="asyncResult">An IAsyncResult that represents the status of the asynchronous operation.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.Entities">
      <summary>Gets a list of all the resources currently being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
      <returns>A list of all the resources currently being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />. </returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.GetEntityDescriptor(System.Object)">
      <summary>Gets the <see cref="T:System.Data.Services.Client.EntityDescriptor" /> for the supplied entity object.</summary>
      <returns>The <see cref="T:System.Data.Services.Client.EntityDescriptor" /> instance for the <paramref name="entity" />, or null if an <see cref="T:System.Data.Services.Client.EntityDescriptor" /> does not exist for the object.</returns>
      <param name="entity">The object for which to return the entity descriptor.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.GetLinkDescriptor(System.Object,System.String,System.Object)">
      <summary>Gets the <see cref="T:System.Data.Services.Client.LinkDescriptor" /> for a specific link that defines the relationship between two entities.</summary>
      <returns>The <see cref="T:System.Data.Services.Client.LinkDescriptor" /> instance for the specified relationship, or null if a <see cref="T:System.Data.Services.Client.LinkDescriptor" /> does not exist for the relationship.</returns>
      <param name="source">Source object in the link</param>
      <param name="sourceProperty">The name of the navigation property on the <paramref name="source" /> object that returns the related object.</param>
      <param name="target">The related entity.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.GetMetadataUri">
      <summary>Gets a URI of the data service metadata for the data service.</summary>
      <returns>A URI that identifies the location of the metadata description, in .edmx format, for the data service identified by the base URI that is passed to the constructor.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.GetReadStreamUri(System.Object)">
      <summary>Gets the URI that is used to return binary property data as a data stream.</summary>
      <returns>The read URI of the binary data stream.</returns>
      <param name="entity">The entity that has the binary property to retrieve. </param>
      <exception cref="T:System.ArgumentNullException">If the entity specified is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" />.</exception>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.HttpStack">
      <summary>Gets a value that indicates the type of HTTP implementation to use when accessing the data service.</summary>
      <returns>A T:System.Data.Services.Client.HttpStack value that indicates the HTTP</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties">
      <summary>Gets or sets whether the properties read from the type must be mapped to properties on the client-side type.</summary>
      <returns>A Boolean value that indicates whether the properties read from the type must be mapped to properties on the client-side type.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException">
      <summary>Gets or sets whether an exception is raised when a 404 error (resource not found) is returned by the data service. </summary>
      <returns>When set to true, the client library returns an empty set instead of raising a <see cref="T:System.Data.Services.Client.DataServiceQueryException" /> when the data service returns an HTTP 404: Resource Not Found error.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.Links">
      <summary>Gets the collection of all associations or links currently being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> object.</summary>
      <returns>A collection of all associations or links currently being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> object.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.MergeOption">
      <summary>Gets or sets the synchronization option for receiving entities from a data service.</summary>
      <returns>One of the members of the <see cref="T:System.Data.Services.Client.MergeOption" /> enumeration.</returns>
    </member>
    <member name="E:System.Data.Services.Client.DataServiceContext.ReadingEntity">
      <summary>Occurs after the entity has been completely read into the target entity.</summary>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.ResolveName">
      <summary>Gets or sets a function to override the default type resolution strategy used by the client library when sending entities to a data service.</summary>
      <returns>Returns a string that contains the name of the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.ResolveType">
      <summary>Gets or sets a function that is used to override the default type resolution option that is used by the client library when receiving entities from a data service.</summary>
      <returns>A function delegate that identifies an override function that is used to override the default type resolution option that is used by the client library.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions">
      <summary>Gets or sets the <see cref="T:System.Data.Services.Client.SaveChangesOptions" /> values used by the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" /> method.</summary>
      <returns>The options used when saving changes.</returns>
    </member>
    <member name="E:System.Data.Services.Client.DataServiceContext.SendingRequest">
      <summary>Occurs when a new HttpWebRequest has been created.</summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.SetLink(System.Object,System.String,System.Object)">
      <summary>Notifies the <see cref="T:System.Data.Services.Client.DataServiceContext" /> that a new link exists between the objects specified and that the link is represented by the property specified by the <paramref name="sourceProperty" /> parameter.</summary>
      <param name="source">The source object for the new link.</param>
      <param name="sourceProperty">The property on the source object that identifies the target object of the new link.</param>
      <param name="target">The child object involved in the new link that is to be initialized by calling this method. The target object must be a subtype of the type identified by the <paramref name="sourceProperty" /> parameter. If <paramref name="target" /> is set to null, the call represents a delete link operation.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="source" />, <paramref name="sourceProperty" />, or <paramref name="target" /> are null.</exception>
      <exception cref="T:System.InvalidOperationException">When the link already exists.-or-When the source or target objects are in a <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> state.-or-When <paramref name="sourceProperty" /> is not a property that returns a reference.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.Data.Services.Client.DataServiceRequestArgs)">
      <summary>Sets a new data stream as the binary property of an entity with the specified settings in the request message.</summary>
      <param name="entity">The entity that has a binary property to which to assign the data stream.</param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the binary data. </param>
      <param name="closeStream">A <see cref="T:System.Boolean" /> value that determines whether the data stream is closed when the <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> method is completed. </param>
      <param name="args">An instance of the <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> class that contains settings for the HTTP request message.</param>
      <exception cref="T:System.ArgumentNullException">Any of the parameters supplied to the method are null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not being tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" /> instance. -or-The <paramref name="entity" /> has the <see cref="T:System.Data.Services.Client.MediaEntryAttribute" /> applied. </exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.String,System.String)">
      <summary>Sets a new data stream as the binary property of an entity. The specified Content-Type and Slug headers are included in the request message.</summary>
      <param name="entity">The entity that has a binary property to which to assign the data stream.</param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the binary data. </param>
      <param name="closeStream">A <see cref="T:System.Boolean" /> value that determines whether the data stream is closed when the <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> method is completed. </param>
      <param name="contentType">The Content-Type header value for the request message.</param>
      <param name="slug">The Slug header value for the request message.</param>
      <exception cref="T:System.ArgumentNullException">Any of the parameters supplied to the method are null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not being tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" /> instance. -or-The entity has the <see cref="T:System.Data.Services.Client.MediaEntryAttribute" /> applied. </exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.TryGetEntity``1(System.Uri,``0@)">
      <summary>Tests retrieval of an entity being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> by reference to the URI of the entity.</summary>
      <returns>If an entity is found at <paramref name="resourceUri" />, the entity is returned in the out parameter <paramref name="entity" /> and true is returned. If no entity is found, false is returned.</returns>
      <param name="identity">The URI of the tracked entity to be retrieved.</param>
      <param name="entity">The entity to be retrieved.</param>
      <typeparam name="TEntity">The type of the entity.</typeparam>
      <exception cref="T:System.ArgumentNullException">When <paramref name="identity" /> is null.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.TryGetUri(System.Object,System.Uri@)">
      <summary>Retrieves the canonical URI associated with the specified entity, if available.</summary>
      <returns>Returns true if the canonical URI is returned in the Out parameter. If the specified entity is not tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> or is in the added state, no URI is available and false is returned.</returns>
      <param name="entity">The entity identified by the <paramref name="identity" />.</param>
      <param name="identity">The URI of the entity.</param>
      <exception cref="T:System.ArgumentNullException">entity is null</exception>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.TypeScheme">
      <summary>Gets or sets the URI that is used to indicate what type scheme is used by the service.</summary>
      <returns>A <see cref="T:System.Uri" /> object that contains the type scheme.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.UpdateObject(System.Object)">
      <summary>Changes the state of the specified object in the <see cref="T:System.Data.Services.Client.DataServiceContext" /> to <see cref="F:System.Data.Services.Client.EntityStates.Modified" />.</summary>
      <param name="entity">The tracked entity to be assigned to the <see cref="F:System.Data.Services.Client.EntityStates.Modified" />  state.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> is null.</exception>
      <exception cref="T:System.ArgumentException">When <paramref name="entity" /> is in a <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> state.</exception>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.UseDefaultCredentials">
      <summary>Gets or sets whether default credentials are used to authenticate requests to the data service. </summary>
      <returns>true when the default credentials should be used; otherwise false.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.UsePostTunneling">
      <summary>Gets or sets a Boolean value that indicates whether to use post tunneling.</summary>
      <returns>A Boolean value that indicates whether to use post tunneling.</returns>
    </member>
    <member name="E:System.Data.Services.Client.DataServiceContext.WritingEntity">
      <summary>Occurs after an entity has been fully serialized into XML (Atom), and allows the developer to change the XML before it is sent.</summary>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceQuery">
      <summary>An abstract class that represents a single query request to a data service. </summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery.BeginExecute(System.AsyncCallback,System.Object)">
      <summary>Asynchronously sends a request to execute the data service query.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that is used to track the status of the asynchronous operation.</returns>
      <param name="callback">The delegate to invoke when results are available for client consumption.</param>
      <param name="state">The user-defined state object passed to the callback.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery.EndExecute(System.IAsyncResult)">
      <summary>Called to complete the asynchronous operation of executing a data service query.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the results of the query operation.</returns>
      <param name="asyncResult">The result from the <see cref="M:System.Data.Services.Client.DataServiceQuery.BeginExecute(System.AsyncCallback,System.Object)" /> operation that contains the query results.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceQuery.Expression">
      <summary>Represents an expression that contains the query to the data service.</summary>
      <returns>A <see cref="T:System.Linq.Expressions.Expression" /> object that represents the query.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceQuery.Provider">
      <summary>Represents the query provider instance.</summary>
      <returns>An <see cref="T:System.Linq.IQueryProvider" /> that represents the data source provider.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gets the <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection returned by the query.</summary>
      <returns>An enumerator over the results of the query.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceQuery`1">
      <summary>Represents a single query request to a data service.</summary>
      <typeparam name="TElement">Type of results returned by the query.</typeparam>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery`1.AddQueryOption(System.String,System.Object)">
      <summary>Creates a new <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> that includes the query option in the URI that is generated by the returned query.</summary>
      <returns>A query instance that includes the new query option.</returns>
      <param name="name">The string value that contains the name of the query string option to add.</param>
      <param name="value">The object that contains the value of the query string option.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery`1.BeginExecute(System.AsyncCallback,System.Object)">
      <summary>Starts an asynchronous network operation that executes the query that is represented by this object instance.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation.</returns>
      <param name="callback">The delegate to invoke when the operation finishes.</param>
      <param name="state">User-defined object used to transfer state between the start of the operation and the callback defined by <paramref name="callback" />.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceQuery`1.ElementType">
      <summary>Returns the type of the object used in the template to create the DataServiceQuery instance.</summary>
      <returns>Returns a <see cref="T:System.Type" /> that represents the type that is used in the template when the query is created.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery`1.EndExecute(System.IAsyncResult)">
      <summary>Ends an asynchronous query request to a data service.</summary>
      <returns>Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> instance that contains the results of the query operation.</returns>
      <param name="asyncResult">The pending asynchronous query request.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery`1.Expand(System.String)">
      <summary>Creates a new <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> that includes the expand option in the URI that is generated by the returned query.</summary>
      <returns>A query instance that includes the expand path.</returns>
      <param name="path">A string value that enumerates the related entities to include in the query.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceQuery`1.Expression">
      <summary>Represents an expression that contains the query to the data service.</summary>
      <returns>A <see cref="T:System.Linq.Expressions.Expression" /> object that represents the query.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery`1.IncludeTotalCount">
      <summary>Requests that the count of all entities in the entity set be returned inline with the query results.</summary>
      <returns>A new <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> object that has the inline count option set.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceQuery`1.Provider">
      <summary>Represents the query provider instance.</summary>
      <returns>A <see cref="T:System.Linq.IQueryProvider" /> representing the data source provider.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceQuery`1.RequestUri">
      <summary>Gets the URI for the query.</summary>
      <returns>A <see cref="T:System.Uri" /> object that contains the URI of the request.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Executes the query and returns the result as a collection.</summary>
      <returns>An enumerator over the results of the query.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Executes the query and returns the results as a collection.</summary>
      <returns>An enumerator over the results of the query.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery`1.ToString">
      <summary>Represents the URI of the query to the data service.</summary>
      <returns>A URI as a string that represents the query to the data service for this <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> instance.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceQueryContinuation">
      <summary>Encapsulates a URI that returns the next page of a paged query result.</summary>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceQueryContinuation.NextLinkUri">
      <summary>Gets the URI that is used to return the next page of data from a paged query result.</summary>
      <returns>A URI that returns the next page of data. </returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQueryContinuation.ToString">
      <summary>Returns the next link URI as a string.</summary>
      <returns>A string representation of the next link URI.  </returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceQueryContinuation`1">
      <summary>Encapsulates a URI that returns the next page of a paged query result.  </summary>
      <typeparam name="T">The type of the continuation token.</typeparam>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceQueryException">
      <summary>Exception that indicates an error occurred while loading the property value from the data service. </summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQueryException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceQueryException" /> class by using a system-supplied message that describes the error. </summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQueryException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceQueryException" /> class by using a specified message that describes the error. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string was localized for the current system culture.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQueryException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceQueryException" /> class by using a specified error message and a reference to the inner exception that is the cause of this exception. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string was localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQueryException.#ctor(System.String,System.Exception,System.Data.Services.Client.QueryOperationResponse)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceQueryException" /> class. </summary>
      <param name="message">The string value that contains the error message.</param>
      <param name="innerException">The inner exception object.</param>
      <param name="response">The <see cref="T:System.Data.Services.Client.QueryOperationResponse" /> object.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceQueryException.Response">
      <summary>Gets the <see cref="T:System.Data.Services.Client.QueryOperationResponse" /> that indicates the exception results.</summary>
      <returns>A <see cref="T:System.Data.Services.Client.QueryOperationResponse" /> object that indicates the exception results.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceRequest">
      <summary>Represents request objects that are submitted as a batch to the data service.</summary>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceRequest.ElementType">
      <summary>Gets the type of object submitted as a batch to the data service.</summary>
      <returns>Type object.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceRequest.RequestUri">
      <summary>Gets the URI of the request object submitted to a data service.</summary>
      <returns>URI of the request object.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceRequest.ToString">
      <summary>Represents the URI of the query to the data service. </summary>
      <returns>The URI of the request as a <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceRequest`1">
      <summary>Represents request objects submitted as a batch to the data service. </summary>
      <typeparam name="TElement">Represents the type of objects submitted to the data service.</typeparam>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceRequest`1.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceRequest`1" /> class. </summary>
      <param name="requestUri">The URI object that contains the request string.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceRequest`1.ElementType">
      <summary>Gets the type of the object used to create the <see cref="T:System.Data.Services.Client.DataServiceRequest`1" /> instance.</summary>
      <returns>A <see cref="T:System.Type" /> value that indicates the type of data returned.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceRequest`1.RequestUri">
      <summary>Gets the URI object that contains the request string.</summary>
      <returns>A <see cref="T:System.Uri" /> object that contains the request string.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceRequestArgs">
      <summary>Represents additional metadata that is included in a request message to the data service.</summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceRequestArgs.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceRequestArgs.AcceptContentType">
      <summary>Gets or sets the Accept header of the request message.</summary>
      <returns>The value of the Accept header.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceRequestArgs.ContentType">
      <summary>Gets or sets the Content-Type header of the request message.</summary>
      <returns>The value of the Content-Type header.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceRequestArgs.Headers">
      <summary>Gets the headers in the request message.</summary>
      <returns>The headers in the request message.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceRequestArgs.Slug">
      <summary>Gets or sets the value of the Slug header of the request message.</summary>
      <returns>A value that is the Slug header of the request.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceRequestException">
      <summary>Represents the error thrown if the data service returns a response code less than 200 or greater than 299 or if the top-level element in the response is &lt;error&gt;. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceRequestException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceRequestException" /> class by using a system-supplied message that describes the error. </summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceRequestException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceRequestException" /> class by using a specified message that describes the error. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string was localized for the current system culture.The error message text.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceRequestException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceRequestException" /> class by using a specified error message and a reference to the inner exception that is the cause of this exception. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string was localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceRequestException.#ctor(System.String,System.Exception,System.Data.Services.Client.DataServiceResponse)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceRequestException" /> class. </summary>
      <param name="message">Error message text.</param>
      <param name="innerException">Exception object that contains the inner exception.</param>
      <param name="response">
        <see cref="T:System.Data.Services.Client.DataServiceResponse" /> object.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceRequestException.Response">
      <summary>Gets the response as a <see cref="T:System.Data.Services.Client.DataServiceResponse" /> object.</summary>
      <returns>A <see cref="T:System.Data.Services.Client.DataServiceResponse" /> object.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceResponse">
      <summary>Represents the response to operations that were sent to the data service by calling <see cref="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" />.</summary>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceResponse.BatchHeaders">
      <summary>The headers from an HTTP response associated with a batch request.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> object that contains the name-value pairs of an HTTP response.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceResponse.BatchStatusCode">
      <summary>The status code from an HTTP response associated with a batch request.</summary>
      <returns>An integer based on status codes defined in Hypertext Transfer Protocol.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceResponse.GetEnumerator">
      <summary>Gets an enumerator that enables retrieval of responses to operations being tracked by <see cref="T:System.Data.Services.Client.OperationResponse" /> objects within the <see cref="T:System.Data.Services.Client.DataServiceResponse" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceResponse.IsBatchResponse">
      <summary>Gets a Boolean value that indicates whether the response contains multiple results.</summary>
      <returns>A Boolean value that indicates whether the response contains multiple results.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceResponse.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gets an enumerator that enables retrieval of responses to operations being tracked by <see cref="T:System.Data.Services.Client.OperationResponse" /> objects within the <see cref="T:System.Data.Services.Client.DataServiceResponse" />.</summary>
      <returns>An enumerator over the results of the query.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceStreamResponse">
      <summary>Represents a response from the data service that contains binary data as a stream.</summary>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceStreamResponse.ContentDisposition">
      <summary>Gets the Content-Disposition header field for the response stream.</summary>
      <returns>The contents of the Content-Disposition header field.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceStreamResponse.ContentType">
      <summary>Gets the content type of the response stream.</summary>
      <returns>The content type of the response stream.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceStreamResponse.Dispose">
      <summary>Releases all resources used by the current instance of the <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceStreamResponse.Headers">
      <summary>Gets the collection of headers from the response.</summary>
      <returns>The headers collection from the response message as a <see cref="T:System.Collections.Generic.Dictionary`2" /> object.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceStreamResponse.Stream">
      <summary>Gets the binary property data from the data service as a binary stream. </summary>
      <returns>The stream that contains the binary property data.</returns>
      <exception cref="T:System.ObjectDisposedException">When the <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> is already disposed.</exception>
    </member>
    <member name="T:System.Data.Services.Client.Descriptor">
      <summary>Abstract class from which <see cref="T:System.Data.Services.Client.EntityDescriptor" /> is derived. </summary>
    </member>
    <member name="P:System.Data.Services.Client.Descriptor.State">
      <summary>When overridden in a derived class, gets the state of the object at the time this instance was constructed.</summary>
      <returns>The <see cref="T:System.Data.Services.Client.EntityStates" /> of the object returned at the time this instance was constructed. </returns>
    </member>
    <member name="T:System.Data.Services.Client.EntityChangedParams">
      <summary>Encapsulates the arguments of a <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> delegate</summary>
    </member>
    <member name="P:System.Data.Services.Client.EntityChangedParams.Context">
      <summary>The context that is associated with the entity object that has changed.</summary>
      <returns>The context that is tracking the changed object.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityChangedParams.Entity">
      <summary>The entity object that has changed.</summary>
      <returns>The changed object.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityChangedParams.PropertyName">
      <summary>The name of the property on the entity object that references the target object.</summary>
      <returns>The name of the changed property.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityChangedParams.PropertyValue">
      <summary>The object that is currently referenced by the changed property on the entity object.</summary>
      <returns>The current value that references a target entity.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityChangedParams.SourceEntitySet">
      <summary>The entity set of the source object.</summary>
      <returns>An entity set name.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityChangedParams.TargetEntitySet">
      <summary>The entity set to which the target entity object belongs</summary>
      <returns>An entity set name.</returns>
    </member>
    <member name="T:System.Data.Services.Client.EntityCollectionChangedParams">
      <summary>Encapsulates the arguments of a <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> delegate</summary>
    </member>
    <member name="P:System.Data.Services.Client.EntityCollectionChangedParams.Action">
      <summary>A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction" /> value that indicates how the collection was changed. </summary>
      <returns>A value that indicates how the collection was changed.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityCollectionChangedParams.Collection">
      <summary>The <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> that has changed.</summary>
      <returns>A reference to the collection that has changed.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityCollectionChangedParams.Context">
      <summary>The <see cref="T:System.Data.Services.Client.DataServiceContext" /> associated with the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> that has changed.</summary>
      <returns>The context associated with the collection that has changed</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityCollectionChangedParams.PropertyName">
      <summary>The navigation property on the source object that references the collection that has changed.</summary>
      <returns>The navigation property name.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityCollectionChangedParams.SourceEntity">
      <summary>The source object that references the target object in the collection by using a navigation property.</summary>
      <returns>The source object.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityCollectionChangedParams.SourceEntitySet">
      <summary>The entity set of the source object.</summary>
      <returns>An entity set name.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityCollectionChangedParams.TargetEntity">
      <summary>The entity object in the collection that has changed.</summary>
      <returns>The changed entity object in the collection.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityCollectionChangedParams.TargetEntitySet">
      <summary>The entity set name of the object in the collection.</summary>
      <returns>An entity set name.</returns>
    </member>
    <member name="T:System.Data.Services.Client.EntityDescriptor">
      <summary>Description of modifications done to entities by operations returned in a <see cref="T:System.Data.Services.Client.DataServiceResponse" />.</summary>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.EditLink">
      <summary>Gets or sets the URI that modifies the entity.</summary>
      <returns>The edit link URI for the entity resource.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.EditStreamUri">
      <summary>Gets or sets the URI that modifies the binary property data of the entity.</summary>
      <returns>The <see cref="P:System.Data.Services.Client.EntityDescriptor.EditStreamUri" /> property contains the edit-media link URI for the Media Resource that is associated with the entity, which is a Media Link Entry.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.Entity">
      <summary>Gets the entity that contains the update data.</summary>
      <returns>An object that contains update data.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.ETag">
      <summary>Gets an eTag value that indicates the state of data targeted for update since the last call to <see cref="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" />.</summary>
      <returns>A string value that indicates the state of data.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.Identity">
      <summary>Gets or sets the URI that is the identity value of the entity.</summary>
      <returns>The <see cref="P:System.Data.Services.Client.EntityDescriptor.Identity" /> property corresponds to the identity element of the entry that represents the entity in the Atom response.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.ParentForInsert">
      <summary>Gets the parent entity that is related to the entity.</summary>
      <returns>An object that is the parent entity in the relationship link.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.ParentPropertyForInsert">
      <summary>Gets the name of the property of the entity that is a navigation property and links to the parent entity.</summary>
      <returns>The name of the parent property.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.ReadStreamUri">
      <summary>Gets or sets the URI that accesses the binary property data of the entity.</summary>
      <returns>A URI that accesses the binary property as a stream.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.SelfLink">
      <summary>Gets or sets the URI that is used to return the entity resource.</summary>
      <returns>A URI that returns the entity.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.ServerTypeName">
      <summary>Gets or sets the name of the type in the data source to which the entity is mapped.</summary>
      <returns>A string that is the name of the data type.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.StreamETag">
      <summary>Gets the eTag for the media resource associated with an entity that is a media link entry.</summary>
      <returns>A string value that indicates the state of data.</returns>
    </member>
    <member name="T:System.Data.Services.Client.EntityStates">
      <summary>Represents the enumeration that identifies the state of an entity being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />. </summary>
    </member>
    <member name="F:System.Data.Services.Client.EntityStates.Detached">
      <summary>The entity was detached since the last call to <see cref="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" />.</summary>
    </member>
    <member name="F:System.Data.Services.Client.EntityStates.Unchanged">
      <summary>The entity is unchanged since the last call to <see cref="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" />.</summary>
    </member>
    <member name="F:System.Data.Services.Client.EntityStates.Added">
      <summary>The entity was added since the last call to <see cref="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" />.</summary>
    </member>
    <member name="F:System.Data.Services.Client.EntityStates.Deleted">
      <summary>The entity was deleted since the last call to <see cref="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" />.</summary>
    </member>
    <member name="F:System.Data.Services.Client.EntityStates.Modified">
      <summary>The entity was modified since the last call to <see cref="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" />.</summary>
    </member>
    <member name="T:System.Data.Services.Client.HttpStack">
      <summary>Represents the type of HTTP implementation to use when accessing the data service.</summary>
    </member>
    <member name="F:System.Data.Services.Client.HttpStack.Auto">
      <summary>The client automatically determines the HTTP implementation to use. This is the recommended setting.</summary>
    </member>
    <member name="F:System.Data.Services.Client.HttpStack.ClientHttp">
      <summary>A Silverlight client HTTP implementation is used.</summary>
    </member>
    <member name="F:System.Data.Services.Client.HttpStack.XmlHttp">
      <summary>An XMLHTTP implementation is used.</summary>
    </member>
    <member name="T:System.Data.Services.Client.LinkDescriptor">
      <summary>Provides a description of modifications that were made to links by operations returned in a <see cref="T:System.Data.Services.Client.DataServiceResponse" />.</summary>
    </member>
    <member name="P:System.Data.Services.Client.LinkDescriptor.Source">
      <summary>A source entity in a link returned by a <see cref="T:System.Data.Services.Client.DataServiceResponse" />.</summary>
      <returns>
        <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.Services.Client.LinkDescriptor.SourceProperty">
      <summary>The identifier property of the source entity in a link returned by a <see cref="T:System.Data.Services.Client.DataServiceResponse" />.</summary>
      <returns>The string identifier of an identity property in a source entity.</returns>
    </member>
    <member name="P:System.Data.Services.Client.LinkDescriptor.Target">
      <summary>The source entity in a link returned by a <see cref="T:System.Data.Services.Client.DataServiceResponse" />.</summary>
      <returns>
        <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:System.Data.Services.Client.LoadCompletedEventArgs">
      <summary>Used as the <see cref="T:System.EventArgs" /> class for the <see cref="E:System.Data.Services.Client.DataServiceCollection`1.LoadCompleted" /> event.</summary>
    </member>
    <member name="P:System.Data.Services.Client.LoadCompletedEventArgs.QueryOperationResponse">
      <summary>Gets the response to an asynchronous load operation.</summary>
      <returns>A <see cref="T:System.Data.Services.Client.QueryOperationResponse" /> that represents the response to a load operation.</returns>
    </member>
    <member name="T:System.Data.Services.Client.MediaEntryAttribute">
      <summary>Signifies that the specified class is to be treated as a media link entry.</summary>
    </member>
    <member name="M:System.Data.Services.Client.MediaEntryAttribute.#ctor(System.String)">
      <summary>Creates a new instance of <see cref="T:System.Data.Services.Client.MediaEntryAttribute" />.</summary>
      <param name="mediaMemberName">A string value that identifies the property that holds media data.</param>
    </member>
    <member name="P:System.Data.Services.Client.MediaEntryAttribute.MediaMemberName">
      <summary>The name of the property on the class that holds the media, usually binary data.</summary>
      <returns>A string value that identifies the property that holds media data.</returns>
    </member>
    <member name="T:System.Data.Services.Client.MergeOption">
      <summary>Determines the synchronization option for sending or receiving entities to or from a data service. </summary>
    </member>
    <member name="F:System.Data.Services.Client.MergeOption.AppendOnly">
      <summary>Append new entities only. Existing entities or their original values will not be modified. No client-side changes are lost in this merge. This is the default behavior.</summary>
    </member>
    <member name="F:System.Data.Services.Client.MergeOption.OverwriteChanges">
      <summary>All current values on the client are overwritten with current values from the data service regardless of whether they have been changed on the client. </summary>
    </member>
    <member name="F:System.Data.Services.Client.MergeOption.PreserveChanges">
      <summary>Current values that have been changed on the client are not modified, but any unchanged values are updated with current values from the data service. No client-side changes are lost in this merge.</summary>
    </member>
    <member name="F:System.Data.Services.Client.MergeOption.NoTracking">
      <summary>Objects are always loaded from the data source. Any property changes made to objects in the object context are overwritten by the data source values.</summary>
    </member>
    <member name="T:System.Data.Services.Client.MimeTypePropertyAttribute">
      <summary>Annotates a property on a class that was annotated with the <see cref="T:System.Data.Services.Client.MediaEntryAttribute" />.</summary>
    </member>
    <member name="M:System.Data.Services.Client.MimeTypePropertyAttribute.#ctor(System.String,System.String)">
      <summary>Creates a new instance of the MimeTypePropertyAttribute.</summary>
      <param name="dataPropertyName">A string that contains the name of the new property attribute.</param>
      <param name="mimeTypePropertyName">A string that contains the Mime type of the new property attribute.</param>
    </member>
    <member name="P:System.Data.Services.Client.MimeTypePropertyAttribute.DataPropertyName">
      <summary>Gets the name of the MimeTypePropertyAttribute.</summary>
      <returns>A string that contains the name of the property attribute. </returns>
    </member>
    <member name="P:System.Data.Services.Client.MimeTypePropertyAttribute.MimeTypePropertyName">
      <summary>Gets the Mime type of the MimeTypePropertyAttribute</summary>
      <returns>A string that contains the Mime type of the property attribute.</returns>
    </member>
    <member name="T:System.Data.Services.Client.OperationResponse">
      <summary>Abstract class that represents the response of a single query or create, update, or delete operation.  </summary>
    </member>
    <member name="P:System.Data.Services.Client.OperationResponse.Error">
      <summary>Gets error thrown by the operation.</summary>
      <returns>An <see cref="T:System.Exception" /> object that contains the error.</returns>
    </member>
    <member name="P:System.Data.Services.Client.OperationResponse.Headers">
      <summary>When overridden in a derived class, contains the HTTP response headers associated with a single operation.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> object that contains name value pairs of headers and values.</returns>
    </member>
    <member name="P:System.Data.Services.Client.OperationResponse.StatusCode">
      <summary>When overridden in a derived class, gets or sets the HTTP response code associated with a single operation.</summary>
      <returns>Integer value that contains response code.</returns>
    </member>
    <member name="T:System.Data.Services.Client.QueryOperationResponse">
      <summary>Represents the responses to a <see cref="T:System.Data.Services.Client.DataServiceQuery" />.</summary>
    </member>
    <member name="M:System.Data.Services.Client.QueryOperationResponse.GetContinuation">
      <summary>Gets a <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation" /> object containing the URI that is used to retrieve the next results page.</summary>
      <returns>An object containing the URI that is used to return the next results page.</returns>
    </member>
    <member name="M:System.Data.Services.Client.QueryOperationResponse.GetContinuation``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Gets a <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that contains the URI that is used to retrieve the next page of related entities in the specified collection.</summary>
      <returns>A continuation object that points to the next page for the collection.</returns>
      <param name="collection">The collection of related objects being loaded.</param>
      <typeparam name="T">The type of the items in the collection.</typeparam>
    </member>
    <member name="M:System.Data.Services.Client.QueryOperationResponse.GetContinuation(System.Collections.IEnumerable)">
      <summary>Gets a <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation" /> object containing the URI that is used to retrieve the next page of related entities in the specified collection.</summary>
      <returns>A continuation object that points to the next page for the collection.</returns>
      <param name="collection">The collection of related objects being loaded.</param>
    </member>
    <member name="M:System.Data.Services.Client.QueryOperationResponse.GetEnumerator">
      <summary>Executes the <see cref="T:System.Data.Services.Client.DataServiceQuery" /> and gets <see cref="T:System.Data.Services.Client.QueryOperationResponse" /> items. </summary>
      <returns>The enumerator to a collection of <see cref="T:System.Data.Services.Client.QueryOperationResponse" /> items.</returns>
    </member>
    <member name="P:System.Data.Services.Client.QueryOperationResponse.Query">
      <summary>Gets the <see cref="T:System.Data.Services.Client.DataServiceQuery" /> that generates the <see cref="T:System.Data.Services.Client.QueryOperationResponse" /> items. </summary>
      <returns>A <see cref="T:System.Data.Services.Client.DataServiceQuery" /> object.</returns>
    </member>
    <member name="P:System.Data.Services.Client.QueryOperationResponse.TotalCount">
      <summary>The server result set count value from a query, if the query has requested the value.</summary>
      <returns>The return value can be either a zero or positive value equal to the number of entities in the set on the server.</returns>
      <exception cref="T:System.InvalidOperationException">Thrown when the count tag is not found in the response stream.</exception>
    </member>
    <member name="T:System.Data.Services.Client.QueryOperationResponse`1">
      <summary>Represents the responses to a <see cref="T:System.Data.Services.Client.DataServiceQuery`1" />.</summary>
      <typeparam name="T">The type of the response.</typeparam>
    </member>
    <member name="M:System.Data.Services.Client.QueryOperationResponse`1.GetContinuation">
      <summary>Gets a <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that contains the URI that is used to retrieve the next results page.</summary>
      <returns>An object that contains the URI that is used to return the next results page.</returns>
    </member>
    <member name="M:System.Data.Services.Client.QueryOperationResponse`1.GetEnumerator">
      <summary>Executes the <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> and gets <see cref="T:System.Data.Services.Client.QueryOperationResponse`1" /> items.</summary>
      <returns>An enumerator to a collection of <see cref="T:System.Data.Services.Client.QueryOperationResponse`1" /> items.</returns>
    </member>
    <member name="P:System.Data.Services.Client.QueryOperationResponse`1.TotalCount">
      <summary>The server result set count value from a query, if the query has requested the value.</summary>
      <returns>The return value can be either zero or a positive value equal to the number of entities in the set on the server.</returns>
    </member>
    <member name="T:System.Data.Services.Client.ReadingWritingEntityEventArgs">
      <summary>Gives access to the entity and an XLinq object that represents an Atom entry. <see cref="T:System.Data.Services.Client.ReadingWritingEntityEventArgs" /> is used with the <see cref="E:System.Data.Services.Client.DataServiceContext.ReadingEntity" /> and <see cref="E:System.Data.Services.Client.DataServiceContext.WritingEntity" /> events. </summary>
    </member>
    <member name="P:System.Data.Services.Client.ReadingWritingEntityEventArgs.Data">
      <summary>Gets an XML Atom entry or feed data represented as <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XElement" />
      </returns>
    </member>
    <member name="P:System.Data.Services.Client.ReadingWritingEntityEventArgs.Entity">
      <summary>Gets the object representation of data returned from the <see cref="P:System.Data.Services.Client.ReadingWritingEntityEventArgs.Data" /> property. </summary>
      <returns>
        <see cref="T:System.Object" /> representation of <see cref="P:System.Data.Services.Client.ReadingWritingEntityEventArgs.Data" /> property.</returns>
    </member>
    <member name="T:System.Data.Services.Client.SaveChangesOptions">
      <summary>Indicates change options when <see cref="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" /> is called. </summary>
    </member>
    <member name="F:System.Data.Services.Client.SaveChangesOptions.None">
      <summary>Pending changes are saved using multiple requests to the server, but the operation stops on the first failure (default).</summary>
    </member>
    <member name="F:System.Data.Services.Client.SaveChangesOptions.Batch">
      <summary>All pending changes are saved in a single batch request.</summary>
    </member>
    <member name="F:System.Data.Services.Client.SaveChangesOptions.ContinueOnError">
      <summary>Pending changes are saved using multiple requests to the server, and the operation continues after an error occurs</summary>
    </member>
    <member name="F:System.Data.Services.Client.SaveChangesOptions.ReplaceOnUpdate">
      <summary>Pending updates are made by replacing all values of the entity in the data source with values from the updated entity.</summary>
    </member>
    <member name="T:System.Data.Services.Client.SendingRequestEventArgs">
      <summary>Used with the <see cref="E:System.Data.Services.Client.DataServiceContext.SendingRequest" /> event to provide access to the <see cref="T:System.Net.HttpWebRequest" /> instance that the client is about to send to the target data service.</summary>
    </member>
    <member name="P:System.Data.Services.Client.SendingRequestEventArgs.RequestHeaders">
      <summary>Represents the text of the headers of the <see cref="T:System.Net.HttpWebRequest" /> instance that the client is about to send to the target data service.</summary>
      <returns>A string value that contains the headers.</returns>
    </member>
    <member name="T:System.Data.Services.Client.TrackingMode">
      <summary>Determines whether changes that are made to a <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> are tracked.</summary>
    </member>
    <member name="F:System.Data.Services.Client.TrackingMode.None">
      <summary>Changes made to items in the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> are not tracked automatically by the client. </summary>
    </member>
    <member name="F:System.Data.Services.Client.TrackingMode.AutoChangeTracking">
      <summary>Changes to items in the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> are automatically tracked by the client.</summary>
    </member>
    <member name="T:System.Data.Services.Common.DataServiceEntityAttribute">
      <summary>Marks a class as an entity type.</summary>
    </member>
    <member name="M:System.Data.Services.Common.DataServiceEntityAttribute.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Common.DataServiceEntityAttribute" /> class.</summary>
    </member>
    <member name="T:System.Data.Services.Common.DataServiceKeyAttribute">
      <summary>Indicates the key property or properties of an entity. </summary>
    </member>
    <member name="M:System.Data.Services.Common.DataServiceKeyAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Common.DataServiceKeyAttribute" /> class. </summary>
      <param name="keyName">The string that contains the name of the key attribute.</param>
    </member>
    <member name="M:System.Data.Services.Common.DataServiceKeyAttribute.#ctor(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Common.DataServiceKeyAttribute" /> class. </summary>
      <param name="keyNames">An array of string values that contain key attribute names.</param>
    </member>
    <member name="P:System.Data.Services.Common.DataServiceKeyAttribute.KeyNames">
      <summary>Gets the names of the key attributes.</summary>
      <returns>String value that contains names of key attributes.</returns>
    </member>
    <member name="T:System.Data.Services.Common.EntityPropertyMappingAttribute">
      <summary>Attribute that specifies a custom mapping between properties of an entity type and elements of an entry in an AtomPub feed returned by the data service. </summary>
    </member>
    <member name="M:System.Data.Services.Common.EntityPropertyMappingAttribute.#ctor(System.String,System.Data.Services.Common.SyndicationItemProperty,System.Data.Services.Common.SyndicationTextContentKind,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />.</summary>
      <param name="sourcePath">The name of the property, as string, of the entity type that is mapped to the specified property of the AtomPub feed item.</param>
      <param name="targetSyndicationItem">A <see cref="T:System.Data.Services.Common.SyndicationItemProperty" /> value that represents the element in the feed to which to map the property. This value must be set to None if the TargetName is not null.</param>
      <param name="targetTextContentKind">A <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind" /> value that identifies the format of the content to display in the feed.</param>
      <param name="keepInContent">A Boolean value that is true when the property being mapped should appear both in its mapped-to location and in the content section of the feed. </param>
    </member>
    <member name="M:System.Data.Services.Common.EntityPropertyMappingAttribute.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Creates an instance of the <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> to map a property to a custom feed element.</summary>
      <param name="sourcePath">The name of the property of the entity type, as string, that is mapped to the specified property in the AtomPub feed.</param>
      <param name="targetPath">The name of the target, as string, in the resulting feed to which the property is mapped.</param>
      <param name="targetNamespacePrefix">This parameter, together with <paramref name="targetNamespaceUri" />, specifies the namespace in which the <paramref name="targetName " />element exists.</param>
      <param name="targetNamespaceUri">Specifies the namespace URI of the element, as string, specified by the <paramref name="targetName" /> property. </param>
      <param name="keepInContent">A Boolean value that is true when the property being mapped should appear both in its mapped-to location and in the content section of the feed. </param>
    </member>
    <member name="P:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent">
      <summary>Gets a Boolean value that indicates whether a property value should be repeated both in the content section of the feed and in the mapped location.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true when the property is mapped into both locations in the feed; otherwise false.</returns>
    </member>
    <member name="P:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath">
      <summary>Gets the name of the property of the syndication item that will be mapped to the specified element of the feed.</summary>
      <returns>A string value that contains the property name.</returns>
    </member>
    <member name="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix">
      <summary>Gets a string value that, together with <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri" />, specifies the namespace in which the <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" />element exists.</summary>
      <returns>A string value that contains the target namespace prefix.</returns>
    </member>
    <member name="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri">
      <summary>Gets a string value that specifies the namespace URI of the element specified by the <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> property.</summary>
      <returns>A string that contains the namespace URI.</returns>
    </member>
    <member name="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath">
      <summary>Gets the name of the custom target in the feed to which the property is mapped.</summary>
      <returns>A string value with a target XML element or attribute.</returns>
    </member>
    <member name="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetSyndicationItem">
      <summary>Gets a property on the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> object.</returns>
    </member>
    <member name="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind">
      <summary>Gets the type of content of the property mapped by <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />.</summary>
      <returns>A string that identifies the type of content in the feed element.</returns>
    </member>
    <member name="T:System.Data.Services.Common.EntitySetAttribute">
      <summary>Indicates the entity set to which a client data service class belongs.</summary>
    </member>
    <member name="M:System.Data.Services.Common.EntitySetAttribute.#ctor(System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Common.EntitySetAttribute" />.</summary>
      <param name="entitySet">The entity set to which the class belongs.</param>
    </member>
    <member name="P:System.Data.Services.Common.EntitySetAttribute.EntitySet">
      <summary>Gets the entity set to which the class belongs.</summary>
      <returns>The entity set as string value.</returns>
    </member>
    <member name="T:System.Data.Services.Common.HasStreamAttribute">
      <summary>Indicates that a class that is an entity type has a default binary property to stream.</summary>
    </member>
    <member name="M:System.Data.Services.Common.HasStreamAttribute.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Common.HasStreamAttribute" /> class.</summary>
    </member>
    <member name="T:System.Data.Services.Common.SyndicationItemProperty">
      <summary>Enumeration type used to identify the syndication item element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.CustomProperty">
      <summary>Custom property element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.AuthorEmail">
      <summary>Author email element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.AuthorName">
      <summary>Author name element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.AuthorUri">
      <summary>Author URI element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.ContributorEmail">
      <summary>Contributor email element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.ContributorName">
      <summary>Contributor name element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.ContributorUri">
      <summary>Contributor URI element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.Updated">
      <summary>Updated element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.Published">
      <summary>Published resource element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.Rights">
      <summary>Rights protected resource element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.Summary">
      <summary>Summary element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.Title">
      <summary>Title element.</summary>
    </member>
    <member name="T:System.Data.Services.Common.SyndicationTextContentKind">
      <summary>Enumeration used to identify text content of syndication item.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationTextContentKind.Plaintext">
      <summary>Plain text content.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationTextContentKind.Html">
      <summary>HTML content.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationTextContentKind.Xhtml">
      <summary>XHTML content.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.ServiceModel.NetTcp.extmap.xml ===
<?xml version="1.0"?>
<manifest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
          xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <assembly>
    <name>System.ServiceModel.NetTcp</name>
    <version>2.0.5.0</version>
    <publickeytoken>31bf3856ad364e35</publickeytoken>
    <relpath>System.ServiceModel.NetTcp.dll</relpath>
    <extension downloadUri="System.ServiceModel.NetTcp.zip" />
  </assembly>


</manifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Windows.Controls.Data.extmap.xml ===
<?xml version="1.0"?>
<manifest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <assembly>
    <name>System.Windows.Controls.Data</name>
    <version>2.0.5.0</version>
    <publickeytoken>31bf3856ad364e35</publickeytoken>
    <relpath>System.Windows.Controls.Data.dll</relpath>
    <extension downloadUri="System.Windows.Controls.Data.zip" />
  </assembly>

</manifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.ServiceModel.Extensions.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.CallbackBehaviorAttribute">
      <summary>Configures a callback service implementation in a Silverlight client application.</summary>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CallbackBehaviorAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown">
      <summary>Specifies whether to automatically close a session when a service closes a duplex session.</summary>
      <returns>true if duplex callback objects automatically close a session when the service closes a duplex session; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Configures the binding elements to support the callback behavior.</summary>
      <param name="serviceEndpoint">The endpoint for the callback object.</param>
      <param name="parameters">The collection of binding parameters that are configured.</param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Configures the client runtime to support the callback object.</summary>
      <param name="serviceEndpoint">The endpoint configured by the attribute.</param>
      <param name="clientRuntime">The client run-time object that the attribute configures.</param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implementation of the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /> method. This implementation has no effect.</summary>
      <param name="serviceEndpoint">The endpoint to be modified.   </param>
      <param name="endpointDispatcher">The endpoint dispatcher that the method modifies.   </param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Validates the endpoint description prior to building the runtime.</summary>
      <param name="serviceEndpoint">The endpoint to be validated.</param>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext">
      <summary>Gets or sets a value that specifies whether to use the current synchronization context to choose the thread of execution.</summary>
      <returns>true if all calls to the service must run on the thread specified by the <see cref="T:System.Threading.SynchronizationContext" />; otherwise, false. The default value is true.</returns>
    </member>
    <member name="T:System.ServiceModel.DuplexChannelFactory`1">
      <summary>Provides the means to create and manage duplex channels of different types that are used by clients to send and receive messages to and from service endpoints.</summary>
      <typeparam name="TChannel">The type of channel produced by the channel factory.</typeparam>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with a context that implements the callback contract and a specified binding.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="binding" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified binding and endpoint address.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" />, <paramref name="binding" />, or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with the specified instance context, binding, and remote address.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The remote address that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" />, <paramref name="binding" />, or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified configuration.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="endpointConfigurationName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified configuration and endpoint address.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="endpointConfigurationName" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A duplex channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A duplex channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" /> UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A duplex channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateDescription">
      <summary>Creates a description of the service endpoint associated with this duplex channel factory.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> of the service.</returns>
      <exception cref="T:System.InvalidOperationException">The callback contract is null but the service endpoint requires one that is non-null.</exception>
    </member>
    <member name="T:System.ServiceModel.DuplexClientBase`1">
      <summary>Provides the base implementation from which Silverlight versionÂ 4 Release Candidate client objects can call duplex services.</summary>
      <typeparam name="TChannel">The type of the channel to be created.</typeparam>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object.</summary>
      <param name="callbackInstance">An <see cref="T:System.ServiceModel.InstanceContext" /> object that associates the callback object with the channel to the service.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, binding, and service endpoint address.</summary>
      <param name="callbackInstance">An <see cref="T:System.ServiceModel.InstanceContext" /> object that associates the callback object with the channel to the service.</param>
      <param name="binding">The binding with which to call the service.</param>
      <param name="remoteAddress">The service endpoint address to use.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The binding is null.</exception>
      <exception cref="T:System.ArgumentNullException">The address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object and configuration name.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, configuration name, and service endpoint address.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <param name="remoteAddress">The address of the service endpoint to use.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
      <exception cref="T:System.ArgumentNullException">The address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, configuration name, and service endpoint address.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <param name="remoteAddress">The address of the service endpoint to use.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
      <exception cref="T:System.ArgumentNullException">The address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.CreateChannel">
      <summary>Returns a channel to the service associated with the callback object passed to the constructor.</summary>
      <returns>A channel to the service of the type of the service contract interface.</returns>
    </member>
    <member name="T:System.ServiceModel.InstanceContext">
      <summary>Represents the context information for a service instance.</summary>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InstanceContext" /> class for a specified object that implements the service instance.</summary>
      <param name="implementation">The object that implements the serviceinstance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementation" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.GetServiceInstance(System.ServiceModel.Channels.Message)">
      <summary>Returns the instance of the service for the instance context in response to an incoming message.</summary>
      <returns>The object that represents the service instance.</returns>
      <param name="message">The incoming message that triggered the creation of a service object.</param>
      <exception cref="T:System.InvalidOperationException">The service instance is in a created or opening state or is not initialized.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">The service instance is aborted.</exception>
      <exception cref="T:System.ObjectDisposedException">The service instance has been closed already and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance is faulted and cannot be modified in these states.</exception>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.SynchronizationContext">
      <summary>Gets or sets the context used for thread synchronization with the current instance context.</summary>
      <returns>The <see cref="T:System.Threading.SynchronizationContext" /> used for thread synchronization with the current instance context.</returns>
      <exception cref="T:System.InvalidOperationException">The communication object is opened or closing and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">The communication object has been aborted and cannot be modified in these states.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object has been closed already and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is faulted and cannot be modified in these states.</exception>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Windows.Controls.Data.Input.extmap.xml ===
<?xml version="1.0"?>
<manifest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <assembly>
    <name>System.Windows.Controls.Data.Input</name>
    <version>2.0.5.0</version>
    <publickeytoken>31bf3856ad364e35</publickeytoken>
    <relpath>System.Windows.Controls.Data.Input.dll</relpath>
    <extension downloadUri="System.Windows.Controls.Data.Input.zip" />
  </assembly>

</manifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Runtime.Serialization.Json.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization.Json</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory">
      <summary>Produces instances of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset, and produces instances of <see cref="T:System.Xml.XmlDictionaryWriter" /> that can map an XML Infoset to JSON and write JSON-encoded data to a stream. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map a buffer encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JSON.</returns>
      <param name="buffer">The input <see cref="T:System.Byte" /> buffer array from which to read.</param>
      <param name="offset">Starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">Number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> must be set to <see cref="P:System.Xml.XmlDictionaryReaderQuotas.Max" /> in Silverlight versionÂ 4 Release Candidate applications.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is negative or exceeds the <paramref name="buffer" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is negative or exceeds the <paramref name="buffer" /> length minus the <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map a specified buffer encoded with JavaScript Object Notation (JSON) to an XML Infoset.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryReader" /> that can process JavaScript Object Notation (JSON) data from the buffer specified.</returns>
      <param name="buffer">The input <see cref="T:System.Byte" /> buffer array from which to read.</param>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> must be set to <see cref="P:System.Xml.XmlDictionaryReaderQuotas.Max" /> in Silverlight versionÂ 4 Release Candidate applications used to prevent Denial of Service (DoS) attacks when reading untrusted data. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map a specified stream encoded with JavaScript Object Notation (JSON) to an XML Infoset.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JSON.</returns>
      <param name="stream">The input <see cref="T:System.IO.Stream" /> from which to read.</param>
      <param name="quotas">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> must be set to <see cref="P:System.Xml.XmlDictionaryReaderQuotas.Max" /> in Silverlight versionÂ 4 Release Candidate applications. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is null.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)">
      <summary>Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream using a UTF-8 character encoding.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream from an XML Infoset.</returns>
      <param name="stream">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is null.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)">
      <summary>Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream from an XML Infoset.</returns>
      <param name="stream">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</param>
      <param name="encoding">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer. The default encoding is UTF-8.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> or <paramref name="encoding" /> is null.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding and that specifies whether the output stream is closed by the writer when it is done.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream from an XML Infoset.</returns>
      <param name="stream">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</param>
      <param name="encoding">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer. The default encoding is UTF-8.</param>
      <param name="ownsStream">If true, the output stream is closed by the writer when done; otherwise, false. The default value is true.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> or <paramref name="encoding" /> is null.</exception>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Windows.Controls.extmap.xml ===
<?xml version="1.0"?>
<manifest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
          xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <assembly>
    <name>System.Windows.Controls</name>
    <version>2.0.5.0</version>
    <publickeytoken>31bf3856ad364e35</publickeytoken>
    <relpath>System.Windows.Controls.dll</relpath>
    <extension downloadUri="System.Windows.Controls.zip" />
  </assembly>

</manifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Windows.Controls.Input.extmap.xml ===
<?xml version="1.0"?>
<manifest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
          xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <assembly>
    <name>System.Windows.Controls.Input</name>
    <version>2.0.5.0</version>
    <publickeytoken>31bf3856ad364e35</publickeytoken>
    <relpath>System.Windows.Controls.Input.dll</relpath>
    <extension downloadUri="System.Windows.Controls.Input.zip" />
  </assembly>

</manifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.ServiceModel.PollingDuplex.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.PollingDuplex</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.PollingDuplexHttpBinding">
      <summary>Represents a binding that a Silverlight versionÂ 4 Release Candidate client can use to configure endpoints that can communicate with Windows Communication Foundation (WCF) services that are similarly configured for duplex communication with a polling client.</summary>
    </member>
    <member name="M:System.ServiceModel.PollingDuplexHttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PollingDuplexHttpBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.PollingDuplexHttpBinding.#ctor(System.ServiceModel.Channels.PollingDuplexMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PollingDuplexHttpBinding" /> class with a specified mode of behavior on the server in response to client polling.</summary>
      <param name="duplexMode">The mode of behavior exhibited on a server in response to client polling when the communication between them is configured for duplex polling.</param>
    </member>
    <member name="M:System.ServiceModel.PollingDuplexHttpBinding.#ctor(System.ServiceModel.PollingDuplexHttpSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PollingDuplexHttpBinding" /> class with a specified type of security used by the binding.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.PollingDuplexHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
    </member>
    <member name="M:System.ServiceModel.PollingDuplexHttpBinding.#ctor(System.ServiceModel.PollingDuplexHttpSecurityMode,System.ServiceModel.Channels.PollingDuplexMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PollingDuplexHttpBinding" /> class with a specified type of security and a specified mode of behavior on the server in the way it responses to client polling.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.PollingDuplexHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
      <param name="duplexMode">The mode of behavior exhibited on a server in response to client polling when the communication between them is configured for duplex polling.</param>
    </member>
    <member name="M:System.ServiceModel.PollingDuplexHttpBinding.CreateBindingElements">
      <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the ordered stack of binding elements described by the <see cref="T:System.PollingDuplexHttpBinding.BasicHttpBinding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.PollingDuplexHttpBinding.DuplexMode">
      <summary>Gets or sets a value that specifies how the server behaves in response to client polling when the communication is configured for duplex polling.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.PollingDuplexMode" /> object whose value indicates how the server behaves in response to client polling when the communication is configured for duplex. The default value is <see cref="F:System.ServiceModel.Channels.PollingDuplexMode.SingleMessagesPerPoll" />.</returns>
    </member>
    <member name="P:System.ServiceModel.PollingDuplexHttpBinding.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages that are processed by this binding.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding. The value is always SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.PollingDuplexHttpBinding.InactivityTimeout">
      <summary>Gets or sets the maximum interval of time that can pass without activity on a channel before the client or server channel enters a faulted state. The default value is 10 minutes.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> value that specifies the maximum interval of time that can pass without activity on a channel before the channel enters a faulted state.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero, or it is larger than the maximum time allowed.</exception>
    </member>
    <member name="P:System.ServiceModel.PollingDuplexHttpBinding.MaxBufferSize">
      <summary>Gets or sets the maximum size for a buffer that receives messages from the channel.</summary>
      <returns>The maximum size, in bytes, of a buffer that stores messages while they are processed for an endpoint configured with this binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.PollingDuplexHttpBinding.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a message that can be received on a channel configured with this binding.</summary>
      <returns>The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="P:System.ServiceModel.PollingDuplexHttpBinding.Scheme">
      <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding.</summary>
      <returns>"https" if the security mode in the transport binding element is set to <see cref="F:System.ServiceModel.BasicHttpSecurityMode.Transport" /> or <see cref="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredentials" />; otherwise, "http".</returns>
    </member>
    <member name="P:System.ServiceModel.PollingDuplexHttpBinding.Security">
      <summary>Gets the type of security used with this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.PollingDuplexHttpSecurity" /> that is used with this binding. The default value is <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />. </returns>
    </member>
    <member name="P:System.ServiceModel.PollingDuplexHttpBinding.TextEncoding">
      <summary>Gets or sets the character encoding that is used for the message text.</summary>
      <returns>The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used. The default is <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.PollingDuplexHttpBinding.UseTextEncoding">
      <summary>Gets or sets a value that indicates whether text or binary encoding is used for the message.</summary>
      <returns>true if text encoding is used; false if binary encoding is used.</returns>
    </member>
    <member name="T:System.ServiceModel.PollingDuplexHttpSecurity">
      <summary>Specifies the security used for a Silverlight client configured with a <see cref="T:System.ServiceModel.PollingDuplexHttpBinding" />.</summary>
    </member>
    <member name="P:System.ServiceModel.PollingDuplexHttpSecurity.Mode">
      <summary>Gets or sets the mode of security for a client configured with a <see cref="T:System.ServiceModel.PollingDuplexHttpBinding" />.</summary>
      <returns>A value in the <see cref="T:System.ServiceModel.PollingDuplexHttpSecurityMode" /> enumeration. The default value for this property is <see cref="F:System.ServiceModel.PollingDuplexHttpSecurityMode.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a legal value for <see cref="T:System.ServiceModel.PollingDuplexHttpSecurityMode" />.</exception>
    </member>
    <member name="T:System.ServiceModel.PollingDuplexHttpSecurityMode">
      <summary>Specifies the types of security that can be used with the system-provided <see cref="T:System.ServiceModel.PollingDuplexHttpBinding" />.</summary>
    </member>
    <member name="F:System.ServiceModel.PollingDuplexHttpSecurityMode.None">
      <summary>The SOAP message is not secured during transfer. This is the default behavior.</summary>
    </member>
    <member name="F:System.ServiceModel.PollingDuplexHttpSecurityMode.Transport">
      <summary>Security is provided using HTTPS. The service must be configured with SSL certificates. The SOAP message is protected as a whole using HTTPS. The service is authenticated by the client using the serviceâs SSL certificate.</summary>
    </member>
    <member name="F:System.ServiceModel.PollingDuplexHttpSecurityMode.TransportWithMessageCredential">
      <summary>This mode provides integrity, confidentiality, and server authentication using HTTPS. The service must be configured with a certificate. Client authentication is provided by SOAP message security.This mode is applicable when the user is authenticating with a UserName or Certificate credential and there is an existing HTTPS deployment for securing message transfer.</summary>
    </member>
    <member name="F:System.ServiceModel.PollingDuplexHttpSecurityMode.TransportCredentialOnly">
      <summary>This mode provides only HTTP-based client authentication. It does not provide message integrity or confidentiality.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.PollingDuplexBindingElement">
      <summary>Represents the binding element that enables duplex communication between a Silverlight versionÂ 4 Release Candidate client and a service.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PollingDuplexBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.PollingDuplexBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PollingDuplexBindingElement.#ctor(System.ServiceModel.Channels.PollingDuplexBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.PollingDuplexBindingElement" /> class from an existing one.</summary>
      <param name="elementToBeCloned"> The instance of the <see cref="T:System.ServiceModel.Channels.PollingDuplexBindingElement" /> class to be cloned.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.PollingDuplexBindingElement.#ctor(System.ServiceModel.Channels.PollingDuplexMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.PollingDuplexBindingElement" /> class with a specified polling duplex mode.</summary>
      <param name="duplexMode">A <see cref="T:System.ServiceModel.Channels.PollingDuplexMode" /> object that specifies how the server behaves in response to client polling when the communication is configured for duplex polling.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.PollingDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory that can be used to create a channel.</summary>
      <returns>A channel factory of the specified type.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts and other information required to create the channel factory.</param>
      <typeparam name="TChannel">Type of channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> cannot be null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.PollingDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel factory of the specified type can be built.</summary>
      <returns>true if a channel factory can be built; otherwise, false.</returns>
      <param name="context"> The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel to be built.</param>
      <typeparam name="TChannel">The type of channel to check.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.PollingDuplexBindingElement.ClientPollTimeout">
      <summary>The interval of time that a client polling request has to complete before timing out.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long a request has to complete before timing out.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.PollingDuplexBindingElement.Clone">
      <summary>Creates a copy of the current binding element.</summary>
      <returns>A copy of the current binding element.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.PollingDuplexBindingElement.DuplexMode">
      <summary>Gets or sets a value that specifies how the server behaves in response to client polling when the communication is configured for duplex polling.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.PollingDuplexMode" /> object whose value indicates how the server behaves in response to client polling when the communication is configured for duplex. The default value is <see cref="F:System.ServiceModel.Channels.PollingDuplexMode.SingleMessagesPerPoll" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.PollingDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>The property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</returns>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The property to get.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.PollingDuplexBindingElement.InactivityTimeout">
      <summary>Gets or sets the maximum interval of time that can pass without activity on a channel before the client channel enters a faulted state.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> object that specifies the maximum interval of time that can pass without activity on a channel before the client channel enters a faulted state.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.PollingDuplexBindingElement.MaxPendingMessagesPerSession"></member>
    <member name="T:System.ServiceModel.Channels.PollingDuplexMode">
      <summary>Specifies the format of server responses to client polling when the communication is configured for duplex polling.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.PollingDuplexMode.SingleMessagePerPoll">
      <summary>Specifies the server will return one message every time the client polls for a message and then close the polling connection. This is the default value.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.PollingDuplexMode.MultipleMessagesPerPoll">
      <summary>Specifies the server keeps the connection open for as long there are messages ready to be sent back to the client and sends as many messages back to the client as it can over a chunked HTTP response.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.ServiceModel.Web.Extensions.extmap.xml ===
<?xml version="1.0"?>
<manifest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
          xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <assembly>
    <name>System.ServiceModel.Web.Extensions</name>
    <version>2.0.5.0</version>
    <publickeytoken>31bf3856ad364e35</publickeytoken>
    <relpath>System.ServiceModel.Web.Extensions.dll</relpath>
    <extension downloadUri="System.ServiceModel.Web.Extensions.zip" />
  </assembly>


</manifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Windows.Controls.Navigation.extmap.xml ===
<?xml version="1.0"?>
<manifest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <assembly>
    <name>System.Windows.Controls.Navigation</name>
    <version>2.0.5.0</version>
    <publickeytoken>31bf3856ad364e35</publickeytoken>
    <relpath>System.Windows.Controls.Navigation.dll</relpath>
    <extension downloadUri="System.Windows.Controls.Navigation.zip" />
  </assembly>

</manifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.ServiceModel.NetTcp.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.NetTcp</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement">
      <summary>An abstract class that supplements the base <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> class with additional properties that are common to connection-oriented transports, such as TCP.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel factory of the specified type can be built.</summary>
      <returns>true if a channel factory can be built; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</param>
      <typeparam name="TChannel">The type of channel to check.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize">
      <summary>Gets or sets the size of the buffer used to transmit a chunk of the serialized message on the wire from the client or service.</summary>
      <returns>The size of the connection buffer. The default value is 8192 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> set is less than zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize">
      <summary>Gets or sets the maximum size of the buffer to use. </summary>
      <returns>The maximum number of bytes that is used to buffer incoming messages in memory. The default value is 65,536 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> set is less or equal to than zero.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TcpConnectionPoolSettings">
      <summary>Represents properties that control the behavior of the TCP connection pool.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpConnectionPoolSettings.GroupName">
      <summary>Gets or sets the group name of the connection pool group on the client.</summary>
      <returns>The group name of the connection pool group on the client. The default name is "default".</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpConnectionPoolSettings.IdleTimeout">
      <summary>Gets or sets the maximum time that the connection can be idle in the connection pool before being disconnected.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> structure that indicates the maximum time that the connection can be idle in the connection pool before being disconnected.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="value" /> is less than zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpConnectionPoolSettings.LeaseTimeout">
      <summary>Gets or sets the time span after which a connection in the connection pool is closed.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> structure that indicates the time span after which a cached TCP connection is purged from the connection pool.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="value" /> is less than zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpConnectionPoolSettings.MaxOutboundConnectionsPerEndpoint">
      <summary>Gets or sets the maximum number of outbound connections for each endpoint that is cached in the connection pool.</summary>
      <returns>The maximum number of allowed outbound connections for each endpoint that is cached in the connection pool. The default value is 10.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="value" /> is less than or equal to zero.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TcpTransportBindingElement">
      <summary>Represents the binding element for the Transmission Control Protocol (TCP) transport.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.#ctor(System.ServiceModel.Channels.TcpTransportBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class from an existing instance.</summary>
      <param name="elementToBeCloned">The instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class to be cloned.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory that can be used to create a channel.</summary>
      <returns>Returns an <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that describes the bindings, behaviors, contracts, and other information required to create the channel factory.</param>
      <typeparam name="TChannel">The type of channel factory.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.Clone">
      <summary>Creates a copy of the current binding element.</summary>
      <returns>A copy of the current <see cref="T:System.ServiceModel.Channels.BindingElement" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpTransportBindingElement.ConnectionPoolSettings">
      <summary>Gets a collection of connection pool settings.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.TcpConnectionPoolSettings" /> object that contains various properties related to connection pooling.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpTransportBindingElement.Scheme">
      <summary>Returns the URI scheme for the transport.</summary>
      <returns>Returns the URI scheme for the TCP transport: "net.tcp".</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Windows.Data.extmap.xml ===
<?xml version="1.0"?>
<manifest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <assembly>
    <name>System.Windows.Data</name>
    <version>2.0.5.0</version>
    <publickeytoken>31bf3856ad364e35</publickeytoken>
    <relpath>System.Windows.Data.dll</relpath>
    <extension downloadUri="System.Windows.Data.zip" />
  </assembly>

</manifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.ServiceModel.Web.Extensions.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Web.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.UriTemplate">
      <summary>A class that represents a Uniform Resource Identifier (URI) template.</summary>
    </member>
    <member name="M:System.UriTemplate.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplate" /> class with the specified template string.</summary>
      <param name="template">The template.</param>
    </member>
    <member name="M:System.UriTemplate.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</summary>
      <param name="template">The template string.</param>
      <param name="ignoreTrailingSlash">A value that specifies whether trailing slash â/â characters should be ignored.</param>
    </member>
    <member name="M:System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</summary>
      <param name="template">The template string.</param>
      <param name="ignoreTrailingSlash">true if the trailing slash â/â characters are ignored; otherwise false.</param>
      <param name="additionalDefaults">A dictionary that contains a list of default values for the template parameters.</param>
    </member>
    <member name="M:System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</summary>
      <param name="template">The template string.</param>
      <param name="additionalDefaults">A dictionary that contains a list of default values for the template parameters.</param>
    </member>
    <member name="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Creates a new URI from the template and the collection of parameters.</summary>
      <returns>A URI.</returns>
      <param name="baseAddress">The base address.</param>
      <param name="parameters">A dictionary that contains a collection of parameter name/value pairs.</param>
    </member>
    <member name="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
      <summary>Creates a new URI from the template and the collection of parameters.</summary>
      <returns>A URI.</returns>
      <param name="baseAddress">A URI that contains the base address.</param>
      <param name="parameters">A dictionary that contains a collection of parameter name/value pairs.</param>
      <param name="omitDefaults">true is the default values are ignored; otherwise false.</param>
    </member>
    <member name="P:System.UriTemplate.IgnoreTrailingSlash">
      <summary>Specifies whether trailing slashes â/â in the template should be ignored when binding parameters to create a URI.</summary>
      <returns>true if trailing slashes â/â should be ignored, otherwise false.</returns>
    </member>
    <member name="P:System.UriTemplate.PathSegmentVariableNames">
      <summary>Gets a collection of variable names used within path segments in the template.</summary>
      <returns>A collection of variable names that appear within the template's path segment.</returns>
    </member>
    <member name="P:System.UriTemplate.QueryValueVariableNames">
      <summary>Gets a collection of variable names used within the query string in the template.</summary>
      <returns>A collection of template variable names that appear in the query portion of the template string.</returns>
    </member>
    <member name="M:System.UriTemplate.ToString">
      <summary>Returns a string representation of the <see cref="T:System.UriTemplate" /> instance.</summary>
      <returns>The representation of the <see cref="T:System.UriTemplate" /> instance.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.WebBodyFormatMessageProperty">
      <summary>Stores and retrieves the message encoding format of incoming and outgoing messages for the composite Web message encoder.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WebBodyFormatMessageProperty.#ctor(System.ServiceModel.Channels.WebContentFormat)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.WebBodyFormatMessageProperty" /> class with a specified format.</summary>
      <param name="format">The <see cref="T:System.ServiceModel.Channels.WebContentFormat" /> that specifies the content type to which an incoming message body is mapped.</param>
      <exception cref="T:System.ArgumentException">The format cannot be set to the <see cref="F:System.ServiceModel.Channels.WebContentFormat.Default" /> value in the constructor.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WebBodyFormatMessageProperty.CreateCopy">
      <summary>Returns the current instance of the current property.</summary>
      <returns>An instance of the <see cref="T:System.ServiceModel.Channels.IMessageProperty" /> interface that is a copy of the current <see cref="T:System.ServiceModel.Channels.WebBodyFormatMessageProperty" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.WebBodyFormatMessageProperty.Format">
      <summary>Gets the format used for the message body.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.WebContentFormat" /> that specifies the format used for the message body.</returns>
    </member>
    <member name="F:System.ServiceModel.Channels.WebBodyFormatMessageProperty.Name">
      <summary>Returns the name "WebBodyFormatMessageProperty".</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.WebContentFormat">
      <summary>Specifies the message formats to which content types of incoming messages can be mapped.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebContentFormat.Default">
      <summary>The format to map to cannot be determined.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebContentFormat.Xml">
      <summary>Map to the XML format.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebContentFormat.Json">
      <summary>Map to the JSON format.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebContentFormat.Raw">
      <summary>Map to the "Raw" binary format.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.WebHttpBehavior">
      <summary>Enables the Web programming model for a Silverlight client. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.WebHttpBehavior" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>This method is not used in Silverlight versionÂ 4 Release Candidate.</summary>
      <param name="endpoint">The service endpoint to be accessed.</param>
      <param name="bindingParameters">The binding parameters that support modifying the bindings.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.AddClientErrorInspector(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Adds a client error inspector to the specified client runtime.</summary>
      <param name="endpoint">A service endpoint.</param>
      <param name="clientRuntime">The client runtime.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> method to support modification or extension of the client across an endpoint.</summary>
      <param name="endpoint">The endpoint that exposes the contract the client is to access.</param>
      <param name="clientRuntime">The client to which the custom behavior is applied.</param>
      <exception cref="T:System.ArgumentNullException">Either the <paramref name="endpoint" /> of the <paramref name="clientRuntime" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>This method is not used in Silverlight versionÂ 4 Release Candidate.</summary>
      <param name="endpoint">The endpoint that exposes the contract.</param>
      <param name="endpointDispatcher">The endpoint dispatcher to which the behavior is applied.</param>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.DefaultBodyStyle">
      <summary>Gets and sets the default message body style.</summary>
      <returns>One of the values defined in the <see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" /> enumeration.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingRequestFormat">
      <summary>Gets and sets the default outgoing request format.</summary>
      <returns>One of the values defined in the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingResponseFormat">
      <summary>Gets and sets the default outgoing response format.</summary>
      <returns>One of the values defined in the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WebHttpBehavior.FaultExceptionEnabled">
      <summary>Gets or sets the flag that specifies whether a FaultException is generated when an internal server error (HTTP status code: 500) occurs.</summary>
      <returns>Returns true if the flag is enabled; otherwise returns false.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.GetQueryStringConverter(System.ServiceModel.Description.OperationDescription)">
      <summary>Gets the query string converter.</summary>
      <returns>A <see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" /> instance.</returns>
      <param name="operationDescription">A contract that characterizes an operation in terms of the messages it exchanges.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.GetReplyClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Gets the reply formatter on the client for the specified endpoint and service operation.</summary>
      <returns>An <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /> reference to the reply formatter on the client for the specified operation and endpoint.</returns>
      <param name="operationDescription">A contract that characterizes an operation in terms of the messages it exchanges.</param>
      <param name="endpoint">The service endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Gets the request formatter on the client for the specified service operation and endpoint.</summary>
      <returns>An <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /> reference to the request formatter on the client for the specified operation and endpoint.</returns>
      <param name="operationDescription">A contract that characterizes an operation in terms of the messages it exchanges.</param>
      <param name="endpoint">The service endpoint to be accessed by the client.</param>
      <exception cref="T:System.NotSupportedException">The JSON format is not currently supported in Silverlight.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Confirms that the endpoint meets the requirements for the Web programming model.</summary>
      <param name="endpoint">The service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Endpoint" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">Message headers are included or the a scheme other than HTTP(S) is used or manual addressing is configured incorrectly.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WebHttpBehavior.ValidateBinding(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Ensures the binding is valid for use with the Silverlight Web Programming Model.</summary>
      <param name="endpoint">The service endpoint.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.QueryStringConverter">
      <summary>This class converts a parameter from an object to its query string representation. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.QueryStringConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)">
      <summary>Determines whether the specified type can be converted to and from a string representation.</summary>
      <returns>A value that specifies whether the type can be converted.</returns>
      <param name="type">The <see cref="T:System.Type" /> to convert.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)">
      <summary>Converts a parameter to a query string representation.</summary>
      <returns>The parameter name and value.</returns>
      <param name="parameter">The parameter to convert.</param>
      <param name="parameterType">The <see cref="T:System.Type" /> of the parameter to convert.</param>
    </member>
    <member name="T:System.ServiceModel.Web.IncomingWebResponseContext">
      <summary>Provides programmatic access to the context of the incoming Web response.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.Headers">
      <summary>Gets the headers from the incoming Web response.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> instance that contains the headers from the incoming Web response.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.StatusCode">
      <summary>Gets the status code of the incoming Web response.</summary>
      <returns>A <see cref="T:System.Net.HttpStatusCode" /> instance that contains the status code of the incoming Web response.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.IncomingWebResponseContext.StatusDescription">
      <summary>Gets the status description of the incoming Web response.</summary>
      <returns>The status description of the incoming Web response.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.OutgoingWebRequestContext">
      <summary>Provides programmatic access to the context of the outgoing Web request.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.Accept">
      <summary>Gets and sets the Accept header value from the outgoing Web request.</summary>
      <returns>The Accept header from the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.ContentLength">
      <summary>Gets and sets the content length header value of the outgoing Web request.</summary>
      <returns>The content length header of the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.ContentType">
      <summary>Gets and sets the content type header value from the outgoing Web request.</summary>
      <returns>The content type header from the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.Headers">
      <summary>Gets the headers for the outgoing Web request.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> instance that contains the headers of the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.IfMatch">
      <summary>Gets and sets the IfMatch header value from the outgoing Web request.</summary>
      <returns>The IfMatch header from the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.IfNoneMatch">
      <summary>Gets and sets the IfNoneMatch header value from the outgoing Web request.</summary>
      <returns>The IfNoneMatch header from the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.IfUnmodifiedSince">
      <summary>Gets and sets the IfUnmodifiedSince header value from the outgoing Web request.</summary>
      <returns>The IfUnmodifiedSince header from the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.Method">
      <summary>Gets the HTTP method of the outgoing Web request.</summary>
      <returns>The HTTP method of the outgoing Web request.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.OutgoingWebRequestContext.SuppressEntityBody">
      <summary>Gets a value that indicates whether Windows Communication Foundation (WCF) omits data that is normally written to the entity body of the response and forces an empty response to be returned.</summary>
      <returns>If true, WCF omits any data that is normally written to the entity body of the response and forces an empty response to be returned.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.WebGetAttribute">
      <summary>Indicates that an operation is logically a retrieval operation and that it can be called by the Web HTTP programming model.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebGetAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.BodyStyle">
      <summary>Gets and sets the body style of the messages that are sent to and from an operation.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" /> enumeration values.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.IsBodyStyleSetExplicitly">
      <summary>Gets the <see cref="P:System.ServiceModel.Web.WebGetAttribute.IsBodyStyleSetExplicitly" /> property.</summary>
      <returns>A value that specifies whether the <see cref="P:System.ServiceModel.Web.WebGetAttribute.BodyStyle" /> property is set.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.IsRequestFormatSetExplicitly">
      <summary>Gets the <see cref="P:System.ServiceModel.Web.WebGetAttribute.IsRequestFormatSetExplicitly" /> property.</summary>
      <returns>A value that specifies whether the <see cref="P:System.ServiceModel.Web.WebGetAttribute.RequestFormat" /> property was set.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.IsResponseFormatSetExplicitly">
      <summary>Gets the <see cref="P:System.ServiceModel.Web.WebGetAttribute.IsResponseFormatSetExplicitly" /> property.</summary>
      <returns>A value that specifies whether the <see cref="P:System.ServiceModel.Web.WebGetAttribute.ResponseFormat" /> property was set.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.RequestFormat">
      <summary>Gets and sets the <see cref="P:System.ServiceModel.Web.WebGetAttribute.RequestFormat" /> property.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration values.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.ResponseFormat">
      <summary>Gets and sets the <see cref="P:System.ServiceModel.Web.WebGetAttribute.ResponseFormat" /> property.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration values.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="bindingParameters">A collection of binding parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="clientOperation">The client operation.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="dispatchOperation">The operation to dispatch to.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebGetAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
    </member>
    <member name="P:System.ServiceModel.Web.WebGetAttribute.UriTemplate">
      <summary>Gets and sets the Uniform Resource Identifier (URI) template for the operation.</summary>
      <returns>The URI template for an operation.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.WebInvokeAttribute">
      <summary>Indicates an operation is logically an invoke operation and that it can be called by the Web HTTP programming.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebGetAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.BodyStyle">
      <summary>Gets and sets the body style of the messages that are sent to and from an operation.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" /> enumeration values.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.IsBodyStyleSetExplicitly">
      <summary>Gets the <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.IsBodyStyleSetExplicitly" /> property.</summary>
      <returns>A value that specifies whether the <see cref="P:System.ServiceModel.Web.WebGetAttribute.BodyStyle" /> property was set explicitly.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.IsRequestFormatSetExplicitly">
      <summary>Gets the <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.IsRequestFormatSetExplicitly" /> property.</summary>
      <returns>A value that specifies whether the <see cref="P:System.ServiceModel.Web.WebGetAttribute.RequestFormat" /> property was set.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.IsResponseFormatSetExplicitly">
      <summary>Gets the <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.IsResponseFormatSetExplicitly" /> property.</summary>
      <returns>A value that specifies whether the <see cref="P:System.ServiceModel.Web.WebGetAttribute.ResponseFormat" /> property was set.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.Method">
      <summary>Gets and sets the protocol (for example HTTP) method an operation responds to.</summary>
      <returns>The protocol method associated with the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.RequestFormat">
      <summary>Gets and sets the <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.RequestFormat" /> property.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration values.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.ResponseFormat">
      <summary>Gets and sets the <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.ResponseFormat" /> property.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> enumeration values.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="bindingParameters">A collection of binding parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="clientOperation">The client operation.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="dispatchOperation">The operation to dispatch to.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
    </member>
    <member name="P:System.ServiceModel.Web.WebInvokeAttribute.UriTemplate">
      <summary>The Uniform Resource Identifier (URI) template for an operation.</summary>
      <returns>The URI template for t operation.</returns>
    </member>
    <member name="T:System.ServiceModel.Web.WebMessageBodyStyle">
      <summary>An enumeration that specifies whether to wrap parameter and return values within XML elements.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageBodyStyle.Bare">
      <summary>Both requests and responses are not wrapped.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageBodyStyle.Wrapped">
      <summary>Both requests and responses are wrapped.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageBodyStyle.WrappedRequest">
      <summary>Requests are wrapped, responses are not wrapped.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageBodyStyle.WrappedResponse">
      <summary>Responses are wrapped, requests are not wrapped.</summary>
    </member>
    <member name="T:System.ServiceModel.Web.WebMessageFormat">
      <summary>An enumeration that specifies the format of Web messages.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageFormat.Xml">
      <summary>The XML format.</summary>
    </member>
    <member name="F:System.ServiceModel.Web.WebMessageFormat.Json">
      <summary>The JavaScript Object Notation (JSON) format.</summary>
    </member>
    <member name="T:System.ServiceModel.Web.WebOperationContext">
      <summary>A helper class that provides easy access to contextual properties of Web requests and responses.</summary>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.#ctor(System.ServiceModel.OperationContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebOperationContext" /> class with the specified <see cref="T:System.ServiceModel.OperationContext" /> instance.</summary>
      <param name="operationContext">The operation context.</param>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.Attach(System.ServiceModel.OperationContext)">
      <summary>Attaches the current <see cref="T:System.ServiceModel.Web.WebOperationContext" /> instance to the specified <see cref="T:System.ServiceModel.OperationContext" /> instance.</summary>
      <param name="owner">The <see cref="T:System.ServiceModel.OperationContext" /> to attach to.</param>
    </member>
    <member name="P:System.ServiceModel.Web.WebOperationContext.Current">
      <summary>Gets the current Web operation context.</summary>
      <returns>A <see cref="T:System.ServiceModel.Web.WebOperationContext" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Web.WebOperationContext.Detach(System.ServiceModel.OperationContext)">
      <summary>Detaches the current <see cref="T:System.ServiceModel.Web.WebOperationContext" /> instance from the specified <see cref="T:System.ServiceModel.OperationContext" /> instance.</summary>
      <param name="owner">The <see cref="T:System.ServiceModel.OperationContext" /> to detach from.</param>
    </member>
    <member name="P:System.ServiceModel.Web.WebOperationContext.IncomingResponse">
      <summary>Gets the Web response context for the request being received.</summary>
      <returns>An <see cref="T:System.ServiceModel.Web.IncomingWebResponseContext" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Web.WebOperationContext.OutgoingRequest">
      <summary>Gets the Web request context for the request being sent.</summary>
      <returns>An <see cref="T:System.ServiceModel.Web.OutgoingWebRequestContext" /> instance.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\system.servicemodel.syndication.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Syndication</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.Syndication.Atom10FeedFormatter">
      <summary>A class that serializes a <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance to and from Atom 1.0 format.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.#ctor(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <param name="feedToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> class.</summary>
      <param name="feedTypeToCreate">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> derived instance to be serialized.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Verifies whether the specified <see cref="T:System.Xml.XmlReader" /> contains a valid Atom 1.0 syndication feed.</summary>
      <returns>A value that specifies whether the <see cref="T:System.Xml.XmlReader" /> contains a valid Atom 1.0 syndication feed.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.CreateFeedInstance">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10FeedFormatter.FeedType">
      <summary>The instance derived from <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> that is associated with the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> instance.</summary>
      <returns>The instance derived from <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> that is associated with the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10FeedFormatter.PreserveAttributeExtensions">
      <summary>Gets and sets a value that specifies whether to preserve attribute extensions during serialization.</summary>
      <returns>A value that specifies whether to preserve attribute extensions during serialization.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10FeedFormatter.PreserveElementExtensions">
      <summary>Gets and sets a value that specifies whether to preserve element extensions during serialization.</summary>
      <returns>A value that specifies whether to preserve element extensions during serialization.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Reads an Atom 1.0 syndication feed from the specified <see cref="T:System.Xml.XmlReader" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItem(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Reads a syndication item from <see cref="T:System.Xml.XmlReader" /> instance using the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> used to create the new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItems(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.Boolean@)">
      <summary>Reads in a collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances from the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance to use to create the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances.</param>
      <param name="areAllItemsRead">A value that specifies whether all of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances have been read from the <see cref="T:System.Xml.XmlReader" /> instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /> method.</summary>
      <returns>Null.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10FeedFormatter.Version">
      <summary>Gets the syndication version used by the formatter.</summary>
      <returns>The syndication version used by the formatter.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteItem(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.Uri)">
      <summary>Writes the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to write.</param>
      <param name="feedBaseUri">The base URI for the feed.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteItems(System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem},System.Uri)">
      <summary>Writes a collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="items">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances to write.</param>
      <param name="feedBaseUri">The base URI for the feed.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> associated with the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.Atom10FeedFormatter`1">
      <summary>A class that serializes <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> derived classes to and from Atom 1.0 format.</summary>
      <typeparam name="TSyndicationFeed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> derived type to serialize.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter`1" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter`1.#ctor(`0)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter`1" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> derived instance.</summary>
      <param name="feedToWrite">The feed to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter`1.CreateFeedInstance">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> derived class.</summary>
      <returns>A new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.Atom10ItemFormatter">
      <summary>A class that serializes a <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to and from Atom 1.0 format.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.#ctor(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <param name="itemToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" /> class.</summary>
      <param name="itemTypeToCreate">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> derived instance to associate with the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Verifies whether the specified <see cref="T:System.Xml.XmlReader" /> contains a valid Atom 1.0 syndication item.</summary>
      <returns>A value that specifies whether the <see cref="T:System.Xml.XmlReader" /> contains a valid Atom 1.0 syndication item.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.CreateItemInstance">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10ItemFormatter.ItemType">
      <summary>Gets the type of the syndication item associated with the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" />.</summary>
      <returns>The type of the syndication item associated with the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10ItemFormatter.PreserveAttributeExtensions">
      <summary>Gets or sets a value that specifies whether to preserve attribute extensions during serialization.</summary>
      <returns>A value that specifies whether to preserve attribute extensions during serialization.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10ItemFormatter.PreserveElementExtensions">
      <summary>Gets or sets a value that specifies whether to preserve element extensions during serialization.</summary>
      <returns>A value that specifies whether to preserve element extensions during serialization.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Reads an Atom 1.0 syndication item from the specified <see cref="T:System.Xml.XmlReader" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /> method.</summary>
      <returns>Null.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10ItemFormatter.Version">
      <summary>Gets the syndication version used by the formatter.</summary>
      <returns>The syndication version used by the formatter.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> associated with the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" /> to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.Atom10ItemFormatter`1">
      <summary>A class that serializes <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />-derived classes to and from Atom 1.0 format.</summary>
      <typeparam name="TSyndicationItem">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />-derived class to serialize.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter`1" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter`1.#ctor(`0)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter`1" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />-derived instance.</summary>
      <param name="itemToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter`1.CreateItemInstance">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />-derived class.</summary>
      <returns>A new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.Rss20FeedFormatter">
      <summary>A class that serializes a <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance to and from RSS 2.0 format.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.#ctor(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <param name="feedToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <param name="feedToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to serialize.</param>
      <param name="serializeExtensionsAsAtom">A value that specifies whether to serialize elements that are defined in the Atom 1.0 specification but not in the RSS 2.0 specification. The default value is true.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> class.</summary>
      <param name="feedTypeToCreate">The instance derived from <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to be serialized.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Verifies whether the specified <see cref="T:System.Xml.XmlReader" /> contains a valid RSS 2.0 syndication feed.</summary>
      <returns>A value that specifies whether the <see cref="T:System.Xml.XmlReader" /> contains a valid RSS 2.0 syndication feed.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.CreateFeedInstance">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20FeedFormatter.FeedType">
      <summary>The instance derived from <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> that is associated with the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</summary>
      <returns>The instance derived from <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> that is associated with the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20FeedFormatter.PreserveAttributeExtensions">
      <summary>Gets and sets a value that specifies whether to preserve attribute extensions during serialization.</summary>
      <returns>A value that specifies whether to preserve attribute extensions during serialization.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20FeedFormatter.PreserveElementExtensions">
      <summary>Gets and sets a value that specifies whether to preserve element extensions during serialization.</summary>
      <returns>A value that specifies whether to preserve element extensions during serialization.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Reads an RSS 2.0 syndication feed from the specified <see cref="T:System.Xml.XmlReader" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.ReadItem(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Reads a syndication item from an <see cref="T:System.Xml.XmlReader" /> instance using the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> used to create the new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.ReadItems(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.Boolean@)">
      <summary>Reads in a collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances from the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance to use to create the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances.</param>
      <param name="areAllItemsRead">A value that specifies whether all of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances have been read from the <see cref="T:System.Xml.XmlReader" /> instance.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20FeedFormatter.SerializeExtensionsAsAtom">
      <summary>Gets and sets a value that specifies whether to serialize extensions within the Atom 1.0 namespace.</summary>
      <returns>A value that specifies whether to serialize extensions within the Atom 1.0 namespace.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.SetFeed(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Sets the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance associated with the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</summary>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to associate with the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /> method.</summary>
      <returns>Null.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20FeedFormatter.Version">
      <summary>Gets the syndication version used by the formatter.</summary>
      <returns>The syndication version used by the formatter.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.WriteItem(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.Uri)">
      <summary>Writes the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to write.</param>
      <param name="feedBaseUri">The base URI for the feed.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.WriteItems(System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem},System.Uri)">
      <summary>Writes a collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="items">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances to write.</param>
      <param name="feedBaseUri">The base URI for the feed.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> associated with the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1">
      <summary>A class that serializes <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> derived classes to RSS 2.0 format.</summary>
      <typeparam name="TSyndicationFeed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> derived type to serialize.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter`1.#ctor(`0)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> derived instance.</summary>
      <param name="feedToWrite">The feed to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter`1.#ctor(`0,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> derived instance.</summary>
      <param name="feedToWrite">The feed to serialize.</param>
      <param name="serializeExtensionsAsAtom">A value that specifies whether to serialize elements that are defined in the Atom 1.0 specification, but not in the RSS 2.0 specification. The default is true.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter`1.CreateFeedInstance">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> derived class.</summary>
      <returns>A new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.Rss20ItemFormatter">
      <summary>A class that serializes a <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to and from RSS 2.0 format.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.#ctor(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" /> class.</summary>
      <param name="itemToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.#ctor(System.ServiceModel.Syndication.SyndicationItem,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" /> class.</summary>
      <param name="itemToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to serialize.</param>
      <param name="serializeExtensionsAsAtom">A value that specifies whether to serialize elements that are defined in the Atom 1.0 specification but not in the RSS 2.0 specification. The default value is true.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" /> class.</summary>
      <param name="itemTypeToCreate">The instance derived from <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to associate with the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Verifies whether the specified <see cref="T:System.Xml.XmlReader" /> contains a valid RSS 2.0 syndication item.</summary>
      <returns>A value that specifies whether the <see cref="T:System.Xml.XmlReader" /> contains a valid RSS 2.0 syndication item.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.CreateItemInstance">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20ItemFormatter.ItemType">
      <summary>Gets the type of the syndication item associated with the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" />.</summary>
      <returns>The type of the syndication item associated with the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20ItemFormatter.PreserveAttributeExtensions">
      <summary>Gets or sets a value that specifies whether to preserve attribute extensions during serialization.</summary>
      <returns>A value that specifies whether to preserve attribute extensions during serialization.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20ItemFormatter.PreserveElementExtensions">
      <summary>Gets or sets a value that specifies whether to preserve element extensions during serialization.</summary>
      <returns>A value that specifies whether to preserve element extensions during serialization.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Reads an RSS 2.0 syndication item from the specified <see cref="T:System.Xml.XmlReader" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20ItemFormatter.SerializeExtensionsAsAtom">
      <summary>Gets and sets a value that specifies whether to serialize extensions within the Atom 1.0 namespace.</summary>
      <returns>A value that specifies whether to serialize extensions within the Atom 1.0 namespace.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /> method.</summary>
      <returns>Null.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20ItemFormatter.Version">
      <summary>Gets the syndication version used by the formatter.</summary>
      <returns>The syndication version used by the formatter.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> associated with the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.Rss20ItemFormatter`1">
      <summary>A class that serializes <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />-derived classes to and from RSS 2.0 format.</summary>
      <typeparam name="TSyndicationItem">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />-derived type to serialize.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter`1" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter`1.#ctor(`0)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter`1" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> derived instance.</summary>
      <param name="itemToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter`1.#ctor(`0,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter`1" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> derived instance.</summary>
      <param name="itemToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to serialize.</param>
      <param name="serializeExtensionsAsAtom">A value that specifies whether to serialize elements that are defined in the Atom 1.0 specification but not in the RSS 2.0 specification. The default value is true.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter`1.CreateItemInstance">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> derived class.</summary>
      <returns>A new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationCategory">
      <summary>A class that represents the category of a syndication feed. </summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.ServiceModel.Syndication.SyndicationCategory)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</summary>
      <param name="source">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance to initialize the new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> class with the given name.</summary>
      <param name="name">The name of the category.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> class with the specified name, scheme, and label.</summary>
      <param name="name">The name of the category.</param>
      <param name="scheme">A Uniform Resource Identifier (URI) that represents the categorization scheme to which this category belongs.</param>
      <param name="label">A human-readable attribute that describes the category.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationCategory.AttributeExtensions">
      <summary>Gets the attribute extensions for this category.</summary>
      <returns>The attribute extensions for this category.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.Clone">
      <summary>Creates a copy of a <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationCategory.ElementExtensions">
      <summary>Gets the element extensions for this category.</summary>
      <returns>A collection of element extensions.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationCategory.Label">
      <summary>Gets or sets the label of the category.</summary>
      <returns>The label of the category.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationCategory.Name">
      <summary>Gets or sets the name of the category.</summary>
      <returns>The name of the category.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationCategory.Scheme">
      <summary>Gets or sets the scheme of the category.</summary>
      <returns>The scheme of the category.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Attempts to parse an attribute extension.</summary>
      <returns>A value that specifies whether the attribute extension was parsed successfully.</returns>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Attempts to parse an element extension.</summary>
      <returns>A value that specifies whether the element extension has been parsed successfully.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the attribute extensions to the specified writer.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="version">The syndication version to use when writing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the element extensions to the specified writer.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="version">The syndication version to use when writing.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationContent">
      <summary>A base class that represents syndication content.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.#ctor(System.ServiceModel.Syndication.SyndicationContent)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance.</summary>
      <param name="source">The <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance to use to initialize the new instance.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationContent.AttributeExtensions">
      <summary>Gets the attribute extensions for this content.</summary>
      <returns>A dictionary that contains the attribute extensions for this object.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.Clone">
      <summary>Creates a copy of the <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance.</summary>
      <returns>A copy of the <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateHtmlContent(System.String)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance with the specified HTML content.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance.</returns>
      <param name="content">The text of the content.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreatePlaintextContent(System.String)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance with the specified plain text content.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance.</returns>
      <param name="content">The plain text content.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateUrlContent(System.Uri,System.String)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> instance with the specified <see cref="T:System.Uri" /> and media type.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> instance.</returns>
      <param name="url">The <see cref="T:System.Uri" /> of the content.</param>
      <param name="mediaType">The media type of the content.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateXhtmlContent(System.String)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance with the specified XHTML content.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance.</returns>
      <param name="content">The XHTML content.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateXmlContent(System.Object)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> instance with the specified data contract object.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> instance.</returns>
      <param name="dataContractObject">The data contract object.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateXmlContent(System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> instance with the specified data contract object and data contract serializer.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> instance.</returns>
      <param name="dataContractObject">The data contract object.</param>
      <param name="dataContractSerializer">The data contract serializer.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateXmlContent(System.Object,System.Xml.Serialization.XmlSerializer)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> instance with the specified object and XML serializer.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> instance.</returns>
      <param name="xmlSerializerObject">The object.</param>
      <param name="serializer">The XML serializer.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateXmlContent(System.Xml.XmlReader)">
      <summary>Creates XML syndication content.</summary>
      <returns>An instance of the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> class that contains the new content.</returns>
      <param name="xmlReader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationContent.Type">
      <summary>Gets the syndication content type.</summary>
      <returns>The name of the type of syndication content.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.WriteContentsTo(System.Xml.XmlWriter)">
      <summary>Writes the contents of this <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> object to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.WriteTo(System.Xml.XmlWriter,System.String,System.String)">
      <summary>Writes the contents of this object to the specified <see cref="T:System.Xml.XmlWriter" /> within the specified element and element namespace.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="outerElementName">The name of the element.</param>
      <param name="outerElementNamespace">The namespace of the element.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationElementExtension">
      <summary>A class that represents a syndication element extension.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> class with the specified object.</summary>
      <param name="dataContractExtension">The data contract object used to initialize the extension. </param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.#ctor(System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> class with the specified object and data contract serializer.</summary>
      <param name="dataContractExtension">The data contract object used to initialize the extension.</param>
      <param name="dataContractSerializer">The data contract serializer to use.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.#ctor(System.Object,System.Xml.Serialization.XmlSerializer)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> class with the specified object and XML serializer.</summary>
      <param name="xmlSerializerExtension">The object used to initialize the extension.</param>
      <param name="serializer">The XML serializer to use.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.#ctor(System.String,System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> class with the specified outer name, outer namespace, and object.</summary>
      <param name="outerName">The name of the enclosing XML element.</param>
      <param name="outerNamespace">The namespace of the enclosing XML element.</param>
      <param name="dataContractExtension">The object used to initialize the extension.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.#ctor(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> class with the specified outer name, outer namespace, object, and data contract serializer.</summary>
      <param name="outerName">The name of the enclosing XML element.</param>
      <param name="outerNamespace">The namespace of the enclosing XML element.</param>
      <param name="dataContractExtension">The object used to initialize the extension.</param>
      <param name="dataContractSerializer">The data contract serializer to use.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.#ctor(System.Xml.XmlReader)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> class.</summary>
      <param name="xmlReader">The <see cref="T:System.Xml.XmlReader" /> that contains the content of the new <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.GetObject``1">
      <summary>Gets the object that represents the element extension.</summary>
      <returns>An object of the specified type that contains the element extension.</returns>
      <typeparam name="TExtension">The type of the extension to retrieve.</typeparam>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type is not a valid data contract.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The input XML cannot be deserialized into the requested type.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.GetObject``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Gets the object that represents the element extension.</summary>
      <returns>An object of the specified type that contains the element extension.</returns>
      <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> to use.</param>
      <typeparam name="TExtension">The type of the extension to retrieve.</typeparam>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type is not a valid data contract.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The input XML cannot be deserialized into the requested type.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.GetObject``1(System.Xml.Serialization.XmlSerializer)">
      <summary>Gets the object that represents the element extension.</summary>
      <returns>An object of the specified type that contains the element extension.</returns>
      <param name="serializer">The <see cref="T:System.Xml.Serialization.XmlSerializer" /> to use.</param>
      <typeparam name="TExtension">The type of the extension to retrieve.</typeparam>
      <exception cref="T:System.InvalidOperationException">The input XML cannot be deserialized into the requested type.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.GetReader">
      <summary>Gets the <see cref="T:System.Xml.XmlReader" /> associated with the <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />.</summary>
      <returns>The <see cref="T:System.Xml.XmlReader" /> associated with the <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationElementExtension.OuterName">
      <summary>Gets the outer name of the element extension.</summary>
      <returns>The outer name of the element extension.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationElementExtension.OuterNamespace">
      <summary>Gets the outer namespace of the element extension.</summary>
      <returns>The outer namespace of the element extension.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes the current extension to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection">
      <summary>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> objects.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.Add(System.Object)">
      <summary>Adds the specified <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> object to the collection.</summary>
      <param name="extension">The <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> object to add.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.Add(System.Object,System.Runtime.Serialization.DataContractSerializer)">
      <summary>Adds the specified object to the collection using the specified data contract serializer.</summary>
      <param name="dataContractExtension">The object to add to the collection.</param>
      <param name="serializer">The serializer to use.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.Add(System.Object,System.Xml.Serialization.XmlSerializer)">
      <summary>Adds the specified object to the collection using the specified XML serializer.</summary>
      <param name="xmlSerializerExtension">The object to add to the collection.</param>
      <param name="serializer">The XML serializer to use.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.Add(System.String,System.String,System.Object)">
      <summary>Adds the specified object to the collection with the specified outer name and outer namespace.</summary>
      <param name="outerName">The outer name.</param>
      <param name="outerNamespace">The outer namespace.</param>
      <param name="dataContractExtension">The object to add to the collection.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.Add(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Adds the specified object to the collection with the specified outer name and outer namespace using the specified data contract serializer.</summary>
      <param name="outerName">The outer name.</param>
      <param name="outerNamespace">The outer namespace.</param>
      <param name="dataContractExtension">The object to add to the collection.</param>
      <param name="dataContractSerializer">The serializer to use.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.Add(System.Xml.XmlReader)">
      <summary>Adds a new syndication element extension to the collection.</summary>
      <param name="xmlReader">The <see cref="T:System.Xml.XmlReader" /> to read the syndication element extension from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.GetReaderAtElementExtensions">
      <summary>Gets an <see cref="T:System.Xml.XmlReader" /> with the element extensions.</summary>
      <returns>An <see cref="T:System.Xml.XmlReader" /> that contains the element extensions.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.ReadElementExtensions``1(System.String,System.String)">
      <summary>Reads the element extensions with the specified name and namespace.</summary>
      <returns>A collection of element extension objects.</returns>
      <param name="extensionName">The name of the element extension.</param>
      <param name="extensionNamespace">The namespace of the element extension.</param>
      <typeparam name="TExtension">The type of the extension to read.</typeparam>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type is not a valid data contract.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The input XML cannot be deserialized into the requested type.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.ReadElementExtensions``1(System.String,System.String,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Reads the element extensions with the specified name and namespace.</summary>
      <returns>A collection of element extension objects.</returns>
      <param name="extensionName">The name of the element extension.</param>
      <param name="extensionNamespace">The namespace of the element extension.</param>
      <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> to use.</param>
      <typeparam name="TExtension">The type of the extension to read.</typeparam>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type is not a valid data contract.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The input XML cannot be deserialized into the requested type.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.ReadElementExtensions``1(System.String,System.String,System.Xml.Serialization.XmlSerializer)">
      <summary>Reads the element extensions with the specified name and namespace.</summary>
      <returns>A collection of element extension objects.</returns>
      <param name="extensionName">The name of the element extension.</param>
      <param name="extensionNamespace">The namespace of the element extension.</param>
      <param name="serializer">The <see cref="T:System.Xml.Serialization.XmlSerializer" /> to use.</param>
      <typeparam name="TExtension">The type of the extension to read.</typeparam>
      <exception cref="T:System.InvalidOperationException">The input XML cannot be deserialized into the requested type.</exception>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationFeed">
      <summary>Represents a top-level feed object, &lt;feed&gt; in Atom 1.0 and &lt;rss&gt; in RSS 2.0.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</summary>
      <param name="items">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified feed.</summary>
      <param name="source">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> used to initialize the new instance.</param>
      <param name="cloneItems">A value that specifies whether to clone the items in the source instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified title, description, and Uniform Resource Identifier (URI).</summary>
      <param name="title">The title of the feed.</param>
      <param name="description">The description of the feed.</param>
      <param name="feedAlternateLink">The URI for the feed.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified title, description, URI, and collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</summary>
      <param name="title">The title of the feed.</param>
      <param name="description">The description of the feed.</param>
      <param name="feedAlternateLink">The URI for the feed.</param>
      <param name="items">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</summary>
      <param name="title">The syndication feed title.</param>
      <param name="description">The syndication feed description.</param>
      <param name="feedAlternateLink">The alternate URI for the syndication feed.</param>
      <param name="id">The ID of the syndication feed.</param>
      <param name="lastUpdatedTime">The <see cref="T:System.DateTimeOffset" /> that contains the last time the syndication feed was updated.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</summary>
      <param name="title">The syndication feed title.</param>
      <param name="description">The syndication feed description.</param>
      <param name="feedAlternateLink">The alternate URI for the syndication feed.</param>
      <param name="id">The ID of the syndication feed.</param>
      <param name="lastUpdatedTime">The <see cref="T:System.DateTimeOffset" /> that contains the last time the syndication feed was updated.</param>
      <param name="items">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
      <summary>Gets a collection of attribute extensions.</summary>
      <returns>A dictionary that contains a collection of attribute extensions.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
      <summary>Gets a collection of authors of the feed.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> objects that represents the authors of the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.BaseUri">
      <summary>Gets or sets the base URI for the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <returns>The base URI for the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Categories">
      <summary>Gets a collection of categories for the feed.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> objects that represent the categories for the feed.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.Clone(System.Boolean)">
      <summary>Creates a copy of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <returns>A duplicate <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> object.</returns>
      <param name="cloneItems">A value that specifies whether the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects are cloned.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors">
      <summary>Gets a collection of the contributors to the feed.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> objects that represents the contributors to the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright">
      <summary>Gets or sets copyright information for the feed.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> object that represents copyright information for the feed.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.CreateCategory">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.CreateItem">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.CreateLink">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.CreatePerson">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Description">
      <summary>Gets or sets a description of the feed.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> object that represents the description of the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions">
      <summary>Gets the element extensions for the feed.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> instance that contains the element extensions in the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Generator">
      <summary>Gets or sets the generator of the feed.</summary>
      <returns>The name of the tool that generated the feed.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.GetAtom10Formatter">
      <summary>Gets an <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> instance.</summary>
      <returns>An <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter">
      <summary>Gets an <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</summary>
      <returns>An <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter(System.Boolean)">
      <summary>Gets a new <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</summary>
      <returns>An <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</returns>
      <param name="serializeExtensionsAsAtom">A value that specifies whether to serialize element and attribute extensions with an Atom 1.0 namespace.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Id">
      <summary>Gets or sets the ID of the feed.</summary>
      <returns>The ID of the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl">
      <summary>Gets or sets the image URL for the feed.</summary>
      <returns>The URL for the image for the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Items">
      <summary>Gets a collection of the feed items contained in the feed.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Language">
      <summary>Gets or sets the language of the feed.</summary>
      <returns>The name of the language the feed is written in. </returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime">
      <summary>Gets or sets the time the feed was last updated.</summary>
      <returns>A <see cref="T:System.DateTimeOffset" /> instance set to the time the feed was last updated.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Links">
      <summary>Gets the links associated with the feed.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> objects.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.Load(System.Xml.XmlReader)">
      <summary>Loads a syndication feed from the specified XML reader.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> that contains the loaded contents.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to load the feed from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)">
      <summary>Loads a <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />-derived instance from the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />-derived instance that contains the feed.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <typeparam name="TSyndicationFeed">The syndication feed type.</typeparam>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsAtom10(System.Xml.XmlWriter)">
      <summary>Write the syndication feed to the specified <see cref="T:System.Xml.XmlWriter" /> in Atom 1.0 format.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsRss20(System.Xml.XmlWriter)">
      <summary>Write the syndication feed to the specified <see cref="T:System.Xml.XmlWriter" /> in RSS 2.0 format.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Title">
      <summary>Gets or sets the title of the feed.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance that contains the title of the feed.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Attempts to parse an attribute extension.</summary>
      <returns>A value that specifies whether the attribute extension was parsed successfully.</returns>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML Encountered during read.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Attempts to parse an element extension.</summary>
      <returns>A value that specifies whether the element extension was parsed successfully.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="version">The syndication version to use while parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to write to.</param>
      <param name="version">The syndication version to use while writing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to write to.</param>
      <param name="version">The syndication version to use while writing.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationFeedFormatter">
      <summary>An abstract class used as a base class for other formatters, (for example <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" />).</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.#ctor(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <param name="feedToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to write. </param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Verifies that the specified <see cref="T:System.Xml.XmlReader" /> contains a valid syndication feed.</summary>
      <returns>true, if the XML reader contains a valid syndication feed; otherwise, false.</returns>
      <param name="reader">An XML reader to check.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreateCategory(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> class using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</returns>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> used to create the new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreateCategory(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> class using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</returns>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> used to create the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreateFeedInstance">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreateItem(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</returns>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> used to create the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreateLink(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to use to create the new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreateLink(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to use to create the new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreatePerson(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</returns>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance used to create the new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreatePerson(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</returns>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance used to create the new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeedFormatter.Feed">
      <summary>Gets the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> associated with the formatter.</summary>
      <returns>The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> associated with the formatter.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationCategory,System.Int32)">
      <summary>Loads element extensions into the specified <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> using the specified <see cref="T:System.Xml.XmlReader" /> and the maximum extension size.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> to load the element extensions into.</param>
      <param name="maxExtensionSize">The maximum allowable size for an element extension (in bytes).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.Int32)">
      <summary>Loads element extensions into the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> using the specified <see cref="T:System.Xml.XmlReader" /> and the maximum extension size.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to load the element extensions into.</param>
      <param name="maxExtensionSize">The maximum allowable size for an element extension (in bytes).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationItem,System.Int32)">
      <summary>Loads element extensions into the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> using the specified <see cref="T:System.Xml.XmlReader" /> and the maximum extension size.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to load the element extensions into.</param>
      <param name="maxExtensionSize">The maximum allowable size for an element extension (in bytes).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationLink,System.Int32)">
      <summary>Loads element extensions into the specified <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> using the specified <see cref="T:System.Xml.XmlReader" /> and the maximum extension size.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> to load the element extensions into.</param>
      <param name="maxExtensionSize">The maximum allowable size for an element extension (in bytes).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationPerson,System.Int32)">
      <summary>Loads element extensions into the specified <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> using the specified <see cref="T:System.Xml.XmlReader" /> and the maximum extension size.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> to load the element extensions into.</param>
      <param name="maxExtensionSize">The maximum allowable size for an element extension (in bytes).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Reads in a <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> from the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.SetFeed(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Associates a <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance with the <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" />.</summary>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to associate with the <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.ToString">
      <summary>Gets a string representation of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" /> instance.</summary>
      <returns>The <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Attempts to parse an attribute extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</summary>
      <returns>A value that indicates whether the attribute was parsed successfully.</returns>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationFeed,System.String)">
      <summary>Attempts to parse an attribute extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <returns>A value that indicates whether the attribute was parsed successfully.</returns>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Attempts to parse an attribute extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>A value that indicates whether the attribute was parsed successfully.</returns>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Attempts to parse an attribute extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</summary>
      <returns>A value that indicates whether the attribute was parsed successfully.</returns>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Attempts to parse an attribute extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</summary>
      <returns>A value that indicates whether the attribute was parsed successfully.</returns>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseContent(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationItem,System.String,System.String,System.ServiceModel.Syndication.SyndicationContent@)">
      <summary>Attempts to parse syndication item content using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>A value that indicates whether the content was parsed successfully.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to use.</param>
      <param name="contentType">The content type.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <param name="content">The content to parse.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Attempts to parse an element extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</summary>
      <returns>A value that indicates whether the element was parsed successfully.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.String)">
      <summary>Attempts to parse an element extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <returns>A value that indicates whether the element was parsed successfully.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Attempts to parse an element extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>A value that indicates whether the element was parsed successfully.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Attempts to parse an element extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</summary>
      <returns>A value that indicates whether the element was parsed successfully.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Attempts to parse an element extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</summary>
      <returns>A value that indicates whether the element was parsed successfully.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeedFormatter.Version">
      <summary>Gets the syndication version of the formatter.</summary>
      <returns>The syndication version of the formatter.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Writes the attribute extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance that contains the attribute extensions to be written.</param>
      <param name="version">The syndication version to write the attribute extensions in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationFeed,System.String)">
      <summary>Writes the attribute extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance that contains the attribute extensions to be written.</param>
      <param name="version">The syndication version to write the attribute extensions in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Writes the attribute extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance that contains the attribute extensions to be written.</param>
      <param name="version">The syndication version to write the attribute extensions in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Writes the attribute extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance that contains the attribute extensions to be written.</param>
      <param name="version">The syndication version to write the attribute extensions in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Writes the attribute extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance that contains the attribute extensions to be written.</param>
      <param name="version">The syndication version to write the attribute extensions in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Writes the element extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the element extensions to.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance that contains the element extensions to be written.</param>
      <param name="version">The syndication version the element extensions are written in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationFeed,System.String)">
      <summary>Writes the element extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the element extensions to.</param>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance that contains the element extensions to be written.</param>
      <param name="version">The syndication version the element extensions are written in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Writes the element extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the element extensions to.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance that contains the element extensions to be written.</param>
      <param name="version">The syndication version the element extensions are written in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Writes the element extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the element extensions to.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance that contains the element extensions to be written.</param>
      <param name="version">The syndication version the element extensions are written in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Writes the element extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the element extensions to.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance that contains the element extensions to be written.</param>
      <param name="version">The syndication version the element extensions are written in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to the specified <see cref="T:System.Xml.XmlWriter" /> instance.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationItem">
      <summary>Represents a feed item, for example an RSS &lt;item&gt; or an Atom &lt;entry&gt;.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.#ctor(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <param name="source">A <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance used to initialize the new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.#ctor(System.String,System.ServiceModel.Syndication.SyndicationContent,System.Uri,System.String,System.DateTimeOffset)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class.</summary>
      <param name="title">The title of the syndication item.</param>
      <param name="content">A <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance that contains the content of the syndication item.</param>
      <param name="itemAlternateLink">The alternate URI for the syndication item.</param>
      <param name="id">The ID of the syndication item.</param>
      <param name="lastUpdatedTime">The <see cref="T:System.DateTimeOffset" /> that contains the last time the syndication item was last updated.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.#ctor(System.String,System.String,System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class with the specified title, content, and link.</summary>
      <param name="title">The item title.</param>
      <param name="content">The item content.</param>
      <param name="itemAlternateLink">The item URL.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class.</summary>
      <param name="title">The title of the syndication item.</param>
      <param name="content">The content of the syndication item.</param>
      <param name="itemAlternateLink">The alternate URI for the syndication item.</param>
      <param name="id">The ID of the syndication item.</param>
      <param name="lastUpdatedTime">The <see cref="T:System.DateTimeOffset" /> that contains the last time the syndication item was last updated.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.AddPermalink(System.Uri)">
      <summary>Adds a permalink to the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <param name="permalink">The <see cref="T:System.Uri" /> that points to the content.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.AttributeExtensions">
      <summary>Gets the attribute extensions for the syndication item.</summary>
      <returns>A dictionary that contains a collection of attribute extensions.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Authors">
      <summary>Gets the authors of the syndication item.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> objects that represent the authors of the syndication item.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.BaseUri">
      <summary>Gets and sets the base Uniform Resource Identifier (URI) for the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>The base URI of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Categories">
      <summary>Gets the syndication categories for the syndication item.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> objects that represent the categories of the syndication item.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.Clone">
      <summary>Creates a copy of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Content">
      <summary>Gets and sets the content of the syndication item.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance that contains the content of the syndication item.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Contributors">
      <summary>Gets the contributors of the syndication item.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> objects that represent the contributors of the syndication item.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Copyright">
      <summary>Gets and sets the copyright information for the syndication item.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance that represents copyright information.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.CreateCategory">
      <summary>Creates a new category.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.CreateLink">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.CreatePerson">
      <summary>Creates a new person.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.ElementExtensions">
      <summary>Gets the element extensions contained in the syndication item.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> that contains the element extensions.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.GetAtom10Formatter">
      <summary>Gets an <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.GetRss20Formatter">
      <summary>Gets an <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</summary>
      <returns>An <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.GetRss20Formatter(System.Boolean)">
      <summary>Gets an <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</summary>
      <returns>An <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</returns>
      <param name="serializeExtensionsAsAtom">A value that specifies whether to serialize element and attribute extensions with an Atom 1.0 namespace.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Id">
      <summary>Gets and sets the ID of the syndication item.</summary>
      <returns>The ID of the syndication item.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.LastUpdatedTime">
      <summary>Gets and sets the last updated time for the syndication item.</summary>
      <returns>A <see cref="T:System.DateTimeOffset" /> instance that represents the time the syndication item was last updated.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Links">
      <summary>Gets the links contained in the syndication item.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> objects.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.Load``1(System.Xml.XmlReader)">
      <summary>Loads a <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> derived object from the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> derived object that contains the syndication item.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <typeparam name="TSyndicationItem">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />-derived class to load.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.Load(System.Xml.XmlReader)">
      <summary>Loads a <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance from the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from. </param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.PublishDate">
      <summary>Gets and sets the publish date for the syndication item.</summary>
      <returns>A <see cref="T:System.DateTimeOffset" /> object that represents the publish date for the syndication item.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.SaveAsAtom10(System.Xml.XmlWriter)">
      <summary>Write the syndication item to the specified <see cref="T:System.Xml.XmlWriter" /> in Atom 1.0 format.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.SaveAsRss20(System.Xml.XmlWriter)">
      <summary>Write the syndication item to the specified <see cref="T:System.Xml.XmlWriter" /> in RSS 2.0 format.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.SourceFeed">
      <summary>Gets and sets the source feed of the syndication item.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance where the syndication item is located.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Summary">
      <summary>Gets and sets the summary of the syndication item.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> that contains a summary of the item.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Title">
      <summary>Gets and sets the title of the syndication item.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> object that contains the title of the syndication item.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Attempts to parse an attribute extension.</summary>
      <returns>A value that specifies whether the attribute extension was parsed successfully.</returns>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.TryParseContent(System.Xml.XmlReader,System.String,System.String,System.ServiceModel.Syndication.SyndicationContent@)">
      <summary>Attempts to parse content.</summary>
      <returns>A value that specifies whether the content was parsed successfully.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="contentType">The content type of the content.</param>
      <param name="version">The syndication version to use while parsing.</param>
      <param name="content">The <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance to load the parsed content into.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Attempts to parse an element extension.</summary>
      <returns>A value that specifies whether the element extension was parsed successfully.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="version">The syndication version to use while parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to write to.</param>
      <param name="version">The syndication version to use when writing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specific syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to write to.</param>
      <param name="version">The syndication version to use when writing.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationItemFormatter">
      <summary>An abstract class used as a base class for other formatters, (for example, <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" />).</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.#ctor(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <param name="itemToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to write.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Verifies whether the specified <see cref="T:System.Xml.XmlReader" /> contains a valid syndication item.</summary>
      <returns>true if the XML reader contains a valid syndication item; otherwise, false.</returns>
      <param name="reader">An XML reader to check.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.CreateCategory(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> class using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</returns>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> used to create the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.CreateItemInstance">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.CreateLink(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to use to create the new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.CreatePerson(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</returns>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance used to create the new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItemFormatter.Item">
      <summary>Gets the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> associated with the formatter.</summary>
      <returns>The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> associated with the formatter.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationCategory,System.Int32)">
      <summary>Loads element extensions into the specified <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> using the specified <see cref="T:System.Xml.XmlReader" /> and the maximum extension size.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> to load the element extensions into.</param>
      <param name="maxExtensionSize">The maximum allowable size for an element extension (in bytes).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationItem,System.Int32)">
      <summary>Loads element extensions into the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> using the specified <see cref="T:System.Xml.XmlReader" /> and the maximum extension size.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to load the element extensions into.</param>
      <param name="maxExtensionSize">The maximum allowable size for an element extension (in bytes).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationLink,System.Int32)">
      <summary>Loads element extensions into the specified <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> using the specified <see cref="T:System.Xml.XmlReader" /> and the maximum extension size.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> to load the element extensions into.</param>
      <param name="maxExtensionSize">The maximum allowable size for an element extension (in bytes).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationPerson,System.Int32)">
      <summary>Loads element extensions into the specified <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> using the specified <see cref="T:System.Xml.XmlReader" /> and the maximum extension size.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> to load the element extensions into.</param>
      <param name="maxExtensionSize">The maximum allowable size for an element extension (in bytes).</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Reads in a <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> from the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.SetItem(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Associates a <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance with the <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter" />.</summary>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to associate with the <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.ToString">
      <summary>Gets a string representation of the <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter" /> instance.</summary>
      <returns>The <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Attempts to parse an attribute extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</summary>
      <returns>A value that indicates whether the attribute was parsed successfully.</returns>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Attempts to parse an attribute extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>A value that indicates whether the attribute was parsed successfully.</returns>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Attempts to parse an attribute extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</summary>
      <returns>A value that indicates whether the attribute was parsed successfully.</returns>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Attempts to parse an attribute extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</summary>
      <returns>A value that indicates whether the attribute was parsed successfully.</returns>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseContent(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationItem,System.String,System.String,System.ServiceModel.Syndication.SyndicationContent@)">
      <summary>Attempts to parse syndication item content using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>A value that indicates whether the content was parsed successfully.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to use.</param>
      <param name="contentType">The content type.</param>
      <param name="version">The syndication version to use while parsing.</param>
      <param name="content">The content to parse.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Attempts to parse an element extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</summary>
      <returns>A value that indicates whether the element was parsed successfully.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Attempts to parse an element extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>A value that indicates whether the element was parsed successfully.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Attempts to parse an element extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</summary>
      <returns>A value that indicates whether the element was parsed successfully.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Attempts to parse an element extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</summary>
      <returns>A value that indicates whether the element was parsed successfully.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItemFormatter.Version">
      <summary>Gets the syndication version of the formatter.</summary>
      <returns>The syndication version of the formatter.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Writes the attribute extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance that contains the attribute extensions to be written.</param>
      <param name="version">The syndication version to write the attribute extensions in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Writes the attribute extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance that contains the attribute extensions to be written.</param>
      <param name="version">The syndication version to write the attribute extensions in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Writes the attribute extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance that contains the attribute extensions to be written.</param>
      <param name="version">The syndication version to write the attribute extensions in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Writes the attribute extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance that contains the attribute extensions to be written.</param>
      <param name="version">The syndication version to write the attribute extensions in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Writes the element extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance that contains the element extensions to be written.</param>
      <param name="version">The syndication version the extensions are written in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Writes the element extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance that contains the element extensions to be written.</param>
      <param name="version">The syndication version the extensions are written in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Writes the element extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance that contains the element extensions to be written.</param>
      <param name="version">The syndication version the extensions are written in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Writes the element extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance that contains the element extensions to be written.</param>
      <param name="version">The syndication version the extensions are written in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to the specified <see cref="T:System.Xml.XmlWriter" /> instance.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationLink">
      <summary>Represents a link within a syndication feed or item.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.ServiceModel.Syndication.SyndicationLink)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified instance.</summary>
      <param name="source">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance used to initialize the new instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified <see cref="T:System.Uri" />.</summary>
      <param name="uri">The URI to the linked resource.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified <see cref="T:System.Uri" />, relation type, title, media type, and length.</summary>
      <param name="uri">The URI to the linked resource.</param>
      <param name="relationshipType">The relationship type.</param>
      <param name="title">The title of the link.</param>
      <param name="mediaType">The media type of the link.</param>
      <param name="length">The length of the linked content.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions">
      <summary>Gets the attribute extensions of the link.</summary>
      <returns>A dictionary that contains a collection of attribute extensions.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.BaseUri">
      <summary>Gets or sets the base URI of the syndication link.</summary>
      <returns>A <see cref="T:System.Uri" /> instance that contains the base URI of the syndication link.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.Clone">
      <summary>Creates a copy of the current <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> object with the specified <see cref="T:System.Uri" />.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
      <param name="uri">The URI of the linked resource.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri,System.String)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> object with the specified <see cref="T:System.Uri" /> and media type.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
      <param name="uri">The URI of the linked resource.</param>
      <param name="mediaType">The media type of the link.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink(System.Uri,System.String,System.Int64)">
      <summary>Creates a media enclosure link with the specified URI, media type, and length.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
      <param name="uri">The URI of the linked resource.</param>
      <param name="mediaType">The media type of the link.</param>
      <param name="length">The length of the linked content.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> with the specified URI and relationship type set to self.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
      <param name="uri">The URI to the linked resource.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri,System.String)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> with the specified URI, media type, and relationship type set to self.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
      <param name="uri">The URI to the linked resource.</param>
      <param name="mediaType">The media type of the link.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.ElementExtensions">
      <summary>Gets the element extensions for the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> that contains the element extensions for the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.GetAbsoluteUri">
      <summary>Gets the absolute URI for the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</summary>
      <returns>A <see cref="T:System.Uri" /> instance that contains the absolute URI of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.Length">
      <summary>Gets or sets the length of the linked resource in bytes.</summary>
      <returns>The length of the linked resource.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.MediaType">
      <summary>Gets or sets the media type of the linked resource.</summary>
      <returns>The media type of the linked resource.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType">
      <summary>Gets or sets the relationship type of the linked resource.</summary>
      <returns>The relationship type of the linked resource.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.Title">
      <summary>Gets or sets the title of the linked resource.</summary>
      <returns>The title of the linked resource.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Attempts to parse an attribute extension.</summary>
      <returns>A value that specifies whether the attribute extension was parsed successfully.</returns>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Attempts to parse an element extension.</summary>
      <returns>A value that specifies whether the element extension was parsed successfully.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.Uri">
      <summary>Gets or sets the URI for the linked resource.</summary>
      <returns>A <see cref="T:System.Uri" /> instance that contains the URI for the linked resource.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to write to.</param>
      <param name="version">The syndication version to use when writing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to write to.</param>
      <param name="version">The syndication version to use when writing.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationPerson">
      <summary>Represents an author or contributor of syndication content.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor">
      <summary>Initializes a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.ServiceModel.Syndication.SyndicationPerson)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> class with the specified instance.</summary>
      <param name="source">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to initialize the new instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.String)">
      <summary>Initializes a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance with the specified e-mail address.</summary>
      <param name="email">The e-mail address of the person.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance with the specified e-mail address, name, and Uniform Resource Identifier (URI).</summary>
      <param name="email">The e-mail address of the person.</param>
      <param name="name">The name of the person.</param>
      <param name="uri">The URI of the person's Web page.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions">
      <summary>Gets the attribute extensions for the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>A dictionary that contains a collection of attribute extensions.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.Clone">
      <summary>Creates a copy of the existing <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions">
      <summary>Gets the element extensions for the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> that contains the element extensions.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationPerson.Email">
      <summary>Gets or sets the e-mail address of the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>The e-mail address of the person.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationPerson.Name">
      <summary>Gets or sets the name of the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>The name of the person.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Attempts to parse an attribute extension.</summary>
      <returns>A value that specifies whether the attribute extension was parsed successfully.</returns>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Attempts to parse an element extension.</summary>
      <returns>A value that specifies whether the element extension was parsed successfully.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="version">The syndication version to use while parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationPerson.Uri">
      <summary>Gets or sets the URI of the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>The URI of the person's Web site.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to write to.</param>
      <param name="version">The syndication version to use while writing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to write to.</param>
      <param name="version">The syndication version to use while writing.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationVersions">
      <summary>A class that represents the syndication versions supported by Silverlight versionÂ 4 Release Candidate.</summary>
    </member>
    <member name="F:System.ServiceModel.Syndication.SyndicationVersions.Atom10">
      <summary>Represents support for the Atom 1.0 specification.</summary>
    </member>
    <member name="F:System.ServiceModel.Syndication.SyndicationVersions.Rss20">
      <summary>Represents support for the RSS 2.0 specification.</summary>
    </member>
    <member name="T:System.ServiceModel.Syndication.TextSyndicationContent">
      <summary>Represents any <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> content intended to be displayed to an end user.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.TextSyndicationContent.#ctor(System.ServiceModel.Syndication.TextSyndicationContent)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> with the specified <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance.</summary>
      <param name="source">The <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.TextSyndicationContent.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> with the specified text.</summary>
      <param name="text">The text of the content.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.TextSyndicationContent.#ctor(System.String,System.ServiceModel.Syndication.TextSyndicationContentKind)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> with the specified text and <see cref="T:System.ServiceModel.Syndication.TextSyndicationContentKind" />.</summary>
      <param name="text">The text of the content.</param>
      <param name="textKind">The <see cref="T:System.ServiceModel.Syndication.TextSyndicationContentKind" /> that describes the content.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.TextSyndicationContent.Clone">
      <summary>Creates a copy of the existing <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.TextSyndicationContent.Text">
      <summary>Gets the text of the <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />.</summary>
      <returns>The text of the <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.TextSyndicationContent.Type">
      <summary>Gets the content type of the <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />.</summary>
      <returns>The kind of text syndication content.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.TextSyndicationContent.WriteContentsTo(System.Xml.XmlWriter)">
      <summary>Writes the contents of the <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.TextSyndicationContentKind">
      <summary>An enumeration that represents the supported types of text syndication content.</summary>
    </member>
    <member name="F:System.ServiceModel.Syndication.TextSyndicationContentKind.Plaintext">
      <summary>Plain text.</summary>
    </member>
    <member name="F:System.ServiceModel.Syndication.TextSyndicationContentKind.Html">
      <summary>HTML (escaped markup).</summary>
    </member>
    <member name="F:System.ServiceModel.Syndication.TextSyndicationContentKind.XHtml">
      <summary>XML (not escaped).</summary>
    </member>
    <member name="T:System.ServiceModel.Syndication.UrlSyndicationContent">
      <summary>Represents syndication content that consists of a URL to another resource.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.UrlSyndicationContent.#ctor(System.ServiceModel.Syndication.UrlSyndicationContent)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> class with the specified <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> instance.</summary>
      <param name="source">The <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.UrlSyndicationContent.#ctor(System.Uri,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> class with the specified <see cref="T:System.Uri" /> and media type.</summary>
      <param name="url">The <see cref="T:System.Uri" />.</param>
      <param name="mediaType">The media type of the resource referenced by the <see cref="T:System.Uri" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.UrlSyndicationContent.Clone">
      <summary>Creates a copy of the existing <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance that contains the new copy of the <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.UrlSyndicationContent.Type">
      <summary>Gets the content type of the <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</summary>
      <returns>The content type of the <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.UrlSyndicationContent.Url">
      <summary>Gets the <see cref="T:System.Uri" /> for the <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</summary>
      <returns>A <see cref="T:System.Uri" /> instance that contains the URI for the <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.UrlSyndicationContent.WriteContentsTo(System.Xml.XmlWriter)">
      <summary>Writes the contents of the <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> instance to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="T:System.ServiceModel.Syndication.XmlSyndicationContent">
      <summary>Represents XML syndication content that is not intended to be displayed in a browser.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.#ctor(System.ServiceModel.Syndication.XmlSyndicationContent)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> with the specified <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> instance.</summary>
      <param name="source">The <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.#ctor(System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> with the specified type, object, and <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
      <param name="type">The type of content.</param>
      <param name="dataContractExtension">The data contract extension.</param>
      <param name="dataContractSerializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> to use.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.#ctor(System.String,System.Object,System.Xml.Serialization.XmlSerializer)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> with the specified type, object and <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="type">The type of content.</param>
      <param name="xmlSerializerExtension">The XML serializer extension.</param>
      <param name="serializer">The <see cref="T:System.Xml.Serialization.XmlSerializer" /> to use.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.#ctor(System.String,System.ServiceModel.Syndication.SyndicationElementExtension)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> with the specified type and <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />.</summary>
      <param name="type">The type of the content, typically expressed as a MIME content type, for example application/xml or application/xml+customer.</param>
      <param name="extension">The <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> to place in the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.#ctor(System.Xml.XmlReader)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> class.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.Clone">
      <summary>Creates a copy of the existing <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.XmlSyndicationContent.Extension">
      <summary>Gets the <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.GetReaderAtContent">
      <summary>Gets a reader from the content of the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryReader" /> from the content of the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.ReadContent``1">
      <summary>Reads the content of the specified type into the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</summary>
      <returns>An object of the specified type.</returns>
      <typeparam name="TContent">The type of content to read.</typeparam>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The input XML cannot be deserialized into the requested type.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.ReadContent``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Reads the content of the specified type into the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> using the specified serializer.</summary>
      <returns>An object of the specified type.</returns>
      <param name="dataContractSerializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> to use.</param>
      <typeparam name="TContent">The type of content to read.</typeparam>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The input XML cannot be deserialized into the requested type.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.ReadContent``1(System.Xml.Serialization.XmlSerializer)">
      <summary>Reads the content of the specified type into the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> using the specified serializer.</summary>
      <returns>An object of the specified type.</returns>
      <param name="serializer">The <see cref="T:System.Xml.Serialization.XmlSerializer" /> to use.</param>
      <typeparam name="TContent">The type of content to read.</typeparam>
      <exception cref="T:System.InvalidOperationException">The input XML cannot be deserialized into the requested type.</exception>
    </member>
    <member name="P:System.ServiceModel.Syndication.XmlSyndicationContent.Type">
      <summary>Gets the type of the XML syndication content.</summary>
      <returns>The XML syndication content type.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.WriteContentsTo(System.Xml.XmlWriter)">
      <summary>Write the contents of the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Xml.Linq.extmap.xml ===
<?xml version="1.0"?>
<manifest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
          xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <assembly>
    <name>System.Xml.Linq</name>
    <version>2.0.5.0</version>
    <publickeytoken>31bf3856ad364e35</publickeytoken>
    <relpath>System.Xml.Linq.dll</relpath>
    <extension downloadUri="System.Xml.Linq.zip" />
  </assembly>


</manifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Windows.Controls.Data.Input.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Controls.Data.Input</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.DescriptionViewer" /> types to UI automation. </summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer.#ctor(System.Windows.Controls.DescriptionViewer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer" /> class. </summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.DescriptionViewer" /> to associate with this <see cref="T:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for this <see cref="T:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The control type as a value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class that is associated with this <see cref="T:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The type name of the <paramref name="owner" /> value that the automation peer is constructed with.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.Controls.DescriptionViewer" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The string name value from the owner control's <see cref="P:System.Windows.Controls.DescriptionViewer.Description" /> property if available.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.ValidationSummary" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer.#ctor(System.Windows.Controls.ValidationSummary)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer" /> class. </summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ValidationSummary" /> to associate with this <see cref="T:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the element associated with this <see cref="T:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class for the object associated with this <see cref="T:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The string ValidationSummary.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.Controls.ValidationSummary" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The string name value from the owner control's header if available. Otherwise, calls base.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for this <see cref="T:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" />.</summary>
    </member>
    <member name="T:System.Windows.Controls.DescriptionViewer">
      <summary>Displays a description and tracks error state for an associated control.</summary>
    </member>
    <member name="M:System.Windows.Controls.DescriptionViewer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DescriptionViewer" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.DescriptionViewer.Description">
      <summary>Gets or sets the description text displayed by the viewer.</summary>
      <returns>The description text displayed by the viewer.</returns>
    </member>
    <member name="F:System.Windows.Controls.DescriptionViewer.DescriptionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DescriptionViewer.Description" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DescriptionViewer.Description" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DescriptionViewer.GlyphTemplate">
      <summary>Gets or sets the template that is used to display the description viewer glyph.</summary>
      <returns>The template that is used to display the description viewer glyph.</returns>
    </member>
    <member name="F:System.Windows.Controls.DescriptionViewer.GlyphTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DescriptionViewer.GlyphTemplate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DescriptionViewer.GlyphTemplate" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DescriptionViewer.IsFocused">
      <summary>Gets a value that indicates whether the control that is the <see cref="P:System.Windows.Controls.DescriptionViewer.Target" /> of the <see cref="T:System.Windows.Controls.DescriptionViewer" /> has focus.</summary>
      <returns>true if the <see cref="P:System.Windows.Controls.DescriptionViewer.Target" /> control has focus; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.DescriptionViewer.IsFocusedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DescriptionViewer.IsFocused" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DescriptionViewer.IsFocused" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DescriptionViewer.IsValid">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Controls.DescriptionViewer.Target" /> field data is valid.</summary>
      <returns>true if the field data is valid; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.DescriptionViewer.IsValidProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DescriptionViewer.IsValid" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DescriptionViewer.IsValid" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DescriptionViewer.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.DescriptionViewer" /> control when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.DescriptionViewer.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.DescriptionViewerAutomationPeer" /> for the <see cref="T:System.Windows.Controls.DescriptionViewer" /> object.</returns>
    </member>
    <member name="P:System.Windows.Controls.DescriptionViewer.PropertyPath">
      <summary>Gets or sets the path to the dependency property on the <see cref="P:System.Windows.FrameworkElement.DataContext" /> of the <see cref="P:System.Windows.Controls.DescriptionViewer.Target" /> control that this <see cref="T:System.Windows.Controls.DescriptionViewer" /> is associated with.</summary>
      <returns>The path to the dependency property on the <see cref="P:System.Windows.FrameworkElement.DataContext" /> of the <see cref="P:System.Windows.Controls.DescriptionViewer.Target" /> control that this <see cref="T:System.Windows.Controls.DescriptionViewer" /> is associated with.</returns>
    </member>
    <member name="F:System.Windows.Controls.DescriptionViewer.PropertyPathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DescriptionViewer.PropertyPath" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DescriptionViewer.PropertyPath" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DescriptionViewer.Refresh">
      <summary>Reloads the metadata from the <see cref="P:System.Windows.Controls.DescriptionViewer.Target" /> element.</summary>
    </member>
    <member name="P:System.Windows.Controls.DescriptionViewer.Target">
      <summary>Gets or sets the control that this <see cref="T:System.Windows.Controls.DescriptionViewer" /> is associated with.</summary>
      <returns>The control that this <see cref="T:System.Windows.Controls.DescriptionViewer" /> is associated with.</returns>
    </member>
    <member name="F:System.Windows.Controls.DescriptionViewer.TargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DescriptionViewer.Target" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DescriptionViewer.Target" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DescriptionViewer.ToolTipStyle">
      <summary>Gets or sets the style used to display tooltips.</summary>
      <returns>The style used to display tooltips.</returns>
    </member>
    <member name="F:System.Windows.Controls.DescriptionViewer.ToolTipStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DescriptionViewer.ToolTipStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DescriptionViewer.ToolTipStyle" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.FocusingInvalidControlEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.ValidationSummary.FocusingInvalidControl" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.FocusingInvalidControlEventArgs.#ctor(System.Windows.Controls.ValidationSummaryItem,System.Windows.Controls.ValidationSummaryItemSource)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.FocusingInvalidControlEventArgs" /> class.</summary>
      <param name="item">The error that is selected in the <see cref="T:System.Windows.Controls.ValidationSummary" /> list.</param>
      <param name="target">The control/property pair that will receive focus.</param>
    </member>
    <member name="P:System.Windows.Controls.FocusingInvalidControlEventArgs.Handled">
      <summary>Gets or sets a value that indicates whether setting the focus was handled.</summary>
      <returns>true if setting the focus was handled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Controls.FocusingInvalidControlEventArgs.Item">
      <summary>Gets the error that is selected in the <see cref="T:System.Windows.Controls.ValidationSummary" /> error list.</summary>
      <returns>The error that is selected in the <see cref="T:System.Windows.Controls.ValidationSummary" /> error list.</returns>
    </member>
    <member name="P:System.Windows.Controls.FocusingInvalidControlEventArgs.Target">
      <summary>Gets or sets the control/property pair that will receive focus.</summary>
      <returns>The control/property pair that will receive focus.</returns>
    </member>
    <member name="T:System.Windows.Controls.Label">
      <summary>Displays a caption, required field indicator, and validation error indicator for an associated control.</summary>
    </member>
    <member name="M:System.Windows.Controls.Label.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Label" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.Label.IsRequired">
      <summary>Gets or sets a value that indicates whether the property bound to the <see cref="P:System.Windows.Controls.Label.Target" /> field is required.</summary>
      <returns>true if the field is required; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Label.IsRequiredProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Label.IsRequired" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Label.IsRequired" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Label.IsValid">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Controls.Label.Target" /> field data is valid.</summary>
      <returns>true if the field data is valid; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Controls.Label.IsValidProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Label.IsValid" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Label.IsValid" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Label.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Label" /> control when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.Label.OnContentChanged(System.Object,System.Object)">
      <summary>Called when the value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</summary>
      <param name="oldContent">The old value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property.</param>
      <param name="newContent">The new value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property.</param>
    </member>
    <member name="P:System.Windows.Controls.Label.PropertyPath">
      <summary>Gets or sets the path to the dependency property on the <see cref="P:System.Windows.FrameworkElement.DataContext" /> of the <see cref="P:System.Windows.Controls.Label.Target" /> control that this <see cref="T:System.Windows.Controls.Label" /> is associated with.</summary>
      <returns>The path to the dependency property on the <see cref="P:System.Windows.FrameworkElement.DataContext" /> of the <see cref="P:System.Windows.Controls.Label.Target" /> control that this <see cref="T:System.Windows.Controls.Label" /> is associated with. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.Label.PropertyPathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Label.PropertyPath" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Label.PropertyPath" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Label.Refresh">
      <summary>Reloads the metadata from the <see cref="P:System.Windows.Controls.Label.Target" /> element.</summary>
    </member>
    <member name="P:System.Windows.Controls.Label.Target">
      <summary>Gets or sets the control that this <see cref="T:System.Windows.Controls.Label" /> is associated with.</summary>
      <returns>The control that this <see cref="T:System.Windows.Controls.Label" /> is associated with.</returns>
    </member>
    <member name="F:System.Windows.Controls.Label.TargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Label.Target" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Label.Target" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationSummary">
      <summary>Displays a summary of the validation errors on a form.</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationSummary.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationSummary" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummary.DisplayedErrors">
      <summary>Gets the collection of errors that are displayed after the <see cref="P:System.Windows.Controls.ValidationSummary.Filter" /> is applied.</summary>
      <returns>The collection of errors that are displayed after the <see cref="P:System.Windows.Controls.ValidationSummary.Filter" /> is applied.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummary.Errors">
      <summary>Gets the collection of errors.</summary>
      <returns>The collection of errors.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummary.ErrorStyle">
      <summary>Gets or sets the style used for the error's item container.</summary>
      <returns>The style used for the error's item container.</returns>
    </member>
    <member name="F:System.Windows.Controls.ValidationSummary.ErrorStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ValidationSummary.ErrorStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ValidationSummary.ErrorStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummary.Filter">
      <summary>Gets or sets a value that indicates which types of errors are displayed.</summary>
      <returns>One of the enumeration values that indicates which types of errors are displayed. The default is <see cref="F:System.Windows.Controls.ValidationSummaryFilters.All" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.ValidationSummary.FilterProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ValidationSummary.Filter" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ValidationSummary.Filter" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummary.FocusControlsOnClick">
      <summary>Gets or sets a value that indicates whether focus is set on the input control when an error message is clicked.</summary>
      <returns>true if focus is set on the input control when an error message is clicked; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Controls.ValidationSummary.FocusControlsOnClickProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ValidationSummary.FocusControlsOnClick" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ValidationSummary.FocusControlsOnClick" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.ValidationSummary.FocusingInvalidControl">
      <summary>Occurs when an error in the error summary list is clicked.</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationSummary.GetShowErrorsInSummary(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.ValidationSummary.ShowErrorsInSummary" />Â attached property of the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>The <see cref="P:System.Windows.Controls.ValidationSummary.ShowErrorsInSummary" /> property value of the specified object.</returns>
      <param name="inputControl">The input control from which the property value is read.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputControl" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummary.HasDisplayedErrors">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ValidationSummary" /> has displayed errors.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.ValidationSummary" /> has displayed errors; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.ValidationSummary.HasDisplayedErrorsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ValidationSummary.HasDisplayedErrors" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ValidationSummary.HasDisplayedErrors" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummary.HasErrors">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ValidationSummary" /> has errors.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.ValidationSummary" /> has errors; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.ValidationSummary.HasErrorsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ValidationSummary.HasErrors" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ValidationSummary.HasErrors" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummary.Header">
      <summary>Gets or sets the content of the <see cref="T:System.Windows.Controls.ValidationSummary" /> header.</summary>
      <returns>The content of the <see cref="T:System.Windows.Controls.ValidationSummary" /> header. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.ValidationSummary.HeaderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ValidationSummary.Header" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ValidationSummary.Header" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummary.HeaderTemplate">
      <summary>Gets or sets the template that is used to display the content of the header.</summary>
      <returns>The template that is used to display the content of the header.</returns>
    </member>
    <member name="F:System.Windows.Controls.ValidationSummary.HeaderTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ValidationSummary.HeaderTemplate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ValidationSummary.HeaderTemplate" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationSummary.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.ValidationSummary" /> when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationSummary.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.ValidationSummaryAutomationPeer" /> for the <see cref="T:System.Windows.Controls.ValidationSummary" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationSummary.OnFocusingInvalidControl(System.Windows.Controls.FocusingInvalidControlEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.ValidationSummary.FocusingInvalidControl" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="E:System.Windows.Controls.ValidationSummary.SelectionChanged">
      <summary>Occurs when the currently selected item in the error summary list changes.</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationSummary.SetShowErrorsInSummary(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Controls.ValidationSummary.ShowErrorsInSummary" />Â attached property of the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="inputControl">The input control with which to associate the attached property.</param>
      <param name="value">true if errors on the input control should be shown in the summary; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputControl" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummary.ShowErrorsInSummary">
      <summary>Gets or sets a value that indicates whether a control's errors should be displayed in the <see cref="T:System.Windows.Controls.ValidationSummary" />.</summary>
      <returns>true if errors on the input control should be shown in the summary; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.ValidationSummary.ShowErrorsInSummaryProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ValidationSummary.ShowErrorsInSummary" />Â attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ValidationSummary.ShowErrorsInSummary" />Â attached property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummary.SummaryListBoxStyle">
      <summary>Gets or sets the style applied to the <see cref="T:System.Windows.Controls.ListBox" /> that displays the errors.</summary>
      <returns>The style applied to the <see cref="T:System.Windows.Controls.ListBox" /> that displays the errors. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.ValidationSummary.SummaryListBoxStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ValidationSummary.SummaryListBoxStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ValidationSummary.SummaryListBoxStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummary.Target">
      <summary>Gets or sets the <see cref="T:System.Windows.UIElement" /> for which validation errors will be displayed in the summary.</summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> for which validation errors will be displayed in the summary. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.ValidationSummary.TargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ValidationSummary.Target" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ValidationSummary.Target" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationSummaryFilters">
      <summary>Specifies the types of errors displayed in an <see cref="T:System.Windows.Controls.ValidationSummary" /> control.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationSummaryFilters.None">
      <summary>No errors are displayed.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationSummaryFilters.ObjectErrors">
      <summary>Only object level errors are displayed.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationSummaryFilters.PropertyErrors">
      <summary>Only property level errors are displayed.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationSummaryFilters.All">
      <summary>All errors are displayed. </summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationSummaryItem">
      <summary>Represents an individual validation error.</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationSummaryItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationSummaryItem" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationSummaryItem.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationSummaryItem" /> class with the specified error message.</summary>
      <param name="message">The text of the error message.</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationSummaryItem.#ctor(System.String,System.String,System.Windows.Controls.ValidationSummaryItemType,System.Windows.Controls.ValidationSummaryItemSource,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationSummaryItem" /> class with the specified error message, header, item type, source, and context.</summary>
      <param name="message">The text of the error message.</param>
      <param name="messageHeader">The header of the item, such as the property name.</param>
      <param name="itemType">Specifies whether the error originated from an object or a property.</param>
      <param name="source">The source of the error message, including the originating control or property name.</param>
      <param name="context">The context in which the error occurred.</param>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummaryItem.Context">
      <summary>Gets or sets the object that is the context in which the error occurred.</summary>
      <returns>The object that is the context in which the error occurred, or null if no value is set.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummaryItem.ItemType">
      <summary>Gets a value that specifies whether the error originated from an object or a property.</summary>
      <returns>One of the enumeration values that specifies whether the error originated from an object or a property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummaryItem.Message">
      <summary>Gets or sets the text of the error message.</summary>
      <returns>The text of the error message.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummaryItem.MessageHeader">
      <summary>Gets or sets the text of the error message header.</summary>
      <returns>The text of the error message header.</returns>
    </member>
    <member name="E:System.Windows.Controls.ValidationSummaryItem.PropertyChanged">
      <summary>Occurs when a property value for this <see cref="T:System.Windows.Controls.ValidationSummaryItem" /> changes.</summary>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummaryItem.Sources">
      <summary>Gets the sources of the validation errors.</summary>
      <returns>A collection of <see cref="T:System.Windows.Controls.ValidationSummaryItemSource" /> objects that represent the sources of validation errors.</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationSummaryItem.ToString">
      <summary>The string representation of this <see cref="T:System.Windows.Controls.ValidationSummaryItem" />.</summary>
      <returns>The string representation of this <see cref="T:System.Windows.Controls.ValidationSummaryItem" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationSummaryItemSource">
      <summary>Represents the source of a <see cref="T:System.Windows.Controls.ValidationSummaryItem" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationSummaryItemSource.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationSummaryItemSource" /> class with the specified property associated with this error.</summary>
      <param name="propertyName">The name of the property associated with this error.</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationSummaryItemSource.#ctor(System.String,System.Windows.Controls.Control)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationSummaryItemSource" /> class with the specified property and control associated with this error.</summary>
      <param name="propertyName">The name of the property associated with this error.</param>
      <param name="control">The control associated with this error.</param>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummaryItemSource.Control">
      <summary>Gets the control that is the source of this error.</summary>
      <returns>The control that is the source of this error.</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationSummaryItemSource.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Windows.Controls.ValidationSummaryItemSource" /> is equal to the current <see cref="T:System.Windows.Controls.ValidationSummaryItemSource" />.</summary>
      <returns>true if the specified <see cref="T:System.Windows.Controls.ValidationSummaryItemSource" /> is equal to the current <see cref="T:System.Windows.Controls.ValidationSummaryItemSource" />; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.Windows.Controls.ValidationSummaryItemSource" /> to compare to the current <see cref="T:System.Windows.Controls.ValidationSummaryItemSource" />.</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationSummaryItemSource.GetHashCode">
      <summary>Returns a hash code based on the <see cref="P:System.Windows.Controls.ValidationSummaryItemSource.PropertyName" /> and the <see cref="P:System.Windows.Controls.ValidationSummaryItemSource.Control" /><see cref="P:System.Windows.FrameworkElement.Name" />.</summary>
      <returns>The hash code for this instance.</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationSummaryItemSource.PropertyName">
      <summary>Gets the name of the property that is the source of this error.</summary>
      <returns>The name of the property that is the source of this error.</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationSummaryItemType">
      <summary>Specifies whether a validation error came from object-level or property-level validation.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationSummaryItemType.ObjectError">
      <summary>The error came from object-level validation.</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationSummaryItemType.PropertyError">
      <summary>The error came from property-level validation.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\system.windows.controls.data.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Controls.Data</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.InvalidEnumArgumentException">
      <summary>The exception that is thrown when you pass an enumeration value that is not valid as a method argument. </summary>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> class without a message.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> with the specified error message. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> class with the specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Int32,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> class with the specified argument name, value, and type. </summary>
      <param name="argumentName">The name of the argument that is not valid.</param>
      <param name="invalidValue">The argument value that is not valid.</param>
      <param name="enumClass">The expected enumeration type.</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.DataGrid" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.#ctor(System.Windows.Controls.DataGrid)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.DataGrid" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the element associated with this <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.DataGrid" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class for the object associated with this <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string value that represents the type of the data grid.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.GetNameCore">
      <summary>Gets the name of the class of the object associated with this <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The text label from the base implementation; otherwise, from the <paramref name="owner" /> value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern interface implementation for this <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridProvider.ColumnCount" />.</summary>
      <returns>The total number of columns in a grid.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IGridProvider.GetItem(System.Int32,System.Int32)" />.</summary>
      <returns>The UI automation provider for the specified cell.</returns>
      <param name="row">The ordinal number of the row of interest.</param>
      <param name="column">The ordinal number of the column of interest.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridProvider.RowCount" />.</summary>
      <returns>The total number of rows in a grid.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontallyScrollable">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontallyScrollable" />.</summary>
      <returns>true if the control can scroll vertically; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontalScrollPercent">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalScrollPercent" />.</summary>
      <returns>The horizontal scroll position as a percentage of the total content area within the control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontalViewSize">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalViewSize" />.</summary>
      <returns>The horizontal size of the viewable region as a percentage of the total content area within the control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IScrollProvider.Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)" />.</summary>
      <param name="horizontalAmount">The horizontal increment specific to the control.</param>
      <param name="verticalAmount">The vertical increment specific to the control.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#SetScrollPercent(System.Double,System.Double)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IScrollProvider.SetScrollPercent(System.Double,System.Double)" />.</summary>
      <param name="horizontalPercent">The horizontal position as a percentage of the content area's total range.</param>
      <param name="verticalPercent">The vertical position as a percentage of the content area's total range.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticallyScrollable">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticallyScrollable" />.</summary>
      <returns>true if the control can scroll vertically; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticalScrollPercent">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticalScrollPercent" />.</summary>
      <returns>The vertical scroll position as a percentage of the total content area within the control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticalViewSize">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticalViewSize" />.</summary>
      <returns>The vertical size of the viewable region as a percentage of the total content area within the control. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple" />.</summary>
      <returns>true if multiple selection is allowed; otherwise, false. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection" />.</summary>
      <returns>A list of UI automation providers. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired" />.</summary>
      <returns>true if selection is required; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ITableProvider.GetColumnHeaders" />.</summary>
      <returns>A collection of UI automation providers. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ITableProvider.GetRowHeaders" />.</summary>
      <returns>A collection of UI automation providers. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ITableProvider.RowOrColumnMajor" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridCellAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.DataGridCell" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.#ctor(System.Windows.Controls.DataGridCell)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridCellAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.DataGridCell" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridCellAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the element associated with this <see cref="T:System.Windows.Automation.Peers.DataGridCellAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class for the object associated with this <see cref="T:System.Windows.Automation.Peers.DataGridCellAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string value that represents the type of the data grid cell.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.Controls.DataGridCell" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridCellAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The text label of the element that is associated with this automation peer.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for this <see cref="T:System.Windows.Automation.Peers.DataGridCellAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.IsKeyboardFocusableCore">
      <summary>Retrieves a value that indicates whether the data grid cell can accept keyboard focus</summary>
      <returns>true if the element can accept keyboard focus; otherwise, false. The default implementation returns true in all cases.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.Column" />.</summary>
      <returns>A zero-based ordinal number that identifies the column containing the cell or item. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan" />.</summary>
      <returns>The number of columns spanned. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid" />.</summary>
      <returns>A UI automation provider that implements the GridPattern control pattern and represents the cell or item container. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.Row" />.</summary>
      <returns>A zero-based ordinal number that identifies the row containing the cell or item. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.RowSpan" />.</summary>
      <returns>The number of rows spanned. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IScrollItemProvider.ScrollIntoView" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected" />.</summary>
      <returns>true if the element is selected; otherwise, false. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection" />. </summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer" />.</summary>
      <returns>The provider that supports <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ITableItemProvider.GetColumnHeaderItems" />.</summary>
      <returns>A collection of UI automation providers.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ITableItemProvider.GetRowHeaderItems" />.</summary>
      <returns>A collection of UI asutomation providers.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridColumnHeader)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> instance to associate with this <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the element associated with this <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class for the object associated with this <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string value that represents the type of the data grid column header.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.GetHelpTextCore">
      <summary>Retrieves a resource that indicates to automation whether sorting is active and sorted by ascending or descending value.</summary>
      <returns>A value that indicates whether sorting is active and sorted by ascending or descending value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The text label of the element that is associated with this automation peer.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> instance that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values that indicates the control pattern.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.IsContentElementCore">
      <summary>Retrieves a value that indicates whether the data grid item contains data that is presented to the user.</summary>
      <returns>true if the element is a content element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IScrollItemProvider.ScrollIntoView" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" />.</summary>
      <returns>true if the element can be moved; otherwise, false. Always returns false.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" />.</summary>
      <returns>true if the element can be resized; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" />.</summary>
      <returns>true if the element can be rotated; otherwise, false. Always returns false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)" />.</summary>
      <param name="x">Absolute screen coordinates of the left side of the control.</param>
      <param name="y">Absolute screen coordinates of the top of the control.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)" />.</summary>
      <param name="width">The new width of the window, in pixels.</param>
      <param name="height">The new height of the window, in pixels.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)" />.</summary>
      <param name="degrees">The number of degrees to rotate the control. A positive number rotates clockwise; a negative number rotates counterclockwise.</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> to associate with the <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the element associated with this <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class for the object associated with this <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string value that represents the type of the <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.IsContentElementCore">
      <summary>Retrieves a value that indicates whether the element contains data that is presented to the user.</summary>
      <returns>true if the element is a content element; otherwise, false. This implementation returns false in all cases.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridDetailsPresenter)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter" /> to associate with the <see cref="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the element associated with this <see cref="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class for the object associated with this <see cref="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string value that represents the type of the <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer.IsContentElementCore">
      <summary>Retrieves a value that indicates whether the element contains data that is presented to the user.</summary>
      <returns>true if the element is a content element; otherwise, false. By default, returns false in all cases.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer.IsControlElementCore">
      <summary>Retrieves a value that indicates whether the element is understood by the user as interactive or as contributing to the logical structure of the control in the GUI.</summary>
      <returns>true if the element is a control; otherwise, false. By default, returns true in all cases.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer">
      <summary>Exposes the groups of items in <see cref="T:System.Windows.Data.CollectionViewGroup" /> views of a <see cref="T:System.Windows.Controls.DataGrid" /> to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.#ctor(System.Windows.Data.CollectionViewGroup,System.Windows.Controls.DataGrid)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer" /> class.</summary>
      <param name="group">The data grid item group to associate with this peer.</param>
      <param name="dataGrid">The <see cref="T:System.Windows.Controls.DataGrid" /> that contains this item.</param>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <paramref name="item" /> or <paramref name="dataGrid" /> are null.</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetAcceleratorKeyCore">
      <summary>Retrieves the accelerator key combinations for the item group. </summary>
      <returns>The accelerator key for the item group.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetAccessKeyCore">
      <summary>Retrieves the access key for the item group.</summary>
      <returns>The access key for the item group.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>Retrieves the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the item group associated with this <see cref="T:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetAutomationIdCore">
      <summary>Retrieves the string that uniquely identifies the group of items to UI automation.</summary>
      <returns>The automation identifier for the item group.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetBoundingRectangleCore">
      <summary>Retrieves the object that represents the bounding box in screen coordinates of the group of items.</summary>
      <returns>The bounding rectangle.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetChildrenCore">
      <summary>Retrieves the collection of child elements that are represented in the UI automation tree as immediate child elements of the automation peer.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class for the object associated with this <see cref="T:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string value that represents the type of the associated owner class.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetClickablePointCore">
      <summary>Retrieves the point on the group of items that responds to a mouse click.</summary>
      <returns>A point in the clickable area of the element.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetHelpTextCore">
      <summary>Retrieves text that describes the functionality of the group of items.</summary>
      <returns>The help text.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetItemStatusCore">
      <summary>Retrieves text that conveys the visual status of the group of items.</summary>
      <returns>A string value that describes a visual status.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetItemTypeCore">
      <summary>Retrieves a value that describes what kind of item the group of items represents.</summary>
      <returns>A string value that describes the kind of item, such as "Mail Message", "Contact", or "Document".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetLabeledByCore">
      <summary>Retrieves  the automation peer for the element designated as the label for the group of items.</summary>
      <returns>The object that exposes the element designated as the label to UI automation.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetLocalizedControlTypeCore">
      <summary>Retrieves a localized string that represents the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the group of items.</summary>
      <returns>The type of the control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetNameCore">
      <summary>Gets the text label of the data grid item that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The text label of the element that is associated with this automation peer.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetOrientationCore">
      <summary>Retrieves a value that indicates the explicit control orientation, if any.</summary>
      <returns>The orientation of the control, as a value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the item groups of the <see cref="T:System.Windows.Controls.DataGrid" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.HasKeyboardFocusCore">
      <summary>Retrieves a value that indicates whether the group of items currently has keyboard focus.</summary>
      <returns>true if the element has keyboard focus; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.IsContentElementCore">
      <summary>Retrieves a value that indicates whether the group of items contains data that is presented to the user.</summary>
      <returns>true if the element is a content element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.IsControlElementCore">
      <summary>Retrieves a value that indicates whether the group of items is understood by the user as interactive, or as contributing to the logical structure of the UI.</summary>
      <returns>true if the element is a control; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.IsEnabledCore">
      <summary>Retrieves a value that indicates whether the group of items supports interaction.</summary>
      <returns>true if the element supports interaction; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.IsKeyboardFocusableCore">
      <summary>Retrieves a value that indicates whether the group of items can accept keyboard focus.</summary>
      <returns>true if the element can accept keyboard focus; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.IsOffscreenCore">
      <summary>Retrieves a value that indicates whether the data grid item is off the screen.</summary>
      <returns>true if the element is not on the screen; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.IsPasswordCore">
      <summary>Retrieves a value that indicates whether the group of items contains sensitive content.</summary>
      <returns>true if the element contains sensitive content, such as a password; otherwise, false</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.IsRequiredForFormCore">
      <summary>Retrieves  a value that indicates whether the group of items must be completed on a form.</summary>
      <returns>true if the element must be completed; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.SetFocusCore">
      <summary>Sets the keyboard focus on the data grid item.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Expand" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState" />.</summary>
      <returns>The state (expanded or collapsed) of the control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridProvider.ColumnCount" />.</summary>
      <returns>The total number of columns in a grid.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IGridProvider.GetItem(System.Int32,System.Int32)" />.</summary>
      <returns>The UI automation provider for the specified cell.</returns>
      <param name="row">The ordinal number of the row that contains the cell.</param>
      <param name="column">The ordinal number of the column that contains the cell.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridProvider.RowCount" />.</summary>
      <returns>The total number of rows in a grid.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IScrollItemProvider.ScrollIntoView" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple" />.</summary>
      <returns>true if multiple selection is allowed; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection" />.</summary>
      <returns>A list of UI automation providers. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridGroupItemAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired" />.</summary>
      <returns>true if selection is required; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer">
      <summary>Exposes items in the <see cref="T:System.Windows.Controls.DataGrid" /> to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.#ctor(System.Object,System.Windows.Controls.DataGrid)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer" /> class.</summary>
      <param name="item">The data grid item to associate with this peer.</param>
      <param name="dataGrid">The <see cref="T:System.Windows.Controls.DataGrid" /> that contains this item.</param>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <paramref name="item" /> or <paramref name="dataGrid" /> are null.</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetAcceleratorKeyCore">
      <summary>Retrieves the accelerator key combinations for the item.</summary>
      <returns>The accelerator key for the item.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetAccessKeyCore">
      <summary>Retrieves  the access key for the item.</summary>
      <returns>The access key for the item.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the element associated with this <see cref="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetAutomationIdCore">
      <summary>Retrieves the string that uniquely identifies the data grid item to UI automation.</summary>
      <returns>The identifier string.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetBoundingRectangleCore">
      <summary>Retrieves  the object that represents the screen coordinates of the data grid item.</summary>
      <returns>The bounding rectangle.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetChildrenCore">
      <summary>Retrieves  the collection of child elements that are represented in the UI automation tree as immediate child elements of the automation peer.</summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class for the object associated with this <see cref="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string value that represents the type of the data grid item.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetClickablePointCore">
      <summary>Retrieves the point on the data grid item that responds to a mouse click.</summary>
      <returns>A point in the clickable area of the element.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetHelpTextCore">
      <summary>Retrieves text that describes the functionality of the data grid item.</summary>
      <returns>The help text.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetItemStatusCore">
      <summary>Retrieves text that conveys the visual status of the data grid item.</summary>
      <returns>A string value that describes the status, such as "Busy" or "Online".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetItemTypeCore">
      <summary>Retrieves  a value that describes what kind of item the data grid item represents.</summary>
      <returns>A string value that describes the kind of item, such as "Mail Message", "Contact", and "Document".</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetLabeledByCore">
      <summary>Retrieves  the automation peer for the element designated as the label for the data grid item.</summary>
      <returns>The object that exposes the element designated as the label to UI automation.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetLocalizedControlTypeCore">
      <summary>Retrieves  a localized string that represents the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the data grid item.</summary>
      <returns>The type of the control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetNameCore">
      <summary>Gets the text label of the data grid item that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The text label of the element that is associated with this automation peer.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetOrientationCore">
      <summary>Retrieves a value that indicates the explicit control orientation, if any.</summary>
      <returns>The orientation of the control as a value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the item of the <see cref="T:System.Windows.Controls.DataGrid" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.HasKeyboardFocusCore">
      <summary>Retrieves  a value that indicates whether the data grid item currently has keyboard focus.</summary>
      <returns>true if the element has keyboard focus; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.IsContentElementCore">
      <summary>Retrieves a value that indicates whether the data grid item contains data that is presented to the user.</summary>
      <returns>true if the element is a content element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.IsControlElementCore">
      <summary>Retrieves a value that indicates whether the data grid item is understood by the user as interactive or as contributing to the logical structure of the UI.</summary>
      <returns>true if the element is a control; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.IsEnabledCore">
      <summary>Retrieves a value that indicates whether the data grid item supports interaction.</summary>
      <returns>true if the element supports interaction; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.IsKeyboardFocusableCore">
      <summary>Retrieves a value that indicates whether the data grid item can accept keyboard focus.</summary>
      <returns>true if the element can accept keyboard focus; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.IsOffscreenCore">
      <summary>Retrieves  a value that indicates whether the data grid item is off the screen.</summary>
      <returns>true if the element is not on the screen; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.IsPasswordCore">
      <summary>Retrieves a value that indicates whether the data grid item contains sensitive content.</summary>
      <returns>true if the element contains sensitive content, such as a password; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.IsRequiredForFormCore">
      <summary>Retrieves  a value that indicates whether the data grid item must be completed on a form.</summary>
      <returns>true if the element must be completed; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.SetFocusCore">
      <summary>Sets keyboard focus on the data grid item.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IScrollItemProvider.ScrollIntoView" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected" />.</summary>
      <returns>true if the element is selected; otherwise, false. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer" />.</summary>
      <returns>The provider that supports <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple" />.</summary>
      <returns>true if multiple selection is allowed; otherwise, false. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection" />.</summary>
      <returns>A list of UI automation providers. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired" />.</summary>
      <returns>true if multiple selection is required; otherwise, false. </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer">
      <summary>Exposes the <see cref="T:System.Windows.Controls.DataGridRow" /> types to UI automation. </summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowAutomationPeer.#ctor(System.Windows.Controls.DataGridRow)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.DataGridRow" /> to associate with the <see cref="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the element associated with this <see cref="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class for the object associated with this <see cref="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string value that represents the type of the <see cref="T:System.Windows.Controls.DataGridRow" /> owner.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridRowGroupHeaderAutomationPeer">
      <summary>Exposes the items in <see cref="T:System.Windows.Controls.DataGridRowGroupHeader" /> item types to UI automation. </summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowGroupHeaderAutomationPeer.#ctor(System.Windows.Controls.DataGridRowGroupHeader)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridRowGroupHeaderAutomationPeer" /> class.</summary>
      <param name="owner">The row group header to associate with this peer.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowGroupHeaderAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the element associated with this <see cref="T:System.Windows.Automation.Peers.DataGridRowGroupHeaderAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowGroupHeaderAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class for the object associated with this <see cref="T:System.Windows.Automation.Peers.DataGridRowGroupHeaderAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string value that represents the type of the <see cref="T:System.Windows.Controls.DataGridRowGroupHeader" /> owner.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> types to UI automation. </summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridRowHeader)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the element associated with this <see cref="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class for the object associated with this <see cref="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string value that represents the type of the <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> owner.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The text label of the element that is associated with this automation peer.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer.IsContentElementCore">
      <summary>Retrieves a value that indicates whether the element contains data that is presented to the user.</summary>
      <returns>true if the element is a content element; otherwise, false. This implementation returns false in all cases.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridRowsPresenterAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.DataGridRowsPresenter" /> types to UI automation. </summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowsPresenterAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridRowsPresenter)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataGridRowsPresenterAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.DataGridRowsPresenter" /> instance to associate with this <see cref="T:System.Windows.Automation.Peers.DataGridRowsPresenterAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowsPresenterAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the element associated with this <see cref="T:System.Windows.Automation.Peers.DataGridRowsPresenterAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowsPresenterAutomationPeer.GetChildrenCore">
      <summary>Retrieves the collection of child elements that are represented in the UI automation tree as immediate child elements of the automation peer.</summary>
      <returns>The collection of child elements. May be an empty list if there is no associated owner.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowsPresenterAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class for the object associated with this <see cref="T:System.Windows.Automation.Peers.DataGridRowsPresenterAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string value that represents the type of the <see cref="T:System.Windows.Controls.Primitives.DataGridRowsPresenter" /> owner.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowsPresenterAutomationPeer.IsContentElementCore">
      <summary>Retrieves a value that indicates whether the element contains data that is presented to the user.</summary>
      <returns>true if the element is a content element; otherwise, false. This implementation returns false in all cases.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataPagerAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.DataPager" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.#ctor(System.Windows.Controls.DataPager)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DataPagerAutomationPeer" /> class. </summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.DataPager" /> to associate with this <see cref="T:System.Windows.Automation.Peers.DataPagerAutomationPeer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the element associated with this <see cref="T:System.Windows.Automation.Peers.DataPagerAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class for the object associated with this <see cref="T:System.Windows.Automation.Peers.DataPagerAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string value that represents the type of the <see cref="T:System.Windows.Controls.DataPager" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.GetClickablePointCore">
      <summary>Retrieves the <see cref="T:System.Windows.Point" /> object that represents the clickable space of the paging element.</summary>
      <returns>The object that represents the clickable space of the paging element.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.Controls.DataPager" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DataPagerAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The text label of the element that is associated with this automation peer.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.DataPager" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DataPagerAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataPagerAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly" />.</summary>
      <returns>true if the data pager control allows page changes; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataPagerAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#LargeChange">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />.</summary>
      <returns>The large-change value that is supported by the control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataPagerAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Maximum">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />.</summary>
      <returns>The maximum page number value that is supported by the data pager control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataPagerAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Minimum">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />.</summary>
      <returns>The minimum page number value that is supported by the data pager control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataPagerAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)" />.</summary>
      <param name="value">The value to set.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataPagerAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SmallChange">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />.</summary>
      <returns>The small-change value supported by the control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataPagerAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Value">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" />.</summary>
      <returns>The page number value of the associated data pager control.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGrid">
      <summary>Displays data in a customizable grid.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGrid" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.AlternatingRowBackground">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that is used to paint the background of odd-numbered rows.</summary>
      <returns>The brush that is used to paint the background of odd-numbered rows. The default is a <see cref="T:System.Windows.Media.SolidColorBrush" /> with a <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> value of white (ARGB value #00FFFFFF).</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.AlternatingRowBackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.AlternatingRowBackground" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.AlternatingRowBackground" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.AreRowDetailsFrozen">
      <summary>Gets or sets a value that indicates whether the row details sections remain fixed at the width of the display area or can scroll horizontally.</summary>
      <returns>true if the row details sections are prevented from scrolling horizontally; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.AreRowDetailsFrozenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.AreRowDetailsFrozen" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.AreRowDetailsFrozen" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.AreRowGroupHeadersFrozen">
      <summary>Gets or sets a value that indicates whether the row group header sections remain fixed at the width of the display area or can scroll horizontally.</summary>
      <returns>true if the row group headers are prevented from scrolling horizontally; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.AreRowGroupHeadersFrozenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.AreRowGroupHeadersFrozen" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.AreRowGroupHeadersFrozen" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>The actual size used by the <see cref="T:System.Windows.Controls.DataGrid" />.</returns>
      <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.AutoGenerateColumns">
      <summary>Gets or sets a value that indicates whether columns are created automatically when the <see cref="P:System.Windows.Controls.DataGrid.ItemsSource" /> property is set.</summary>
      <returns>true if columns are generated automatically; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.AutoGenerateColumnsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.AutoGenerateColumns" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.AutoGenerateColumns" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn">
      <summary>Occurs one time for each public, non-static property in the bound data type when the <see cref="P:System.Windows.Controls.DataGrid.ItemsSource" /> property is changed and the <see cref="P:System.Windows.Controls.DataGrid.AutoGenerateColumns" /> property is true. </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.BeginEdit">
      <summary>Causes the data grid to enter editing mode for the current cell and current row, unless the data grid is already in editing mode.</summary>
      <returns>true if the data grid enters editing mode; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.BeginEdit(System.Windows.RoutedEventArgs)">
      <summary>Causes the data grid to enter editing mode for the current cell and current row in the specified keyboard and mouse state.</summary>
      <returns>true if the data grid enters editing mode; otherwise, false.</returns>
      <param name="editingEventArgs">Provides information about the keyboard or mouse gesture that prompted the method call. Can be null.</param>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.BeginningEdit">
      <summary>Occurs before a cell or row enters editing mode. </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CancelEdit">
      <summary>Causes the data grid to cancel the current edit, restore the original value, and exit editing mode.</summary>
      <returns>true if the cancellation was successful; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CancelEdit(System.Windows.Controls.DataGridEditingUnit)">
      <summary>Causes the data grid to cancel the current edit, restore the original value, and exit editing mode.</summary>
      <returns>true if the operation was successful; otherwise, false.</returns>
      <param name="editingUnit">Specifies whether to cancel editing for a <see cref="F:System.Windows.Controls.DataGridEditingUnit.Row" /> or <see cref="F:System.Windows.Controls.DataGridEditingUnit.Cell" />.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserReorderColumns">
      <summary>Gets or sets a value that indicates whether the user can change the column display order by dragging column headers with the mouse.</summary>
      <returns>true if the user can reorder columns; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserReorderColumnsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.CanUserReorderColumns" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.CanUserReorderColumns" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserResizeColumns">
      <summary>Gets or sets a value that indicates whether the user can adjust column widths using the mouse.</summary>
      <returns>true if the user can resize columns; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserResizeColumnsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.CanUserResizeColumns" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.CanUserResizeColumns" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserSortColumns">
      <summary>Gets or sets a value that indicates whether the user can sort columns by clicking the column header.</summary>
      <returns>true if the user can sort columns; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserSortColumnsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.CanUserSortColumns" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.CanUserSortColumns" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.CellEditEnded">
      <summary>Occurs when a cell edit has been committed or canceled.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.CellEditEnding">
      <summary>Occurs when a cell edit is ending.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CellStyle">
      <summary>Gets or sets the style that is used when rendering the data grid cells.</summary>
      <returns>The style applied to cells. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CellStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.CellStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.CellStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ClipboardCopyMode">
      <summary>Gets or sets a value that indicates how data is copied to the clipboard.</summary>
      <returns>A value that indicates how data is copied to the clipboard.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ClipboardCopyModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.ClipboardCopyMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.ClipboardCopyMode" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CollapseRowGroup(System.Windows.Data.CollectionViewGroup,System.Boolean)">
      <summary>Collapses data grid row groups.</summary>
      <param name="collectionViewGroup">The row group to collapse.</param>
      <param name="collapseAllSubgroups">true to collapse all subgroups of the row group; otherwise, false.</param>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> property of a column changes. </summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnHeaderDragCompleted">
      <summary>Occurs when the user drops a column header that was being dragged using the mouse. </summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnHeaderDragDelta">
      <summary>Occurs one or more times while the user drags a column header using the mouse. </summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnHeaderDragStarted">
      <summary>Occurs when the user begins dragging a column header using the mouse. </summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ColumnHeaderHeight">
      <summary>Gets or sets the height of the column headers row.</summary>
      <returns>The height of the column headers row in pixels. The default is <see cref="F:System.Double.NaN" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">When setting this property, the specified value is less than 4 or greater than 32768.</exception>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ColumnHeaderHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle">
      <summary>Gets or sets the style that is used when rendering the column headers.</summary>
      <returns>The style applied to column headers. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ColumnHeaderStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnReordered">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.DataGrid" /> column has moved to a new position in the display order. </summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnReordering">
      <summary>Occurs before a <see cref="T:System.Windows.Controls.DataGrid" /> column moves to a new position in the display order.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.Columns">
      <summary>Gets a collection that contains all the columns in the control.</summary>
      <returns>The columns in the control.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ColumnWidth">
      <summary>Gets or sets the standard width or automatic sizing mode of columns in the control.</summary>
      <returns>A structure that represents the standard width or automatic sizing mode of columns in the <see cref="T:System.Windows.Controls.DataGrid" />. The default is <see cref="P:System.Windows.Controls.DataGridLength.Auto" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ColumnWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.ColumnWidth" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.ColumnWidth" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CommitEdit">
      <summary>Causes the data grid to commit the current edit to the data source and exit editing mode.</summary>
      <returns>true if the edit was commit successfully; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CommitEdit(System.Windows.Controls.DataGridEditingUnit,System.Boolean)">
      <summary>Causes the data grid to commit the current edit to the data source, and optionally exit editing mode.</summary>
      <returns>true if the operation was successful; otherwise, false.</returns>
      <param name="editingUnit">Specifies whether to commit the edit for a <see cref="F:System.Windows.Controls.DataGridEditingUnit.Row" /> or <see cref="F:System.Windows.Controls.DataGridEditingUnit.Cell" />.</param>
      <param name="exitEditingMode">true to exit editing mode; otherwise, false.</param>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.CopyingRowClipboardContent">
      <summary>Occurs when the row is prepared for a clipboard copy operation.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.CurrentCellChanged">
      <summary>Occurs when a different cell becomes the current cell. </summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CurrentColumn">
      <summary>Gets or sets the column that contains the current cell.</summary>
      <returns>The column that contains the current cell.</returns>
      <exception cref="T:System.ArgumentNullException">When setting this property, the specified value is null.</exception>
      <exception cref="T:System.ArgumentException">When setting this property, the specified column is not in this <see cref="T:System.Windows.Controls.DataGrid" />.</exception>
      <exception cref="T:System.InvalidOperationException">When setting this property, the specified column has a <see cref="P:System.Windows.Controls.DataGridColumn.Visibility" /> property value of <see cref="F:System.Windows.Visibility.Collapsed" />.-or-When changing the value of this property while the control is in editing mode, the edit cannot be committed or reverted.</exception>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CurrentItem">
      <summary>Gets the data item bound to the row that contains the current cell.</summary>
      <returns>The data item bound to the row that contains the current cell.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.DragIndicatorStyle">
      <summary>Gets or sets the style that is used when rendering the drag indicator that is displayed while dragging column headers.</summary>
      <returns>The style applied to column headers.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.DragIndicatorStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.DragIndicatorStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.DragIndicatorStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.DropLocationIndicatorStyle">
      <summary>Gets or sets the style that is used when rendering the column headers.</summary>
      <returns>The style applied to column headers.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.DropLocationIndicatorStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.DropLocationIndicatorStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.DropLocationIndicatorStyle" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ExpandRowGroup(System.Windows.Data.CollectionViewGroup,System.Boolean)">
      <summary>Expands data grid row groups.</summary>
      <param name="collectionViewGroup">The data in the row group.</param>
      <param name="expandAllSubgroups">true to expand all subgroups of the row group; otherwise, false.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.FrozenColumnCount">
      <summary>Gets or sets the number of columns that the user cannot scroll horizontally.</summary>
      <returns>The number of non-scrolling columns. </returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.FrozenColumnCountProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.FrozenColumnCount" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.FrozenColumnCount" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.GetGroupFromItem(System.Object,System.Int32)">
      <summary>Gets the row group that the specified item belongs to.</summary>
      <returns>The row group that the specified item belongs to.</returns>
      <param name="item">The item to find the group for.</param>
      <param name="groupLevel">The group sub level that the item is in.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.GridLinesVisibility">
      <summary>Gets or sets a value that indicates which grid lines separating inner cells are shown.</summary>
      <returns>One of the enumeration values indicating which grid lines are shown. The default is <see cref="F:System.Windows.Controls.DataGridGridLinesVisibility.All" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.GridLinesVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.GridLinesVisibility" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.GridLinesVisibility" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HeadersVisibility">
      <summary>Gets or sets a value that indicates the visibility of row and column headers.</summary>
      <returns>One of the enumeration values that indicates the visibility of row and column headers. The default is <see cref="F:System.Windows.Controls.DataGridHeadersVisibility.Column" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.HeadersVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.HeadersVisibility" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.HeadersVisibility" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HorizontalGridLinesBrush">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that is used to paint grid lines separating rows.</summary>
      <returns>The brush that is used to paint horizontal grid lines. The default is a <see cref="T:System.Windows.Media.SolidColorBrush" /> with a <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> value of opaque grey (ARGB value #FFDFE3E6).</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.HorizontalGridLinesBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.HorizontalGridLinesBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.HorizontalGridLinesBrush" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibility">
      <summary>Gets or sets a value that indicates how the horizontal scroll bar is displayed.</summary>
      <returns>One of the enumeration values that specifies the horizontal scroll bar visibility. The default is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibility" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibility" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.IsReadOnly">
      <summary>Gets or sets a value that indicates whether the user can edit the values in the control.</summary>
      <returns>true if the control is read-only; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">When setting this property to true while the control is in editing mode, the edit cannot be committed or reverted. </exception>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.IsReadOnlyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.IsReadOnly" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.IsReadOnly" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.IsValid">
      <summary>Gets a value that indicates whether data in the grid is valid.</summary>
      <returns>true if the data is valid; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.IsValidProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.IsValid" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.IsValid" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ItemsSource">
      <summary>Gets or sets a collection that is used to generate the content of the control.</summary>
      <returns>The collection that is used to generate the content of the control. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ItemsSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.ItemsSource" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.ItemsSource" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.LoadingRow">
      <summary>Occurs after a <see cref="T:System.Windows.Controls.DataGridRow" /> is instantiated, so that you can customize it before it is used.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.LoadingRowDetails">
      <summary>Occurs when a new row details template is applied to a row, so that you can customize the details section before it is used.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.LoadingRowGroup">
      <summary>Occurs when a row group header is loading, so that you can customize the header before it is used.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.MaxColumnWidth">
      <summary>Gets or sets the maximum width of columns in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>The maximum column width in pixels. The default is <see cref="F:System.Double.PositiveInfinity" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">When setting this property, the specified value is less than zero or less than <see cref="P:System.Windows.Controls.DataGrid.MinColumnWidth" />.</exception>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.MaxColumnWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.MaxColumnWidth" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.MaxColumnWidth" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.MeasureOverride(System.Windows.Size)">
      <summary>Measures the children of a <see cref="T:System.Windows.Controls.DataGrid" /> in preparation of arranging them during the <see cref="M:System.Windows.Controls.DataGrid.ArrangeOverride(System.Windows.Size)" /> pass. </summary>
      <returns>The size that the <see cref="T:System.Windows.Controls.DataGrid" /> determines it needs during layout, based on its calculations of child object allotted sizes.</returns>
      <param name="availableSize">The available size that this element can give to child elements. Indicates an upper limit that child elements should not exceed.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.MinColumnWidth">
      <summary>Gets or sets the minimum width of columns in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>The minimum column width in pixels. The default is 20.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">When setting this property, the specified value is less than zero or greater than <see cref="P:System.Windows.Controls.DataGrid.MaxColumnWidth" />.</exception>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.MinColumnWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.MinColumnWidth" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.MinColumnWidth" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.DataGrid" /> control when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnAutoGeneratingColumn(System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnBeginningEdit(System.Windows.Controls.DataGridBeginningEditEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.BeginningEdit" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCellEditEnded(System.Windows.Controls.DataGridCellEditEndedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.CellEditEnded" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCellEditEnding(System.Windows.Controls.DataGridCellEditEndingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.CellEditEnding" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnDisplayIndexChanged(System.Windows.Controls.DataGridColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged" /> event. </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnReordered(System.Windows.Controls.DataGridColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.ColumnReordered" /> event. </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnReordering(System.Windows.Controls.DataGridColumnReorderingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.ColumnReordering" /> event. </summary>
      <param name="e">The event data. </param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCopyingRowClipboardContent(System.Windows.Controls.DataGridRowClipboardEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.CopyingRowClipboardContent" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Controls.DataGridRowClipboardEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" /> for the <see cref="T:System.Windows.Controls.DataGrid" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCurrentCellChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.CurrentCellChanged" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnLoadingRow(System.Windows.Controls.DataGridRowEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.LoadingRow" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnLoadingRowDetails(System.Windows.Controls.DataGridRowDetailsEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.LoadingRowDetails" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnLoadingRowGroup(System.Windows.Controls.DataGridRowGroupHeaderEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.LoadingRowGroup" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseWheel" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnPreparingCellForEdit(System.Windows.Controls.DataGridPreparingCellForEditEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.PreparingCellForEdit" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnRowDetailsVisibilityChanged(System.Windows.Controls.DataGridRowDetailsEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnRowEditEnded(System.Windows.Controls.DataGridRowEditEndedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.RowEditEnded" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnRowEditEnding(System.Windows.Controls.DataGridRowEditEndingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.RowEditEnding" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.SelectionChanged" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnUnloadingRow(System.Windows.Controls.DataGridRowEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.UnloadingRow" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnUnloadingRowDetails(System.Windows.Controls.DataGridRowDetailsEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.UnloadingRowDetails" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnUnloadingRowGroup(System.Windows.Controls.DataGridRowGroupHeaderEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DataGrid.UnloadingRowGroup" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.PreparingCellForEdit">
      <summary>Occurs when a cell in a <see cref="T:System.Windows.Controls.DataGridTemplateColumn" /> enters editing mode.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowBackground">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that is used to paint row backgrounds.</summary>
      <returns>The brush that is used to paint row backgrounds. The default is a <see cref="T:System.Windows.Media.SolidColorBrush" /> with a <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> value of semi-opaque light grey (ARGB value #55E9EEF4).</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowBackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowBackground" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.RowBackground" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowDetailsTemplate">
      <summary>Gets or sets the template that is used to display the content of the details section of rows.</summary>
      <returns>The template that is used to display row details. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowDetailsTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplate" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode" /> property value changes.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode">
      <summary>Gets or sets a value that indicates when the details sections of rows are displayed.</summary>
      <returns>An enumeration value that specifies the visibility of row details. The default is <see cref="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.VisibleWhenSelected" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowDetailsVisibilityModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.RowEditEnded">
      <summary>Occurs when a row edit has been committed or canceled.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.RowEditEnding">
      <summary>Occurs when a row edit is ending.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowGroupHeaderStyles">
      <summary>Gets the style that is used when rendering the row group header.</summary>
      <returns>The style applied to row group headers.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderStyle">
      <summary>Gets or sets the style that is used when rendering the row headers.</summary>
      <returns>The style applied to row headers. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowHeaderStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.RowHeaderStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderWidth">
      <summary>Gets or sets the width of the row header column.</summary>
      <returns>The width of the row header column in pixels. The default is <see cref="F:System.Double.NaN" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">When setting this property, the specified value is less than 4 or greater than 32768.</exception>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderWidthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowHeaderWidth" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.RowHeaderWidth" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeight">
      <summary>Gets or sets the standard height of rows in the control.</summary>
      <returns>The standard height of rows in pixels. The default is 22.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">When setting this property, the specified value is greater than 65536.</exception>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.RowHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowStyle">
      <summary>Gets or sets the style that is used when rendering the rows.</summary>
      <returns>The style applied to rows. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.RowStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.RowStyle" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ScrollIntoView(System.Object,System.Windows.Controls.DataGridColumn)">
      <summary>Scrolls the <see cref="T:System.Windows.Controls.DataGrid" /> vertically to display the row for the specified data item and scrolls the <see cref="T:System.Windows.Controls.DataGrid" /> horizontally to display the specified column.</summary>
      <param name="item">The data item (row) to scroll to.</param>
      <param name="column">The column to scroll to.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectedIndex">
      <summary>Gets or sets the index of the current selection.</summary>
      <returns>The index of the current selection, or -1 if the selection is empty.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.SelectedIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.SelectedIndex" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.SelectedIndex" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectedItem">
      <summary>Gets or sets the data item corresponding to the selected row.</summary>
      <returns>The data item corresponding to the selected row.</returns>
      <exception cref="T:System.InvalidOperationException">When setting this property to a new value while the control is in editing mode, the edit cannot be committed or reverted. </exception>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.SelectedItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.SelectedItem" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.SelectedItem" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectedItems">
      <summary>Gets a list that contains the data items corresponding to the selected rows.</summary>
      <returns>A list of the data items corresponding to the selected rows.</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.SelectionChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.DataGrid.SelectedItem" /> or <see cref="P:System.Windows.Controls.DataGrid.SelectedItems" /> property value changes.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectionMode">
      <summary>Gets or sets the selection behavior of the data grid.</summary>
      <returns>One of the enumeration values specifying the selection behavior. The default is <see cref="F:System.Windows.Controls.DataGridSelectionMode.Extended" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.SelectionModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.SelectionMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.SelectionMode" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.UnloadingRow">
      <summary>Occurs when a <see cref="T:System.Windows.Controls.DataGridRow" /> object becomes available for reuse.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.UnloadingRowDetails">
      <summary>Occurs when a row details element becomes available for reuse.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.UnloadingRowGroup">
      <summary>Occurs when a row group is unloading.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.VerticalGridLinesBrush">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that is used to paint grid lines separating columns.</summary>
      <returns>The brush that is used to paint vertical grid lines. The default is a <see cref="T:System.Windows.Media.SolidColorBrush" /> with a <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> value of opaque grey (ARGB value #FFDFE3E6).</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.VerticalGridLinesBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.VerticalGridLinesBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.VerticalGridLinesBrush" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.VerticalScrollBarVisibility">
      <summary>Gets or sets a value that indicates how the vertical scroll bar is displayed.</summary>
      <returns>One of the enumeration values that specifies the vertical scroll bar visibility. The default is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.VerticalScrollBarVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGrid.VerticalScrollBarVisibility" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGrid.VerticalScrollBarVisibility" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn" /> event. </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.#ctor(System.String,System.Type,System.Windows.Controls.DataGridColumn)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs" /> class.</summary>
      <param name="propertyName">The name of the property bound to the generated column.</param>
      <param name="propertyType">The <see cref="T:System.Type" /> of the property bound to the generated column.</param>
      <param name="column">The generated column.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.Column">
      <summary>Gets the generated column.</summary>
      <returns>The generated column.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.PropertyName">
      <summary>Gets the name of the property bound to the generated column.</summary>
      <returns>The name of the property bound to the generated column.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.PropertyType">
      <summary>Gets the <see cref="T:System.Type" /> of the property bound to the generated column.</summary>
      <returns>The <see cref="T:System.Type" /> of the property bound to the generated column.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridBeginningEditEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.BeginningEdit" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridBeginningEditEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.RoutedEventArgs)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridBeginningEditEventArgs" /> class.</summary>
      <param name="column">The column that contains the cell to be edited.</param>
      <param name="row">The row that contains the cell to be edited.</param>
      <param name="editingEventArgs">Information about the user gesture that caused the cell to enter edit mode.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.Column">
      <summary>Gets the column that contains the cell to be edited.</summary>
      <returns>The column that contains the cell to be edited.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.EditingEventArgs">
      <summary>Gets information about the user gesture that caused the cell to enter edit mode.</summary>
      <returns>Information about the user gesture that caused the cell to enter edit mode.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.Row">
      <summary>Gets the row that contains the cell to be edited.</summary>
      <returns>The row that contains the cell to be edited.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridBoundColumn">
      <summary>Represents a <see cref="T:System.Windows.Controls.DataGrid" /> column that can bind to a property in the grid's data source.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridBoundColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridBoundColumn" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.Binding">
      <summary>Gets or sets the binding that associates the column with a property in the data source.</summary>
      <returns>The binding to the column's display property in the data source. The default is null.</returns>
      <exception cref="T:System.InvalidOperationException">When changing the value of this property, the current cell edit cannot be committed or reverted. </exception>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.ClipboardContentBinding">
      <summary>Gets or sets the binding that provides access to cell contents for clipboard operations.</summary>
      <returns>The binding that provides access to cell contents for clipboard operations.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle">
      <summary>Gets or sets the style that is used when rendering the element that the column displays for a cell in editing mode.</summary>
      <returns>The style that is used when rendering an editing element. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle">
      <summary>Gets or sets the style that is used when rendering the element that the column displays for a cell that is not in editing mode.</summary>
      <returns>The style that is used when rendering a display-only element. The default is null.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridCell">
      <summary>Represents an individual <see cref="T:System.Windows.Controls.DataGrid" /> cell.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridCell" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridCell.IsValid">
      <summary>Gets a value that indicates whether the data in a cell is valid.</summary>
      <returns>true if the data is valid; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.IsValidProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridCell.IsValid" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGridCell.IsValid" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnApplyTemplate">
      <summary>Builds the visual tree for the cell control when a new template is applied.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridCellEditEndedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.CellEditEnded" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellEditEndedEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.Controls.DataGridEditAction)">
      <summary>Instantiates a new instance of the <see cref="T:System.Windows.Controls.DataGridCellEditEndedEventArgs" /> class.</summary>
      <param name="column">The column that contains the cell that has just exited edit mode.</param>
      <param name="row">The row that contains the cell that has just exited edit mode.</param>
      <param name="editAction">The <see cref="T:System.Windows.Controls.DataGridEditAction" /> that indicates whether the edit was committed or canceled.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndedEventArgs.Column">
      <summary>Gets the column that contains the cell that has just exited edit mode.</summary>
      <returns>The column that contains the cell that has just exited edit mode.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndedEventArgs.EditAction">
      <summary>Gets the <see cref="T:System.Windows.Controls.DataGridEditAction" /> that indicates whether the edit was committed or canceled.</summary>
      <returns>An enumeration value that indicates whether this edit event was committed or canceled.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndedEventArgs.Row">
      <summary>Gets the row that contains the cell that has just exited edit mode.</summary>
      <returns>The row that contains the cell that has just exited edit mode.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridCellEditEndingEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.CellEditEnding" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellEditEndingEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.FrameworkElement,System.Windows.Controls.DataGridEditAction)">
      <summary>Instantiates a new instance of the <see cref="T:System.Windows.Controls.DataGridCellEditEndingEventArgs" /> class.</summary>
      <param name="column">The column that contains the cell that is about to exit edit mode.</param>
      <param name="row">The row that contains the cell that is about to exit edit mode.</param>
      <param name="editingElement">The element displayed when the cell is in edit mode.</param>
      <param name="editAction">The <see cref="T:System.Windows.Controls.DataGridEditAction" /> that indicates whether the edit will be committed or canceled.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.Column">
      <summary>Gets the column that contains the cell that is about to exit edit mode.</summary>
      <returns>The column that contains the cell that is about to exit edit mode.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.EditAction">
      <summary>Gets the <see cref="T:System.Windows.Controls.DataGridEditAction" /> that indicates whether the edit will be committed or canceled.</summary>
      <returns>An enumeration value that indicates whether this edit event will be committed or canceled.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.EditingElement">
      <summary>Gets the element displayed when the cell is in edit mode.</summary>
      <returns>The element displayed when the cell is in edit mode.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.Row">
      <summary>Gets the row that contains the cell that is about to exit edit mode.</summary>
      <returns>The row that contains the cell that is about to exit edit mode.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridCheckBoxColumn">
      <summary>Represents a <see cref="T:System.Windows.Controls.DataGrid" /> column that hosts <see cref="T:System.Windows.Controls.CheckBox" /> controls in its cells.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridCheckBoxColumn" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>Causes the column cell being edited to revert to the specified value.</summary>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <param name="uneditedValue">The previous, unedited value in the cell being edited.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>Gets a <see cref="T:System.Windows.Controls.CheckBox" /> control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</summary>
      <returns>A new <see cref="T:System.Windows.Controls.CheckBox" /> control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</returns>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>Gets a read-only <see cref="T:System.Windows.Controls.CheckBox" /> control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</summary>
      <returns>A new, read-only <see cref="T:System.Windows.Controls.CheckBox" /> control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</returns>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridCheckBoxColumn.IsThreeState">
      <summary>Gets or sets a value that indicates whether the hosted <see cref="T:System.Windows.Controls.CheckBox" /> controls allow three states or two. </summary>
      <returns>true if the hosted controls support three states; false if they support two states. The default is false. </returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>Called when a cell in the column enters editing mode.</summary>
      <returns>The unedited value. </returns>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <param name="editingEventArgs">Information about the user gesture that is causing a cell to enter editing mode.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>Refreshes the contents of a cell in the column in response to a column property value change.</summary>
      <param name="element">The <see cref="T:System.Windows.Controls.CheckBox" /> returned by the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property of the cell to update.</param>
      <param name="propertyName">The name of the column property that has changed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is not a <see cref="T:System.Windows.Controls.CheckBox" />.</exception>
    </member>
    <member name="T:System.Windows.Controls.DataGridClipboardCellContent">
      <summary>Provides data about <see cref="T:System.Windows.Controls.DataGrid" /> cell content when it is copied to the clipboard.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.#ctor(System.Object,System.Windows.Controls.DataGridColumn,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> class for a cell in the specified row and column with the specified content. </summary>
      <param name="item">The <see cref="T:System.Windows.Controls.DataGrid" /> row item that contains the cell.</param>
      <param name="column">The <see cref="T:System.Windows.Controls.DataGridColumn" /> that contains the cell.</param>
      <param name="content">The contents of the <see cref="T:System.Windows.Controls.DataGrid" /> cell.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridClipboardCellContent.Column">
      <summary>Gets the column that contains the cell being copied to the clipboard.</summary>
      <returns>The column that contains the cell being copied to the clipboard.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridClipboardCellContent.Content">
      <summary>Gets the contents of the cell being copied to the clipboard.</summary>
      <returns>The contents of the cell being copied to the clipboard.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> object.</summary>
      <returns>true if the objects are equal; otherwise, false.</returns>
      <param name="obj">The object to compare to the current object.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.GetHashCode">
      <summary>Returns a hash code for the current <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" />.</summary>
      <returns>Returns a hash code for the current <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridClipboardCellContent.Item">
      <summary>Gets the row item that contains the cell being copied to the clipboard.</summary>
      <returns>The row item that contains the cell being copied to the clipboard.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.op_Equality(System.Windows.Controls.DataGridClipboardCellContent,System.Windows.Controls.DataGridClipboardCellContent)">
      <summary>Compares the two <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> objects for equality.</summary>
      <returns>true if the two <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> objects are equal; otherwise, false.</returns>
      <param name="clipboardCellContent1">A <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> to compare for equality.</param>
      <param name="clipboardCellContent2">A <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> to compare for equality.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.op_Inequality(System.Windows.Controls.DataGridClipboardCellContent,System.Windows.Controls.DataGridClipboardCellContent)">
      <summary>Compares the two <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> objects for inequality.</summary>
      <returns>true if the two <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> objects are not equal; otherwise, false.</returns>
      <param name="clipboardCellContent1">A <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> to compare for inequality.</param>
      <param name="clipboardCellContent2">A <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> to compare for inequality.</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridClipboardCopyMode">
      <summary>Specifies whether content can be copied to the clipboard from a <see cref="T:System.Windows.Controls.DataGrid" /> control. If the content can be copied, specifies whether column headers are copied.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridClipboardCopyMode.None">
      <summary>Indicates that content cannot be copied to the clipboard from the <see cref="T:System.Windows.Controls.DataGrid" /> control.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridClipboardCopyMode.ExcludeHeader">
      <summary>Indicates that content can be copied from a <see cref="T:System.Windows.Controls.DataGrid" /> to the clipboard, but does not copy column headers.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridClipboardCopyMode.IncludeHeader">
      <summary>Indicates that content can be copied from a <see cref="T:System.Windows.Controls.DataGrid" /> to the clipboard and copies column headers as the first line of text.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridColumn">
      <summary>Represents a <see cref="T:System.Windows.Controls.DataGrid" /> column.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridColumn" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.ActualWidth">
      <summary>Gets the current width of the column in pixels.</summary>
      <returns>The width of the column in pixels. Returns 0 if the column has not been added to a <see cref="T:System.Windows.Controls.DataGrid" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>When overridden in a derived class, causes the column cell being edited to revert to the unedited value.</summary>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <param name="uneditedValue">The previous, unedited value in the cell being edited.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CanUserReorder">
      <summary>Gets or sets a value that indicates whether the user can change the column display position by dragging the column header.</summary>
      <returns>true if the user can drag the column header to a new position; otherwise, false. The default is the current <see cref="P:System.Windows.Controls.DataGrid.CanUserReorderColumns" /> property value.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CanUserResize">
      <summary>Gets or sets a value that indicates whether the user can adjust the column width using the mouse.</summary>
      <returns>true if the user can resize the column; false if the user cannot resize the column. The default is the current <see cref="P:System.Windows.Controls.DataGrid.CanUserResizeColumns" /> property value.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CanUserSort">
      <summary>Gets or sets a value that indicates whether the user can sort the column by clicking the column header.</summary>
      <returns>true if the user can sort the column; false if the user cannot sort the column. The default is the current <see cref="P:System.Windows.Controls.DataGrid.CanUserSortColumns" /> property value.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CellStyle">
      <summary>Gets or sets the style that is used when rendering cells in the column.</summary>
      <returns>The style that is used when rendering cells in the column. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.ClipboardContentBinding">
      <summary>Gets or sets the binding that provides access to cell contents for clipboard operations.</summary>
      <returns>The binding that provides access to cell contents for clipboard operations.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.DisplayIndex">
      <summary>Gets or sets the display position of the column relative to the other columns in the <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
      <returns>The zero-based position of the column as it is displayed in the associated <see cref="T:System.Windows.Controls.DataGrid" />. The default is the index of the corresponding <see cref="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" /> in the <see cref="P:System.Windows.Controls.DataGrid.Columns" /> collection.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">When setting this property, the specified value is less than -1 or equal to <see cref="F:System.Int32.MaxValue" />.-or-When setting this property on a column in a <see cref="T:System.Windows.Controls.DataGrid" />, the specified value is less than zero or greater than or equal to the number of columns in the <see cref="T:System.Windows.Controls.DataGrid" />.</exception>
      <exception cref="T:System.InvalidOperationException">When setting this property, the <see cref="T:System.Windows.Controls.DataGrid" /> is already making <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> adjustments. For example, this exception is thrown when you attempt to set <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> in a <see cref="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged" /> event handler.-or-When setting this property, the specified value would result in a frozen column being displayed in the range of unfrozen columns, or an unfrozen column being displayed in the range of frozen columns.</exception>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.DragIndicatorStyle">
      <summary>Gets or sets the style that is used to render the column while it is being dragged.</summary>
      <returns>The style applied while the column is being dragged.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>When overridden in a derived class, gets an editing element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</summary>
      <returns>A new editing element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</returns>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>When overridden in a derived class, gets a read-only element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</summary>
      <returns>A new, read-only element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</returns>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GetCellContent(System.Object)">
      <summary>Gets the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property value for the cell at the intersection of this column and the row that represents the specified data item.</summary>
      <returns>The cell content. Returns null if the row containing <paramref name="dataItem" /> is not found.</returns>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataItem" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">This column has not been added to a <see cref="T:System.Windows.Controls.DataGrid" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GetCellContent(System.Windows.Controls.DataGridRow)">
      <summary>Gets the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property value for the cell at the intersection of this column and the specified row.</summary>
      <returns>The cell content.</returns>
      <param name="dataGridRow">The row that contains the intended cell.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataGridRow" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">This column has not been added to a <see cref="T:System.Windows.Controls.DataGrid" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GetColumnContainingElement(System.Windows.FrameworkElement)">
      <summary>Returns the column that contains the specified element.</summary>
      <returns>The column that contains the element, or null if the element was not found.</returns>
      <param name="element">An element contained in a column.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.Header">
      <summary>Gets or sets the content of the column header.</summary>
      <returns>The column header content. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.HeaderStyle">
      <summary>Gets or sets the style that is used when rendering the column header.</summary>
      <returns>The style that is used when rendering the column header, or null to use the <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle" /> setting. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.IsAutoGenerated">
      <summary>Gets a value that indicates whether the column is auto-generated.</summary>
      <returns>true if the column is auto-generated; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.IsFrozen">
      <summary>Gets a value that indicates whether the column is prevented from scrolling horizontally.</summary>
      <returns>true if the column cannot be scrolled horizontally; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.IsReadOnly">
      <summary>Gets or sets a value that indicates whether cells in the column can be edited.</summary>
      <returns>true if cells in the column cannot be edited; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">When setting this property to false on a column derived from <see cref="T:System.Windows.Controls.DataGridBoundColumn" />, the column <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property indicates a data source that is read-only.-or-When setting this property to true on a column with a cell that is in edit mode, the cell edit cannot be committed or reverted. </exception>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.MaxWidth">
      <summary>Gets or sets the maximum column width in pixels.</summary>
      <returns>The maximum column width in pixels. The default is <see cref="F:System.Double.PositiveInfinity" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">When setting this property, the specified value is less than 0.-or-The specified value is less than the <see cref="P:System.Windows.Controls.DataGridColumn.MinWidth" />.-or-The specified value is less than the <see cref="P:System.Windows.Controls.DataGrid.MinColumnWidth" /> and the <see cref="P:System.Windows.Controls.DataGridColumn.MinWidth" /> is not set.</exception>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.MinWidth">
      <summary>Gets or sets the minimum column width in pixels.</summary>
      <returns>The minimum column width in pixels, or 0 if the value is not set. The default is 0.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">When setting this property, the specified value is less than 0.-or-The specified value is greater than the <see cref="P:System.Windows.Controls.DataGridColumn.MaxWidth" />.-or-The specified value is greater than the <see cref="P:System.Windows.Controls.DataGrid.MaxColumnWidth" /> and the <see cref="P:System.Windows.Controls.DataGridColumn.MaxWidth" /> is not set.</exception>
      <exception cref="T:System.ArgumentException">The specified value is <see cref="F:System.Double.NaN" />.-or-The specified value is <see cref="F:System.Double.PositiveInfinity" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.NotifyPropertyChanged(System.String)">
      <summary>Called by a specific column type when one of its properties changes and its current cells need to be updated.</summary>
      <param name="propertyName">The name of the column property that has changed.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>When overridden in a derived class, called when a cell in the column enters editing mode.</summary>
      <returns>The unedited value.</returns>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <param name="editingEventArgs">Information about the user gesture that is causing a cell to enter editing mode.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>Refreshes the contents of a cell in the column in response to a column property value change.</summary>
      <param name="element">The element returned by the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property of the cell to refresh.</param>
      <param name="propertyName">The name of the column property that has changed.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.SortMemberPath">
      <summary>Gets or sets a property name, or a period-delimited hierarchy of property names, that indicates the member to sort by.</summary>
      <returns>The path to the data-item member to sort by.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.Visibility">
      <summary>Gets or sets the visibility of the column.</summary>
      <returns>An enumeration value that specifies the column visibility. The default is <see cref="F:System.Windows.Visibility.Visible" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.Width">
      <summary>Gets or sets the column width or automatic sizing mode.</summary>
      <returns>A structure that represents the column width or automatic sizing mode. The default is the <see cref="P:System.Windows.Controls.DataGrid.ColumnWidth" /> property value.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridColumnEventArgs">
      <summary>Provides data for <see cref="T:System.Windows.Controls.DataGrid" /> column-related events.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumnEventArgs.#ctor(System.Windows.Controls.DataGridColumn)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridColumnEventArgs" /> class.</summary>
      <param name="column">The column that the event occurs for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnEventArgs.Column">
      <summary>Gets the column that the event occurs for.</summary>
      <returns>The column that the event occurs for.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridColumnReorderingEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.ColumnReordering" /> event. </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumnReorderingEventArgs.#ctor(System.Windows.Controls.DataGridColumn)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridColumnReorderingEventArgs" /> class. </summary>
      <param name="dataGridColumn">The column that is being moved.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnReorderingEventArgs.Column">
      <summary>Gets the column that is being moved.</summary>
      <returns>The column that is being moved.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnReorderingEventArgs.DragIndicator">
      <summary>Gets or sets the template that is used to display the visual indicator of a column header while the user drags it.</summary>
      <returns>The template that is used to display a dragged column header. </returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnReorderingEventArgs.DropLocationIndicator">
      <summary>Gets or sets the template that is used to display the visual indicator of the current drop location during a column drag operation.</summary>
      <returns>The template that is used to display the drop location indicator during a column drag operation. </returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridEditAction">
      <summary>Specifies constants that define what action was taken to end an edit.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditAction.Cancel">
      <summary>The edit was canceled.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditAction.Commit">
      <summary>The edit was committed.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridEditingUnit">
      <summary>Specifies constants that define whether editing is enabled on a cell level or on a row level.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditingUnit.Cell">
      <summary>Cell editing is enabled.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditingUnit.Row">
      <summary>Row editing is enabled.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridGridLinesVisibility">
      <summary>Specifies constants that define which grid lines separating <see cref="T:System.Windows.Controls.DataGrid" /> inner cells are shown.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.None">
      <summary>No grid lines are shown.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.Horizontal">
      <summary>Only horizontal grid lines, which separate rows, are shown.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.Vertical">
      <summary>Only vertical grid lines, which separate columns, are shown.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.All">
      <summary>Both horizontal and vertical grid lines are shown.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridHeadersVisibility">
      <summary>Specifies constants that define which <see cref="T:System.Windows.Controls.DataGrid" /> header cells are displayed. </summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.All">
      <summary>Both column and row header cells are displayed.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.Column">
      <summary>Only column header cells are displayed.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.Row">
      <summary>Only row header cells are displayed.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.None">
      <summary>No header cells are displayed.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridLength">
      <summary>Represents the lengths of elements within the <see cref="T:System.Windows.Controls.DataGrid" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridLength" /> class. </summary>
      <param name="value">The absolute pixel value to initialize the length to.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.#ctor(System.Double,System.Windows.Controls.DataGridLengthUnitType)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridLength" /> class with the specified value and unit type. </summary>
      <param name="value">The value of the <see cref="T:System.Windows.Controls.DataGridLength" />.</param>
      <param name="type">The unit type of the <see cref="T:System.Windows.Controls.DataGridLength" />.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.#ctor(System.Double,System.Windows.Controls.DataGridLengthUnitType,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridLength" /> class with the specified value, unit type, desired value, and display value. </summary>
      <param name="value">The value of the <see cref="T:System.Windows.Controls.DataGridLength" />.</param>
      <param name="type">The unit type of the <see cref="T:System.Windows.Controls.DataGridLength" />.</param>
      <param name="desiredValue">The desired value of the <see cref="T:System.Windows.Controls.DataGridLength" /> if it is not affected by interactions with other <see cref="T:System.Windows.Controls.DataGrid" /> columns.</param>
      <param name="displayValue">The actual value of the <see cref="T:System.Windows.Controls.DataGridLength" /> in pixels.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.Auto">
      <summary>Gets a <see cref="T:System.Windows.Controls.DataGridLength" /> structure that represents the standard automatic sizing mode.</summary>
      <returns>A <see cref="T:System.Windows.Controls.DataGridLength" /> structure that represents the standard automatic sizing mode.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.DesiredValue">
      <summary>The desired value of the <see cref="T:System.Windows.Controls.DataGridLength" /> if it is not affected by interactions with other <see cref="T:System.Windows.Controls.DataGrid" /> columns.</summary>
      <returns>The desired value of the <see cref="T:System.Windows.Controls.DataGridLength" /> if it is not affected by interactions with other <see cref="T:System.Windows.Controls.DataGrid" /> columns.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.DisplayValue">
      <summary>Gets the actual value for a <see cref="T:System.Windows.Controls.DataGridLength" />, in pixels.</summary>
      <returns>The actual value for a <see cref="T:System.Windows.Controls.DataGridLength" />, in pixels.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:System.Windows.Controls.DataGridLength" />.</summary>
      <returns>true if the specified object is a <see cref="T:System.Windows.Controls.DataGridLength" /> with the same value or sizing mode as the current <see cref="T:System.Windows.Controls.DataGridLength" />; otherwise, false.</returns>
      <param name="obj">The object to compare to the current instance.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.Equals(System.Windows.Controls.DataGridLength)">
      <summary>Determines whether the specified <see cref="T:System.Windows.Controls.DataGridLength" /> is equal to the current <see cref="T:System.Windows.Controls.DataGridLength" />.</summary>
      <returns>true if the specified object is a <see cref="T:System.Windows.Controls.DataGridLength" /> with the same value or sizing mode as the current <see cref="T:System.Windows.Controls.DataGridLength" />; otherwise, false.</returns>
      <param name="other">The <see cref="T:System.Windows.Controls.DataGridLength" /> to compare to the current instance.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.GetHashCode">
      <summary>Gets a hash code for the <see cref="T:System.Windows.Controls.DataGridLength" />.</summary>
      <returns>A hash code for the current <see cref="T:System.Windows.Controls.DataGridLength" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsAbsolute">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Controls.DataGridLength" /> instance holds an absolute value.</summary>
      <returns>true if this instance holds an absolute value; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsAuto">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Controls.DataGridLength" /> instance uses the standard automatic sizing mode.</summary>
      <returns>true if this instance uses the standard automatic sizing mode; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsSizeToCells">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Controls.DataGridLength" /> instance uses the cell-based automatic sizing mode.</summary>
      <returns>true if this instance uses the cell-based automatic sizing mode; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsSizeToHeader">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Controls.DataGridLength" /> instance uses the header-based automatic sizing mode.</summary>
      <returns>true if this instance uses the header-based automatic sizing mode; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsStar">
      <summary>Gets a value that indicates whether <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> property is set to <see cref="F:System.Windows.GridUnitType.Star" />.</summary>
      <returns>true if the <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> property is set to <see cref="F:System.Windows.GridUnitType.Star" />; otherwise false.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.op_Equality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)">
      <summary>Compares two <see cref="T:System.Windows.Controls.DataGridLength" /> structures for equality.</summary>
      <returns>true if the two <see cref="T:System.Windows.Controls.DataGridLength" /> instances have the same value or sizing mode; otherwise, false.</returns>
      <param name="gl1">The first <see cref="T:System.Windows.Controls.DataGridLength" /> instance to compare.</param>
      <param name="gl2">The second <see cref="T:System.Windows.Controls.DataGridLength" /> instance to compare.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.op_Inequality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)">
      <summary>Compares two <see cref="T:System.Windows.Controls.DataGridLength" /> structures to determine whether they are not equal.</summary>
      <returns>true if the two <see cref="T:System.Windows.Controls.DataGridLength" /> instances do not have the same value or sizing mode; otherwise, false.</returns>
      <param name="gl1">The first <see cref="T:System.Windows.Controls.DataGridLength" /> instance to compare.</param>
      <param name="gl2">The second <see cref="T:System.Windows.Controls.DataGridLength" /> instance to compare.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.SizeToCells">
      <summary>Gets a <see cref="T:System.Windows.Controls.DataGridLength" /> structure that represents the cell-based automatic sizing mode.</summary>
      <returns>A <see cref="T:System.Windows.Controls.DataGridLength" /> structure that represents the cell-based automatic sizing mode.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.SizeToHeader">
      <summary>Gets a <see cref="T:System.Windows.Controls.DataGridLength" /> structure that represents the header-based automatic sizing mode.</summary>
      <returns>A <see cref="T:System.Windows.Controls.DataGridLength" /> structure that represents the header-based automatic sizing mode.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.UnitType">
      <summary>Gets a value that indicates how the size of the associated <see cref="T:System.Windows.Controls.DataGrid" /> element is calculated.</summary>
      <returns>A value that indicates how the size of the associated <see cref="T:System.Windows.Controls.DataGrid" /> element is calculated.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.Value">
      <summary>Gets the absolute value of the <see cref="T:System.Windows.Controls.DataGridLength" /> in pixels.</summary>
      <returns>The absolute value of the <see cref="T:System.Windows.Controls.DataGridLength" /> in pixels.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridLengthConverter">
      <summary>Converts instances of other types to and from <see cref="T:System.Windows.Controls.DataGridLength" /> instances.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridLengthConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether conversion is possible from the specified type to a <see cref="T:System.Windows.Controls.DataGridLength" />.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An object that provides a format context.</param>
      <param name="sourceType">The type to convert from.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether conversion is possible to the specified type from a <see cref="T:System.Windows.Controls.DataGridLength" />.</summary>
      <returns>true if <paramref name="destinationType" /> is a <see cref="T:System.String" /> type; otherwise, false.</returns>
      <param name="context">An object that provides a format context.</param>
      <param name="destinationType">The type to convert to.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified value to a <see cref="T:System.Windows.Controls.DataGridLength" /> instance.</summary>
      <returns>The converted value.</returns>
      <param name="context">An object that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The value to convert.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified <see cref="T:System.Windows.Controls.DataGridLength" /> instance to an instance of the specified type.</summary>
      <returns>The converted value.</returns>
      <param name="context">An object that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The <see cref="T:System.Windows.Controls.DataGridLength" /> to convert.</param>
      <param name="destinationType">The type to convert the value to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="destinationType" /> is not a <see cref="T:System.String" />.- or -<paramref name="value" /> is not a <see cref="T:System.Windows.Controls.DataGridLength" />.</exception>
    </member>
    <member name="T:System.Windows.Controls.DataGridLengthUnitType">
      <summary>Defines constants that describe how <see cref="T:System.Windows.Controls.DataGrid" /> elements, such as columns, are sized.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.Auto">
      <summary>The unit of measure is based on the size of the cells and the column header.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.Pixel">
      <summary>The unit of measure is expressed in pixels.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.SizeToCells">
      <summary>The unit of measure is based on the size of the cells.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.SizeToHeader">
      <summary>The unit of measure is based on the size of the column header.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.Star">
      <summary>The unit of measure is a weighted proportion of the available space.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridPreparingCellForEditEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.PreparingCellForEdit" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.RoutedEventArgs,System.Windows.FrameworkElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridPreparingCellForEditEventArgs" /> class.</summary>
      <param name="column">The column that contains the cell to be edited.</param>
      <param name="row">The row that contains the cell to be edited.</param>
      <param name="editingEventArgs">Information about the user gesture that caused the cell to enter edit mode.</param>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.Column">
      <summary>Gets the column that contains the cell to be edited.</summary>
      <returns>The column that contains the cell to be edited.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.EditingElement">
      <summary>Gets the element that the column displays for a cell in editing mode.</summary>
      <returns>The element that the column displays for a cell in editing mode.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.EditingEventArgs">
      <summary>Gets information about the user gesture that caused the cell to enter edit mode.</summary>
      <returns>Information about the user gesture that caused the cell to enter edit mode.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.Row">
      <summary>Gets the row that contains the cell to be edited.</summary>
      <returns>The row that contains the cell to be edited.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRow">
      <summary>Represents a <see cref="T:System.Windows.Controls.DataGrid" /> row.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridRow" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of the <see cref="T:System.Windows.Controls.DataGridRow" />.</summary>
      <returns>The actual size used by the <see cref="T:System.Windows.Controls.DataGridRow" />.</returns>
      <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.DetailsTemplate">
      <summary>Gets or sets the template that is used to display the details section of the row. </summary>
      <returns>The template that is used to display the row details section or null to use the <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplate" /> setting. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.DetailsTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.DetailsTemplate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGridRow.DetailsTemplate" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.DetailsVisibility">
      <summary>Gets or sets a value that indicates when the details section of the row is displayed.</summary>
      <returns>An enumeration value that specifies the visibility of row details. The default is <see cref="F:System.Windows.Visibility.Collapsed" />.</returns>
      <exception cref="T:System.InvalidOperationException">The row has not been added to a <see cref="T:System.Windows.Controls.DataGrid" />.</exception>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.DetailsVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.GetIndex">
      <summary>Returns the index of the current row.</summary>
      <returns>The index of the current row.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.GetRowContainingElement(System.Windows.FrameworkElement)">
      <summary>Returns the <see cref="T:System.Windows.Controls.DataGridRow" /> that contains the specified element.</summary>
      <returns>The <see cref="T:System.Windows.Controls.DataGridRow" /> that contains the specified element.</returns>
      <param name="element">An element contained in a row to be found.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.Header">
      <summary>Gets or sets the row header.</summary>
      <returns>The row header. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.HeaderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.Header" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGridRow.Header" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.HeaderStyle">
      <summary>Gets or sets the style that is used when rendering the row header.</summary>
      <returns>The style that is used when rendering the row header. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.HeaderStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.HeaderStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGridRow.HeaderStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.IsValid">
      <summary>Gets a value that indicates whether the data in a row is valid.</summary>
      <returns>true if the data is valid; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.IsValidProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRow.IsValid" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGridRow.IsValid" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.MeasureOverride(System.Windows.Size)">
      <summary>Measures the children of a <see cref="T:System.Windows.Controls.DataGridRow" /> to prepare for arranging them during the <see cref="M:System.Windows.Controls.DataGridRow.ArrangeOverride(System.Windows.Size)" /> pass. </summary>
      <returns>The size that the <see cref="T:System.Windows.Controls.DataGridRow" /> determines it needs during layout, based on its calculations of child object allocated sizes.</returns>
      <param name="availableSize">The available size that this element can give to child elements. Indicates an upper limit that child elements should not exceed.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnApplyTemplate">
      <summary>Builds the visual tree for the column header when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer" /> for the <see cref="T:System.Windows.Controls.DataGridRow" /> object.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowClipboardEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.CopyingRowClipboardContent" /> event. </summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.ClipboardRowContent">
      <summary>Gets the cell contents of the row, before the row is copied to the clipboard.</summary>
      <returns>The cell contents of the row, before the row is copied to the clipboard.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.IsColumnHeadersRow">
      <summary>Gets a value that indicates whether the row being copied is the column header row.</summary>
      <returns>true if the row being copied is the column header row; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.Item">
      <summary>Gets the row item that contains the cell content being copied to the clipboard. <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" />. </summary>
      <returns>The row item that contains the cell content being copied to the clipboard. <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" />. </returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowDetailsEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.LoadingRowDetails" />, <see cref="E:System.Windows.Controls.DataGrid.UnloadingRowDetails" />, and <see cref="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged" /> events.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowDetailsEventArgs.#ctor(System.Windows.Controls.DataGridRow,System.Windows.FrameworkElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridRowDetailsEventArgs" /> class. </summary>
      <param name="row">The row that the event occurs for.</param>
      <param name="detailsElement">The row details section as a framework element.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowDetailsEventArgs.DetailsElement">
      <summary>Gets the row details section as a framework element.</summary>
      <returns>The row details section.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowDetailsEventArgs.Row">
      <summary>Gets the row that the event occurs for.</summary>
      <returns>The row that the event occurs for.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowDetailsVisibilityMode">
      <summary>Specifies constants that define when <see cref="T:System.Windows.Controls.DataGrid" /> row details are displayed.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.Collapsed">
      <summary>The row details section is not displayed for any rows.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.Visible">
      <summary>The row details section is displayed for all rows.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.VisibleWhenSelected">
      <summary>The row details section is displayed only for selected rows.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowEditEndedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.RowEditEnded" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowEditEndedEventArgs.#ctor(System.Windows.Controls.DataGridRow,System.Windows.Controls.DataGridEditAction)">
      <summary>Instantiates a new instance of the <see cref="T:System.Windows.Controls.DataGridRowEditEndedEventArgs" /> class.</summary>
      <param name="row">The row that has just exited edit mode.</param>
      <param name="editAction">The <see cref="T:System.Windows.Controls.DataGridEditAction" /> that indicates whether the edit was committed or canceled.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEditEndedEventArgs.EditAction">
      <summary>Gets the <see cref="T:System.Windows.Controls.DataGridEditAction" /> that indicates whether the edit was committed or canceled.</summary>
      <returns>An enumeration value that indicates whether this edit event was committed or canceled.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEditEndedEventArgs.Row">
      <summary>Gets the row that has just exited edit mode.</summary>
      <returns>The row that has just exited edit mode.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowEditEndingEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.RowEditEnding" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowEditEndingEventArgs.#ctor(System.Windows.Controls.DataGridRow,System.Windows.Controls.DataGridEditAction)">
      <summary>Instantiates a new instance of the <see cref="T:System.Windows.Controls.DataGridRowEditEndingEventArgs" /> class.</summary>
      <param name="row">The row that contains the cell that is about to exit edit mode.</param>
      <param name="editAction">The <see cref="T:System.Windows.Controls.DataGridEditAction" /> that indicates whether the edit will be committed or canceled.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEditEndingEventArgs.EditAction">
      <summary>Gets the <see cref="T:System.Windows.Controls.DataGridEditAction" /> that indicates whether the edit will be committed or canceled.</summary>
      <returns>An enumeration value that indicates whether this edit event will be committed or canceled.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEditEndingEventArgs.Row">
      <summary>Gets the row that is about to exit edit mode.</summary>
      <returns>The row that is about to exit edit mode.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowEventArgs">
      <summary>Provides data for <see cref="T:System.Windows.Controls.DataGrid" /> row-related events.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowEventArgs.#ctor(System.Windows.Controls.DataGridRow)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridRowEventArgs" /> class.</summary>
      <param name="dataGridRow">The row that the event occurs for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataGridRow" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEventArgs.Row">
      <summary>Gets the row that the event occurs for.</summary>
      <returns>The row that the event occurs for.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowGroupHeader">
      <summary>Represents the header of a <see cref="T:System.Windows.Controls.DataGrid" /> row group.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowGroupHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridRowGroupHeader" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowGroupHeader.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the contents of the <see cref="T:System.Windows.Controls.DataGridRowGroupHeader" />.</summary>
      <returns>The actual size used by the <see cref="T:System.Windows.Controls.DataGridRowGroupHeader" />.</returns>
      <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowGroupHeader.HeaderStyle">
      <summary>The style applied to the header of a <see cref="T:System.Windows.Controls.DataGrid" /> row group.</summary>
      <returns>The style applied to the row group header.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowGroupHeader.HeaderStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRowGroupHeader.HeaderStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGridRowGroupHeader.HeaderStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowGroupHeader.ItemCountVisibility">
      <summary>Gets or sets a value that indicates whether the item count is visible.</summary>
      <returns>An enumeration value that indicates whether the item count is visible. The default is <see cref="F:System.Windows.Visibility.Visible" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowGroupHeader.ItemCountVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRowGroupHeader.ItemCountVisibility" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGridRowGroupHeader.ItemCountVisibility" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowGroupHeader.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.DataGridRowGroupHeader" /> control when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowGroupHeader.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.DataGridRowGroupHeaderAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.DataGridRowGroupHeaderAutomationPeer" /> for the <see cref="T:System.Windows.Controls.DataGridRowGroupHeader" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowGroupHeader.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Updates the state when the mouse is over the <see cref="T:System.Windows.Controls.DataGridRowGroupHeader" />.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowGroupHeader.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Updates the state when the mouse leaves the <see cref="T:System.Windows.Controls.DataGridRowGroupHeader" />.</summary>
      <param name="e">The data for the event.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowGroupHeader.PropertyName">
      <summary>Gets or sets the name of the property that is used to determine which group an item belongs to.</summary>
      <returns>The name of the property that is used to determine which group an item belongs to.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowGroupHeader.PropertyNameProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRowGroupHeader.PropertyName" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGridRowGroupHeader.PropertyName" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowGroupHeader.PropertyNameVisibility">
      <summary>Gets or sets a value that indicates whether the property name is visible.</summary>
      <returns>An enumeration value that indicates whether the property name is visible. The default is <see cref="F:System.Windows.Visibility.Visible" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowGroupHeader.PropertyNameVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRowGroupHeader.PropertyNameVisibility" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGridRowGroupHeader.PropertyNameVisibility" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowGroupHeader.SublevelIndent">
      <summary>Gets or sets a value that indicates the amount that the immediate children of the <see cref="T:System.Windows.Controls.DataGridRowGroupHeader" /> are indented.</summary>
      <returns>The amount that the immediate children of the <see cref="T:System.Windows.Controls.DataGridRowGroupHeader" /> are indented. The default is 20.</returns>
      <exception cref="T:System.ArgumentException">The specified value is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified value is less than 0.</exception>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowGroupHeader.SublevelIndentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridRowGroupHeader.SublevelIndent" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGridRowGroupHeader.SublevelIndent" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowGroupHeaderEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DataGrid.LoadingRowGroup" /> and <see cref="E:System.Windows.Controls.DataGrid.UnloadingRowGroup" /> events.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowGroupHeaderEventArgs.#ctor(System.Windows.Controls.DataGridRowGroupHeader)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridRowGroupHeaderEventArgs" /> class.</summary>
      <param name="rowGroupHeader">The <see cref="T:System.Windows.Controls.DataGridRowGroupHeader" /> that is being loaded or unloaded.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowGroupHeaderEventArgs.RowGroupHeader">
      <summary>Gets the <see cref="T:System.Windows.Controls.DataGridRowGroupHeader" /> that is being loaded or unloaded.</summary>
      <returns>The <see cref="T:System.Windows.Controls.DataGridRowGroupHeader" /> that is being loaded or unloaded.</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridSelectionMode">
      <summary>Specifies constants that define the <see cref="T:System.Windows.Controls.DataGrid" /> selection modes.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionMode.Extended">
      <summary>The user can select multiple items while holding down the SHIFT or CTRL keys.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionMode.Single">
      <summary>The user can select only one item at a time.</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridTemplateColumn">
      <summary>Represents a <see cref="T:System.Windows.Controls.DataGrid" /> column that hosts template-specified content in its cells.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridTemplateColumn" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>Ends the edit on a data grid cell and reverts any changes.</summary>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <param name="uneditedValue">The value of the data prior to the edit.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate">
      <summary>Gets or sets the template that is used to display the contents of a cell that is in editing mode.</summary>
      <returns>The template that is used to display the contents of a cell that is in editing mode. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate">
      <summary>Gets or sets the template that is used to display the contents of a cell that is not in editing mode. </summary>
      <returns>The template that is used to display the contents of a cell that is not in editing mode. The default is null.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>Gets an element defined by the <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate" /> that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</summary>
      <returns>A new editing element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</returns>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
      <exception cref="T:System.TypeInitializationException">The <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>Gets an element defined by the <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate" /> that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</summary>
      <returns>A new, read-only element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</returns>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
      <exception cref="T:System.TypeInitializationException">The <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>Called when a cell in the column enters editing mode.</summary>
      <returns>null in all cases.</returns>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <param name="editingEventArgs">Information about the user gesture that is causing a cell to enter editing mode.</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridTextColumn">
      <summary>Represents a <see cref="T:System.Windows.Controls.DataGrid" /> column that hosts textual content in its cells.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridTextColumn" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>Causes the column cell being edited to revert to the specified value.</summary>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <param name="uneditedValue">The previous, unedited value in the cell being edited.</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontFamily">
      <summary>Gets or sets the font family of the content of cells in the column.</summary>
      <returns>The font family of the content of cells in the column. The default is null.</returns>
      <exception cref="T:System.NullReferenceException">The <see cref="P:System.Windows.Controls.DataGridTextColumn.FontFamily" /> value has not been set.</exception>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.FontFamilyProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataGridTextColumn.FontFamily" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataGridTextColumn.FontFamily" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontSize">
      <summary>Gets or sets the font size of the content of cells in the column.</summary>
      <returns>The font size of the content of cells in the column. The default is <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontStyle">
      <summary>Gets or sets the font style of the content of cells in the column.</summary>
      <returns>The font style of the content of cells in the column. The default is <see cref="P:System.Windows.FontStyles.Normal" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontWeight">
      <summary>Gets or sets the font weight of the contents of cells in the column.</summary>
      <returns>The font weight of the contents of cells in the column. The default is <see cref="P:System.Windows.FontWeights.Normal" />.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.Foreground">
      <summary>Gets or sets the brush that is used to paint the text contents of cells in the column.</summary>
      <returns>The brush that is used to paint the contents of cells in the column. The default is null.</returns>
      <exception cref="T:System.NullReferenceException">The <see cref="P:System.Windows.Controls.DataGridTextColumn.Foreground" /> value has not been set.</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>Gets a <see cref="T:System.Windows.Controls.TextBox" /> control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</summary>
      <returns>A new <see cref="T:System.Windows.Controls.TextBox" /> control that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</returns>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>Gets a read-only <see cref="T:System.Windows.Controls.TextBlock" /> element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</summary>
      <returns>A new, read-only <see cref="T:System.Windows.Controls.TextBlock" /> element that is bound to the column's <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> property value.</returns>
      <param name="cell">The cell that will contain the generated element.</param>
      <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>Called when a cell in the column enters editing mode.</summary>
      <returns>The unedited value. </returns>
      <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
      <param name="editingEventArgs">Information about the user gesture that is causing a cell to enter editing mode.</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>Refreshes the contents of a cell in the column in response to a column property value change.</summary>
      <param name="element">The <see cref="T:System.Windows.Controls.TextBlock" /> or <see cref="T:System.Windows.Controls.TextBox" /> returned by the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property of the cell to refresh.</param>
      <param name="propertyName">The name of the column property that has changed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is not a <see cref="T:System.Windows.Controls.TextBlock" /> or <see cref="T:System.Windows.Controls.TextBox" />.</exception>
    </member>
    <member name="T:System.Windows.Controls.DataPager">
      <summary>Provides a user interface for paging through a collection of data.</summary>
    </member>
    <member name="M:System.Windows.Controls.DataPager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataPager" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.DataPager.AutoEllipsis">
      <summary>Gets or sets a value that indicates whether to use an ellipsis as the last numeric button.</summary>
      <returns>true if an ellipsis should be used as the last numeric button; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataPager.AutoEllipsisProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataPager.AutoEllipsis" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataPager.AutoEllipsis" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataPager.CanChangePage">
      <summary>Gets a value that indicates whether the user can move to another page.</summary>
      <returns>true if the user can move to another page; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataPager.CanChangePageProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataPager.CanChangePage" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataPager.CanChangePage" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataPager.CanMoveToFirstPage">
      <summary>Gets a value that indicates whether the user can move to the first page.</summary>
      <returns>true if the user can move to the first page; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataPager.CanMoveToFirstPageProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataPager.CanMoveToFirstPage" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataPager.CanMoveToFirstPage" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataPager.CanMoveToLastPage">
      <summary>Gets a value that indicates whether the user can move to the last page.</summary>
      <returns>true if the user can move to the last page; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataPager.CanMoveToLastPageProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataPager.CanMoveToLastPage" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataPager.CanMoveToLastPage" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataPager.CanMoveToNextPage">
      <summary>Gets a value that indicates whether the user can move to the next page.</summary>
      <returns>true if the user can move to the next page; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataPager.CanMoveToNextPageProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataPager.CanMoveToNextPage" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataPager.CanMoveToNextPage" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataPager.CanMoveToPreviousPage">
      <summary>Gets a value that indicates whether the user can move to the previous page.</summary>
      <returns>true if the user can move to the previous page; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataPager.CanMoveToPreviousPageProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataPager.CanMoveToPreviousPage" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataPager.CanMoveToPreviousPage" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataPager.DisplayMode">
      <summary>Gets or sets a value that indicates how the <see cref="T:System.Windows.Controls.DataPager" /> user interface is displayed.</summary>
      <returns>An enumeration value that indicates how the <see cref="T:System.Windows.Controls.DataPager" /> user interface is displayed.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataPager.DisplayModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataPager.DisplayMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataPager.DisplayMode" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataPager.IsTotalItemCountFixed">
      <summary>Gets or sets a value that indicates whether the total number of items in the collection is fixed.</summary>
      <returns>true if the total number of items in the paged collection is fixed; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataPager.IsTotalItemCountFixedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataPager.IsTotalItemCountFixed" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataPager.IsTotalItemCountFixed" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataPager.ItemCount">
      <summary>Gets the current number of known items in the source data collection.</summary>
      <returns>The current number of known items in the source data collection.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataPager.ItemCountProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataPager.ItemCount" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataPager.ItemCount" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataPager.NumericButtonCount">
      <summary>Gets or sets a value that indicates the number of page buttons shown on the <see cref="T:System.Windows.Controls.DataPager" /> user interface.</summary>
      <returns>The number of page buttons shown on the <see cref="T:System.Windows.Controls.DataPager" /> user interface.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataPager.NumericButtonCountProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataPager.NumericButtonCount" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataPager.NumericButtonCount" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataPager.NumericButtonStyle">
      <summary>Gets or sets the style that will be used for the numeric buttons.</summary>
      <returns>The style that will be used for the numeric buttons.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataPager.NumericButtonStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataPager.NumericButtonStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataPager.NumericButtonStyle" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DataPager.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.DataPager" /> control when a new template is applied.</summary>
      <exception cref="T:System.InvalidOperationException">The numeric button panel contains invalid child elements.</exception>
    </member>
    <member name="M:System.Windows.Controls.DataPager.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.DataPagerAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.DataPagerAutomationPeer" /> for the <see cref="T:System.Windows.Controls.DataPager" /> object.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataPager.PageCount">
      <summary>Gets the current number of known pages if the source is an <see cref="T:System.ComponentModel.IPagedCollectionView" />.</summary>
      <returns>The current number of known pages if the source is an <see cref="T:System.ComponentModel.IPagedCollectionView" />; otherwise, 1.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataPager.PageCountProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataPager.PageCount" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataPager.PageCount" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataPager.PageIndex">
      <summary>Gets or sets the index of the current page.</summary>
      <returns>The index of the current page if the source is an <see cref="T:System.ComponentModel.IPagedCollectionView" />; otherwise, 0. The default is -1. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Controls.DataPager.Source" /> is null or <see cref="P:System.Windows.Controls.DataPager.PageSize" /> is 0, and <see cref="P:System.Windows.Controls.DataPager.PageIndex" /> is not -1.-or-<see cref="P:System.Windows.Controls.DataPager.Source" /> is not null or <see cref="P:System.Windows.Controls.DataPager.PageSize" /> is not 0, and <see cref="P:System.Windows.Controls.DataPager.PageIndex" /> is less than 0.</exception>
    </member>
    <member name="E:System.Windows.Controls.DataPager.PageIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.DataPager.PageIndex" /> has changed.</summary>
    </member>
    <member name="E:System.Windows.Controls.DataPager.PageIndexChanging">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.DataPager.PageIndex" /> is changing.</summary>
    </member>
    <member name="F:System.Windows.Controls.DataPager.PageIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataPager.PageIndex" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataPager.PageIndex" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataPager.PageSize">
      <summary>Gets or sets a value that indicates the number of items displayed on a page.</summary>
      <returns>A value that indicates the number of items displayed on a page.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Page size is less than 0.</exception>
    </member>
    <member name="F:System.Windows.Controls.DataPager.PageSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataPager.PageSize" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataPager.PageSize" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DataPager.Source">
      <summary>Gets or sets the data collection that the <see cref="T:System.Windows.Controls.DataPager" /> controls paging for.</summary>
      <returns>The data collection associated with this pager control.</returns>
    </member>
    <member name="F:System.Windows.Controls.DataPager.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DataPager.Source" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DataPager.Source" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.PagerDisplayMode">
      <summary>Specifies how the page controls are displayed on a <see cref="T:System.Windows.Controls.DataPager" /> control.</summary>
    </member>
    <member name="F:System.Windows.Controls.PagerDisplayMode.FirstLastNumeric">
      <summary>Shows the First and Last buttons, and the numeric display.</summary>
    </member>
    <member name="F:System.Windows.Controls.PagerDisplayMode.FirstLastPreviousNext">
      <summary>Shows the First, Last, Previous, and Next buttons.</summary>
    </member>
    <member name="F:System.Windows.Controls.PagerDisplayMode.FirstLastPreviousNextNumeric">
      <summary>Shows the First, Last, Previous, and Next buttons, and the numeric display.</summary>
    </member>
    <member name="F:System.Windows.Controls.PagerDisplayMode.Numeric">
      <summary>Shows the numeric display.</summary>
    </member>
    <member name="F:System.Windows.Controls.PagerDisplayMode.PreviousNext">
      <summary>Shows the Previous and Next buttons.</summary>
    </member>
    <member name="F:System.Windows.Controls.PagerDisplayMode.PreviousNextNumeric">
      <summary>Shows the Previous and Next buttons, and the numeric display.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridCellsPresenter">
      <summary>Used within the template of a <see cref="T:System.Windows.Controls.DataGrid" /> to specify the location in the control's visual tree where the cells are to be added.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridCellsPresenter" /> class. </summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridColumnHeader">
      <summary>Represents an individual <see cref="T:System.Windows.Controls.DataGrid" /> column header.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnApplyTemplate">
      <summary>Builds the visual tree for the column header when a new template is applied. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnContentChanged(System.Object,System.Object)">
      <summary>Called when the value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</summary>
      <param name="oldContent">The old value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property.</param>
      <param name="newContent">The new value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="newContent" /> is not null and is not a primitive data type.</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer" /> for the <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> object.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrush">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to paint the column header separator lines.</summary>
      <returns>The brush used to paint column header separator lines.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrush" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility">
      <summary>Gets or sets a value indicating whether the column header separator lines are visible.</summary>
      <returns>One of the enumeration values that specifies the visibility of the column header separator lines. The default is <see cref="F:System.Windows.Visibility.Visible" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter">
      <summary>Used within the template of a <see cref="T:System.Windows.Controls.DataGrid" /> to specify the location in the control's visual tree where the column headers are to be added.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> class.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter">
      <summary>Used within the template of a <see cref="T:System.Windows.Controls.DataGrid" /> to specify the location in the control's visual tree where the row details are to be added.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridDetailsPresenter.ContentHeight">
      <summary>Gets or sets the height of the content.</summary>
      <returns>The height of the content.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridDetailsPresenter.ContentHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridDetailsPresenter.ContentHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DataGridDetailsPresenter.ContentHeight" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridFrozenGrid">
      <summary>Represents a non-scrollable grid that contains <see cref="T:System.Windows.Controls.DataGrid" /> row headers.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridFrozenGrid.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridFrozenGrid" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridFrozenGrid.GetIsFrozen(System.Windows.DependencyObject)">
      <summary>Gets a value that indicates whether the grid is frozen.</summary>
      <returns>true if the grid is frozen; otherwise, false. The default is true.</returns>
      <param name="element">The object to get the <see cref="P:System.Windows.Controls.Primitives.DataGridFrozenGrid.IsFrozen" /> value from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridFrozenGrid.IsFrozen">
      <summary>Gets or sets a values that indicates whether the grid is frozen.</summary>
      <returns>true if the grid is frozen; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridFrozenGrid.IsFrozenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridFrozenGrid.IsFrozen" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridFrozenGrid.SetIsFrozen(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value that indicates whether the grid is frozen.</summary>
      <param name="element">The object to set the <see cref="P:System.Windows.Controls.Primitives.DataGridFrozenGrid.IsFrozen" /> value on.</param>
      <param name="value">true if <paramref name="element" /> is frozen; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridRowHeader">
      <summary>Represents an individual <see cref="T:System.Windows.Controls.DataGrid" /> row header.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.MeasureOverride(System.Windows.Size)">
      <summary>Measures the children of a <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> to prepare for arranging them during the <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /> pass.</summary>
      <returns>The size that the <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> determines it needs during layout, based on its calculations of child object allocated sizes.</returns>
      <param name="availableSize">The available size that this element can give to child elements. Indicates an upper limit that child elements should not exceed.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnApplyTemplate">
      <summary>Builds the visual tree for the row header when a new template is applied. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer" /> for the <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> object.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrush">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to paint the row header separator lines.</summary>
      <returns>The brush used to paint row header separator lines.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrush" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibility">
      <summary>Gets or sets a value indicating whether the row header separator lines are visible.</summary>
      <returns>One of the enumeration values that specifies the visibility of the row header separator lines. The default is <see cref="F:System.Windows.Visibility.Visible" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibilityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibility" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibility" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridRowsPresenter">
      <summary>Used within the template of a <see cref="T:System.Windows.Controls.DataGrid" /> to specify the location in the control's visual tree where the rows are to be added.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DataGridRowsPresenter" /> class.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Windows.Controls.Input.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Controls.Input</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.AutoCompleteBox" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.#ctor(System.Windows.Controls.AutoCompleteBox)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.AutoCompleteBox" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern interface implementation for this <see cref="T:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Expand" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState" />.</summary>
      <returns>The state (expanded or collapsed) of the control.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple" />.</summary>
      <returns>true if multiple selection is allowed; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection" />.</summary>
      <returns>A list of UI automation providers. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired" />.</summary>
      <returns>true if selection is required; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly" />.</summary>
      <returns>true if the value is read-only; false if it can be modified. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)" />.</summary>
      <param name="value">The value to set. The provider is responsible for converting the value to the appropriate data type.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IValueProvider.Value" />.</summary>
      <returns>The value of the control.</returns>
    </member>
    <member name="T:System.Windows.Controls.AutoCompleteBox">
      <summary>Represents a control that provides a text box for user input and a drop-down that contains possible matches based on the input in the text box.</summary>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges and sizes the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control and its contents.</summary>
      <returns>The <paramref name="finalSize" />, unchanged.</returns>
      <param name="finalSize">The size allowed for the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</param>
    </member>
    <member name="E:System.Windows.Controls.AutoCompleteBox.DropDownClosed">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.AutoCompleteBox.IsDropDownOpen" /> property was changed from true to false and the drop-down is open.</summary>
    </member>
    <member name="E:System.Windows.Controls.AutoCompleteBox.DropDownClosing">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.AutoCompleteBox.IsDropDownOpen" /> property is changing from true to false. </summary>
    </member>
    <member name="E:System.Windows.Controls.AutoCompleteBox.DropDownOpened">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Controls.AutoCompleteBox.IsDropDownOpen" /> property has changed from false to true and the drop-down is open.</summary>
    </member>
    <member name="E:System.Windows.Controls.AutoCompleteBox.DropDownOpening">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Controls.AutoCompleteBox.IsDropDownOpen" /> property is changing from false to true. </summary>
    </member>
    <member name="P:System.Windows.Controls.AutoCompleteBox.FilterMode">
      <summary>Gets or sets how the text in the text box is used to filter items specified by the <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" /> property for display in the drop-down.</summary>
      <returns>One of the <see cref="T:System.Windows.Controls.AutoCompleteFilterMode" /> values The default is <see cref="F:System.Windows.Controls.AutoCompleteFilterMode.StartsWith" />.</returns>
      <exception cref="T:System.ArgumentException">The specified value is not a valid <see cref="T:System.Windows.Controls.AutoCompleteFilterMode" />.</exception>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteBox.FilterModeProperty">
      <summary>Gets the identifier for the <see cref="P:System.Windows.Controls.AutoCompleteBox.FilterMode" /> dependency property.</summary>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.FormatValue(System.Object)">
      <summary>Converts the specified object to a string by using the property values of the binding object specified by the <see cref="P:System.Windows.Controls.AutoCompleteBox.ValueMemberBinding" /> property.</summary>
      <returns>The string representation of the specified object.</returns>
      <param name="value">The object to format as a string.</param>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.GetSelectionAdapterPart">
      <summary>Returns the specified object as an <see cref="T:System.Windows.Controls.ISelectionAdapter" />, if possible.</summary>
      <returns>A <see cref="T:System.Windows.Controls.ISelectionAdapter" /> if possible; otherwise, null.</returns>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.HasFocus">
      <summary>Determines whether the text box or drop-down portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control has focus.</summary>
      <returns>true to indicate the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> has focus; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Controls.AutoCompleteBox.IsDropDownOpen">
      <summary>Gets or sets a value that indicates whether the drop-down portion of the control is open.</summary>
      <returns>true if the drop-down is open; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteBox.IsDropDownOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AutoCompleteBox.IsDropDownOpen" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.AutoCompleteBox.IsDropDownOpen" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.AutoCompleteBox.IsTextCompletionEnabled">
      <summary>Gets or sets a value that indicates whether the first possible match found during the filtering process will be displayed automatically in the text box.</summary>
      <returns>true if the first possible match found will be displayed automatically in the text box; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteBox.IsTextCompletionEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AutoCompleteBox.IsTextCompletionEnabled" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.AutoCompleteBox.IsTextCompletionEnabled" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.AutoCompleteBox.ItemContainerStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> that is applied to the selection adapter contained in the drop-down portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</summary>
      <returns>The <see cref="T:System.Windows.Style" /> applied to the selection adapter contained in the drop-down portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteBox.ItemContainerStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemContainerStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemContainerStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.AutoCompleteBox.ItemFilter">
      <summary>Gets or sets the custom method that uses the user-entered text to filter the items specified by the <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" /> property for display in the drop-down.</summary>
      <returns>The custom method that uses the user-entered text to filter the items specified by the <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" /> property. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteBox.ItemFilterProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemFilter" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemFilter" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.AutoCompleteBox.ItemsSource">
      <summary>Gets or sets a collection that is used to generate the items for the drop-down portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</summary>
      <returns>The collection that is used to generate the items of the drop-down portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</returns>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteBox.ItemsSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.AutoCompleteBox.ItemTemplate">
      <summary>Gets or sets the <see cref="T:System.Windows.DataTemplate" /> used to display each item in the drop-down portion of the control.</summary>
      <returns>The <see cref="T:System.Windows.DataTemplate" /> used to display each item in the drop-down. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteBox.ItemTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemTemplate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemTemplate" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.AutoCompleteBox.MaxDropDownHeight">
      <summary>Gets or sets the maximum height of the drop-down portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</summary>
      <returns>The maximum height of the drop-down portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control. The default is <see cref="F:System.Double.PositiveInfinity" />.</returns>
      <exception cref="T:System.ArgumentException">The specified value is less than 0.</exception>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteBox.MaxDropDownHeightProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AutoCompleteBox.MaxDropDownHeight" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.AutoCompleteBox.MaxDropDownHeight" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.AutoCompleteBox.MinimumPopulateDelay">
      <summary>Gets or sets the minimum delay, in milliseconds, after text is typed in the text box before the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control populates the list of possible matches in the drop-down.</summary>
      <returns>The minimum delay, in milliseconds, after text is typed in the text box, but before the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> populates the list of possible matches in the drop-down. The default is 0.</returns>
      <exception cref="T:System.ArgumentException">The set value is less than 0.</exception>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteBox.MinimumPopulateDelayProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AutoCompleteBox.MinimumPopulateDelay" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.AutoCompleteBox.MinimumPopulateDelay" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.AutoCompleteBox.MinimumPrefixLength">
      <summary>Gets or sets the minimum number of characters required to be entered in the text box before the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> displays possible matches.</summary>
      <returns>The minimum number of characters to be entered in the text box before the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> displays possible matches. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteBox.MinimumPrefixLengthProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AutoCompleteBox.MinimumPrefixLength" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.AutoCompleteBox.MinimumPrefixLength" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer" /> for the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.OnDropDownClosed(System.Windows.RoutedPropertyChangedEventArgs{System.Boolean})">
      <summary>Raises the <see cref="E:System.Windows.Controls.AutoCompleteBox.DropDownClosed" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> which contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.OnDropDownClosing(System.Windows.Controls.RoutedPropertyChangingEventArgs{System.Boolean})">
      <summary>Raises the <see cref="E:System.Windows.Controls.AutoCompleteBox.DropDownClosing" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Controls.RoutedPropertyChangingEventArgs`1" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.OnDropDownOpened(System.Windows.RoutedPropertyChangedEventArgs{System.Boolean})">
      <summary>Raises the <see cref="E:System.Windows.Controls.AutoCompleteBox.DropDownOpened" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.OnDropDownOpening(System.Windows.Controls.RoutedPropertyChangingEventArgs{System.Boolean})">
      <summary>Raises the <see cref="E:System.Windows.Controls.AutoCompleteBox.DropDownOpening" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Controls.RoutedPropertyChangingEventArgs`1" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.OnPopulated(System.Windows.Controls.PopulatedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.AutoCompleteBox.Populated" /> event </summary>
      <param name="e">A <see cref="T:System.Windows.Controls.PopulatedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.OnPopulating(System.Windows.Controls.PopulatingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.AutoCompleteBox.Populating" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Controls.PopulatingEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.AutoCompleteBox.SelectionChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.OnTextChanged(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.AutoCompleteBox.TextChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.AutoCompleteBox.PopulateComplete">
      <summary>Notifies the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> that the <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" /> property has been set and the data can be filtered to provide possible matches in the drop-down.</summary>
    </member>
    <member name="E:System.Windows.Controls.AutoCompleteBox.Populated">
      <summary>Occurs when the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> has populated the drop-down with possible matches based on the <see cref="P:System.Windows.Controls.AutoCompleteBox.Text" /> property.</summary>
    </member>
    <member name="E:System.Windows.Controls.AutoCompleteBox.Populating">
      <summary>Occurs when the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> is populating the drop-down with possible matches based on the <see cref="P:System.Windows.Controls.AutoCompleteBox.Text" /> property.</summary>
    </member>
    <member name="P:System.Windows.Controls.AutoCompleteBox.SearchText">
      <summary>Gets the text that is used to filter items in the <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" /> item collection. </summary>
      <returns>The text that is used to filter items in the <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" /> item collection.</returns>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteBox.SearchTextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AutoCompleteBox.SearchText" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.AutoCompleteBox.SearchText" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.AutoCompleteBox.SelectedItem">
      <summary>Gets or sets the selected item in the drop-down.</summary>
      <returns>The selected item in the drop-down.</returns>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteBox.SelectedItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AutoCompleteBox.SelectedItem" /> dependency property.</summary>
      <returns>The identifier the <see cref="P:System.Windows.Controls.AutoCompleteBox.SelectedItem" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.AutoCompleteBox.SelectionAdapter">
      <summary>Gets or sets the selection adapter used to populate the drop-down with a list of selectable items. </summary>
      <returns>The selection adapter used to populate the drop-down with a list of selectable items. </returns>
    </member>
    <member name="E:System.Windows.Controls.AutoCompleteBox.SelectionChanged">
      <summary>Occurs when the selected item in the drop-down portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> has changed.</summary>
    </member>
    <member name="P:System.Windows.Controls.AutoCompleteBox.Text">
      <summary>Gets or sets the text in the text box portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</summary>
      <returns>The text in the text box portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</returns>
    </member>
    <member name="P:System.Windows.Controls.AutoCompleteBox.TextBoxStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> applied to the text box portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</summary>
      <returns>The <see cref="T:System.Windows.Style" /> applied to the text box portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteBox.TextBoxStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AutoCompleteBox.TextBoxStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.AutoCompleteBox.TextBoxStyle" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.AutoCompleteBox.TextChanged">
      <summary>Occurs when the text in the text box portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> changes.</summary>
    </member>
    <member name="P:System.Windows.Controls.AutoCompleteBox.TextFilter">
      <summary>Gets or sets the custom method that uses the user-entered text to filter items specified by the <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" /> property in a text-based way for display in the drop-down.</summary>
      <returns>The custom method that uses the user-entered text to filter items specified by the <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" /> property in a text-based way for display in the drop-down.</returns>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteBox.TextFilterProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AutoCompleteBox.TextFilter" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.AutoCompleteBox.TextFilter" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteBox.TextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.AutoCompleteBox.Text" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.AutoCompleteBox.Text" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.AutoCompleteBox.ValueMemberBinding">
      <summary>Gets or sets the <see cref="T:System.Windows.Data.Binding" /> that is used to get the value for display in the text box portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control, and to filter items for display in the drop-down.</summary>
      <returns>The <see cref="T:System.Windows.Data.Binding" /> object used when binding to a collection property, and to filter items for display in the drop-down.</returns>
    </member>
    <member name="P:System.Windows.Controls.AutoCompleteBox.ValueMemberPath">
      <summary>Gets or sets the property path that is used to get the value for display in the text box portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control, and to filter items for display in the drop-down.</summary>
      <returns>The property path that is used to get values for display in the text box portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control, and to filter items for display in the drop-down.</returns>
    </member>
    <member name="T:System.Windows.Controls.AutoCompleteFilterMode">
      <summary>Specifies how text in the text box portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control is used to filter items specified by the <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" /> property for display in the drop-down.</summary>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteFilterMode.None">
      <summary>Specifies that no filter is used. All items are returned.</summary>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteFilterMode.StartsWith">
      <summary>Specifies a culture-sensitive, case-insensitive filter where the returned items start with the specified text. The filter uses the <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" /> method, specifying <see cref="P:System.StringComparer.CurrentCultureIgnoreCase" /> as the string comparison criteria. </summary>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteFilterMode.StartsWithCaseSensitive">
      <summary>Specifies a culture-sensitive, case-sensitive filter where the returned items start with the specified text. The filter uses the <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" /> method, specifying <see cref="P:System.StringComparer.CurrentCulture" /> as the string comparison criteria.</summary>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteFilterMode.StartsWithOrdinal">
      <summary>Specifies an ordinal, case-insensitive filter where the returned items start with the specified text. The filter uses the <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" /> method, specifying <see cref="P:System.StringComparer.OrdinalIgnoreCase" /> as the string comparison criteria.</summary>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteFilterMode.StartsWithOrdinalCaseSensitive">
      <summary>Specifies an ordinal, case-sensitive filter where the returned items start with the specified text. The filter uses the <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" /> method, specifying <see cref="P:System.StringComparer.Ordinal" /> as the string comparison criteria.</summary>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteFilterMode.Contains">
      <summary>Specifies a culture-sensitive, case-insensitive filter where the returned items contain the specified text.</summary>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteFilterMode.ContainsCaseSensitive">
      <summary>Specifies a culture-sensitive, case-sensitive filter where the returned items contain the specified text.</summary>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteFilterMode.ContainsOrdinal">
      <summary>Specifies an ordinal, case-insensitive filter where the returned items contain the specified text.</summary>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteFilterMode.ContainsOrdinalCaseSensitive">
      <summary>Specifies an ordinal, case-sensitive filter where the returned items contain the specified text.</summary>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteFilterMode.Equals">
      <summary>Specifies a culture-sensitive, case-insensitive filter where the returned items equal the specified text. The filter uses the <see cref="M:System.String.Equals(System.String,System.StringComparison)" /> method, specifying <see cref="P:System.StringComparer.CurrentCultureIgnoreCase" /> as the search comparison criteria.</summary>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteFilterMode.EqualsCaseSensitive">
      <summary>Specifies a culture-sensitive, case-sensitive filter where the returned items equal the specified text. The filter uses the <see cref="M:System.String.Equals(System.String,System.StringComparison)" /> method, specifying <see cref="P:System.StringComparer.CurrentCulture" /> as the string comparison criteria.</summary>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteFilterMode.EqualsOrdinal">
      <summary>Specifies an ordinal, case-insensitive filter where the returned items equal the specified text. The filter uses the <see cref="M:System.String.Equals(System.String,System.StringComparison)" /> method, specifying <see cref="P:System.StringComparer.OrdinalIgnoreCase" /> as the string comparison criteria.</summary>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteFilterMode.EqualsOrdinalCaseSensitive">
      <summary>Specifies an ordinal, case-sensitive filter where the returned items equal the specified text. The filter uses the <see cref="M:System.String.Equals(System.String,System.StringComparison)" /> method, specifying <see cref="P:System.StringComparer.Ordinal" /> as the string comparison criteria.</summary>
    </member>
    <member name="F:System.Windows.Controls.AutoCompleteFilterMode.Custom">
      <summary>Specifies that a custom filter is used. This mode is used when the <see cref="P:System.Windows.Controls.AutoCompleteBox.TextFilter" /> or <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemFilter" /> properties are set.</summary>
    </member>
    <member name="T:System.Windows.Controls.AutoCompleteFilterPredicate`1">
      <summary>Represents the filter used by the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control to determine whether an item is a possible match for the specified text.</summary>
      <returns>true to indicate <paramref name="item" /> is a possible match for <paramref name="search" />; otherwise false.</returns>
      <param name="search">The string used as the basis for filtering.</param>
      <param name="item">The item that is compared with the <paramref name="search" /> parameter.</param>
      <typeparam name="T">The type used for filtering the <see cref="T:System.Windows.Controls.AutoCompleteBox" />. This type can be either a string or an object.</typeparam>
    </member>
    <member name="T:System.Windows.Controls.ISelectionAdapter">
      <summary>Defines an item collection, selection members, and key handling for the selection adapter contained in the drop-down portion of an <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</summary>
    </member>
    <member name="E:System.Windows.Controls.ISelectionAdapter.Cancel">
      <summary>Occurs when a selection has been canceled.</summary>
    </member>
    <member name="E:System.Windows.Controls.ISelectionAdapter.Commit">
      <summary>Occurs when a selected item is not cancelled and is committed as the selected item. </summary>
    </member>
    <member name="M:System.Windows.Controls.ISelectionAdapter.CreateAutomationPeer">
      <summary>Returns an automation peer for the selection adapter, for use by the Silverlight automation infrastructure.</summary>
      <returns>An automation peer for the selection adapter, if one is available; otherwise, null.</returns>
    </member>
    <member name="M:System.Windows.Controls.ISelectionAdapter.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event that occurs when a key is pressed while the drop-down portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> has focus.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains data about the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</param>
    </member>
    <member name="P:System.Windows.Controls.ISelectionAdapter.ItemsSource">
      <summary>Gets or sets a collection that is used to generate content for the selection adapter.</summary>
      <returns>The collection that is used to generate content for the selection adapter.</returns>
    </member>
    <member name="P:System.Windows.Controls.ISelectionAdapter.SelectedItem">
      <summary>Gets or sets the selected item.</summary>
      <returns>The currently selected item.</returns>
    </member>
    <member name="E:System.Windows.Controls.ISelectionAdapter.SelectionChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.ISelectionAdapter.SelectedItem" /> property value changes.</summary>
    </member>
    <member name="T:System.Windows.Controls.PopulatedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.AutoCompleteBox.Populated" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.PopulatedEventArgs.#ctor(System.Collections.IEnumerable)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PopulatedEventArgs" />.</summary>
      <param name="data">The list of possible matches added to the drop-down portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</param>
    </member>
    <member name="P:System.Windows.Controls.PopulatedEventArgs.Data">
      <summary>Gets the list of possible matches added to the drop-down portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</summary>
      <returns>The list of possible matches added to the <see cref="T:System.Windows.Controls.AutoCompleteBox" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.PopulatedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.AutoCompleteBox.Populated" /> event of a <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Controls.PopulatedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Windows.Controls.PopulatingEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.AutoCompleteBox.Populating" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.PopulatingEventArgs.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PopulatingEventArgs" />.</summary>
      <param name="parameter">The value of the <see cref="P:System.Windows.Controls.AutoCompleteBox.SearchText" /> property, which is used to filter items for the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</param>
    </member>
    <member name="P:System.Windows.Controls.PopulatingEventArgs.Cancel">
      <summary>Gets or sets a value that indicates whether the <see cref="E:System.Windows.Controls.AutoCompleteBox.Populating" /> event should be canceled.</summary>
      <returns>true to cancel the event, otherwise false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Controls.PopulatingEventArgs.Parameter">
      <summary>Gets the text that is used to determine which items to display in the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</summary>
      <returns>The text that is used to determine which items to display in the <see cref="T:System.Windows.Controls.AutoCompleteBox" />.</returns>
    </member>
    <member name="T:System.Windows.Controls.PopulatingEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.AutoCompleteBox.Populating" /> event of a <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control. </summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Controls.PopulatingEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Windows.Controls.SelectorSelectionAdapter">
      <summary>Represents the selection adapter contained in the drop-down portion of an <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.SelectorSelectionAdapter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.SelectorSelectionAdapter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.SelectorSelectionAdapter.#ctor(System.Windows.Controls.Primitives.Selector)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.SelectorSelectionAdapter" /> class with the specified <see cref="T:System.Windows.Controls.Primitives.Selector" /> control.</summary>
      <param name="selector">The <see cref="T:System.Windows.Controls.Primitives.Selector" /> control to wrap as a <see cref="T:System.Windows.Controls.SelectorSelectionAdapter" />.</param>
    </member>
    <member name="E:System.Windows.Controls.SelectorSelectionAdapter.Cancel">
      <summary>Occurs when a selection is canceled before it is committed.</summary>
    </member>
    <member name="E:System.Windows.Controls.SelectorSelectionAdapter.Commit">
      <summary>Occurs when an item is selected and is committed to the underlying <see cref="T:System.Windows.Controls.Primitives.Selector" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.SelectorSelectionAdapter.CreateAutomationPeer">
      <summary>Returns an automation peer for the underlying <see cref="T:System.Windows.Controls.Primitives.Selector" /> control, for use by the Silverlight automation infrastructure.</summary>
      <returns>An automation peer for use by the Silverlight automation infrastructure.</returns>
    </member>
    <member name="M:System.Windows.Controls.SelectorSelectionAdapter.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event that occurs when a key is pressed while the drop-down portion of the <see cref="T:System.Windows.Controls.AutoCompleteBox" /> has focus.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains data about the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</param>
    </member>
    <member name="P:System.Windows.Controls.SelectorSelectionAdapter.ItemsSource">
      <summary>Gets or sets a collection that is used to generate the content of the selection adapter.</summary>
      <returns>The collection used to generate content for the selection adapter.</returns>
    </member>
    <member name="M:System.Windows.Controls.SelectorSelectionAdapter.OnCancel">
      <summary>Raises the <see cref="E:System.Windows.Controls.SelectorSelectionAdapter.Cancel" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.SelectorSelectionAdapter.OnCommit">
      <summary>Raises the <see cref="E:System.Windows.Controls.SelectorSelectionAdapter.Commit" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.SelectorSelectionAdapter.SelectedIndexDecrement">
      <summary>Decrements the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" /> property of the underlying <see cref="T:System.Windows.Controls.Primitives.Selector" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.SelectorSelectionAdapter.SelectedIndexIncrement">
      <summary>Increments the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" /> property of the underlying <see cref="T:System.Windows.Controls.Primitives.Selector" /> control.</summary>
    </member>
    <member name="P:System.Windows.Controls.SelectorSelectionAdapter.SelectedItem">
      <summary>Gets or sets the selected item of the selection adapter.</summary>
      <returns>The selected item of the underlying selection adapter.</returns>
    </member>
    <member name="E:System.Windows.Controls.SelectorSelectionAdapter.SelectionChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.SelectorSelectionAdapter.SelectedItem" /> property value changes.</summary>
    </member>
    <member name="P:System.Windows.Controls.SelectorSelectionAdapter.SelectorControl">
      <summary>Gets or sets the underlying <see cref="T:System.Windows.Controls.Primitives.Selector" /> control.</summary>
      <returns>The underlying <see cref="T:System.Windows.Controls.Primitives.Selector" /> control.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Xml.Utils.extmap.xml ===
<?xml version="1.0"?>
<manifest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
          xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <assembly>
    <name>System.Xml.Utils</name>
    <version>2.0.5.0</version>
    <publickeytoken>31bf3856ad364e35</publickeytoken>
    <relpath>System.Xml.Utils.dll</relpath>
    <extension downloadUri="System.Xml.Utils.zip" />
  </assembly>


</manifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Xml.Serialization.extmap.xml ===
<?xml version="1.0"?>
<manifest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
          xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <assembly>
    <name>System.Xml.Serialization</name>
    <version>2.0.5.0</version>
    <publickeytoken>31bf3856ad364e35</publickeytoken>
    <relpath>System.Xml.Serialization.dll</relpath>
    <extension downloadUri="System.Xml.Serialization.zip" />
  </assembly>


</manifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Windows.Data.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Data</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.IPagedCollectionView">
      <summary>Defines methods and properties that a collection view implements to provide paging capabilities to a collection.</summary>
    </member>
    <member name="P:System.ComponentModel.IPagedCollectionView.CanChangePage">
      <summary>Gets a value that indicates whether the <see cref="P:System.ComponentModel.IPagedCollectionView.PageIndex" /> value can change.</summary>
      <returns>true if the <see cref="P:System.ComponentModel.IPagedCollectionView.PageIndex" /> value can change; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.IPagedCollectionView.IsPageChanging">
      <summary>Gets a value that indicates whether the page index is changing.</summary>
      <returns>true if the page index is changing; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.IPagedCollectionView.ItemCount">
      <summary>Gets the number of known items in the view before paging is applied.</summary>
      <returns>The number of known items in the view before paging is applied.</returns>
    </member>
    <member name="M:System.ComponentModel.IPagedCollectionView.MoveToFirstPage">
      <summary>Sets the first page as the current page.</summary>
      <returns>true if the operation was successful; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.IPagedCollectionView.MoveToLastPage">
      <summary>Sets the last page as the current page.</summary>
      <returns>true if the operation was successful; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.IPagedCollectionView.MoveToNextPage">
      <summary>Moves to the page after the current page.</summary>
      <returns>true if the operation was successful; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.IPagedCollectionView.MoveToPage(System.Int32)">
      <summary>Moves to the page at the specified index.</summary>
      <returns>true if the operation was successful; otherwise, false.</returns>
      <param name="pageIndex">The index of the page to move to.</param>
    </member>
    <member name="M:System.ComponentModel.IPagedCollectionView.MoveToPreviousPage">
      <summary>Moves to the page before the current page.</summary>
      <returns>true if the operation was successful; otherwise, false.</returns>
    </member>
    <member name="E:System.ComponentModel.IPagedCollectionView.PageChanged">
      <summary>When implementing this interface, raise this event after the <see cref="P:System.ComponentModel.IPagedCollectionView.PageIndex" /> has changed.</summary>
    </member>
    <member name="E:System.ComponentModel.IPagedCollectionView.PageChanging">
      <summary>When implementing this interface, raise this event before changing the <see cref="P:System.ComponentModel.IPagedCollectionView.PageIndex" />. The event handler can cancel this event.</summary>
    </member>
    <member name="P:System.ComponentModel.IPagedCollectionView.PageIndex">
      <summary>Gets the zero-based index of the current page.</summary>
      <returns>The zero-based index of the current page.</returns>
    </member>
    <member name="P:System.ComponentModel.IPagedCollectionView.PageSize">
      <summary>Gets or sets the number of items to display on a page.</summary>
      <returns>The number of items to display on a page.</returns>
    </member>
    <member name="P:System.ComponentModel.IPagedCollectionView.TotalItemCount">
      <summary>Gets the total number of items in the view before paging is applied.</summary>
      <returns>The total number of items in the view before paging is applied, or -1 if the total number is unknown.</returns>
    </member>
    <member name="T:System.ComponentModel.PageChangingEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.IPagedCollectionView.PageChanging" /> event.</summary>
    </member>
    <member name="M:System.ComponentModel.PageChangingEventArgs.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.PageChangingEventArgs" /> class.</summary>
      <param name="newPageIndex">The index of the requested page.</param>
    </member>
    <member name="P:System.ComponentModel.PageChangingEventArgs.NewPageIndex">
      <summary>Gets the index of the requested page.</summary>
      <returns>The index of the requested page.</returns>
    </member>
    <member name="T:System.Windows.Data.GroupDescriptionSelectorCallback">
      <summary>Represents a method that is used to provide custom logic to select the <see cref="T:System.ComponentModel.GroupDescription" /> based on the parent group and its level.</summary>
      <returns>The selected <see cref="T:System.ComponentModel.GroupDescription" /> based on the parent group and its level.</returns>
      <param name="group">The parent group.</param>
      <param name="level">The level of <paramref name="group" />.</param>
    </member>
    <member name="T:System.Windows.Data.PagedCollectionView">
      <summary>Represents a view for grouping, sorting, filtering, and navigating a paged data collection.</summary>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.#ctor(System.Collections.IEnumerable)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PagedCollectionView" /> class.</summary>
      <param name="source">The source for the collection.</param>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.#ctor(System.Collections.IEnumerable,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PagedCollectionView" /> class and specifies whether the data is sorted and in group order.</summary>
      <param name="source">The source for the collection.</param>
      <param name="isDataSorted">Specifies whether the source is already sorted.</param>
      <param name="isDataInGroupOrder">Specifies whether the source is already in the correct order for grouping.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.AddNew">
      <summary>Adds a new item to the underlying collection. </summary>
      <returns>The new item that is being added.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Data.PagedCollectionView.CanAddNew" /> is false.</exception>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.CanAddNew">
      <summary>Gets a value that indicates whether a new item can be added to the collection.</summary>
      <returns>true if a new item can be added to the collection; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.CanCancelEdit">
      <summary>Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</summary>
      <returns>true if the collection view can discard pending changes and restore the original values of an edited object; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.CancelEdit">
      <summary>Ends the edit transaction and, if it is possible, restores the original value of the item.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Data.PagedCollectionView.CanCancelEdit" /> is false.-or-<see cref="P:System.Windows.Data.PagedCollectionView.IsAddingNew" /> is true.</exception>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.CancelNew">
      <summary>Ends the add transaction and discards the pending new item.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Data.PagedCollectionView.IsEditingItem" /> is true.</exception>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.CanChangePage">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Data.PagedCollectionView.PageIndex" /> value can change.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.CanFilter">
      <summary>Gets a value that indicates whether this view supports filtering by way of the <see cref="P:System.Windows.Data.PagedCollectionView.Filter" /> property.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.CanGroup">
      <summary>Gets a value that indicates whether this view supports grouping. </summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.CanRemove">
      <summary>Gets a value that indicates whether an item can be removed from the collection.</summary>
      <returns>true if an item can be removed from the collection; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.CanSort">
      <summary>Gets a value that indicates whether this view supports sorting.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="E:System.Windows.Data.PagedCollectionView.CollectionChanged">
      <summary>Occurs when the view has changed.</summary>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.CommitEdit">
      <summary>Ends the edit transaction and saves the pending changes.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Data.PagedCollectionView.IsAddingNew" /> is true.</exception>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.CommitNew">
      <summary>Ends the add transaction and saves the pending new item.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Data.PagedCollectionView.IsEditingItem" /> is true.</exception>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.Contains(System.Object)">
      <summary>Returns a value that indicates whether the specified item belongs to this collection view.</summary>
      <returns>true if the specified item belongs to this collection view; otherwise, false.</returns>
      <param name="item">The object to check.</param>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.Count">
      <summary>Gets the number of records in the view after filtering, sorting, and paging.</summary>
      <returns>The number of records in the view after filtering, sorting, and paging.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.Culture">
      <summary>Gets or sets the cultural information for any operations of the view that might differ by culture, such as sorting.</summary>
      <returns>The culture to use during view operations.</returns>
      <exception cref="T:System.ArgumentNullException">The culture information is null.</exception>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.CurrentAddItem">
      <summary>Gets the item that is being added when an <see cref="M:System.Windows.Data.PagedCollectionView.AddNew" /> transaction is in progress.</summary>
      <returns>The item that is being added if <see cref="P:System.Windows.Data.PagedCollectionView.IsAddingNew" /> is true; otherwise, null.</returns>
    </member>
    <member name="E:System.Windows.Data.PagedCollectionView.CurrentChanged">
      <summary>Occurs after the <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> has changed.</summary>
    </member>
    <member name="E:System.Windows.Data.PagedCollectionView.CurrentChanging">
      <summary>Occurs when the <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> is changing.</summary>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.CurrentEditItem">
      <summary>Gets the item in the collection that is being edited when an <see cref="M:System.Windows.Data.PagedCollectionView.EditItem(System.Object)" /> transaction is in progress.</summary>
      <returns>The item that is being edited if <see cref="P:System.Windows.Data.PagedCollectionView.IsEditingItem" /> is true; otherwise, null.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.CurrentItem">
      <summary>Gets the current item in the view.</summary>
      <returns>The current item in the view or null if there is no current item.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.CurrentPosition">
      <summary>Gets the ordinal position of the <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> in the view, which might be sorted and filtered.</summary>
      <returns>The ordinal position of the <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> in the view.</returns>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.DeferRefresh">
      <summary>Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that you can use to dispose of the calling object.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Data.PagedCollectionView.IsAddingNew" /> is true.-or-<see cref="P:System.Windows.Data.PagedCollectionView.IsEditingItem" /> is true.</exception>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.EditItem(System.Object)">
      <summary>Begins an edit transaction on the specified item.</summary>
      <param name="item">The item to edit.</param>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.Filter">
      <summary>Gets or sets a callback that is used to determine whether an item is suited for inclusion in the view.</summary>
      <returns>A method that is used to determine whether an item is suited for inclusion in the view.</returns>
      <exception cref="T:System.NotSupportedException">The implementation does not support filtering.Simpler implementations do not support filtering and will throw a <see cref="T:System.NotSupportedException" />. Check the <see cref="P:System.Windows.Data.PagedCollectionView.CanFilter" /> property to test whether filtering is supported before assigning a non-null value.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Data.PagedCollectionView.IsAddingNew" /> is true.-or-<see cref="P:System.Windows.Data.PagedCollectionView.IsEditingItem" /> is true.</exception>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in the view.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in the view.</returns>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.GetItemAt(System.Int32)">
      <summary>Gets the item at the specified zero-based index in this <see cref="T:System.Windows.Data.PagedCollectionView" />, after the source collection is filtered, sorted, and paged.</summary>
      <returns>The item at the specified zero-based index.</returns>
      <param name="index">The zero-based index of the item to retrieve.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0, or greater than or equal to the <see cref="P:System.Windows.Data.PagedCollectionView.Count" /> of items in the view.</exception>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.GroupDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.Groups">
      <summary>Gets the top-level groups, constructed according to the descriptions specified in the <see cref="P:System.Windows.Data.PagedCollectionView.GroupDescriptions" /> property.</summary>
      <returns>A read-only collection of the top-level groups or null if there are no groups.</returns>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.IndexOf(System.Object)">
      <summary>Returns the zero-based index at which the specified item is located.</summary>
      <returns>The index at which the specified item is located, or â1 if the item is unknown.</returns>
      <param name="item">The item to locate.</param>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.IsAddingNew">
      <summary>Gets a value that indicates whether an <see cref="M:System.Windows.Data.PagedCollectionView.AddNew" /> transaction is in progress.</summary>
      <returns>true if an <see cref="M:System.Windows.Data.PagedCollectionView.AddNew" /> transaction is in progress; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.IsCurrentAfterLast">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> of the view is beyond the end of the collection.</summary>
      <returns>true if the <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> of the view is beyond the end of the collection; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.IsCurrentBeforeFirst">
      <summary>Gets a value that indicates whether the <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> of the view is before the start of the collection.</summary>
      <returns>true if the <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> of the view is before the start of the collection; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.IsEditingItem">
      <summary>Gets a value that indicates whether an <see cref="M:System.Windows.Data.PagedCollectionView.EditItem(System.Object)" /> transaction is in progress.</summary>
      <returns>true if an <see cref="M:System.Windows.Data.PagedCollectionView.EditItem(System.Object)" /> transaction is in progress; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.IsEmpty">
      <summary>Gets a value that indicates whether the view is empty.</summary>
      <returns>true if the view is empty; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.IsPageChanging">
      <summary>Gets a value that indicates whether the page index is changing.</summary>
      <returns>true if the page index is changing; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.Item(System.Int32)">
      <summary>Gets the item at the specified index.</summary>
      <returns>The item at the specified index.</returns>
      <param name="index">The index of the item to be retrieved.</param>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.ItemCount">
      <summary>Gets the minimum number of items known to be in the source collection that satisfy the current filter.</summary>
      <returns>The minimum number of items known to be in the collection that satisfy the current filter.</returns>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.MoveCurrentTo(System.Object)">
      <summary>Sets the specified item to be the <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> in the view.</summary>
      <returns>true if the resulting <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> is an item in the view; otherwise, false.</returns>
      <param name="item">The item to set as the <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" />.</param>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.MoveCurrentToFirst">
      <summary>Sets the first item in the view as the <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" />.</summary>
      <returns>true if the resulting <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> is an item in the view; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.MoveCurrentToLast">
      <summary>Sets the last item in the view as the <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" />.</summary>
      <returns>true if the resulting <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> is an item in the view; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.MoveCurrentToNext">
      <summary>Set the item after the <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> in the view as the <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" />.</summary>
      <returns>true if the resulting <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> is an item in the view; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>Sets the item at the specified index to be the <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> in the view.</summary>
      <returns>true if the resulting <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> is an item in the view; otherwise, false.</returns>
      <param name="position">The index to set the <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> to.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="position" /> is less than -1 or greater than the <see cref="P:System.Windows.Data.PagedCollectionView.Count" /> of items in the view.</exception>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.MoveCurrentToPrevious">
      <summary>Sets the item before the <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> in the view as the <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" />.</summary>
      <returns>true if the resulting <see cref="P:System.Windows.Data.PagedCollectionView.CurrentItem" /> is an item in the view; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.MoveToFirstPage">
      <summary>Sets the first page as the current page.</summary>
      <returns>true if the operation was successful; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.MoveToLastPage">
      <summary>Sets the last page as the current page.</summary>
      <returns>true if the operation was successful; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.MoveToNextPage">
      <summary>Moves to the page after the current page.</summary>
      <returns>true if the operation was successful; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.MoveToPage(System.Int32)">
      <summary>Moves to the page at the specified index.</summary>
      <returns>true if the operation was successful; otherwise, false.</returns>
      <param name="pageIndex">The index of the page to move to.</param>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.MoveToPreviousPage">
      <summary>Moves to the page before the current page.</summary>
      <returns>true if the operation was successful; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.NeedsRefresh">
      <summary>Gets a value that indicates whether this view needs to be refreshed.</summary>
      <returns>true if the view needs to be refreshed; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.NewItemPlaceholderPosition">
      <summary>Gets or sets a value that indicates whether to include a new item placeholder in the collection view, and where to include it.</summary>
      <returns>This implementation always returns <see cref="F:System.ComponentModel.NewItemPlaceholderPosition.None" />.</returns>
      <exception cref="T:System.ArgumentException">The value is not <see cref="F:System.ComponentModel.NewItemPlaceholderPosition.None" />.</exception>
    </member>
    <member name="E:System.Windows.Data.PagedCollectionView.PageChanged">
      <summary>Occurs after the <see cref="P:System.Windows.Data.PagedCollectionView.PageIndex" /> has changed.</summary>
    </member>
    <member name="E:System.Windows.Data.PagedCollectionView.PageChanging">
      <summary>Occurs when the <see cref="P:System.Windows.Data.PagedCollectionView.PageIndex" /> is changing.</summary>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.PageIndex">
      <summary>Gets the zero-based index of the current page.</summary>
      <returns>The zero-based index of the current page.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.PageSize">
      <summary>Gets or sets the number of items to display on a page.</summary>
      <returns>The number of items to display on a page.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The page size is less than 0.</exception>
      <exception cref="T:System.InvalidOperationException">The page size could not be changed because there is a new or edited item that could not be committed.</exception>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.PassesFilter(System.Object)">
      <summary>Returns a value that indicates whether the specified item in the underlying collection belongs to the view after filters are applied.</summary>
      <returns>true if the specified item belongs to the filtered view or if no filter is set on the collection view; otherwise, false.</returns>
      <param name="item">The item to check.</param>
    </member>
    <member name="E:System.Windows.Data.PagedCollectionView.PropertyChanged">
      <summary>Occurs after a property value has changed.</summary>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.Refresh">
      <summary>Re-creates the view.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Data.PagedCollectionView.IsAddingNew" /> is true.-or- <see cref="P:System.Windows.Data.PagedCollectionView.IsEditingItem" /> is true.</exception>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.Remove(System.Object)">
      <summary>Removes the specified item from the collection.</summary>
      <param name="item">The item to remove.</param>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.RemoveAt(System.Int32)">
      <summary>Removes the item at the specified position from the collection.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0, or greater than or equal to the <see cref="P:System.Windows.Data.PagedCollectionView.Count" /> of items in the view.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Data.PagedCollectionView.IsAddingNew" /> is true.-or- <see cref="P:System.Windows.Data.PagedCollectionView.IsEditingItem" /> is true.-or-<see cref="P:System.Windows.Data.PagedCollectionView.CanRemove" /> is false.</exception>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.SortDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describe how the items in the collection are sorted in the view.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describe how the items in the collection are sorted in the view.</returns>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.SourceCollection">
      <summary>Gets the <see cref="T:System.Collections.IEnumerable" /> collection underlying this view.</summary>
      <returns>The <see cref="T:System.Collections.IEnumerable" /> collection underlying this view.</returns>
    </member>
    <member name="M:System.Windows.Data.PagedCollectionView.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="E:System.Windows.Data.PagedCollectionView.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>Occurs when the items list of the collection has changed, or the collection is reset.</summary>
    </member>
    <member name="E:System.Windows.Data.PagedCollectionView.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="P:System.Windows.Data.PagedCollectionView.TotalItemCount">
      <summary>Gets the total number of items in the view before paging is applied.</summary>
      <returns>The total number of items in the view before paging is applied.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\system.windows.controls.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Controls</name>
  </assembly>
  <members>
    <member name="T:System.Windows.HierarchicalDataTemplate">
      <summary>Represents a <see cref="T:System.Windows.DataTemplate" /> that supports <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> objects, such as <see cref="T:System.Windows.Controls.TreeViewItem" />.</summary>
    </member>
    <member name="M:System.Windows.HierarchicalDataTemplate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.HierarchicalDataTemplate" /> class.</summary>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> that is applied to the item container for each child item.</summary>
      <returns>The style that is applied to the item container for each child item.</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
      <summary>Gets or sets the binding that is used to generate content for the next sublevel in the data hierarchy.</summary>
      <returns>The binding that is used to generate content for the next sublevel in the data hierarchy. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemTemplate">
      <summary>Gets or sets the <see cref="T:System.Windows.DataTemplate" /> to apply to the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> property on a generated <see cref="T:System.Windows.Controls.HeaderedItemsControl" />, such as a <see cref="T:System.Windows.Controls.TreeViewItem" />, to indicate how to display items in the next sublevel in the data hierarchy.</summary>
      <returns>The <see cref="T:System.Windows.DataTemplate" /> to apply to the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> property on a generated <see cref="T:System.Windows.Controls.HeaderedItemsControl" />, such as a <see cref="T:System.Windows.Controls.TreeViewItem" />, to indicate how to display items in the next sublevel in the data hierarchy.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.CalendarAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Calendar" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.#ctor(System.Windows.Controls.Calendar)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Calendar" /> instance to associate with the <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.Calendar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>By default, the <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Calendar" /> enumeration value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.Calendar" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>By default, the type name of the <paramref name="owner" /> value that the automation peer is constructed with.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.GetNameCore">
      <summary>Gets the name of the class of the object associated with this <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>A name from a "Labeled By" associated control if it exists, otherwise, a name from the <paramref name="owner" /> value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for this <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridProvider.ColumnCount" />.</summary>
      <returns>The total number of columns in a grid. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IGridProvider.GetItem(System.Int32,System.Int32)" />.</summary>
      <returns>The UI automation provider for the specified cell. </returns>
      <param name="row">The ordinal number of the row.</param>
      <param name="column">The ordinal number of the column.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridProvider.RowCount" />.</summary>
      <returns>The total number of rows in a grid. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#CurrentView">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView" />.</summary>
      <returns>The value for the current view of the UI automation element. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetSupportedViews">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IMultipleViewProvider.GetSupportedViews" />.</summary>
      <returns>A collection of values that identifies the views that are available for a UI automation element.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetViewName(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IMultipleViewProvider.GetViewName(System.Int32)" />. </summary>
      <returns>A localized name for the view. </returns>
      <param name="viewId">The view identifier.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#SetCurrentView(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IMultipleViewProvider.SetCurrentView(System.Int32)" />.</summary>
      <param name="viewId">A view identifier.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple" />.</summary>
      <returns>true if multiple selection is allowed; otherwise, false. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection" />.</summary>
      <returns>A list of UI automation providers. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired" />.</summary>
      <returns>true if selection is required; otherwise, false. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ITableProvider.GetColumnHeaders" />.</summary>
      <returns>A collection of UI automation providers. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ITableProvider.GetRowHeaders" />.</summary>
      <returns>A collection of UI automation providers. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ITableProvider.RowOrColumnMajor" />.</summary>
      <returns>The primary direction of traversal. </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.CalendarButton)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> to associate with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for this <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The control type as a value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class that is associated with this <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>By default, the type name of the <paramref name="owner" /> value that the automation peer is constructed with.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetHelpTextCore">
      <summary>Returns the string that describes the functionality of the item that is associated with this <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" />.</summary>
      <returns>The help text, or <see cref="F:System.String.Empty" /> if there is no help text. By default, this implementation provides a DateTime.ToString behavior.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetLocalizedControlTypeCore">
      <summary>Returns the localized version of the control type for the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" />.</summary>
      <returns>The string that contains the type of control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetNameCore">
      <summary>Gets the name of the class of the object associated with this <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>A name from a "Labeled By" control if it exists, otherwise from the <paramref name="owner" /> value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for this <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.Column" />.</summary>
      <returns>A zero-based ordinal number that identifies the column that contains the cell or item.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan" />.</summary>
      <returns>The number of columns spanned.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid" />.</summary>
      <returns>A UI automation provider that implements the <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" /> control pattern and that represents the cell or item container.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.Row" />.</summary>
      <returns>A zero-based ordinal number that identifies the row that contains the cell or item.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.RowSpan" />.</summary>
      <returns>The number of rows that are spanned. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected" />.</summary>
      <returns>true if the element is selected; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer" />.</summary>
      <returns>The provider that supports <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> types to UI Automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.CalendarDayButton)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> instance that is associated with this <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for this <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The control type as a value of the enumeration. By default, this method returns <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Button" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class that is associated with this <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>By default, the type name of the <paramref name="owner" /> value that the automation peer is constructed with.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetHelpTextCore">
      <summary>Returns the string that describes the functionality of the item that is associated with this <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" />.</summary>
      <returns>The help text, or <see cref="F:System.String.Empty" /> if there is no help text.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetLocalizedControlTypeCore">
      <summary>Returns the localized version of the control type for the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" />.</summary>
      <returns>The string that contains the type of control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetNameCore">
      <summary>Gets the text label of the object associated with this <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>A name from a "Labeled By" control if it exists, otherwise from the <paramref name="owner" /> value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern implementation for this <see cref="T:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.Column" />.</summary>
      <returns>A zero-based ordinal number that identifies the column that contains the cell or item. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan" />.</summary>
      <returns>The number of columns. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid" />.</summary>
      <returns>The UI Automation provider.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.Row" />.</summary>
      <returns>A zero-based ordinal number that identifies the row that contains the cell or item. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.RowSpan" />.</summary>
      <returns>The number of rows. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected" />.</summary>
      <returns>true if the element is selected; otherwise, false. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer" />.</summary>
      <returns>The UI Automation provider.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ITableItemProvider.GetColumnHeaderItems" />.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ITableItemProvider.GetRowHeaderItems" />.</summary>
      <returns>A collection of UI Automation providers.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.ChildWindow" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.#ctor(System.Windows.Controls.ChildWindow)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" /> class. </summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.ChildWindow" /> to associate with this <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the element associated with this <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class for the object associated with this <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string value that represents the type of the child window.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.Controls.ChildWindow" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The text label of the element that is associated with this automation peer.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for this <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" />.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" />.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" />.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)" />.</summary>
      <param name="x">The absolute screen coordinates of the left side of the control.</param>
      <param name="y">The absolute screen coordinates of the top of the control.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)" />.</summary>
      <param name="width">The new width of the window, in pixels.</param>
      <param name="height">The new height of the window, in pixels.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)" />.</summary>
      <param name="degrees">The number of degrees to rotate the control. A positive number rotates the control clockwise. A negative number rotates the control counterclockwise.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#Close">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IWindowProvider.Close" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#InteractionState">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IWindowProvider.InteractionState" />.</summary>
      <returns>The interaction state of the control, as a value of the enumeration.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#IsModal">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IWindowProvider.IsModal" />.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#IsTopmost">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IWindowProvider.IsTopmost" />.</summary>
      <returns>true if the window is topmost; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#Maximizable">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IWindowProvider.Maximizable" />.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#Minimizable">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IWindowProvider.Minimizable" />.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#SetVisualState(System.Windows.Automation.WindowVisualState)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)" />.</summary>
      <param name="state">The visual state of the window to change to, as a value of the enumeration.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#VisualState">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IWindowProvider.VisualState" />.</summary>
      <returns>
        <see cref="F:System.Windows.Automation.WindowVisualState.Normal" /> in all cases.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ChildWindowAutomationPeer.System#Windows#Automation#Provider#IWindowProvider#WaitForInputIdle(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)" />.</summary>
      <returns>true if the window has entered the idle state; false if the timeout occurred.</returns>
      <param name="milliseconds">The amount of time, in milliseconds, to wait for the associated process to become idle.</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DatePickerAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.DatePicker" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.#ctor(System.Windows.Controls.DatePicker)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.DatePicker" /> to associate with the <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for this <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The control type as a value of the enumeration. By default, this method returns <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Calendar" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class that is associated with this <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>By default, the type name of the <paramref name="owner" /> value that the automation peer is constructed with.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetLocalizedControlTypeCore">
      <summary>Returns the localized version of the control type for the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" />.</summary>
      <returns>The string that contains the type of control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetNameCore">
      <summary>Gets the name of the class of the object associated with this <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>A name from a "Labeled By" value if it exists, otherwise from the <paramref name="owner" /> value.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.DatePicker" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Expand" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState" />.</summary>
      <returns>The state, expanded or collapsed, of the control. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly" />.</summary>
      <returns>Returns false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)" />.</summary>
      <param name="value">The value to set. The provider is responsible for converting the value to the appropriate data type. </param>
    </member>
    <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IValueProvider.Value" />.</summary>
      <returns>The value of the control as a string. </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.GridSplitter" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.#ctor(System.Windows.Controls.GridSplitter)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.GridSplitter" /> to associate with the <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for this <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The control type as a value of the enumeration. By default, this method returns <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Thumb" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class that is associated with this <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>By default, the type name of the <paramref name="owner" /> value that the automation peer is constructed with.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.GridSplitter" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" />.</summary>
      <returns>true if the element can be moved; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" />.</summary>
      <returns>true if the element can be resized; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" />.</summary>
      <returns>true if the element can be rotated; otherwise, false. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)" />.</summary>
      <param name="x">Absolute screen coordinates of the left side of the control.</param>
      <param name="y">Absolute screen coordinates of the top of the control.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)" />.</summary>
      <param name="width">The new width of the window, in pixels. </param>
      <param name="height">The new height of the window, in pixels. </param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)" />.</summary>
      <param name="degrees">The number of degrees to rotate the control. A positive number rotates clockwise; a negative number rotates counterclockwise. </param>
    </member>
    <member name="T:System.Windows.Automation.Peers.TabControlAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.TabControl" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.#ctor(System.Windows.Controls.TabControl)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.TabControl" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for this <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The control type as a value of the enumeration. By default, this method returns <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Tab" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class that is associated with this <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The type name of the <paramref name="owner" /> value that the automation peer is constructed with.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetClickablePointCore">
      <summary>Gets a clickable point on the control.</summary>
      <returns>A point with <see cref="F:System.Double.NaN" /> coordinates, which indicates to automation that the tab itself has no clickable points (the item in the tab is the element that should be reported as clickable).</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.TabControl" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.IsKeyboardFocusableCore">
      <summary>Retrieves a value that indicates whether the tab control can accept keyboard focus</summary>
      <returns>true if the element can accept keyboard focus; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TabControlAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple" />.</summary>
      <returns>true if multiple selection is allowed; otherwise, false. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection" />.</summary>
      <returns>A list of UI automation providers.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TabControlAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired" />.</summary>
      <returns>true if selection is required; otherwise, false. </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TabItemAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.TabItem" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.TabItem" /> to associate with the <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>The control type as a value of the enumeration. By default, this method returns <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TabItem" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.TabItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</summary>
      <returns>The collection of child elements of automation peers, for cases where the <see cref="P:System.Windows.Controls.ContentControl.Content" /> of a <see cref="T:System.Windows.Controls.TabControl" /> is a collection of elements and not a single element.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class that is associated with this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The type name of the <paramref name="owner" /> value that the automation peer is constructed with.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetNameCore">
      <summary>Gets the name of the class of the object associated with this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The string value from the tab item's <see cref="P:System.Windows.Controls.TabItem.Header" /> if available. Otherwise, <see cref="F:System.String.Empty" /></returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.TabItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.IsKeyboardFocusableCore">
      <summary>Retrieves a value that indicates whether the tab item can accept keyboard focus</summary>
      <returns>true if the element can accept keyboard focus; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection" />.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Owner element is not enabled.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected" />.</summary>
      <returns>true if the element is selected; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select" />.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Owner element is not enabled.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer" />.</summary>
      <returns>The provider that supports <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TreeViewAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.TreeView" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.#ctor(System.Windows.Controls.TreeView)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.TreeView" /> to associate with the <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.TreeView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.TreeView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />. </summary>
      <returns>The collection of child elements.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.TreeView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The string TreeView.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets a control pattern for the <see cref="T:System.Windows.Controls.TreeView" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values that indicates the control pattern.</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple" />.</summary>
      <returns>true if multiple selection is allowed; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection" />.</summary>
      <returns>A list of UI automation providers. </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired" />.</summary>
      <returns>true if selection is required; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer">
      <summary>Exposes the items in <see cref="T:System.Windows.Controls.TreeViewItem" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.#ctor(System.Windows.Controls.TreeViewItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.TreeViewItem" /> instance to associate with this <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the <see cref="T:System.Windows.Controls.TreeViewItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration. </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the <see cref="T:System.Windows.Controls.TreeViewItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>The string TreeViewItem.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.TreeViewItem" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />.</summary>
      <returns>The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.</returns>
      <param name="patternInterface">One of the enumeration values.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse" />.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Owner control is not enabled.</exception>
      <exception cref="T:System.InvalidOperationException">Owner control has no leaf nodes.</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Expand" />.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Owner control is not enabled.</exception>
      <exception cref="T:System.InvalidOperationException">Owner control has no leaf nodes.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState" />.</summary>
      <returns>The state (expanded or collapsed) of the control.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.IScrollItemProvider.ScrollIntoView" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection" />.</summary>
      <exception cref="T:System.InvalidOperationException">Attempted a multiple selection. Tree views do not support multiple selection.</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected" />. </summary>
      <returns>true if an item is selected; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>For a description of this member, see <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>For a description of this member, see <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer" />.</summary>
      <returns>The UI automation provider.</returns>
    </member>
    <member name="T:System.Windows.Controls.Calendar">
      <summary>Represents a control that enables a user to select a date by using a visual calendar display. </summary>
    </member>
    <member name="M:System.Windows.Controls.Calendar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Calendar" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.BlackoutDates">
      <summary>Gets or sets a collection of dates that are marked as not selectable.</summary>
      <returns>A collection of dates that cannot be selected. The default value is an empty collection.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.CalendarButtonStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> associated with the control's internal <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> object.</summary>
      <returns>The current style of the <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> object.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.CalendarButtonStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.CalendarButtonStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.CalendarButtonStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> associated with the control's internal <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> object.</summary>
      <returns>The current style of the <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> object.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.CalendarItemStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> associated with the control's internal <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> object.</summary>
      <returns>The current style of the <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> object.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.CalendarItemStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.CalendarItemStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.CalendarItemStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayDate">
      <summary>Gets or sets the date to display.</summary>
      <returns>The date to display.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The given date is not in the range specified by <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> and <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" />.</exception>
    </member>
    <member name="E:System.Windows.Controls.Calendar.DisplayDateChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> property is changed.</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayDateEnd">
      <summary>Gets or sets the last date to be displayed.</summary>
      <returns>The last date to display.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayDateEndProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayDateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayDateStart">
      <summary>Gets or sets the first date to be displayed.</summary>
      <returns>The first date to display.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayDateStartProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayMode">
      <summary>Gets or sets a value indicating whether the calendar is displayed in months, years, or decades.</summary>
      <returns>A value indicating what length of time the <see cref="T:System.Windows.Controls.Calendar" /> should display.</returns>
    </member>
    <member name="E:System.Windows.Controls.Calendar.DisplayModeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> property is changed. </summary>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.FirstDayOfWeek">
      <summary>Gets or sets the day that is considered the beginning of the week.</summary>
      <returns>A <see cref="T:System.DayOfWeek" /> representing the beginning of the week. The default is <see cref="F:System.DayOfWeek.Sunday" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.FirstDayOfWeekProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.FirstDayOfWeek" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.FirstDayOfWeek" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.IsTodayHighlighted">
      <summary>Gets or sets a value indicating whether the current date is highlighted.</summary>
      <returns>true if the current date is highlighted; otherwise, false. The default is true. </returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.IsTodayHighlightedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Calendar" /> when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> for the <see cref="T:System.Windows.Controls.Calendar" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseWheel" /> event</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Windows.Controls.Calendar.SelectedDate">
      <summary>Gets or sets the currently selected date.</summary>
      <returns>The date currently selected. The default is null.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The given date is outside the range specified by <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> and <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" />-or-The given date is in the <see cref="P:System.Windows.Controls.Calendar.BlackoutDates" /> collection.</exception>
      <exception cref="T:System.InvalidOperationException">If set to anything other than null when <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> is set to <see cref="F:System.Windows.Controls.CalendarSelectionMode.None" />.</exception>
    </member>
    <member name="F:System.Windows.Controls.Calendar.SelectedDateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.SelectedDates">
      <summary>Gets a collection of selected dates.</summary>
      <returns>A <see cref="T:System.Windows.Controls.SelectedDatesCollection" /> object that contains the currently selected dates. The default is an empty collection.</returns>
    </member>
    <member name="E:System.Windows.Controls.Calendar.SelectedDatesChanged">
      <summary>Occurs when the collection returned by the <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> property is changed. </summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.SelectionMode">
      <summary>Gets or sets a value that indicates what kind of selections are allowed.</summary>
      <returns>A value that indicates the current selection mode. The default is <see cref="F:System.Windows.Controls.CalendarSelectionMode.SingleDate" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.SelectionModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Calendar.ToString">
      <summary>Provides a text representation of the selected date.</summary>
      <returns>A text representation of the selected date, or an empty string if <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> is null.</returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarBlackoutDatesCollection">
      <summary>Represents a collection of non-selectable dates in a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.#ctor(System.Windows.Controls.Calendar)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CalendarBlackoutDatesCollection" /> class. </summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Calendar" /> whose dates this object represents.</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.AddDatesInPast">
      <summary>Adds all dates before <see cref="P:System.DateTime.Today" /> to the collection.</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.Contains(System.DateTime)">
      <summary>Returns a value that represents whether this collection contains the specified date.</summary>
      <returns>true if the collection contains the specified date; otherwise, false.</returns>
      <param name="date">The date to search for.</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.Contains(System.DateTime,System.DateTime)">
      <summary>Returns a value that represents whether this collection contains the specified range of dates.</summary>
      <returns>true if all dates in the range are contained in the collection; otherwise, false.</returns>
      <param name="start">The start of the date range.</param>
      <param name="end">The end of the date range.</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.ContainsAny(System.Windows.Controls.CalendarDateRange)">
      <summary>Returns a value that represents whether this collection contains any date in the specified range.</summary>
      <returns>true if any date in the range is contained in the collection; otherwise, false.</returns>
      <param name="range">The range of dates to search for.</param>
    </member>
    <member name="T:System.Windows.Controls.CalendarDateChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" /> event. </summary>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateChangedEventArgs.AddedDate">
      <summary>Gets or sets the date to be newly displayed.</summary>
      <returns>The new date to display.</returns>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateChangedEventArgs.RemovedDate">
      <summary>Getsor sets the date that was previously displayed.</summary>
      <returns>The date previously displayed. </returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarDateRange">
      <summary>Represents a range of dates in a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarDateRange.#ctor(System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CalendarDateRange" /> class with a single date.</summary>
      <param name="day">The date to be represented by the range.</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarDateRange.#ctor(System.DateTime,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CalendarDateRange" /> class with a range of dates.</summary>
      <param name="start">The start of the range to be represented.</param>
      <param name="end">The end of the range to be represented.</param>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateRange.End">
      <summary>Gets the last date in the represented range.</summary>
      <returns>The last date in the represented range.</returns>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateRange.Start">
      <summary>Gets the first date in the represented range.</summary>
      <returns>The first date in the represented range.</returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarMode">
      <summary>Specifies values for the different modes of operation of a <see cref="T:System.Windows.Controls.Calendar" />. </summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarMode.Month">
      <summary>The <see cref="T:System.Windows.Controls.Calendar" /> displays a month at a time.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarMode.Year">
      <summary>The <see cref="T:System.Windows.Controls.Calendar" /> displays a year at a time.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarMode.Decade">
      <summary>The <see cref="T:System.Windows.Controls.Calendar" /> displays a decade at a time.</summary>
    </member>
    <member name="T:System.Windows.Controls.CalendarModeChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.Calendar.DisplayModeChanged" /> event. </summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarModeChangedEventArgs.#ctor(System.Windows.Controls.CalendarMode,System.Windows.Controls.CalendarMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CalendarModeChangedEventArgs" /> class. </summary>
      <param name="oldMode">The previous mode.</param>
      <param name="newMode">The new mode.</param>
    </member>
    <member name="P:System.Windows.Controls.CalendarModeChangedEventArgs.NewMode">
      <summary>Gets the new mode of the <see cref="T:System.Windows.Controls.Calendar" />.</summary>
      <returns>A <see cref="T:System.Windows.Controls.CalendarMode" /> representing the new mode. </returns>
    </member>
    <member name="P:System.Windows.Controls.CalendarModeChangedEventArgs.OldMode">
      <summary>Gets the previous mode of the <see cref="T:System.Windows.Controls.Calendar" />.</summary>
      <returns>A <see cref="T:System.Windows.Controls.CalendarMode" /> representing the previous mode. </returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarSelectionMode">
      <summary>Specifies values that describe the available selection modes for a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.SingleDate">
      <summary>Only a single date can be selected. Use the <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> property to retrieve the selected date.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.SingleRange">
      <summary>A single range of dates can be selected. Use the <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> property to retrieve the selected dates.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.MultipleRange">
      <summary>Multiple non-contiguous ranges of dates can be selected. Use the <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> property to retrieve the selected dates.</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.None">
      <summary>No selections are allowed.</summary>
    </member>
    <member name="T:System.Windows.Controls.ChildWindow">
      <summary>Provides a window that can be displayed over a parent window and blocks interaction with the parent window.</summary>
    </member>
    <member name="M:System.Windows.Controls.ChildWindow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ChildWindow" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.ChildWindow.Close">
      <summary>Closes a <see cref="T:System.Windows.Controls.ChildWindow" />.</summary>
    </member>
    <member name="E:System.Windows.Controls.ChildWindow.Closed">
      <summary>Occurs when the <see cref="T:System.Windows.Controls.ChildWindow" /> is closed.</summary>
    </member>
    <member name="E:System.Windows.Controls.ChildWindow.Closing">
      <summary>Occurs when the <see cref="T:System.Windows.Controls.ChildWindow" /> is closing.</summary>
    </member>
    <member name="P:System.Windows.Controls.ChildWindow.DialogResult">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ChildWindow" /> was accepted or canceled.</summary>
      <returns>true if the child window was accepted; false if the child window was canceled. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Controls.ChildWindow.HasCloseButton">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ChildWindow" /> has a close button.</summary>
      <returns>true if the child window has a close button; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Controls.ChildWindow.HasCloseButtonProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ChildWindow.HasCloseButton" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ChildWindow.HasCloseButton" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ChildWindow.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.ChildWindow" /> control when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.ChildWindow.OnClosed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.ChildWindow.Closed" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ChildWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.ChildWindow.Closing" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Windows.Controls.ChildWindow.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ChildWindowAutomationPeer" /> for the <see cref="T:System.Windows.Controls.ChildWindow" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.ChildWindow.OnOpened">
      <summary>This method is called every time a <see cref="T:System.Windows.Controls.ChildWindow" /> is displayed.</summary>
    </member>
    <member name="P:System.Windows.Controls.ChildWindow.OverlayBrush">
      <summary>Gets or sets the visual brush that is used to cover the parent window when the child window is open.</summary>
      <returns>The visual brush that is used to cover the parent window when the <see cref="T:System.Windows.Controls.ChildWindow" /> is open. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.ChildWindow.OverlayBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ChildWindow.OverlayBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ChildWindow.OverlayBrush" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.ChildWindow.OverlayOpacity">
      <summary>Gets or sets the opacity of the overlay brush that is used to cover the parent window when the child window is open.</summary>
      <returns>The opacity of the overlay brush that is used to cover the parent window when the <see cref="T:System.Windows.Controls.ChildWindow" /> is open. The default is 1.0.</returns>
    </member>
    <member name="F:System.Windows.Controls.ChildWindow.OverlayOpacityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ChildWindow.OverlayOpacity" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ChildWindow.OverlayOpacity" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.ChildWindow.Show">
      <summary>Opens a <see cref="T:System.Windows.Controls.ChildWindow" /> and returns without waiting for the <see cref="T:System.Windows.Controls.ChildWindow" /> to close.</summary>
      <exception cref="T:System.InvalidOperationException">The child window is already in the visual tree.</exception>
    </member>
    <member name="P:System.Windows.Controls.ChildWindow.Title">
      <summary>Gets or sets the title of the <see cref="T:System.Windows.Controls.ChildWindow" />.</summary>
      <returns>The title of the child window. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.ChildWindow.TitleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.ChildWindow.Title" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.ChildWindow.Title" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.DatePicker">
      <summary>Represents a control that allows the user to select a date.</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DatePicker" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.BlackoutDates">
      <summary>Gets or sets a collection of dates that are marked as not selectable.</summary>
      <returns>A collection of dates that cannot be selected. The default value is an empty collection.</returns>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.CalendarClosed">
      <summary>Occurs when the drop-down <see cref="T:System.Windows.Controls.Calendar" /> is closed.</summary>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.CalendarOpened">
      <summary>Occurs when the drop-down <see cref="T:System.Windows.Controls.Calendar" /> is opened.</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.CalendarStyle">
      <summary>Gets or sets the style that is used when rendering the calendar.</summary>
      <returns>The style that is used when rendering the calendar.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.CalendarStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.CalendarStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.CalendarStyle" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.DateValidationError">
      <summary>Occurs when <see cref="P:System.Windows.Controls.DatePicker.Text" /> is assigned a value that cannot be interpreted as a date.</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.DisplayDate">
      <summary>Gets or sets the date to display.</summary>
      <returns>The date to display. The default is <see cref="P:System.DateTime.Today" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified date is not in the range defined by <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" />. and <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />.</exception>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.DisplayDateEnd">
      <summary>Gets or sets the last date to be displayed.</summary>
      <returns>The last date to display.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.DisplayDateEndProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.DisplayDateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.DisplayDate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.DisplayDate" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.DisplayDateStart">
      <summary>Gets or sets the first date to be displayed.</summary>
      <returns>The first date to display.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.DisplayDateStartProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.FirstDayOfWeek">
      <summary>Gets or sets the day that is considered the beginning of the week.</summary>
      <returns>A <see cref="T:System.DayOfWeek" /> representing the beginning of the week. The default is <see cref="F:System.DayOfWeek.Sunday" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.FirstDayOfWeekProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.FirstDayOfWeek" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.FirstDayOfWeek" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.IsDropDownOpen">
      <summary>Gets or sets a value that indicates whether the drop-down <see cref="T:System.Windows.Controls.Calendar" /> is open or closed.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Calendar" /> is open; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.IsDropDownOpenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.IsDropDownOpen" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.IsDropDownOpen" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.IsTodayHighlighted">
      <summary>Gets or sets a value that indicates whether the current date will be highlighted.</summary>
      <returns>true if the current date is highlighted; otherwise, false. The default is true. </returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.IsTodayHighlightedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.IsTodayHighlighted" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.IsTodayHighlighted" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.DatePicker" /> control when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> for the <see cref="T:System.Windows.Controls.DatePicker" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnDateValidationError(System.Windows.Controls.DatePickerDateValidationErrorEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseWheel" /> event.</summary>
      <param name="e">A <see cref="System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.SelectedDate">
      <summary>Gets or sets the currently selected date.</summary>
      <returns>The date currently selected. The default is null.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified date is not in the range defined by <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> and <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />, or the specified date is in the <see cref="P:System.Windows.Controls.DatePicker.BlackoutDates" /> collection. </exception>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.SelectedDateChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> property is changed.</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.SelectedDateFormat">
      <summary>Gets or sets the format that is used to display the selected date.</summary>
      <returns>The format that is used to display the selected date. The default is <see cref="F:System.Windows.Controls.DatePickerFormat.Short" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified format is not valid.</exception>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.SelectedDateFormatProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.SelectedDateFormat" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.SelectedDateFormat" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.SelectedDateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.SelectionBackground">
      <summary>Gets or sets the background used for selected dates.</summary>
      <returns>The background used for selected dates.</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.SelectionBackgroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.SelectionBackground" /> dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.SelectionBackground" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.Text">
      <summary>Gets the text that is displayed by the <see cref="T:System.Windows.Controls.DatePicker" />, or sets the selected date.</summary>
      <returns>The text displayed by the <see cref="T:System.Windows.Controls.DatePicker" />.</returns>
      <exception cref="T:System.FormatException">The text entered cannot be parsed to a valid date, and the exception is not suppressed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The text entered parses to a date that is not selectable.</exception>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.TextProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.DatePicker.Text" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.DatePicker.Text" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.ToString"></member>
    <member name="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> event.</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.#ctor(System.Exception,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" /> class. </summary>
      <param name="exception">The initial exception from the <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> event.</param>
      <param name="text">The text that caused the <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> event.</param>
    </member>
    <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception">
      <summary>Gets or sets the initial exception associated with the <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> event.</summary>
      <returns>The exception associated with the validation failure.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Text">
      <summary>Gets or sets the text that caused the <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> event.</summary>
      <returns>The text that caused the validation failure.</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException">
      <summary>Gets or sets a value that indicates whether <see cref="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception" /> should be thrown.</summary>
      <returns>true if the exception should be thrown; otherwise, false.</returns>
      <exception cref="T:System.ArgumentException">If set to true and <see cref="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Controls.DatePickerFormat">
      <summary>Specifies date formats for a <see cref="T:System.Windows.Controls.DatePicker" />.</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePickerFormat.Long">
      <summary>Specifies that the date should be displayed using unabbreviated days of the week and month names.</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePickerFormat.Short">
      <summary>Specifies that the date should be displayed using abbreviated days of the week and month names.</summary>
    </member>
    <member name="T:System.Windows.Controls.DateTimeTypeConverter">
      <summary>Provides a converter to convert <see cref="T:System.DateTime" /> objects to and from other representations.</summary>
    </member>
    <member name="M:System.Windows.Controls.DateTimeTypeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DateTimeTypeConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.DateTimeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value that indicates whether it is possible to convert the specified type to a <see cref="T:System.DateTime" /> with the specified format context.</summary>
      <returns>true if the conversion is possible; otherwise, false.</returns>
      <param name="context">The format context that is used to convert the specified type.</param>
      <param name="sourceType">The type to convert.</param>
    </member>
    <member name="M:System.Windows.Controls.DateTimeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value that indicates whether it is possible to convert a <see cref="T:System.DateTime" /> to the specified type within the specified format context.</summary>
      <returns>true if the conversion is possible; otherwise, false.</returns>
      <param name="context">The format context that is used to convert.</param>
      <param name="destinationType">The type to convert to.</param>
    </member>
    <member name="M:System.Windows.Controls.DateTimeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to a <see cref="T:System.DateTime" /> with the specified culture with the specified format context.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that represents <paramref name="value" />.</returns>
      <param name="context">The format context that is used to convert the specified type.</param>
      <param name="culture">The culture to use for the result.</param>
      <param name="value">The value to convert.</param>
      <exception cref="T:System.FormatException">The conversion cannot be performed.</exception>
    </member>
    <member name="M:System.Windows.Controls.DateTimeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.DateTime" /> with the specified culture to the specified object with the specified format context.</summary>
      <returns>An object of the specified type that represents <paramref name="value" />.</returns>
      <param name="context">The format context that is used to convert to the specified type.</param>
      <param name="culture">The culture to use for the converting date.</param>
      <param name="value">The date to convert.</param>
      <param name="destinationType">The type to convert to.</param>
    </member>
    <member name="T:System.Windows.Controls.Dock">
      <summary>Specifies values that control the behavior of a control positioned inside another control.</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Left">
      <summary>Specifies that the control should be positioned on the left of the control.</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Top">
      <summary>Specifies that the control should be positioned on top of the control.</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Right">
      <summary>Specifies that the control should be positioned on the right of the control.</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Bottom">
      <summary>Specifies that the control should be positioned at the bottom of the control.</summary>
    </member>
    <member name="T:System.Windows.Controls.GridSplitter">
      <summary>Represents a control that redistributes space between the rows of columns of a <see cref="T:System.Windows.Controls.Grid" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.GridSplitter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.GridSplitter" /> control when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" /> for the <see cref="T:System.Windows.Controls.GridSplitter" /> object.</returns>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.PreviewStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> that is used for previewing changes.</summary>
      <returns>The style that is used to preview changes.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.PreviewStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridSplitter.PreviewStyle" /> dependency property.</summary>
      <returns>An identifier for the <see cref="P:System.Windows.Controls.GridSplitter.PreviewStyle" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.ShowsPreview">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.GridSplitter" /> control updates the column or row size as the user drags the control with the mouse.</summary>
      <returns>true if a preview is displayed; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.ShowsPreviewProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview" /> dependency property.</summary>
      <returns>An identifier for the <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.HeaderedItemsControl">
      <summary>Represents a control that contains a header and collection of items.</summary>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> class.</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.Header">
      <summary>Gets or sets the item that labels the control. </summary>
      <returns>The item that labels the control. The default value is null. </returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate">
      <summary>Gets or sets a data template that is used to display the contents of the control's <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" />.</summary>
      <returns>Gets or sets a data template that is used to display the contents of the control's header. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.ItemContainerStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> that is applied to the container element generated for each item.</summary>
      <returns>The <see cref="T:System.Windows.Style" /> that is applied to the container element generated for each item. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.ItemContainerStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.ItemContainerStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.HeaderedItemsControl.ItemContainerStyle" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderChanged(System.Object,System.Object)">
      <summary>Called when the value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> property changes.</summary>
      <param name="oldHeader">The old value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> property.</param>
      <param name="newHeader">The new value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when the value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> property changes.</summary>
      <param name="oldHeaderTemplate">The old value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> property.</param>
      <param name="newHeaderTemplate">The new value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified element to display the specified item.</summary>
      <param name="element">The container element used to display the specified item.</param>
      <param name="item">The content to display.</param>
    </member>
    <member name="T:System.Windows.Controls.RoutedPropertyChangingEventArgs`1">
      <summary>Provides event data for various routed events that track property values changing. Typically the events denote a cancellable action.</summary>
      <typeparam name="T">The type of the value for the dependency property that is changing.</typeparam>
    </member>
    <member name="M:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.#ctor(System.Windows.DependencyProperty,`0,`0,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.RoutedPropertyChangingEventArgs`1" /> class,</summary>
      <param name="property">The <see cref="T:System.Windows.DependencyProperty" /> identifier for the property that is changing.</param>
      <param name="oldValue">The previous value of the property.</param>
      <param name="newValue">The new value of the property, assuming that the property change is not cancelled.</param>
      <param name="isCancelable">true if the property change is cancellable by setting <see cref="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.Cancel" /> to true in event handling. false if the property change is not cancellable.</param>
    </member>
    <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.Cancel">
      <summary>Gets or sets a value that determines whether the property change that originated the RoutedPropertyChanging event should be cancelled.</summary>
      <returns>true to cancel the property change; this resets the property to <see cref="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.OldValue" />. false to not cancel the property change; the value changes to <see cref="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.NewValue" />.</returns>
      <exception cref="T:System.InvalidOperationException">Attempted to cancel in an instance where <see cref="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.IsCancelable" /> is false.</exception>
    </member>
    <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.InCoercion">
      <summary>Gets or sets a value indicating whether internal value coercion is acting on the property change that originated the RoutedPropertyChanging event.</summary>
      <returns>true if coercion is active. false if coercion is not active.</returns>
    </member>
    <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.IsCancelable">
      <summary>Gets a value indicating whether the property change that originated the RoutedPropertyChanging event is cancellable.</summary>
      <returns>true if the property change is cancellable. false if the property change is not cancellable.</returns>
    </member>
    <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.NewValue">
      <summary>Gets a value that reports the new value of the changing property, assuming that the property change is not cancelled.</summary>
      <returns>The new value of the changing property.</returns>
    </member>
    <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.OldValue">
      <summary>Gets a value that reports the previous value of the changing property.</summary>
      <returns>The previous value of the changing property.</returns>
    </member>
    <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.Property">
      <summary>Gets the <see cref="T:System.Windows.DependencyProperty" /> identifier for the property that is changing.</summary>
      <returns>The <see cref="T:System.Windows.DependencyProperty" /> identifier for the property that is changing.</returns>
    </member>
    <member name="T:System.Windows.Controls.RoutedPropertyChangingEventHandler`1">
      <summary>Represents methods that handle various routed events that track property values changing. Typically the events denote a cancellable action.</summary>
      <param name="sender">The object where the initiating property is changing.</param>
      <param name="e">Event data for the event,</param>
      <typeparam name="T">The type of the value for the dependency property that is changing.</typeparam>
    </member>
    <member name="T:System.Windows.Controls.SelectedDatesCollection">
      <summary>Represents a set of selected dates in a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.SelectedDatesCollection.#ctor(System.Windows.Controls.Calendar)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.SelectedDatesCollection" /> class. </summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Calendar" /> associated with this object.</param>
    </member>
    <member name="M:System.Windows.Controls.SelectedDatesCollection.AddRange(System.DateTime,System.DateTime)">
      <summary>Adds all the dates in the specified range, which includes the first and last dates, to the collection.</summary>
      <param name="start">The first date to add to the collection.</param>
      <param name="end">The last date to add to the collection.</param>
    </member>
    <member name="T:System.Windows.Controls.TabControl">
      <summary>Represents a control that contains multiple items that share the same space on the screen.</summary>
    </member>
    <member name="M:System.Windows.Controls.TabControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TabControl" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.TabControl" /> when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> for the <see cref="T:System.Windows.Controls.TabControl" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <param name="e">Data used by the event.</param>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <param name="e">Data used by the event.</param>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.TabControl.SelectionChanged" /> event.</summary>
      <param name="args">Provides data for the <see cref="E:System.Windows.Controls.TabControl.SelectionChanged" /> event.</param>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedContent">
      <summary>Gets the content of the currently selected <see cref="T:System.Windows.Controls.TabItem" />.</summary>
      <returns>The content of the currently selected <see cref="T:System.Windows.Controls.TabItem" />. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.SelectedContent" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TabControl.SelectedContent" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedIndex">
      <summary>Gets or sets the index of the currently selected <see cref="T:System.Windows.Controls.TabItem" />.</summary>
      <returns>The index of the currently selected <see cref="T:System.Windows.Controls.TabItem" />, or -1 if a <see cref="T:System.Windows.Controls.TabItem" /> is not selected.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedIndexProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.SelectedIndex" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TabControl.SelectedIndex" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedItem">
      <summary>Gets or sets the currently selected <see cref="T:System.Windows.Controls.TabItem" />.</summary>
      <returns>The currently selected <see cref="T:System.Windows.Controls.TabItem" />, or null if a <see cref="T:System.Windows.Controls.TabItem" /> is not selected.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.SelectedItem" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TabControl.SelectedItem" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.TabControl.SelectionChanged">
      <summary>Occurs when the selected <see cref="T:System.Windows.Controls.TabItem" /> changes.</summary>
    </member>
    <member name="P:System.Windows.Controls.TabControl.TabStripPlacement">
      <summary>Gets or sets how <see cref="T:System.Windows.Controls.TabItem" /> headers align relative to the <see cref="T:System.Windows.Controls.TabItem" /> content.</summary>
      <returns>The alignment of <see cref="T:System.Windows.Controls.TabItem" /> headers relative to the <see cref="T:System.Windows.Controls.TabItem" /> content. The default is <see cref="F:System.Windows.Controls.Dock.Top" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.TabStripPlacementProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.TabStripPlacement" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TabControl.TabStripPlacement" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.TabItem">
      <summary>Represents a selectable item in a <see cref="T:System.Windows.Controls.TabControl" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.TabItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TabItem" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.TabItem.HasHeader">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.TabItem" /> has a header.</summary>
      <returns>true if <see cref="P:System.Windows.Controls.TabItem.Header" /> is not null; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabItem.HasHeaderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabItem.HasHeader" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TabItem.HasHeader" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TabItem.Header">
      <summary>Gets or sets the header of the <see cref="T:System.Windows.Controls.TabItem" />.</summary>
      <returns>The current header of the <see cref="T:System.Windows.Controls.TabItem" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabItem.HeaderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabItem.Header" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TabItem.Header" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TabItem.HeaderTemplate">
      <summary>Gets or sets the template that is used to display the content of the <see cref="T:System.Windows.Controls.TabItem" /> header.</summary>
      <returns>The current template that is used to display <see cref="T:System.Windows.Controls.TabItem" /> header content.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabItem.HeaderTemplateProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TabItem.IsFocused">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Controls.TabItem" /> has focus.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.TabItem" /> has focus; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabItem.IsFocusedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabItem.IsFocused" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TabItem.IsFocused" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TabItem.IsSelected">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.TabItem" /> is currently selected.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.TabItem" /> is selected; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.TabItem.IsSelectedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.TabItem" /> when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnContentChanged(System.Object,System.Object)">
      <param name="oldContent">The previous <see cref="T:System.Windows.Controls.TabItem" /> content.</param>
      <param name="newContent">The new <see cref="T:System.Windows.Controls.TabItem" /> content.</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnCreateAutomationPeer">
      <summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for this <see cref="T:System.Windows.Controls.TabItem" />.</summary>
      <returns>An automation peer for this <see cref="T:System.Windows.Controls.TabItem" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnHeaderChanged(System.Object,System.Object)">
      <summary>Called when the <see cref="P:System.Windows.Controls.TabItem.Header" /> property changes.</summary>
      <param name="oldHeader">The previous value of the <see cref="P:System.Windows.Controls.TabItem.Header" /> property.</param>
      <param name="newHeader">The new value of the <see cref="P:System.Windows.Controls.TabItem.Header" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>Called when the <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" /> property changes.</summary>
      <param name="oldHeaderTemplate">The previous value of the <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" /> property.</param>
      <param name="newHeaderTemplate">The new value of the <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" /> property.</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnIsFocusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when the value of the <see cref="P:System.Windows.Controls.TabItem.IsFocused" /> property changes.</summary>
      <param name="e">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>Called to indicate that the <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> property has changed to true.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>Called to indicate that the <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> property has changed to false.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Windows.Controls.TabItem.TabStripPlacement">
      <summary>Gets the location of the tab strip relative to the <see cref="T:System.Windows.Controls.TabItem" /> content.</summary>
      <returns>The location of the tab strip relative to the <see cref="T:System.Windows.Controls.TabItem" /> content.</returns>
    </member>
    <member name="T:System.Windows.Controls.TreeView">
      <summary>Represents a control that displays hierarchical data in a tree structure that has items that can expand and collapse.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TreeView" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.TreeView.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Removes all templates, styles, and bindings for the object displayed as a <see cref="T:System.Windows.Controls.TreeViewItem" />.</summary>
      <param name="element">The <see cref="T:System.Windows.Controls.TreeViewItem" /> element to clear.</param>
      <param name="item">The item that is contained in the <see cref="T:System.Windows.Controls.TreeViewItem" />.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.GetContainerForItemOverride">
      <summary>Creates a <see cref="T:System.Windows.Controls.TreeViewItem" /> to display content.</summary>
      <returns>A <see cref="T:System.Windows.Controls.TreeViewItem" /> to use as a container for content.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines whether the specified item is a <see cref="T:System.Windows.Controls.TreeViewItem" />, which is the default container for items in the <see cref="T:System.Windows.Controls.TreeView" /> control.</summary>
      <returns>true if the item is a <see cref="T:System.Windows.Controls.TreeViewItem" />; otherwise, false,</returns>
      <param name="item">The object to evaluate.</param>
    </member>
    <member name="P:System.Windows.Controls.TreeView.ItemContainerStyle">
      <summary>Gets or sets the <see cref="T:System.Windows.Style" /> that is applied to the container element generated for each item.</summary>
      <returns>The <see cref="T:System.Windows.Style" /> applied to the container element that contains each item.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeView.ItemContainerStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeView.ItemContainerStyle" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TreeView.ItemContainerStyle" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.TreeView" /> control when a new control template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> for the <see cref="T:System.Windows.Controls.TreeView" /> control.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Makes adjustments to the <see cref="T:System.Windows.Controls.TreeView" /> control when the value of the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes.</summary>
      <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> that contains data about the change. </param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event when a key is pressed while the control has focus.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e " />is null.</exception>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseEnter" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> event.</summary>
      <param name="e">
        <see cref="T:System.Windows.Input.MouseEventArgs" />
      </param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Provided handling for the <see cref="E:System.Windows.UIElement.MouseMove" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnSelectedItemChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
      <summary>Raises the <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> event when the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> property value changes.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the container element to display the specified item.</summary>
      <param name="element">The container element used to display the specified item.</param>
      <param name="item">The item to display.</param>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedItem">
      <summary>Gets the selected item in a <see cref="T:System.Windows.Controls.TreeView" />.</summary>
      <returns>The currently selected item or null if no item is selected. The default value is null.</returns>
    </member>
    <member name="E:System.Windows.Controls.TreeView.SelectedItemChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> property changes.</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedItemProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedValue">
      <summary>Gets the value of the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> property that is specified by the <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> property.</summary>
      <returns>The value of the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> property that is specified by the <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> property, or null if no item is selected. The default value is null.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedValuePath">
      <summary>Gets or sets the property path that is used to get the <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> property of the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> property in a <see cref="T:System.Windows.Controls.TreeView" />.</summary>
      <returns>The property path that is used to get the <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> property of the <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> property in a <see cref="T:System.Windows.Controls.TreeView" />. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedValuePathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> dependency property.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> dependency property. </returns>
    </member>
    <member name="T:System.Windows.Controls.TreeViewItem">
      <summary>Provides a hierarchical selectable item for the <see cref="T:System.Windows.Controls.TreeView" /> control.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TreeViewItem" /> class.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Removes all templates, styles, and bindings for the object displayed as a <see cref="T:System.Windows.Controls.TreeViewItem" />.</summary>
      <param name="element">The <see cref="T:System.Windows.Controls.TreeViewItem" /> element to clear.</param>
      <param name="item">The item that is contained in the <see cref="T:System.Windows.Controls.TreeViewItem" />.</param>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Collapsed">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> property changes from true to false.</summary>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Expanded">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> property changes from false to true.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.GetContainerForItemOverride">
      <summary>Creates a <see cref="T:System.Windows.Controls.TreeViewItem" /> to display content.</summary>
      <returns>A <see cref="T:System.Windows.Controls.TreeViewItem" /> to use as a container for content.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.HasItems">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Controls.TreeViewItem" /> contains items.</summary>
      <returns>true if this <see cref="T:System.Windows.Controls.TreeViewItem" /> contains items; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.HasItemsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeViewItem.HasItems" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TreeViewItem.HasItems" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsExpanded">
      <summary>Gets or sets a value that indicates whether the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> contained by this <see cref="T:System.Windows.Controls.TreeViewItem" /> are expanded or collapsed.</summary>
      <returns>true to indicate the contents of the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection are expanded; false to indicate the items are collapsed. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsExpandedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines whether an object is a <see cref="T:System.Windows.Controls.TreeViewItem" />.</summary>
      <returns>true if <paramref name="item" /> is a <see cref="T:System.Windows.Controls.TreeViewItem" />; otherwise, false.</returns>
      <param name="item">The object to evaluate.</param>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsSelected">
      <summary>Gets or sets a value that indicates whether this <see cref="T:System.Windows.Controls.TreeViewItem" /> is selected.</summary>
      <returns>true if this <see cref="T:System.Windows.Controls.TreeViewItem" /> is selected; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsSelectedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsSelectionActive">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.TreeViewItem" /> has focus.</summary>
      <returns>true if this <see cref="T:System.Windows.Controls.TreeViewItem" /> has focus; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsSelectionActiveProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelectionActive" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelectionActive" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.TreeViewItem" /> control when a new control template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnCollapsed(System.Windows.RoutedEventArgs)">
      <summary>Raises a <see cref="E:System.Windows.Controls.TreeViewItem.Collapsed" /> event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> property changes from true to false.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> object for the <see cref="T:System.Windows.Controls.TreeViewItem" />.</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnExpanded(System.Windows.RoutedEventArgs)">
      <summary>Raises an <see cref="E:System.Windows.Controls.TreeViewItem.Expanded" /> event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> property changes from false to true.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Makes adjustments to the <see cref="T:System.Windows.Controls.TreeViewItem" /> when the value of the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes. </summary>
      <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> that contains data about the change.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event when the <see cref="T:System.Windows.Controls.TreeViewItem" /> has focus.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseEnter" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.TreeViewItem.Selected" /> event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> property changes from false to true.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Controls.TreeViewItem.Unselected" /> event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> property changes from true to false.</summary>
      <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified container element to display the specified item.</summary>
      <param name="element">Container element used to display the specified item.</param>
      <param name="item">The item to display.</param>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Selected">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> property of a <see cref="T:System.Windows.Controls.TreeViewItem" /> changes from false to true.</summary>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Unselected">
      <summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> property of a <see cref="T:System.Windows.Controls.TreeViewItem" /> changes from true to false.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarButton">
      <summary>Represents a button on a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> class. </summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.CalendarButton.CalendarButtonMouseDown">
      <summary>Occurs when the left mouse button is pressed (or when the tip of the stylus touches the tablet) while the mouse pointer is over a <see cref="T:System.Windows.Controls.Primitives.CalendarButton" />.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.CalendarButton.CalendarButtonMouseUp">
      <summary>Occurs when the left mouse button is released while the mouse pointer is over a <see cref="T:System.Windows.Controls.Primitives.CalendarButton" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarButton.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> when a new template is applied.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarDayButton">
      <summary>Represents a day on a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarDayButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> class. </summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.CalendarDayButton.CalendarDayButtonMouseDown">
      <summary>Occurs when the left mouse button is pressed (or when the tip of the stylus touches the tablet) while the mouse pointer is over a <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" />.</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.CalendarDayButton.CalendarDayButtonMouseUp">
      <summary>Occurs when the left mouse button is released while the mouse pointer is over a <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarDayButton.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> when a new template is applied.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarItem">
      <summary>Represents the currently displayed month or year on a <see cref="T:System.Windows.Controls.Calendar" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarItem.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> when a new template is applied.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DatePickerTextBox">
      <summary>Represents the text input of a <see cref="T:System.Windows.Controls.DatePicker" />. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" /> when a new template is applied.</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DatePickerTextBox.Watermark">
      <summary>Gets or sets the content displayed as a watermark in the <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" /> when it is empty.</summary>
      <returns>The content displayed as a watermark in the <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" /> when it is empty.</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DatePickerTextBox.WatermarkProperty">
      <summary>Indentifies the <see cref="P:System.Windows.Controls.Primitives.DatePickerTextBox.Watermark" /> dependency property.</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TabPanel">
      <summary>Handles the layout of <see cref="T:System.Windows.Controls.TabItem" /> objects on a <see cref="T:System.Windows.Controls.TabControl" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.TabPanel" /> class. </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges and sizes the content of a <see cref="T:System.Windows.Controls.Primitives.TabPanel" /> object.</summary>
      <returns>The size of the arranged control.</returns>
      <param name="finalSize">The size that a tab panel uses to position child elements.</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.MeasureOverride(System.Windows.Size)">
      <summary>Called when remeasuring the control is required.</summary>
      <returns>The measured size of the control.</returns>
      <param name="availableSize">Constraint size as an upper limit. The return value should not exceed this size.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Windows.Controls.Navigation.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Controls.Navigation</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Automation.Peers.FrameAutomationPeer">
      <summary>Exposes <see cref="T:System.Windows.Controls.Frame" /> types to UI automation.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.#ctor(System.Windows.Controls.Frame)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" /> class. </summary>
      <param name="owner">The <see cref="T:System.Windows.Controls.Frame" /> to associate with this <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" />.</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> for the element associated with this <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
      <returns>A value of the enumeration.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the class for the object associated with this <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
      <returns>A string value that represents the type of the constructing owner class.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.GetNameCore">
      <summary>Gets the text label of the <see cref="T:System.Windows.Controls.Frame" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</summary>
      <returns>The text label of the element that is associated with this automation peer, if not null; otherwise, the name of the owning frame, or the name of the frame class.</returns>
    </member>
    <member name="T:System.Windows.Controls.Frame">
      <summary>Represents a control that supports navigation to and from Silverlight pages.</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Frame" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.CacheSize">
      <summary>Gets or sets the number of pages that can be cached for the frame.</summary>
      <returns>The number of pages that can be cached for the frame. The default value is 10.</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.CacheSizeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Frame.CacheSize" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Frame.CacheSize" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.CanGoBack">
      <summary>Gets a value that indicates whether there is at least one entry in the back navigation history.</summary>
      <returns>true if there is at least one entry in the back navigation history; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.CanGoBackProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Frame.CanGoBack" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Frame.CanGoBack" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.CanGoForward">
      <summary>Gets a value that indicates whether there is at least one entry in the forward navigation history.</summary>
      <returns>true if there is at least one entry in the forward navigation history; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.CanGoForwardProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Frame.CanGoForward" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Frame.CanGoForward" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.ContentLoader">
      <summary>Gets or sets the object responsible for providing the content that corresponds to a requested URI. </summary>
      <returns>The object responsible for providing the content that corresponds to a requested URI. The default is a <see cref="T:System.Windows.Navigation.PageResourceContentLoader" /> instance.</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.ContentLoaderProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Frame.ContentLoader" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Frame.ContentLoader" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.CurrentSource">
      <summary>Gets the uniform resource identifier (URI) of the content that is currently displayed.</summary>
      <returns>A value that represents the URI of content that is currently displayed.</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.CurrentSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Frame.CurrentSource" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Frame.CurrentSource" /> dependency property.</returns>
    </member>
    <member name="E:System.Windows.Controls.Frame.FragmentNavigation">
      <summary>Occurs when navigation to a content fragment begins.</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.GoBack">
      <summary>Navigates to the most recent entry in the back navigation history, or throws an exception if no entry exists in back navigation.</summary>
      <exception cref="T:System.InvalidOperationException">There are no entries in the back navigation history.</exception>
    </member>
    <member name="M:System.Windows.Controls.Frame.GoForward">
      <summary>Navigates to the most recent entry in the forward navigation history, or throws an exception if no entry exists in forward navigation.</summary>
      <exception cref="T:System.InvalidOperationException">There are no entries in the forward navigation history.</exception>
    </member>
    <member name="P:System.Windows.Controls.Frame.JournalOwnership">
      <summary>Gets or sets whether a frame is responsible for managing its own navigation history, or whether it integrates with the Web browser journal.</summary>
      <returns>A value that specifies whether frame manages its own journal. The default value is <see cref="F:System.Windows.Navigation.JournalOwnership.Automatic" />.</returns>
      <exception cref="T:System.InvalidOperationException">A nested frame or more than one frame attempts to integrate with browser journal.</exception>
    </member>
    <member name="F:System.Windows.Controls.Frame.JournalOwnershipProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Frame.JournalOwnership" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Frame.JournalOwnership" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.Navigate(System.Uri)">
      <summary>Navigates to the content specified by the uniform resource identifier (URI).</summary>
      <returns>true if the navigation started successfully; otherwise, false.</returns>
      <param name="source">The URI representing a page to display in the frame.</param>
    </member>
    <member name="E:System.Windows.Controls.Frame.Navigated">
      <summary>Occurs when the content that is being navigated to has been found and is available.</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.Navigating">
      <summary>Occurs when a new navigation is requested.</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.NavigationFailed">
      <summary>Occurs when an error is encountered while navigating to the requested content.</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.NavigationStopped">
      <summary>Occurs when a navigation is terminated by either calling the <see cref="M:System.Windows.Controls.Frame.StopLoading" /> method, or when a new navigation is requested while the current navigation is in progress.</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.OnApplyTemplate">
      <summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Frame" /> when a new template is applied.</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.OnCreateAutomationPeer">
      <summary>Returns a <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" /> for use by the Silverlight automation infrastructure.</summary>
      <returns>A <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" /> for the <see cref="T:System.Windows.Controls.Frame" /> object.</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.Refresh">
      <summary>Reloads the current page. </summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.Source">
      <summary>Gets or sets the uniform resource identifier (URI) of the current content or the content that is being navigated to.</summary>
      <returns>A value that represents the URI of the current content or the content that is being navigated to.</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Frame.Source" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Frame.Source" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.StopLoading">
      <summary>Stops asynchronous navigations that have not yet been processed.</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.UriMapper">
      <summary>Gets or sets the object to manage converting a uniform resource identifier (URI) to another URI for this frame.</summary>
      <returns>The object to convert URIs for this frame.</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.UriMapperProperty">
      <summary>Identifies the <see cref="P:System.Windows.Controls.Frame.UriMapper" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Controls.Frame.UriMapper" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Controls.Page">
      <summary>Encapsulates content that can be navigated to by a <see cref="T:System.Windows.Controls.Frame" />.</summary>
    </member>
    <member name="M:System.Windows.Controls.Page.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Page" /> class. </summary>
    </member>
    <member name="P:System.Windows.Controls.Page.NavigationCacheMode">
      <summary>Gets or sets a value that indicates whether this page is cached and whether it is cached indefinitely.</summary>
      <returns>The value that specifies the caching behavior for this page.</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.NavigationContext">
      <summary>Gets an object that contains information about the navigation request.</summary>
      <returns>An object that contains information about the navigation request.</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.NavigationService">
      <summary>Gets the service that the host used to navigate to this page.</summary>
      <returns>The service the host used to navigate to this page.</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)">
      <summary>Called when navigating to a fragment on a page.</summary>
      <param name="e">An object that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Page.OnNavigatedFrom(System.Windows.Navigation.NavigationEventArgs)">
      <summary>Called when a page is no longer the active page in a frame. </summary>
      <param name="e">An object that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Page.OnNavigatedTo(System.Windows.Navigation.NavigationEventArgs)">
      <summary>Called when a page becomes the active page in a frame. </summary>
      <param name="e">An object that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Controls.Page.OnNavigatingFrom(System.Windows.Navigation.NavigatingCancelEventArgs)">
      <summary>Called just before a page is no longer the active page in a frame.</summary>
      <param name="e">An object that contains the event data.</param>
    </member>
    <member name="P:System.Windows.Controls.Page.Title">
      <summary>Gets or sets the name for the page.</summary>
      <returns>The name for the page.</returns>
    </member>
    <member name="T:System.Windows.Navigation.FragmentNavigationEventArgs">
      <summary>Provides data for the <see cref="M:System.Windows.Controls.Page.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)" /> method and <see cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" /> event.</summary>
    </member>
    <member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Fragment">
      <summary>Gets the uniform resource identifier (URI) fragment.</summary>
      <returns>The URI fragment. </returns>
    </member>
    <member name="T:System.Windows.Navigation.FragmentNavigationEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" /> event. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The data for the event.</param>
    </member>
    <member name="T:System.Windows.Navigation.INavigationContentLoader">
      <summary>Defines methods for loading content that corresponds to a URI. </summary>
    </member>
    <member name="M:System.Windows.Navigation.INavigationContentLoader.BeginLoad(System.Uri,System.Uri,System.AsyncCallback,System.Object)">
      <summary>Begins asynchronous loading of the content for the specified target URI. </summary>
      <returns>An object that stores information about the asynchronous operation.</returns>
      <param name="targetUri">The URI to load content for.</param>
      <param name="currentUri">The URI that is currently loaded. </param>
      <param name="userCallback">The method to call when the content finishes loading. </param>
      <param name="asyncState">An object for storing custom state information.</param>
    </member>
    <member name="M:System.Windows.Navigation.INavigationContentLoader.CancelLoad(System.IAsyncResult)">
      <summary>Attempts to cancel content loading for the specified asynchronous operation. </summary>
      <param name="asyncResult">An object that identifies the asynchronous operation to cancel. </param>
    </member>
    <member name="M:System.Windows.Navigation.INavigationContentLoader.CanLoad(System.Uri,System.Uri)">
      <summary>Gets a value that indicates whether the specified URI can be loaded. </summary>
      <returns>true if the URI can be loaded; otherwise, false.</returns>
      <param name="targetUri">The URI to test.</param>
      <param name="currentUri">The URI that is currently loaded.</param>
    </member>
    <member name="M:System.Windows.Navigation.INavigationContentLoader.EndLoad(System.IAsyncResult)">
      <summary>Completes the asynchronous content loading operation. </summary>
      <returns>An object that represents the result of the asynchronous content loading operation.</returns>
      <param name="asyncResult">An object that identifies the asynchronous operation.</param>
    </member>
    <member name="T:System.Windows.Navigation.JournalOwnership">
      <summary>Specifies the type of journal used by the frame. </summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalOwnership.Automatic">
      <summary>If the <see cref="T:System.Windows.Controls.Frame" /> control is a top-level frame, it integrates with the browser journal; otherwise, it maintains its own journal.</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalOwnership.OwnsJournal">
      <summary>The <see cref="T:System.Windows.Controls.Frame" /> maintains its own journal. This option can be used with any <see cref="T:System.Windows.Controls.Frame" />.</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalOwnership.UsesParentJournal">
      <summary>The <see cref="T:System.Windows.Controls.Frame" /> integrates with the browser journal. This option can be used only with a top-level <see cref="T:System.Windows.Controls.Frame" />; otherwise, an exception is thrown.</summary>
    </member>
    <member name="T:System.Windows.Navigation.LoadResult">
      <summary>Represents the content loaded by an <see cref="T:System.Windows.Navigation.INavigationContentLoader" /> implementation.</summary>
    </member>
    <member name="M:System.Windows.Navigation.LoadResult.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.LoadResult" /> class and sets the <see cref="P:System.Windows.Navigation.LoadResult.LoadedContent" /> property to the specified object.</summary>
      <param name="loadedContent">The loaded page.</param>
    </member>
    <member name="M:System.Windows.Navigation.LoadResult.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.LoadResult" /> class and sets the <see cref="P:System.Windows.Navigation.LoadResult.RedirectUri" /> property to the specified object.</summary>
      <param name="redirectUri">The URI to redirect navigation to.</param>
    </member>
    <member name="P:System.Windows.Navigation.LoadResult.LoadedContent">
      <summary>Gets the loaded page.</summary>
      <returns>The loaded page.</returns>
    </member>
    <member name="P:System.Windows.Navigation.LoadResult.RedirectUri">
      <summary>Gets the URI to redirect navigation to.</summary>
      <returns>The URI to redirect navigation to.</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigationCacheMode">
      <summary>Specifies how the page is cached when used within a frame.</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationCacheMode.Disabled">
      <summary>The page is never cached and a new instance of the page is created on each visit.</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationCacheMode.Required">
      <summary>The page is cached and the cached instance is reused for every visit regardless of the cache size for the frame.</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationCacheMode.Enabled">
      <summary>The page is cached, but the cached instance is discarded when the size of the cache for the frame is exceeded.</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationContext">
      <summary>Represents the state of a navigation operation.</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationContext.QueryString">
      <summary>Gets a collection of query string values.</summary>
      <returns>A collection that contains the query string values.</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigationFailedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" /> event of the <see cref="T:System.Windows.Navigation.NavigationService" /> class and the <see cref="E:System.Windows.Controls.Frame.NavigationFailed" /> event of the <see cref="T:System.Windows.Controls.Frame" /> class.</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Exception">
      <summary>Gets the error from the failed navigation.</summary>
      <returns>A value that represents the error.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Handled">
      <summary>Gets or sets a value that indicates whether the failure event has been handled.</summary>
      <returns>true if the event has been handled; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Uri">
      <summary>Gets the uniform resource identifier (URI) for the content that could not be navigated to.</summary>
      <returns>A value that represents the URI.</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigationFailedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" /> event. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The data for the event.</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationService">
      <summary>Provides methods, properties, and events to support navigation within a Silverlight application.</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.CanGoBack">
      <summary>Gets a value that indicates whether there is at least one entry in the back navigation history.</summary>
      <returns>true if there is at least one entry in the back navigation history; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.CanGoForward">
      <summary>Gets a value that indicates whether there is at least one entry in the forward navigation history.</summary>
      <returns>true if there is at least one entry in the forward navigation history; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.CurrentSource">
      <summary>Gets the uniform resource identifier (URI) of the content that is currently displayed.</summary>
      <returns>A value that represents the URI of content that is currently displayed.</returns>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.FragmentNavigation">
      <summary>Occurs when navigation to a content fragment begins.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.GoBack">
      <summary>Navigates to the most recent entry in the back navigation history, or throws an exception if no entry exists in back navigation.</summary>
      <exception cref="T:System.InvalidOperationException">There are no entries in the back navigation history.</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.GoForward">
      <summary>Navigates to the most recent entry in the forward navigation history, or throws an exception if no entry exists in forward navigation.</summary>
      <exception cref="T:System.InvalidOperationException">There are no entries in the forward navigation history.</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)">
      <summary>Navigates to the content specified by the uniform resource identifier (URI).</summary>
      <returns>true if the navigation started successfully; otherwise, false.</returns>
      <param name="source">The URI of the content to navigate to.</param>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.Navigated">
      <summary>Occurs when the content that is being navigated to has been found and is available.</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.Navigating">
      <summary>Occurs when a new navigation is requested.</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.NavigationFailed">
      <summary>Occurs when an error is encountered while navigating to the requested content.</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.NavigationStopped">
      <summary>Occurs when the <see cref="M:System.Windows.Navigation.NavigationService.StopLoading" /> method is called, or when a new navigation is requested while the current navigation is in progress.</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Refresh">
      <summary>Reloads the current page. </summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.Source">
      <summary>Gets or sets the uniform resource identifier (URI) of the current content or the content that is being navigated to.</summary>
      <returns>A value that represents the URI of the current content or the content that is being navigated to.</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.StopLoading">
      <summary>Stops asynchronous navigations that have not yet been processed.</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationStoppedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" /> event. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The data for the event.</param>
    </member>
    <member name="T:System.Windows.Navigation.PageResourceContentLoader">
      <summary>Loads pages from the application package (.xap file) that correspond to a given URI.</summary>
    </member>
    <member name="M:System.Windows.Navigation.PageResourceContentLoader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.PageResourceContentLoader" /> class. </summary>
    </member>
    <member name="M:System.Windows.Navigation.PageResourceContentLoader.BeginLoad(System.Uri,System.Uri,System.AsyncCallback,System.Object)">
      <summary>Begins asynchronous loading of the page that corresponds to the specified target URI.</summary>
      <returns>An object that stores information about the asynchronous operation.</returns>
      <param name="targetUri">The URI of the page to load.</param>
      <param name="currentUri">The URI of the page that is currently loaded.</param>
      <param name="userCallback">The method to call when the page finishes loading.</param>
      <param name="asyncState">An object for storing custom state information.</param>
    </member>
    <member name="M:System.Windows.Navigation.PageResourceContentLoader.CancelLoad(System.IAsyncResult)">
      <summary>Attempts to cancel content loading for the specified asynchronous operation.</summary>
      <param name="asyncResult">An object that identifies the asynchronous operation to cancel.</param>
    </member>
    <member name="M:System.Windows.Navigation.PageResourceContentLoader.CanLoad(System.Uri,System.Uri)">
      <summary>Gets a value that indicates whether the specified URI can be loaded.</summary>
      <returns>true if the URI can be loaded; otherwise, false.</returns>
      <param name="targetUri">The URI to test.</param>
      <param name="currentUri">The URI of the page that is currently loaded.</param>
    </member>
    <member name="M:System.Windows.Navigation.PageResourceContentLoader.EndLoad(System.IAsyncResult)">
      <summary>Completes the asynchronous content loading operation.</summary>
      <returns>An object that represents the result of the asynchronous content loading operation.</returns>
      <param name="asyncResult">An object that identifies the asynchronous operation.</param>
    </member>
    <member name="T:System.Windows.Navigation.UriMapper">
      <summary>Converts a uniform resource identifier (URI) into a new URI based on the rules of a matching object specified in a collection of mapping objects.</summary>
    </member>
    <member name="M:System.Windows.Navigation.UriMapper.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.UriMapper" /> class. </summary>
    </member>
    <member name="M:System.Windows.Navigation.UriMapper.MapUri(System.Uri)">
      <summary>Converts a specified uniform resource identifier (URI) into a new URI based on the rules of a matching object in the <see cref="P:System.Windows.Navigation.UriMapper.UriMappings" /> collection.</summary>
      <returns>A URI to use for handling the request instead of the value of the <paramref name="uri" /> parameter. If no object in the <see cref="P:System.Windows.Navigation.UriMapper.UriMappings" /> collection matches <paramref name="uri" />, the original value for <paramref name="uri" /> is returned.</returns>
      <param name="uri">Original URI value to be converted to a new URI.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Navigation.UriMapper.UriMappings" /> property is null.</exception>
    </member>
    <member name="P:System.Windows.Navigation.UriMapper.UriMappings">
      <summary>Gets a collection of objects that are used to convert a uniform resource identifier (URI) into a new URI.</summary>
      <returns>A collection of objects that are used to convert URI values.</returns>
    </member>
    <member name="T:System.Windows.Navigation.UriMapperBase">
      <summary>Represents the base class for classes that convert a requested uniform resource identifier (URI) into a new URI based on mapping rules.</summary>
    </member>
    <member name="M:System.Windows.Navigation.UriMapperBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.UriMapperBase" /> class. </summary>
    </member>
    <member name="M:System.Windows.Navigation.UriMapperBase.MapUri(System.Uri)">
      <summary>When overridden in a derived class, converts a requested uniform resource identifier (URI) to a new URI.</summary>
      <returns>A URI to use for the request instead of the value in the <paramref name="uri" /> parameter.</returns>
      <param name="uri">The original URI value to be mapped to a new URI.</param>
    </member>
    <member name="T:System.Windows.Navigation.UriMapping">
      <summary>Defines the pattern for converting a requested uniform resource identifier (URI) into a new URI.</summary>
    </member>
    <member name="M:System.Windows.Navigation.UriMapping.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.UriMapping" /> class. </summary>
    </member>
    <member name="P:System.Windows.Navigation.UriMapping.MappedUri">
      <summary>Gets or sets the uniform resource identifier (URI) that is navigated to instead of the originally requested URI.</summary>
      <returns>The URI that the requested URI is converted to.</returns>
    </member>
    <member name="M:System.Windows.Navigation.UriMapping.MapUri(System.Uri)">
      <summary>Converts the specified uniform resource identifier (URI) to a new URI, if the specified URI matches the defined template for converting.</summary>
      <returns>The URI that has been converted or null if the URI cannot be converted.</returns>
      <param name="uri">The URI to convert.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Navigation.UriMapping.Uri" /> is null.-or-<see cref="P:System.Windows.Navigation.UriMapping.MappedUri" /> is null.-or-<see cref="P:System.Windows.Navigation.UriMapping.Uri" /> includes a query string.-or-<see cref="P:System.Windows.Navigation.UriMapping.Uri" /> includes a content fragment.</exception>
    </member>
    <member name="P:System.Windows.Navigation.UriMapping.Uri">
      <summary>Gets or sets the pattern to match when determining if the requested uniform resource identifier (URI) is converted to a mapped URI.</summary>
      <returns>The URI that will be converted.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Xml.Linq.Xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.Linq</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Linq.Extensions">
      <summary>Contains the LINQ to XML extension methods.</summary>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Returns a collection of elements that contains the ancestors of every node in the source collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the ancestors of every node in the source collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XNode" /> that contains the source collection.</param>
      <typeparam name="T">The type of the objects in <paramref name="source" />, constrained to <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of elements that contains the ancestors of every node in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the ancestors of every node in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XNode" /> that contains the source collection.</param>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
      <typeparam name="T">The type of the objects in <paramref name="source" />, constrained to <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>Returns a collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains every element in the source collection, and the ancestors of every element in the source collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the source collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the source collection.</param>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>Returns a collection of the attributes of every element in the source collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XAttribute" /> that contains the attributes of every element in the source collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the source collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of the attributes of every element in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XAttribute" /> that contains a filtered collection of the attributes of every element in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the source collection.</param>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Returns a collection of the descendant nodes of every document and element in the source collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XNode" /> of the descendant nodes of every document and element in the source collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XContainer" /> that contains the source collection.</param>
      <typeparam name="T">The type of the objects in <paramref name="source" />, constrained to <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>Returns a collection of nodes that contains every element in the source collection, and the descendant nodes of every element in the source collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XNode" /> that contains every element in the source collection, and the descendant nodes of every element in the source collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the source collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Returns a collection of elements that contains the descendant elements of every element and document in the source collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the descendant elements of every element and document in the source collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XContainer" /> that contains the source collection.</param>
      <typeparam name="T">The type of the objects in <paramref name="source" />, constrained to <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of elements that contains the descendant elements of every element and document in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the descendant elements of every element and document in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XContainer" /> that contains the source collection.</param>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
      <typeparam name="T">The type of the objects in <paramref name="source" />, constrained to <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>Returns a collection of elements that contains every element in the source collection, and the descendent elements of every element in the source collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains every element in the source collection, and the descendent elements of every element in the source collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the source collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of elements that contains every element in the source collection, and the descendents of every element in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains every element in the source collection, and the descendents of every element in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the source collection.</param>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Returns a collection of the child elements of every element and document in the source collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> of the child elements of every element or document in the source collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the source collection.</param>
      <typeparam name="T">The type of the objects in <paramref name="source" />, constrained to <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of the child elements of every element and document in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> of the child elements of every element and document in the source collection. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the source collection.</param>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
      <typeparam name="T">The type of the objects in <paramref name="source" />, constrained to <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Returns a collection of nodes that contains all nodes in the source collection, sorted in document order.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XNode" /> that contains all nodes in the source collection, sorted in document order.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XNode" /> that contains the source collection.</param>
      <typeparam name="T">The type of the objects in <paramref name="source" />, constrained to <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Returns a collection of the child nodes of every document and element in the source collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XNode" /> of the child nodes of every document and element in the source collection.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XNode" /> that contains the source collection.</param>
      <typeparam name="T">The type of the objects in <paramref name="source" />, constrained to <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
      <summary>Removes every attribute in the source collection from its parent element.</summary>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XAttribute" /> that contains the source collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Removes every node in the source collection from its parent node.</summary>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XNode" /> that contains the source collection.</param>
      <typeparam name="T">The type of the objects in <paramref name="source" />, constrained to <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="T:System.Xml.Linq.LoadOptions">
      <summary>Specifies load options when parsing XML.  </summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.None">
      <summary>Does not preserve insignificant white space or load base URI and line information.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.PreserveWhitespace">
      <summary>Preserves insignificant white space while parsing.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.SetBaseUri">
      <summary>Requests the base URI information from the <see cref="T:System.Xml.XmlReader" />, and makes it available via the <see cref="P:System.Xml.Linq.XObject.BaseUri" /> property.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.SetLineInfo">
      <summary>Requests the line information from the <see cref="T:System.Xml.XmlReader" /> and makes it available via properties on <see cref="T:System.Xml.Linq.XObject" />.</summary>
    </member>
    <member name="T:System.Xml.Linq.ReaderOptions">
      <summary>Specifies whether to omit duplicate namespaces when loading an <see cref="T:System.Xml.Linq.XDocument" /> with an <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.ReaderOptions.None">
      <summary>No reader options specified.</summary>
    </member>
    <member name="F:System.Xml.Linq.ReaderOptions.OmitDuplicateNamespaces">
      <summary>Omit duplicate namespaces when loading the <see cref="T:System.Xml.Linq.XDocument" />.</summary>
    </member>
    <member name="T:System.Xml.Linq.SaveOptions">
      <summary>Specifies serialization options. </summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.None">
      <summary>Formats (indent) the XML while serializing.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.DisableFormatting">
      <summary>Preserves all insignificant white space while serializing.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces">
      <summary>Removes duplicate namespace declarations. For the duplicate namespace declarations to be removed, both the prefix and the namespace have to match.</summary>
    </member>
    <member name="T:System.Xml.Linq.XAttribute">
      <summary>Represents an XML attribute.</summary>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XAttribute" /> class from another <see cref="T:System.Xml.Linq.XAttribute" /> object. </summary>
      <param name="other">An <see cref="T:System.Xml.Linq.XAttribute" /> object to copy from.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="other" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XAttribute" /> class from the specified name and value. </summary>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> of the attribute.</param>
      <param name="value">An <see cref="T:System.Object" /> containing the value of the attribute.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> or <paramref name="value" /> parameter is null.</exception>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.EmptySequence">
      <summary>Gets an empty collection of attributes.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XAttribute" /> containing an empty collection.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
      <summary>Determines if this attribute is a namespace declaration.</summary>
      <returns>true if this attribute is a namespace declaration; otherwise false.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.Name">
      <summary>Gets the expanded name of this attribute.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XName" /> containing the name of this attribute.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.NextAttribute">
      <summary>Gets the next attribute of the parent element.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XAttribute" /> containing the next attribute of the parent element.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.NodeType">
      <summary>Gets the node type for this node.</summary>
      <returns>The node type. For <see cref="T:System.Xml.Linq.XAttribute" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.Attribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.DateTime" />.</summary>
      <returns>A <see cref="T:System.DateTime" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.DateTime" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.DateTime" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="attribute" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.DateTime" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.Decimal" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.Double" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Decimal" />.</summary>
      <returns>A <see cref="T:System.Decimal" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Decimal" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.Decimal" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="attribute" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>A <see cref="T:System.DateTimeOffset" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.DateTimeOffset" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.DateTimeOffset" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="attribute" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Guid" />.</summary>
      <returns>A <see cref="T:System.Guid" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.Guid" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="attribute" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.Guid" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.TimeSpan" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.DateTimeOffset" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.TimeSpan" />.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.TimeSpan" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.TimeSpan" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="attribute" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Double" />.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Double" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.Double" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="attribute" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to an <see cref="T:System.Int32" />.</summary>
      <returns>A <see cref="T:System.Int32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Int32" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.Int32" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="attribute" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.UInt32" />.</summary>
      <returns>A <see cref="T:System.UInt32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.UInt32" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.UInt32" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="attribute" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Boolean" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Boolean" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.Boolean" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="attribute" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.Boolean" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.UInt32" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.UInt64" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Single" />.</summary>
      <returns>A <see cref="T:System.Single" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Single" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.Single" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="attribute" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.Single" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to an <see cref="T:System.Int64" />.</summary>
      <returns>A <see cref="T:System.Int64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Int64" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.Int64" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="attribute" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.Int64" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.UInt64" />.</summary>
      <returns>A <see cref="T:System.UInt64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.UInt64" />.</param>
      <exception cref="T:System.FormatException">The attribute does not contain a valid <see cref="T:System.UInt64" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="attribute" /> parameter is null.</exception>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.PreviousAttribute">
      <summary>Gets the previous attribute of the parent element.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XAttribute" /> containing the previous attribute of the parent element.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.Remove">
      <summary>Removes this attribute from its parent element.</summary>
      <exception cref="T:System.InvalidOperationException">The parent element is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
      <summary>Sets the value of this attribute.</summary>
      <param name="value">The value to assign to this attribute.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="value" /> is an <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.ToString">
      <summary>Converts the current <see cref="T:System.Xml.Linq.XAttribute" /> object to a string representation.</summary>
      <returns>A <see cref="T:System.String" /> containing the XML text representation of an attribute and its value.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.Value">
      <summary>Gets or sets the value of this attribute.</summary>
      <returns>A <see cref="T:System.String" /> containing the value of this attribute.</returns>
      <exception cref="T:System.ArgumentNullException">When setting, the <paramref name="value" /> is null.</exception>
    </member>
    <member name="T:System.Xml.Linq.XCData">
      <summary>Represents a text node that contains CDATA.  </summary>
    </member>
    <member name="M:System.Xml.Linq.XCData.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XCData" /> class. </summary>
      <param name="value">A string that contains the value of the <see cref="T:System.Xml.Linq.XCData" /> node.</param>
    </member>
    <member name="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XCData" /> class. </summary>
      <param name="other">The <see cref="T:System.Xml.Linq.XCData" /> node to copy from.</param>
    </member>
    <member name="P:System.Xml.Linq.XCData.NodeType">
      <summary>Gets the node type for this node.</summary>
      <returns>The node type. For <see cref="T:System.Xml.Linq.XCData" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.CDATA" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes this CDATA object to an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.</exception>
    </member>
    <member name="T:System.Xml.Linq.XComment">
      <summary>Represents an XML comment. </summary>
    </member>
    <member name="M:System.Xml.Linq.XComment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XComment" /> class with the specified string content. </summary>
      <param name="value">A string that contains the contents of the new <see cref="T:System.Xml.Linq.XComment" /> object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XComment" /> class from an existing comment node. </summary>
      <param name="other">The <see cref="T:System.Xml.Linq.XComment" /> node to copy from.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="other" /> parameter is null.</exception>
    </member>
    <member name="P:System.Xml.Linq.XComment.NodeType">
      <summary>Gets the node type for this node.</summary>
      <returns>The node type. For <see cref="T:System.Xml.Linq.XComment" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.Comment" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XComment.Value">
      <summary>Gets or sets the string value of this comment.</summary>
      <returns>A <see cref="T:System.String" /> that contains the string value of this comment.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)">
      <summary>Write this comment to an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.</exception>
    </member>
    <member name="T:System.Xml.Linq.XContainer">
      <summary>Represents a node that can contain other nodes.</summary>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Add(System.Object)">
      <summary>Adds the specified content as children of this <see cref="T:System.Xml.Linq.XContainer" />.</summary>
      <param name="content">A content object containing simple content or a collection of content objects to be added.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Add(System.Object[])">
      <summary>Adds the specified content as children of this <see cref="T:System.Xml.Linq.XContainer" />.</summary>
      <param name="content">A parameter list of content objects.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
      <summary>Adds the specified content as the first children of this document or element.</summary>
      <param name="content">A content object containing simple content or a collection of content objects to be added.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
      <summary>Adds the specified content as the first children of this document or element.</summary>
      <param name="content">A parameter list of content objects.</param>
      <exception cref="T:System.InvalidOperationException">The parent is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XContainer.CreateWriter">
      <summary>Creates an <see cref="T:System.Xml.XmlWriter" /> that can be used to add nodes to the <see cref="T:System.Xml.Linq.XContainer" />.</summary>
      <returns>An <see cref="T:System.Xml.XmlWriter" /> that is ready to have content written to it.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.DescendantNodes">
      <summary>Returns a collection of the descendant nodes for this document or element, in document order.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XNode" /> containing the descendant nodes of the <see cref="T:System.Xml.Linq.XContainer" />, in document order.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Descendants">
      <summary>Returns a collection of the descendant elements for this document or element, in document order.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the descendant elements of the <see cref="T:System.Xml.Linq.XContainer" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of the descendant elements for this document or element, in document order. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the descendant elements of the <see cref="T:System.Xml.Linq.XContainer" /> that match the specified <see cref="T:System.Xml.Linq.XName" />.</returns>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
      <summary>Gets the first (in document order) child element with the specified <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>A <see cref="T:System.Xml.Linq.XElement" /> that matches the specified <see cref="T:System.Xml.Linq.XName" />, or null.</returns>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Elements">
      <summary>Returns a collection of the child elements of this element or document, in document order.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the child elements of this <see cref="T:System.Xml.Linq.XContainer" />, in document order.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of the child elements of this element or document, in document order. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the children of the <see cref="T:System.Xml.Linq.XContainer" /> that have a matching <see cref="T:System.Xml.Linq.XName" />, in document order.</returns>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
    </member>
    <member name="P:System.Xml.Linq.XContainer.FirstNode">
      <summary>Get the first child node of this node.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XNode" /> containing the first child node of the <see cref="T:System.Xml.Linq.XContainer" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XContainer.LastNode">
      <summary>Get the last child node of this node.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XNode" /> containing the last child node of the <see cref="T:System.Xml.Linq.XContainer" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Nodes">
      <summary>Returns a collection of the child nodes of this element or document, in document order.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XNode" /> containing the contents of this <see cref="T:System.Xml.Linq.XContainer" />, in document order.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.RemoveNodes">
      <summary>Removes the child nodes from this document or element.</summary>
    </member>
    <member name="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
      <summary>Replaces the children nodes of this document or element with the specified content.</summary>
      <param name="content">A content object containing simple content or a collection of content objects that replace the children nodes.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
      <summary>Replaces the children nodes of this document or element with the specified content.</summary>
      <param name="content">A parameter list of content objects.</param>
    </member>
    <member name="T:System.Xml.Linq.XDeclaration">
      <summary>Represents an XML declaration. </summary>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XDeclaration" /> class with the specified version, encoding, and standalone status.</summary>
      <param name="version">The version of the XML, usually "1.0".</param>
      <param name="encoding">The encoding for the XML document.</param>
      <param name="standalone">A string containing "yes" or "no" that specifies whether the XML is standalone or requires external entities to be resolved.</param>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XDeclaration" /> class from another <see cref="T:System.Xml.Linq.XDeclaration" /> object. </summary>
      <param name="other">The <see cref="T:System.Xml.Linq.XDeclaration" /> used to initialize this <see cref="T:System.Xml.Linq.XDeclaration" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Encoding">
      <summary>Gets or sets the encoding for this document.</summary>
      <returns>A <see cref="T:System.String" /> containing the code page name for this document.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Standalone">
      <summary>Gets or sets the standalone property for this document.</summary>
      <returns>A <see cref="T:System.String" /> containing the standalone property for this document.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.ToString">
      <summary>Provides the declaration as a formatted string.</summary>
      <returns>A <see cref="T:System.String" /> that contains the formatted XML string.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Version">
      <summary>Gets or sets the version property for this document.</summary>
      <returns>A <see cref="T:System.String" /> containing the version property for this document.</returns>
    </member>
    <member name="T:System.Xml.Linq.XDocument">
      <summary>Represents an XML document. </summary>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XDocument" /> class. </summary>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XDocument" /> class with the specified content.</summary>
      <param name="content">A parameter list of content objects to add to this document.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XDocument" /> class with the specified <see cref="T:System.Xml.Linq.XDeclaration" /> and content.</summary>
      <param name="declaration">An <see cref="T:System.Xml.Linq.XDeclaration" /> for the document.</param>
      <param name="content">The content of the document.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XDocument" /> class from an existing <see cref="T:System.Xml.Linq.XDocument" /> object.</summary>
      <param name="other">The <see cref="T:System.Xml.Linq.XDocument" /> object that will be copied.</param>
    </member>
    <member name="P:System.Xml.Linq.XDocument.Declaration">
      <summary>Gets or sets the XML declaration for this document.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XDeclaration" /> that contains the XML declaration for this document.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.DocumentType">
      <summary>Gets the Document Type Definition (DTD) for this document.</summary>
      <returns>A <see cref="T:System.Xml.Linq.XDocumentType" /> that contains the DTD for this document.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
      <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> instance using the specified stream.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XDocument" /> object used to read the data contained in the stream. </returns>
      <param name="stream">The stream containing the XML data.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> instance using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XDocument" /> object used to read the data contained in the stream.</returns>
      <param name="stream">The stream containing the XML data.</param>
      <param name="options">A <see cref="T:System.Xml.Linq.LoadOptions" /> that specifies whether to load base URI and line information.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
      <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> from a <see cref="T:System.IO.TextReader" />. </summary>
      <returns>An <see cref="T:System.Xml.Linq.XDocument" /> that contains the contents of the specified <see cref="T:System.IO.TextReader" />.</returns>
      <param name="textReader">A <see cref="T:System.IO.TextReader" /> that contains the content for the <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> from a <see cref="T:System.IO.TextReader" />, optionally preserving white space, setting the base URI, and retaining line information.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XDocument" /> that contains the XML that was read from the specified <see cref="T:System.IO.TextReader" />.</returns>
      <param name="textReader">A <see cref="T:System.IO.TextReader" /> that contains the content for the <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options">A <see cref="T:System.Xml.Linq.LoadOptions" /> that specifies white space behavior, and whether to load base URI and line information.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.String)">
      <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> from a file located in the application's XAP package.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XDocument" /> that contains the contents of the specified file.</returns>
      <param name="uri">A URI string that references the file to be loaded into a new <see cref="T:System.Xml.Linq.XDocument" />. This file is located in the application's XAP package. If you want to download a file from some other location, follow the steps described in How to: Load an XML File from an Arbitrary URI Location with LINQ to XML.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
      <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> from a file located in the application's XAP package, optionally preserving white space, setting the base URI, and retaining line information.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XDocument" /> that contains the contents of the specified file.</returns>
      <param name="uri">A URI string that references the file to be loaded into a new <see cref="T:System.Xml.Linq.XDocument" />. This file is located in the application's XAP package. If you want to download a file from some other location, follow the steps described in How to: Load an XML File from an Arbitrary URI Location with LINQ to XML.</param>
      <param name="options">A <see cref="T:System.Xml.Linq.LoadOptions" /> that specifies how white space is handled and whether to load base URI and line information.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
      <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> from an <see cref="T:System.Xml.XmlReader" />. </summary>
      <returns>An <see cref="T:System.Xml.Linq.XDocument" /> that contains the contents of the specified <see cref="T:System.Xml.XmlReader" />.</returns>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> that contains the content for the <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> from an <see cref="T:System.Xml.XmlReader" />, optionally setting the base URI, and retaining line information.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XDocument" /> that contains the XML that was read from the specified <see cref="T:System.Xml.XmlReader" />.</returns>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> that will be read for the content of the <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options">A <see cref="T:System.Xml.Linq.LoadOptions" /> that specifies whether to load base URI and line information.</param>
    </member>
    <member name="P:System.Xml.Linq.XDocument.NodeType">
      <summary>Gets the node type for this node.</summary>
      <returns>The node type. For <see cref="T:System.Xml.Linq.XDocument" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.Document" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Parse(System.String)">
      <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> from a string.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XDocument" /> populated from the string that contains XML.</returns>
      <param name="text">A string that contains XML.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> from a string, optionally preserving white space, setting the base URI, and retaining line information.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XDocument" /> populated from the string that contains XML.</returns>
      <param name="text">A string that contains XML.</param>
      <param name="options">A <see cref="T:System.Xml.Linq.LoadOptions" /> that specifies white space behavior, and whether to load base URI and line information.</param>
    </member>
    <member name="P:System.Xml.Linq.XDocument.Root">
      <summary>Gets the root element of the XML Tree for this document.</summary>
      <returns>The root <see cref="T:System.Xml.Linq.XElement" /> of the XML tree.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
      <summary>Outputs this <see cref="T:System.Xml.Linq.XDocument" /> to the specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">The stream to output this <see cref="T:System.Xml.Linq.XDocument" /> to.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary>Outputs this <see cref="T:System.Xml.Linq.XDocument" /> to the specified <see cref="T:System.IO.Stream" />, optionally specifying formatting behavior.</summary>
      <param name="stream">The stream to output this <see cref="T:System.Xml.Linq.XDocument" /> to.</param>
      <param name="options">A <see cref="T:System.Xml.Linq.SaveOptions" /> that specifies formatting behavior.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
      <summary>Serialize this <see cref="T:System.Xml.Linq.XDocument" /> to a <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter">A <see cref="T:System.IO.TextWriter" /> that the <see cref="T:System.Xml.Linq.XDocument" /> will be written to.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary>Serialize this <see cref="T:System.Xml.Linq.XDocument" /> to a <see cref="T:System.IO.TextWriter" />, optionally disabling formatting.</summary>
      <param name="textWriter">The <see cref="T:System.IO.TextWriter" /> to output the XML to.</param>
      <param name="options">A <see cref="T:System.Xml.Linq.SaveOptions" /> that specifies formatting behavior.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)">
      <summary>Serialize this <see cref="T:System.Xml.Linq.XDocument" /> to an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> that the <see cref="T:System.Xml.Linq.XDocument" /> will be written to.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
      <summary>Write this document to an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</param>
    </member>
    <member name="T:System.Xml.Linq.XDocumentType">
      <summary>Represents an XML Document Type Definition (DTD).  </summary>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Xml.Linq.XDocumentType" /> class. </summary>
      <param name="name">A <see cref="T:System.String" /> that contains the qualified name of the DTD, which is the same as the qualified name of the root element of the XML document.</param>
      <param name="publicId">A <see cref="T:System.String" /> that contains the public identifier of an external public DTD.</param>
      <param name="systemId">A <see cref="T:System.String" /> that contains the system identifier of an external private DTD.</param>
      <param name="internalSubset">A <see cref="T:System.String" /> that contains the internal subset for an internal DTD.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)">
      <summary>Initializes an instance of the <see cref="T:System.Xml.Linq.XDocumentType" /> class from another <see cref="T:System.Xml.Linq.XDocumentType" /> object.</summary>
      <param name="other">An <see cref="T:System.Xml.Linq.XDocumentType" /> object to copy from.</param>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.InternalSubset">
      <summary>Gets or sets the internal subset for this Document Type Definition (DTD).</summary>
      <returns>A <see cref="T:System.String" /> that contains the internal subset for this Document Type Definition (DTD).</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.Name">
      <summary>Gets or sets the name for this Document Type Definition (DTD).</summary>
      <returns>A <see cref="T:System.String" /> that contains the name for this Document Type Definition (DTD).</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.NodeType">
      <summary>Gets the node type for this node.</summary>
      <returns>The node type. For <see cref="T:System.Xml.Linq.XDocumentType" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.DocumentType" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.PublicId">
      <summary>Gets or sets the public identifier for this Document Type Definition (DTD).</summary>
      <returns>A <see cref="T:System.String" /> that contains the public identifier for this Document Type Definition (DTD).</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.SystemId">
      <summary>Gets or sets the system identifier for this Document Type Definition (DTD).</summary>
      <returns>A <see cref="T:System.String" /> that contains the system identifier for this Document Type Definition (DTD).</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary>Write this <see cref="T:System.Xml.Linq.XDocumentType" /> to an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</param>
    </member>
    <member name="T:System.Xml.Linq.XElement">
      <summary>Represents an XML element.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XElement" /> class from another <see cref="T:System.Xml.Linq.XElement" /> object.</summary>
      <param name="other">An <see cref="T:System.Xml.Linq.XElement" /> object to copy from.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XElement" /> class with the specified name. </summary>
      <param name="name">An <see cref="T:System.Xml.Linq.XName" /> that contains the name of the element.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XElement" /> class with the specified name and content.</summary>
      <param name="name">An <see cref="T:System.Xml.Linq.XName" /> that contains the element name.</param>
      <param name="content">The contents of the element.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XElement" /> class with the specified name and content.</summary>
      <param name="name">An <see cref="T:System.Xml.Linq.XName" /> that contains the element name.</param>
      <param name="content">The initial content of the element.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XElement" /> class from an <see cref="T:System.Xml.Linq.XStreamingElement" /> object.</summary>
      <param name="other">An <see cref="T:System.Xml.Linq.XStreamingElement" /> that contains unevaluated queries that will be iterated for the contents of this <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.AncestorsAndSelf">
      <summary>Returns a collection of elements that contain this element, and the ancestors of this element. </summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> of elements that contain this element, and the ancestors of this element. </returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of elements that contain this element, and the ancestors of this element. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contain this element, and the ancestors of this element. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</returns>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
      <summary>Returns the <see cref="T:System.Xml.Linq.XAttribute" /> of this <see cref="T:System.Xml.Linq.XElement" /> that has the specified <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XAttribute" /> that has the specified <see cref="T:System.Xml.Linq.XName" />; null if there is no attribute with the specified name.</returns>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> of the <see cref="T:System.Xml.Linq.XAttribute" /> to get.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attributes">
      <summary>Returns a collection of attributes of this element.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XAttribute" /> of attributes of this element.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of attributes of this element. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XAttribute" /> that contains the attributes of this element. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</returns>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
      <summary>Returns a collection of nodes that contain this element, and all descendant nodes of this element, in document order.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XNode" /> that contain this element, and all descendant nodes of this element, in document order.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantsAndSelf">
      <summary>Returns a collection of elements that contain this element, and all descendant elements of this element, in document order.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> of elements that contain this element, and all descendant elements of this element, in document order.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of elements that contain this element, and all descendant elements of this element, in document order. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contain this element, and all descendant elements of this element, in document order. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</returns>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
    </member>
    <member name="P:System.Xml.Linq.XElement.EmptySequence">
      <summary>Gets an empty collection of elements.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains an empty collection.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.FirstAttribute">
      <summary>Gets the first attribute of this element.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XAttribute" /> that contains the first attribute of this element.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetDefaultNamespace">
      <summary>Gets the default <see cref="T:System.Xml.Linq.XNamespace" /> of this <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XNamespace" /> that contains the default namespace of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
      <summary>Gets the namespace associated with a particular prefix for this <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XNamespace" /> for the namespace associated with the prefix for this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="prefix">A string that contains the namespace prefix to look up.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
      <summary>Gets the prefix associated with a namespace for this <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <returns>A <see cref="T:System.String" /> that contains the namespace prefix.</returns>
      <param name="ns">An <see cref="T:System.Xml.Linq.XNamespace" /> to look up.</param>
    </member>
    <member name="P:System.Xml.Linq.XElement.HasAttributes">
      <summary>Gets a value indicating whether this element as at least one attribute.</summary>
      <returns>true if this element has at least one attribute; otherwise false.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.HasElements">
      <summary>Gets a value indicating whether this element has at least one child element.</summary>
      <returns>true if this element has at least one child element; otherwise false.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.IsEmpty">
      <summary>Gets a value indicating whether this element contains no content.</summary>
      <returns>true if this element contains no content; otherwise false.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.LastAttribute">
      <summary>Gets the last attribute of this element.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XAttribute" /> that contains the last attribute of this element.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
      <summary>Creates a new <see cref="T:System.Xml.Linq.XElement" /> instance using the specified stream.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XElement" /> object used to read the data contained in the stream.</returns>
      <param name="stream">The stream containing the XML data.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <summary>Creates a new <see cref="T:System.Xml.Linq.XElement" /> instance using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XElement" /> object used to read the data contained in the stream.</returns>
      <param name="stream">The stream containing the XML data.</param>
      <param name="options">A <see cref="T:System.Xml.Linq.LoadOptions" /> that specifies whether to load base URI and line information.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
      <summary>Loads an <see cref="T:System.Xml.Linq.XElement" /> from a <see cref="T:System.IO.TextReader" />. </summary>
      <returns>An <see cref="T:System.Xml.Linq.XElement" /> that contains the XML that was read from the specified <see cref="T:System.IO.TextReader" />.</returns>
      <param name="textReader">A <see cref="T:System.IO.TextReader" /> that will be read for the <see cref="T:System.Xml.Linq.XElement" /> content.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <summary>Loads an <see cref="T:System.Xml.Linq.XElement" /> from a <see cref="T:System.IO.TextReader" />, optionally preserving white space and retaining line information. </summary>
      <returns>An <see cref="T:System.Xml.Linq.XElement" /> that contains the XML that was read from the specified <see cref="T:System.IO.TextReader" />.</returns>
      <param name="textReader">A <see cref="T:System.IO.TextReader" /> that will be read for the <see cref="T:System.Xml.Linq.XElement" /> content.</param>
      <param name="options">A <see cref="T:System.Xml.Linq.LoadOptions" /> that specifies white space behavior, and whether to load base URI and line information.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.String)">
      <summary>Loads an <see cref="T:System.Xml.Linq.XElement" /> from a file located in the applications' XAP package.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XElement" /> that contains the contents of the specified file.</returns>
      <param name="uri">A URI string that references the file to be loaded into a new <see cref="T:System.Xml.Linq.XElement" />. This file is located in the application's XAP package. If you want to download a file from some other location, follow the steps described in How to: Load an XML File from an Arbitrary URI Location with LINQ to XML.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
      <summary>Loads an <see cref="T:System.Xml.Linq.XElement" /> from a file located in the application's XAP package, optionally preserving white space, setting the base URI, and retaining line information.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XElement" /> that contains the contents of the specified file.</returns>
      <param name="uri">A URI string that references the file to be loaded into a new <see cref="T:System.Xml.Linq.XElement" />. This file is located in the application's XAP package. If you want to download a file from some other location, follow the steps described in How to: Load an XML File from an Arbitrary URI Location with LINQ to XML.</param>
      <param name="options">A <see cref="T:System.Xml.Linq.LoadOptions" /> that specifies white space behavior, and whether to load base URI and line information.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
      <summary>Loads an <see cref="T:System.Xml.Linq.XElement" /> from an <see cref="T:System.Xml.XmlReader" />. </summary>
      <returns>An <see cref="T:System.Xml.Linq.XElement" /> that contains the XML that was read from the specified <see cref="T:System.Xml.XmlReader" />.</returns>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> that will be read for the content of the <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <summary>Loads an <see cref="T:System.Xml.Linq.XElement" /> from an <see cref="T:System.Xml.XmlReader" />, optionally preserving white space, setting the base URI, and retaining line information.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XElement" /> that contains the XML that was read from the specified <see cref="T:System.Xml.XmlReader" />.</returns>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> that will be read for the content of the <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options">A <see cref="T:System.Xml.Linq.LoadOptions" /> that specifies white space behavior, and whether to load base URI and line information.</param>
    </member>
    <member name="P:System.Xml.Linq.XElement.Name">
      <summary>Gets the name of this element.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XName" /> that contains the name of this element.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.NodeType">
      <summary>Gets the node type for this node.</summary>
      <returns>The node type. For <see cref="T:System.Xml.Linq.XElement" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.Element" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.DateTime" />.</summary>
      <returns>A <see cref="T:System.DateTime" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.DateTime" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.DateTime" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="element" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.Decimal" />.</summary>
      <returns>A <see cref="T:System.Decimal" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.Decimal" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.Decimal" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="element" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.Decimal" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.Single" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.TimeSpan" />.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.TimeSpan" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.TimeSpan" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="element" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.Double" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.Double" />.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.Double" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.Double" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="element" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.Single" />.</summary>
      <returns>A <see cref="T:System.Single" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.Single" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.Single" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="element" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.Guid" />.</summary>
      <returns>A <see cref="T:System.Guid" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.Guid" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="element" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.Guid" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.TimeSpan" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.DateTime" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>A <see cref="T:System.DateTimeOffset" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.DateTimeOffset" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.DateTimeOffset" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="element" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to an <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.DateTimeOffset" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to an <see cref="T:System.Int32" />.</summary>
      <returns>A <see cref="T:System.Int32" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.Int32" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.Int32" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="element" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.Int32" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.Boolean" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.Boolean" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.Boolean" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.Boolean" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="element" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.UInt32" />.</summary>
      <returns>A <see cref="T:System.UInt32" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.UInt32" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.UInt32" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="element" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.UInt64" />.</summary>
      <returns>A <see cref="T:System.UInt64" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.UInt64" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.UInt64" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="element" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.UInt64" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.Int64" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" />.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.UInt32" /> value.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
      <summary>Cast the value of this <see cref="T:System.Xml.Linq.XElement" /> to an <see cref="T:System.Int64" />.</summary>
      <returns>A <see cref="T:System.Int64" /> that contains the content of this <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to cast to <see cref="T:System.Int64" />.</param>
      <exception cref="T:System.FormatException">The element does not contain a valid <see cref="T:System.Int64" /> value.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="element" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.Parse(System.String)">
      <summary>Load an <see cref="T:System.Xml.Linq.XElement" /> from a string that contains XML.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XElement" /> populated from the string that contains XML.</returns>
      <param name="text">A <see cref="T:System.String" /> that contains XML.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <summary>Load an <see cref="T:System.Xml.Linq.XElement" /> from a string that contains XML, optionally preserving white space and retaining line information.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XElement" /> populated from the string that contains XML.</returns>
      <param name="text">A <see cref="T:System.String" /> that contains XML.</param>
      <param name="options">A <see cref="T:System.Xml.Linq.LoadOptions" /> that specifies white space behavior, and whether to load base URI and line information.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.RemoveAll">
      <summary>Removes nodes and attributes from this <see cref="T:System.Xml.Linq.XElement" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.RemoveAttributes">
      <summary>Removes the attributes of this <see cref="T:System.Xml.Linq.XElement" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
      <summary>Replaces the child nodes and the attributes of this element with the specified content.</summary>
      <param name="content">The content that will replace the child nodes and attributes of this element.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
      <summary>Replaces the child nodes and the attributes of this element with the specified content.</summary>
      <param name="content">A parameter list of content objects.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
      <summary>Replaces the attributes of this element with the specified content.</summary>
      <param name="content">The content that will replace the attributes of this element.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
      <summary>Replaces the attributes of this element with the specified content.</summary>
      <param name="content">A parameter list of content objects.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
      <summary>Outputs this <see cref="T:System.Xml.Linq.XElement" /> to the specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">The stream to output this <see cref="T:System.Xml.Linq.XElement" /> to.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary>Outputs this <see cref="T:System.Xml.Linq.XElement" /> to the specified <see cref="T:System.IO.Stream" />, optionally specifying formatting behavior.</summary>
      <param name="stream">The stream to output this <see cref="T:System.Xml.Linq.XElement" /> to.</param>
      <param name="options">A <see cref="T:System.Xml.Linq.SaveOptions" /> that specifies formatting behavior.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
      <summary>Serialize this element to a <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter">A <see cref="T:System.IO.TextWriter" /> that the <see cref="T:System.Xml.Linq.XElement" /> will be written to.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary>Serialize this element to a <see cref="T:System.IO.TextWriter" />, optionally disabling formatting.</summary>
      <param name="textWriter">The <see cref="T:System.IO.TextWriter" /> to output the XML to.</param>
      <param name="options">A <see cref="T:System.Xml.Linq.SaveOptions" /> that specifies formatting behavior.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)">
      <summary>Serialize this element to an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> that the <see cref="T:System.Xml.Linq.XElement" /> will be written to.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
      <summary>Sets the value of an attribute, adds an attribute, or removes an attribute. </summary>
      <param name="name">An <see cref="T:System.Xml.Linq.XName" /> that contains the name of the attribute to change.</param>
      <param name="value">The value to assign to the attribute. The attribute is removed if the value is null. Otherwise, the value is converted to its string representation and assigned to the <see cref="P:System.Xml.Linq.XAttribute.Value" /> property of the attribute.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="value" /> is an instance of <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
      <summary>Sets the value of a child element, adds a child element, or removes a child element.</summary>
      <param name="name">An <see cref="T:System.Xml.Linq.XName" /> that contains the name of the child element to change.</param>
      <param name="value">The value to assign to the child element. The child element is removed if the value is null. Otherwise, the value is converted to its string representation and assigned to the <see cref="P:System.Xml.Linq.XElement.Value" /> property of the child element.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="value" /> is an instance of <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetValue(System.Object)">
      <summary>Sets the value of this element.</summary>
      <param name="value">The value to assign to this element. The value is converted to its string representation and assigned to the <see cref="P:System.Xml.Linq.XElement.Value" /> property.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="value" /> is an <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Gets an XML schema definition that describes the XML representation of this object.</summary>
      <returns>An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Generates an object from its XML representation.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> from which the object is deserialized.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Converts an object into its XML representation.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to which this object is serialized.</param>
    </member>
    <member name="P:System.Xml.Linq.XElement.Value">
      <summary>Gets the concatenated text contents of this element.</summary>
      <returns>A <see cref="T:System.String" /> that contains all of the text content of this element. If there are multiple text nodes, they will be concatenated.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
      <summary>Write this element to an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</param>
    </member>
    <member name="T:System.Xml.Linq.XName">
      <summary>Represents a name of an XML element or attribute. </summary>
    </member>
    <member name="M:System.Xml.Linq.XName.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Xml.Linq.XName" /> is equal to this <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>true if the specified <see cref="T:System.Xml.Linq.XName" /> is equal to the current <see cref="T:System.Xml.Linq.XName" />; otherwise false.</returns>
      <param name="obj">The <see cref="T:System.Xml.Linq.XName" /> to compare to the current <see cref="T:System.Xml.Linq.XName" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XName.Get(System.String)">
      <summary>Gets an <see cref="T:System.Xml.Linq.XName" /> object from an expanded name.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XName" /> object constructed from the expanded name.</returns>
      <param name="expandedName">A <see cref="T:System.String" /> that contains an expanded XML name in the format {namespace}localname.</param>
    </member>
    <member name="M:System.Xml.Linq.XName.Get(System.String,System.String)">
      <summary>Gets an <see cref="T:System.Xml.Linq.XName" /> object from a local name and a namespace.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XName" /> object created from the specified local name and namespace.</returns>
      <param name="localName">A local (unqualified) name.</param>
      <param name="namespaceName">An XML namespace.</param>
    </member>
    <member name="M:System.Xml.Linq.XName.GetHashCode">
      <summary>Gets a hash code for this <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the hash code for the <see cref="T:System.Xml.Linq.XName" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.LocalName">
      <summary>Gets the local (unqualified) part of the name.</summary>
      <returns>A <see cref="T:System.String" /> that contains the local (unqualified) part of the name.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.Namespace">
      <summary>Gets the namespace part of the fully qualified name.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XNamespace" /> that contains the namespace part of the name.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.NamespaceName">
      <summary>Returns the URI of the <see cref="T:System.Xml.Linq.XNamespace" /> for this <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>The URI of the <see cref="T:System.Xml.Linq.XNamespace" /> for this <see cref="T:System.Xml.Linq.XName" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Equality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <summary>Returns a value indicating whether two instances of <see cref="T:System.Xml.Linq.XName" /> are equal.</summary>
      <returns>true if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise false.</returns>
      <param name="left">The first <see cref="T:System.Xml.Linq.XName" /> to compare.</param>
      <param name="right">The second <see cref="T:System.Xml.Linq.XName" /> to compare.</param>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Implicit(System.String)~System.Xml.Linq.XName">
      <summary>Converts a string formatted as an expanded XML name (that is,{namespace}localname) to an <see cref="T:System.Xml.Linq.XName" /> object.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XName" /> object constructed from the expanded name.</returns>
      <param name="expandedName">A string that contains an expanded XML name in the format {namespace}localname.</param>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Inequality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <summary>Returns a value indicating whether two instances of <see cref="T:System.Xml.Linq.XName" /> are not equal.</summary>
      <returns>true if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise false.</returns>
      <param name="left">The first <see cref="T:System.Xml.Linq.XName" /> to compare.</param>
      <param name="right">The second <see cref="T:System.Xml.Linq.XName" /> to compare.</param>
    </member>
    <member name="M:System.Xml.Linq.XName.System#IEquatable{T}#Equals(System.Xml.Linq.XName)">
      <summary>Indicates whether the current <see cref="T:System.Xml.Linq.XName" /> is equal to the specified <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>true if this <see cref="T:System.Xml.Linq.XName" /> is equal to the specified <see cref="T:System.Xml.Linq.XName" />, otherwise false.</returns>
      <param name="other">The <see cref="T:System.Xml.Linq.XName" /> to compare with this <see cref="T:System.Xml.Linq.XName" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XName.ToString">
      <summary>Returns the expanded XML name in the format {namespace}localname.</summary>
      <returns>A <see cref="T:System.String" /> that contains the expanded XML name in the format {namespace}localname.</returns>
    </member>
    <member name="T:System.Xml.Linq.XNamespace">
      <summary>Represents an XML namespace. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Xml.Linq.XNamespace" /> is equal to the current <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> that indicates whether the specified <see cref="T:System.Xml.Linq.XNamespace" /> is equal to the current <see cref="T:System.Xml.Linq.XNamespace" />.</returns>
      <param name="obj">The <see cref="T:System.Xml.Linq.XNamespace" /> to compare to the current <see cref="T:System.Xml.Linq.XNamespace" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.Get(System.String)">
      <summary>Gets an <see cref="T:System.Xml.Linq.XNamespace" /> for the specified Uniform Resource Identifier (URI).</summary>
      <returns>An <see cref="T:System.Xml.Linq.XNamespace" /> created from the specified URI.</returns>
      <param name="namespaceName">A <see cref="T:System.String" /> that contains a namespace URI.</param>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.GetHashCode">
      <summary>Gets a hash code for this <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the hash code for the <see cref="T:System.Xml.Linq.XNamespace" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.GetName(System.String)">
      <summary>Returns an <see cref="T:System.Xml.Linq.XName" /> object created from this <see cref="T:System.Xml.Linq.XNamespace" /> and the specified local name.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XName" /> created from this <see cref="T:System.Xml.Linq.XNamespace" /> and the specified local name.</returns>
      <param name="localName">A <see cref="T:System.String" /> that contains a local name.</param>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.NamespaceName">
      <summary>Gets the Uniform Resource Identifier (URI) of this namespace.</summary>
      <returns>A <see cref="T:System.String" /> that contains the URI of the namespace.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.None">
      <summary>Gets the <see cref="T:System.Xml.Linq.XNamespace" /> object that corresponds to no namespace.</summary>
      <returns>The <see cref="T:System.Xml.Linq.XNamespace" /> that corresponds to no namespace.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
      <summary>Combines an <see cref="T:System.Xml.Linq.XNamespace" /> object with a local name to create an <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>The new <see cref="T:System.Xml.Linq.XName" /> constructed from the namespace and local name.</returns>
      <param name="ns">An <see cref="T:System.Xml.Linq.XNamespace" /> that contains the namespace.</param>
      <param name="localName">A <see cref="T:System.String" /> that contains the local name.</param>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <summary>Returns a value indicating whether two instances of <see cref="T:System.Xml.Linq.XNamespace" /> are equal.</summary>
      <returns>A <see cref="T:System.Boolean" /> that indicates whether <paramref name="left" /> and <paramref name="right" /> are equal.</returns>
      <param name="left">The first <see cref="T:System.Xml.Linq.XNamespace" /> to compare.</param>
      <param name="right">The second <see cref="T:System.Xml.Linq.XNamespace" /> to compare.</param>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
      <summary>Converts a string containing a Uniform Resource Identifier (URI) to an <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XNamespace" /> constructed from the URI string.</returns>
      <param name="namespaceName">A <see cref="T:System.String" /> that contains the namespace URI.</param>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <summary>Returns a value indicating whether two instances of <see cref="T:System.Xml.Linq.XNamespace" /> are not equal.</summary>
      <returns>A <see cref="T:System.Boolean" /> that indicates whether <paramref name="left" /> and <paramref name="right" /> are not equal.</returns>
      <param name="left">The first <see cref="T:System.Xml.Linq.XNamespace" /> to compare.</param>
      <param name="right">The second <see cref="T:System.Xml.Linq.XNamespace" /> to compare.</param>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.ToString">
      <summary>Returns the URI of this <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <returns>The URI of this <see cref="T:System.Xml.Linq.XNamespace" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.Xml">
      <summary>Gets the <see cref="T:System.Xml.Linq.XNamespace" /> object that corresponds to the XML URI (http://www.w3.org/XML/1998/namespace).</summary>
      <returns>The <see cref="T:System.Xml.Linq.XNamespace" /> that corresponds to the XML URI (http://www.w3.org/XML/1998/namespace).</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.Xmlns">
      <summary>Gets the <see cref="T:System.Xml.Linq.XNamespace" /> object that corresponds to the xmlns URI (http://www.w3.org/2000/xmlns/).</summary>
      <returns>The <see cref="T:System.Xml.Linq.XNamespace" /> that corresponds to the xmlns URI (http://www.w3.org/2000/xmlns/).</returns>
    </member>
    <member name="T:System.Xml.Linq.XNode">
      <summary>Represents the abstract concept of a node (one of: element, comment, document type, processing instruction, or text node) in the XML tree.  </summary>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)">
      <summary>Adds the specified content immediately after this node.</summary>
      <param name="content">A content object that contains simple content or a collection of content objects to be added after this node.</param>
      <exception cref="T:System.InvalidOperationException">The parent is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])">
      <summary>Adds the specified content immediately after this node.</summary>
      <param name="content">A parameter list of content objects.</param>
      <exception cref="T:System.InvalidOperationException">The parent is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)">
      <summary>Adds the specified content immediately before this node.</summary>
      <param name="content">A content object that contains simple content or a collection of content objects to be added before this node.</param>
      <exception cref="T:System.InvalidOperationException">The parent is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])">
      <summary>Adds the specified content immediately before this node.</summary>
      <param name="content">A parameter list of content objects.</param>
      <exception cref="T:System.InvalidOperationException">The parent is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.Ancestors">
      <summary>Returns a collection of the ancestor elements of this node.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> of the ancestor elements of this node.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of the ancestor elements of this node. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> of the ancestor elements of this node. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.The nodes in the returned collection are in reverse document order.This method uses deferred execution.</returns>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary>Compares two nodes to determine their relative XML document order.</summary>
      <returns>An int containing 0 if the nodes are equal; -1 if <paramref name="n1" /> is before <paramref name="n2" />; 1 if <paramref name="n1" /> is after <paramref name="n2" />.</returns>
      <param name="n1">First <see cref="T:System.Xml.Linq.XNode" /> to compare.</param>
      <param name="n2">Second <see cref="T:System.Xml.Linq.XNode" /> to compare.</param>
      <exception cref="T:System.InvalidOperationException">The two nodes do not share a common ancestor.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.CreateReader">
      <summary>Creates an <see cref="T:System.Xml.XmlReader" /> for this node.</summary>
      <returns>An <see cref="T:System.Xml.XmlReader" /> that can be used to read this node and its descendants.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)">
      <summary>Creates an <see cref="T:System.Xml.XmlReader" /> for this node.</summary>
      <returns>An <see cref="T:System.Xml.XmlReader" /> that can be used to read this node and its descendants.</returns>
      <param name="readerOptions">Specifies whether to omit duplicate namespaces.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary>Compares the values of two nodes, including the values of all descendant nodes.</summary>
      <returns>true if the nodes are equal; otherwise false.</returns>
      <param name="n1">The first <see cref="T:System.Xml.Linq.XNode" /> to compare.</param>
      <param name="n2">The second <see cref="T:System.Xml.Linq.XNode" /> to compare.</param>
    </member>
    <member name="P:System.Xml.Linq.XNode.DocumentOrderComparer">
      <summary>Gets a comparer that can compare the relative position of two nodes.</summary>
      <returns>A <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" /> that can compare the relative position of two nodes.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsAfterSelf">
      <summary>Returns a collection of the sibling elements after this node, in document order.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> of the sibling elements after this node, in document order.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of the sibling elements after this node, in document order. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> of the sibling elements after this node, in document order. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</returns>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsBeforeSelf">
      <summary>Returns a collection of the sibling elements before this node, in document order.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> of the sibling elements before this node, in document order.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)">
      <summary>Returns a filtered collection of the sibling elements before this node, in document order. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> of the sibling elements before this node, in document order. Only elements that have a matching <see cref="T:System.Xml.Linq.XName" /> are included in the collection.</returns>
      <param name="name">The <see cref="T:System.Xml.Linq.XName" /> to match.</param>
    </member>
    <member name="P:System.Xml.Linq.XNode.EqualityComparer">
      <summary>Gets a comparer that can compare two nodes for value equality.</summary>
      <returns>A <see cref="T:System.Xml.Linq.XNodeEqualityComparer" /> that can compare two nodes for value equality.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)">
      <summary>Determines if the current node appears after a specified node in terms of document order.</summary>
      <returns>true if this node appears after the specified node; otherwise false.</returns>
      <param name="node">The <see cref="T:System.Xml.Linq.XNode" /> to compare for document order.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)">
      <summary>Determines if the current node appears before a specified node in terms of document order.</summary>
      <returns>true if this node appears before the specified node; otherwise false.</returns>
      <param name="node">The <see cref="T:System.Xml.Linq.XNode" /> to compare for document order.</param>
    </member>
    <member name="P:System.Xml.Linq.XNode.NextNode">
      <summary>Gets the next sibling node of this node.</summary>
      <returns>The <see cref="T:System.Xml.Linq.XNode" /> that contains the next sibling node.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.NodesAfterSelf">
      <summary>Returns a collection of the sibling nodes after this node, in document order.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XNode" /> of the sibling nodes after this node, in document order.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.NodesBeforeSelf">
      <summary>Returns a collection of the sibling nodes before this node, in document order.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XNode" /> of the sibling nodes before this node, in document order.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.PreviousNode">
      <summary>Gets the previous sibling node of this node.</summary>
      <returns>The <see cref="T:System.Xml.Linq.XNode" /> that contains the previous sibling node.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)">
      <summary>Creates an <see cref="T:System.Xml.Linq.XNode" /> from an <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XNode" /> that contains the node and its descendant nodes that were read from the reader. The runtime type of the node is determined by the node type (<see cref="P:System.Xml.Linq.XObject.NodeType" />) of the first node encountered in the reader.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> positioned at the node to read into this <see cref="T:System.Xml.Linq.XNode" />.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Xml.XmlReader" /> is not positioned on a recognized node type.</exception>
      <exception cref="T:System.Xml.XmlException">The underlying <see cref="T:System.Xml.XmlReader" /> throws an exception.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.Remove">
      <summary>Removes this node from its parent.</summary>
      <exception cref="T:System.InvalidOperationException">The parent is null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)">
      <summary>Replaces this node with the specified content.</summary>
      <param name="content">Content that replaces this node.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])">
      <summary>Replaces this node with the specified content.</summary>
      <param name="content">A parameter list of the new content.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ToString">
      <summary>Returns the indented XML for this node.</summary>
      <returns>A <see cref="T:System.String" /> containing the indented XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)">
      <summary>Returns the XML for this node, optionally disabling formatting.</summary>
      <returns>A <see cref="T:System.String" /> containing the XML.</returns>
      <param name="options">A <see cref="T:System.Xml.Linq.SaveOptions" /> that specifies formatting behavior.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes this node to an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</param>
    </member>
    <member name="T:System.Xml.Linq.XNodeDocumentOrderComparer">
      <summary>Contains functionality to compare nodes for their document order. This class cannot be inherited.  </summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" /> class. </summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary>Compares two nodes to determine their relative document order.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains 0 if the nodes are equal; -1 if <paramref name="x" /> is before <paramref name="y" />; 1 if <paramref name="x" /> is after <paramref name="y" />.</returns>
      <param name="x">The first <see cref="T:System.Xml.Linq.XNode" /> to compare.</param>
      <param name="y">The second <see cref="T:System.Xml.Linq.XNode" /> to compare.</param>
      <exception cref="T:System.InvalidOperationException">The two nodes do not share a common ancestor.</exception>
    </member>
    <member name="T:System.Xml.Linq.XNodeEqualityComparer">
      <summary>Compares nodes to determine whether they are equal. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XNodeEqualityComparer" /> class. </summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary>Compares the values of two nodes.</summary>
      <returns>A <see cref="T:System.Boolean" /> indicating if the nodes are equal.</returns>
      <param name="x">The first <see cref="T:System.Xml.Linq.XNode" /> to compare.</param>
      <param name="y">The second <see cref="T:System.Xml.Linq.XNode" /> to compare.</param>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)">
      <summary>Returns a hash code based on an <see cref="T:System.Xml.Linq.XNode" />.</summary>
      <returns>A <see cref="T:System.Int32" /> that contains a value-based hash code for the node.</returns>
      <param name="obj">The <see cref="T:System.Xml.Linq.XNode" /> to hash.</param>
    </member>
    <member name="T:System.Xml.Linq.XObject">
      <summary>Represents a node or an attribute in an XML tree. </summary>
    </member>
    <member name="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
      <summary>Adds an object to the annotation list of this <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="annotation">An <see cref="T:System.Object" /> that contains the annotation to add.</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotation``1">
      <summary>Get the first annotation object of the specified type from this <see cref="T:System.Xml.Linq.XObject" />. </summary>
      <returns>The first annotation object that matches the specified type, or null if no annotation is of the specified type.</returns>
      <typeparam name="T">The type of the annotation to retrieve.</typeparam>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotation(System.Type)">
      <summary>Gets the first annotation object of the specified type from this <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>The <see cref="T:System.Object" /> that contains the first annotation object that matches the specified type, or null if no annotation is of the specified type.</returns>
      <param name="type">The <see cref="T:System.Type" /> of the annotation to retrieve.</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotations``1">
      <summary>Gets a collection of annotations of the specified type for this <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the annotations for this <see cref="T:System.Xml.Linq.XObject" />.</returns>
      <typeparam name="T">The type of the annotations to retrieve.</typeparam>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotations(System.Type)">
      <summary>Gets a collection of annotations of the specified type for this <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Object" /> that contains the annotations that match the specified type for this <see cref="T:System.Xml.Linq.XObject" />.</returns>
      <param name="type">The <see cref="T:System.Type" /> of the annotations to retrieve.</param>
    </member>
    <member name="P:System.Xml.Linq.XObject.BaseUri">
      <summary>Gets the base URI for this <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>A <see cref="T:System.String" /> that contains the base URI for this <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="E:System.Xml.Linq.XObject.Changed">
      <summary>Raised when this <see cref="T:System.Xml.Linq.XObject" /> or any of its descendants have changed.</summary>
    </member>
    <member name="E:System.Xml.Linq.XObject.Changing">
      <summary>Raised when this <see cref="T:System.Xml.Linq.XObject" /> or any of its descendants are about to change.</summary>
    </member>
    <member name="P:System.Xml.Linq.XObject.Document">
      <summary>Gets the <see cref="T:System.Xml.Linq.XDocument" /> for this <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>The <see cref="T:System.Xml.Linq.XDocument" /> for this <see cref="T:System.Xml.Linq.XObject" />. </returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.NodeType">
      <summary>Gets the node type for this <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>The node type for this <see cref="T:System.Xml.Linq.XObject" />. </returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.Parent">
      <summary>Gets the parent <see cref="T:System.Xml.Linq.XElement" /> of this <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>The parent <see cref="T:System.Xml.Linq.XElement" /> of this <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
      <summary>Removes the annotations of the specified type from this <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <typeparam name="T">The type of annotations to remove.</typeparam>
    </member>
    <member name="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
      <summary>Removes the annotations of the specified type from this <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="type">The <see cref="T:System.Type" /> of annotations to remove.</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
      <summary>Gets a value indicating whether or not this <see cref="T:System.Xml.Linq.XObject" /> has line information.</summary>
      <returns>true if the <see cref="T:System.Xml.Linq.XObject" /> has line information, otherwise false.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
      <summary>Gets the line number that the underlying <see cref="T:System.Xml.XmlReader" /> reported for this <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the line number reported by the <see cref="T:System.Xml.XmlReader" /> for this <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
      <summary>Gets the line position that the underlying <see cref="T:System.Xml.XmlReader" /> reported for this <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the line position reported by the <see cref="T:System.Xml.XmlReader" /> for this <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="T:System.Xml.Linq.XObjectChange">
      <summary>Specifies the event type when an event is raised for an <see cref="T:System.Xml.Linq.XObject" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Add">
      <summary>An <see cref="T:System.Xml.Linq.XObject" /> has been or will be added to an <see cref="T:System.Xml.Linq.XContainer" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Remove">
      <summary>An <see cref="T:System.Xml.Linq.XObject" /> has been or will be removed from an <see cref="T:System.Xml.Linq.XContainer" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Name">
      <summary>An <see cref="T:System.Xml.Linq.XObject" /> has been or will be renamed.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Value">
      <summary>The value of an <see cref="T:System.Xml.Linq.XObject" /> has been or will be changed. In addition, a change in the serialization of an empty element (either from an empty tag to start/end tag pair or vice versa) raises this event.</summary>
    </member>
    <member name="T:System.Xml.Linq.XObjectChangeEventArgs">
      <summary>Provides data for the <see cref="E:System.Xml.Linq.XObject.Changing" /> and <see cref="E:System.Xml.Linq.XObject.Changed" /> events.</summary>
    </member>
    <member name="M:System.Xml.Linq.XObjectChangeEventArgs.#ctor(System.Xml.Linq.XObjectChange)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XObjectChangeEventArgs" /> class. </summary>
      <param name="objectChange">An <see cref="T:System.Xml.Linq.XObjectChange" /> that contains the event arguments for LINQ to XML events.</param>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Add">
      <summary>Event argument for an <see cref="F:System.Xml.Linq.XObjectChange.Add" /> change event.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Name">
      <summary>Event argument for a <see cref="F:System.Xml.Linq.XObjectChange.Name" /> change event.</summary>
    </member>
    <member name="P:System.Xml.Linq.XObjectChangeEventArgs.ObjectChange">
      <summary>Gets the type of change.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XObjectChange" /> that contains the type of change.</returns>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Remove">
      <summary>Event argument for a <see cref="F:System.Xml.Linq.XObjectChange.Remove" /> change event.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Value">
      <summary>Event argument for a <see cref="F:System.Xml.Linq.XObjectChange.Value" /> change event.</summary>
    </member>
    <member name="T:System.Xml.Linq.XProcessingInstruction">
      <summary>Represents an XML processing instruction. </summary>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XProcessingInstruction" /> class. </summary>
      <param name="target">A <see cref="T:System.String" /> containing the target application for this <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</param>
      <param name="data">The string data for this <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="target" /> or <paramref name="data" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="target" /> does not follow the constraints of an XML name.</exception>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XProcessingInstruction" /> class. </summary>
      <param name="other">The <see cref="T:System.Xml.Linq.XProcessingInstruction" /> node to copy from.</param>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.Data">
      <summary>Gets or sets the string value of this processing instruction.</summary>
      <returns>A <see cref="T:System.String" /> that contains the string value of this processing instruction.</returns>
      <exception cref="T:System.ArgumentNullException">The string <paramref name="value" /> is null.</exception>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.NodeType">
      <summary>Gets the node type for this node.</summary>
      <returns>The node type. For <see cref="T:System.Xml.Linq.XProcessingInstruction" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.ProcessingInstruction" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.Target">
      <summary>Gets or sets a string containing the target application for this processing instruction.</summary>
      <returns>A <see cref="T:System.String" /> containing the target application for this processing instruction.</returns>
      <exception cref="T:System.ArgumentNullException">The string <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="target" /> does not follow the constraints of an XML name.</exception>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes this processing instruction to an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write this processing instruction to.</param>
    </member>
    <member name="T:System.Xml.Linq.XStreamingElement">
      <summary>Represents elements in an XML tree that supports deferred streaming output.</summary>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XElement" /> class from the specified <see cref="T:System.Xml.Linq.XName" />.</summary>
      <param name="name">An <see cref="T:System.Xml.Linq.XName" /> that contains the name of the element.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XStreamingElement" /> class with the specified name and content.</summary>
      <param name="name">An <see cref="T:System.Xml.Linq.XName" /> that contains the element name.</param>
      <param name="content">The contents of the element.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XStreamingElement" /> class with the specified name and content.</summary>
      <param name="name">An <see cref="T:System.Xml.Linq.XName" /> that contains the element name.</param>
      <param name="content">The contents of the element.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Add(System.Object)">
      <summary>Adds the specified content as children to this <see cref="T:System.Xml.Linq.XStreamingElement" />.</summary>
      <param name="content">Content to be added to the streaming element.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Add(System.Object[])">
      <summary>Adds the specified content as children to this <see cref="T:System.Xml.Linq.XStreamingElement" />.</summary>
      <param name="content">Content to be added to the streaming element.</param>
    </member>
    <member name="P:System.Xml.Linq.XStreamingElement.Name">
      <summary>Gets or sets the name of this streaming element.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XName" /> that contains the name of this streaming element.</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)">
      <summary>Outputs this <see cref="T:System.Xml.Linq.XStreamingElement" /> to the specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">The stream to output this <see cref="T:System.Xml.Linq.XDocument" /> to.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary>Outputs this <see cref="T:System.Xml.Linq.XStreamingElement" /> to the specified <see cref="T:System.IO.Stream" />, optionally specifying formatting behavior.</summary>
      <param name="stream">The stream to output this <see cref="T:System.Xml.Linq.XDocument" /> to.</param>
      <param name="options">A <see cref="T:System.Xml.Linq.SaveOptions" /> that specifies formatting behavior.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)">
      <summary>Serialize this streaming element to a <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter">A <see cref="T:System.IO.TextWriter" /> that the <see cref="T:System.Xml.Linq.XStreamingElement" /> will be written to.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary>Serialize this streaming element to a <see cref="T:System.IO.TextWriter" />, optionally disabling formatting.</summary>
      <param name="textWriter">The <see cref="T:System.IO.TextWriter" /> to output the XML to.</param>
      <param name="options">A <see cref="T:System.Xml.Linq.SaveOptions" /> that specifies formatting behavior.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)">
      <summary>Serialize this streaming element to an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> that the <see cref="T:System.Xml.Linq.XElement" /> will be written to.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.ToString">
      <summary>Returns the formatted (indented) XML for this streaming element.</summary>
      <returns>A <see cref="T:System.String" /> containing the indented XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)">
      <summary>Returns the XML for this streaming element, optionally disabling formatting.</summary>
      <returns>A <see cref="T:System.String" /> containing the XML.</returns>
      <param name="options">A <see cref="T:System.Xml.Linq.SaveOptions" /> that specifies formatting behavior.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes this streaming element to an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</param>
    </member>
    <member name="T:System.Xml.Linq.XText">
      <summary>Represents a text node.  </summary>
    </member>
    <member name="M:System.Xml.Linq.XText.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XText" /> class. </summary>
      <param name="value">The <see cref="T:System.String" /> that contains the value of the <see cref="T:System.Xml.Linq.XText" /> node.</param>
    </member>
    <member name="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XText" /> class from another <see cref="T:System.Xml.Linq.XText" /> object.</summary>
      <param name="other">The <see cref="T:System.Xml.Linq.XText" /> node to copy from.</param>
    </member>
    <member name="P:System.Xml.Linq.XText.NodeType">
      <summary>Gets the node type for this node.</summary>
      <returns>The node type. For <see cref="T:System.Xml.Linq.XText" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.Text" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XText.Value">
      <summary>Gets or sets the value of this node.</summary>
      <returns>A <see cref="T:System.String" /> that contains the value of this node.</returns>
    </member>
    <member name="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes this node to an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</param>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary>Compares two nodes to determine their relative document order.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains 0 if the nodes are equal; -1 if <paramref name="x" /> is before <paramref name="y" />; 1 if <paramref name="x" /> is after <paramref name="y" />.</returns>
      <param name="x">The first <see cref="T:System.Xml.Linq.XNode" /> to compare.</param>
      <param name="y">The second <see cref="T:System.Xml.Linq.XNode" /> to compare.</param>
      <exception cref="T:System.InvalidOperationException">The two nodes do not share a common ancestor.</exception>
      <exception cref="T:System.ArgumentException">The two nodes are not derived from <see cref="T:System.Xml.Linq.XNode" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
      <summary>Compares the values of two nodes.</summary>
      <returns>true if the nodes are equal; otherwise false.</returns>
      <param name="x">The first <see cref="T:System.Xml.Linq.XNode" /> to compare.</param>
      <param name="y">The second <see cref="T:System.Xml.Linq.XNode" /> to compare.</param>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
      <summary>Returns a hash code based on the value of a node.</summary>
      <returns>A <see cref="T:System.Int32" /> that contains a value-based hash code for the node.</returns>
      <param name="obj">The node to hash.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Xml.XPath.extmap.xml ===
<?xml version="1.0"?>
<manifest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
          xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <assembly>
    <name>System.Xml.XPath</name>
    <version>2.0.5.0</version>
    <publickeytoken>31bf3856ad364e35</publickeytoken>
    <relpath>System.Xml.XPath.dll</relpath>
    <extension downloadUri="System.Xml.XPath.zip" />
  </assembly>


</manifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Xml.Serialization.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.Serialization</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.XmlSerializerFormatAttribute">
      <summary>Instructs the Silverlight versionÂ 4 Release Candidate infrastructure to use the <see cref="T:System.Xml.Serialization.XmlSerializer" /> instead of the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> to serialize a method or class.</summary>
    </member>
    <member name="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.Style">
      <summary>Gets or sets the SOAP style of the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.OperationFormatStyle" /> values. The default is <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults">
      <summary>Gets or sets a value that indicates whether faults are supported.</summary>
      <returns>true if faults are supported; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.XmlSerializerOperationBehavior">
      <summary>Controls run-time behavior of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> associated with an operation.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>When implemented in a derived class, adds a set of parameters to an operation description.</summary>
      <param name="description">The target <see cref="T:System.ServiceModel.Description.OperationDescription" />.</param>
      <param name="parameters">A <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that contains the parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Applies a client's behavior to the operation.</summary>
      <param name="description">A <see cref="T:System.ServiceModel.Description.OperationDescription" /> that represents the operation.</param>
      <param name="proxy">A <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> that represents a client operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="description" /> or <paramref name="proxy" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Applies a dispatch behavior to the operation.</summary>
      <param name="description">The target <see cref="T:System.ServiceModel.Description.OperationDescription" />.</param>
      <param name="dispatch">The <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> to apply.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="description" /> or <paramref name="dispatch" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>When implemented in a derived class, validates the operation.</summary>
      <param name="description">The target <see cref="T:System.ServiceModel.Description.OperationDescription" /> to validate.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary>Represents a collection of <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> objects.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Represents a collection of <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> objects.</summary>
      <returns>The index of the added item.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> to add to the collection.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Clear">
      <summary>Removes all objects from the collection.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Determines whether the collection contains a specified <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
      <returns>true if the collection contains the specified <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />; otherwise, false.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> to check for.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary>Copies an <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> array to the collection, starting at a specified target index.</summary>
      <param name="array">The array of <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> objects to copy to the collection.</param>
      <param name="index">The zero-based index in the array at which the copying begins.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Count">
      <summary>Gets the number of attributes contained in the collection.</summary>
      <returns>The number of attributes contained in the collection.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Returns the zero-based index of the first occurrence of a specified <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> in the collection, or -1 if the attribute is not found in the collection. </summary>
      <returns>The first index of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> in the collection, or -1 if the attribute is not found in the collection.
</returns>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Inserts an <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> into the collection at the specified index. 
</summary>
      <param name="index">The zero-based index at which the attribute is inserted.</param>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> to insert.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary>Gets or sets the attribute element at the specified index.</summary>
      <returns>The <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> at the specified index.</returns>
      <param name="index">The zero-based index of the attribute element to get or set.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> is not valid for the collection; it is either too large or less than zero.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Removes a specified <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> from the collection, if it is present.</summary>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> to remove.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.RemoveAt(System.Int32)">
      <summary>Removes an <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> item at a specified index from the collection.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements from the attribute collection to an array, starting at a specified index of the array.</summary>
      <param name="array">The one-dimensional destination <see cref="T:System.Array" /> for the attribute elements copied from the <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> collection. </param>
      <param name="index">The zero-based index in array at which copying begins.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="index" /> is greater than the length of the array, the length of the array is exceeded when the attribute elements are added, or the <paramref name="array" /> is multidimensional.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value that indicates whether access to the attribute collection is synchronized (thread safe).</summary>
      <returns>true if the collection is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#ICollection#SyncRoot">
      <summary>This method is not supported.</summary>
      <returns>Throws a <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Add(System.Object)">
      <summary>Adds an item to the attribute list.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The object to add to the list.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the attribute list contains a specific value.</summary>
      <returns>true if the object is found in the attribute list; otherwise, false.</returns>
      <param name="value">The object to locate in the attribute list.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specified item in the attribute list.</summary>
      <returns>The index of the <paramref name="value" /> if found in the attribute list; otherwise, -1.</returns>
      <param name="value">The object to locate in the attribute list.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item in the list at a specified index.</summary>
      <param name="index">The zero-based index at which value should be inserted.</param>
      <param name="value">The object to insert into the list.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> is not valid for the collection; it is either too large or less than zero.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#IsFixedSize">
      <summary>Gets a value that indicates whether the list has a fixed size.</summary>
      <returns>true if the list has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#IsReadOnly">
      <summary>Gets a value that indicates whether the list is read-only.</summary>
      <returns>true if the list is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> is not valid for the collection; it is either too large or less than zero.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the list.</summary>
      <param name="value">The object to remove from the list.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary>Represents a collection of <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> objects.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Adds an <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> to the collection.</summary>
      <returns>The index of the added item.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> to add to the collection.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Clear">
      <summary>Removes all objects from the collection.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Determines whether the collection contains a specified <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
      <returns>true if the collection contains the specified <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />; otherwise, false.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> to check for.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary>Copies an <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> array to the collection, starting at a specified target index.</summary>
      <param name="array">The array of <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> objects to copy to the collection.</param>
      <param name="index">The zero-based index in the array at which the copying begins.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Count">
      <summary>Gets the number of attributes contained in the collection.</summary>
      <returns>The number of attributes contained in the collection.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Returns the zero-based index of the first occurrence of a specified <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> in the collection, or -1 if the attribute is not found in the collection. </summary>
      <returns>The first index of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> in the collection, or -1 if the attribute is not found in the collection.
</returns>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Inserts an <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> into the collection at the specified index. 
</summary>
      <param name="index">The zero-based index at which the attribute is inserted.</param>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> to insert.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary>Gets or sets the attribute element at the specified index.</summary>
      <returns>The <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> at the specified index.</returns>
      <param name="index">The zero-based index of the attribute element to get or set.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> is not valid for the collection; it is either too large or less than zero.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Removes a specified <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> from the collection, if it is present.</summary>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> to remove.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.RemoveAt(System.Int32)">
      <summary>Removes an <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> item at a specified index from the collection.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements from the attribute collection to an array, starting at a specified index of the array.</summary>
      <param name="array">The one-dimensional destination <see cref="T:System.Array" /> for the attribute elements copied from the <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> collection. </param>
      <param name="index">The zero-based index in array at which copying begins.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="index" /> is greater than the length of the array or the length of the array is exceeded when the attribute elements are added or the <paramref name="array" /> is multidimensional.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value that indicates whether access to the attribute collection is synchronized (thread safe).</summary>
      <returns>true if the collection is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#SyncRoot">
      <summary>This method is not supported.</summary>
      <returns>Throws a <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Add(System.Object)">
      <summary>Adds an item to the attribute list.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The object to add to the list.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the attribute list contains a specific value.</summary>
      <returns>true if the object is found in the attribute list; otherwise, false.</returns>
      <param name="value">The object to locate in the attribute list.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specified item in the attribute list.</summary>
      <returns>The index of the <paramref name="value" /> if found in the attribute list; otherwise, -1.</returns>
      <param name="value">The object to locate in the attribute list.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item in the list at a specified index.</summary>
      <param name="index">The zero-based index at which value should be inserted.</param>
      <param name="value">The object to insert into the list.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> is not valid for the collection; it is either too large or less than zero.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsFixedSize">
      <summary>Gets a value that indicates whether the list has a fixed size.</summary>
      <returns>true if the list has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsReadOnly">
      <summary>Gets a value that indicates whether the list is read-only.</summary>
      <returns>true if the list is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> is not valid for the collection; it is either too large or less than zero.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the list.</summary>
      <param name="value">The object to remove from the list.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary>Allows you to override property, field, and class attributes when you use the <see cref="T:System.Xml.Serialization.XmlSerializer" /> to serialize or deserialize an object.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary>Adds an <see cref="T:System.Xml.Serialization.XmlAttributes" /> object to the collection of <see cref="T:System.Xml.Serialization.XmlAttributes" /> objects. The <paramref name="type" /> parameter specifies an object to be overridden. The <paramref name="member" /> parameter specifies the name of a member that is overridden.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the object to override. </param>
      <param name="member">The name of the member to override. </param>
      <param name="attributes">An <see cref="T:System.Xml.Serialization.XmlAttributes" /> object that represents the overriding attributes. </param>
      <exception cref="T:System.InvalidOperationException">More than one <see cref="T:System.Xml.Serialization.XmlAttributes" /> object was added for a member of some type.
</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary>Adds an <see cref="T:System.Xml.Serialization.XmlAttributes" /> object to the collection of <see cref="T:System.Xml.Serialization.XmlAttributes" /> objects. The <paramref name="type" /> parameter specifies an object to be overridden by the <see cref="T:System.Xml.Serialization.XmlAttributes" /> object.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the object that is overridden. </param>
      <param name="attributes">An <see cref="T:System.Xml.Serialization.XmlAttributes" /> object that represents the overriding attributes. </param>
      <exception cref="T:System.InvalidOperationException">More than one <see cref="T:System.Xml.Serialization.XmlAttributes" /> object was added for a member of some type.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary>Gets the object associated with the specified base-class type.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlAttributes" /> that represents the collection of overriding attributes.</returns>
      <param name="type">The base class <see cref="T:System.Type" /> that is associated with the collection of attributes you want to retrieve. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary>Gets the object associated with the specified base-class type. The <paramref name="member" /> parameter specifies the base-class member that is overridden.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlAttributes" /> that represents the collection of overriding attributes.</returns>
      <param name="type">The base class <see cref="T:System.Type" /> that is associated with the collection of attributes you want. </param>
      <param name="member">The name of the overridden member that specifies the <see cref="T:System.Xml.Serialization.XmlAttributes" /> to return. </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary>Represents a collection of attribute objects that control how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes and deserializes an object.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributes" /> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributes" /> class and customizes how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes and deserializes an object. </summary>
      <param name="provider">A class that can provide alternative implementations of attributes that control XML serialization.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary>Gets the collection of <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> objects to override.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> object that represents the collection of <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> objects.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary>Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or read/write property that returns an array.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or read/write property that returns an array.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary>Gets or sets a collection of objects that specify how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes items inserted into an array returned by a public field or read/write property.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> object that contains a collection of <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> objects.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary>Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or public read/write property as an XML attribute.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> that controls the serialization of a public field or read/write property as an XML attribute.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary>Gets or sets an object that allows you to distinguish between a set of choices.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> that can be applied to a class member that is serialized as an xsi:choice element.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary>Gets or sets the default value of an XML element or attribute.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the default value of an XML element or attribute.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary>Gets a collection of objects that specify how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or read/write property as an XML element.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> that contains a collection of <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> objects.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary>Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration member.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration member.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary>Gets or sets a value that specifies whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or public read/write property.</summary>
      <returns>true if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must not serialize the field or property; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary>Gets or sets a value that specifies whether to keep all namespace declarations when an object that contains a member that returns an <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> object is overridden.</summary>
      <returns>true if the namespace declarations should be kept; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary>Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a class as an XML root element.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that overrides a class attributed as an XML root element.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary>Gets or sets an object that instructs the <see cref="T:System.Xml.Serialization.XmlSerializer" /> to serialize a public field or public read/write property as XML text.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> that overrides the default serialization of a public property or field.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary>Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a class to which the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> has been applied.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> that overrides an <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> applied to a class declaration.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary>Represents a collection of <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> objects used by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> to override the default way it serializes a class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Adds an <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> to the collection.</summary>
      <returns>The index of the added item.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> to add to the collection.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Clear">
      <summary>Removes all objects from the collection.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Determines whether the collection contains a specified <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
      <returns>true if the collection contains the specified <see cref="T:System.Xml.Serialization.XmlElementAttribute" />; otherwise, false.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> to check for.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary>Copies an <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> array to the collection, starting at a specified target index.</summary>
      <param name="array">The array of <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> objects to copy to the collection.</param>
      <param name="index">The zero-based index in the array at which the copying begins.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Count">
      <summary>Gets the number of attributes contained in the collection.</summary>
      <returns>The number of attributes contained in the collection.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Returns the zero-based index of the first occurrence of a specified <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> in the collection, or -1 if the attribute is not found in the collection. </summary>
      <returns>The first index of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> in the collection, or -1 if the attribute is not found in the collection.
</returns>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary>Inserts an <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> into the collection at the specified index. 
</summary>
      <param name="index">The zero-based index at which the attribute is inserted.</param>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> to insert.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary>Gets or sets the attribute element at the specified index.</summary>
      <returns>The <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> at the specified index.</returns>
      <param name="index">The zero-based index of the attribute element to get or set.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> is not valid for the collection; it is either too large or less than zero.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Removes a specified <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> from the collection, if it is present.</summary>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> to remove.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.RemoveAt(System.Int32)">
      <summary>Removes an <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> item at a specified index from the collection.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements from the attribute collection to an array, starting at a specified index of the array.</summary>
      <param name="array">The one-dimensional destination <see cref="T:System.Array" /> for the attribute elements copied from the <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> collection. </param>
      <param name="index">The zero-based index in array at which copying begins.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="index" /> is greater than the length of the array, the length of the array is exceeded when the attribute elements are added, or the <paramref name="array" /> is multidimensional.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value that indicates whether access to the attribute collection is synchronized (thread safe).</summary>
      <returns>true if the collection is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#SyncRoot">
      <summary>This method is not supported.</summary>
      <returns>Throws a <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Add(System.Object)">
      <summary>Adds an item to the attribute list.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The object to add to the list.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the attribute list contains a specific value.</summary>
      <returns>true if the object is found in the attribute list; otherwise, false.</returns>
      <param name="value">The object to locate in the attribute list.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specified item in the attribute list.</summary>
      <returns>The index of the <paramref name="value" /> if found in the attribute list; otherwise, -1.</returns>
      <param name="value">The object to locate in the attribute list.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item in the list at a specified index.</summary>
      <param name="index">The zero-based index at which value should be inserted.</param>
      <param name="value">The object to insert into the list.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> is not valid for the collection; it is either too large or less than zero.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsFixedSize">
      <summary>Gets a value that indicates whether the list has a fixed size.</summary>
      <returns>true if the list has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsReadOnly">
      <summary>Gets a value that indicates whether the list is read-only.</summary>
      <returns>
        <paramref name="true" /> if the list is read-only; otherwise, <paramref name="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> is not valid for the collection; it is either too large or less than zero.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the list.</summary>
      <param name="value">The object to remove from the list.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary>Supports mappings between .NET Framework types and XML Schema data types. </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary>Get the name of the mapped element.</summary>
      <returns>The name of the mapped element.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary>Gets the namespace of the mapped element.</summary>
      <returns>The namespace of the mapped element.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary>Sets the key used to look up the mapping.</summary>
      <param name="key">The lookup key.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary>Gets the name of the XSD element of the mapping.</summary>
      <returns>The XSD element name.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary>Specifies whether a mapping is read, write, or both.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary>Both read and write methods are generated.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary>Read methods are generated.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary>Write methods are generated.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary>Maps a code entity in a .NET Framework Web service method to an element in a Web Services Description Language (WSDL) message.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary>Gets or sets a value that indicates whether the .NET Framework type maps to an XML element or attribute of any type. </summary>
      <returns>true, if the type maps to an XML any element or attribute; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary>Gets a value that indicates whether the accompanying field in the .NET Framework type has a value specified.</summary>
      <returns>true, if the accompanying field has a value specified; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary>Gets the unqualified name of the XML element declaration that applies to this mapping. </summary>
      <returns>The unqualified name of the XML element declaration that applies to this mapping.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary>Gets the name of the Web service method member that is represented by this mapping. </summary>
      <returns>The name of the Web service method member represented by this mapping.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary>Gets the XML namespace that applies to this mapping. </summary>
      <returns>The XML namespace that applies to this mapping.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary>Gets the fully qualified type name of the .NET Framework type for this mapping. </summary>
      <returns>The fully qualified type name of the .NET Framework type for this mapping.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary>Gets the type name of the .NET Framework type for this mapping. </summary>
      <returns>The type name of the .NET Framework type for this mapping.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary>Gets the namespace of the .NET Framework type for this mapping.</summary>
      <returns>The namespace of the .NET Framework type for this mapping.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary>Gets the XML element name as it appears in the service description document.</summary>
      <returns>The XML element name.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary>Provides mappings between .NET Framework Web service methods and Web Services Description Language (WSDL) messages that are defined for SOAP Web services. </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary>Gets the number of .NET Framework code entities that belong to a Web service method to which a SOAP message is being mapped. </summary>
      <returns>The number of mappings in the collection.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary>Gets an item that contains internal type mapping information for a .NET Framework code entity that belongs to a Web service method being mapped to a SOAP message.</summary>
      <returns>The requested <see cref="T:System.Xml.Serialization.XmlMemberMapping" />.</returns>
      <param name="index">The index of the mapping to return.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary>Gets the name of the .NET Framework type being mapped to the data type of an XML Schema element that represents a SOAP message.</summary>
      <returns>The name of the .NET Framework type.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary>Gets the namespace of the .NET Framework type being mapped to the data type of an XML Schema element that represents a SOAP message.</summary>
      <returns>The .NET Framework namespace of the mapping.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary>Generates mappings to XML schema element declarations, including literal XML Schema Definition (XSD) message parts in a Web Services Description Language (WSDL) document for .NET Framework types or Web service method information. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class using the specified default XML namespace. </summary>
      <param name="defaultNamespace">The default XML namespace to use for imported type mappings.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class using the specified XML serialization overrides. </summary>
      <param name="attributeOverrides">An object that overrides how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class serializes mapped types.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class using the specified XML serialization overrides and default XML namespace. </summary>
      <param name="attributeOverrides">An object that overrides how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class serializes mapped types.</param>
      <param name="defaultNamespace">The default XML namespace to use for imported type mappings.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary>Generates internal type mappings for information from a Web service method. </summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> with mappings to the element parts of a WSDL message definition.</returns>
      <param name="elementName">An XML element name produced from the Web service method.</param>
      <param name="ns">An XML element namespace produced from the Web service method.</param>
      <param name="members">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</param>
      <param name="hasWrapperElement">true if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>Returns internal type mappings using information from a Web service method and allows you to specify an XML element name, XML namespace, and other options.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> that contains the mappings.</returns>
      <param name="elementName">An XML element name produced from the Web service method.</param>
      <param name="ns">An XML element namespace produced from the Web service method.</param>
      <param name="members">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</param>
      <param name="hasWrapperElement">true if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, false.</param>
      <param name="rpc">true if the method is a remote procedure call; otherwise, false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>Returns internal type mappings using information from a Web service method and allows you to specify an XML element name, XML namespace, and other options.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> that contains the mappings.</returns>
      <param name="elementName">An XML element name produced from the Web service method.</param>
      <param name="ns">An XML element namespace produced from the Web service method.</param>
      <param name="members">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</param>
      <param name="hasWrapperElement">true if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, false.</param>
      <param name="rpc">true if the method is a remote procedure call; otherwise, false.</param>
      <param name="openModel">true to specify that the generated schema type is marked with the &lt;xs:anyAttribute&gt; element; otherwise, false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>Generates internal type mappings for information from a Web service method.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> that contains the mappings.</returns>
      <param name="elementName">An XML element name produced from the Web service method.</param>
      <param name="ns">An XML element namespace produced from the Web service method.</param>
      <param name="members">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</param>
      <param name="hasWrapperElement">true if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, false.</param>
      <param name="rpc">true if the method is a remote procedure call; otherwise, false.</param>
      <param name="openModel">true to specify that the generated schema type is marked with the  &lt;xs:anyAttribute&gt; element; otherwise, false.</param>
      <param name="access">One of the <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> values. The default is None.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>Generates a mapping to an XML Schema element for a specified .NET Framework type. </summary>
      <returns>Internal .NET Framework mapping of a type to an XML Schema element.</returns>
      <param name="type">The .NET Framework type for which to generate a type mapping.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>Generates a mapping to an XML Schema element for a .NET Framework type, using the specified type and namespace. </summary>
      <returns>Internal .NET Framework mapping of a type to an XML Schema element.</returns>
      <param name="type">The .NET Framework type for which to generate a type mapping.</param>
      <param name="defaultNamespace">The default XML namespace to use.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>Generates a mapping to an XML Schema element for a .NET Framework type, using the specified type and attribute. </summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that represents a mapping of a .NET Framework type to an XML Schema element.</returns>
      <param name="type">The .NET Framework type for which to generate a type mapping.</param>
      <param name="root">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> attribute that is applied to the type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>Generates a mapping to an XML Schema element for a .NET Framework type, using the specified type, attribute, and namespace. </summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that contains the internal .NET Framework mapping of a type to an XML Schema element.</returns>
      <param name="type">The .NET Framework type for which to generate a type mapping.</param>
      <param name="root">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> attribute that is applied to the type.</param>
      <param name="defaultNamespace">The default XML namespace to use.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary>Includes mappings for a type for later use when import methods are invoked. </summary>
      <param name="type">The .NET Framework type for which to save type mapping information.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>Includes mappings for derived types for later use when import methods are invoked. </summary>
      <param name="provider">An instance of the <see cref="T:System.Reflection.ICustomAttributeProvider" /> class that contains custom attributes derived from the <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> attribute.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary>Provides mappings between code entities in .NET Framework Web service methods and the content of Web Services Description Language (WSDL) messages that are defined for SOAP Web services. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> class. </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> represents a Web service method return value, as opposed to an output parameter. </summary>
      <returns>true, if the member represents a Web service return value; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary>Gets or sets the name of the Web service method member for this mapping. </summary>
      <returns>The name of the Web service method.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary>Gets or sets the type of the Web service method member code entity that is represented by this mapping. </summary>
      <returns>The <see cref="T:System.Type" /> of the Web service method member code entity that is represented by this mapping.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary>Gets or sets a value that indicates that the value of the corresponding XML element definition's isNullable attribute is false.</summary>
      <returns>true to override the <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" /> property; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary>Gets or sets an <see cref="T:System.Xml.Serialization.XmlAttributes" /> with the collection of <see cref="T:System.Xml.Serialization.XmlSerializer" />-related attributes that have been applied to the member code entity. </summary>
      <returns>An <see cref="T:System.XML.Serialization.XmlAttributes" /> that represents XML attributes that have been applied to the member code.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary>An abstract class that is the base class for <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> and <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> and that contains methods common to both of these types.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" /> class. </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary>Controls deserialization by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary>Checks whether the deserializer has advanced.</summary>
      <param name="whileIterations">The current count in a while loop.</param>
      <param name="readerCount">The current <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" />. </param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> has not advanced. </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary>Removes all occurrences of white space characters from the beginning and end of the specified string.</summary>
      <returns>The trimmed string.</returns>
      <param name="value">The string that has its white space trimmed.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary>Creates an <see cref="T:System.InvalidOperationException" /> that indicates that an object being deserialized should be abstract. </summary>
      <returns>An <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <param name="name">The name of the abstract type.</param>
      <param name="ns">The Silverlight namespace of the abstract type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Populates an object from its XML representation at the current location of the <see cref="T:System.Xml.XmlReader" />, with an option to read the inner element.</summary>
      <returns>An <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <param name="xsdDerived">The local name of the derived XML Schema data type.</param>
      <param name="nsDerived">The namespace of the derived XML Schema data type.</param>
      <param name="xsdBase">The local name of the base XML Schema data type.</param>
      <param name="nsBase">The namespace of the base XML Schema data type.</param>
      <param name="clrDerived">The namespace of the derived Silverlight type.</param>
      <param name="clrBase">The name of the base Silverlight type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary>Creates an <see cref="T:System.InvalidOperationException" /> that indicates that an object being deserialized cannot be instantiated because the constructor throws a security exception.</summary>
      <returns>An <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <param name="typeName">The name of the type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary>Creates an <see cref="T:System.InvalidOperationException" /> that indicates that an object being deserialized cannot be instantiated because there is no constructor available.</summary>
      <returns>An <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <param name="typeName">The name of the type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary>Creates an <see cref="T:System.InvalidCastException" /> that indicates that an explicit reference conversion failed.</summary>
      <returns>An <see cref="T:System.InvalidCastException" /> exception.</returns>
      <param name="type">The <see cref="T:System.Type" /> that an object cannot be cast to. This type is incorporated into the exception message.</param>
      <param name="value">The object that cannot be cast. This object is incorporated into the exception message.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary>Creates an <see cref="T:System.InvalidCastException" /> that indicates that an explicit reference conversion failed.</summary>
      <returns>An <see cref="T:System.InvalidCastException" /> exception.</returns>
      <param name="type">The <see cref="T:System.Type" /> that an object cannot be cast to. This type is incorporated into the exception message.</param>
      <param name="value">The object that cannot be cast. This object is incorporated into the exception message.</param>
      <param name="id">A string identifier.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary>Creates an <see cref="T:System.InvalidOperationException" /> that indicates that a derived type that is mapped to an XML Schema data type cannot be located.</summary>
      <returns>An <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <param name="name">The local name of the XML Schema data type that is mapped to the unavailable derived type.</param>
      <param name="ns">The namespace of the XML Schema data type that is mapped to the unavailable derived type.</param>
      <param name="clrType">The full name of the Silverlight base type for which a derived type cannot be located.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary>Creates an <see cref="T:System.InvalidOperationException" /> that indicates that a SOAP-encoded collection type cannot be modified and its values cannot be filled in. </summary>
      <returns>An <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <param name="name">The fully qualified name of the Silverlight type for which there is a mapping.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary>Creates an <see cref="T:System.InvalidOperationException" /> that indicates that an enumeration value is not valid. </summary>
      <returns>An <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <param name="value">The enumeration value that is not valid.</param>
      <param name="enumType">The enumeration type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary>Creates an <see cref="T:System.InvalidOperationException" /> that indicates that the current position of <see cref="T:System.Xml.XmlReader" /> represents an unknown XML node. </summary>
      <returns>An <see cref="T:System.InvalidOperationException" /> exception.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary>Creates an <see cref="T:System.InvalidOperationException" /> that indicates that a type is unknown. </summary>
      <returns>An <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <param name="type">An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the name of the unknown type.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary>Gets or sets a value that determines whether XML strings are translated into valid Silverlight type names.</summary>
      <returns>true if XML strings are decoded into valid Silverlight type names; otherwise, false.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary>Ensures that a given array, or a copy, is large enough to contain a specified index. </summary>
      <returns>The existing <see cref="T:System.Array" />, if it is already large enough; otherwise, a new, larger array that contains the original array's elements.</returns>
      <param name="a">The <see cref="T:System.Array" /> that is being checked.</param>
      <param name="index">The required index.</param>
      <param name="elementType">The <see cref="T:System.Type" /> of the array's elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary>Determines whether the XML element where the <see cref="T:System.Xml.XmlReader" /> is currently positioned has a null attribute set to the value true.</summary>
      <returns>true if <see cref="T:System.Xml.XmlReader" /> is currently positioned over a null attribute with the value true; otherwise, false.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary>Gets the value of the xsi:type attribute for the XML element at the current location of the <see cref="T:System.Xml.XmlReader" />. </summary>
      <returns>An XML qualified name that indicates the data type of an XML element.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary>Initializes callback methods that populate objects that map to SOAP-encoded XML data. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary>Stores element and attribute names in a <see cref="T:System.Xml.NameTable" /> object. </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary>Gets or sets a value that should be true for a SOAP 1.1 return value.</summary>
      <returns>true, if the value is a return value. </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary>Determines whether an XML attribute name indicates an XML namespace. </summary>
      <returns>true if the XML attribute name indicates an XML namespace; otherwise, false.</returns>
      <param name="name">The name of an XML attribute.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary>Makes the <see cref="T:System.Xml.XmlReader" /> read the fully qualified name of the element where it is currently positioned. </summary>
      <returns>The fully qualified name of the current XML element.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary>Makes the <see cref="T:System.Xml.XmlReader" /> read an XML end tag. </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary>Gets the <see cref="T:System.Xml.XmlReader" /> object that is being used by <see cref="T:System.Xml.Serialization.XmlSerializationReader" />. </summary>
      <returns>The <see cref="T:System.Xml.XmlReader" /> that is being used by the <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary>Gets the current count of the <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>The current count of an <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary>Instructs the <see cref="T:System.Xml.XmlReader" /> to read the current XML element if the element has a null attribute with the value true. </summary>
      <returns>true if the element has a null="true" attribute value and has been read; otherwise, false.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary>Instructs the <see cref="T:System.Xml.XmlReader" /> to read the fully-qualified name of the element where it is currently positioned. </summary>
      <returns>A <see cref="T:System.Xml.XmlQualifiedName" /> that represents the fully qualified name of the current XML element; otherwise, null if a null="true" attribute value is present.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary>Instructs the <see cref="T:System.Xml.XmlReader" /> to read a simple, text-only XML element that could be null. </summary>
      <returns>The string value; otherwise, null.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary>Populates an object from its XML representation at the current location of the <see cref="T:System.Xml.XmlReader" />. </summary>
      <returns>An object that implements the <see cref="T:System.Xml.Serialization.IXmlSerializable" /> interface with its members populated from the location of the <see cref="T:System.Xml.XmlReader" />.</returns>
      <param name="serializable">An <see cref="T:System.Xml.Serialization.IXmlSerializable" /> that corresponds to the current position of the <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary>This method supports the .NET Framework infrastructure and is not intended to be used directly from your code. Populates an object from its XML representation at the current location of the <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.IXmlSerializable" /> interface with its members populated from the location of the <see cref="T:System.Xml.XmlReader" />.
</returns>
      <param name="serializable">An <see cref="T:System.Xml.Serialization.IXmlSerializable" /> that corresponds to the current position of the <see cref="T:System.Xml.XmlReader" />.</param>
      <param name="wrappedAny">true if any elements are wrapped; otherwise, false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary>Produces the result of a call to the <see cref="M:System.Xml.XmlReader.ReadString" /> method appended to the input value. </summary>
      <returns>The result of a call to the <see cref="M:System.Xml.XmlReader.ReadString" /> method appended to the input value.</returns>
      <param name="value">A string to prefix to the result of a call to the <see cref="M:System.Xml.XmlReader.ReadString" /> method.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary>Returns the result of a call to the <see cref="M:System.Xml.XmlReader.ReadString" /> method of the <see cref="T:System.Xml.XmlReader" /> class, trimmed of white space if required, and appended to the input value.</summary>
      <returns>The result of the read operation appended to the input value.</returns>
      <param name="value">A string that is appended to.</param>
      <param name="trim">true if the result of the read operation should be trimmed; otherwise, false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary>Reads an XML element that allows null values (xsi:nil = 'true') and returns a generic <see cref="T:System.Nullable`1" /> value. </summary>
      <returns>A generic <see cref="T:System.Nullable`1" /> that represents a null XML value.</returns>
      <param name="type">The <see cref="T:System.Xml.XmlQualifiedName" /> that represents the simple data type for the current location of the <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary>Gets the value of the XML node at which the <see cref="T:System.Xml.XmlReader" /> is currently positioned. </summary>
      <returns>The value of the node as a Silverlight value type, if the value is a simple XML Schema data type.</returns>
      <param name="type">The <see cref="T:System.Xml.XmlQualifiedName" /> that represents the simple data type for the current location of the <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary>Ensures that a given array, or a copy, is no larger than a specified length. </summary>
      <returns>The existing <see cref="T:System.Array" />, if it is already small enough; otherwise, a new, smaller array that contains the original array's elements up to the size of<paramref name=" length" />.</returns>
      <param name="a">The array that is being checked.</param>
      <param name="length">The maximum length of the array.</param>
      <param name="elementType">The <see cref="T:System.Type" /> of the array's elements.</param>
      <param name="isNullable">true if null for the array, if present for the input array, can be returned; otherwise, a new, smaller array.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary>Instructs the <see cref="T:System.Xml.XmlReader" /> to read the string value at its current position and return it as a base-64 byte array.</summary>
      <returns>A base-64 byte array; otherwise, null if the value of the <paramref name="isNull" /> parameter is true.</returns>
      <param name="isNull">true to return null; false to return a base-64 byte array.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary>Produces a base-64 byte array from an input string. </summary>
      <returns>A base-64 byte array.</returns>
      <param name="value">A string to translate into a base-64 byte array.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary>Instructs the <see cref="T:System.Xml.XmlReader" /> to read the string value at its current position and return it as a hexadecimal byte array.</summary>
      <returns>A hexadecimal byte array; otherwise, null if the value of the <paramref name="isNull" /> parameter is true. </returns>
      <param name="isNull">true to return null; false to return a hexadecimal byte array.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary>Produces a hexadecimal byte array from an input string.</summary>
      <returns>A hexadecimal byte array.</returns>
      <param name="value">A string to translate into a hexadecimal byte array.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary>Produces a <see cref="T:System.Char" /> object from an input string. </summary>
      <returns>A <see cref="T:System.Char" /> object.</returns>
      <param name="value">A string to translate into a <see cref="T:System.Char" /> object.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary>Produces a <see cref="T:System.DateTime" /> object from an input string. </summary>
      <returns>A <see cref="T:System.DateTime" />object.</returns>
      <param name="value">A string to translate into a <see cref="T:System.DateTime" /> class object.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary>Produces a <see cref="T:System.DateTime" /> object from an input string. </summary>
      <returns>A <see cref="T:System.DateTime" /> object.</returns>
      <param name="value">A string to translate into a <see cref="T:System.DateTime" /> object.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.IDictionary,System.String)">
      <summary>This method supports the .NET Framework infrastructure and is not intended to be used directly from your code. Produces a numeric enumeration value from a string that consists of delimited identifiers that represent constants from the enumerator list. </summary>
      <returns>
A long value that consists of the enumeration value as a series of bitwise OR operations.
</returns>
      <param name="value">A string that consists of delimited identifiers where each identifier represents a constant from the set enumerator list.</param>
      <param name="h">A <see cref="T:System.Collections.IDictionary" /> hashtable that consists of the identifiers as keys and the constants as integral numbers.</param>
      <param name="typeName">The name of the enumeration type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary>Produces a <see cref="T:System.DateTime" /> object from a string that represents the time. </summary>
      <returns>A <see cref="T:System.DateTime" /> object.</returns>
      <param name="value">A string to translate into a <see cref="T:System.DateTime" /> object.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary>Decodes an XML name.</summary>
      <returns>A decoded string.</returns>
      <param name="value">An XML name to be decoded.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary>Decodes an XML name.</summary>
      <returns>A decoded string.</returns>
      <param name="value">An XML name to be decoded.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary>Decodes an XML name.</summary>
      <returns>A decoded string.</returns>
      <param name="value">An XML name to be decoded.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary>Decodes an XML name.</summary>
      <returns>A decoded string.</returns>
      <param name="value">An XML name to be decoded.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary>Obtains an <see cref="T:System.Xml.XmlQualifiedName" /> from a name that might contain a prefix. </summary>
      <returns>An <see cref="T:System.Xml.XmlQualifiedName" /> that represents a namespace-qualified XML name.</returns>
      <param name="value">A name that might contain a prefix.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary>Raises an <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> event for the current position of the <see cref="T:System.Xml.XmlReader" />. </summary>
      <param name="o">The object that is being deserialized.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary>Raises an <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> event for the current position of the <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">The object being deserialized.</param>
      <param name="qnames">A comma-delimited list of XML qualified names.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary>Delegate supporting the .NET Framework infrastructure that is used by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class for serialization of types from SOAP-encoded, non-root XML data. </summary>
      <param name="o">The object being serialized.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary>Abstract class used for controlling serialization by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> class. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary>Creates an <see cref="T:System.InvalidOperationException" /> that indicates an unexpected name for an element that adheres to an XML Schema choice element declaration.</summary>
      <returns>An <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <param name="value">The name that is not valid.</param>
      <param name="identifier">The choice element declaration that the name belongs to.</param>
      <param name="name">The expected local name of an element.</param>
      <param name="ns">The expected namespace of an element.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary>Creates an <see cref="T:System.InvalidOperationException" /> that indicates the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> has been invalidly applied to a member; only members that are of type <see cref="T:System.Xml.XmlNode" />, or derived from <see cref="T:System.Xml.XmlNode" />, are valid.</summary>
      <returns>An <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <param name="o">The object that represents the invalid member.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary>Creates an <see cref="T:System.InvalidOperationException" /> that indicates the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> has been invalidly applied to a member; only members that are of type <see cref="T:System.Xml.XmlNode" />, or derived from <see cref="T:System.Xml.XmlNode" />, are valid.</summary>
      <returns>An <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <param name="type">The <see cref="T:System.Type" /> that is invalid.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary>Creates an <see cref="T:System.InvalidOperationException" /> that indicates a failure while writing an array where an XML Schema choice element declaration is applied.</summary>
      <returns>An <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <param name="type">The type being serialized.</param>
      <param name="identifier">A name for the choice element declaration.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary>Creates an <see cref="T:System.InvalidOperationException" /> for an invalid enumeration value.</summary>
      <returns>An <see cref="T:System.ComponentModel.InvalidEnumArgumentException" />.</returns>
      <param name="value">An object that represents the invalid enumeration.</param>
      <param name="typeName">The XML type name.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary>Creates an <see cref="T:System.InvalidOperationException" /> that indicates that a value for an XML element does not match an enumeration type.</summary>
      <returns>An <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <param name="value">The value that is not valid.</param>
      <param name="elementName">The name of the XML element with an invalid value.</param>
      <param name="enumValue">The valid value.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary>Creates an <see cref="T:System.InvalidOperationException" /> that indicates that an XML element that should adhere to the XML Schema any element declaration cannot be processed.</summary>
      <returns>An <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <param name="name">The XML element that cannot be processed.</param>
      <param name="ns">The namespace of the XML element.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary>Creates an <see cref="T:System.InvalidOperationException" /> that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered. </summary>
      <returns>An <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <param name="o">The object whose type cannot be serialized.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary>Creates an <see cref="T:System.InvalidOperationException" /> that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered. </summary>
      <returns>An <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <param name="type">The type that cannot be serialized.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary>Gets or sets a value that indicates whether the <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> method is used to write valid XML.</summary>
      <returns>true if the <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> method returns an encoded name; otherwise, false.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary>Processes a base-64 byte array.</summary>
      <returns>The same byte array that was passed in as an argument.</returns>
      <param name="value">A base-64 <see cref="T:System.Byte" /> array.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary>Produces a string from an input hexadecimal byte array.</summary>
      <returns>The byte array value converted to a string.</returns>
      <param name="value">A hexadecimal byte array to translate to a string.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary>Produces a string from an input <see cref="T:System.Char" />.</summary>
      <returns>The <see cref="T:System.Char" /> value converted to a string.</returns>
      <param name="value">A <see cref="T:System.Char" /> to translate to a string.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary>Produces a string from a <see cref="T:System.DateTime" /> object.</summary>
      <returns>A string representation of the <see cref="T:System.DateTime" /> that shows the date but no time.</returns>
      <param name="value">A <see cref="T:System.DateTime" /> to translate to a string.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary>Produces a string from an input <see cref="T:System.DateTime" />.</summary>
      <returns>A string representation of the <see cref="T:System.DateTime" /> that shows the date and time.</returns>
      <param name="value">A <see cref="T:System.DateTime" /> to translate to a string.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary>Produces a string that consists of delimited identifiers that represent the enumeration members that have been set.</summary>
      <returns>A string that consists of delimited identifiers, where each represents a member from the set enumerator list.</returns>
      <param name="value">The enumeration value as a series of bitwise OR operations.</param>
      <param name="values">The enumeration's name values.</param>
      <param name="ids">The enumeration's constant values.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary>Takes a numeric enumeration value and the names and constants from the enumerator list for the enumeration and returns a string that consists of delimited identifiers that represent the enumeration members that have been set.</summary>
      <returns>A string that consists of delimited identifiers, where each item is one of the values set by the bitwise operation.</returns>
      <param name="value">The enumeration value as a series of bitwise OR operations.</param>
      <param name="values">The values of the enumeration.</param>
      <param name="ids">The constants of the enumeration.</param>
      <param name="typeName">The name of the type. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary>Produces a string from a <see cref="T:System.DateTime" /> object.</summary>
      <returns>The <see cref="T:System.DateTime" /> object that shows the time but no date.</returns>
      <param name="value">A <see cref="T:System.DateTime" /> that is translated to a string.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary>Encodes a valid XML name by replacing characters that are not valid with escape sequences.</summary>
      <returns>An encoded string.</returns>
      <param name="name">A string to be used as an XML name.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary>Encodes a valid XML local name by replacing characters that are not valid with escape sequences.</summary>
      <returns>An encoded string.</returns>
      <param name="ncName">A string to be used as a local (unqualified) XML name.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary>Encodes an XML name.</summary>
      <returns>An encoded string.</returns>
      <param name="nmToken">An XML name to be encoded.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary>Encodes a space-delimited sequence of XML names into a single XML name.</summary>
      <returns>An encoded string.</returns>
      <param name="nmTokens">A space-delimited sequence of XML names to be encoded.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary>Returns an XML qualified name, with invalid characters replaced by escape sequences. </summary>
      <returns>An XML qualified name, with invalid characters replaced by escape sequences.</returns>
      <param name="xmlQualifiedName">An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the XML to be written.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary>Produces a string that can be written as an XML qualified name, with invalid characters replaced by escape sequences. </summary>
      <returns>An XML qualified name, with invalid characters replaced by escape sequences.</returns>
      <param name="xmlQualifiedName">An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the XML to be written.</param>
      <param name="ignoreEmpty">true to ignore empty spaces in the string; otherwise, false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary>Initializes instances of the <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> delegate to serialize SOAP-encoded XML data. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary>Initializes object references only while serializing a SOAP-encoded SOAP message.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary>Instructs an <see cref="T:System.Xml.XmlWriter" /> object to write an XML attribute that has no namespace specified for its name.</summary>
      <param name="localName">The local name of the XML attribute.</param>
      <param name="value">The value of the XML attribute as a byte array.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary>Instructs the <see cref="T:System.Xml.XmlWriter" /> to write an XML attribute that has no namespace specified for its name. </summary>
      <param name="localName">The local name of the XML attribute.</param>
      <param name="value">The value of the XML attribute as a string.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary>Instructs an <see cref="T:System.Xml.XmlWriter" /> object to write an XML attribute.</summary>
      <param name="localName">The local name of the XML attribute.</param>
      <param name="ns">The namespace of the XML attribute.</param>
      <param name="value">The value of the XML attribute as a byte array.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary>Writes an XML attribute. </summary>
      <param name="localName">The local name of the XML attribute.</param>
      <param name="ns">The namespace of the XML attribute.</param>
      <param name="value">The value of the XML attribute as a string.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary>Writes an XML attribute where the namespace prefix is provided manually. </summary>
      <param name="prefix">The namespace prefix to write.</param>
      <param name="localName">The local name of the XML attribute.</param>
      <param name="ns">The namespace represented by the prefix.</param>
      <param name="value">The value of the XML attribute as a string.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element with a specified qualified name in its body.</summary>
      <param name="localName">The local name of the XML element.</param>
      <param name="ns">The namespace of the XML element.</param>
      <param name="value">The name to write, using its prefix if namespace-qualified, in the element text.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element with a specified qualified name in its body.</summary>
      <param name="localName">The local name of the XML element.</param>
      <param name="ns">The namespace of the XML element.</param>
      <param name="value">The name to write, using its prefix if namespace-qualified, in the element text.</param>
      <param name="xsiType">The name of the XML Schema data type to be written to the xsi:type attribute.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element with a specified qualified name in its body.</summary>
      <param name="localName">The local name of the XML element.</param>
      <param name="value">The name to write, using its prefix if namespace-qualified, in the element text.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element with a specified qualified name in its body.</summary>
      <param name="localName">The local name of the XML element.</param>
      <param name="value">The name to write, using its prefix if namespace-qualified, in the element text.</param>
      <param name="xsiType">The name of the XML Schema data type to be written to the xsi:type attribute.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary>Writes an XML element with a specified value in its body. </summary>
      <param name="localName">The local name of the XML element to be written without namespace qualification.</param>
      <param name="value">The text value of the XML element.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>Writes an XML element with a specified value in its body. </summary>
      <param name="localName">The local name of the XML element.</param>
      <param name="ns">The namespace of the XML element.</param>
      <param name="value">The text value of the XML element.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element with a specified value in its body.</summary>
      <param name="localName">The local name of the XML element.</param>
      <param name="ns">The namespace of the XML element.</param>
      <param name="value">The text value of the XML element.</param>
      <param name="xsiType">The name of the XML Schema data type to be written to the xsi:type attribute.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element with a specified value in its body.</summary>
      <param name="localName">The local name of the XML element.</param>
      <param name="value">The text value of the XML element.</param>
      <param name="xsiType">The name of the XML Schema data type to be written to the xsi:type attribute.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary>Writes an XML element with a specified value in its body.</summary>
      <param name="localName">The local name of the XML element.</param>
      <param name="value">The text value of the XML element.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element with a specified value in its body.</summary>
      <param name="localName">The local name of the XML element.</param>
      <param name="value">The text value of the XML element.</param>
      <param name="xsiType">The name of the XML Schema data type to be written to the xsi:type attribute.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary>Writes an XML element with a specified value in its body.</summary>
      <param name="localName">The local name of the XML element.</param>
      <param name="value">The text value of the XML element.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary>Writes an XML element with a specified value in its body.</summary>
      <param name="localName">The local name of the XML element.</param>
      <param name="ns">The namespace of the XML element.</param>
      <param name="value">The text value of the XML element.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element with a specified value in its body.</summary>
      <param name="localName">The local name of the XML element.</param>
      <param name="ns">The namespace of the XML element.</param>
      <param name="value">The text value of the XML element.</param>
      <param name="xsiType">The name of the XML Schema data type to be written to the xsi:type attribute.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary>Writes an XML element with a specified value in its body.</summary>
      <param name="localName">The local name of the XML element.</param>
      <param name="ns">The namespace of the XML element.</param>
      <param name="value">The text value of the XML element.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element with a specified value in its body.</summary>
      <param name="localName">The local name of the XML element.</param>
      <param name="ns">The namespace of the XML element.</param>
      <param name="value">The text value of the XML element.</param>
      <param name="xsiType">The name of the XML Schema data type to be written to the xsi:type attribute.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element with a specified value in its body.</summary>
      <param name="localName">The local name of the XML element.</param>
      <param name="value">The text value of the XML element.</param>
      <param name="xsiType">The name of the XML Schema data type to be written to the xsi:type attribute.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary>Writes an XML element whose body is empty. </summary>
      <param name="name">The local name of the XML element to write.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary>Writes an XML element whose body is empty.</summary>
      <param name="name">The local name of the XML element to write.</param>
      <param name="ns">The namespace of the XML element to write.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary>Writes a &lt;closing&gt; element tag.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary>Writes a &lt;closing&gt; element tag.</summary>
      <param name="o">The object being serialized.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Writes namespace declaration attributes.</summary>
      <param name="xmlns">The XML namespaces to declare.</param>
      <exception cref="T:System.InvalidOperationException">There is a duplicate namespace.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element whose body contains a valid XML qualified name. <see cref="T:System.Xml.XmlWriter" /> inserts an xsi:nil='true' attribute if the string's value is null.</summary>
      <param name="name">The local name of the XML element to write.</param>
      <param name="ns">The namespace of the XML element to write.</param>
      <param name="value">The XML qualified name to write in the body of the XML element.</param>
      <param name="xsiType">The name of the XML Schema data type to be written to the xsi:type attribute.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element whose body contains a valid XML qualified name. <see cref="T:System.Xml.XmlWriter" /> inserts an xsi:nil='true' attribute if the string's value is null.</summary>
      <param name="name">The local name of the XML element to write.</param>
      <param name="ns">The namespace of the XML element to write.</param>
      <param name="value">The XML qualified name to write in the body of the XML element.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element that contains a string as the body. <see cref="T:System.Xml.XmlWriter" /> inserts an xsi:nil='true' attribute if the string's value is null.</summary>
      <param name="name">The local name of the XML element to write.</param>
      <param name="ns">The namespace of the XML element to write.</param>
      <param name="value">The string to write in the body of the XML element.</param>
      <param name="xsiType">The name of the XML Schema data type to be written to the xsi:type attribute.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>Writes a byte array as the body of an XML element. <see cref="T:System.Xml.XmlWriter" /> inserts an xsi:nil='true' attribute if the string's value is null.</summary>
      <param name="name">The local name of the XML element to write.</param>
      <param name="ns">The namespace of the XML element to write.</param>
      <param name="value">The byte array to write in the body of the XML element.</param>
      <param name="xsiType">The name of the XML Schema data type to be written to the xsi:type attribute.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element that contains a string as the body. <see cref="T:System.Xml.XmlWriter" /> inserts an xsi:nil='true' attribute if the string's value is null.</summary>
      <param name="name">The local name of the XML element to write.</param>
      <param name="ns">The namespace of the XML element to write.</param>
      <param name="value">The string to write in the body of the XML element.</param>
      <param name="xsiType">The name of the XML Schema data type to be written to the xsi:type attribute.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary>Writes an XML element that contains a string as the body. <see cref="T:System.Xml.XmlWriter" /> inserts an xsi:nil='true' attribute if the string's value is null.</summary>
      <param name="name">The local name of the XML element to write.</param>
      <param name="ns">The namespace of the XML element to write.</param>
      <param name="value">The string to write in the body of the XML element.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary>Writes a byte array as the body of an XML element. <see cref="T:System.Xml.XmlWriter" /> inserts an xsi:nil='true' attribute if the string's value is null.</summary>
      <param name="name">The local name of the XML element to write.</param>
      <param name="ns">The namespace of the XML element to write.</param>
      <param name="value">The byte array to write in the body of the XML element.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary>Writes an XML element that contains a string as the body. <see cref="T:System.Xml.XmlWriter" /> inserts a xsi:nil='true' attribute if the string's value is null.</summary>
      <param name="name">The local name of the XML element to write.</param>
      <param name="ns">The namespace of the XML element to write.</param>
      <param name="value">The string to write in the body of the XML element.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary>Writes an XML element with an xsi:nil='true' attribute.</summary>
      <param name="name">The local name of the XML element to write.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary>Writes an XML element with an xsi:nil='true' attribute.</summary>
      <param name="name">The local name of the XML element to write.</param>
      <param name="ns">The namespace of the XML element to write.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary>Writes an XML element with an xsi:nil='true' attribute.</summary>
      <param name="name">The local name of the XML element to write.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary>Writes an XML element with an xsi:nil='true' attribute. </summary>
      <param name="name">The local name of the XML element to write.</param>
      <param name="ns">The namespace of the XML element to write.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary>Gets the <see cref="T:System.Xml.XmlWriter" /> that is being used by the <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />. </summary>
      <returns>The <see cref="T:System.Xml.XmlWriter" /> used by the class instance.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary>Writes an object that uses custom XML formatting as an XML element. </summary>
      <param name="serializable">An object that implements the <see cref="T:System.Xml.Serialization.IXmlSerializable" /> interface that uses custom XML formatting.</param>
      <param name="name">The local name of the XML element to write.</param>
      <param name="ns">The namespace of the XML element to write.</param>
      <param name="isNullable">true to write an xsi:nil='true' attribute if the <see cref="T:System.Xml.Serialization.IXmlSerializable" /> class object is null; otherwise, false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Instructs <see cref="T:System.Xml.XmlNode" /> to write an object that uses custom XML formatting as an XML element. </summary>
      <param name="serializable">An object that implements the <see cref="T:System.Xml.Serialization.IXmlSerializable" /> interface that uses custom XML formatting.</param>
      <param name="name">The local name of the XML element to write.</param>
      <param name="ns">The namespace of the XML element to write.</param>
      <param name="isNullable">true to write an xsi:nil='true' attribute if the <see cref="T:System.Xml.Serialization.IXmlSerializable" /> object is null; otherwise, false.</param>
      <param name="wrapped">true to ignore writing the opening element tag; otherwise, false to write the opening element tag.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary>Writes the XML declaration if the writer is positioned at the start of an XML document. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary>Writes an opening element tag, including any attributes. </summary>
      <param name="name">The local name of the XML element to write.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary>Writes an opening element tag, including any attributes. </summary>
      <param name="name">The local name of the XML element to write.</param>
      <param name="ns">The namespace of the XML element to write.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary>Writes an opening element tag, including any attributes.</summary>
      <param name="name">The local name of the XML element to write.</param>
      <param name="ns">The namespace of the XML element to write.</param>
      <param name="writePrefixed">true to write the element name with a prefix if none is available for the specified namespace; otherwise, false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary>Writes an opening element tag, including any attributes.</summary>
      <param name="name">The local name of the XML element to write.</param>
      <param name="ns">The namespace of the XML element to write.</param>
      <param name="o">The object being serialized as an XML element.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>Writes an opening element tag, including any attributes.</summary>
      <param name="name">The local name of the XML element to write.</param>
      <param name="ns">The namespace of the XML element to write.</param>
      <param name="o">The object being serialized as an XML element.</param>
      <param name="writePrefixed">true to write the element name with a prefix if none is available for the specified namespace; otherwise, false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Writes an opening element tag, including any attributes. </summary>
      <param name="name">The local name of the XML element to write.</param>
      <param name="ns">The namespace of the XML element to write.</param>
      <param name="o">The object being serialized as an XML element.</param>
      <param name="writePrefixed">true to write the element name with a prefix if none is available for the specified namespace; otherwise, false.</param>
      <param name="xmlns">An instance of the <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> class that contains prefix and namespace pairs to be used in the generated XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary>Writes an XML element whose text body is a value of a simple XML Schema data type. </summary>
      <param name="name">The local name of the element to write.</param>
      <param name="ns">The namespace of the element to write.</param>
      <param name="o">The object to be serialized in the element body.</param>
      <param name="xsiType">true if the XML element explicitly specifies the text value's type using the xsi:type attribute; otherwise, false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary>Writes a base-64 byte array.</summary>
      <param name="value">The byte array to write.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary>Writes a specified string.</summary>
      <param name="value">The string to write.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary>Writes an xsi:type attribute for an XML element that is being serialized into a document. </summary>
      <param name="name">The local name of an XML Schema data type.</param>
      <param name="ns">The namespace of an XML Schema data type.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.XmlNamespaces">
      <summary>Gets or sets a list of XML qualified name objects that contain the namespaces and prefixes used to produce qualified names in XML documents. </summary>
      <returns>An <see cref="T:System.Collections.ArrayList" /> that contains the namespaces and prefix pairs.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary>Serializes and deserializes objects into and from XML documents. The <see cref="T:System.Xml.Serialization.XmlSerializer" /> enables you to control how objects are encoded into XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents and deserialize XML documents into objects of the specified type.</summary>
      <param name="type">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents and deserialize XML documents into objects of the specified type. Specifies the default namespace for all the XML elements.</summary>
      <param name="type">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize. </param>
      <param name="defaultNamespace">The default namespace to use for all the XML elements. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents and deserialize XML documents into objects of a specified type. If a property or field returns an array, the <paramref name="extraTypes" /> parameter specifies objects that can be inserted into the array.</summary>
      <param name="type">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize. </param>
      <param name="extraTypes">A <see cref="T:System.Type" /> array of additional object types to serialize. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents and deserialize XML documents into objects of the specified type. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.</summary>
      <param name="type">The type of the object to serialize. </param>
      <param name="overrides">An <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of type <see cref="T:System.Object" /> into XML document instances and deserialize XML document instances into objects of type <see cref="T:System.Object" />. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.</summary>
      <param name="type">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize. </param>
      <param name="overrides">An <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> that extends or overrides the behavior of the class specified in the <paramref name="type" /> parameter. </param>
      <param name="extraTypes">A <see cref="T:System.Type" /> array of additional object types to serialize. </param>
      <param name="root">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that defines the XML root element properties. </param>
      <param name="defaultNamespace">The default namespace of all XML elements in the XML document. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents and deserialize an XML document into object of the specified type. It also specifies the class to use as the XML root element.</summary>
      <param name="type">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize. </param>
      <param name="root">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that represents the XML root element. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Initializes an instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class using an object that maps one type to another.</summary>
      <param name="xmlTypeMapping">An <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that maps one type to another. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary>Gets a value that indicates whether this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can deserialize a specified XML document.</summary>
      <returns>true if this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can deserialize the object that the <see cref="T:System.Xml.XmlReader" /> points to; otherwise, false.</returns>
      <param name="xmlReader">An <see cref="T:System.Xml.XmlReader" /> that points to the document to deserialize. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary>Returns an object used to read the XML document to be serialized.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> used to read the XML document.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary>When overridden in a derived class, returns a writer used to serialize the object.</summary>
      <returns>An instance that implements the <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> class.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary>Deserializes the XML document contained by the specified <see cref="T:System.IO.Stream" />.</summary>
      <returns>The <see cref="T:System.Object" /> being deserialized.</returns>
      <param name="stream">The <see cref="T:System.IO.Stream" /> that contains the XML document to deserialize. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary>Deserializes the XML document contained by the specified <see cref="T:System.IO.TextReader" />.</summary>
      <returns>The <see cref="T:System.Object" /> being deserialized.</returns>
      <param name="textReader">The <see cref="T:System.IO.TextReader" /> that contains the XML document to deserialize. </param>
      <exception cref="T:System.InvalidOperationException">An error occurred during deserialization. The original exception is available using the <see cref="P:System.Exception.InnerException" /> property. </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary>Deserializes the XML document contained by the specified <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">The <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> that contains the XML document to deserialize. </param>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary>Deserializes the XML document contained by the specified <see cref="T:System.xml.XmlReader" />.</summary>
      <returns>The <see cref="T:System.Object" /> being deserialized.</returns>
      <param name="xmlReader">The <see cref="T:System.xml.XmlReader" /> that contains the XML document to deserialize. </param>
      <exception cref="T:System.InvalidOperationException">An error occurred during deserialization. The original exception is available using the <see cref="P:System.Exception.InnerException" /> property. </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary>Returns an array of <see cref="T:System.Xml.Serialization.XmlSerializer" /> objects created from an array of <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> objects.</summary>
      <returns>An array of <see cref="T:System.Xml.Serialization.XmlSerializer" /> objects.</returns>
      <param name="mappings">An array of <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that maps one type to another. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary>Returns an instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class from the specified mappings.</summary>
      <returns>An instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class.</returns>
      <param name="mappings">An array of <see cref="T:System.Xml.Serialization.XmlMapping" /> objects.</param>
      <param name="type">The <see cref="T:System.Type" /> of the deserialized object.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary>Returns an array of <see cref="T:System.Xml.Serialization.XmlSerializer" /> objects created from an array of types.</summary>
      <returns>An array of <see cref="T:System.Xml.Serialization.XmlSerializer" /> objects.</returns>
      <param name="types">An array of <see cref="T:System.Type" /> objects. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary>Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> used to write the XML document. </param>
      <param name="o">The <see cref="T:System.Object" /> to serialize. </param>
      <exception cref="T:System.InvalidOperationException">An error occurred during serialization. The original exception is available using the <see cref="P:System.Exception.InnerException" /> property. </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.IO.Stream" /> that references the specified namespaces.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> used to write the XML document. </param>
      <param name="o">The <see cref="T:System.Object" /> to serialize. </param>
      <param name="namespaces">The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenced by the object. </param>
      <exception cref="T:System.InvalidOperationException">An error occurred during serialization. The original exception is available using the <see cref="P:System.Exception.InnerException" /> property. </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary>Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter">The <see cref="T:System.IO.TextWriter" /> used to write the XML document. </param>
      <param name="o">The <see cref="T:System.Object" /> to serialize. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.IO.TextWriter" /> and references the specified namespaces.</summary>
      <param name="textWriter">The <see cref="T:System.IO.TextWriter" /> used to write the XML document. </param>
      <param name="o">The <see cref="T:System.Object" /> to serialize. </param>
      <param name="namespaces">The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> that contains namespaces for the generated XML document. </param>
      <exception cref="T:System.InvalidOperationException">An error occurred during serialization. The original exception is available using the <see cref="P:System.Exception.InnerException" /> property. </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary>Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
      <param name="o">The <see cref="T:System.Object" /> to serialize. </param>
      <param name="writer">The <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> used to write the XML document. </param>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary>Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="xmlWriter">The <see cref="T:System.xml.XmlWriter" /> used to write the XML document. </param>
      <param name="o">The <see cref="T:System.Object" /> to serialize. </param>
      <exception cref="T:System.InvalidOperationException">An error occurred during serialization. The original exception is available using the <see cref="P:System.Exception.InnerException" /> property. </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.Xml.XmlWriter" /> and references the specified namespaces.</summary>
      <param name="xmlWriter">The <see cref="T:System.xml.XmlWriter" /> used to write the XML document. </param>
      <param name="o">The <see cref="T:System.Object" /> to serialize. </param>
      <param name="namespaces">The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenced by the object. </param>
      <exception cref="T:System.InvalidOperationException">An error occurred during serialization. The original exception is available using the <see cref="P:System.Exception.InnerException" /> property. </exception>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary>Defines the reader, writer, and methods for pre-generated, typed serializers.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" /> class. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary>Gets a value that determines whether a type can be serialized.</summary>
      <returns>true if the type can be serialized; otherwise, false.</returns>
      <param name="type">The <see cref="T:System.Type" /> to be serialized.</param>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary>Returns a serializer for the specified type.</summary>
      <returns>An instance of a type derived from the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class. </returns>
      <param name="type">The <see cref="T:System.Type" /> to be serialized.</param>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary>Gets the XML reader object that is used by the serializer.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> that is used to read an XML document or data stream.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary>Gets the XML writer object for the serializer.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> that is used to write to an XML data stream or document.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.XmlReadMethods">
      <summary>Gets the collection of methods that is used to read an XML data stream.</summary>
      <returns>A <see cref="T:System.Collections.Hashtable" /> that contains the methods.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.XmlTypedSerializers">
      <summary>Gets the collection of typed XML serializers found in the assembly.</summary>
      <returns>A <see cref="T:System.Collections.Hashtable" /> that contains the typed serializers.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.XmlWriteMethods">
      <summary>Get the collection of methods used to write to an XML data stream.</summary>
      <returns>A <see cref="T:System.Collections.Hashtable" /> that contains the methods.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerNamespaces">
      <summary>Contains the XML namespaces and prefixes that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> uses to generate qualified names in an XML-document instance.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> class, using the specified instance of XmlSerializerNamespaces that contains the collection of prefix and namespace pairs.</summary>
      <param name="namespaces">An instance of the <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> that contains the namespace and prefix pairs. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> class.</summary>
      <param name="namespaces">An array of <see cref="T:System.Xml.XmlQualifiedName" /> objects. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)">
      <summary>Adds a prefix and namespace pair to an <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> object.</summary>
      <param name="prefix">The prefix associated with an XML namespace. </param>
      <param name="ns">An XML namespace. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerNamespaces.Count">
      <summary>Gets the number of prefix and namespace pairs in the collection.</summary>
      <returns>The number of prefix and namespace pairs in the collection.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray">
      <summary>Gets the array of prefix and namespace pairs in an <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> object.</summary>
      <returns>An array of <see cref="T:System.Xml.XmlQualifiedName" /> objects that are used as qualified names in an XML document.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary>Contains a mapping of one type to another.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary>The fully qualified type name that includes the namespace (or namespaces) and type.</summary>
      <returns>The fully qualified type name.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary>Gets the type name of the mapped object.</summary>
      <returns>The type name of the mapped object.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary>Gets the XML element name of the mapped object.</summary>
      <returns>The XML element name of the mapped object. The default is the class name of the object.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary>Gets the XML namespace of the mapped object.</summary>
      <returns>The XML namespace of the mapped object. The default is an empty string ("").</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Profiling\ProfilingReadme.txt ===
To get profile information for the Silverlight dlls, the pdbs need to come from the binaries.x86fre\Symbols.pri\retail\dll directory.
Note, this is different than from the binaries.x86ret directory.

The symbols in here come from:

	\\cpvsbuild\drops\release\sl_v4_rtw\symbols\50401.00\binaries.x86fre\Symbols.pri\retail\dll
	
which are the Silveright RTW bits for the fre build. The fre build is a retail build with symbols.
To profile, then, you want the pdbs from the path above. Then the developer runtime also needs
to come from binaries.x86fre.

The runtime insallation files come from here:

	\\cpvsbuild\drops\release\sl_v4_rtw\layouts\x86fre\50401.00\enu\silverlight\runtime\cd
	

Profiling [NOTE: this only works on a machine with a 32bit OS - Silverlight is 32bit and the profiler can't profile a 32bit dll on a 64bit OS]
------------

To do Silverlight profiling, there are two stages: generate the data (a XXX.vsp file) and then analyze the data using VS2010.

Preliminary Steps
-----------------
Install the x86fre developer runtime as discussed above. Keep the path to the x86fre pdbs handy to enter into Visual Studio 2010

Step 1 - Generating the data
----------------------------

(Using Visual Studio 2010)
1) Launch the Visual Studio command prompt as an adminstrator
2) Launch devenv.cmd from this elevated command prompt
3) Add the Tools/Options/Debugging/Symbols path to the x86fre symbols
4) Create a new profiling session using Analyze/Profiler/New Performance Session
5) Launch an instance of IE via the elevated command prompt
6) Navigate to the Silverlight app you want to profile
7) Attach to the Silverlight process in IE via Analyze/Profiler/Attach
8) Play with the part of the app you want to profile
9) When done, choose option on the page in Visual Studio to stop profiling or just exit IE
10) Note where the profile was saved

Step 2 - Analyzing the profile
------------------------------
1) To get a good analysis, you need to make sure the dlls and pdbs are in the same folder as the vsp file
2) Once you've done that, then you can open the vsp in Visual Studio using File/Open
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\ReferenceAssemblies\System.ServiceModel.Web.Xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Web</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
      <summary>Serializes objects to the JavaScript Object Notation (JSON) and deserializes JSON data to objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> class to serialize or deserialize an object of the specified type. </summary>
      <param name="type">The type of the instance that is serialized or deserialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> class to serialize or deserialize an object of a specified type with a collection of known types that may be present in the object graph. </summary>
      <param name="type">The type of the instance that is serialized or deserialized.</param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the types that may be present in the object graph.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
      <summary>Gets a collection of types that may be present in the object graph serialized using this instance of the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains the expected types passed in as known types to the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> constructor.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
      <summary>Reads a document stream in the JSON (JavaScript Object Notation) format and returns the deserialized object.</summary>
      <returns>The deserialized object.</returns>
      <param name="stream">The <see cref="T:System.IO.Stream" /> to be read.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">An error occurred deserializing.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary>Serializes a specified object to JavaScript Object Notation (JSON) data and writes the resulting JSON to a stream.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> that is written to.</param>
      <param name="graph">The object that contains the data to write to the stream.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being written.</exception>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Xml.Utils.Xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.Utils</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Resolvers.XmlKnownDtds">
      <summary>The <see cref="T:System.Xml.Resolvers.XmlKnownDtds" /> enumeration is used by the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> and defines which well-known DTDs the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> recognizes.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.None">
      <summary>Specifies that the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> will not recognize any of the predefined DTDs.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Xhtml10">
      <summary>Specifies that the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> will recognize DTDs and entities that are defined in XHTML 1.0. </summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Rss091">
      <summary>Specifies that the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> will recognize DTDs and entities that are defined in RSS 0.91.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.All">
      <summary>Specifies that the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> will recognize all currently supported DTDs. This is the default behavior.</summary>
    </member>
    <member name="T:System.Xml.Resolvers.XmlPreloadedResolver">
      <summary>The <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> type is used to prepopulate the cache with DTDs or XML streams. </summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> class. </summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> class with the specified preloaded well-known DTDs.</summary>
      <param name="preloadedDtds">The well-known DTDs that should be prepopulated into the cache.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> class with the specified fallback resolver.</summary>
      <param name="fallbackResolver">XmlResolver, XmlXapResolver, or your own resolver.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> class with the specified fallback resolver and preloaded well-known DTDs.</summary>
      <param name="fallbackResolver">XmlResolver, XmlXapResolver, or your own resolver.</param>
      <param name="preloadedDtds">The well-known DTDs that should be prepopulated into cache. </param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> class with the specified fallback resolver, preloaded well-known DTDs and URI equality comparer.</summary>
      <param name="fallbackResolver">XmlResolver, XmlXapResolver, or your own resolver.</param>
      <param name="preloadedDtds">The well-known DTDs that should be prepopulated into cache.</param>
      <param name="uriComparer">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing URIs.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
      <summary>Adds a <see cref="T:System.IO.Stream" />, byte array, or string with preloaded data to the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.</summary>
      <param name="uri">The URI of the data that is being added to the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store.</param>
      <param name="value">A byte array with the data corresponding to the provided URI.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
      <summary>Adds a <see cref="T:System.IO.Stream" />, byte array, or string with preloaded data to the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.</summary>
      <param name="uri">The URI of the data that is being added to the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store.</param>
      <param name="value">A byte array with the data corresponding to the provided URI.</param>
      <param name="offset">The offset in the provided byte array where the data starts.</param>
      <param name="count">The number of bytes to read from the byte array, starting at the provided offset.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> or <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> or <paramref name="count" /> is less than 0.-or-The length of the <paramref name="value" /> minus <paramref name="offset" /> is less than <paramref name="count." /></exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
      <summary>Adds a <see cref="T:System.IO.Stream" />, byte array, or string with preloaded data to the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.</summary>
      <param name="uri">The URI of the data that is being added to the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store.</param>
      <param name="value">A <see cref="T:System.IO.Stream" /> with the data corresponding to the provided URI.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
      <summary>Adds a <see cref="T:System.IO.Stream" />, byte array, or string with preloaded data to the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.</summary>
      <param name="uri">The URI of the data that is being added to the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store.</param>
      <param name="value">A String with the data corresponding to the provided URI.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Maps a URI to an object that contains the actual resource. </summary>
      <returns>A <see cref="T:System.IO.Stream" /> or <see cref="T:System.IO.TextReader" /> object.</returns>
      <param name="absoluteUri">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This is provided for future extensibility purposes. For example, this can be mapped to the xlink:role and used as an implementation specific argument in other scenarios.</param>
      <param name="ofObjectToReturn">The type of object to return. The <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> supports <see cref="T:System.IO.Stream" /> objects and <see cref="T:System.IO.TextReader" /> objects for URIs that were added as String. If the requested type is not supported by the resolver, an exception will be thrown. Use the <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /> method to determine if a certain Type is supported by this resolver.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> is null.</exception>
      <exception cref="T:System.Xml.XmlException">Cannot resolve URI passed in <paramref name="absoluteUri" />.-or-<paramref name="ofObjectToReturn" /> is not of a supported type.</exception>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris">
      <summary>Gets a collection of preloaded URIs.</summary>
      <returns>The collection of preloaded URIs.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
      <summary>Removes the data corresponding to the URI from the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />. </summary>
      <param name="uri">The URI of the data that should be removed from the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> is null.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
      <summary>Resolves the absolute URI from the base and relative URIs.</summary>
      <returns>A <see cref="T:System.Uri" /> representing the absolute URI or null if the relative URI cannot be resolved.</returns>
      <param name="baseUri">The base URI used to resolve the relative URI.</param>
      <param name="relativeUri">The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the <paramref name="baseUri" /> value. If relative, it combines with the <paramref name="baseUri" /> to make an absolute URI.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
      <summary>Returns true if the resolverâs GetEntity method can resolve the provided URI into an instance of the provided <see cref="T:System.Type" />.</summary>
      <returns>True if the resolverâs GetEntity method can resolve the provided URI into an instance of the provided <see cref="T:System.Type" />; otherwise false.</returns>
      <param name="absoluteUri">The URI.</param>
      <param name="type">The requested <see cref="T:System.Type" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> is null.</exception>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\Libraries\Client\System.Xml.XPath.Xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.XPath</name>
  </assembly>
  <members>
    <member name="T:System.Xml.XmlNodeOrder">
      <summary>Describes the document order of a node compared to a second node.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Before">
      <summary>The current node of this navigator is before the current node of the supplied navigator.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.After">
      <summary>The current node of this navigator is after the current node of the supplied navigator.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Same">
      <summary>The two navigators are positioned on the same node.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Unknown">
      <summary>The node positions cannot be determined in document order, relative to each other. This could occur if the two nodes reside in different trees.</summary>
    </member>
    <member name="T:System.Xml.XPath.Extensions">
      <summary>This class contains the LINQ to XML extension methods that enable you to evaluate XPath expressions.</summary>
    </member>
    <member name="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
      <summary>Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for an <see cref="T:System.Xml.Linq.XNode" />.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNavigator" /> that can process XPath queries.</returns>
      <param name="node">An <see cref="T:System.Xml.Linq.XNode" /> that can process XPath queries.</param>
    </member>
    <member name="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
      <summary>Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for an <see cref="T:System.Xml.Linq.XNode" />. The <see cref="T:System.Xml.XmlNameTable" /> enables more efficient XPath expression processing.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNavigator" /> that can process XPath queries.</returns>
      <param name="node">An <see cref="T:System.Xml.Linq.XNode" /> that can process an XPath query.</param>
      <param name="nameTable">A <see cref="T:System.Xml.XmlNameTable" /> to be used by <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
    </member>
    <member name="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)">
      <summary>Evaluates an XPath expression.</summary>
      <returns>An object that can contain a bool, a double, a string, or an <see cref="T:System.Collections.Generic.IEnumerable`1" />. </returns>
      <param name="node">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</param>
      <param name="expression">A <see cref="T:System.String" /> that contains an XPath expression.</param>
    </member>
    <member name="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Evaluates an XPath expression, resolving namespace prefixes using the specified <see cref="T:System.Xml.IXmlNamespaceResolver" />.</summary>
      <returns>An object that contains the result of evaluating the expression. The object can be a bool, a double, a string, or an <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
      <param name="node">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</param>
      <param name="expression">A <see cref="T:System.String" /> that contains an XPath expression.</param>
      <param name="resolver">A <see cref="T:System.Xml.IXmlNamespaceResolver" /> for the namespace prefixes in the XPath expression.</param>
    </member>
    <member name="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)">
      <summary>Selects an <see cref="T:System.Xml.Linq.XElement" /> using a XPath expression.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XElement" />, or null.</returns>
      <param name="node">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</param>
      <param name="expression">A <see cref="T:System.String" /> that contains an XPath expression.</param>
    </member>
    <member name="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Selects an <see cref="T:System.Xml.Linq.XElement" /> using a XPath expression, resolving namespace prefixes using the specified <see cref="T:System.Xml.IXmlNamespaceResolver" />.</summary>
      <returns>An <see cref="T:System.Xml.Linq.XElement" />, or null.</returns>
      <param name="node">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</param>
      <param name="expression">A <see cref="T:System.String" /> that contains an XPath expression.</param>
      <param name="resolver">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> for the namespace prefixes in the XPath expression.</param>
    </member>
    <member name="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)">
      <summary>Selects a collection of elements using an XPath expression.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the selected elements.</returns>
      <param name="node">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</param>
      <param name="expression">A <see cref="T:System.String" /> that contains an XPath expression.</param>
    </member>
    <member name="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Selects a collection of elements using an XPath expression, resolving namespace prefixes using the specified <see cref="T:System.Xml.IXmlNamespaceResolver" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the selected elements.</returns>
      <param name="node">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</param>
      <param name="expression">A <see cref="T:System.String" /> that contains an XPath expression.</param>
      <param name="resolver">A <see cref="T:System.Xml.IXmlNamespaceResolver" /> for the namespace prefixes in the XPath expression.</param>
    </member>
    <member name="T:System.Xml.XPath.IXPathNavigable">
      <summary>Provides an accessor to the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</summary>
    </member>
    <member name="M:System.Xml.XPath.IXPathNavigable.CreateNavigator">
      <summary>Returns a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object. </summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</returns>
    </member>
    <member name="T:System.Xml.XPath.XmlCaseOrder">
      <summary>Specifies the sort order for uppercase and lowercase letters.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.None">
      <summary>Ignore the case.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.UpperFirst">
      <summary>Uppercase letters are sorted before lowercase letters.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.LowerFirst">
      <summary>Lowercase letters are sorted before uppercase letters.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlDataType">
      <summary>Specifies the data type used to determine sort order.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Text">
      <summary>Values are sorted alphabetically.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Number">
      <summary>Values are sorted numerically.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlSortOrder">
      <summary>Specifies the sort order.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Ascending">
      <summary>Nodes are sorted in ascending order. For example, if the numbers 1,2,3, and 4 are sorted in ascending order, they appear as 1,2,3,4.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Descending">
      <summary>Nodes are sorted in descending order. For example, if the numbers 1,2,3, and 4 are sorted in descending order, they appear as, 4,3,2,1. </summary>
    </member>
    <member name="T:System.Xml.XPath.XPathException">
      <summary>Provides the exception thrown when an error occurs while processing an XPath expression. </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XPath.XPathException" /> class.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XPath.XPathException" /> class with the specified exception message.</summary>
      <param name="message">The description of the error condition.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XPath.XPathException" /> class using the specified exception message and <see cref="T:System.Exception" /> object.</summary>
      <param name="message">The description of the error condition. </param>
      <param name="innerException">The <see cref="T:System.Exception" /> that threw the <see cref="T:System.Xml.XPath.XPathException" />, if any. This value can be null. </param>
    </member>
    <member name="P:System.Xml.XPath.XPathException.Message">
      <summary>Gets the description of the error condition for this exception.</summary>
      <returns>The string description of the error condition for this exception.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathExpression">
      <summary>Provides a typed class that represents a compiled XPath expression.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)">
      <summary>When overridden in a derived class, sorts the nodes selected by the XPath expression according to the specified <see cref="T:System.Collections.IComparer" /> object.</summary>
      <param name="expr">An object representing the sort key. This can be the string value of the node or an <see cref="T:System.Xml.XPath.XPathExpression" /> object with a compiled XPath expression.</param>
      <param name="comparer">An <see cref="T:System.Collections.IComparer" /> object that provides the specific data type comparisons for comparing two objects for equivalence. </param>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)">
      <summary>When overridden in a derived class, sorts the nodes selected by the XPath expression according to the supplied parameters.</summary>
      <param name="expr">An object representing the sort key. This can be the string value of the node or an <see cref="T:System.Xml.XPath.XPathExpression" /> object with a compiled XPath expression. </param>
      <param name="order">An <see cref="T:System.Xml.XPath.XmlSortOrder" /> value indicating the sort order. </param>
      <param name="caseOrder">An <see cref="T:System.Xml.XPath.XmlCaseOrder" /> value indicating how to sort uppercase and lowercase letters.</param>
      <param name="lang">The language to use for comparison. Uses the <see cref="T:System.Globalization.CultureInfo" /> class that can be passed to the <see cref="Overload:System.String.Compare" /> method for the language types, for example, "us-en" for U.S. English. If an empty string is specified, the system environment is used to determine the <see cref="T:System.Globalization.CultureInfo" />. </param>
      <param name="dataType">An <see cref="T:System.Xml.XPath.XmlDataType" /> value indicating the sort order for the data type. </param>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Clone">
      <summary>When overridden in a derived class, returns a clone of this <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns>A new <see cref="T:System.Xml.XPath.XPathExpression" /> object.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String)">
      <summary>Compiles the XPath expression specified and returns an <see cref="T:System.Xml.XPath.XPathExpression" /> object representing the XPath expression.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathExpression" /> object.</returns>
      <param name="xpath">An XPath expression.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Compiles the specified XPath expression, with the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object specified for namespace resolution, and returns an <see cref="T:System.Xml.XPath.XPathExpression" /> object that represents the XPath expression.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathExpression" /> object.</returns>
      <param name="xpath">An XPath expression.</param>
      <param name="nsResolver">An object that implements the <see cref="T:System.Xml.IXmlNamespaceResolver" /> interface for namespace resolution.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.Expression">
      <summary>When overridden in a derived class, gets a string representation of the <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns>A string representation of the <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.ReturnType">
      <summary>When overridden in a derived class, gets the result type of the XPath expression.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathResultType" /> value representing the result type of the XPath expression.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)">
      <summary>When overridden in a derived class, specifies the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object to use for namespace resolution.</summary>
      <param name="nsResolver">An object that implements the <see cref="T:System.Xml.IXmlNamespaceResolver" /> interface to use for namespace resolution.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)">
      <summary>When overridden in a derived class, specifies the <see cref="T:System.Xml.XmlNamespaceManager" /> object to use for namespace resolution.</summary>
      <param name="nsManager">An <see cref="T:System.Xml.XmlNamespaceManager" /> object to use for namespace resolution. </param>
    </member>
    <member name="T:System.Xml.XPath.XPathItem">
      <summary>Represents an item in the XQuery 1.0 and XPath 2.0 Data Model.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</summary>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.IsNode">
      <summary>When overridden in a derived class, gets a value indicating whether the item represents an XPath node or an atomic value.</summary>
      <returns>true if the item represents an XPath node; false if the item represents an atomic value.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.Value">
      <summary>When overridden in a derived class, gets the string value of the item.</summary>
      <returns>The string value of the item.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNamespaceScope">
      <summary>Defines the namespace scope.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.All">
      <summary>Returns all namespaces defined in the scope of the current node. This includes the xmlns:xml namespace which is always declared implicitly. The order of the namespaces returned is not defined.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.ExcludeXml">
      <summary>Returns all namespaces defined in the scope of the current node, excluding the xmlns:xml namespace. The xmlns:xml namespace is always declared implicitly. The order of the namespaces returned is not defined.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.Local">
      <summary>Returns all namespaces that are defined locally at the current node.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathNavigator">
      <summary>Provides a cursor model for navigating and editing XML data.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild">
      <summary>Returns an <see cref="T:System.Xml.XmlWriter" /> object used to create one or more new child nodes at the end of the list of child nodes of the current node. </summary>
      <returns>An <see cref="T:System.Xml.XmlWriter" /> object used to create new child nodes at the end of the list of child nodes of the current node.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)">
      <summary>Creates a new child node at the end of the list of child nodes of the current node using the XML data string specified.</summary>
      <param name="newChild">The XML data string for the new child node.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)">
      <summary>Creates a new child node at the end of the list of child nodes of the current node using the XML contents of the <see cref="T:System.Xml.XmlReader" /> object specified.</summary>
      <param name="newChild">An <see cref="T:System.Xml.XmlReader" /> object positioned on the XML data for the new child node.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)">
      <summary>Creates a new child node at the end of the list of child nodes of the current node using the nodes in the <see cref="T:System.Xml.XPath.XPathNavigator" /> specified.</summary>
      <param name="newChild">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned on the node to add as the new child node.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)">
      <summary>Creates a new child element node at the end of the list of child nodes of the current node using the namespace prefix, local name and namespace URI specified with the value specified.</summary>
      <param name="prefix">The namespace prefix of the new child element node (if any).</param>
      <param name="localName">The local name of the new child element node (if any).</param>
      <param name="namespaceURI">The namespace URI of the new child element node (if any). <see cref="F:System.String.Empty" /> and null are equivalent.</param>
      <param name="value">The value of the new child element node. If <see cref="F:System.String.Empty" /> or null are passed, an empty element is created.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.BaseURI">
      <summary>When overridden in a derived class, gets the base URI for the current node.</summary>
      <returns>The location from which the node was loaded, or <see cref="F:System.String.Empty" /> if there is no value.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.CanEdit">
      <summary>Gets a value indicating whether the <see cref="T:System.Xml.XPath.XPathNavigator" /> can edit the underlying XML data.</summary>
      <returns>true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> can edit the underlying XML data; otherwise false.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Clone">
      <summary>When overridden in a derived class, creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> positioned at the same node as this <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>A new <see cref="T:System.Xml.XPath.XPathNavigator" /> positioned at the same node as this <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)">
      <summary>Compares the position of the current <see cref="T:System.Xml.XPath.XPathNavigator" /> with the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> specified.</summary>
      <returns>An <see cref="T:System.Xml.XmlNodeOrder" /> value representing the comparative position of the two <see cref="T:System.Xml.XPath.XPathNavigator" /> objects.</returns>
      <param name="nav">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to compare against.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Compile(System.String)">
      <summary>Compiles a string representing an XPath expression and returns an <see cref="T:System.Xml.XPath.XPathExpression" /> object.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathExpression" /> object representing the XPath expression.</returns>
      <param name="xpath">A string representing an XPath expression.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)">
      <summary>Creates an attribute node on the current element node using the namespace prefix, local name and namespace URI specified with the value specified.</summary>
      <param name="prefix">The namespace prefix of the new attribute node (if any).</param>
      <param name="localName">The local name of the new attribute node which cannot <see cref="F:System.String.Empty" /> or null.</param>
      <param name="namespaceURI">The namespace URI for the new attribute node (if any).</param>
      <param name="value">The value of the new attribute node. If <see cref="F:System.String.Empty" /> or null are passed, an empty attribute node is created.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttributes">
      <summary>Returns an <see cref="T:System.Xml.XmlWriter" /> object used to create new attributes on the current element.</summary>
      <returns>An <see cref="T:System.Xml.XmlWriter" /> object used to create new attributes on the current element.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateNavigator">
      <summary>Returns a copy of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNavigator" /> copy of this <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)">
      <summary>Deletes a range of sibling nodes from the current node to the node specified.</summary>
      <param name="lastSiblingToDelete">An <see cref="T:System.Xml.XPath.XPathNavigator" /> positioned on the last sibling node in the range to delete.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteSelf">
      <summary>Deletes the current node and its child nodes.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String)">
      <summary>Evaluates the specified XPath expression and returns the typed result.</summary>
      <returns>The result of the expression (Boolean, number, string, or node set). This maps to <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" />, or <see cref="T:System.Xml.XPath.XPathNodeIterator" /> objects respectively.</returns>
      <param name="xpath">A string representing an XPath expression that can be evaluated.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Evaluates the specified XPath expression and returns the typed result, using the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object specified to resolve namespace prefixes in the XPath expression.</summary>
      <returns>The result of the expression (Boolean, number, string, or node set). This maps to <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" />, or <see cref="T:System.Xml.XPath.XPathNodeIterator" /> objects respectively.</returns>
      <param name="xpath">A string representing an XPath expression that can be evaluated.</param>
      <param name="resolver">The <see cref="T:System.Xml.IXmlNamespaceResolver" /> object used to resolve namespace prefixes in the XPath expression.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)">
      <summary>Evaluates the <see cref="T:System.Xml.XPath.XPathExpression" /> and returns the typed result.</summary>
      <returns>The result of the expression (Boolean, number, string, or node set). This maps to <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" />, or <see cref="T:System.Xml.XPath.XPathNodeIterator" /> objects respectively.</returns>
      <param name="expr">An <see cref="T:System.Xml.XPath.XPathExpression" /> that can be evaluated.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)">
      <summary>Uses the supplied context to evaluate the <see cref="T:System.Xml.XPath.XPathExpression" />, and returns the typed result.</summary>
      <returns>The result of the expression (Boolean, number, string, or node set). This maps to <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" />, or <see cref="T:System.Xml.XPath.XPathNodeIterator" /> objects respectively.</returns>
      <param name="expr">An <see cref="T:System.Xml.XPath.XPathExpression" /> that can be evaluated.</param>
      <param name="context">An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> that points to the selected node set that the evaluation is to be performed on.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)">
      <summary>Gets the value of the attribute with the specified local name and namespace URI.</summary>
      <returns>A <see cref="T:System.String" /> that contains the value of the specified attribute; <see cref="F:System.String.Empty" /> if a matching attribute is not found, or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is not positioned on an element node.</returns>
      <param name="localName">The local name of the attribute.</param>
      <param name="namespaceURI">The namespace URI of the attribute.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)">
      <summary>Returns the value of the namespace node corresponding to the specified local name.</summary>
      <returns>A <see cref="T:System.String" /> that contains the value of the namespace node; <see cref="F:System.String.Empty" /> if a matching namespace node is not found, or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is not positioned on an element node.</returns>
      <param name="name">The local name of the namespace node.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Returns the in-scope namespaces of the current node.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> collection of namespace names keyed by prefix.</returns>
      <param name="scope">An <see cref="T:System.Xml.XmlNamespaceScope" /> value specifying the namespaces to return.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasAttributes">
      <summary>Gets a value indicating whether the current node has any attributes.</summary>
      <returns>Returns true if the current node has attributes; returns false if the current node has no attributes, or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is not positioned on an element node.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasChildren">
      <summary>Gets a value indicating whether the current node has any child nodes.</summary>
      <returns>Returns true if the current node has any child nodes; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.InnerXml">
      <summary>Gets or sets the markup representing the child nodes of the current node.</summary>
      <returns>A <see cref="T:System.String" /> that contains the markup of the child nodes of the current node.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter">
      <summary>Returns an <see cref="T:System.Xml.XmlWriter" /> object used to create a new sibling node after the currently selected node.</summary>
      <returns>An <see cref="T:System.Xml.XmlWriter" /> object used to create a new sibling node after the currently selected node.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)">
      <summary>Creates a new sibling node after the currently selected node using the XML string specified.</summary>
      <param name="newSibling">The XML data string for the new sibling node.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)">
      <summary>Creates a new sibling node after the currently selected node using the XML contents of the <see cref="T:System.Xml.XmlReader" /> object specified.</summary>
      <param name="newSibling">An <see cref="T:System.Xml.XmlReader" /> object positioned on the XML data for the new sibling node.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)">
      <summary>Creates a new sibling node after the currently selected node using the nodes in the <see cref="T:System.Xml.XPath.XPathNavigator" /> object specified.</summary>
      <param name="newSibling">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned on the node to add as the new sibling node.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore">
      <summary>Returns an <see cref="T:System.Xml.XmlWriter" /> object used to create a new sibling node before the currently selected node.</summary>
      <returns>An <see cref="T:System.Xml.XmlWriter" /> object used to create a new sibling node before the currently selected node.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)">
      <summary>Creates a new sibling node before the currently selected node using the XML string specified.</summary>
      <param name="newSibling">The XML data string for the new sibling node.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)">
      <summary>Creates a new sibling node before the currently selected node using the XML contents of the <see cref="T:System.Xml.XmlReader" /> object specified.</summary>
      <param name="newSibling">An <see cref="T:System.Xml.XmlReader" /> object positioned on the XML data for the new sibling node.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)">
      <summary>Creates a new sibling node before the currently selected node using the nodes in the <see cref="T:System.Xml.XPath.XPathNavigator" /> specified.</summary>
      <param name="newSibling">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned on the node to add as the new sibling node.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)">
      <summary>Creates a new sibling element after the current node using the namespace prefix, local name and namespace URI specified, with the value specified.</summary>
      <param name="prefix">The namespace prefix of the new child element (if any).</param>
      <param name="localName">The local name of the new child element (if any).</param>
      <param name="namespaceURI">The namespace URI of the new child element (if any). <see cref="F:System.String.Empty" /> and null are equivalent.</param>
      <param name="value">The value of the new child element. If <see cref="F:System.String.Empty" /> or null are passed, an empty element is created.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)">
      <summary>Creates a new sibling element before the current node using the namespace prefix, local name, and namespace URI specified, with the value specified.</summary>
      <param name="prefix">The namespace prefix of the new child element (if any).</param>
      <param name="localName">The local name of the new child element (if any).</param>
      <param name="namespaceURI">The namespace URI of the new child element (if any). <see cref="F:System.String.Empty" /> and null are equivalent.</param>
      <param name="value">The value of the new child element. If <see cref="F:System.String.Empty" /> or null are passed, an empty element is created.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)">
      <summary>Determines whether the specified <see cref="T:System.Xml.XPath.XPathNavigator" /> is a descendant of the current <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Returns true if the specified <see cref="T:System.Xml.XPath.XPathNavigator" /> is a descendant of the current <see cref="T:System.Xml.XPath.XPathNavigator" />; otherwise, false.</returns>
      <param name="nav">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to compare to this <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsEmptyElement">
      <summary>When overridden in a derived class, gets a value indicating whether the current node is an empty element without an end element tag.</summary>
      <returns>Returns true if the current node is an empty element; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsNode">
      <summary>Gets a value indicating if the current node represents an XPath node.</summary>
      <returns>Always returns true.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)">
      <summary>When overridden in a derived class, determines whether the current <see cref="T:System.Xml.XPath.XPathNavigator" /> is at the same position as the specified <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Returns true if the two <see cref="T:System.Xml.XPath.XPathNavigator" /> objects have the same position; otherwise, false.</returns>
      <param name="other">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to compare to this <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.LocalName">
      <summary>When overridden in a derived class, gets the <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> of the current node without any namespace prefix.</summary>
      <returns>A <see cref="T:System.String" /> that contains the local name of the current node, or <see cref="F:System.String.Empty" /> if the current node does not have a name (for example, text or comment nodes).</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)">
      <summary>Gets the namespace URI for the specified prefix.</summary>
      <returns>A <see cref="T:System.String" /> that contains the namespace URI assigned to the namespace prefix specified; null if no namespace URI is assigned to the prefix specified. The <see cref="T:System.String" /> returned is atomized.</returns>
      <param name="prefix">The prefix whose namespace URI you want to resolve. To match the default namespace, pass <see cref="F:System.String.Empty" />.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)">
      <summary>Gets the prefix declared for the specified namespace URI.</summary>
      <returns>A <see cref="T:System.String" /> that contains the namespace prefix assigned to the namespace URI specified; otherwise, <see cref="F:System.String.Empty" /> if no prefix is assigned to the namespace URI specified. The <see cref="T:System.String" /> returned is atomized.</returns>
      <param name="namespaceURI">The namespace URI to resolve for the prefix.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.String)">
      <summary>Determines whether the current node matches the specified XPath expression.</summary>
      <returns>Returns true if the current node matches the specified XPath expression; otherwise, false.</returns>
      <param name="xpath">The XPath expression.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)">
      <summary>Determines whether the current node matches the specified <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns>Returns true if the current node matches the <see cref="T:System.Xml.XPath.XPathExpression" />; otherwise, false.</returns>
      <param name="expr">An <see cref="T:System.Xml.XPath.XPathExpression" /> object containing the compiled XPath expression.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)">
      <summary>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the same position as the specified <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the same position as the specified <see cref="T:System.Xml.XPath.XPathNavigator" />; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</returns>
      <param name="other">The <see cref="T:System.Xml.XPath.XPathNavigator" /> positioned on the node that you want to move to. </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)">
      <summary>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the attribute with the matching local name and namespace URI.</summary>
      <returns>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the attribute; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</returns>
      <param name="localName">The local name of the attribute.</param>
      <param name="namespaceURI">The namespace URI of the attribute; null for an empty namespace.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)">
      <summary>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the child node with the local name and namespace URI specified.</summary>
      <returns>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the child node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</returns>
      <param name="localName">The local name of the child node to move to.</param>
      <param name="namespaceURI">The namespace URI of the child node to move to.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)">
      <summary>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the child node of the <see cref="T:System.Xml.XPath.XPathNodeType" /> specified.</summary>
      <returns>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the child node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</returns>
      <param name="type">The <see cref="T:System.Xml.XPath.XPathNodeType" /> of the child node to move to.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirst">
      <summary>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the first sibling node of the current node.</summary>
      <returns>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the first sibling node of the current node; false if there is no first sibling, or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is currently positioned on an attribute node. If the <see cref="T:System.Xml.XPath.XPathNavigator" /> is already positioned on the first sibling, <see cref="T:System.Xml.XPath.XPathNavigator" /> will return true and will not move its position.If <see cref="T:System.Xml.XPath.XPathNavigator.MoveToFirst" /> returns false because there is no first sibling, or if <see cref="T:System.Xml.XPath.XPathNavigator" /> is currently positioned on an attribute, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute">
      <summary>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the first attribute of the current node.</summary>
      <returns>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the first attribute of the current node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild">
      <summary>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the first child node of the current node.</summary>
      <returns>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the first child node of the current node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace">
      <summary>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to first namespace node of the current node.</summary>
      <returns>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the first namespace node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the first namespace node that matches the <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> specified.</summary>
      <returns>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the first namespace node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</returns>
      <param name="namespaceScope">An <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> value describing the namespace scope. </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)">
      <summary>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the element with the local name and namespace URI specified in document order.</summary>
      <returns>true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> moved successfully; otherwise false.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceURI">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)">
      <summary>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the element with the local name and namespace URI specified, to the boundary specified, in document order.</summary>
      <returns>true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> moved successfully; otherwise false.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceURI">The namespace URI of the element.</param>
      <param name="end">The <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned on the element boundary which the current <see cref="T:System.Xml.XPath.XPathNavigator" /> will not move past while searching for the following element.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)">
      <summary>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the following element of the <see cref="T:System.Xml.XPath.XPathNodeType" /> specified in document order.</summary>
      <returns>true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> moved successfully; otherwise false.</returns>
      <param name="type">The <see cref="T:System.Xml.XPath.XPathNodeType" /> of the element. The <see cref="T:System.Xml.XPath.XPathNodeType" /> cannot be <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> or <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)">
      <summary>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the following element of the <see cref="T:System.Xml.XPath.XPathNodeType" /> specified, to the boundary specified, in document order.</summary>
      <returns>true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> moved successfully; otherwise false.</returns>
      <param name="type">The <see cref="T:System.Xml.XPath.XPathNodeType" /> of the element. The <see cref="T:System.Xml.XPath.XPathNodeType" /> cannot be <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> or <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
      <param name="end">The <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned on the element boundary which the current <see cref="T:System.Xml.XPath.XPathNavigator" /> will not move past while searching for the following element.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)">
      <summary>When overridden in a derived class, moves to the node that has an attribute of type ID whose value matches the specified <see cref="T:System.String" />.</summary>
      <returns>true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving; otherwise, false. If false, the position of the navigator is unchanged.</returns>
      <param name="id">A <see cref="T:System.String" /> representing the ID value of the node to which you want to move.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)">
      <summary>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the namespace node with the specified namespace prefix.</summary>
      <returns>true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the specified namespace; false if a matching namespace node was not found, or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is not positioned on an element node. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</returns>
      <param name="name">The namespace prefix of the namespace node.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext">
      <summary>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the next sibling node of the current node.</summary>
      <returns>true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the next sibling node; otherwise, false if there are no more siblings or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is currently positioned on an attribute node. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)">
      <summary>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the next sibling node with the local name and namespace URI specified.</summary>
      <returns>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the next sibling node; false if there are no more siblings, or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is currently positioned on an attribute node. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</returns>
      <param name="localName">The local name of the next sibling node to move to.</param>
      <param name="namespaceURI">The namespace URI of the next sibling node to move to.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)">
      <summary>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the next sibling node of the current node that matches the <see cref="T:System.Xml.XPath.XPathNodeType" /> specified.</summary>
      <returns>true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the next sibling node; otherwise, false if there are no more siblings or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is currently positioned on an attribute node. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</returns>
      <param name="type">The <see cref="T:System.Xml.XPath.XPathNodeType" /> of the sibling node to move to.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute">
      <summary>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the next attribute.</summary>
      <returns>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the next attribute; false if there are no more attributes. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace">
      <summary>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the next namespace node.</summary>
      <returns>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the next namespace node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the next namespace node matching the <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> specified.</summary>
      <returns>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the next namespace node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</returns>
      <param name="namespaceScope">An <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> value describing the namespace scope. </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToParent">
      <summary>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the parent node of the current node.</summary>
      <returns>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the parent node of the current node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToPrevious">
      <summary>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the previous sibling node of the current node.</summary>
      <returns>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the previous sibling node; otherwise, false if there is no previous sibling node or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is currently positioned on an attribute node. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToRoot">
      <summary>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the root node that the current node belongs to.</summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Name">
      <summary>When overridden in a derived class, gets the qualified name of the current node.</summary>
      <returns>A <see cref="T:System.String" /> that contains the qualified <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> of the current node, or <see cref="F:System.String.Empty" /> if the current node does not have a name (for example, text or comment nodes).</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NamespaceURI">
      <summary>When overridden in a derived class, gets the namespace URI of the current node.</summary>
      <returns>A <see cref="T:System.String" /> that contains the namespace URI of the current node, or <see cref="F:System.String.Empty" /> if the current node has no namespace URI.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NameTable">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Xml.XmlNameTable" /> of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>An <see cref="T:System.Xml.XmlNameTable" /> object enabling you to get the atomized version of a <see cref="T:System.String" /> within the XML document.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NavigatorComparer">
      <summary>Gets an <see cref="T:System.Collections.IEqualityComparer" /> used for equality comparison of <see cref="T:System.Xml.XPath.XPathNavigator" /> objects.</summary>
      <returns>An <see cref="T:System.Collections.IEqualityComparer" /> used for equality comparison of <see cref="T:System.Xml.XPath.XPathNavigator" /> objects.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NodeType">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Xml.XPath.XPathNodeType" /> of the current node.</summary>
      <returns>One of the <see cref="T:System.Xml.XPath.XPathNodeType" /> values representing the current node.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.OuterXml">
      <summary>Gets or sets the markup representing the opening and closing tags of the current node and its child nodes.</summary>
      <returns>A <see cref="T:System.String" /> that contains the markup representing the opening and closing tags of the current node and its child nodes.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Prefix">
      <summary>When overridden in a derived class, gets the namespace prefix associated with the current node.</summary>
      <returns>A <see cref="T:System.String" /> that contains the namespace prefix associated with the current node.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild">
      <summary>Returns an <see cref="T:System.Xml.XmlWriter" /> object used to create a new child node at the beginning of the list of child nodes of the current node.</summary>
      <returns>An <see cref="T:System.Xml.XmlWriter" /> object used to create a new child node at the beginning of the list of child nodes of the current node.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)">
      <summary>Creates a new child node at the beginning of the list of child nodes of the current node using the XML string specified.</summary>
      <param name="newChild">The XML data string for the new child node.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)">
      <summary>Creates a new child node at the beginning of the list of child nodes of the current node using the XML contents of the <see cref="T:System.Xml.XmlReader" /> object specified.</summary>
      <param name="newChild">An <see cref="T:System.Xml.XmlReader" /> object positioned on the XML data for the new child node.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)">
      <summary>Creates a new child node at the beginning of the list of child nodes of the current node using the nodes in the <see cref="T:System.Xml.XPath.XPathNavigator" /> object specified.</summary>
      <param name="newChild">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned on the node to add as the new child node.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)">
      <summary>Creates a new child element at the beginning of the list of child nodes of the current node using the namespace prefix, local name, and namespace URI specified with the value specified.</summary>
      <param name="prefix">The namespace prefix of the new child element (if any).</param>
      <param name="localName">The local name of the new child element (if any).</param>
      <param name="namespaceURI">The namespace URI of the new child element (if any). <see cref="F:System.String.Empty" /> and null are equivalent.</param>
      <param name="value">The value of the new child element. If <see cref="F:System.String.Empty" /> or null are passed, an empty element is created.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReadSubtree">
      <summary>Returns an <see cref="T:System.Xml.XmlReader" /> object that contains the current node and its child nodes.</summary>
      <returns>An <see cref="T:System.Xml.XmlReader" /> object that contains the current node and its child nodes.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)">
      <summary>Replaces a range of sibling nodes from the current node to the node specified.</summary>
      <returns>An <see cref="T:System.Xml.XmlWriter" /> object used to specify the replacement range.</returns>
      <param name="lastSiblingToReplace">An <see cref="T:System.Xml.XPath.XPathNavigator" /> positioned on the last sibling node in the range to replace.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)">
      <summary>Replaces the current node with the content of the string specified.</summary>
      <param name="newNode">The XML data string for the new node.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)">
      <summary>Replaces the current node with the contents of the <see cref="T:System.Xml.XmlReader" /> object specified.</summary>
      <param name="newNode">An <see cref="T:System.Xml.XmlReader" /> object positioned on the XML data for the new node.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)">
      <summary>Replaces the current node with the contents of the <see cref="T:System.Xml.XPath.XPathNavigator" /> object specified.</summary>
      <param name="newNode">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned on the new node.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String)">
      <summary>Selects a node set, using the specified XPath expression.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> pointing to the selected node set.</returns>
      <param name="xpath">A <see cref="T:System.String" /> representing an XPath expression.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Selects a node set using the specified XPath expression with the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object specified to resolve namespace prefixes.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> that points to the selected node set.</returns>
      <param name="xpath">A <see cref="T:System.String" /> representing an XPath expression.</param>
      <param name="resolver">The <see cref="T:System.Xml.IXmlNamespaceResolver" /> object used to resolve namespace prefixes.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)">
      <summary>Selects a node set using the specified <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> that points to the selected node set.</returns>
      <param name="expr">An <see cref="T:System.Xml.XPath.XPathExpression" /> object containing the compiled XPath query.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)">
      <summary>Selects all the ancestor nodes of the current node that have the specified local name and namespace URI.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> that contains the selected nodes. The returned nodes are in reverse document order.</returns>
      <param name="name">The local name of the ancestor nodes.</param>
      <param name="namespaceURI">The namespace URI of the ancestor nodes.</param>
      <param name="matchSelf">To include the context node in the selection, true; otherwise, false. </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary>Selects all the ancestor nodes of the current node that have a matching <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> that contains the selected nodes. The returned nodes are in reverse document order.</returns>
      <param name="type">The <see cref="T:System.Xml.XPath.XPathNodeType" /> of the ancestor nodes.</param>
      <param name="matchSelf">To include the context node in the selection, true; otherwise, false.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)">
      <summary>Selects all the child nodes of the current node that have the local name and namespace URI specified.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> that contains the selected nodes.</returns>
      <param name="name">The local name of the child nodes. </param>
      <param name="namespaceURI">The namespace URI of the child nodes. </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)">
      <summary>Selects all the child nodes of the current node that have the matching <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> that contains the selected nodes.</returns>
      <param name="type">The <see cref="T:System.Xml.XPath.XPathNodeType" /> of the child nodes.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)">
      <summary>Selects all the descendant nodes of the current node with the local name and namespace URI specified.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> that contains the selected nodes.</returns>
      <param name="name">The local name of the descendant nodes. </param>
      <param name="namespaceURI">The namespace URI of the descendant nodes. </param>
      <param name="matchSelf">true to include the context node in the selection; otherwise, false.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary>Selects all the descendant nodes of the current node that have a matching <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> that contains the selected nodes.</returns>
      <param name="type">The <see cref="T:System.Xml.XPath.XPathNodeType" /> of the descendant nodes.</param>
      <param name="matchSelf">true to include the context node in the selection; otherwise, false.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)">
      <summary>Selects a single node in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified XPath query.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the first matching node for the XPath query specified; otherwise, null if there are no query results.</returns>
      <param name="xpath">A <see cref="T:System.String" /> representing an XPath expression.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Selects a single node in the <see cref="T:System.Xml.XPath.XPathNavigator" /> object using the specified XPath query with the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object specified to resolve namespace prefixes.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the first matching node for the XPath query specified; otherwise null if there are no query results.</returns>
      <param name="xpath">A <see cref="T:System.String" /> representing an XPath expression.</param>
      <param name="resolver">The <see cref="T:System.Xml.IXmlNamespaceResolver" /> object used to resolve namespace prefixes in the XPath query.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)">
      <summary>Selects a single node in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <see cref="T:System.Xml.XPath.XPathExpression" /> object.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the first matching node for the XPath query specified; otherwise null if there are no query results.</returns>
      <param name="expression">An <see cref="T:System.Xml.XPath.XPathExpression" /> object containing the compiled XPath query.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetValue(System.String)">
      <summary>Sets the value of the current node.</summary>
      <param name="value">The new value of the node.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ToString">
      <summary>Gets the text value of the current node.</summary>
      <returns>A string that contains the text value of the current node.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.UnderlyingObject">
      <summary>Used by <see cref="T:System.Xml.XPath.XPathNavigator" /> implementations which provide a "virtualized" XML view over a store, to provide access to underlying objects.</summary>
      <returns>The default is null.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)">
      <summary>Streams the current node and its child nodes to the <see cref="T:System.Xml.XmlWriter" /> object specified.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> object to stream to.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlLang">
      <summary>Gets the xml:lang scope for the current node.</summary>
      <returns>A <see cref="T:System.String" /> that contains the value of the xml:lang scope, or <see cref="F:System.String.Empty" /> if the current node has no xml:lang scope value to return.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeIterator">
      <summary>Provides an iterator over a selected set of nodes.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XPath.XPathNodeIterator" /> class.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.Clone">
      <summary>When overridden in a derived class, returns a clone of this <see cref="T:System.Xml.XPath.XPathNodeIterator" /> object.</summary>
      <returns>A new <see cref="T:System.Xml.XPath.XPathNodeIterator" /> object clone of this <see cref="T:System.Xml.XPath.XPathNodeIterator" /> object.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Count">
      <summary>Gets the index of the last node in the selected set of nodes.</summary>
      <returns>The int index of the last node in the selected set of nodes, or 0 if there are no selected nodes.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Current">
      <summary>When overridden in a derived class, returns the <see cref="T:System.Xml.XPath.XPathNavigator" /> object for this <see cref="T:System.Xml.XPath.XPathNodeIterator" />, positioned on the current context node.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned on the context node from which the node set was selected. The <see cref="M:System.Xml.XPath.XPathNodeIterator.MoveNext" /> method must be called to move the <see cref="T:System.Xml.XPath.XPathNodeIterator" /> to the first node in the selected set.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
      <summary>When overridden in a derived class, gets the index of the current position in the selected set of nodes.</summary>
      <returns>The int index of the current position.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> object to iterate through the selected node set.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object to iterate through the selected node set.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
      <summary>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> object returned by the <see cref="P:System.Xml.XPath.XPathNodeIterator.Current" /> property to the next node in the selected node set.</summary>
      <returns>true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> object moved to the next node; false if there are no more selected nodes.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeType">
      <summary>Defines the XPath node types that can be returned from the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Root">
      <summary>The root node of the XML document or node tree.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Element">
      <summary>An element, such as &lt;element&gt;.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Attribute">
      <summary>An attribute, such as id='123'.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Namespace">
      <summary>A namespace, such as xmlns="namespace".</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Text">
      <summary>The text content of a node. Equivalent to the Document Object Model (DOM) Text and CDATA node types. Contains at least one character.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.SignificantWhitespace">
      <summary>A node with white space characters and xml:space set to preserve.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Whitespace">
      <summary>A node with only white space characters and no significant white space. White space characters are #x20, #x9, #xD, or #xA.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction">
      <summary>A processing instruction, such as &lt;?pi test?&gt;. This does not include XML declarations, which are not visible to the <see cref="T:System.Xml.XPath.XPathNavigator" /> class. </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Comment">
      <summary>A comment, such as &lt;!-- my comment --&gt;</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.All">
      <summary>Any of the <see cref="T:System.Xml.XPath.XPathNodeType" /> node types.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathResultType">
      <summary>Specifies the return type of the XPath expression.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Number">
      <summary>A numeric value.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.String">
      <summary>A <see cref="T:System.String" /> value.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Boolean">
      <summary>A <see cref="T:System.Boolean" />true or false value.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.NodeSet">
      <summary>A node collection.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Navigator">
      <summary>A tree fragment.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Any">
      <summary>Any of the XPath node types.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Error">
      <summary>The expression does not evaluate to the correct XPath type.</summary>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextFunction">
      <summary>Provides an interface to a given function defined in the Extensible Stylesheet Language for Transformations (XSLT) style sheet during runtime execution.</summary>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ArgTypes">
      <summary>Gets the supplied XML Path Language (XPath) types for the function's argument list. This information can be used to discover the signature of the function which allows you to differentiate between overloaded functions.</summary>
      <returns>An array of <see cref="T:System.Xml.XPath.XPathResultType" /> representing the types for the function's argument list.</returns>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
      <summary>Provides the method to invoke the function with the given arguments in the given context.</summary>
      <returns>An <see cref="T:System.Object" /> representing the return value of the function.</returns>
      <param name="xsltContext">The XSLT context for the function call. </param>
      <param name="args">The arguments of the function call. Each argument is an element in the array. </param>
      <param name="docContext">The context node for the function call. </param>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Maxargs">
      <summary>Gets the maximum number of arguments for the function. This enables the user to differentiate between overloaded functions.</summary>
      <returns>The maximum number of arguments for the function.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Minargs">
      <summary>Gets the minimum number of arguments for the function. This enables the user to differentiate between overloaded functions.</summary>
      <returns>The minimum number of arguments for the function.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ReturnType">
      <summary>Gets the <see cref="T:System.Xml.XPath.XPathResultType" /> representing the XPath type returned by the function.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathResultType" /> representing the XPath type returned by the function </returns>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextVariable">
      <summary>Provides an interface to a given variable that is defined in the style sheet during runtime execution.</summary>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextVariable.Evaluate(System.Xml.Xsl.XsltContext)">
      <summary>Evaluates the variable at runtime and returns an object that represents the value of the variable.</summary>
      <returns>An <see cref="T:System.Object" /> representing the value of the variable. Possible return types include number, string, Boolean, document fragment, or node set.</returns>
      <param name="xsltContext">An <see cref="T:System.Xml.Xsl.XsltContext" /> representing the execution context of the variable. </param>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsLocal">
      <summary>Gets a value indicating whether the variable is local.</summary>
      <returns>true if the variable is a local variable in the current context; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsParam">
      <summary>Gets a value indicating whether the variable is an Extensible Stylesheet Language Transformations (XSLT) parameter. This can be a parameter to a style sheet or a template.</summary>
      <returns>true if the variable is an XSLT parameter; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.VariableType">
      <summary>Gets the <see cref="T:System.Xml.XPath.XPathResultType" /> representing the XML Path Language (XPath) type of the variable.</summary>
      <returns>The <see cref="T:System.Xml.XPath.XPathResultType" /> representing the XPath type of the variable.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltContext">
      <summary>Encapsulates the current execution context of the Extensible Stylesheet Language for Transformations (XSLT) processor allowing XML Path Language (XPath) to resolve functions, parameters, and namespaces within XPath expressions.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Xsl.XsltContext" /> class.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor(System.Xml.NameTable)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Xsl.XsltContext" /> class with the specified <see cref="T:System.Xml.NameTable" />.</summary>
      <param name="table">The <see cref="T:System.Xml.NameTable" /> to use. </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.CompareDocument(System.String,System.String)">
      <summary>When overridden in a derived class, compares the base Uniform Resource Identifiers (URIs) of two documents based upon the order the documents were loaded by the XSLT processor (that is, the <see cref="T:System.Xml.Xsl.XslTransform" /> class).</summary>
      <returns>An integer value describing the relative order of the two base URIs: -1 if <paramref name="baseUri" /> occurs before <paramref name="nextbaseUri" />; 0 if the two base URIs are identical; and 1 if <paramref name="baseUri" /> occurs after <paramref name="nextbaseUri" />.</returns>
      <param name="baseUri">The base URI of the first document to compare. </param>
      <param name="nextbaseUri">The base URI of the second document to compare. </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
      <summary>When overridden in a derived class, evaluates whether to preserve white space nodes or strip them for the given context.</summary>
      <returns>Returns true if the white space is to be preserved or false if the white space is to be stripped.</returns>
      <param name="node">The white space node that is to be preserved or stripped in the current context. </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
      <summary>When overridden in a derived class, resolves a function reference and returns an <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> representing the function. The <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> is used at execution time to get the return value of the function.</summary>
      <returns>An <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> representing the function.</returns>
      <param name="prefix">The prefix of the function as it appears in the XPath expression. </param>
      <param name="name">The name of the function. </param>
      <param name="ArgTypes">An array of argument types for the function being resolved. This allows you to select between methods with the same name (for example, overloaded methods). </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveVariable(System.String,System.String)">
      <summary>When overridden in a derived class, resolves a variable reference and returns an <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> representing the variable.</summary>
      <returns>An <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> representing the variable at runtime.</returns>
      <param name="prefix">The prefix of the variable as it appears in the XPath expression. </param>
      <param name="name">The name of the variable. </param>
    </member>
    <member name="P:System.Xml.Xsl.XsltContext.Whitespace">
      <summary>When overridden in a derived class, gets a value indicating whether to include white space nodes in the output.</summary>
      <returns>true to check white space nodes in the source document for inclusion in the output; false to not evaluate white space nodes. The default is true.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\ReferenceAssemblies\System.Net.Xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net</name>
  </assembly>
  <members>
    <member name="T:System.Net.Cookie">
      <summary>Provides an object for use with HTTP requests to persist state information for a Silverlight-based application.</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Cookie" /> class. </summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Cookie" /> class with the specified name and value.</summary>
      <param name="name">The name of the <see cref="T:System.Net.Cookie" />. The <paramref name="name" /> parameter cannot contain the following characters: equal sign (=), semicolon (;), comma (,), newline (\n), return (\r), tab (\t), and space character. The dollar sign character ($) cannot be the first character.</param>
      <param name="value">The value for the <see cref="T:System.Net.Cookie" />. The <paramref name="value" /> parameter cannot contain a semicolon (;) or a comma (,) unless they are contained in escaped double quotes.</param>
      <exception cref="T:System.Net.CookieException">
        <paramref name="name" /> is null or an empty string (""). -or-<paramref name="name" /> contains an unauthorized character. Using one of the following characters will cause an exception: equal sign (=)semicolon (;) comma (,)newline (\n)return (\r) tab (\t) space character dollar sign ($) as the first character-or-<paramref name="value" /> is null or contains a semicolon (;) or a comma (,) that is not contained in escaped double quotes.</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Cookie" /> class with the specified name, value and path.</summary>
      <param name="name">The name of the <see cref="T:System.Net.Cookie" />. The <paramref name="name" /> parameter cannot contain the following characters: equal sign (=), semicolon (;), comma (,), newline (\n), return (\r), tab (\t), and space character. The dollar sign character ($) cannot be the first character.</param>
      <param name="value">The value for the <see cref="T:System.Net.Cookie" />. The <paramref name="value" /> parameter cannot contain a semicolon (;) or a comma (,) unless they are contained in escaped double quotes.</param>
      <param name="path">The path portion of a URI to which this cookie applies.</param>
      <exception cref="T:System.Net.CookieException">
        <paramref name="name" /> is null or an empty string (""). -or-<paramref name="name" /> contains an unauthorized character. Using one of the following characters will cause an exception: equal sign (=)semicolon (;) comma (,)newline (\n)return (\r) tab (\t) space character dollar sign ($) as the first character-or-<paramref name="value" /> is null or contains a semicolon (;) or a comma (,) that is not contained in escaped double quotes.</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Cookie" /> class with the specified name, value, path and domain.</summary>
      <param name="name">The name of the <see cref="T:System.Net.Cookie" />. The <paramref name="name" /> parameter cannot contain the following characters: equal sign (=), semicolon (;), comma (,), newline (\n), return (\r), tab (\t), and space character. The dollar sign character ($) cannot be the first character.</param>
      <param name="value">The value for the <see cref="T:System.Net.Cookie" />. The <paramref name="value" /> parameter cannot contain a semicolon (;) or a comma (,) unless they are contained in escaped double quotes.</param>
      <param name="path">The path portion of a URI to which this cookie applies.</param>
      <param name="domain">The domain portion of a URI to which this cookie applies.</param>
      <exception cref="T:System.Net.CookieException">
        <paramref name="name" /> is null or an empty string (""). -or-<paramref name="name" /> contains an unauthorized character. Using one of the following characters will cause an exception: equal sign (=)semicolon (;) comma (,)newline (\n)return (\r) tab (\t) space character dollar sign ($) as the first character-or-<paramref name="value" /> is null or contains a semicolon (;) or comma (,) that is not contained in escaped double quotes.</exception>
    </member>
    <member name="P:System.Net.Cookie.Comment">
      <summary>Gets or sets an optional comment that provides the intended use of the cookie. </summary>
      <returns>The intended use of the cookie.</returns>
    </member>
    <member name="P:System.Net.Cookie.CommentUri">
      <summary>Gets or sets a Uniform Resource Identifier (URI) comment that the server provides for this <see cref="T:System.Net.Cookie" />.</summary>
      <returns>The URI comment that the server provides for this <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Discard">
      <summary>Gets or sets a values that indicates whether the client is to discard the <see cref="T:System.Net.Cookie" /> at the end of the current session.</summary>
      <returns>true if the client should discard the <see cref="T:System.Net.Cookie" /> at the end of the session; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Net.Cookie.Domain">
      <summary>Gets or sets the domain of a Uniform Resource Identifier (URI) for which the cookie is valid.</summary>
      <returns>The domain of a URI for which the cookie is valid. The default is an empty string ("").</returns>
    </member>
    <member name="M:System.Net.Cookie.Equals(System.Object)">
      <summary>Determines if two <see cref="T:System.Net.Cookie" /> objects are equal.</summary>
      <returns>true if the cookie objects are equal; otherwise, false.</returns>
      <param name="comparand">The <see cref="T:System.Net.Cookie" /> to compare to this <see cref="T:System.Net.Cookie" /> for equality.</param>
    </member>
    <member name="P:System.Net.Cookie.Expired">
      <summary>Gets or sets a values that indicates whether this <see cref="T:System.Net.Cookie" /> is no longer valid.</summary>
      <returns>true if the cookie is no longer valid; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Net.Cookie.Expires">
      <summary>Gets or sets the expiration date and time for the <see cref="T:System.Net.Cookie" />.</summary>
      <returns>The expiration date and time for the <see cref="T:System.Net.Cookie" />. The default is <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="M:System.Net.Cookie.GetHashCode">
      <summary>Gets the hash code for this <see cref="T:System.Net.Cookie" />.</summary>
      <returns>The hash code for this <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.HttpOnly">
      <summary>Gets or sets a value that indicates whether a page script or other active content can access this cookie. </summary>
      <returns>true to indicate that a page script or other active content cannot access this <see cref="T:System.Net.Cookie" />; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Net.Cookie.Name">
      <summary>Gets or sets the name of this cookie.</summary>
      <returns>The name of the cookie.</returns>
      <exception cref="T:System.Net.CookieException">The value specified for a set operation is null or an empty string (""). -or-The value specified for a set operation contains an unauthorized character. Using one of the following characters will cause an exception: equal sign (=)semicolon (;) comma (,)newline (\n)return (\r) tab (\t) space character dollar sign ($) as the first character </exception>
    </member>
    <member name="P:System.Net.Cookie.Path">
      <summary>Gets or sets the path portion of a Uniform Resource Identifier (URI) to which this cookie applies.</summary>
      <returns>The path portion of a URI to which this cookie applies.</returns>
    </member>
    <member name="P:System.Net.Cookie.Port">
      <summary>Gets or sets a list of Transmission Control Protocol (TCP) ports to which this cookie applies.</summary>
      <returns>A comma delimited list of TCP ports to which this cookie applies.</returns>
      <exception cref="T:System.Net.CookieException">
        <see cref="P:System.Net.Cookie.Port" /> is set to an incorrect format.</exception>
    </member>
    <member name="P:System.Net.Cookie.Secure">
      <summary>Gets or sets a value that indicates whether including the cookie on subsequent client requests requires the request be sent with Secure Hypertext Transport Protocol (HTTPS).</summary>
      <returns>true if including the cookie on subsequent client requests requires the request be sent with HTTPS; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Net.Cookie.TimeStamp">
      <summary>Gets the date and time that this <see cref="T:System.Net.Cookie" /> was created.</summary>
      <returns>The date and time that this cookie was created.</returns>
    </member>
    <member name="M:System.Net.Cookie.ToString">
      <summary>Returns a string representation of the <see cref="T:System.Net.Cookie" /> suitable for including in an HTTP cookie request.</summary>
      <returns>A string representation of the <see cref="T:System.Net.Cookie" /> suitable for including in an HTTP cookie request.</returns>
    </member>
    <member name="P:System.Net.Cookie.Value">
      <summary>Gets or sets the value of the <see cref="T:System.Net.Cookie" />.</summary>
      <returns>The value of the <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Version">
      <summary>Gets or sets a single digit that indicates the version of HTTP state maintenance to which the cookie conforms.</summary>
      <returns>A single digit that indicates the version of HTTP state maintenance to which the cookie conforms. The default is 0. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified value is less than zero.</exception>
    </member>
    <member name="T:System.Net.CookieCollection">
      <summary>Represents a collection of <see cref="T:System.Net.Cookie" /> objects.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.CookieCollection" /> class. </summary>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.Cookie)">
      <summary>Adds the specified <see cref="T:System.Net.Cookie" /> to the collection.</summary>
      <param name="cookie">The <see cref="T:System.Net.Cookie" /> to add to the collection.</param>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)">
      <summary>Adds the contents of the specified <see cref="T:System.Net.CookieCollection" /> to this collection.</summary>
      <param name="cookies">The <see cref="T:System.Net.CookieCollection" /> to add to this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookies" /> is null.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the contents of this <see cref="T:System.Net.CookieCollection" /> to the specified array, starting at the specified index.</summary>
      <param name="array">The array to copy the contents of the collection to.</param>
      <param name="index">The 0-based index in the destination array to start the copy operation.</param>
    </member>
    <member name="P:System.Net.CookieCollection.Count">
      <summary>Gets the number of cookies contained in the <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns>The number of cookies contained in the <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="M:System.Net.CookieCollection.GetEnumerator">
      <summary>Gets an enumerator to iterate through the <see cref="T:System.Net.CookieCollection" />.  </summary>
      <returns>An enumerator to iterate through the <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Net.CookieCollection" /> is read-only.</summary>
      <returns>true to indicate the collection is read-only; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the <see cref="T:System.Net.CookieCollection" /> is thread safe.</summary>
      <returns>true if access to the <see cref="T:System.Net.CookieCollection" /> is thread safe; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.String)">
      <summary>Gets the cookie with the specified name from the collection.</summary>
      <returns>The cookie with the specified name.</returns>
      <param name="name">The name of the cookie to retrieve from the collection.</param>
    </member>
    <member name="P:System.Net.CookieCollection.SyncRoot">
      <summary>Gets an object that you can use to synchronize access to the <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns>An object that you can use to synchronize access to the <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="T:System.Net.CookieContainer">
      <summary>Provides a container for a collection of <see cref="T:System.Net.CookieCollection" /> objects. </summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.CookieContainer" /> class. </summary>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)">
      <summary>Adds the specified <see cref="T:System.Net.Cookie" /> with the specified Uniform Resource Identifier (URI) to this <see cref="T:System.Net.CookieContainer" />.</summary>
      <param name="uri">The URI of the cookie to add to this <see cref="T:System.Net.CookieContainer" />.</param>
      <param name="cookie">The <see cref="T:System.Net.Cookie" /> to add to this <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookie" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The domain for <paramref name="cookie" /> is null. </exception>
      <exception cref="T:System.Net.CookieException">
        <paramref name="cookie" /> is larger than <see cref="P:System.Net.CookieContainer.MaxCookieSize" />. -or- the domain for <paramref name="cookie" /> is not a valid URI. </exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)">
      <summary>Adds the contents of the specified <see cref="T:System.Net.CookieCollection" /> with the specified Uniform Resource Identifier (URI) to this <see cref="T:System.Net.CookieContainer" />.</summary>
      <param name="uri">The URI of the <see cref="T:System.Net.CookieCollection" /> to add to this <see cref="T:System.Net.CookieContainer" />.</param>
      <param name="cookies">The <see cref="T:System.Net.CookieCollection" /> containing the cookies to add to this <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookies" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The domain for one of the cookie objects in <paramref name="cookies" /> is null. </exception>
      <exception cref="T:System.Net.CookieException">One of the cookie objects in <paramref name="cookies" /> contains an invalid domain. </exception>
    </member>
    <member name="P:System.Net.CookieContainer.Capacity">
      <summary>Gets the number of <see cref="T:System.Net.Cookie" /> objects this <see cref="T:System.Net.CookieContainer" /> can contain.</summary>
      <returns>The number of <see cref="T:System.Net.Cookie" /> objects this <see cref="T:System.Net.CookieContainer" /> can contain. The default is 300.</returns>
    </member>
    <member name="P:System.Net.CookieContainer.Count">
      <summary>Gets the number of <see cref="T:System.Net.Cookie" /> objects this <see cref="T:System.Net.CookieContainer" /> contains.</summary>
      <returns>The number of <see cref="T:System.Net.Cookie" /> objects this <see cref="T:System.Net.CookieContainer" /> contains.</returns>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLengthLimit">
      <summary>Represents the default maximum size, in bytes, of the <see cref="T:System.Net.Cookie" /> objects that the <see cref="T:System.Net.CookieContainer" /> can hold. This field is constant.</summary>
      <returns>Always returns 4096.</returns>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLimit">
      <summary>Represents the default maximum number of <see cref="T:System.Net.Cookie" /> objects that the <see cref="T:System.Net.CookieContainer" /> can hold. This field is constant. </summary>
      <returns>Always returns 300.</returns>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultPerDomainCookieLimit">
      <summary>Represents the default maximum number of <see cref="T:System.Net.Cookie" /> objects that the <see cref="T:System.Net.CookieContainer" /> can reference per domain. This field is constant.</summary>
      <returns>Always returns 20.</returns>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookieHeader(System.Uri)">
      <summary>Gets the HTTP cookie header that contains cookies pertaining to the specified Uniform Resource Identifier (URI).</summary>
      <returns>A string representing the cookie header associated with the specified URI.</returns>
      <param name="uri">The URI to retrieve cookies for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> is null.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookies(System.Uri)">
      <summary>Gets the <see cref="T:System.Net.CookieCollection" /> associated with the specified Uniform Resource Identifier (URI).</summary>
      <returns>The cookie collection associated with the specified URI.</returns>
      <param name="uri">The URI to retrieve the <see cref="T:System.Net.CookieCollection" /> for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> is null.</exception>
    </member>
    <member name="P:System.Net.CookieContainer.MaxCookieSize">
      <summary>Gets the maximum cookie length for cookies in the <see cref="T:System.Net.CookieContainer" />.</summary>
      <returns>The maximum cookie length for cookies in the <see cref="T:System.Net.CookieContainer" />. The default is 4096.</returns>
    </member>
    <member name="P:System.Net.CookieContainer.PerDomainCapacity">
      <summary>Gets and sets the number of <see cref="T:System.Net.Cookie" /> instances that a <see cref="T:System.Net.CookieContainer" /> can hold per domain.</summary>
      <returns>The number of <see cref="T:System.Net.Cookie" /> instances that a <see cref="T:System.Net.CookieContainer" /> can hold per domain. The default is 20.</returns>
    </member>
    <member name="M:System.Net.CookieContainer.SetCookies(System.Uri,System.String)">
      <summary>Creates cookie instances for the cookies specified in the HTTP cookie header and adds them to the <see cref="T:System.Net.CookieContainer" /> associated with the specified Uniform Resource Identifier (URI).</summary>
      <param name="uri">The URI associated with the cookie container.</param>
      <param name="cookieHeader">The HTTP header containing cookies to add to the <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> is null-or-<paramref name="cookieHeader" /> is null</exception>
      <exception cref="T:System.Net.CookieException">One of the cookies is invalid. -or- An error occurred while adding one of the cookies to the container. </exception>
    </member>
    <member name="T:System.Net.CookieException">
      <summary>The exception that is thrown when adding a <see cref="T:System.Net.Cookie" /> to a <see cref="T:System.Net.CookieCollection" />.</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.CookieException" /> class. </summary>
    </member>
    <member name="T:System.Net.DnsEndPoint">
      <summary>Represents a network endpoint as a host name or a string representation of an IP address and a port number.</summary>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.DnsEndPoint" /> class with the host name or string representation of an IP address and a port number.</summary>
      <param name="host">The host name or a string representation of the IP address.</param>
      <param name="port">The port number associated with the <paramref name="address" />, or 0 to specify any available port. <paramref name="port" /> is in host order.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="host" /> parameter contains an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="host" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is less than 0 -or- <paramref name="port" /> is greater than 0xffff. </exception>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.DnsEndPoint" /> class with the host name or string representation of an IP address, a port number, and an address family.</summary>
      <param name="host">The host name or a string representation of the IP address.</param>
      <param name="port">The port number associated with the <paramref name="address" />, or 0 to specify any available port. <paramref name="port" /> is in host order.</param>
      <param name="addressFamily">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="host" /> parameter contains an empty string -or- the <paramref name="addressFamily" /> parameter is specified as <see cref="F:System.Net.Sockets.AddressFamily.Unknown" />.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="host" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is less than 0 -or- <paramref name="port" /> is greater than 0xffff. </exception>
    </member>
    <member name="P:System.Net.DnsEndPoint.AddressFamily">
      <summary>Gets the Internet Protocol (IP) address family.</summary>
      <returns>One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values.</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.Equals(System.Object)">
      <summary>Compares two <see cref="T:System.Net.DnsEndPoint" /> objects.</summary>
      <returns>true if the two <see cref="T:System.Net.DnsEndPoint" /> instances are equal; otherwise, false.</returns>
      <param name="comparand">A <see cref="T:System.Net.DnsEndPoint" /> instance to compare to the current instance.</param>
    </member>
    <member name="M:System.Net.DnsEndPoint.GetHashCode">
      <summary>Returns a hash value for a <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <returns>An integer hash value for the <see cref="T:System.Net.DnsEndPoint" />.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Host">
      <summary>Gets the host name or string representation of the Internet Protocol (IP) address of the host.</summary>
      <returns>A host name or string representation of an IP address.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Port">
      <summary>Gets the port number of the <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <returns>An integer value in the range 0 to 0xffff indicating the port number of the <see cref="T:System.Net.DnsEndPoint" />.</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.ToString">
      <summary>Returns the host name or string representation of the IP address and port number of the <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <returns>A string containing the address family, host name or IP address string, and the port number of the specified <see cref="T:System.Net.DnsEndPoint" />.</returns>
    </member>
    <member name="T:System.Net.DownloadProgressChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Net.WebClient.DownloadProgressChanged" /> event of a <see cref="T:System.Net.WebClient" />.</summary>
    </member>
    <member name="P:System.Net.DownloadProgressChangedEventArgs.BytesReceived">
      <summary>Gets the number of bytes received.</summary>
      <returns>An <see cref="T:System.Int64" /> value that indicates the number of bytes received.</returns>
    </member>
    <member name="P:System.Net.DownloadProgressChangedEventArgs.TotalBytesToReceive">
      <summary>Gets the total number of bytes in a <see cref="T:System.Net.WebClient" /> data download operation.</summary>
      <returns>An <see cref="T:System.Int64" /> value that indicates the number of bytes that will be received.</returns>
    </member>
    <member name="T:System.Net.DownloadProgressChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Net.WebClient.DownloadProgressChanged" /> event of a <see cref="T:System.Net.WebClient" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Net.DownloadProgressChangedEventArgs" /> containing event data.</param>
    </member>
    <member name="T:System.Net.DownloadStringCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Net.WebClient.DownloadStringCompleted" /> event. </summary>
    </member>
    <member name="P:System.Net.DownloadStringCompletedEventArgs.Result">
      <summary>Gets the data that is downloaded by a <see cref="Overload:System.Net.WebClient.DownloadStringAsync" /> method.</summary>
      <returns>A <see cref="T:System.String" /> that contains the downloaded data.</returns>
      <exception cref="T:System.InvalidOperationException">The asynchronous request was cancelled. </exception>
    </member>
    <member name="T:System.Net.DownloadStringCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Net.WebClient.DownloadStringCompleted" /> event of a <see cref="T:System.Net.WebClient" />. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Net.DownloadStringCompletedEventArgs" /> that contains event data.</param>
    </member>
    <member name="T:System.Net.EndPoint">
      <summary>Identifies a network address. This is an abstract class.</summary>
    </member>
    <member name="M:System.Net.EndPoint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.EndPoint" /> class.</summary>
    </member>
    <member name="P:System.Net.EndPoint.AddressFamily">
      <summary>Gets the address family to which the endpoint belongs.</summary>
      <returns>One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property when the property is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Net.EndPoint.Create(System.Net.SocketAddress)">
      <summary>Creates an <see cref="T:System.Net.EndPoint" /> instance from a <see cref="T:System.Net.SocketAddress" /> instance.</summary>
      <returns>A new <see cref="T:System.Net.EndPoint" /> instance that is initialized from the specified <see cref="T:System.Net.SocketAddress" /> instance.</returns>
      <param name="socketAddress">The socket address that serves as the endpoint for a connection.</param>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Net.EndPoint.Serialize">
      <summary>Serializes endpoint information into a <see cref="T:System.Net.SocketAddress" /> instance.</summary>
      <returns>A <see cref="T:System.Net.SocketAddress" /> instance that contains the endpoint information.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="T:System.Net.HttpRequestHeader">
      <summary>The HTTP headers that may be specified in a client request.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.CacheControl">
      <summary>The Cache-Control header, which specifies directives that must be obeyed by all cache control mechanisms along the request/response chain.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Connection">
      <summary>The Connection header, which specifies options that are desired for a particular connection.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Date">
      <summary>The Date header, which specifies the date and time at which the request originated.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.KeepAlive">
      <summary>The Keep-Alive header, which specifies a parameter used into order to maintain a persistent connection.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Pragma">
      <summary>The Pragma header, which specifies implementation-specific directives that might apply to any agent along the request/response chain.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Trailer">
      <summary>The Trailer header, which specifies the header fields present in the trailer of a message encoded with chunked transfer-coding.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.TransferEncoding">
      <summary>The Transfer-Encoding header, which specifies what (if any) type of transformation that has been applied to the message body.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Upgrade">
      <summary>The Upgrade header, which specifies additional communications protocols that the client supports.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Via">
      <summary>The Via header, which specifies intermediate protocols to be used by gateway and proxy agents.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Warning">
      <summary>The Warning header, which specifies additional information about that status or transformation of a message that might not be reflected in the message.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Allow">
      <summary>The Allow header, which specifies the set of HTTP methods supported.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentLength">
      <summary>The Content-Length header, which specifies the length, in bytes, of the accompanying body data.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentType">
      <summary>The Content-Type header, which specifies the MIME type of the accompanying body data.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentEncoding">
      <summary>The Content-Encoding header, which specifies the encodings that have been applied to the accompanying body data.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentLanguage">
      <summary>The Content-Langauge header, which specifies the natural language(s) of the accompanying body data.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentLocation">
      <summary>The Content-Location header, which specifies a URI from which the accompanying body may be obtained.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentMd5">
      <summary>The Content-MD5 header, which specifies the MD5 digest of the accompanying body data, for the purpose of providing an end-to-end message integrity check.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentRange">
      <summary>The Content-Range header, which specifies where in the full body the accompanying partial body data should be applied.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Expires">
      <summary>The Expires header, which specifies the date and time after which the accompanying body data should be considered stale.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.LastModified">
      <summary>The Last-Modified header, which specifies the date and time at which the accompanying body data was last modified.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Accept">
      <summary>The Accept header, which specifies the MIME types that are acceptable for the response.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.AcceptCharset">
      <summary>The Accept-Charset header, which specifies the character sets that are acceptable for the response.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.AcceptEncoding">
      <summary>The Accept-Encoding header, which specifies the content encodings that are acceptable for the response.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.AcceptLanguage">
      <summary>The Accept-Langauge header, which specifies that natural languages that are preferred for the response.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Authorization">
      <summary>The Authorization header, which specifies the credentials that the client presents in order to authenticate itself to the server.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Cookie">
      <summary>The Cookie header, which specifies cookie data presented to the server.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Expect">
      <summary>The Expect header, which specifies particular server behaviors that are required by the client.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.From">
      <summary>The From header, which specifies an Internet E-mail address for the human user who controls the requesting user agent.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Host">
      <summary>The Host header, which specifies the host name and port number of the resource being requested.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfMatch">
      <summary>The If-Match header, which specifies that the requested operation should be performed only if the client's cached copy of the indicated resource is current.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfModifiedSince">
      <summary>The If-Modified-Since header, which specifies that the requested operation should be performed only if the requested resource has been modified since the indicated data and time.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfNoneMatch">
      <summary>The If-None-Match header, which specifies that the requested operation should be performed only if none of client's cached copies of the indicated resources are current.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfRange">
      <summary>The If-Range header, which specifies that only the specified range of the requested resource should be sent, if the client's cached copy is current.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfUnmodifiedSince">
      <summary>The If-Unmodified-Since header, which specifies that the requested operation should be performed only if the requested resource has not been modified since the indicated date and time.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.MaxForwards">
      <summary>The Max-Forwards header, which specifies an integer indicating the remaining number of times that this request may be forwarded.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ProxyAuthorization">
      <summary>The Proxy-Authorization header, which specifies the credentials that the client presents in order to authenticate itself to a proxy.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Referer">
      <summary>The Referer header, which specifies the URI of the resource from which the request URI was obtained.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Range">
      <summary>The Range header, which specifies the the sub-range(s) of the response that the client requests be returned in lieu of the entire response.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Te">
      <summary>The TE header, which specifies the transfer encodings that are acceptable for the response.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Translate">
      <summary>The Translate header, a Microsoft extension to the HTTP specification used in conjunction with WebDAV functionality.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.UserAgent">
      <summary>The User-Agent header, which specifies information about the client agent.</summary>
    </member>
    <member name="T:System.Net.HttpStatusCode">
      <summary>Contains the values of status codes defined for HTTP.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Continue">
      <summary>Equivalent to HTTP status 100. <see cref="F:System.Net.HttpStatusCode.Continue" /> indicates that the client can continue with its request.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SwitchingProtocols">
      <summary>Equivalent to HTTP status 101. <see cref="F:System.Net.HttpStatusCode.SwitchingProtocols" /> indicates that the protocol version or protocol is being changed.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.OK">
      <summary>Equivalent to HTTP status 200. <see cref="F:System.Net.HttpStatusCode.OK" /> indicates that the request succeeded and that the requested information is in the response. This is the most common status code to receive.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Created">
      <summary>Equivalent to HTTP status 201. <see cref="F:System.Net.HttpStatusCode.Created" /> indicates that the request resulted in a new resource created before the response was sent.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Accepted">
      <summary>Equivalent to HTTP status 202. <see cref="F:System.Net.HttpStatusCode.Accepted" /> indicates that the request has been accepted for further processing.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NonAuthoritativeInformation">
      <summary>Equivalent to HTTP status 203. <see cref="F:System.Net.HttpStatusCode.NonAuthoritativeInformation" /> indicates that the returned metadata information is from a cached copy instead of the origin server and therefore may be incorrect.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NoContent">
      <summary>Equivalent to HTTP status 204. <see cref="F:System.Net.HttpStatusCode.NoContent" /> indicates that the request has been successfully processed and that the response is intentionally blank.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ResetContent">
      <summary>Equivalent to HTTP status 205. <see cref="F:System.Net.HttpStatusCode.ResetContent" /> indicates that the client should reset (not reload) the current resource.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PartialContent">
      <summary>Equivalent to HTTP status 206. <see cref="F:System.Net.HttpStatusCode.PartialContent" /> indicates that the response is a partial response as requested by a GET request that includes a byte range.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultipleChoices">
      <summary>Equivalent to HTTP status 300. <see cref="F:System.Net.HttpStatusCode.MultipleChoices" /> indicates that the requested information has multiple representations. The default action is to treat this status as a redirect and follow the contents of the Location header associated with this response.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Ambiguous">
      <summary>Equivalent to HTTP status 300. <see cref="F:System.Net.HttpStatusCode.Ambiguous" /> indicates that the requested information has multiple representations. The default action is to treat this status as a redirect and follow the contents of the Location header associated with this response.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MovedPermanently">
      <summary>Equivalent to HTTP status 301. <see cref="F:System.Net.HttpStatusCode.MovedPermanently" /> indicates that the requested information has been moved to the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Moved">
      <summary>Equivalent to HTTP status 301. <see cref="F:System.Net.HttpStatusCode.Moved" /> indicates that the requested information has been moved to the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Found">
      <summary>Equivalent to HTTP status 302. <see cref="F:System.Net.HttpStatusCode.Found" /> indicates that the requested information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Redirect">
      <summary>Equivalent to HTTP status 302. <see cref="F:System.Net.HttpStatusCode.Redirect" /> indicates that the requested information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SeeOther">
      <summary>Equivalent to HTTP status 303. <see cref="F:System.Net.HttpStatusCode.SeeOther" /> automatically redirects the client to the URI specified in the Location header as the result of a POST. The request to the resource specified by the Location header will be made with a GET.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectMethod">
      <summary>Equivalent to HTTP status 303. <see cref="F:System.Net.HttpStatusCode.RedirectMethod" /> automatically redirects the client to the URI specified in the Location header as the result of a POST. The request to the resource specified by the Location header will be made with a GET.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotModified">
      <summary>Equivalent to HTTP status 304. <see cref="F:System.Net.HttpStatusCode.NotModified" /> indicates that the client's cached copy is up to date. The contents of the resource are not transferred.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UseProxy">
      <summary>Equivalent to HTTP status 305. <see cref="F:System.Net.HttpStatusCode.UseProxy" /> indicates that the request should use the proxy server at the URI specified in the Location header.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unused">
      <summary>Equivalent to HTTP status 306. <see cref="F:System.Net.HttpStatusCode.Unused" /> is a proposed extension to the HTTP/1.1 specification that is not fully specified.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TemporaryRedirect">
      <summary>Equivalent to HTTP status 307. <see cref="F:System.Net.HttpStatusCode.TemporaryRedirect" /> indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectKeepVerb">
      <summary>Equivalent to HTTP status 307. <see cref="F:System.Net.HttpStatusCode.RedirectKeepVerb" /> indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadRequest">
      <summary>Equivalent to HTTP status 400. <see cref="F:System.Net.HttpStatusCode.BadRequest" /> indicates that the request could not be understood by the server. <see cref="F:System.Net.HttpStatusCode.BadRequest" /> is sent when no other error is applicable, or if the exact error is unknown or does not have its own error code.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unauthorized">
      <summary>Equivalent to HTTP status 401. <see cref="F:System.Net.HttpStatusCode.Unauthorized" /> indicates that the requested resource requires authentication. The WWW-Authenticate header contains the details of how to perform the authentication.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PaymentRequired">
      <summary>Equivalent to HTTP status 402. <see cref="F:System.Net.HttpStatusCode.PaymentRequired" /> is reserved for future use.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Forbidden">
      <summary>Equivalent to HTTP status 403. <see cref="F:System.Net.HttpStatusCode.Forbidden" /> indicates that the server refuses to fulfill the request.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotFound">
      <summary>Equivalent to HTTP status 404. <see cref="F:System.Net.HttpStatusCode.NotFound" /> indicates that the requested resource does not exist on the server.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MethodNotAllowed">
      <summary>Equivalent to HTTP status 405. <see cref="F:System.Net.HttpStatusCode.MethodNotAllowed" /> indicates that the request method (POST or GET) is not allowed on the requested resource.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotAcceptable">
      <summary>Equivalent to HTTP status 406. <see cref="F:System.Net.HttpStatusCode.NotAcceptable" /> indicates that the client has indicated with Accept headers that it will not accept any of the available representations of the resource.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired">
      <summary>Equivalent to HTTP status 407. <see cref="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired" /> indicates that the requested proxy requires authentication. The Proxy-authenticate header contains the details of how to perform the authentication.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestTimeout">
      <summary>Equivalent to HTTP status 408. <see cref="F:System.Net.HttpStatusCode.RequestTimeout" /> indicates that the client did not send a request within the time the server was expecting the request.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Conflict">
      <summary>Equivalent to HTTP status 409. <see cref="F:System.Net.HttpStatusCode.Conflict" /> indicates that the request could not be carried out because of a conflict on the server.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Gone">
      <summary>Equivalent to HTTP status 410. <see cref="F:System.Net.HttpStatusCode.Gone" /> indicates that the requested resource is no longer available.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LengthRequired">
      <summary>Equivalent to HTTP status 411. <see cref="F:System.Net.HttpStatusCode.LengthRequired" /> indicates that the required Content-length header is missing.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionFailed">
      <summary>Equivalent to HTTP status 412. <see cref="F:System.Net.HttpStatusCode.PreconditionFailed" /> indicates that a condition set for this request failed, and the request cannot be carried out. Conditions are set with conditional request headers like If-Match, If-None-Match, or If-Unmodified-Since.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestEntityTooLarge">
      <summary>Equivalent to HTTP status 413. <see cref="F:System.Net.HttpStatusCode.RequestEntityTooLarge" /> indicates that the request is too large for the server to process.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestUriTooLong">
      <summary>Equivalent to HTTP status 414. <see cref="F:System.Net.HttpStatusCode.RequestUriTooLong" /> indicates that the URI is too long.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnsupportedMediaType">
      <summary>Equivalent to HTTP status 415. <see cref="F:System.Net.HttpStatusCode.UnsupportedMediaType" /> indicates that the request is an unsupported type.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable">
      <summary>Equivalent to HTTP status 416. <see cref="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable" /> indicates that the range of data requested from the resource cannot be returned, either because the beginning of the range is before the beginning of the resource, or the end of the range is after the end of the resource.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ExpectationFailed">
      <summary>Equivalent to HTTP status 417. <see cref="F:System.Net.HttpStatusCode.ExpectationFailed" /> indicates that an expectation given in an Expect header could not be met by the server.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InternalServerError">
      <summary>Equivalent to HTTP status 500. <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> indicates that a generic error has occurred on the server.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotImplemented">
      <summary>Equivalent to HTTP status 501. <see cref="F:System.Net.HttpStatusCode.NotImplemented" /> indicates that the server does not support the requested function.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadGateway">
      <summary>Equivalent to HTTP status 502. <see cref="F:System.Net.HttpStatusCode.BadGateway" /> indicates that an intermediate proxy server received a bad response from another proxy or the origin server.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ServiceUnavailable">
      <summary>Equivalent to HTTP status 503. <see cref="F:System.Net.HttpStatusCode.ServiceUnavailable" /> indicates that the server is temporarily unavailable, usually due to high load or maintenance.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.GatewayTimeout">
      <summary>Equivalent to HTTP status 504. <see cref="F:System.Net.HttpStatusCode.GatewayTimeout" /> indicates that an intermediate proxy server timed out while waiting for a response from another proxy or the origin server.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.HttpVersionNotSupported">
      <summary>Equivalent to HTTP status 505. <see cref="F:System.Net.HttpStatusCode.HttpVersionNotSupported" /> indicates that the requested HTTP version is not supported by the server.</summary>
    </member>
    <member name="T:System.Net.HttpWebRequest">
      <summary>Provides an HTTP-specific implementation of the <see cref="T:System.Net.WebRequest" /> class.</summary>
    </member>
    <member name="M:System.Net.HttpWebRequest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.HttpWebRequest" /> class.</summary>
    </member>
    <member name="M:System.Net.HttpWebRequest.Abort">
      <summary>Cancels a request to an Internet resource.</summary>
      <exception cref="T:System.NotImplementedException">This method is not implemented. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Accept">
      <summary>Gets or sets the value of the Accept HTTP header.</summary>
      <returns>The value of the Accept HTTP header. The default value is null.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowReadStreamBuffering">
      <summary>Gets or sets a value that indicates whether to buffer the data read from the Internet resource.</summary>
      <returns>true to enable buffering of the data received from the Internet resource; false to disable buffering. The default is true.</returns>
      <exception cref="T:System.NotImplementedException">This property is not implemented. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
      <summary>Gets or sets a value that indicates whether to buffer the data written to the Internet resource.</summary>
      <returns>true to enable buffering of the data written to the Internet resource; false to disable buffering. The default is true.</returns>
      <exception cref="T:System.NotImplementedException">This property is not implemented. </exception>
      <exception cref="T:System.NotSupportedException">This property cannot be set to false on the browser stack.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request for a <see cref="T:System.IO.Stream" /> object to use to write data.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">The state object for this request. </param>
      <exception cref="T:System.Net.ProtocolViolationException">The <see cref="P:System.Net.HttpWebRequest.Method" /> property is GET-or- The <see cref="P:System.Net.WebRequest.ContentLength" /> property was set to a value that does not match the size of the provided request body.</exception>
      <exception cref="T:System.InvalidOperationException">The stream is being used by a previous call to <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />-or- The thread pool is running out of threads. </exception>
      <exception cref="T:System.NotImplementedException">This method is not implemented. </exception>
      <exception cref="T:System.NotSupportedException">The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache. This exception can occur if you are using a custom cache validator that is incorrectly implemented. </exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called. </exception>
      <exception cref="T:System.ObjectDisposedException">In a .NET Framework application, a request stream with zero content length was not obtained and closed correctly.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request to an Internet resource.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request for a response.</returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate </param>
      <param name="state">The state object for this request. </param>
      <exception cref="T:System.InvalidOperationException">The stream is already in use by a previous call to <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />-or- The thread pool is running out of threads. </exception>
      <exception cref="T:System.NotImplementedException">This method is not implemented. </exception>
      <exception cref="T:System.NotSupportedException">The <paramref name="callback" /> parameter is null. </exception>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.HttpWebRequest.Method" /> is GET. </exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContentType">
      <summary>Gets or sets the value of the Content-type HTTP header.</summary>
      <returns>The value of the Content-type HTTP header. The default value is null.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.CookieContainer">
      <summary>Specifies the collection of <see cref="T:System.Net.CookieCollection" /> objects associated with the HTTP request.</summary>
      <returns>A <see cref="T:System.Net.CookieContainer" /> that contains a collection of <see cref="T:System.Net.CookieCollection" /> objects associated with the HTTP request.</returns>
      <exception cref="T:System.NotImplementedException">This property is not implemented. </exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>Ends an asynchronous request for a <see cref="T:System.IO.Stream" /> object to use to write data.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> to use to write request data.</returns>
      <param name="asyncResult">The pending request for a stream. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.IO.IOException">The request did not complete, and no stream is available. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by the current instance from a call to <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />. </exception>
      <exception cref="T:System.InvalidOperationException">This method was called previously using <paramref name="asyncResult" />. </exception>
      <exception cref="T:System.NotImplementedException">This method is not implemented. </exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.-or- An error occurred while processing the request. </exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>Ends an asynchronous request to an Internet resource.</summary>
      <returns>A <see cref="T:System.Net.WebResponse" /> that contains the response from the Internet resource.</returns>
      <param name="asyncResult">The pending request for a response. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">This method was called previously using <paramref name="asyncResult." /></exception>
      <exception cref="T:System.NotImplementedException">This method is not implemented. </exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.-or- An error occurred while processing the request. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by the current instance from a call to <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.HaveResponse">
      <summary>Gets a value that indicates whether a response has been received from an Internet resource.</summary>
      <returns>true if a response has been received; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">This property is not implemented. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Headers">
      <summary>Specifies a collection of the name/value pairs that make up the HTTP headers.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> that contains the name/value pairs that make up the headers for the HTTP request.</returns>
      <exception cref="T:System.InvalidOperationException">The request has been started by calling the <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> or <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> method. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Method">
      <summary>Gets or sets the method for the request.</summary>
      <returns>The request method to use to contact the Internet resource. The default value is GET.</returns>
      <exception cref="T:System.ArgumentException">No method is supplied.-or- The method string contains invalid characters. </exception>
      <exception cref="T:System.NotImplementedException">This property is not implemented. </exception>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Net.HttpWebRequest.Method" /> property is not GET or POST. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.RequestUri">
      <summary>Gets the original Uniform Resource Identifier (URI) of the request.</summary>
      <returns>A <see cref="T:System.Uri" /> that contains the URI of the Internet resource passed to the <see cref="M:System.Net.WebRequest.Create(System.Uri)" /> method.</returns>
      <exception cref="T:System.NotImplementedException">This property is not implemented. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.SupportsCookieContainer">
      <summary>Gets a value that indicates whether the <see cref="P:System.Net.HttpWebRequest.CookieContainer" /> property is supported by the <see cref="T:System.Net.HttpWebRequest" /> instance.</summary>
      <returns>true if the <see cref="P:System.Net.HttpWebRequest.CookieContainer" /> property is supported by the <see cref="T:System.Net.HttpWebRequest" /> instance; otherwise, false.</returns>
    </member>
    <member name="T:System.Net.HttpWebResponse">
      <summary>Provides an HTTP-specific implementation of the <see cref="T:System.Net.WebResponse" /> class.</summary>
    </member>
    <member name="M:System.Net.HttpWebResponse.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebResponse" /> class.</summary>
    </member>
    <member name="P:System.Net.HttpWebResponse.Cookies">
      <summary>Gets the cookies used to persist state information for the HTTP response.</summary>
      <returns>The <see cref="T:System.Net.CookieCollection" /> object associated with the HTTP response.</returns>
      <exception cref="T:System.NotImplementedException">This property is not implemented. </exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.Method">
      <summary>Gets the method that is used to return the response.</summary>
      <returns>A string that contains the HTTP method that is used to return the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusCode">
      <summary>Gets the status of the response.</summary>
      <returns>One of the <see cref="T:System.Net.HttpStatusCode" /> values.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusDescription">
      <summary>Gets the status description returned with the response.</summary>
      <returns>A string that describes the status of the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="T:System.Net.ICredentials">
      <summary>Provides the base authentication interface for retrieving credentials for Web client authentication.</summary>
    </member>
    <member name="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
      <summary>Returns a <see cref="T:System.Net.NetworkCredential" /> object that is associated with the specified URI, and authentication type.</summary>
      <returns>The <see cref="T:System.Net.NetworkCredential" /> that is associated with the specified URI and authentication type, or, if no credentials are available, null.</returns>
      <param name="uri">The <see cref="T:System.Uri" /> that the client is providing authentication for.</param>
      <param name="authType">A string that specifies the type of authentication.</param>
    </member>
    <member name="T:System.Net.IPAddress">
      <summary>Provides an Internet Protocol (IP) address.</summary>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Net.IPAddress" /> class with the address specified as a <see cref="T:System.Byte" /> array.</summary>
      <param name="address">The byte array that contains the IP address.</param>
      <exception cref="T:System.ArgumentException">The length of the <paramref name="address" /> parameter is not 4 bytes required for an IPv4 address or 16 bytes required for an IPv6 address.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="address" /> parameter is null. </exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.IPAddress" /> class with an IPv6 address specified as a <see cref="T:System.Byte" /> array and the specified scope identifier.</summary>
      <param name="address">The byte array value of the IPv6 address.</param>
      <param name="scopeid">The long value of the scope identifier.</param>
      <exception cref="T:System.ArgumentException">The length of the <paramref name="address" /> parameter is not 16 bytes required for an IPv6 address.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="address" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="scopeid" /> parameter is less than 0 or the <paramref name="scopeid" /> is greater than 0x00000000FFFFFFFF.</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.IPAddress" /> class with the address specified as an <see cref="T:System.Int64" />.</summary>
      <param name="newAddress">The long value of the IP address. For example, the value 0x2414188f in big-endian format would be the IP address "143.24.20.36".</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="newAddress" /> parameter is out of range for an IPv4 address. </exception>
    </member>
    <member name="P:System.Net.IPAddress.Address">
      <summary>Gets or sets an Internet Protocol (IP) address for IPv4.</summary>
      <returns>An IPv4 address represented as an integer.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">The <see cref="P:System.Net.IPAddress.AddressFamily" /> property is <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
    </member>
    <member name="P:System.Net.IPAddress.AddressFamily">
      <summary>Gets the address family of the IP address.</summary>
      <returns>Returns <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> for IPv4 or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> for IPv6.</returns>
    </member>
    <member name="F:System.Net.IPAddress.Any">
      <summary>Provides an IPv4 address that indicates that a server must listen for client activity on all network interfaces for IPv4. This field is read-only.</summary>
    </member>
    <member name="F:System.Net.IPAddress.Broadcast">
      <summary>Provides the IPv4 broadcast address. This field is read-only.</summary>
    </member>
    <member name="M:System.Net.IPAddress.Equals(System.Object)">
      <summary>Compares two IP addresses.</summary>
      <returns>true if the two addresses are equal; otherwise, false.</returns>
      <param name="comparand">An <see cref="T:System.Net.IPAddress" /> instance to compare to the current instance.</param>
    </member>
    <member name="M:System.Net.IPAddress.GetAddressBytes">
      <summary>Provides a copy of  the <see cref="T:System.Net.IPAddress" /> as an array of bytes.</summary>
      <returns>An array of bytes that represents the <see cref="T:System.Net.IPAddress" /> instance.</returns>
    </member>
    <member name="M:System.Net.IPAddress.GetHashCode">
      <summary>Returns a hash value for an IP address.</summary>
      <returns>An integer hash value for the IP address.</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
      <summary>Converts a short value from host byte order to network byte order.</summary>
      <returns>A short value, expressed in network byte order.</returns>
      <param name="host">The number to convert, expressed in host byte order.</param>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
      <summary>Converts an integer value from host byte order to network byte order.</summary>
      <returns>An integer value, expressed in network byte order.</returns>
      <param name="host">The number to convert, expressed in host byte order.</param>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
      <summary>Converts a long value from host byte order to network byte order.</summary>
      <returns>A long value, expressed in network byte order.</returns>
      <param name="host">The number to convert, expressed in host byte order.</param>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Any">
      <summary>Provides an IPv6 address that indicates that a server must listen for client activity on all network interfaces for IPv6. This field is read-only.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Loopback">
      <summary>Provides the IP loopback address. This property is read-only.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6None">
      <summary>Provides an IPv6 address that indicates that no network interface should be used. This property is read-only.</summary>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6LinkLocal">
      <summary>Gets whether the address is an IPv6 link local address.</summary>
      <returns>true if the IP address is an IPv6 link local address; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Multicast">
      <summary>Gets whether the address is an IPv6 multicast global address.</summary>
      <returns>true if the IP address is an IPv6 multicast global address; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6SiteLocal">
      <summary>Gets whether the address is an IPv6 site local address.</summary>
      <returns>true if the IP address is an IPv6 site local address; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
      <summary>Indicates whether the specified IP address is the loopback address.</summary>
      <returns>true if <paramref name="address" /> is the loopback address; otherwise, false.</returns>
      <param name="address">An IP address.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="address" /> parameter is null. </exception>
    </member>
    <member name="F:System.Net.IPAddress.Loopback">
      <summary>Provides the IPv4 loopback address. This field is read-only.</summary>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
      <summary>Converts a short value from network byte order to host byte order.</summary>
      <returns>A short value, expressed in host byte order.</returns>
      <param name="network">The number to convert, expressed in network byte order.</param>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
      <summary>Converts an integer value from network byte order to host byte order.</summary>
      <returns>An integer value, expressed in host byte order.</returns>
      <param name="network">The number to convert, expressed in network byte order.</param>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
      <summary>Converts a long value from network byte order to host byte order.</summary>
      <returns>A long value, expressed in host byte order.</returns>
      <param name="network">The number to convert, expressed in network byte order.</param>
    </member>
    <member name="F:System.Net.IPAddress.None">
      <summary>Provides an IP address that indicates that no network interface should be used. This field is read-only.</summary>
    </member>
    <member name="M:System.Net.IPAddress.Parse(System.String)">
      <summary>Converts an IP address string to an <see cref="T:System.Net.IPAddress" /> instance.</summary>
      <returns>An <see cref="T:System.Net.IPAddress" /> instance.</returns>
      <param name="ipString">A string that contains an IP address in dotted-quad notation for IPv4 or an IP address in colon-hexadecimal notation for IPv6.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="ipString" /> parameter is null. </exception>
      <exception cref="T:System.FormatException">The <paramref name="ipString" /> parameter is not a valid IP address. </exception>
    </member>
    <member name="P:System.Net.IPAddress.ScopeId">
      <summary>Gets or sets the IPv6 address scope identifier.</summary>
      <returns>A long integer that specifies the scope of the address.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value when setting the ScopeId is less than 0 or the value is greater than 0x00000000FFFFFFFF.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">The <see cref="P:System.Net.IPAddress.AddressFamily" /> property is specified as <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />. </exception>
    </member>
    <member name="M:System.Net.IPAddress.ToString">
      <summary>Converts an Internet address to its standard notation.</summary>
      <returns>A string that contains the IP address in either IPv4 dotted-quad or in IPv6 colon-hexadecimal notation.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error prevented the IPv6 address from being converted to a string. </exception>
    </member>
    <member name="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
      <summary>Determines whether a string is a valid IP address.</summary>
      <returns>true if <paramref name="ipString" /> is a valid IP address; otherwise, false.</returns>
      <param name="ipString">The string to validate.</param>
      <param name="address">The <see cref="T:System.Net.IPAddress" /> version of the string.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ipString" /> could not be parsed as an IP address.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ipString" /> is null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="ipString" /> is not a valid IP address. </exception>
    </member>
    <member name="T:System.Net.IPEndPoint">
      <summary>Represents a network endpoint as an IP address and a port number.</summary>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.IPEndPoint" /> class with the specified IP address and port number.</summary>
      <param name="address">The long value of the IP address for the internet host. For example, the value 0x2414188f in big-endian format would be the IP address "143.24.20.36".</param>
      <param name="port">The port number associated with the <paramref name="address" />, or 0 to specify any available port. <paramref name="port" /> is in host order.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is less than <see cref="F:System.Net.IPEndPoint.MinPort" />.-or- <paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.-or- <paramref name="address" /> is out of range for an IPv4 address.</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.IPEndPoint" /> class with the specified address and port number.</summary>
      <param name="address">The IP address of the Internet host represented as an <see cref="T:System.Net.IPAddress" />.</param>
      <param name="port">The port number associated with the <paramref name="address" />, or 0 to specify any available port. <paramref name="port" /> is in host order.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="address" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is less than <see cref="F:System.Net.IPEndPoint.MinPort" />.-or- <paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
    </member>
    <member name="P:System.Net.IPEndPoint.Address">
      <summary>Gets or sets the IP address of the endpoint.</summary>
      <returns>IP address of the endpoint.</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.AddressFamily">
      <summary>Gets the Internet Protocol (IP) address family.</summary>
      <returns>One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)">
      <summary>Creates an endpoint from a socket address.</summary>
      <returns>An <see cref="T:System.Net.EndPoint" /> instance using the specified socket address.</returns>
      <param name="socketAddress">The <see cref="T:System.Net.SocketAddress" /> to use for the endpoint.</param>
      <exception cref="T:System.ArgumentException">The AddressFamily of <paramref name="socketAddress" /> is not equal to the AddressFamily of the current instance.-or- <paramref name="socketAddress" />.Size &lt; 8. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="socketAddress" /> parameter is null.</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Net.IPEndPoint" /> instance.</summary>
      <returns>true if the two IP endpoints are equal; otherwise, false.</returns>
      <param name="comparand">The specified <see cref="T:System.Object" /> to test for equality with the current <see cref="T:System.Net.IPEndPoint" /> instance.</param>
    </member>
    <member name="M:System.Net.IPEndPoint.GetHashCode">
      <summary>Returns a hash value for an IP endpoint.</summary>
      <returns>An integer hash value for the IP endpoint.</returns>
    </member>
    <member name="F:System.Net.IPEndPoint.MaxPort">
      <summary>Specifies the maximum value that can be assigned to the <see cref="P:System.Net.IPEndPoint.Port" /> property. The MaxPort value is set to 0x0000FFFF. This field is read-only.</summary>
    </member>
    <member name="F:System.Net.IPEndPoint.MinPort">
      <summary>Specifies the minimum value that can be assigned to the <see cref="P:System.Net.IPEndPoint.Port" /> property. This field is read-only.</summary>
    </member>
    <member name="P:System.Net.IPEndPoint.Port">
      <summary>Gets or sets the port number of the endpoint.</summary>
      <returns>An integer value in the range <see cref="F:System.Net.IPEndPoint.MinPort" /> to <see cref="F:System.Net.IPEndPoint.MaxPort" /> indicating the port number of the endpoint.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value that was specified for a set operation is less than <see cref="F:System.Net.IPEndPoint.MinPort" /> or greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
    </member>
    <member name="M:System.Net.IPEndPoint.Serialize">
      <summary>Serializes endpoint information into a <see cref="T:System.Net.SocketAddress" /> instance.</summary>
      <returns>A <see cref="T:System.Net.SocketAddress" /> instance containing the socket address for the endpoint.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.ToString">
      <summary>Returns the IP address and port number of the specified endpoint.</summary>
      <returns>A string containing the IP address and the port number of the specified endpoint.</returns>
    </member>
    <member name="T:System.Net.IWebRequestCreate">
      <summary>Provides the base interface for creating <see cref="T:System.Net.WebRequest" /> instances.</summary>
    </member>
    <member name="M:System.Net.IWebRequestCreate.Create(System.Uri)">
      <summary>Creates a <see cref="T:System.Net.WebRequest" /> instance.</summary>
      <returns>A <see cref="T:System.Net.WebRequest" /> instance.</returns>
      <param name="uri">The uniform resource identifier (URI) of the Web resource.</param>
      <exception cref="T:System.NotSupportedException">The request scheme specified in <paramref name="uri" /> is not supported by this <see cref="T:System.Net.IWebRequestCreate" /> instance. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have permission to connect to the requested URI or a URI that the request is redirected to. </exception>
      <exception cref="T:System.UriFormatException">The URI specified in <paramref name="uri" /> is not a valid URI. </exception>
    </member>
    <member name="T:System.Net.NetworkCredential">
      <summary>Provides credentials for password-based authentication schemes such as basic, digest, NTLM, and Kerberos authentication.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkCredential" /> class.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkCredential" /> class with the specified user name and password.</summary>
      <param name="userName">The user name associated with the credentials.</param>
      <param name="password">The password for the user name associated with the credentials.</param>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkCredential" /> class with the specified user name, password, and domain.</summary>
      <param name="userName">The user name associated with the credentials.</param>
      <param name="password">The password for the user name associated with the credentials.</param>
      <param name="domain">The domain associated with these credentials.</param>
    </member>
    <member name="P:System.Net.NetworkCredential.Domain">
      <summary>Gets or sets the domain or computer name that verifies the credentials.</summary>
      <returns>The name of the domain associated with the credentials.</returns>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)">
      <summary>Returns an instance of the <see cref="T:System.Net.NetworkCredential" /> class for the specified Uniform Resource Identifier (URI) and authentication type.</summary>
      <returns>A <see cref="T:System.Net.NetworkCredential" /> object.</returns>
      <param name="uri">The Uri that the client provides authentication for.</param>
      <param name="authType">A string that specifies the type of authentication requested.</param>
    </member>
    <member name="P:System.Net.NetworkCredential.Password">
      <summary>Gets or sets the password for the user name associated with the credentials.</summary>
      <returns>The password associated with the credentials.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.UserName">
      <summary>Gets or sets the user name associated with the credentials.</summary>
      <returns>The user name associated with the credentials.</returns>
    </member>
    <member name="T:System.Net.OpenReadCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Net.WebClient.OpenReadCompleted" /> event. </summary>
    </member>
    <member name="P:System.Net.OpenReadCompletedEventArgs.Result">
      <summary>Gets a readable stream that contains the results of the <see cref="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)" /> method.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> that contains the results of the <see cref="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)" /> method.</returns>
      <exception cref="T:System.InvalidOperationException">The asynchronous request was cancelled. </exception>
    </member>
    <member name="T:System.Net.OpenReadCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="M:System.Net.WebClient.OpenReadAsync(System.Uri)" /> event of a <see cref="T:System.Net.WebClient" />. </summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Net.OpenReadCompletedEventArgs" />  that contains the event data. </param>
    </member>
    <member name="T:System.Net.OpenWriteCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Net.WebClient.OpenWriteCompleted" /> event.</summary>
    </member>
    <member name="P:System.Net.OpenWriteCompletedEventArgs.Result">
      <summary>Gets a writable stream that is used to send data to a server.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> where you can write data to be uploaded.</returns>
      <exception cref="T:System.InvalidOperationException">The asynchronous request was cancelled. </exception>
    </member>
    <member name="T:System.Net.OpenWriteCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Net.WebClient.OpenWriteCompleted" /> event of a <see cref="T:System.Net.WebClient" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Net.OpenWriteCompletedEventArgs" /> containing event data.</param>
    </member>
    <member name="T:System.Net.ProtocolViolationException">
      <summary>The exception that is thrown when an error is made while using a network protocol.</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.ProtocolViolationException" /> class.</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.ProtocolViolationException" /> class with the specified message.</summary>
      <param name="message">The error message string.</param>
    </member>
    <member name="T:System.Net.SocketAddress">
      <summary>Stores serialized information from <see cref="T:System.Net.EndPoint" /> derived classes.</summary>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class for the given address family.</summary>
      <param name="family">An <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value.</param>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
      <summary>Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class using the specified address family and buffer size.</summary>
      <param name="family">An <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value.</param>
      <param name="size">The value to set for the <see cref="P:System.Net.SocketAddress.Size" /> property which affects the number of bytes to allocate for the underlying buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> is less than 2. These 2 bytes are needed to store <paramref name="family" />. </exception>
    </member>
    <member name="M:System.Net.SocketAddress.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Net.SocketAddress" /> instance. </summary>
      <returns>true if the two <see cref="T:System.Net.SocketAddress" /> instances are equal; otherwise, false.</returns>
      <param name="comparand">The specified <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Net.SocketAddress" /> instance.</param>
    </member>
    <member name="P:System.Net.SocketAddress.Family">
      <summary>Gets the <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value of the current <see cref="T:System.Net.SocketAddress" />.</summary>
      <returns>One of the <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated values.</returns>
    </member>
    <member name="M:System.Net.SocketAddress.GetHashCode">
      <summary>Returns a hash value for the <see cref="T:System.Net.SocketAddress" />. </summary>
      <returns>An integer hash value for the socket address.</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Item(System.Int32)">
      <summary>Gets or sets the specified index element in the underlying buffer.</summary>
      <returns>The value of the specified index element in the underlying buffer.</returns>
      <param name="offset">The array index element of the desired information.</param>
      <exception cref="T:System.IndexOutOfRangeException">The specified index does not exist in the buffer (the <paramref name="offset" /> is. less than 0 or greater than or equal to the <see cref="P:System.Net.SocketAddress.Size" /> property).</exception>
    </member>
    <member name="P:System.Net.SocketAddress.Size">
      <summary>Gets the available buffer size that can be used for the <see cref="T:System.Net.SocketAddress" />.</summary>
      <returns>The buffer size, in bytes, available for the <see cref="T:System.Net.SocketAddress" />.</returns>
    </member>
    <member name="M:System.Net.SocketAddress.ToString">
      <summary>Returns a string that represents information about the socket address.</summary>
      <returns>A string that contains information about the <see cref="T:System.Net.SocketAddress" />.</returns>
    </member>
    <member name="T:System.Net.UploadProgressChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Net.WebClient.UploadProgressChanged" /> event of a <see cref="T:System.Net.WebClient" />.</summary>
    </member>
    <member name="P:System.Net.UploadProgressChangedEventArgs.BytesReceived">
      <summary>Gets the number of bytes received</summary>
      <returns>An <see cref="T:System.Int64" /> value that indicates the number of bytes received.</returns>
    </member>
    <member name="P:System.Net.UploadProgressChangedEventArgs.BytesSent">
      <summary>Gets the number of bytes sent.</summary>
      <returns>An <see cref="T:System.Int64" /> value that indicates the number of bytes sent.</returns>
    </member>
    <member name="P:System.Net.UploadProgressChangedEventArgs.TotalBytesToReceive">
      <summary>Gets the total number of bytes in a <see cref="T:System.Net.WebClient" /> data upload operation.</summary>
      <returns>An <see cref="T:System.Int64" /> value that indicates the number of bytes that will be received.</returns>
    </member>
    <member name="P:System.Net.UploadProgressChangedEventArgs.TotalBytesToSend">
      <summary>Gets the total number of bytes to send.</summary>
      <returns>An <see cref="T:System.Int64" /> value that indicates the number of bytes that will be sent.</returns>
    </member>
    <member name="T:System.Net.UploadProgressChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Net.WebClient.UploadProgressChanged" /> event of a <see cref="T:System.Net.WebClient" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Net.UploadProgressChangedEventArgs" /> containing event data.</param>
    </member>
    <member name="T:System.Net.UploadStringCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Net.WebClient.UploadStringCompleted" /> event.</summary>
    </member>
    <member name="P:System.Net.UploadStringCompletedEventArgs.Result">
      <summary>Gets the server reply to a string upload operation that is started by calling an <see cref="Overload:System.Net.WebClient.UploadStringAsync" /> method.</summary>
      <returns>A <see cref="T:System.Byte" /> array that contains the server reply.</returns>
      <exception cref="T:System.InvalidOperationException">The asynchronous request was cancelled. </exception>
    </member>
    <member name="T:System.Net.UploadStringCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Net.WebClient.UploadStringCompleted" /> event of a <see cref="T:System.Net.WebClient" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Net.UploadStringCompletedEventArgs" /> containing event data.</param>
    </member>
    <member name="T:System.Net.WebClient">
      <summary>Provides common methods for sending data to and receiving data from a resource identified by a URI.</summary>
    </member>
    <member name="M:System.Net.WebClient.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebClient" /> class. </summary>
    </member>
    <member name="P:System.Net.WebClient.AllowReadStreamBuffering">
      <summary>Gets or sets a value that indicates whether to buffer the data read from the Internet resource for a <see cref="T:System.Net.WebClient" /> instance.</summary>
      <returns>true to enable buffering of the data received from the Internet resource; false to disable buffering. The default is true.</returns>
    </member>
    <member name="P:System.Net.WebClient.AllowWriteStreamBuffering">
      <summary>Gets or sets a value that indicates whether to buffer the data written to the Internet resource for a <see cref="T:System.Net.WebClient" /> instance.</summary>
      <returns>true to enable buffering of the data written to the Internet resource; false to disable buffering. The default is true.</returns>
    </member>
    <member name="P:System.Net.WebClient.BaseAddress">
      <summary>Gets or sets the base URI for requests made by a <see cref="T:System.Net.WebClient" />.</summary>
      <returns>The base URI for requests made by a <see cref="T:System.Net.WebClient" />. If no base address has been specified, the <see cref="P:System.Net.WebClient.BaseAddress" /> property is initialized to the application origin (the absolute URI of the Silverlight XAP)...</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.WebClient.BaseAddress" /> is set to an invalid URI. The inner exception may contain information that will help you locate the error.</exception>
    </member>
    <member name="M:System.Net.WebClient.CancelAsync">
      <summary>Cancels a pending asynchronous operation. </summary>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.StackOverflowException">The execution stack overflowed because it contains too many nested method calls.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">A call was made to the <see cref="M:System.Threading.Thread.Abort" /> method to destroy a thread.</exception>
    </member>
    <member name="P:System.Net.WebClient.Credentials">
      <summary>Gets or sets the network credentials that are sent to the host and used to authenticate the request.</summary>
      <returns>An <see cref="T:System.Net.ICredentials" /> containing the authentication credentials for the request. The default is null.</returns>
    </member>
    <member name="E:System.Net.WebClient.DownloadProgressChanged">
      <summary>Occurs when an asynchronous download operation successfully transfers some or all of the data.</summary>
    </member>
    <member name="M:System.Net.WebClient.DownloadStringAsync(System.Uri)">
      <summary>Downloads the resource at the specified <see cref="T:System.Uri" /> as a string.</summary>
      <param name="address">The location of the resource to be downloaded.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="address" /> parameter is null.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.StackOverflowException">The execution stack overflowed because it contains too many nested method calls.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">A call was made to the <see cref="M:System.Threading.Thread.Abort" /> method to destroy a thread.</exception>
    </member>
    <member name="M:System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)">
      <summary>Downloads the resource at the specified <see cref="T:System.Uri" /> as a string.</summary>
      <param name="address">The location of the resource to be downloaded.</param>
      <param name="userToken">Provides a user-specified identifier for the asynchronous task. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="address" /> parameter is null.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.StackOverflowException">The execution stack overflowed because it contains too many nested method calls.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">A call was made to the <see cref="M:System.Threading.Thread.Abort" /> method to destroy a thread.</exception>
    </member>
    <member name="E:System.Net.WebClient.DownloadStringCompleted">
      <summary>Occurs when an asynchronous resource-download operation is completed. </summary>
    </member>
    <member name="P:System.Net.WebClient.Encoding">
      <summary>Gets and sets the <see cref="T:System.Text.Encoding" /> used to upload and download strings.</summary>
      <returns>A <see cref="T:System.Text.Encoding" /> that is used to encode strings. The default value of this property is <see cref="P:System.Text.Encoding.UTF8" />.</returns>
      <exception cref="T:System.ArgumentNullException">A null value was passed to set this property.</exception>
    </member>
    <member name="M:System.Net.WebClient.GetWebRequest(System.Uri)">
      <summary>Returns a <see cref="T:System.Net.WebRequest" /> object for the specified resource.</summary>
      <returns>A new <see cref="T:System.Net.WebRequest" /> object for the specified resource.</returns>
      <param name="address">A <see cref="T:System.Uri" /> that identifies the resource to request.</param>
    </member>
    <member name="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
      <summary>Returns the <see cref="T:System.Net.WebResponse" /> for the specified <see cref="T:System.Net.WebRequest" /> using the specified <see cref="T:System.IAsyncResult" />.</summary>
      <returns>A <see cref="T:System.Net.WebResponse" /> containing the response for the specified <see cref="T:System.Net.WebRequest" />.</returns>
      <param name="request">A <see cref="T:System.Net.WebRequest" /> that is used to obtain the response.</param>
      <param name="result">An <see cref="T:System.IAsyncResult" /> object obtained from a previous call to <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> .</param>
    </member>
    <member name="P:System.Net.WebClient.Headers">
      <summary>Gets or sets a collection of header name/value pairs associated with the request.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> containing header name/value pairs associated with this request.</returns>
    </member>
    <member name="P:System.Net.WebClient.IsBusy">
      <summary>Gets a value that indicates whether a Web request is in progress.</summary>
      <returns>true to indicate a Web request is in progress; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.WebClient.DownloadProgressChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Net.DownloadProgressChangedEventArgs" /> object containing event data.</param>
    </member>
    <member name="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.WebClient.DownloadStringCompleted" /> event.</summary>
      <param name="e">A <see cref="T:System.Net.DownloadStringCompletedEventArgs" /> object containing event data.</param>
    </member>
    <member name="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.WebClient.OpenReadCompleted" /> event.</summary>
      <param name="e">A <see cref="T:System.Net.OpenReadCompletedEventArgs" />  object containing event data.</param>
    </member>
    <member name="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.WebClient.OpenWriteCompleted" /> event.</summary>
      <param name="e">A <see cref="T:System.Net.OpenWriteCompletedEventArgs" /> object containing event data.</param>
    </member>
    <member name="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.WebClient.UploadProgressChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.Net.UploadProgressChangedEventArgs" /> object containing event data.</param>
    </member>
    <member name="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.WebClient.UploadStringCompleted" /> event.</summary>
      <param name="e">An <see cref="T:System.Net.UploadStringCompletedEventArgs" />  object containing event data.</param>
    </member>
    <member name="M:System.Net.WebClient.OnWriteStreamClosed(System.Net.WriteStreamClosedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.WebClient.WriteStreamClosed" /> event.</summary>
      <param name="e">An <see cref="T:System.Net.WriteStreamClosedEventArgs" />  object containing event data.</param>
    </member>
    <member name="M:System.Net.WebClient.OpenReadAsync(System.Uri)">
      <summary>Opens a readable stream to the specified resource.</summary>
      <param name="address">The location of the resource to be downloaded.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="address" /> parameter is null.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.StackOverflowException">The execution stack overflowed because it contains too many nested method calls.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">A call was made to the <see cref="M:System.Threading.Thread.Abort" /> method to destroy a thread.</exception>
    </member>
    <member name="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)">
      <summary>Opens a readable stream to the specified resource.</summary>
      <param name="address">The location of the resource to be downloaded.</param>
      <param name="userToken">Provides a user-specified identifier for the asynchronous task. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="address" /> parameter is null.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.StackOverflowException">The execution stack overflowed because it contains too many nested method calls.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">A call was made to the <see cref="M:System.Threading.Thread.Abort" /> method to destroy a thread.</exception>
    </member>
    <member name="E:System.Net.WebClient.OpenReadCompleted">
      <summary>Occurs when an asynchronous resource-read operation is completed.</summary>
    </member>
    <member name="M:System.Net.WebClient.OpenWriteAsync(System.Uri)">
      <summary>Opens a stream for writing data to the specified resource. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the data. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="address" /> parameter is null.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.StackOverflowException">The execution stack overflowed because it contains too many nested method calls.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">A call was made to the <see cref="M:System.Threading.Thread.Abort" /> method to destroy a thread.</exception>
    </member>
    <member name="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)">
      <summary>Opens a stream for writing data to the specified resource. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the data. </param>
      <param name="method">The method used to send the data to the resource. If null, the default is POST for HTTP.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="address" /> parameter is null.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.StackOverflowException">The execution stack overflowed because it contains too many nested method calls.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">A call was made to the <see cref="M:System.Threading.Thread.Abort" /> method to destroy a thread.</exception>
    </member>
    <member name="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)">
      <summary>Opens a stream for writing data to the specified resource, using the specified method. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the data.</param>
      <param name="method">The method used to send the data to the resource. If null, the default is POST for HTTP.</param>
      <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="address" /> parameter is null.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.StackOverflowException">The execution stack overflowed because it contains too many nested method calls.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">A call was made to the <see cref="M:System.Threading.Thread.Abort" /> method to destroy a thread.</exception>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- An error occurred while opening the stream. </exception>
    </member>
    <member name="E:System.Net.WebClient.OpenWriteCompleted">
      <summary>Occurs when an asynchronous operation to open a stream to write data to a resource completes.</summary>
    </member>
    <member name="P:System.Net.WebClient.ResponseHeaders">
      <summary>Gets a collection of header name/value pairs associated with the response.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> containing header name/value pairs associated with the response, or null if no response has been received.</returns>
    </member>
    <member name="E:System.Net.WebClient.UploadProgressChanged">
      <summary>Occurs when an asynchronous upload operation successfully transfers some or all of the data.</summary>
    </member>
    <member name="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String)">
      <summary>Uploads the specified string to the specified resource. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page. </param>
      <param name="data">The string to be uploaded.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="address" /> parameter is null-or- <paramref name="data" /> is null.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.StackOverflowException">The execution stack overflowed because it contains too many nested method calls.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">A call was made to the <see cref="M:System.Threading.Thread.Abort" /> method to destroy a thread.</exception>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- There was no response from the server hosting the resource.</exception>
    </member>
    <member name="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)">
      <summary>Uploads the specified string to the specified resource. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</param>
      <param name="method">The HTTP method used to send the file to the resource. If null, the default is POST for HTTP.</param>
      <param name="data">The string to be uploaded.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="address" /> parameter is null-or- <paramref name="data" /> is null.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.StackOverflowException">The execution stack overflowed because it contains too many nested method calls.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">A call was made to the <see cref="M:System.Threading.Thread.Abort" /> method to destroy a thread.</exception>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- There was no response from the server hosting the resource.</exception>
    </member>
    <member name="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)">
      <summary>Uploads the specified string to the specified resource. This method does not block the calling thread.</summary>
      <param name="address">The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</param>
      <param name="method">The HTTP method used to send the file to the resource. If null, the default is POST for HTTP.</param>
      <param name="data">The string to be uploaded.</param>
      <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="address" /> parameter is null-or- <paramref name="data" /> is null.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.StackOverflowException">The execution stack overflowed because it contains too many nested method calls.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">A call was made to the <see cref="M:System.Threading.Thread.Abort" /> method to destroy a thread.</exception>
      <exception cref="T:System.Net.WebException">The URI formed by combining <see cref="P:System.Net.WebClient.BaseAddress" /> and <paramref name="address" /> is invalid.-or- There was no response from the server hosting the resource.</exception>
    </member>
    <member name="E:System.Net.WebClient.UploadStringCompleted">
      <summary>Occurs when an asynchronous string-upload operation completes.</summary>
    </member>
    <member name="P:System.Net.WebClient.UseDefaultCredentials">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that controls whether default credentials are sent with requests.</summary>
      <returns>true if the default credentials are used; otherwise false. The default value is true.</returns>
    </member>
    <member name="E:System.Net.WebClient.WriteStreamClosed">
      <summary>Occurs when an asynchronous write stream operation completes.</summary>
    </member>
    <member name="T:System.Net.WebException">
      <summary>The exception that is thrown when an error occurs while accessing the network through a pluggable protocol.</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebException" /> class.</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebException" /> class with the specified error message.</summary>
      <param name="message">The text of the error message. </param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebException" /> class with the specified error message and nested exception.</summary>
      <param name="message">The text of the error message. </param>
      <param name="innerException">A nested exception. </param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebException" /> class with the specified error message, nested exception, status, and response.</summary>
      <param name="message">The text of the error message.</param>
      <param name="innerException">A nested exception.</param>
      <param name="status">One of the <see cref="T:System.Net.WebExceptionStatus" /> values.</param>
      <param name="response">A <see cref="T:System.Net.WebResponse" /> instance that contains the response from the remote host.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Net.WebExceptionStatus)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebException" /> class with the specified error message and status.</summary>
      <param name="message">The text of the error message. </param>
      <param name="status">One of the <see cref="T:System.Net.WebExceptionStatus" /> values. </param>
    </member>
    <member name="P:System.Net.WebException.Response">
      <summary>Gets the response that the remote host returned.</summary>
      <returns>If a response is available from the Internet resource, a <see cref="T:System.Net.WebResponse" /> instance that contains the error response from an Internet resource; otherwise, null.</returns>
    </member>
    <member name="P:System.Net.WebException.Status">
      <summary>Gets the status of the response.</summary>
      <returns>One of the <see cref="T:System.Net.WebExceptionStatus" /> values.</returns>
    </member>
    <member name="T:System.Net.WebExceptionStatus">
      <summary>Defines status codes for the <see cref="T:System.Net.WebException" /> class.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Success">
      <summary>No error was encountered.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectFailure">
      <summary>The remote service point could not be contacted at the transport level.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SendFailure">
      <summary>A complete request could not be sent to the remote server.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestCanceled">
      <summary>The request was canceled, the <see cref="M:System.Net.WebRequest.Abort" /> method was called, or an unclassifiable error occurred. This is the default value for <see cref="P:System.Net.WebException.Status" />.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Pending">
      <summary>An internal asynchronous request is pending.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.UnknownError">
      <summary>An exception of unknown type has occurred.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.MessageLengthLimitExceeded">
      <summary>A message was received that exceeded the specified limit when sending a request or receiving a response from the server.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.NameResolutionFailure">
      <summary>The name resolver service could not resolve the host name. Not supported. Present in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ReceiveFailure">
      <summary>A complete response was not received from the remote server. Not supported. Present in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.PipelineFailure">
      <summary>The request was a pipelined request and the connection was closed before the response was received. Not supported. Present in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ProtocolError">
      <summary>The response received from the server was complete but indicated a protocol-level error. For example, an HTTP protocol error such as 401 Access Denied would use this status. Not supported. Present in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectionClosed">
      <summary>The connection was prematurely closed. Not supported. Present in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.TrustFailure">
      <summary>A server certificate could not be validated. Not supported. Present in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SecureChannelFailure">
      <summary>An error occurred while establishing a connection using SSL. Not supported. Present in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ServerProtocolViolation">
      <summary>The server response was not a valid HTTP response. Not supported. Present in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.KeepAliveFailure">
      <summary>The connection for a request that specifies the Keep-alive header was closed unexpectedly. Not supported. Present in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Timeout">
      <summary>No response was received during the time-out period for a request. Not supported. Present in Silverlight for Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ProxyNameResolutionFailure">
      <summary>The name resolver service could not resolve the proxy host name. Not supported. Present in Silverlight for Windows Phone.</summary>
    </member>
    <member name="T:System.Net.WebHeaderCollection">
      <summary>Contains protocol headers associated with a request or response.</summary>
    </member>
    <member name="M:System.Net.WebHeaderCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebHeaderCollection" /> class.</summary>
    </member>
    <member name="P:System.Net.WebHeaderCollection.AllKeys">
      <summary>Gets the collection of header name/value pairs associated with the request.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> containing the header name/value pairs associated with this request.</returns>
    </member>
    <member name="P:System.Net.WebHeaderCollection.Count">
      <summary>Gets the number of headers in the collection.</summary>
      <returns>An <see cref="T:System.Int32" /> indicating the number of headers in the <see cref="T:System.Net.WebHeaderCollection" /> associated with a request.</returns>
    </member>
    <member name="P:System.Net.WebHeaderCollection.Item(System.Net.HttpRequestHeader)">
      <summary>Gets or sets the specified request header.</summary>
      <returns>A <see cref="T:System.String" /> instance containing the specified header value.</returns>
      <param name="header">The request header value.</param>
      <exception cref="T:System.InvalidOperationException">On a get or set operation, the request header specified in the <paramref name="header" /> parameter is a restricted header. The <see cref="T:System.Net.WebHeaderCollection" /> class does not allow a user to get or set instances of this restricted header in this <see cref="T:System.Net.WebHeaderCollection" /> instance. </exception>
    </member>
    <member name="P:System.Net.WebHeaderCollection.Item(System.String)">
      <summary>Gets or sets the specified request header.</summary>
      <returns>A <see cref="T:System.String" /> instance containing the specified header value.</returns>
      <param name="name">The name of the requested header.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter contains illegal characters- or -an attempt was made to set a restricted header on the <see cref="T:System.Net.WebHeaderCollection" /> object associated with a <see cref="T:System.Net.HttpWebRequest" /> object</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter was null.</exception>
      <exception cref="T:System.InvalidOperationException">On a get or set operation, the request header specified in the <paramref name="name" /> parameter is a restricted header. The <see cref="T:System.Net.WebHeaderCollection" /> class does not allow a user to get or set instances of this restricted header in this <see cref="T:System.Net.WebHeaderCollection" /> instance. </exception>
    </member>
    <member name="M:System.Net.WebHeaderCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that can iterate through the <see cref="T:System.Net.WebHeaderCollection" /> instance. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Net.WebHeaderCollection" />.</returns>
    </member>
    <member name="T:System.Net.WebRequest">
      <summary>Makes a request to a Uniform Resource Identifier (URI). This is an abstract class.</summary>
    </member>
    <member name="M:System.Net.WebRequest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebRequest" /> class.</summary>
    </member>
    <member name="M:System.Net.WebRequest.Abort">
      <summary>Aborts the Request.</summary>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>When overridden in a descendant class, provides an asynchronous method to request a stream.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate.</param>
      <param name="state">An object containing state information for this asynchronous request.</param>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>When overridden in a descendant class, begins an asynchronous request for an Internet resource.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate.</param>
      <param name="state">An object containing state information for this asynchronous request.</param>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="P:System.Net.WebRequest.ContentLength">
      <summary>When overridden in a descendant class, gets or sets the content length of the request data being sent.</summary>
      <returns>The number of bytes of request data being sent.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
    </member>
    <member name="P:System.Net.WebRequest.ContentType">
      <summary>When overridden in a descendant class, gets or sets the content type of the request data being sent.</summary>
      <returns>The content type of the request data.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.String)">
      <summary>Initializes a new <see cref="T:System.Net.WebRequest" /> instance for the specified URI scheme.</summary>
      <returns>A <see cref="T:System.Net.WebRequest" /> descendant for the specific URI scheme.</returns>
      <param name="requestUriString">The URI string that identifies the Internet resource.</param>
      <exception cref="T:System.NotSupportedException">The request scheme specified in <paramref name="requestUriString" /> has not been registered. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUriString" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have permission to connect to the requested URI or a URI that the request is redirected to. </exception>
      <exception cref="T:System.UriFormatException">The URI specified in <paramref name="requestUriString" /> is not a valid URI. </exception>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.Uri)">
      <summary>Initializes a new <see cref="T:System.Net.WebRequest" /> instance for the specified URI scheme.</summary>
      <returns>A <see cref="T:System.Net.WebRequest" /> descendant for the specific URI scheme.</returns>
      <param name="requestUri">A <see cref="T:System.Uri" /> containing the URI of the requested resource.</param>
      <exception cref="T:System.NotSupportedException">The request scheme specified in <paramref name="requestUri" /> has not been registered. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have permission to connect to the requested URI or a URI that the request is redirected to. </exception>
    </member>
    <member name="M:System.Net.WebRequest.CreateHttp(System.String)">
      <summary>Initializes a new <see cref="T:System.Net.HttpWebRequest" /> instance for the specified URI string.</summary>
      <returns>An <see cref="T:System.Net.HttpWebRequest" /> instance for the specific URI string.</returns>
      <param name="requestUriString">A URI string that identifies the Internet resource. </param>
      <exception cref="T:System.NotSupportedException">The request scheme specified in <paramref name="requestUriString" /> is the http or https scheme. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUriString" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have permission to connect to the requested URI or a URI that the request is redirected to. </exception>
      <exception cref="T:System.UriFormatException">The URI specified in <paramref name="requestUriString" /> is not a valid URI. </exception>
    </member>
    <member name="M:System.Net.WebRequest.CreateHttp(System.Uri)">
      <summary>Initializes a new <see cref="T:System.Net.HttpWebRequest" /> instance for the specified URI.</summary>
      <returns>An <see cref="T:System.Net.HttpWebRequest" /> instance for the specific URI string.</returns>
      <param name="requestUri">A URI that identifies the Internet resource.</param>
      <exception cref="T:System.NotSupportedException">The request scheme specified in <paramref name="requestUri" /> is the http or https scheme. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have permission to connect to the requested URI or a URI that the request is redirected to. </exception>
      <exception cref="T:System.UriFormatException">The URI specified in <paramref name="requestUri" /> is not a valid URI. </exception>
    </member>
    <member name="P:System.Net.WebRequest.CreatorInstance">
      <summary>When overridden in a descendant class, gets the factory object derived from the <see cref="T:System.Net.IWebRequestCreate" /> class used to create the <see cref="T:System.Net.WebRequest" /> instantiated for making the request to the specified URI.</summary>
      <returns>The derived <see cref="T:System.Net.WebRequest" /> type returned by the <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> method.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Credentials">
      <summary>When overridden in a descendant class, gets or sets the network credentials used for authenticating the request with the Internet resource.</summary>
      <returns>An <see cref="T:System.Net.ICredentials" /> containing the authentication credentials associated with the request. The default is null.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>When overridden in a descendant class, returns a <see cref="T:System.IO.Stream" /> for writing data to the Internet resource.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> to write data to.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references a pending request for a stream.</param>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>When overridden in a descendant class, returns a <see cref="T:System.Net.WebResponse" />.</summary>
      <returns>A <see cref="T:System.Net.WebResponse" /> that contains a response to the Internet request.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that references a pending request for a response.</param>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="P:System.Net.WebRequest.Headers">
      <summary>When overridden in a descendant class, gets or sets the collection of header name/value pairs associated with the request.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> containing the header name/value pairs associated with this request.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
    </member>
    <member name="P:System.Net.WebRequest.Method">
      <summary>When overridden in a descendant class, gets or sets the protocol method to use in this request.</summary>
      <returns>The protocol method to use in this request.</returns>
      <exception cref="T:System.NotImplementedException">If the property is not overridden in a descendant class, any attempt is made to get or set the property. </exception>
    </member>
    <member name="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
      <summary>Registers a <see cref="T:System.Net.WebRequest" /> descendant for the specified URI.</summary>
      <returns>true if registration is successful; otherwise, false.</returns>
      <param name="prefix">The complete URI or URI prefix that the <see cref="T:System.Net.WebRequest" /> descendant services.</param>
      <param name="creator">The create method that the <see cref="T:System.Net.WebRequest" /> calls to create the <see cref="T:System.Net.WebRequest" /> descendant.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> is null-or- <paramref name="creator" /> is null. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="prefix" /> is unknown or not supported.</exception>
    </member>
    <member name="P:System.Net.WebRequest.RequestUri">
      <summary>When overridden in a descendant class, gets the URI of the Internet resource associated with the request.</summary>
      <returns>A <see cref="T:System.Uri" /> representing the resource associated with the request.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
    </member>
    <member name="P:System.Net.WebRequest.UseDefaultCredentials">
      <summary>When overridden in a descendant class, gets or sets a <see cref="T:System.Boolean" /> value that controls whether default credentials are sent with requests.</summary>
      <returns>true if the default credentials are used; otherwise false. For requests created using the default <see cref="P:System.Net.Browser.WebRequestCreator.BrowserHttp" /> stack, the default value is true.  For requests created using the <see cref="P:System.Net.Browser.WebRequestCreator.ClientHttp" /> stack, the default value is false.</returns>
      <exception cref="T:System.NotImplementedException">This property is not implemented.</exception>
    </member>
    <member name="T:System.Net.WebResponse">
      <summary>Provides a response from a Uniform Resource Identifier (URI). This is an abstract class.</summary>
    </member>
    <member name="M:System.Net.WebResponse.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.WebResponse" /> class.</summary>
    </member>
    <member name="M:System.Net.WebResponse.Close">
      <summary>When overridden by a descendant class, closes the response stream.</summary>
      <exception cref="T:System.NotSupportedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="P:System.Net.WebResponse.ContentLength">
      <summary>When overridden in a descendant class, gets or sets the content length of data being received.</summary>
      <returns>The number of bytes returned from the Internet resource.</returns>
      <exception cref="T:System.NotSupportedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
    </member>
    <member name="P:System.Net.WebResponse.ContentType">
      <summary>When overridden in a derived class, gets or sets the content type of the data being received.</summary>
      <returns>A string that contains the content type of the response.</returns>
      <exception cref="T:System.NotSupportedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Net.WebResponse.GetResponseStream">
      <summary>When overridden in a descendant class, returns the data stream from the Internet resource.</summary>
      <returns>An instance of the <see cref="T:System.IO.Stream" /> class for reading data from the Internet resource.</returns>
      <exception cref="T:System.NotSupportedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="P:System.Net.WebResponse.Headers">
      <summary>When overridden in a derived class, gets a collection of header name-value pairs associated with this request.</summary>
      <returns>An instance of the <see cref="T:System.Net.WebHeaderCollection" /> class that contains header values associated with this response.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
    </member>
    <member name="P:System.Net.WebResponse.ResponseUri">
      <summary>When overridden in a derived class, gets the URI of the Internet resource that actually responded to the request.</summary>
      <returns>An instance of the <see cref="T:System.Uri" /> class that contains the URI of the Internet resource that actually responded to the request.</returns>
      <exception cref="T:System.NotSupportedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception>
    </member>
    <member name="P:System.Net.WebResponse.SupportsHeaders">
      <summary>Gets a value that indicates whether the <see cref="P:System.Net.WebResponse.Headers" /> property is supported by the descendant class for the <see cref="T:System.Net.WebResponse" /> instance.</summary>
      <returns>true if the <see cref="P:System.Net.WebResponse.Headers" /> property is supported by the <see cref="T:System.Net.HttpWebRequest" /> instance in the descendant class; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.WebResponse.System#IDisposable#Dispose">
      <summary>When overridden in a derived class, releases all resources used by the <see cref="T:System.Net.WebResponse" />.</summary>
      <exception cref="T:System.NotSupportedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="T:System.Net.WriteStreamClosedEventArgs">
      <summary>Provides data for the <see cref="E:System.Net.WebClient.WriteStreamClosed" /> event.</summary>
    </member>
    <member name="P:System.Net.WriteStreamClosedEventArgs.Error">
      <summary>Gets the error associated with a <see cref="E:System.Net.WebClient.WriteStreamClosed" /> event.</summary>
      <returns>The exception associated with a <see cref="E:System.Net.WebClient.WriteStreamClosed" /> event when an error occurs.</returns>
    </member>
    <member name="T:System.Net.WriteStreamClosedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Net.WebClient.WriteStreamClosed" /> event of a <see cref="T:System.Net.WebClient" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Net.WriteStreamClosedEventArgs" /> containing event data.</param>
    </member>
    <member name="P:System.Net.HttpWebRequest.Credentials">
      <summary>Gets or sets authentication information for the request.</summary>
      <returns>An <see cref="T:System.Net.ICredentials" /> that contains the authentication credentials associated with the request. The default is null.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.Finalize"></member>
    <member name="M:System.Net.HttpWebResponse.Close">
      <summary>Closes the response stream.</summary>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentLength">
      <summary>Gets the length of the content returned by the request.</summary>
      <returns>The number of bytes returned by the request. Content length does not include header information.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentType">
      <summary>Gets the content type of the response.</summary>
      <returns>A string that contains the content type of the response.</returns>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetResponseStream">
      <summary>Gets the stream that is used to read the body of the response from the server.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> containing the body of the response.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.Headers">
      <summary>Gets the headers that are associated with this response from the server.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> that contains the header information returned with the response.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.ResponseUri">
      <summary>Gets the URI of the Internet resource that responded to the request.</summary>
      <returns>A <see cref="T:System.Uri" /> that contains the URI of the Internet resource that responded to the request.</returns>
    </member>
    <member name="M:System.Net.HttpWebResponse.System#IDisposable#Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Net.HttpWebResponse" />.</summary>
    </member>
    <member name="M:System.Net.WebHeaderCollection.ToString"></member>
    <member name="T:System.Net.NetworkInformation.NetworkAddressChangedEventHandler">
      <summary>References one or more methods to be called when the address of a network interface changes.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains data about the event. </param>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkChange">
      <summary>Allows applications to receive notification when the Internet Protocol (IP) address of a network interface, also called a network card or adapter, changes.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkChange.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.NetworkChange" /> class.</summary>
    </member>
    <member name="E:System.Net.NetworkInformation.NetworkChange.NetworkAddressChanged">
      <summary>Occurs when the IP address of a network interface changes.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInterface">
      <summary>Provides availability information for a network interface.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInterface.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> class.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable">
      <summary>Indicates whether any network connection is available.</summary>
      <returns>true if a network connection is available; otherwise, false.</returns>
    </member>
    <member name="T:System.Net.Sockets.AddressFamily">
      <summary>Specifies the addressing scheme that an instance of the <see cref="T:System.Net.Sockets.Socket" /> class can use.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unknown">
      <summary>An unknown address family.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unspecified">
      <summary>An address family has not been specified.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetwork">
      <summary>An address for IP version 4. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetworkV6">
      <summary>An address for IP version 6.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unix">
      <summary>Unix local to host address. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.ImpLink">
      <summary>ARPANET IMP address. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Pup">
      <summary>Address for PUP protocols. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Chaos">
      <summary>Address for MIT CHAOS protocols. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NS">
      <summary>Address for Xerox NS protocols. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ipx">
      <summary>IPX or SPX address. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Iso">
      <summary>Address for ISO protocols. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Osi">
      <summary>Address for OSI protocols. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ecma">
      <summary>European Computer Manufacturers Association (ECMA) address. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataKit">
      <summary>Address for Datakit protocols. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ccitt">
      <summary>Addresses for CCITT protocols, such as X.25. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Sna">
      <summary>IBM SNA address. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DecNet">
      <summary>DECnet address. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataLink">
      <summary>Direct data-link interface address. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Lat">
      <summary>LAT address. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.HyperChannel">
      <summary>NSC Hyperchannel address. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.AppleTalk">
      <summary>AppleTalk address. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetBios">
      <summary>NetBios address. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.VoiceView">
      <summary>VoiceView address. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.FireFox">
      <summary>FireFox address. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Banyan">
      <summary>Banyan address. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Atm">
      <summary>Native ATM services address. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Cluster">
      <summary>Address for Microsoft cluster products. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ieee12844">
      <summary>IEEE 1284.4 workgroup address. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Irda">
      <summary>IrDA address. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetworkDesigners">
      <summary>Address for Network Designers OSI gateway-enabled protocols. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Max">
      <summary>MAX address. </summary>
    </member>
    <member name="T:System.Net.Sockets.ProtocolType">
      <summary>Specifies the protocol that the <see cref="T:System.Net.Sockets.Socket" /> class supports.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Tcp">
      <summary>The Transmission Control Protocol (TCP).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unspecified">
      <summary>The protocol type is unspecified.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unknown">
      <summary>An unknown protocol type. </summary>
    </member>
    <member name="T:System.Net.Sockets.Socket">
      <summary>Implements the Berkeley sockets interface.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.Socket" /> class using the specified address family, socket type and protocol.</summary>
      <param name="addressFamily">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values.</param>
      <param name="socketType">One of the <see cref="T:System.Net.Sockets.SocketType" /> values.</param>
      <param name="protocolType">One of the <see cref="T:System.Net.Sockets.ProtocolType" /> values.</param>
      <exception cref="T:System.ArgumentException">A parameter was invalid. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">The combination of <paramref name="addressFamily" />, <paramref name="socketType" />, and <paramref name="protocolType" /> results in an invalid socket. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.AddressFamily">
      <summary>Gets the address family of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Cancels an outstanding asynchronous socket operation for a remote host connection.</summary>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object for the asynchronous socket operation that should be canceled.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is null. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close">
      <summary>Closes the <see cref="T:System.Net.Sockets.Socket" /> connection and releases all associated resources.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close(System.Int32)">
      <summary>Closes the <see cref="T:System.Net.Sockets.Socket" /> connection and releases all associated resources with a specified timeout to allow queued data to be sent.</summary>
      <param name="timeout">The maximum amount of time, in seconds, to wait in order to send any remaining data, and then close the <see cref="T:System.Net.Sockets.Socket" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="timeout" /> is less than 0. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Begins an asynchronous request for a remote host connection.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object passed in the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object passed in the <paramref name="e" /> parameter will not be raised. The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object passed in the <paramref name="e" /> parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentException">An argument is not valid. This exception occurs if multiple buffers are specified, the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is not null. </exception>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is listening or a socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object passed in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method. This exception also occurs if address family of the <see cref="T:System.Net.Sockets.Socket" /> and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> are not the same address family.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Begins an asynchronous request for a remote host connection.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object passed in the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object passed in the <paramref name="e" /> parameter will not be raised. The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object passed in the <paramref name="e" /> parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="socketType">The socket type to use establishing the connection.</param>
      <param name="protocolType">The protocol type to use establishing the connection.</param>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentException">An argument is not valid. This exception occurs if multiple buffers are specified, the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is not null. </exception>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is listening or a socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object passed in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method. This exception also occurs if address family of the <see cref="T:System.Net.Sockets.Socket" /> and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> are not the same address family.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Connected">
      <summary>Gets a value that indicates whether a <see cref="T:System.Net.Sockets.Socket" /> is connected to a remote host as of the last operation.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> was connected to a remote resource as of the most recent operation; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.Socket" />, and optionally disposes of the managed resources.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.Socket" />, and optionally disposes of the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to releases only unmanaged resources.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.Finalize">
      <summary>Frees resources used by the <see cref="T:System.Net.Sockets.Socket" /> class.</summary>
    </member>
    <member name="P:System.Net.Sockets.Socket.NoDelay">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> is using the Nagle algorithm.</summary>
      <returns>false if the <see cref="T:System.Net.Sockets.Socket" /> uses the Nagle algorithm; otherwise, true. The default is false.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv4">
      <summary>Gets a value indicating whether IPv4 support is available and enabled on the current host.</summary>
      <returns>true if the current host supports the IPv4 protocol; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv6">
      <summary>Gets a value indicating whether IPv6 support is available and enabled on the current host.</summary>
      <returns>true if the current host supports the IPv4 protocol; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.ProtocolType">
      <summary>Gets the protocol type of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>One of the <see cref="T:System.Net.Sockets.ProtocolType" /> values.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Begins an asynchronous request to receive data from a connected <see cref="T:System.Net.Sockets.Socket" /> object.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object passed in the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object passed in the <paramref name="e" /> parameter will not be raised. The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object in the <paramref name="e" /> parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentException">An argument was invalid. The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> or <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> properties on the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object passed in the <paramref name="e" /> parameter must reference valid buffers. One or the other of these properties may be set, but not both at the same time.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value for an internal socket option associated with the <see cref="T:System.Net.Sockets.Socket" /> was incorrect.</exception>
      <exception cref="T:System.InvalidOperationException">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object passed in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveBufferSize">
      <summary>Gets or sets a value that specifies the size of the receive buffer of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the size, in bytes, of the receive buffer. The default is 8192.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.RemoteEndPoint">
      <summary>Gets the remote endpoint.</summary>
      <returns>The <see cref="T:System.Net.EndPoint" /> with which the <see cref="T:System.Net.Sockets.Socket" /> is communicating.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" /> object.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object passed in the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object passed in the <paramref name="e" /> parameter will not be raised. The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object passed in the <paramref name="e" /> parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> or <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> properties on the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object passed in the <paramref name="e" /> parameter must reference valid buffers. One or the other of these properties may be set, but not both at the same time.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value for an internal socket option associated with the <see cref="T:System.Net.Sockets.Socket" /> was incorrect.</exception>
      <exception cref="T:System.InvalidOperationException">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object passed in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">The <see cref="T:System.Net.Sockets.Socket" /> is not yet connected.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendBufferSize">
      <summary>Gets or sets a value that specifies the size of the send buffer of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the size, in bytes, of the send buffer. The default is 8192.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)">
      <summary>Disables sends and receives on a <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="how">One of the <see cref="T:System.Net.Sockets.SocketShutdown" /> values that specifies the operation that will no longer be allowed.</param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Ttl">
      <summary>Gets or sets a value that specifies the Time To Live (TTL) value of Internet Protocol (IP) packets sent by the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>The TTL value.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The TTL value cannot be set to a value less than 0.</exception>
      <exception cref="T:System.NotSupportedException">This property can be set only for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncEventArgs">
      <summary>Represents an asynchronous socket operation.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
      <summary>Creates an empty <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> instance.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
      <summary>Gets the data buffer to use with an asynchronous socket method.</summary>
      <returns>A <see cref="T:System.Byte" /> array that represents the data buffer to use with an asynchronous socket method.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
      <summary>Gets or sets an array of data buffers to use with an asynchronous socket method.</summary>
      <returns>An array of data buffers to use with an asynchronous socket method.</returns>
      <exception cref="T:System.ArgumentException">There are ambiguous buffers specified on a set operation. This exception occurs if a value other than null is passed and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property is also not null.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
      <summary>Gets the number of bytes transferred in the socket operation.</summary>
      <returns>The number of bytes transferred in the socket operation.</returns>
    </member>
    <member name="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
      <summary>An event that indicates an asynchronous operation is completed.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
      <summary>Gets the exception in the case of a connection failure when a <see cref="T:System.Net.DnsEndPoint" /> was used.</summary>
      <returns>A <see cref="T:System.Exception" /> that indicates the cause of the connection error when a <see cref="T:System.Net.DnsEndPoint" /> was specified for the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> property.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket">
      <summary>The created and connected <see cref="T:System.Net.Sockets.Socket" /> object after successful completion of the <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" /> method.</summary>
      <returns>The connected <see cref="T:System.Net.Sockets.Socket" /> object. </returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Count">
      <summary>Gets the maximum amount of data, in bytes, to send or receive in an asynchronous operation.</summary>
      <returns>The maximum amount of data, in bytes, to send or receive.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> instance and optionally disposes of the managed resources.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize">
      <summary>Frees resources used by the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> class.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
      <summary>Gets the type of socket operation most recently performed with this object.</summary>
      <returns>The type of socket operation most recently performed with this <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
      <summary>Gets the offset, in bytes, into the data buffer referenced by the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property.</summary>
      <returns>The offset, in bytes, into the data buffer referenced by the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Represents a method that is called when an asynchronous operation completes.</summary>
      <param name="e">The event that is signaled.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
      <summary>Gets or sets the remote IP or DNS endpoint for an asynchronous operation.</summary>
      <returns>The remote IP endpoint for an asynchronous operation.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
      <summary>Sets the data buffer to use with an asynchronous socket method.</summary>
      <param name="buffer">The data buffer to use with an asynchronous socket method.</param>
      <param name="offset">The offset, in bytes, in the data buffer where the operation starts.</param>
      <param name="count">The maximum amount of data, in bytes, to send or receive in the buffer.</param>
      <exception cref="T:System.ArgumentException">There are ambiguous buffers specified. This exception occurs if the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property is also not null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is also not null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">An argument was out of range. This exception occurs if the <paramref name="offset" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property. This exception also occurs if the <paramref name="count" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property minus the <paramref name="offset" /> parameter.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
      <summary>Sets the data buffer to use with an asynchronous socket method.</summary>
      <param name="offset">The offset, in bytes, in the data buffer where the operation starts.</param>
      <param name="count">The maximum amount of data, in bytes, to send or receive in the buffer.</param>
      <exception cref="T:System.ArgumentException">There are ambiguous buffers specified. This exception occurs if the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property is also not null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is also not null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">An argument was out of range. This exception occurs if the <paramref name="offset" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property. This exception also occurs if the <paramref name="count" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property minus the <paramref name="offset" /> parameter.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketClientAccessPolicyProtocol">
      <summary>Gets or sets the method to download the policy file that an instance of the <see cref="T:System.Net.Sockets.Socket" /> class will use.</summary>
      <returns>The method to download the policy file that an instance of the <see cref="T:System.Net.Sockets.Socket" /> class will use. The default is <see cref="F:System.Net.Sockets.SocketClientAccessPolicyProtocol.Tcp" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
      <summary>Gets or sets the result of the asynchronous socket operation.</summary>
      <returns>The result of the asynchronous socket operation.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
      <summary>Gets or sets a user or application object associated with this asynchronous socket operation.</summary>
      <returns>An object that represents the user or application object associated with this asynchronous socket operation.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncOperation">
      <summary>The type of asynchronous socket operation most recently performed with this object.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.None">
      <summary>None of the socket operations.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Connect">
      <summary>A socket Connect operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Receive">
      <summary>A socket Receive operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Send">
      <summary>A socket Send operation.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketClientAccessPolicyProtocol">
      <summary>Specifies the method to download the policy file that an instance of the <see cref="T:System.Net.Sockets.Socket" /> class will use.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketClientAccessPolicyProtocol.Tcp">
      <summary>The <see cref="T:System.Net.Sockets.Socket" /> class will attempt to download the socket policy file using custom TCP protocol running on TCP port 943. </summary>
    </member>
    <member name="F:System.Net.Sockets.SocketClientAccessPolicyProtocol.Http">
      <summary>The <see cref="T:System.Net.Sockets.Socket" /> class will attempt to download the socket policy file using HTTP. </summary>
    </member>
    <member name="T:System.Net.Sockets.SocketError">
      <summary>Defines error codes for the <see cref="T:System.Net.Sockets.Socket" /> class.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Success">
      <summary>The <see cref="T:System.Net.Sockets.Socket" /> operation succeeded.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketError">
      <summary>An unspecified <see cref="T:System.Net.Sockets.Socket" /> error has occurred.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Interrupted">
      <summary>A blocking <see cref="T:System.Net.Sockets.Socket" /> call was canceled.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AccessDenied">
      <summary>An attempt was made to access a <see cref="T:System.Net.Sockets.Socket" /> in a way that is forbidden by its access permissions.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Fault">
      <summary>An invalid pointer address was detected by the underlying socket provider.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InvalidArgument">
      <summary>An invalid argument was supplied to a <see cref="T:System.Net.Sockets.Socket" /> member.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TooManyOpenSockets">
      <summary>There are too many open sockets in the underlying socket provider.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.WouldBlock">
      <summary>An operation on a nonblocking socket cannot be completed immediately.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InProgress">
      <summary>A blocking operation is in progress.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AlreadyInProgress">
      <summary>The nonblocking <see cref="T:System.Net.Sockets.Socket" /> already has an operation in progress.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotSocket">
      <summary>A <see cref="T:System.Net.Sockets.Socket" /> operation was attempted on a non-socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.DestinationAddressRequired">
      <summary>A required address was omitted from an operation on a <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.MessageSize">
      <summary>The datagram is too long.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolType">
      <summary>The protocol type is incorrect for this <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolOption">
      <summary>An unknown, invalid, or unsupported option or level was used with a <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolNotSupported">
      <summary>The protocol is not implemented or has not been configured.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketNotSupported">
      <summary>The support for the specified socket type does not exist in this address family.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationNotSupported">
      <summary>The address family is not supported by the protocol family.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolFamilyNotSupported">
      <summary>The protocol family is not implemented or has not been configured.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressFamilyNotSupported">
      <summary>The address family specified is not supported. This error is returned if the IPv6 address family was specified and the IPv6 stack is not installed on the local machine. This error is returned if the IPv4 address family was specified and the IPv4 stack is not installed on the local machine.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressAlreadyInUse">
      <summary>Only one use of an address is normally permitted.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressNotAvailable">
      <summary>The selected IP address is not valid in this context.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkDown">
      <summary>The network is not available.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkUnreachable">
      <summary>No route to the remote host exists.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkReset">
      <summary>The application tried to set an option on a connection that has already timed out.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionAborted">
      <summary>The connection was aborted by the .NET Framework or the underlying socket provider.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionReset">
      <summary>The connection was reset by the remote peer.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoBufferSpaceAvailable">
      <summary>No free buffer space is available for a <see cref="T:System.Net.Sockets.Socket" /> operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IsConnected">
      <summary>The <see cref="T:System.Net.Sockets.Socket" /> is already connected.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotConnected">
      <summary>The application tried to send or receive data, and the <see cref="T:System.Net.Sockets.Socket" /> is not connected.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Shutdown">
      <summary>A request to send or receive data was disallowed because the <see cref="T:System.Net.Sockets.Socket" /> has already been closed.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TimedOut">
      <summary>The connection attempt timed out, or the connected host has failed to respond.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionRefused">
      <summary>The remote host is actively refusing a connection.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostDown">
      <summary>The operation failed because the remote host is down.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostUnreachable">
      <summary>There is no network route to the specified host.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProcessLimit">
      <summary>Too many processes are using the underlying socket provider.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SystemNotReady">
      <summary>The network subsystem is unavailable.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.VersionNotSupported">
      <summary>The version of the underlying socket provider is out of range.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotInitialized">
      <summary>The underlying socket provider has not been initialized.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Disconnecting">
      <summary>A graceful shutdown is in progress.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TypeNotFound">
      <summary>The specified class was not found.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostNotFound">
      <summary>No such host is known. The name is not an official host name or alias.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TryAgain">
      <summary>The name of the host could not be resolved. Try again later.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoRecovery">
      <summary>The error is unrecoverable or the requested database cannot be located.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoData">
      <summary>The requested name or IP address was not found on the name server.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IOPending">
      <summary>The application has initiated an overlapped operation that cannot be completed immediately.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationAborted">
      <summary>The overlapped operation was aborted due to the closure of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketException">
      <summary>The exception that is thrown when a socket error occurs.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SocketException" /> class with the last operating system error code.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SocketException" /> class with the specified error code.</summary>
      <param name="errorCode">The error code that indicates the error that occurred.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketException.ErrorCode">
      <summary>Gets the error code that is associated with this exception.</summary>
      <returns>An integer error code that is associated with this exception.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.SocketErrorCode">
      <summary>Gets the error code that is associated with this exception.</summary>
      <returns>A <see cref="T:System.Net.Sockets.SocketError" /> that is associated with this exception.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketShutdown">
      <summary>Defines constants that are used by the <see cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" /> method.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Receive">
      <summary>Disables a <see cref="T:System.Net.Sockets.Socket" /> for receiving.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Send">
      <summary>Disables a <see cref="T:System.Net.Sockets.Socket" /> for sending.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Both">
      <summary>Disables a <see cref="T:System.Net.Sockets.Socket" /> for both sending and receiving.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketType">
      <summary>Specifies the type of socket that an instance of the <see cref="T:System.Net.Sockets.Socket" /> class represents.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Stream">
      <summary>A socket type that supports reliable, two-way, connection-based byte streams without the duplication of data and without preservation of boundaries. A <see cref="T:System.Net.Sockets.Socket" /> of this type communicates with a single peer and requires a remote host connection before communication can begin. This socket type uses the Transmission Control Protocol (<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) and the <see cref="T:System.Net.Sockets.AddressFamily" />.can be either <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Unknown">
      <summary>An unknown Socket type.</summary>
    </member>
    <member name="T:System.Net.Sockets.UdpAnySourceMulticastClient">
      <summary>A client receiver for multicast traffic from any source, also known as Any Source Multicast (ASM) or Internet Standard Multicast (ISM).</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Creates a new <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> UDP client that can subscribe to a group address and receive datagrams from any source.</summary>
      <param name="groupAddress">The multicast group address for this receiver to subscribe to.</param>
      <param name="localPort">The local port for this receiver to bind to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="groupAddress" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="localPort" /> is less than 0-or-<paramref name="localPort" /> is greater than 65,535.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="localPort" /> is less than 1,024.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
      <summary>Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from any group participant.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
      <param name="callback">A callback method to invoke when the operation completes.</param>
      <param name="state">Optional state information to pass to the <paramref name="callback" /> method for this operation.</param>
      <exception cref="T:System.InvalidOperationException">The multicast group has already been joined or a join operation is currently in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from any sender.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
      <param name="buffer">The buffer to store the received data.</param>
      <param name="offset">The offset, in bytes, from the beginning of the <paramref name="buffer" /> where the data should be stored.</param>
      <param name="count">The maximum number of bytes to receive and store in the <paramref name="buffer" />. </param>
      <param name="callback">The callback method to invoke when the operation completes.</param>
      <param name="state">Optional state information to pass to the <paramref name="callback" /> method for this operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0-or-<paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.-or-<paramref name="count" /> is less than 0-or- <paramref name="offset" /> plus the <paramref name="count" /> is greater than the length of the <paramref name="buffer" />.</exception>
      <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket for sending. See the Remarks section for more information.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
      <summary>Begins the operation of sending a unicast packet to the specified destination.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
      <param name="buffer">The buffer that contains the data to send.</param>
      <param name="offset">The offset, in bytes, from the beginning of the <paramref name="buffer" /> to read the data to be sent.</param>
      <param name="count">The number of bytes to send from the <paramref name="buffer" />.</param>
      <param name="remoteEndPoint">The remote endpoint to which the packet is to be sent.</param>
      <param name="callback">The callback method to invoke when the operation completes.</param>
      <param name="state">Optional state information to pass to the <paramref name="callback" /> method for this operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0-or-<paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.-or-<paramref name="count" /> is less than 0-or- <paramref name="offset" /> plus the <paramref name="count" /> is greater than the length of the <paramref name="buffer" />.</exception>
      <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket for sending. See the Remarks section for more information.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins the operation of sending a packet to a joined multicast group and invokes the specified callback when a packet has been sent to the group.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
      <param name="buffer">The buffer that contains the data to send.</param>
      <param name="offset">The offset, in bytes, from the beginning of the <paramref name="buffer" /> to read the data to be sent.</param>
      <param name="count">The number of bytes to send from the <paramref name="buffer" />.</param>
      <param name="callback">The callback method to invoke when the operation completes.</param>
      <param name="state">Optional state information to pass to the <paramref name="callback" /> method for this operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0-or-<paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.-or-<paramref name="count" /> is less than 0-or- <paramref name="offset" /> plus the <paramref name="count" /> is greater than the length of the <paramref name="buffer" />.</exception>
      <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket for sending. See the Remarks section for more information.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)">
      <summary>Blocks a source so that multicast packets originating from it are no longer received.</summary>
      <param name="sourceAddress">The address of the source to block.</param>
      <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose">
      <summary>Leaves the multicast group and releases all resources used by the current instance of the <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> class and the underlying <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
      <summary>Completes the asynchronous join group operation to a multicast group.</summary>
      <param name="result">The result of the asynchronous join operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)">
      <summary>Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.</summary>
      <returns>The length, in bytes, of the message stored in the <paramref name="buffer" /> parameter passed to the <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method.</returns>
      <param name="result">The result of the asynchronous receive operation.</param>
      <param name="source">The source endpoint where the packet was received from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)">
      <summary>Completes the operation of sending a unicast packet to the specified destination.</summary>
      <param name="result">The result of the asynchronous send operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)">
      <summary>Completes the operation of sending a packet to a multicast group.</summary>
      <param name="result">The result of the asynchronous send operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback">
      <summary>Gets or sets a value that specifies whether outgoing multicast packets are delivered to the sending application.</summary>
      <returns>A value that indicates if outgoing packets to a multicast group are delivered to the sending application.</returns>
      <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed. </exception>
    </member>
    <member name="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize">
      <summary>Gets or sets the size, in bytes, of the receive buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast receive operations on this <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> instance. </summary>
      <returns>The size, in bytes, of the receive buffer.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The buffer size specified is less than 0.</exception>
      <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed. </exception>
    </member>
    <member name="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize">
      <summary>Gets or sets the size, in bytes, of the send buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast send operations on this <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> instance.</summary>
      <returns>The size, in bytes, of the send buffer.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The buffer size specified is less than 0.</exception>
      <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed. </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)">
      <summary>Unblocks a source that was previously blocked by a call to the <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" /> method so that multicast packets originating from it can be received.</summary>
      <param name="sourceAddress">The address of the source to unblock.</param>
      <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.</exception>
    </member>
    <member name="T:System.Net.Sockets.UdpSingleSourceMulticastClient">
      <summary>A client receiver for multicast traffic from a single source, also known as Source Specific Multicast (SSM).</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
      <summary>Creates a new <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> UDP client that can subscribe to a group address and receive datagrams from a single source.</summary>
      <param name="sourceAddress">The sender source address for this receiver to subscribe to.</param>
      <param name="groupAddress">The multicast group address for this receiver to subscribe to.</param>
      <param name="localPort">The local port for this receiver to bind to.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceAddress" /> and <paramref name="groupAddress" /> must be the same address family.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceAddress" /> is null.-or-<paramref name="groupAddress" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="localPort" /> is less than 0-or-<paramref name="localPort" /> is greater than 65,535.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="localPort" /> is less than 1,024.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
      <summary>Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from a single source address.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
      <param name="callback">A callback method to invoke when the operation completes.</param>
      <param name="state">Optional state information to pass to the <paramref name="callback" /> method for this operation.</param>
      <exception cref="T:System.InvalidOperationException">The multicast group has already been joined or a join operation is currently in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from a specified sender.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
      <param name="buffer">The buffer to store the received data.</param>
      <param name="offset">The offset, in bytes, from the beginning of the <paramref name="buffer" /> where the data should be stored.</param>
      <param name="count">The maximum number of bytes to receive and store in the <paramref name="buffer" />. </param>
      <param name="callback">The callback method to invoke when the operation completes.</param>
      <param name="state">Optional state information to pass to the <paramref name="callback" /> method for this operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0-or-<paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.-or-<paramref name="count" /> is less than 0-or- <paramref name="offset" /> plus the <paramref name="count" /> is greater than the length of the <paramref name="buffer" />.</exception>
      <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket for receiving. See the Remarks section for more information.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins the operation of sending a unicast packet to the source previously specified.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
      <param name="buffer">The buffer that contains the data to send.</param>
      <param name="offset">The offset, in bytes, from the beginning of the <paramref name="buffer" /> to read the data to be sent.</param>
      <param name="count">The number of bytes to send from the <paramref name="buffer" />.</param>
      <param name="remotePort">The remote port to which the packet is to be sent. The remote address is specified by the <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /> constructor.</param>
      <param name="callback">The callback method to invoke when the operation completes.</param>
      <param name="state">Optional state information to pass to the <paramref name="callback" /> method for this operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0-or-<paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.-or-<paramref name="count" /> is less than 0-or- <paramref name="offset" /> plus the <paramref name="count" /> is greater than the length of the <paramref name="buffer" />.<paramref name="remotePort" /> is less than 0-or-<paramref name="remotePort" /> is greater than 65,535.</exception>
      <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket for sending. See the Remarks section for more information.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
      <summary>Leaves the multicast group and releases all resources used by the current instance of the <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> class and the underlying <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
      <summary>Completes the asynchronous join group operation to a multicast group.</summary>
      <param name="result">The result of the asynchronous join operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
      <summary>Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received from a specified sender.</summary>
      <returns>The length, in bytes, of the message stored in the <paramref name="buffer" /> parameter passed to the <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method.</returns>
      <param name="result">The result of the asynchronous receive operation.</param>
      <param name="sourcePort">The source port where the packet was received from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
      <summary>Completes the operation of sending a unicast packet to a single source.</summary>
      <param name="result">The result of the asynchronous send operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
      <summary>Gets or sets the size, in bytes, of the receive buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast receive operations on this <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> instance.</summary>
      <returns>The size, in bytes, of the receive buffer.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The buffer size specified is less than 0.</exception>
      <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed. </exception>
    </member>
    <member name="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
      <summary>Gets or sets the size, in bytes, of the send buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast send operations on this <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> instance.</summary>
      <returns>The size, in bytes, of the send buffer.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The buffer size specified is less than 0.</exception>
      <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed. </exception>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\ReferenceAssemblies\system.runtime.serialization.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.CollectionDataContractAttribute">
      <summary>When applied to a collection type, enables custom specification of the collection item elements. This attribute can be applied only to types that are recognized by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> as valid, serializable collections.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.CollectionDataContractAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.CollectionDataContractAttribute" /> class. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsReference">
      <summary>Gets or sets a value that indicates whether to preserve object reference data.</summary>
      <returns>true to keep object reference data using standard XML; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.ItemName">
      <summary>Gets or sets a custom name for a collection element.</summary>
      <returns>The name to apply to collection elements.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.KeyName">
      <summary>Gets or sets the custom name for a dictionary key name.</summary>
      <returns>The name to use instead of the default dictionary key name.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.Name">
      <summary>Gets or sets the data contract name for the collection type.</summary>
      <returns>The data contract name for the collection type.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.Namespace">
      <summary>Gets or sets the namespace for the data contract.</summary>
      <returns>The namespace of the data contract.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.CollectionDataContractAttribute.ValueName">
      <summary>Gets or sets the custom name for a dictionary value name.</summary>
      <returns>The name to use instead of the default dictionary value name.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ContractNamespaceAttribute">
      <summary>Specifies the CLR namespace and XML namespace of the data contract. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.ContractNamespaceAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.ContractNamespaceAttribute" /> class using a specified namespace. </summary>
      <param name="contractNamespace">The namespace of the contract.</param>
    </member>
    <member name="P:System.Runtime.Serialization.ContractNamespaceAttribute.ClrNamespace">
      <summary>Gets or sets the CLR namespace of the data contract type. </summary>
      <returns>The CLR-legal namespace of a type. </returns>
    </member>
    <member name="P:System.Runtime.Serialization.ContractNamespaceAttribute.ContractNamespace">
      <summary>Gets the namespace of the data contract members.</summary>
      <returns>The namespace of the data contract members.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractAttribute">
      <summary>Specifies that the type defines or implements a data contract and can be serialized by a serializer, such as the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> class. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
      <summary>Gets or sets a value that indicates whether to preserve object reference data.</summary>
      <returns>true to keep object reference data using standard XML; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractAttribute.Name">
      <summary>Gets or sets the name of the data contract for the type.</summary>
      <returns>The local name of the data contract. The default value is the name of the class that the attribute is applied to. </returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
      <summary>Gets or sets the namespace for the data contract for the type.</summary>
      <returns>The namespace of the data contract.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializer">
      <summary>Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type, and a collection of known types that may be present in the object graph.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IEnumerable`1" />  of <see cref="T:System.Type" /> that contains the types that may be present in the object graph.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type using the supplied XML root element and namespace.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
      <param name="rootName">The name of the XML element that encloses the content to serialize or deserialize.</param>
      <param name="rootNamespace">The namespace of the XML element that encloses the content to serialize or deserialize.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two string parameters as well as a list of known types that may be present in the object graph.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
      <param name="rootName">The root element name of the content.</param>
      <param name="rootNamespace">The namespace of the root element.</param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IEnumerable`1" />  of <see cref="T:System.Type" /> that contains the types that may be present in the object graph.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type using the XML root element and namespace specified through the parameters of type <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
      <param name="rootName">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element name of the content.</param>
      <param name="rootNamespace">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the root element.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two <see cref="T:System.Xml.XmlDictionaryString" /> parameters as well as a list of known types that may be present in the object graph.</summary>
      <param name="type">The type of the instances that are serialized or deserialized.</param>
      <param name="rootName">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element name of the content.</param>
      <param name="rootNamespace">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the root element.</param>
      <param name="knownTypes">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
      <summary>Gets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.</summary>
      <returns>true to omit the extension data; otherwise, false. The default value is true.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Determines whether the <see cref="T:System.Xml.XmlDictionaryReader" /> is positioned on an object that can be deserialized.</summary>
      <returns>true if the reader is at the start element of the stream to read; otherwise, false.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Determines whether the <see cref="T:System.Xml.XmlReader" /> is positioned on an object that can be deserialized.</summary>
      <returns>true if the reader is at the start element of the stream to read; otherwise, false.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
      <summary>Gets a collection of types that may be present in the object graph serialized using this instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains the expected types passed in as known types to the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> constructor.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
      <summary>Gets the maximum number of items in an object graph to serialize or deserialize.</summary>
      <returns>The maximum number of items to serialize or deserialize. The default is <see cref="F:System.Int32.MaxValue" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The number of items exceeds the maximum value.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences">
      <summary>Gets a value that specifies whether to use non-standard XML constructs to preserve object reference data.</summary>
      <returns>true to keep the references; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Reads the XML stream with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value. </summary>
      <returns>The deserialized object.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream.</param>
      <param name="verifyObjectName">true to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, false. </param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The <paramref name="verifyObjectName" /> parameter is set to true, and the element name and namespace do not correspond to the values set in the constructor. </exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Reads the XML stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Reads the XML stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</param>
      <param name="verifyObjectName">true to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, false.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The <paramref name="verifyObjectName" /> parameter is set to true, and the element name and namespace do not correspond to the values set in the constructor. </exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Writes the closing XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the stream.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being written.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Writes the closing XML element using an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the stream.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being written.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Writes all the object data (starting XML element, content, and closing element) to an XML document or stream with an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</param>
      <param name="graph">The object that contains the data to write to the stream.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being written.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Writes the XML content using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the stream.</param>
      <param name="graph">The object to write to the stream.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being written.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Writes the XML content using an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the stream.</param>
      <param name="graph">The object to write to the stream.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being written.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Writes the opening XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML start element.</param>
      <param name="graph">The object to write.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Writes the opening XML element using an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML start element.</param>
      <param name="graph">The object to write.</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataMemberAttribute">
      <summary>When applied to the member of a type, specifies that the member is part of a data contract and is serializable by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataMemberAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataMemberAttribute" /> class. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataMemberAttribute.EmitDefaultValue">
      <summary>Gets or sets a value that specifies whether to serialize the default value for a field or property being serialized. </summary>
      <returns>true if the default value for a member should be generated in the serialization stream; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataMemberAttribute.IsRequired">
      <summary>Gets or sets a value that instructs the serialization engine whether the member must be present in the serialized data when it is being deserializing.</summary>
      <returns>true, if the member is required; otherwise, false. The default is false.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The member is not present or the member is present but it has a default value with <see cref="P:System.Runtime.Serialization.DataMemberAttribute.EmitDefaultValue" /> set to true.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.DataMemberAttribute.Name">
      <summary>Gets or sets a data member name. </summary>
      <returns>The name of the data member. The default name of a data contract for a given type of data member is the CLR member name of that type.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataMemberAttribute.Order">
      <summary>Gets or sets the order of serialization and deserialization of a member.</summary>
      <returns>The numeric order of serialization or deserialization.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.EnumMemberAttribute">
      <summary>Specifies that the field is an enumeration member and should be serialized.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.EnumMemberAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.EnumMemberAttribute" /> class. </summary>
    </member>
    <member name="P:System.Runtime.Serialization.EnumMemberAttribute.Value">
      <summary>Gets or sets the value associated with the enumeration member the attribute is applied to.</summary>
      <returns>The value associated with the enumeration member.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.IgnoreDataMemberAttribute">
      <summary>When applied to the member of a type, specifies that the member is not part of a data contract and is not serialized.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.IgnoreDataMemberAttribute" /> class. </summary>
    </member>
    <member name="T:System.Runtime.Serialization.InvalidDataContractException">
      <summary>The exception that is thrown when the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> encounters an invalid data contract during serialization and deserialization. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.InvalidDataContractException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.InvalidDataContractException" /> class. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.InvalidDataContractException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.InvalidDataContractException" /> class with the specified error message. </summary>
      <param name="message">A description of the error. </param>
    </member>
    <member name="M:System.Runtime.Serialization.InvalidDataContractException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.InvalidDataContractException" /> class with the specified error message and inner exception. </summary>
      <param name="message">A description of the error. </param>
      <param name="innerException">The original <see cref="T:System.Exception" />. </param>
    </member>
    <member name="T:System.Runtime.Serialization.KnownTypeAttribute">
      <summary>Specifies types that should be recognized by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> when serializing or deserializing a given type. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class with the name of a method that returns an <see cref="T:System.Collections.IEnumerable" /> of known types.</summary>
      <param name="methodName">The name of the method that returns an <see cref="T:System.Collections.IEnumerable" /> of types used when serializing or deserializing data.</param>
    </member>
    <member name="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class with the specified type. </summary>
      <param name="type">The <see cref="T:System.Type" /> that is included as a known type when serializing or deserializing data.</param>
    </member>
    <member name="P:System.Runtime.Serialization.KnownTypeAttribute.MethodName">
      <summary>Gets the name of a method that returns a list of types that should be recognized during serialization or deserialization. </summary>
      <returns>The name of the method on the type defined by the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.KnownTypeAttribute.Type">
      <summary>Gets the type that should be recognized during serialization or deserialization by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />. </summary>
      <returns>The <see cref="T:System.Type" /> that is used during serialization or deserialization. </returns>
    </member>
    <member name="T:System.Runtime.Serialization.XmlObjectSerializer">
      <summary>Provides the base class used to serialize objects as XML streams or documents. This class is abstract.</summary>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being serialized. </exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> class. </summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Gets a value that specifies whether the <see cref="T:System.Xml.XmlDictionaryReader" /> is positioned over an XML element that can be read.</summary>
      <returns>true if the reader can read the data; otherwise, false.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream or document.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Gets a value that specifies whether the <see cref="T:System.Xml.XmlReader" /> is positioned over an XML element that can be read.</summary>
      <returns>true if the reader is positioned over the starting element; otherwise, false.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> used to read the XML stream or document.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)">
      <summary>Reads the XML stream or document with a <see cref="T:System.IO.Stream" /> and returns the deserialized object.</summary>
      <returns>The deserialized object.</returns>
      <param name="stream">A <see cref="T:System.IO.Stream" /> used to read the XML stream or document.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary>Reads the XML document or stream with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML document.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>When implemented in a derived class, reads the XML stream or document with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML document.</param>
      <param name="verifyObjectName">true to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; otherwise, false to skip the verification.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Reads the XML document or stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> used to read the XML stream or document.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Reads the XML document or stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object. It also enables you to specify whether the serializer can read the data before attempting to read it.</summary>
      <returns>The deserialized object.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> used to read the XML document or stream.</param>
      <param name="verifyObjectName">true to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; false to skip the verification.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Writes the end of the object data as a closing XML element to the XML document or stream with an <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML document or stream.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Writes the end of the object data as a closing XML element to the XML document or stream with an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary>Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> used to write the XML document or stream.</param>
      <param name="graph">The object that contains the data to write to the stream.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the content to the XML document or stream.</param>
      <param name="graph">The object that contains the content to write.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</param>
      <param name="graph">The object that contains the content to write.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Writes only the content of the object to the XML document or stream using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML document or stream.</param>
      <param name="graph">The object that contains the content to write.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Writes only the content of the object to the XML document or stream with the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</param>
      <param name="graph">The object that contains the content to write.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Writes the start of the object's data as an opening XML element using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML document.</param>
      <param name="graph">The object to serialize.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Writes the start of the object's data as an opening XML element using the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document.</param>
      <param name="graph">The object to serialize.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type being serialized does not conform to data contract rules. For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">There is a problem with the instance being serialized.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">The maximum number of objects to serialize has been exceeded. Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</exception>
    </member>
    <member name="T:System.Xml.IStreamProvider">
      <summary>An interface that can be implemented by classes providing streams.</summary>
    </member>
    <member name="M:System.Xml.IStreamProvider.GetStream">
      <summary>Gets a stream.</summary>
      <returns>Returns a <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)">
      <summary>Releases a stream to output.</summary>
      <param name="stream">The stream being released.</param>
    </member>
    <member name="T:System.Xml.IXmlDictionary">
      <summary>An interface that defines the contract that an XML dictionary must implement to be used by <see cref="T:System.Xml.XmlDictionaryReader" /> and <see cref="T:System.Xml.XmlDictionaryWriter" /> implementations.</summary>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>Attempts to look up an entry in the dictionary.</summary>
      <returns>true if <paramref name="key" /> is in the dictionary; otherwise, false.</returns>
      <param name="key">The key to check for.</param>
      <param name="result">If <paramref name="key" /> is found in the <see cref="T:System.Xml.IXmlDictionary" />, the <see cref="T:System.Xml.XmlDictionaryString" /> that is mapped to the key; otherwise, null.</param>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>Checks the dictionary for a specified string value.</summary>
      <returns>true if <paramref name="value" /> is in the dictionary; otherwise, false.</returns>
      <param name="value">The string to check for.</param>
      <param name="result">If <paramref name="value" /> is found in the <see cref="T:System.Xml.IXmlDictionary" />, the <see cref="T:System.Xml.XmlDictionaryString" /> that is mapped to the key; otherwise, null.</param>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>Checks the dictionary for a specified <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <returns>true if <see cref="T:System.Xml.XmlDictionaryString" /> is in the dictionary; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Xml.XmlDictionaryString" /> being checked for.</param>
      <param name="result">If <paramref name="value" /> is found in the <see cref="T:System.Xml.IXmlDictionary" />, the <see cref="T:System.Xml.XmlDictionaryString" /> that is mapped to the key; otherwise, null.</param>
    </member>
    <member name="T:System.Xml.UniqueId">
      <summary>Represents a unique identifier optimized for GUIDs.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Xml.UniqueId" /> class with a new, unique GUID.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[])">
      <summary>Creates a new instance of the <see cref="T:System.Xml.UniqueId" /> class using a byte array that represents a <see cref="T:System.Guid" />.</summary>
      <param name="guid">A byte array that represents a <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="guid" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="guid" /> provides less than 16 valid bytes.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)">
      <summary>Creates a new instance of the <see cref="T:System.Xml.UniqueId" /> class that starts from an offset within a byte array that represents a <see cref="T:System.Guid" />.</summary>
      <param name="guid">A byte array that represents a <see cref="T:System.Guid" />.</param>
      <param name="offset">Offset position within the byte array that represents a <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="guid" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than zero or greater than the length of the array.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="guid" /> and <paramref name="offset" /> provide less than 16 valid bytes.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary>Creates a new instance of this class starting from an offset within a char using a specified number of entries.</summary>
      <param name="chars">A char array that represents a <see cref="T:System.Guid" />.</param>
      <param name="offset">Offset position within the char array that represents a <see cref="T:System.Guid" />.</param>
      <param name="count">Number of array entries to use, starting from <paramref name="offset" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> less than zero or greater than the length of the array.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> less than zero or greater than the length of the array minus <paramref name="offset" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="count" /> equals zero.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Guid)">
      <summary>Creates a new instance of the <see cref="T:System.Xml.UniqueId" /> class using a <see cref="T:System.Guid" />.</summary>
      <param name="guid">A <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="guid" /> is null.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Xml.UniqueId" /> class using a string.</summary>
      <param name="value">A string used to generate the <see cref="T:System.Xml.UniqueId" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.FormatException">Length of <paramref name="value" /> is zero.</exception>
    </member>
    <member name="P:System.Xml.UniqueId.CharArrayLength">
      <summary>Gets a value that indicates the length of the string representation of the <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns>The length of the string representation of the <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.Equals(System.Object)">
      <summary>Tests whether an object equals this <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns>true if the object equals this <see cref="T:System.Xml.UniqueId" />; otherwise, false.</returns>
      <param name="obj">The object to compare.</param>
    </member>
    <member name="M:System.Xml.UniqueId.GetHashCode">
      <summary>Creates a hash-code representation of this <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns>An integer hash-code representation of this <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="P:System.Xml.UniqueId.IsGuid">
      <summary>Gets a value that indicates whether the <see cref="T:System.Xml.UniqueId" /> is a <see cref="T:System.Guid" />.</summary>
      <returns>true if the <see cref="T:System.Xml.UniqueId" /> is a <see cref="T:System.Guid" />; otherwise, false.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Overrides the equality operator to test for equality of two <see cref="T:System.Xml.UniqueId" /> objects.</summary>
      <returns>true if the two <see cref="T:System.Xml.UniqueId" />s are equal or are both null; false if they are not equal or if only one of them is null.</returns>
      <param name="id1">The first <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2">The second <see cref="T:System.Xml.UniqueId" />.</param>
    </member>
    <member name="M:System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Overrides the equality operator to test for inequality of two <see cref="T:System.Xml.UniqueId" />s.</summary>
      <returns>true if the overridden equality operator returns false; otherwise, false.</returns>
      <param name="id1">The first <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2">The second <see cref="T:System.Xml.UniqueId" />.</param>
    </member>
    <member name="M:System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)">
      <summary>Puts the <see cref="T:System.Xml.UniqueId" /> value into a char array.</summary>
      <returns>Number of entries in the char array filled by the <see cref="T:System.Xml.UniqueId" /> value.</returns>
      <param name="chars">The char array.</param>
      <param name="offset">Position in the char array to start inserting the <see cref="T:System.Xml.UniqueId" /> value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than zero or greater than the length of the array.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="guid " /> and <paramref name=" offset" /> provide less than 16 valid bytes.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.ToString">
      <summary>Displays the <see cref="T:System.Xml.UniqueId" /> value in string format.</summary>
      <returns>The <see cref="T:System.Xml.UniqueId" /> value.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)">
      <summary>Tries to get the value of the <see cref="T:System.Xml.UniqueId" /> as a <see cref="T:System.Guid" /> and store it in the given byte array at the specified offset.</summary>
      <returns>true if the value stored in this instance of <see cref="T:System.Xml.UniqueId" /> is a <see cref="T:System.Guid" />; otherwise, false.</returns>
      <param name="buffer">byte array that will contain the <see cref="T:System.Guid" />.</param>
      <param name="offset">Position in the byte array to start inserting the <see cref="T:System.Guid" /> value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> less than zero or greater than the length of the array.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer" /> and <paramref name="offset" /> provide less than 16 valid bytes.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Guid@)">
      <summary>Tries to get the value of the <see cref="T:System.Xml.UniqueId" /> as a <see cref="T:System.Guid" />.</summary>
      <returns>true if the <see cref="T:System.Xml.UniqueId" /> represents a <see cref="T:System.Guid" />; otherwise, false.</returns>
      <param name="guid">The <see cref="T:System.Guid" /> if successful; otherwise, <see cref="F:System.Guid.Empty" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer" /> and <paramref name="offset" /> provide less than 16 valid bytes.</exception>
    </member>
    <member name="T:System.Xml.XmlBinaryReaderSession">
      <summary>Enables optimized strings to be managed in a dynamic way.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Xml.XmlBinaryReaderSession" /> class.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Add(System.Int32,System.String)">
      <summary>Creates an <see cref="T:System.Xml.XmlDictionaryString" /> from the input parameters and adds it to an internal collection.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryString" />.</returns>
      <param name="id">The key value.</param>
      <param name="value">The value.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="id" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">An entry with key = <paramref name="id" /> already exists.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Clear">
      <summary>Clears the internal collection of all contents.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>Checks whether the internal collection contains an entry with a specified key.</summary>
      <returns>true if an entry that matches the <paramref name="key" /> was found; otherwise, false.</returns>
      <param name="key">The key to match.</param>
      <param name="result">The <see cref="T:System.Xml.XmlDictionaryString" />, if found; otherwise, null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>Checks whether the internal collection contains an entry with a specified string value.</summary>
      <returns>true if an entry that matches the <paramref name="value" /> was found; otherwise, false.</returns>
      <param name="value">The string value to match.</param>
      <param name="result">The <see cref="T:System.Xml.XmlDictionaryString" />, if found; otherwise, null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>Checks whether the internal collection contains a specified entry.</summary>
      <returns>true if an entry that matches the <paramref name="value" /> was found; otherwise, false.</returns>
      <param name="value">The value to match.</param>
      <param name="result">The <see cref="T:System.Xml.XmlDictionaryString" />, if found; otherwise, null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="T:System.Xml.XmlBinaryWriterSession">
      <summary>Enables using a dynamic dictionary to compress common strings that appear in a message and maintain state.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Xml.XmlBinaryWriterSession" /> class.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.Reset">
      <summary>Clears out the internal collections.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)">
      <summary>Tries to add an <see cref="T:Sytem.Xml.XmlDictionaryString" /> to the internal collection.</summary>
      <returns>true, unless an exception was thrown.</returns>
      <param name="value">The <see cref="T:Sytem.Xml.XmlDictionaryString" /> to add.</param>
      <param name="key">The key of the <see cref="T:Sytem.Xml.XmlDictionaryString" /> that was successfully added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">An entry with key = <paramref name="key" /> already exists.</exception>
    </member>
    <member name="T:System.Xml.XmlDictionary">
      <summary>Implements a dictionary used to optimize Silverlight versionÂ 4 Release Candidate's XML reader/writer implementations.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor">
      <summary>Creates an empty <see cref="T:System.Xml.XmlDictionary" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor(System.Int32)">
      <summary>Creates a <see cref="T:System.Xml.XmlDictionary" /> with an initial capacity.</summary>
      <param name="capacity">The initial size of the dictionary.</param>
    </member>
    <member name="M:System.Xml.XmlDictionary.Add(System.String)">
      <summary>Adds a string to the <see cref="T:System.Xml.XmlDictionary" />.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryString" /> that was added.</returns>
      <param name="value">String to add to the dictionary.</param>
    </member>
    <member name="P:System.Xml.XmlDictionary.Empty">
      <summary>Gets a static empty <see cref="T:System.Xml.IXmlDictionary" />.</summary>
      <returns>A static empty <see cref="T:System.Xml.IXmlDictionary" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>Attempts to look up an entry in the dictionary.</summary>
      <returns>true if key is in the XML dictionary; otherwise, false.</returns>
      <param name="key">Key to look up.</param>
      <param name="result">If <paramref name="key" /> is in the <see cref="T:System.Xml.XmlDictionary" />, the <see cref="T:System.Xml.XmlDictionaryString" /> that is mapped to the key; otherwise, null.</param>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>Checks the dictionary for a specified string value.</summary>
      <returns>true if value is in the <see cref="T:System.Xml.XmlDictionary" />; otherwise, false.</returns>
      <param name="value">String value being checked for.</param>
      <param name="result">If <paramref name="value" /> is in the <see cref="T:System.Xml.XmlDictionary" />, the <see cref="T:System.Xml.XmlDictionaryString" /> that is mapped to the key; otherwise, null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>Checks the dictionary for a specified <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <returns>true if <see cref="T:System.Xml.XmlDictionaryString" /> is in the dictionary; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Xml.XmlDictionaryString" /> being checked for.</param>
      <param name="result">If <paramref name="value" /> is in the <see cref="T:System.Xml.XmlDictionary" />, the <see cref="T:System.Xml.XmlDictionaryString" /> that is mapped to the key; otherwise, null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="T:System.Xml.XmlDictionaryReader">
      <summary>An abstractSilverlight class that provides some additional serialization and deserialization functionality to <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.#ctor">
      <summary>When implemented by a non-abstract class derived from this base class, creates a new instance of that derived class.</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.CanCanonicalize">
      <summary>This property always returns false. Its derived classes can override to return true if they support canonicalization.</summary>
      <returns>Returns false.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
      <param name="quotas">The quotas that apply to this operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than zero or greater than the buffer length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is less than zero or greater than the buffer length minus the offset.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</summary>
      <returns>An instance of the <see cref="T:System.Xml.XmlDictionaryReader" /> class.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="dictionary">The <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
      <param name="quotas">The quotas that apply to this operation.</param>
      <param name="session">The instance of <see cref="T:System.Xml.XmlBinaryReaderSession" /> used by the reader.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than zero or greater than the buffer length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is less than zero or greater than the buffer length minus the offset.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="quotas">The quotas that apply to this operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than zero or greater than the buffer length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is less than zero or greater than the buffer length minus the offset.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="quotas">The quotas that apply to this operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">The stream from which to read.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
      <param name="quotas">The quotas that apply to this operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> or <paramref name="quotas" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">The stream from which to read.</param>
      <param name="dictionary">The <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
      <param name="quotas">The quotas that apply to this operation.</param>
      <param name="session">The instance of <see cref="T:System.Xml.XmlBinaryReaderSession" /> used by the reader.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">The stream from which to read.</param>
      <param name="quotas">The quotas that apply to this operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> from an existing <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="reader">An instance of <see cref="T:System.Xml.XmlReader" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <param name="quotas">The quotas applied to the reader.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="quotas">The quotas applied to the reader.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="stream">The stream from which to read.</param>
      <param name="quotas">The quotas applied to the reader.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.EndCanonicalization">
      <summary>This method is not supported on this base class and can be implemented on a derived class.</summary>
      <exception cref="T:System.NotSupportedException">This method is not supported on this base class.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>When overridden in a derived class, gets the value of an attribute.</summary>
      <returns>The value of the attribute.</returns>
      <param name="localName">An <see cref="T:System.Xml.XmlDictionaryString" /> that represents the local name of the attribute.</param>
      <param name="namespaceUri">An <see cref="T:System.Xml.XmlDictionaryString" /> that represents the namespace of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)">
      <summary>Gets the index of the local name of the current node within an array of names.</summary>
      <returns>The index of the local name of the current node within an array of names.</returns>
      <param name="localNames">The string array of local names to be searched.</param>
      <param name="namespaceUri">The namespace of the current node.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localNames" /> or any of the names in the array is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)">
      <summary>Gets the index of the local name of the current node within an array of names.</summary>
      <returns>The index of the local name of the current node within an array of names.</returns>
      <param name="localNames">The <see cref="T:System.Xml.XmlDictionaryString" /> array of local names to be searched.</param>
      <param name="namespaceUri">The namespace of the current node.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localNames" /> or any of the names in the array is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)">
      <summary>Checks whether the parameter, <paramref name="localName" />, is the local name of the current node.</summary>
      <returns>true if <paramref name="localName" /> matches the local name of the current node; otherwise, false.</returns>
      <param name="localName">The local name of the current node.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)">
      <summary>Checks whether the parameter, <paramref name="localName" />, is the local name of the current node.</summary>
      <returns>true if <paramref name="localName" /> matches the local name of the current node; otherwise, false.</returns>
      <param name="localName">An <see cref="T:System.Xml.XmlDictionaryString" /> that represents the local name of the current node.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)">
      <summary>Checks whether the parameter, <paramref name="namespaceUri" />, is the namespace of the current node.</summary>
      <returns>true if <paramref name="namespaceUri" /> matches the namespace of the current node; otherwise, false.</returns>
      <param name="namespaceUri">The namespace of the current node.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)">
      <summary>Checks whether the parameter, <paramref name="namespaceUri" />, is the namespace of the current node.</summary>
      <returns>true if <paramref name="namespaceUri" /> matches the namespace of the current node; otherwise, false.</returns>
      <param name="namespaceUri">The namespace of current node.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)">
      <summary>Checks whether the reader is positioned at the start of an array. This class returns false, but derived classes that have the concept of arrays might return true.</summary>
      <returns>true if the reader is positioned at the start of an array node; otherwise, false.</returns>
      <param name="type">Type of the node, if a valid node; otherwise, null.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Tests whether the first element is a start element or empty element and whether the local name and namespace URI match those of the current node.</summary>
      <returns>true if the first element in the array is a start element or empty element and matches <paramref name="localName" /> and <paramref name="namespaceUri" />; otherwise, false.</returns>
      <param name="localName">An <see cref="T:System.Xml.XmlDictionaryString" /> that represents the local name of the attribute.</param>
      <param name="namespaceUri">An <see cref="T:System.Xml.XmlDictionaryString" /> that represents the namespace of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)">
      <summary>Tests whether the current node is a text node.</summary>
      <returns>true if the node type is <see cref="F:System.Xml.XmlNodetype.Text" />, <see cref="F:System.Xml.XmlNodetype.Whitespace" />, <see cref="F:System.Xml.XmlNodetype.SignificantWhitespace" />, <see cref="F:System.Xml.XmlNodetype.CDATA" />, or <see cref="F:System.Xml.XmlNodetype.Attribute" />; otherwise, false.</returns>
      <param name="nodeType">Type of the node being tested.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement">
      <summary>Tests whether the current content node is a start element.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)">
      <summary>Tests whether the current content node is a start element and if the <see cref="P:System.Xml.XmlReader.Name" /> property of the element matches the given argument.</summary>
      <param name="name">The <see cref="P:System.Xml.XmlReader.Name" /> property of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)">
      <summary>Tests whether the current content node is a start element and whether the <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element match the given arguments.</summary>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Tests whether the current content node is a start element and whether the <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element match the given argument.</summary>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.Quotas">
      <summary>Gets the quota values that apply to the current instance of this reader class.</summary>
      <returns>Returns <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.Boolean" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The local name of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.DateTime" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.Decimal" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.Double" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.Guid" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of short integers into a typed array.</summary>
      <returns>The number of integers put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the integers are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of integers to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of integers into a typed array.</summary>
      <returns>The number of integers put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the integers are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of integers to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of long integers into a typed array.</summary>
      <returns>The number of integers put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the integers are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of integers to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of float numbers into a typed array.</summary>
      <returns>The number of float numbers put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the float numbers are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of float numbers to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.TimeSpan" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.Boolean" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.DateTime" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.Decimal" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.Double" /> nodes type into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.Guid" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of short integers into a typed array.</summary>
      <returns>The number of integers put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the integers are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of integers to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of integers into a typed array.</summary>
      <returns>The number of integers put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the integers are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of integers to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of long integers into a typed array.</summary>
      <returns>The number of integers put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the integers are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of integers to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of float numbers into a typed array.</summary>
      <returns>The number of float numbers put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the float numbers are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of float numbers to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Reads repeated occurrences of <see cref="T:System.TimeSpan" /> nodes into a typed array.</summary>
      <returns>The number of nodes put in the array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array into which the nodes are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to put in the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)">
      <summary>Reads repeated occurrences of <see cref="T:System.Boolean" /> nodes into a typed array.</summary>
      <returns>A <see cref="T:System.Boolean" /> array of the <see cref="T:System.Boolean" /> nodes.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Reads repeated occurrences of <see cref="T:System.Boolean" /> nodes into a typed array.</summary>
      <returns>A <see cref="T:System.Boolean" /> array of the <see cref="T:System.Boolean" /> nodes.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Converts a node's content to a specified type.</summary>
      <returns>The concatenated text content or attribute value converted to the requested type.</returns>
      <param name="type">The <see cref="T:System.Type" /> of the value to be returned.</param>
      <param name="namespaceResolver">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion. For example, this can be used when converting an <see cref="T:System.Xml.XmlQualifiedName" /> object to an xs:string. This value can be a null reference.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64">
      <summary>Reads the content and returns the Base64 decoded binary bytes.</summary>
      <returns>A <see cref="T:System.Byte" /> array that contains the Base64 decoded binary bytes.</returns>
      <exception cref="T:System.Xml.XmlException">The array size is greater than the MaxArrayLength quota for this reader.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex">
      <summary>Reads the content and returns the BinHex decoded binary bytes.</summary>
      <returns>A byte array that contains the BinHex decoded binary bytes.</returns>
      <exception cref="T:System.Xml.XmlException">The array size is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)">
      <summary>Reads the content and returns the BinHex decoded binary bytes.</summary>
      <returns>A byte array that contains the BinHex decoded binary bytes.</returns>
      <param name="maxByteArrayContentLength">The maximum array length.</param>
      <exception cref="T:System.Xml.XmlException">The array size is greater than <paramref name="maxByteArrayContentLength" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)">
      <summary>Reads the content into a char array.</summary>
      <returns>Number of characters read.</returns>
      <param name="chars">The array into which the characters are put.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of characters to put in the array.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal">
      <summary>Converts a node's content to decimal.</summary>
      <returns>The decimal representation of the node's content.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat">
      <summary>Converts a node's content to float.</summary>
      <returns>The float representation of the node's content.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid">
      <summary>Converts a node's content to guid.</summary>
      <returns>The guid representation of the node's content.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)">
      <summary>Converts a node's content to a qualified name representation.</summary>
      <param name="localName">The <see cref="P:System.Xml.XmlReader.LocalName" /> part of the qualified name (out parameter).</param>
      <param name="namespaceUri">The <see cref="P:System.Xml.XmlReader.NamespaceURI" /> part of the qualified name (out parameter).</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString">
      <summary>Converts a node's content to a string.</summary>
      <returns>The node content in a string representation.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)">
      <summary>Converts a node's content to a string.</summary>
      <returns>The node content in string representation.</returns>
      <param name="maxStringContentLength">The maximum string length.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)">
      <summary>Converts a node's content to a string.</summary>
      <returns>The node content in a string representation.</returns>
      <param name="strings">The array of strings to match content against.</param>
      <param name="index">The index of the entry in <paramref name="strings" /> that matches the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strings" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">An entry in <paramref name="strings" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)">
      <summary>Converts a node's content to a string.</summary>
      <returns>The node content in a string representation.</returns>
      <param name="strings">The array of <see cref="T:System.Xml.XmlDictionaryString" /> objects to match content against.</param>
      <param name="index">The index of the entry in <paramref name="strings" /> that matches the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strings" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">An entry in <paramref name="strings" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan">
      <summary>Converts a node's content to <see cref="T:System.TimeSpan" />.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> representation of node's content.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsUniqueId">
      <summary>Converts a node's content to a unique identifier.</summary>
      <returns>The node's content represented as a unique identifier.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)">
      <summary>Converts a node's content to a <see cref="T:System.DateTime" /> array.</summary>
      <returns>The node's content represented as a <see cref="T:System.DateTime" /> array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Converts a node's content to a <see cref="T:System.DateTime" /> array.</summary>
      <returns>The node's content represented as a <see cref="T:System.DateTime" /> array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)">
      <summary>Converts a node's content to a <see cref="T:System.DateTime" /> array.</summary>
      <returns>The node's content represented as a <see cref="T:System.Decimal" /> array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Converts a node's content to a <see cref="T:System.DateTime" /> array.</summary>
      <returns>The node's content represented as a <see cref="T:System.Decimal" /> array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)">
      <summary>Converts a node's content to a <see cref="T:System.DateTime" /> array.</summary>
      <returns>The node's content represented as a <see cref="T:System.Double" /> array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Converts a node's content to a <see cref="T:System.DateTime" /> array.</summary>
      <returns>The node's content represented as a <see cref="T:System.Double" /> array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64">
      <summary>Converts a node's content to a array of Base64 bytes.</summary>
      <returns>Returns <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex">
      <summary>Converts a node's content to an array of BinHex bytes.</summary>
      <returns>Returns <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean">
      <summary>Converts an element's content to a <see cref="T:System.Boolean" />.</summary>
      <returns>The node's content represented as a <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime">
      <summary>Converts an element's content to a <see cref="T:System.DateTime" />.</summary>
      <returns>The node's content represented as a <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.ArgumentException">The element is not in valid format.</exception>
      <exception cref="T:System.FormatException">The element is not in valid format.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal">
      <summary>Converts an element's content to a <see cref="T:System.Decimal" />.</summary>
      <returns>The node's content represented as a <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble">
      <summary>Converts an element's content to a <see cref="T:System.Double" />.</summary>
      <returns>The node's content represented as a <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat">
      <summary>Converts an element's content to a floating point number (<see cref="T:System.Single" />).</summary>
      <returns>The node's content represented as a floating point number (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid">
      <summary>Converts an element's content to a <see cref="T:System.Guid" />.</summary>
      <returns>The node's content represented as a <see cref="T:System.Guid" />.</returns>
      <exception cref="T:System.ArgumentException">The element is not in valid format.</exception>
      <exception cref="T:System.FormatException">The element is not in valid format.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt">
      <summary>Converts an element's content to an integer (<see cref="T:System.Int32" />).</summary>
      <returns>The node's content represented as an integer (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong">
      <summary>Converts an element's content to a long integer (<see cref="T:System.Int64" />).</summary>
      <returns>The node's content represented as a long integer (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString">
      <summary>Converts an element's content to a <see cref="T:System.String" />.</summary>
      <returns>The node's content represented as a <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan">
      <summary>Converts an element's content to a <see cref="T:System.TimeSpan" />.</summary>
      <returns>The node's content represented as a <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId">
      <summary>Converts an element's content to a unique identifier.</summary>
      <returns>The node's content represented as a unique identifier.</returns>
      <exception cref="T:System.ArgumentException">The element is not in valid format.</exception>
      <exception cref="T:System.FormatException">The element is not in valid format.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement">
      <summary>Checks whether the current node is a start element and whether it is a nonempty element, and reads it if these conditions are satisfied, advancing the reader to the next node. Throws an exception if it is not a start element or if it is an empty element.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)">
      <summary>Checks whether the named node is a start element and whether it is a nonempty element, and reads it if these conditions are satisfied, advancing the reader to the next node. Throws an exception if it is not a start element or if it is an empty element.</summary>
      <param name="name">The qualified name of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)">
      <summary>Checks whether the node with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> is a start element and whether it is a nonempty element, and reads it if these conditions are satisfied, advancing the reader to the next node. Throws an exception if it is not a start element or if it is an empty element.</summary>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Checks whether the node with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> is a start element and whether it is a nonempty element, and reads it if these conditions are satisfied, advancing the reader to the next node. Throws an exception if it is not a start element or if it is an empty element.</summary>
      <param name="localName">The local <see cref="T:System.Xml.XmlDictionaryString" /> name of the element.</param>
      <param name="namespaceUri">The <see cref="T:System.Xml.XmlDictionaryString" /> namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of <see cref="T:System.Guid" />.</summary>
      <returns>An array of <see cref="T:System.Guid" />.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of <see cref="T:System.Guid" />.</summary>
      <returns>An array of <see cref="T:System.Guid" />.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of short integers (<see cref="T:System.Int16" />).</summary>
      <returns>An array of short integers (<see cref="T:System.Int16" />).</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of short integers (<see cref="T:System.Int16" />).</summary>
      <returns>An array of short integers (<see cref="T:System.Int16" />).</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of integers (<see cref="T:System.Int32" />).</summary>
      <returns>An array of integers (<see cref="T:System.Int32" />).</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of integers (<see cref="T:System.Int32" />).</summary>
      <returns>An array of integers (<see cref="T:System.Int32" />).</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of long integers (<see cref="T:System.Int64" />).</summary>
      <returns>An array of long integers (<see cref="T:System.Int64" />).</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of long integers (<see cref="T:System.Int64" />).</summary>
      <returns>An array of long integers (<see cref="T:System.Int64" />).</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of float numbers (<see cref="T:System.Single" />).</summary>
      <returns>An array of float numbers (<see cref="T:System.Single" />).</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of float numbers (<see cref="T:System.Single" />).</summary>
      <returns>An array of float numbers (<see cref="T:System.Single" />).</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Checks whether the node with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> is a start element and advances the reader to the next node. Throws an exception if the node is not a start element.</summary>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into a <see cref="T:System.TimeSpan" /> array.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into a <see cref="T:System.TimeSpan" /> array.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> array.</returns>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>This method is not supported by this class.</summary>
      <returns>A <see cref="T:System.Int32" />. </returns>
      <param name="buffer">The buffer from which to read.</param>
      <param name="offset">The starting position from which to read in <paramref name="buffer" />.</param>
      <param name="count">The number of bytes that can be read from <paramref name="buffer" />.</param>
      <exception cref="T:System.NotSupportedException">Always.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary>This method is not supported in this class. It may be implemented in a derived class.</summary>
      <param name="stream">The stream to read from.</param>
      <param name="includeComments">Determines whether comments are included.</param>
      <param name="inclusivePrefixes">The prefixes to be included.</param>
      <exception cref="T:System.NotSupportedException">Always.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)">
      <summary>Not implemented in this class (it always returns false). May be overridden in derived classes.</summary>
      <returns>false, unless overridden in a derived class.</returns>
      <param name="count">Returns 0, unless overridden in a derived class.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)">
      <summary>Not implemented in this class (it always returns false). May be overridden in derived classes.</summary>
      <returns>false, unless overridden in a derived class.</returns>
      <param name="length">Returns 0, unless overridden in a derived class.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>Not implemented in this class (it always returns false). May be overridden in derived classes.</summary>
      <returns>false, unless overridden in a derived class.</returns>
      <param name="localName">Returns null, unless overridden in a derived class.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>Not implemented in this class (it always returns false). May be overridden in derived classes.</summary>
      <returns>false, unless overridden in a derived class.</returns>
      <param name="namespaceUri">Returns null, unless overridden in a derived class.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>Not implemented in this class (it always returns false). May be overridden in derived classes.</summary>
      <returns>false, unless overridden in a derived class.</returns>
      <param name="value">Returns null, unless overridden in a derived class.</param>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotas">
      <summary>Contains quota values for <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.Max">
      <summary>Gets an instance of this class with all properties set to maximum values.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> with properties set to <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength">
      <summary>Gets the maximum allowed array length.</summary>
      <returns>The maximum allowed array length. The default value is <see cref="F:System.Int32.MaxValue" />.</returns>
      <exception cref="T:System.InvalidOperationException">Trying to set the value, but quota values are read-only for this instance.</exception>
      <exception cref="T:System.ArgumentException">Trying to set the value to less than zero.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead">
      <summary>Gets the maximum allowed bytes returned for each read.</summary>
      <returns>The maximum allowed bytes returned for each read. The default is 4096.</returns>
      <exception cref="T:System.InvalidOperationException">Trying to set the value, but quota values are read-only for this instance.</exception>
      <exception cref="T:System.ArgumentException">Trying to set the value to less than zero.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxDepth">
      <summary>Gets the maximum nested node depth.</summary>
      <returns>The maximum nested node depth. The default is 32;</returns>
      <exception cref="T:System.InvalidOperationException">Trying to set the value, but quota values are read-only for this instance.</exception>
      <exception cref="T:System.ArgumentException">Trying to set the value to less than zero.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount">
      <summary>Gets the maximum number of characters allowed in a table name.</summary>
      <returns>The maximum number of characters allowed in a table name. The default is 16384.</returns>
      <exception cref="T:System.InvalidOperationException">Trying to set the value, but quota values are read-only for this instance.</exception>
      <exception cref="T:System.ArgumentException">Trying to set the value to less than zero.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength">
      <summary>Gets the maximum string length returned by the reader.</summary>
      <returns>The maximum string length returned by the reader. The default is 8192.</returns>
      <exception cref="T:System.InvalidOperationException">Trying to set the value, but quota values are read-only for this instance.</exception>
      <exception cref="T:System.ArgumentException">Trying to set the value to less than zero.</exception>
    </member>
    <member name="T:System.Xml.XmlDictionaryString">
      <summary>Represents an entry stored in a <see cref="T:System.Xml.XmlDictionary" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)">
      <summary>Creates an instance of the <see cref="T:System.Xml.XmlDictionaryString" /> class.</summary>
      <param name="dictionary">The <see cref="T:System.Xml.IXmlDictionary" /> that contains this instance.</param>
      <param name="value">The string that is the value of the dictionary entry.</param>
      <param name="key">The integer that is the key of the dictionary entry.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="key" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" /> / 4.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Dictionary">
      <summary>Represents the <see cref="T:System.Xml.IXmlDictionary" /> passed to the constructor of this instance of <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <returns>The <see cref="T:System.Xml.IXmlDictionary" /> for this dictionary entry.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Empty">
      <summary>Gets an <see cref="T:System.Xml.XmlDictionaryString" /> that represents the empty string.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryString" /> that represents the empty string.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Key">
      <summary>Gets the integer key for this <see cref="T:System.Xml.XmlDictionaryString" /> dictionary entry.</summary>
      <returns>The integer key for this dictionary entry.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.ToString">
      <summary>Returns a text representation for this instance of <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <returns>The string value for this instance of the class.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Value">
      <summary>Gets the string value for this <see cref="T:System.Xml.XmlDictionaryString" /> dictionary entry.</summary>
      <returns>The string value for this dictionary entry.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryWriter">
      <summary>An abstract class that Silverlight versionÂ 4 Release Candidate derives from to do serialization and deserialization.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.#ctor">
      <summary>Creates an instance of this class. Invoked only by its derived classes because this class is abstract.</summary>
    </member>
    <member name="P:System.Xml.XmlDictionaryWriter.CanCanonicalize">
      <summary>This property always returns false. Its derived classes can override to return true if they support canonicalization.</summary>
      <returns>false.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes Silverlight binary XML format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">The stream to write to.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes Silverlight binary XML format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">The stream to write to.</param>
      <param name="dictionary">The <see cref="T:System.Xml.XmlDictionary" /> to use as the shared dictionary.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes Silverlight binary XML format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">The stream to write to.</param>
      <param name="dictionary">The <see cref="T:System.Xml.XmlDictionary" /> to use as the shared dictionary.</param>
      <param name="session">The <see cref="T:System.Xml.XmlBinaryWriterSession" /> to use.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes Silverlight binary XML format.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">The stream from which to read.</param>
      <param name="dictionary">The <see cref="T:System.Xml.XmlDictionary" /> to use as the shared dictionary.</param>
      <param name="session">The <see cref="T:System.Xml.XmlBinaryWriterSession" /> to use.</param>
      <param name="ownsStream">If true, stream is closed by the writer when done; otherwise, false.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateDictionaryWriter(System.Xml.XmlWriter)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryWriter" /> from an existing <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="writer">An instance of <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes text XML. </summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">The stream to write to.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes text XML.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">The stream to write to.</param>
      <param name="encoding">The character encoding of the output.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Creates an instance of <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes text XML.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
      <param name="stream">The stream to write to.</param>
      <param name="encoding">The character encoding of the stream.</param>
      <param name="ownsStream">If true, stream is closed by the writer when done; otherwise false.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.EndCanonicalization">
      <summary>This method is not yet implemented. </summary>
      <exception cref="T:System.NotSupportedException">This method is not yet implemented.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary>This method is not yet implemented. Calling it throws a <see cref="T:System.NotSupportedException" />.</summary>
      <param name="stream">The stream to write to.</param>
      <param name="includeComments">Determines whether comments are included.</param>
      <param name="inclusivePrefixes">The prefixes to be included.</param>
      <exception cref="T:System.NotSupportedException">This method is not yet implemented.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary>Writes values from a <see cref="T:System.Boolean" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the data.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of values to write from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.DateTime" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Decimal" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Double" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Guid" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Int16" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Int32" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Int64" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Single" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.TimeSpan" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Boolean" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.DateTime" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Decimal" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Double" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Guid" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Int16" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Int32" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Int64" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.Single" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Writes nodes from a <see cref="T:System.TimeSpan" /> array.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="array">The array that contains the nodes.</param>
      <param name="offset">The starting index in the array.</param>
      <param name="count">The number of nodes to get from the array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is &lt; 0 or &gt; <paramref name="array" /> length.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is &lt; 0 or &gt; <paramref name="array" /> length minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Writes an attribute qualified name and value.</summary>
      <param name="prefix">The prefix of the attribute.</param>
      <param name="localName">The local name of the attribute.</param>
      <param name="namespaceUri">The namespace URI of the attribute.</param>
      <param name="value">The attribute.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Writes an attribute qualified name and value.</summary>
      <param name="localName">The local name of the attribute.</param>
      <param name="namespaceUri">The namespace URI of the attribute.</param>
      <param name="value">The attribute.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Writes an element with a text content.</summary>
      <param name="prefix">The prefix of the element.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="value">The element content.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Writes an element with a text content.</summary>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <param name="value">The element content.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Writes the current XML node from an <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" />.</param>
      <param name="defattr">If true, copy the default attributes from the XmlReader; otherwise if true, use default attributes; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null. </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary>Writes the current XML node from an <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" />.</param>
      <param name="defattr">If true, copy the default attributes from the <see cref="T:System.Xml.XmlReader" />; otherwise, false. If true, use default attributes; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null. </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Writes the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.</summary>
      <param name="localName">The local name of the qualified name.</param>
      <param name="namespaceUri">The namespace URI of the qualified name.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> is null. </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Writes the start of an attribute with the specified prefix, local name, and namespace URI.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">The local name of the attribute.</param>
      <param name="namespaceUri">The namespace URI of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Writes the start of an attribute with the specified local name and namespace URI.</summary>
      <param name="localName">The local name of the attribute.</param>
      <param name="namespaceUri">The namespace URI of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Writes the specified start element and associates it with the given namespace and prefix.</summary>
      <param name="prefix">The prefix of the element.</param>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <exception cref="T:System.InvalidOperationException">The writer is closed. </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Writes the specified start element and associates it with the given namespace.</summary>
      <param name="localName">The local name of the element.</param>
      <param name="namespaceUri">The namespace URI of the element.</param>
      <exception cref="T:System.InvalidOperationException">The writer is closed. </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)">
      <summary>Writes the given text content.</summary>
      <param name="value">The text to write.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteTextNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Writes the text node that an <see cref="T:System.Xml.XmlDictionaryReader" /> is currently positioned on.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> to get the text value from.</param>
      <param name="isAttribute">Specifies whether the reader is positioned on an attribute value or element content.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)">
      <summary>Writes a <see cref="T:System.Guid" /> value.</summary>
      <param name="value">The <see cref="T:System.Guid" /> value to write.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)">
      <summary>Writes a <see cref="T:System.TimeSpan" /> value.</summary>
      <param name="value">The <see cref="T:System.TimeSpan" /> value to write.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.IStreamProvider)">
      <summary>Writes a value from an <see cref="T:System.Xml.IStreamProvider" />.</summary>
      <param name="value">The <see cref="T:System.Xml.IStreamProvider" /> for the stream that contains the values to be written.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)">
      <summary>Writes a unique ID value.</summary>
      <param name="value">The unique ID value to write.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)">
      <summary>Writes a <see cref="T:System.Xml.XmlDictionaryString" /> value.</summary>
      <param name="value">The <see cref="T:System.Xml.XmlDictionaryString" /> value.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
      <summary>Writes a standard XML attribute in the current node.</summary>
      <param name="localName">The local name of the attribute.</param>
      <param name="value">The value of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Writes an XML attribute in the current node.</summary>
      <param name="localName">The local name of the attribute.</param>
      <param name="value">The value of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
      <summary>Writes a namespace declaration attribute.</summary>
      <param name="prefix">The prefix that is bound to the given namespace.</param>
      <param name="namespaceUri">The namespace to which the prefix is bound.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)">
      <summary>Writes a namespace declaration attribute.</summary>
      <param name="prefix">The prefix that is bound to the given namespace.</param>
      <param name="namespaceUri">The namespace to which the prefix is bound.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> is null.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> class </summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\ReferenceAssemblies\System.Windows.Browser.Xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Browser</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Browser.BrowserInformation">
      <summary>Provides general information about the browser, such as name, version, and operating system.</summary>
    </member>
    <member name="P:System.Windows.Browser.BrowserInformation.BrowserVersion">
      <summary>Gets the version of the browser technology that the current browser is based on.</summary>
      <returns>The version of the underlying browser technology.</returns>
    </member>
    <member name="P:System.Windows.Browser.BrowserInformation.CookiesEnabled">
      <summary>Gets a value that indicates whether the browser supports cookies.</summary>
      <returns>true if the browser supports cookies; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Browser.BrowserInformation.Name">
      <summary>Gets the name of the browser technology that the current browser is based on.</summary>
      <returns>The name of the underlying browser technology.</returns>
    </member>
    <member name="P:System.Windows.Browser.BrowserInformation.Platform">
      <summary>Gets the name of the browser's operating system.</summary>
      <returns>The name of the operating system the browser is running on.</returns>
    </member>
    <member name="P:System.Windows.Browser.BrowserInformation.ProductName">
      <summary>Gets the product name of the browser.</summary>
      <returns>The product name of the browser.</returns>
    </member>
    <member name="P:System.Windows.Browser.BrowserInformation.ProductVersion">
      <summary>Gets the product version number of the browser.</summary>
      <returns>The product version number of the browser.</returns>
    </member>
    <member name="P:System.Windows.Browser.BrowserInformation.UserAgent">
      <summary>Gets the browser's user agent string.</summary>
      <returns>The user agent string that identifies the browser.</returns>
    </member>
    <member name="T:System.Windows.Browser.HtmlDocument">
      <summary>Represents the HTML document in the browser.</summary>
    </member>
    <member name="P:System.Windows.Browser.HtmlDocument.Body">
      <summary>Gets a reference to the BODY element of the HTML document.</summary>
      <returns>The HTML document's BODY element.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlDocument.Cookies">
      <summary>Gets or sets the browser's cookie string.</summary>
      <returns>The cookie string that is stored by the browser. If the browser does not have a cookie string, the property returns an empty string.</returns>
    </member>
    <member name="M:System.Windows.Browser.HtmlDocument.CreateElement(System.String)">
      <summary>Creates a browser element.</summary>
      <returns>A reference to a browser element. </returns>
      <param name="tagName">The tag name of the browser element to create.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tagName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tagName" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">An unexpected error occurred. </exception>
    </member>
    <member name="P:System.Windows.Browser.HtmlDocument.DocumentElement">
      <summary>Gets a reference to the browser's DOCUMENT element. </summary>
      <returns>The browser's DOCUMENT element.</returns>
    </member>
    <member name="E:System.Windows.Browser.HtmlDocument.DocumentReady">
      <summary>Occurs when the browser page has completely loaded.</summary>
    </member>
    <member name="P:System.Windows.Browser.HtmlDocument.DocumentUri">
      <summary>Gets a Uniform Resource Identifier (URI) object that represents the HTML document on which the Silverlight plug-in is hosted.</summary>
      <returns>The URI of the current HTML document.</returns>
    </member>
    <member name="M:System.Windows.Browser.HtmlDocument.GetElementById(System.String)">
      <summary>Gets a single browser element.</summary>
      <returns>A reference to a browser element.</returns>
      <param name="id">A string identifier for a named browser element.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">An unexpected error occurred.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlDocument.GetElementsByTagName(System.String)">
      <summary>Gets a collection of browser elements.</summary>
      <returns>A collection of references to HTML elements that correspond to the requested tag name.</returns>
      <param name="tagName">A browser element's tag name.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tagName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tagName" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">An unexpected error occurred.</exception>
    </member>
    <member name="P:System.Windows.Browser.HtmlDocument.IsReady">
      <summary>Gets or sets a value that indicates whether the browser has completely loaded the HTML page.</summary>
      <returns>true if the browser has completely loaded the HTML page that contains the Silverlight plug-in, the page has been fully parsed, and all Document Object Model (DOM) objects are available for programming; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlDocument.QueryString">
      <summary>Gets a navigable, read-only collection of name/value pairs that represent the query string parameters on the current page's URL.</summary>
      <returns>The query string parameters on the current page's URL.</returns>
    </member>
    <member name="M:System.Windows.Browser.HtmlDocument.Submit">
      <summary>Posts user data from the FORM element in the browser's Document Object Model (DOM) to the server.</summary>
      <exception cref="T:System.InvalidOperationException">An unexpected error occurred.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlDocument.Submit(System.String)">
      <summary>Posts user data from the specified FORM element to the server.</summary>
      <param name="formId">The value of the <paramref name="id" /> attribute for an HTML FORM element.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="formId" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="formId" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">An unexpected error occurred.</exception>
    </member>
    <member name="T:System.Windows.Browser.HtmlElement">
      <summary>Represents an HTML element in the Document Object Model (DOM) of a Web page.</summary>
    </member>
    <member name="M:System.Windows.Browser.HtmlElement.AppendChild(System.Windows.Browser.HtmlElement)">
      <summary>Adds an element to the end of the child collection for the current HTML element.</summary>
      <param name="element">The element to be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlElement.AppendChild(System.Windows.Browser.HtmlElement,System.Windows.Browser.HtmlElement)">
      <summary>Adds an element at a specified location in the child element collection for the current HTML element.</summary>
      <param name="element">The element to be added.</param>
      <param name="referenceElement">The location to insert the element. The element is added before <paramref name="referenceElement" />.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="referenceElement" /> is not in the child element collection of the current HTML element.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Browser.HtmlElement.Children">
      <summary>Gets a read-only collection of HTML elements that are immediate descendants of the current HTML element.</summary>
      <returns>A collection of HTML elements. If the current HTML element has no children, the returned collection is empty.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlElement.CssClass">
      <summary>Gets or sets the cascading style sheet (CSS) class string for the current HTML element.</summary>
      <returns>A CSS class string if the element is associated with a CSS class; otherwise, an empty string.</returns>
    </member>
    <member name="M:System.Windows.Browser.HtmlElement.Focus">
      <summary>Sets the browser focus to the current HTML element.</summary>
      <exception cref="T:System.InvalidOperationException">All errors.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlElement.GetAttribute(System.String)">
      <summary>Gets the value of the specified attribute on the current HTML element.</summary>
      <returns>An attribute on the current HTML element.</returns>
      <param name="name">The name of an attribute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlElement.GetStyleAttribute(System.String)">
      <summary>Retrieves the specified style attribute for the current HTML element.</summary>
      <returns>The style attribute for the current HTML element.</returns>
      <param name="name">The name of the style attribute to retrieve.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Browser.HtmlElement.Id">
      <summary>Gets the identifier of the current HTML element.</summary>
      <returns>An HTML element ID string if the current element has an identifier; otherwise, an empty string.</returns>
      <exception cref="T:System.ArgumentException">The property is set to an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">The property is set to null.</exception>
    </member>
    <member name="P:System.Windows.Browser.HtmlElement.Parent">
      <summary>Gets a reference to the parent of the current HTML element.</summary>
      <returns>An HTML element reference if the element has a parent; otherwise, null.</returns>
    </member>
    <member name="M:System.Windows.Browser.HtmlElement.RemoveAttribute(System.String)">
      <summary>Removes an attribute from the current HTML element.</summary>
      <param name="name">The name of the attribute to remove.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlElement.RemoveChild(System.Windows.Browser.HtmlElement)">
      <summary>Removes the specified element from the child element collection of the current HTML element.</summary>
      <param name="element">The element to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">All other errors.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlElement.RemoveStyleAttribute(System.String)">
      <summary>Removes a style attribute on the current HTML element.</summary>
      <param name="name">The style attribute to be removed.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlElement.SetAttribute(System.String,System.String)">
      <summary>Sets the value of an attribute on the current HTML element.</summary>
      <param name="name">The attribute whose value will be set.</param>
      <param name="value">The attribute's new value.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlElement.SetStyleAttribute(System.String,System.String)">
      <summary>Sets the value of a style attribute on the current HTML element.</summary>
      <param name="name">The style attribute whose value will be set.</param>
      <param name="value">The style attribute's new value.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Browser.HtmlElement.TagName">
      <summary>Gets the HTML tag name of the current HTML element.</summary>
      <returns>An HTML element tag name, such as div or span.</returns>
    </member>
    <member name="T:System.Windows.Browser.HtmlEventArgs">
      <summary>Provides event details to event handlers.</summary>
    </member>
    <member name="P:System.Windows.Browser.HtmlEventArgs.AltKey">
      <summary>Gets the state of the ALT key when the event was raised.</summary>
      <returns>true if the ALT key was pressed when the event was raised; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlEventArgs.CharacterCode">
      <summary>Gets the integer Unicode value of a key that was pressed.</summary>
      <returns>An integer Unicode value of the key that was pressed if the <see cref="P:System.Windows.Browser.HtmlEventArgs.EventType" /> property value is "keypress"; otherwise, 0 (zero).</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlEventArgs.ClientX">
      <summary>Gets the x-coordinate mouse position in pixels relative to the client area of the window.</summary>
      <returns>The x-coordinate mouse position in pixels if the Document Object Model (DOM) event includes position information; otherwise, 0 (zero).</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlEventArgs.ClientY">
      <summary>Gets the y-coordinate mouse position in pixels relative to the client area of the window.</summary>
      <returns>The y-coordinate mouse position in pixels if the Document Object Model (DOM) event includes position information; otherwise, 0 (zero).</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlEventArgs.CtrlKey">
      <summary>Gets the state of the CTRL key when the event was raised.</summary>
      <returns>true if the CTRL key was pressed when the event was raised; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlEventArgs.EventObject">
      <summary>Gets the underlying HTML event object.</summary>
      <returns>An HTML event object.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlEventArgs.EventType">
      <summary>Gets the name of the event raised by the browser.</summary>
      <returns>An event name.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlEventArgs.KeyCode">
      <summary>Gets the integer Unicode value of a key that is associated with a keyboard event other than "keypress".</summary>
      <returns>The integer Unicode value of a key involved in a keyboard event, if the event is not "keypress"; otherwise, 0 (zero).</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlEventArgs.MouseButton">
      <summary>Gets the mouse buttons that were clicked at the time the event was raised.</summary>
      <returns>One of the enumeration values that indicates which mouse button was clicked.  </returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlEventArgs.OffsetX">
      <summary>Gets the x-coordinate mouse position in pixels relative to the HTML object that raised the event.</summary>
      <returns>The x-coordinate mouse position in pixels if the Document Object Model (DOM) event includes position information; otherwise, 0 (zero).</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlEventArgs.OffsetY">
      <summary>Gets the y-coordinate mouse position in pixels relative to the HTML object that raised the event.</summary>
      <returns>The y-coordinate mouse position in pixels if the Document Object Model (DOM) event includes position information; otherwise, 0 (zero).</returns>
    </member>
    <member name="M:System.Windows.Browser.HtmlEventArgs.PreventDefault">
      <summary>Specifies that the associated Document Object Model (DOM) element should not perform the default action for the current event.</summary>
      <exception cref="T:System.InvalidOperationException">An unexpected error occurred.</exception>
    </member>
    <member name="P:System.Windows.Browser.HtmlEventArgs.ScreenX">
      <summary>Gets the x-coordinate mouse position in pixels relative to the user's screen.</summary>
      <returns>The x-coordinate mouse position in pixels if the Document Object Model (DOM) event includes position information; otherwise, 0 (zero).</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlEventArgs.ScreenY">
      <summary>Gets the y-coordinate mouse position in pixels relative to the user's screen.</summary>
      <returns>The y-coordinate mouse position in pixels if the Document Object Model (DOM) event includes position information; otherwise, 0 (zero).</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlEventArgs.ShiftKey">
      <summary>Gets the state of the SHIFT key when the event was raised.</summary>
      <returns>true if the SHIFT key was pressed when the event was raised; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlEventArgs.Source">
      <summary>Gets a reference to the Document Object Model (DOM) element or object that raised the event.</summary>
      <returns>A reference to the DOM element or object that raised the event.</returns>
    </member>
    <member name="M:System.Windows.Browser.HtmlEventArgs.StopPropagation">
      <summary>Specifies that the event should not bubble up the Document Object Model (DOM) hierarchy.</summary>
      <exception cref="T:System.InvalidOperationException">An unexpected error occurred.</exception>
    </member>
    <member name="T:System.Windows.Browser.HtmlObject">
      <summary>Provides methods for browser elements that are explicitly supplied by the HTML features exposed by Silverlight.  </summary>
    </member>
    <member name="M:System.Windows.Browser.HtmlObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Browser.HtmlObject" /> class.</summary>
    </member>
    <member name="M:System.Windows.Browser.HtmlObject.AttachEvent(System.String,System.EventHandler)">
      <summary>Attaches the specified .NET Framework event handler (<see cref="T:System.EventHandler" />) to the specified event on the current Document Object Model (DOM) object. </summary>
      <returns>true if the event was successfully attached; otherwise, false.</returns>
      <param name="eventName">A named event on the DOM object.</param>
      <param name="handler">The method that handles the event.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="eventName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventName" /> is null.-or-<paramref name="handler" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlObject.AttachEvent(System.String,System.EventHandler{System.Windows.Browser.HtmlEventArgs})">
      <summary>Attaches the specified .NET Framework event handler (<see cref="T:System.EventHandler`1" />) to the specified event on the current Document Object Model (DOM) object.</summary>
      <returns>true if the event was successfully attached; otherwise, false.</returns>
      <param name="eventName">A named event on the DOM object.</param>
      <param name="handler">The method that handles the event.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="eventName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventName" /> is null.-or-<paramref name="handler" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlObject.ConvertTo(System.Type,System.Boolean)">
      <summary>Converts the current object to a specified type. This method is not supported. </summary>
      <returns>None.</returns>
      <param name="targetType">The conversion type.</param>
      <param name="allowSerialization">true to allow JavaScript Object Notation (JSON) serialization; otherwise, false.</param>
      <exception cref="T:System.ArgumentException">In all cases.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlObject.DetachEvent(System.String,System.EventHandler)">
      <summary>Detaches the specified.NET Framework event handler (<see cref="T:System.EventHandler" />) from the specified event on the current Document Object Model (DOM) object.</summary>
      <param name="eventName">A named event on the DOM object.</param>
      <param name="handler">The method that handles the event.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="eventName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventName" /> is null.-or-<paramref name="handler" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlObject.DetachEvent(System.String,System.EventHandler{System.Windows.Browser.HtmlEventArgs})">
      <summary>Detaches the specified .NET Framework event handler (<see cref="T:System.EventHandler`1" />) from the specified event on the current Document Object Model (DOM) object.</summary>
      <param name="eventName">A named event on the DOM object.</param>
      <param name="handler">The method that handles the event.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="eventName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventName" /> is null.-or-<paramref name="handler" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Browser.HtmlPage">
      <summary>Permits access to, and manipulation of, the browser's Document Object Model (DOM).</summary>
    </member>
    <member name="P:System.Windows.Browser.HtmlPage.BrowserInformation">
      <summary>Gets general information about the browser, such as name, version, and operating system.</summary>
      <returns>An object that represents general information about the hosting browser.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlPage.Document">
      <summary>Gets the browser's document object.</summary>
      <returns>A reference to the browser's document object.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlPage.IsEnabled">
      <summary>Gets a value that indicates whether the rest of the public surface area of the HTML Bridge feature is enabled.</summary>
      <returns>true if the HTML Bridge feature is enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlPage.IsPopupWindowAllowed">
      <summary>Indicates whether pop-up windows are allowed.</summary>
      <returns>true if pop-up windows are allowed; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlPage.Plugin">
      <summary>Gets a reference to the Silverlight plug-in that is defined within an &lt;object&gt; or &lt;embed&gt; tag on the host HTML page.</summary>
      <returns>The Silverlight plug-in in the Document Object Model (DOM). </returns>
    </member>
    <member name="M:System.Windows.Browser.HtmlPage.PopupWindow(System.Uri,System.String,System.Windows.Browser.HtmlPopupWindowOptions)">
      <summary>Opens a pop-up window.</summary>
      <returns>A handle to the new window; or null (see the Remarks section).</returns>
      <param name="navigateToUri">Specifies the Uniform Resource Identifier (URI) for the pop-up window.</param>
      <param name="target">Specifies the window that will be opened. (For more information, see the Remarks section.)</param>
      <param name="options">Specifies an <see cref="T:System.Windows.Browser.HtmlPopupWindowOptions" /> object that controls the pop-up window. (For more information, see the Remarks section.)</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="navigateToUri" /> specifies a protocol other than http or https, such as file://, or a random URI moniker.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigateToUri" /> is set to null.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlPage.RegisterCreateableType(System.String,System.Type)">
      <summary>Registers a managed type as available for creation from JavaScript code, through the Content.services.createObject and Content.services.createManagedObject helper methods.</summary>
      <param name="scriptAlias">The name used to register the managed type.</param>
      <param name="type">A managed type.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="scriptAlias" /> or <paramref name="type" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> is not public.-or-<paramref name="type" /> does not have a public, parameterless constructor.-or-<paramref name="type" /> is a string, primitive or value type, managed delegate, or empty string.-or-<paramref name="type" /> contains an embedded null character (\0).-or-An attempt is made to reregister <paramref name="type." /></exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlPage.RegisterScriptableObject(System.String,System.Object)">
      <summary>Registers a managed object for scriptable access by JavaScript code.</summary>
      <param name="scriptKey">The name used to register the managed object.</param>
      <param name="instance">A managed object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="scriptKey" /> or <paramref name="instance" /> is null.</exception>
      <exception cref="T:System.ArgumentException">An attempt is made to register a non-public type.-or-<paramref name="scriptKey" /> contains an embedded null character (\0).-or-<paramref name="instance" /> has no scriptable entry points.-or-A property, method, or event that is marked as scriptable uses one of the following reserved names: addEventListener, removeEventListener, constructor, or createManagedObject.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlPage.UnregisterCreateableType(System.String)">
      <summary>Explicitly unregisters a managed type that was previously registered by using the <see cref="M:System.Windows.Browser.HtmlPage.RegisterCreateableType(System.String,System.Type)" /> method.</summary>
      <param name="scriptAlias">The name of a registered managed type.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="scriptAlias" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="scriptAlias" /> is an empty string.</exception>
    </member>
    <member name="P:System.Windows.Browser.HtmlPage.Window">
      <summary>Gets the browser's window object.</summary>
      <returns>A reference to the browser's window object.</returns>
    </member>
    <member name="T:System.Windows.Browser.HtmlPopupWindowOptions">
      <summary>Provides options to control pop-up windows.</summary>
    </member>
    <member name="M:System.Windows.Browser.HtmlPopupWindowOptions.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Browser.HtmlPopupWindowOptions" /> class.</summary>
    </member>
    <member name="P:System.Windows.Browser.HtmlPopupWindowOptions.Directories">
      <summary>Gets or sets a value that determines whether the Internet Explorer links toolbar or Firefox personal/bookmarks toolbar is shown in the pop-up window.</summary>
      <returns>true if Internet Explorer links toolbar or Firefox personal/bookmarks toolbar is shown in the pop-up window; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlPopupWindowOptions.Height">
      <summary>Gets or sets the height of a pop-up window.</summary>
      <returns>Height of the pop-up window, in pixels.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The height is set to a value that is less than zero.</exception>
    </member>
    <member name="P:System.Windows.Browser.HtmlPopupWindowOptions.Left">
      <summary>Gets or sets the position of the left edge of a pop-up window.</summary>
      <returns>Horizontal distance from the left edge of the browser's document space to the left edge of the pop-up window.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The position is set to a value that is less than zero.</exception>
    </member>
    <member name="P:System.Windows.Browser.HtmlPopupWindowOptions.Location">
      <summary>Gets or sets the URL of a pop-up window.</summary>
      <returns>The URL of the pop-up window.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlPopupWindowOptions.Menubar">
      <summary>Gets or sets a value that indicates whether the menu bar is visible in a pop-up window.</summary>
      <returns>true if the menu bar is visible in the pop-up window; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlPopupWindowOptions.Resizeable">
      <summary>Gets or sets a value that indicates whether a pop-up window can be resized.</summary>
      <returns>true if the pop-up window can be resized; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlPopupWindowOptions.Scrollbars">
      <summary>Gets or sets a value that indicates whether scroll bars are visible in a pop-up window.</summary>
      <returns>true if scroll bars may appear in the pop-up window; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlPopupWindowOptions.Status">
      <summary>Gets or sets a value that indicates whether the status bar is visible in a pop-up window.</summary>
      <returns>true if the status bar is visible in the pop-up window; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlPopupWindowOptions.Toolbar">
      <summary>Gets or sets a value that indicates whether the toolbar is visible in a pop-up window.</summary>
      <returns>true if the toolbar is visible in the pop-up window; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Browser.HtmlPopupWindowOptions.Top">
      <summary>Gets or sets the position of the top edge of a pop-up window.</summary>
      <returns>Vertical distance from the top edge of the browser's document space to the top edge of the pop-up window.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The position is set to a value that is less than zero.</exception>
    </member>
    <member name="P:System.Windows.Browser.HtmlPopupWindowOptions.Width">
      <summary>Gets or sets the width of a pop-up window.</summary>
      <returns>Width of the pop-up window, in pixels.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The width is set to a value that is less than zero.</exception>
    </member>
    <member name="T:System.Windows.Browser.HtmlWindow">
      <summary>Provides the managed representation of the JavaScript window object.</summary>
    </member>
    <member name="M:System.Windows.Browser.HtmlWindow.Alert(System.String)">
      <summary>Displays a dialog box that contains an application-defined message.</summary>
      <param name="alertText">The text to display.</param>
    </member>
    <member name="M:System.Windows.Browser.HtmlWindow.Confirm(System.String)">
      <summary>Displays a confirmation dialog box that contains an optional message as well as OK and Cancel buttons.</summary>
      <returns>true if the user clicked the OK button; otherwise, false.</returns>
      <param name="confirmText">The text to display.</param>
    </member>
    <member name="M:System.Windows.Browser.HtmlWindow.CreateInstance(System.String,System.Object[])">
      <summary>Creates an instance of the specified JavaScript type.</summary>
      <returns>A JavaScript type.</returns>
      <param name="typeName">An HTML tag name.</param>
      <param name="args">Creation parameters.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="typeName" /> is an empty string or cannot be resolved.-or-There is a type mismatch between one of the supplied creation parameters and the target parameter(s).</exception>
    </member>
    <member name="P:System.Windows.Browser.HtmlWindow.CurrentBookmark">
      <summary>Gets or sets a string that represents the hash value of the current page's URL.</summary>
      <returns>The hash value of the current page's URL. If the URL has no hash value, this property returns an empty string.</returns>
      <exception cref="T:System.ArgumentNullException">The return value is null.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlWindow.Eval(System.String)">
      <summary>Evaluates a string that contains arbitrary JavaScript code.</summary>
      <returns>The results of the JavaScript engine's evaluation of the string in the <paramref name="code" /> parameter.</returns>
      <param name="code">JavaScript code.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="code" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="code" /> is an empty string.</exception>
      <exception cref="T:System.InvalidOperationException">An unexpected error occurred.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlWindow.Navigate(System.Uri)">
      <summary>Opens the specified page in the current browser.</summary>
      <param name="navigateToUri">The URL of the page to open.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigateToUri" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlWindow.Navigate(System.Uri,System.String)">
      <summary>Opens the specified page in the specified browser instance.</summary>
      <returns>A reference to the underlying window object that represents a new browser instance. </returns>
      <param name="navigateToUri">The URL of the page to open.</param>
      <param name="target">The name of the window or tab that <paramref name="navigateToUri" /> should be opened in.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigateToUri" /> or <paramref name="target" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlWindow.Navigate(System.Uri,System.String,System.String)">
      <summary>Opens the specified page in the specified browser instance, with the indicated user interface features.</summary>
      <returns>A reference to the underlying window object that represents the new browser.</returns>
      <param name="navigateToUri">The URL of the page to open.</param>
      <param name="target">The name of the window or tab that <paramref name="navigateToUri" /> should be opened in.</param>
      <param name="targetFeatures">A comma-delimited list of browser-specific features.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigateToUri" />, <paramref name="target" />, or <paramref name="targetFeatures" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Browser.HtmlWindow.NavigateToBookmark(System.String)">
      <summary>Changes the URL of the current page to a location that is specified by a named bookmark.</summary>
      <param name="bookmark">The name of a bookmark.</param>
    </member>
    <member name="M:System.Windows.Browser.HtmlWindow.Prompt(System.String)">
      <summary>Displays a dialog box that prompts the user with a message and an input field.</summary>
      <returns>The user's input.</returns>
      <param name="promptText">Message to display in the dialog box.</param>
    </member>
    <member name="T:System.Windows.Browser.HttpUtility">
      <summary>Provides methods for encoding and decoding HTML and URL strings.</summary>
    </member>
    <member name="M:System.Windows.Browser.HttpUtility.HtmlDecode(System.String)">
      <summary>Converts a string that has been HTML-encoded (for HTTP transmission) into a decoded string.</summary>
      <returns>A decoded string.</returns>
      <param name="html">An HTML-encoded string to decode.</param>
    </member>
    <member name="M:System.Windows.Browser.HttpUtility.HtmlEncode(System.String)">
      <summary>Converts a text string into an HTML-encoded string.</summary>
      <returns>An HTML-encoded string.</returns>
      <param name="html">The text to HTML-encode.</param>
    </member>
    <member name="M:System.Windows.Browser.HttpUtility.UrlDecode(System.String)">
      <summary>Converts a string that has been encoded for transmission in a URL into a decoded string.</summary>
      <returns>A decoded string.</returns>
      <param name="url">A URL-encoded string to decode.</param>
    </member>
    <member name="M:System.Windows.Browser.HttpUtility.UrlEncode(System.String)">
      <summary>Converts a text string into a URL-encoded string.</summary>
      <returns>A URL-encoded string.</returns>
      <param name="url">The text to URL-encode.</param>
    </member>
    <member name="T:System.Windows.Browser.MouseButtons">
      <summary>Specifies constants that indicate which mouse button was clicked.</summary>
    </member>
    <member name="F:System.Windows.Browser.MouseButtons.None">
      <summary>No mouse button was clicked.</summary>
    </member>
    <member name="F:System.Windows.Browser.MouseButtons.Left">
      <summary>The left mouse button was clicked.</summary>
    </member>
    <member name="F:System.Windows.Browser.MouseButtons.Right">
      <summary>The right mouse button was clicked.</summary>
    </member>
    <member name="F:System.Windows.Browser.MouseButtons.Middle">
      <summary>The wheel button was clicked.</summary>
    </member>
    <member name="T:System.Windows.Browser.ScriptableMemberAttribute">
      <summary>Indicates that a specific property, method, or event is accessible to JavaScript callers.</summary>
    </member>
    <member name="M:System.Windows.Browser.ScriptableMemberAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Browser.ScriptableMemberAttribute" /> class.</summary>
    </member>
    <member name="P:System.Windows.Browser.ScriptableMemberAttribute.EnableCreateableTypes">
      <summary>Controls the generation of Silverlight plug-in helper methods that can be used to create wrappers around managed objects.</summary>
      <returns>true if the HTML bridge feature should automatically generate helper methods in the scope of the registered scriptable type; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Windows.Browser.ScriptableMemberAttribute.ScriptAlias">
      <summary>Gets or sets the name of a property, method, or event that is exposed to JavaScript code. By default, the script alias is the same as the name of the managed property, method, or event.</summary>
      <returns>The name of a property, method, or event.</returns>
      <exception cref="T:System.ArgumentException">The alias is set to an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">The alias is set to null.</exception>
    </member>
    <member name="T:System.Windows.Browser.ScriptableTypeAttribute">
      <summary>Indicates that all public properties, methods, and events on a managed type are available to JavaScript code when they are registered by using the <see cref="M:System.Windows.Browser.HtmlPage.RegisterCreateableType(System.String,System.Type)" /> method.</summary>
    </member>
    <member name="M:System.Windows.Browser.ScriptableTypeAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Browser.ScriptableTypeAttribute" /> class.</summary>
    </member>
    <member name="T:System.Windows.Browser.ScriptEventHandler">
      <summary>Gets a reference to the JavaScript object that raised the event.</summary>
      <param name="sender">A reference to the JavaScript object that raised the event.</param>
      <param name="args">A reference to the complex type that is passed as an event argument.</param>
    </member>
    <member name="T:System.Windows.Browser.ScriptObject">
      <summary>Defines the core behavior for the <see cref="T:System.Windows.Browser.HtmlObject" /> class, and provides a base class for browser Document Object Model (DOM) access types. </summary>
    </member>
    <member name="M:System.Windows.Browser.ScriptObject.CheckAccess">
      <summary>Determines whether the current thread is the browser's UI thread.</summary>
      <returns>true if the current thread is the browser's UI thread; false if it is a background thread.</returns>
    </member>
    <member name="M:System.Windows.Browser.ScriptObject.ConvertTo``1">
      <summary>Converts the current scriptable object to a specified type. </summary>
      <returns>An object of type <paramref name="T" />.</returns>
      <typeparam name="T">The type to convert the current scriptable object to.</typeparam>
      <exception cref="T:System.ArgumentException">The conversion failed or is not supported.</exception>
    </member>
    <member name="M:System.Windows.Browser.ScriptObject.ConvertTo(System.Type,System.Boolean)">
      <summary>Converts the current scriptable object to a specified type, with serialization support. </summary>
      <returns>An object of type <paramref name="targetType" />.</returns>
      <param name="targetType">The type to convert the current scriptable object to.</param>
      <param name="allowSerialization">A flag which enables the current scriptable object to be serialized.</param>
      <exception cref="T:System.ArgumentException">The conversion failed or is not supported.</exception>
    </member>
    <member name="P:System.Windows.Browser.ScriptObject.Dispatcher">
      <summary>Gets an instance of the dispatcher. </summary>
      <returns>The dispatcher associated with the user interface (UI) thread.</returns>
    </member>
    <member name="M:System.Windows.Browser.ScriptObject.Finalize">
      <summary>Frees resources and performs other cleanup operations before the scriptable object is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Windows.Browser.ScriptObject.GetProperty(System.Int32)">
      <summary>Gets the value of a property that is identified by ordinal number on the current scriptable object.</summary>
      <returns>A null reference (Nothing in Visual Basic) if the property does not exist or if the underlying <see cref="T:System.Windows.Browser.ScriptObject" /> is a managed type.</returns>
      <param name="index">The ordinal number of the property.</param>
    </member>
    <member name="M:System.Windows.Browser.ScriptObject.GetProperty(System.String)">
      <summary>Gets the value of a property that is identified by name on the current scriptable object.</summary>
      <returns>A null reference (Nothing in Visual Basic) if the property does not exist or if the underlying <see cref="T:System.Windows.Browser.ScriptObject" /> is a managed type.</returns>
      <param name="name">The name of the property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string.-or-<paramref name="name" /> contains an embedded null character (\0).</exception>
    </member>
    <member name="M:System.Windows.Browser.ScriptObject.Initialize(System.IntPtr,System.IntPtr,System.Boolean,System.Boolean)">
      <summary>Initializes a scriptable object.</summary>
      <param name="handle">The handle to the object to initialize.</param>
      <param name="identity">The identity of the object.</param>
      <param name="addReference">true to specify that the HTML Bridge should assign a reference count to this object; otherwise, false.</param>
      <param name="releaseReferenceOnDispose">true to release the reference on dispose; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Browser.ScriptObject.Invoke(System.String,System.Object[])">
      <summary>Invokes a method on the current scriptable object, and optionally passes in one or more method parameters.</summary>
      <returns>An object that represents the return value from the underlying JavaScript method.</returns>
      <param name="name">The method to invoke.</param>
      <param name="args">Parameters to be passed to the method.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string.-or-<paramref name="name" /> contains an embedded null character (\0).-or-The method does not exist or is not scriptable.</exception>
      <exception cref="T:System.InvalidOperationException">The underlying method invocation results in an error. The .NET Framework attempts to return the error text that is associated with the error.</exception>
    </member>
    <member name="M:System.Windows.Browser.ScriptObject.InvokeSelf(System.Object[])">
      <summary>Invokes the current <see cref="T:System.Windows.Browser.ScriptObject" /> and assumes that it represents a JavaScript method.</summary>
      <returns>An object that represents the return value from the underlying JavaScript method.</returns>
      <param name="args">Parameters to be passed to the underlying JavaScript method.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string.-or-<paramref name="name" /> contains an embedded null character (\0).-or-The method does not exist or is not scriptable.</exception>
      <exception cref="T:System.InvalidOperationException">The current <see cref="T:System.Windows.Browser.ScriptObject" /> is not a method.-or-The underlying method invocation results in an error.</exception>
    </member>
    <member name="P:System.Windows.Browser.ScriptObject.ManagedObject">
      <summary>Gets the underlying managed object reference of the <see cref="T:System.Windows.Browser.ScriptObject" />.</summary>
      <returns>A managed object reference if the current <see cref="T:System.Windows.Browser.ScriptObject" /> wraps a managed type; otherwise, null.</returns>
    </member>
    <member name="M:System.Windows.Browser.ScriptObject.SetProperty(System.Int32,System.Object)">
      <summary>Sets the value of a property that is identified by ordinal number on the current scriptable object.</summary>
      <param name="index">The ordinal number of the property.</param>
      <param name="value">The value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="index" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> identifies an empty string.</exception>
      <exception cref="T:System.InvalidOperationException">A type mismatch exists between the supplied type and the target property.-or-The property is not settable.-or-All other failures.</exception>
    </member>
    <member name="M:System.Windows.Browser.ScriptObject.SetProperty(System.String,System.Object)">
      <summary>Sets a property that is identified by name on the current scriptable object.</summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value to set the property to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string.-or-<paramref name="name" /> contains an embedded null character (\0).</exception>
      <exception cref="T:System.InvalidOperationException">A type mismatch exists between the supplied type and the target property.-or-The property is not settable.-or-All other failures.</exception>
    </member>
    <member name="M:System.Windows.Browser.ScriptObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)">
      <summary>Returns the <see cref="T:System.Dynamic.DynamicMetaObject" /> responsible for binding operations performed on this object.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> to bind this object.</returns>
      <param name="parameter">The expression tree representation of the runtime value.</param>
    </member>
    <member name="T:System.Windows.Browser.ScriptObjectCollection">
      <summary>Provides a thread-safe wrapper for obtaining and iterating Document Object Model (DOM) collections.</summary>
    </member>
    <member name="P:System.Windows.Browser.ScriptObjectCollection.Count">
      <summary>Gets the number of items in the collection.</summary>
      <returns>A count of items in the collection.</returns>
    </member>
    <member name="P:System.Windows.Browser.ScriptObjectCollection.Item(System.Int32)">
      <summary>Gets an item from the collection at the specified index.</summary>
      <returns>A reference to an HTML element.</returns>
      <param name="index">The zero-based index of the item to be retrieved.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is invalid.</exception>
    </member>
    <member name="M:System.Windows.Browser.ScriptObjectCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="T:System.Collections.Generic.IEnumerable`1" />.</summary>
      <returns>An enumerator that iterates over a collection of a specified type.</returns>
    </member>
    <member name="M:System.Windows.Browser.ScriptObjectCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An enumerator that iterates through a collection.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\4.0.50401.0\ReferenceAssemblies\system.core.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Core</name>
  </assembly>
  <members>
    <member name="T:System.Action`10">
      <summary>Encapsulates a method that has 10 parameters and does not return a value.</summary>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg8">The eighth parameter of the method that this delegate encapsulates.</param>
      <param name="arg9">The ninth parameter of the method that this delegate encapsulates.</param>
      <param name="arg10">The tenth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Action`11">
      <summary>Encapsulates a method that has 11 parameters and does not return a value.</summary>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg8">The eighth parameter of the method that this delegate encapsulates.</param>
      <param name="arg9">The ninth parameter of the method that this delegate encapsulates.</param>
      <param name="arg10">The tenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg11">The eleventh parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Action`12">
      <summary>Encapsulates a method that has 12 parameters and does not return a value.</summary>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg8">The eighth parameter of the method that this delegate encapsulates.</param>
      <param name="arg9">The ninth parameter of the method that this delegate encapsulates.</param>
      <param name="arg10">The tenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg11">The eleventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg12">The twelfth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Action`13">
      <summary>Encapsulates a method that has 13 parameters and does not return a value.</summary>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg8">The eighth parameter of the method that this delegate encapsulates.</param>
      <param name="arg9">The ninth parameter of the method that this delegate encapsulates.</param>
      <param name="arg10">The tenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg11">The eleventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg12">The twelfth parameter of the method that this delegate encapsulates.</param>
      <param name="arg13">The thirteenth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Action`14">
      <summary>Encapsulates a method that has 14 parameters and does not return a value.</summary>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg8">The eighth parameter of the method that this delegate encapsulates.</param>
      <param name="arg9">The ninth parameter of the method that this delegate encapsulates.</param>
      <param name="arg10">The tenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg11">The eleventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg12">The twelfth parameter of the method that this delegate encapsulates.</param>
      <param name="arg13">The thirteenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg14">The fourteenth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Action`15">
      <summary>Encapsulates a method that has 15 parameters and does not return a value.</summary>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg8">The eighth parameter of the method that this delegate encapsulates.</param>
      <param name="arg9">The ninth parameter of the method that this delegate encapsulates.</param>
      <param name="arg10">The tenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg11">The eleventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg12">The twelfth parameter of the method that this delegate encapsulates.</param>
      <param name="arg13">The thirteenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg14">The fourteenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg15">The fifteenth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Action`16">
      <summary>Encapsulates a method that has 16 parameters and does not return a value.</summary>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg8">The eighth parameter of the method that this delegate encapsulates.</param>
      <param name="arg9">The ninth parameter of the method that this delegate encapsulates.</param>
      <param name="arg10">The tenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg11">The eleventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg12">The twelfth parameter of the method that this delegate encapsulates.</param>
      <param name="arg13">The thirteenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg14">The fourteenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg15">The fifteenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg16">The sixteenth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Action`2">
      <summary>Encapsulates a method that has two parameters and does not return a value.</summary>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Action`3">
      <summary>Encapsulates a method that takes three parameters and does not return a value.</summary>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Action`4">
      <summary>Encapsulates a method that has four parameters and does not return a value.</summary>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Action`9">
      <summary>Encapsulates a method that has nine parameters and does not return a value.</summary>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg8">The eighth parameter of the method that this delegate encapsulates.</param>
      <param name="arg9">The ninth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Func`1">
      <summary>Encapsulates a method that has no parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Func`10">
      <summary>Encapsulates a method that has nine parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg8">The eighth parameter of the method that this delegate encapsulates.</param>
      <param name="arg9">The ninth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Func`11">
      <summary>Encapsulates a method that has 10 parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg8">The eighth parameter of the method that this delegate encapsulates.</param>
      <param name="arg9">The ninth parameter of the method that this delegate encapsulates.</param>
      <param name="arg10">The tenth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Func`12">
      <summary>Encapsulates a method that has 11 parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg8">The eighth parameter of the method that this delegate encapsulates.</param>
      <param name="arg9">The ninth parameter of the method that this delegate encapsulates.</param>
      <param name="arg10">The tenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg11">The eleventh parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Func`13">
      <summary>Encapsulates a method that has 12 parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg8">The eighth parameter of the method that this delegate encapsulates.</param>
      <param name="arg9">The ninth parameter of the method that this delegate encapsulates.</param>
      <param name="arg10">The tenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg11">The eleventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg12">The twelfth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Func`14">
      <summary>Encapsulates a method that has 13 parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg8">The eighth parameter of the method that this delegate encapsulates.</param>
      <param name="arg9">The ninth parameter of the method that this delegate encapsulates.</param>
      <param name="arg10">The tenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg11">The eleventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg12">The twelfth parameter of the method that this delegate encapsulates.</param>
      <param name="arg13">The thirteenth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Func`15">
      <summary>Encapsulates a method that has 14 parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg8">The eighth parameter of the method that this delegate encapsulates.</param>
      <param name="arg9">The ninth parameter of the method that this delegate encapsulates.</param>
      <param name="arg10">The tenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg11">The eleventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg12">The twelfth parameter of the method that this delegate encapsulates.</param>
      <param name="arg13">The thirteenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg14">The fourteenth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Func`16">
      <summary>Encapsulates a method that has 15 parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg8">The eighth parameter of the method that this delegate encapsulates.</param>
      <param name="arg9">The ninth parameter of the method that this delegate encapsulates.</param>
      <param name="arg10">The tenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg11">The eleventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg12">The twelfth parameter of the method that this delegate encapsulates.</param>
      <param name="arg13">The thirteenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg14">The fourteenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg15">The fifteenth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Func`17">
      <summary>Encapsulates a method that has 16 parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <param name="arg5">The fifth parameter of the method that this delegate encapsulates.</param>
      <param name="arg6">The sixth parameter of the method that this delegate encapsulates.</param>
      <param name="arg7">The seventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg8">The eighth parameter of the method that this delegate encapsulates.</param>
      <param name="arg9">The ninth parameter of the method that this delegate encapsulates.</param>
      <param name="arg10">The tenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg11">The eleventh parameter of the method that this delegate encapsulates.</param>
      <param name="arg12">The twelfth parameter of the method that this delegate encapsulates.</param>
      <param name="arg13">The thirteenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg14">The fourteenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg15">The fifteenth parameter of the method that this delegate encapsulates.</param>
      <param name="arg16">The sixteenth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Func`2">
      <summary>Encapsulates a method that has one parameter and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg">The parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T">The type of the parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Func`3">
      <summary>Encapsulates a method that has two parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Func`4">
      <summary>Encapsulates a method that has three parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Func`5">
      <summary>Encapsulates a method that has four parameters and returns a value of the type specified by the <paramref name="TResult" /> parameter.</summary>
      <returns>The return value of the method that this delegate encapsulates.</returns>
      <param name="arg1">The first parameter of the method that this delegate encapsulates.</param>
      <param name="arg2">The second parameter of the method that this delegate encapsulates.</param>
      <param name="arg3">The third parameter of the method that this delegate encapsulates.</param>
      <param name="arg4">The fourth parameter of the method that this delegate encapsulates.</param>
      <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
      <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
    </member>
    <member name="T:System.Lazy`1">
      <summary>Provides support for lazy initialization.</summary>
      <typeparam name="T">Specifies the type of object that is being lazily initialized.</typeparam>
    </member>
    <member name="M:System.Lazy`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Lazy`1" /> class. When lazy initialization occurs, the default constructor of the target type is used.</summary>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Lazy`1" /> class. When lazy initialization occurs, the default constructor of the target type and the specified initialization mode are used.</summary>
      <param name="isThreadSafe">true to make this instance usable concurrently by multiple threads; false to make the instance usable by only one thread at a time.  </param>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Lazy`1" /> class. When lazy initialization occurs, the specified initialization function is used.</summary>
      <param name="valueFactory">The delegate that is invoked to produce the lazily initialized value when it is needed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="valueFactory" /> is null.</exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0},System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Lazy`1" /> class. When lazy initialization occurs, the specified initialization function and initialization mode are used.</summary>
      <param name="valueFactory">The delegate that is invoked to produce the lazily initialized value when it is needed.</param>
      <param name="isThreadSafe">true to make this instance usable concurrently by multiple threads; false to make this instance usable by only one thread at a time.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="valueFactory" /> is null.</exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0},System.Threading.LazyThreadSafetyMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Lazy`1" /> class that uses the specified initialization function and thread-safety mode.</summary>
      <param name="valueFactory">The delegate that is invoked to produce the lazily initialized value when it is needed.</param>
      <param name="mode">The thread safety mode. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> contains an invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="valueFactory" /> is null.</exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Threading.LazyThreadSafetyMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Lazy`1" /> class that uses the default constructor of <paramref name="T" /> and the specified thread-safety mode.</summary>
      <param name="mode">The thread safety mode. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> contains an invalid value.</exception>
    </member>
    <member name="P:System.Lazy`1.IsValueCreated">
      <summary>Gets a value that indicates whether a value has been created for this <see cref="T:System.Lazy`1" /> instance.</summary>
      <returns>true if a value has been created for this <see cref="T:System.Lazy`1" /> instance; otherwise, false.</returns>
    </member>
    <member name="M:System.Lazy`1.ToString">
      <summary>Creates and returns a string representation of the <see cref="P:System.Lazy`1.Value" /> property for this instance.</summary>
      <returns>The result of calling the <see cref="M:System.Object.ToString" /> method on the <see cref="P:System.Lazy`1.Value" /> property for this instance. </returns>
      <exception cref="T:System.NullReferenceException">The <see cref="P:System.Lazy`1.Value" /> property is null.</exception>
    </member>
    <member name="P:System.Lazy`1.Value">
      <summary>Gets the lazily initialized value of the current <see cref="T:System.Lazy`1" /> instance.</summary>
      <returns>The lazily initialized value of the current <see cref="T:System.Lazy`1" /> instance.</returns>
      <exception cref="T:System.MemberAccessException">The <see cref="T:System.Lazy`1" /> instance is initialized to use the default constructor of the type that is being lazily initialized, and permissions to access the constructor are missing.</exception>
      <exception cref="T:System.MissingMemberException">The <see cref="T:System.Lazy`1" /> instance is initialized to use the default constructor of the type that is being lazily initialized, and that type does not have a public, parameterless constructor.</exception>
      <exception cref="T:System.InvalidOperationException">The initialization function tries to access <see cref="P:System.Lazy`1.Value" /> on this instance.</exception>
    </member>
    <member name="T:System.Collections.Generic.HashSet`1">
      <summary>Represents a set of values.</summary>
      <typeparam name="T">The type of elements in the hash set.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.HashSet`1" /> class that is empty and uses the default equality comparer for the set type.</summary>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.HashSet`1" /> class that uses the default equality comparer for the set type, contains elements copied from the specified collection, and has sufficient capacity to accommodate the number of elements copied.</summary>
      <param name="collection">The collection whose elements are copied to the new set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.HashSet`1" /> class that uses the specified equality comparer for the set type, contains elements copied from the specified collection, and has sufficient capacity to accommodate the number of elements copied.</summary>
      <param name="collection">The collection whose elements are copied to the new set.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing values in the set, or null to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1" /> implementation for the set type.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.HashSet`1" /> class that is empty and uses the specified equality comparer for the set type.</summary>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing values in the set, or null to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1" /> implementation for the set type.</param>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Add(`0)">
      <summary>Adds the specified element to a set.</summary>
      <returns>true if the element is added to the <see cref="T:System.Collections.Generic.HashSet`1" /> object; false if the element is already present.</returns>
      <param name="item">The element to add to the set.</param>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Clear">
      <summary>Removes all elements from a <see cref="T:System.Collections.Generic.HashSet`1" /> object.</summary>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.Comparer">
      <summary>Gets the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> object that is used to determine equality for the values in the set.</summary>
      <returns>The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> object that is used to determine equality for the values in the set.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Contains(`0)">
      <summary>Determines whether a <see cref="T:System.Collections.Generic.HashSet`1" /> object contains the specified element.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.HashSet`1" /> object contains the specified element; otherwise, false.</returns>
      <param name="item">The element to locate in the <see cref="T:System.Collections.Generic.HashSet`1" /> object.</param>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])">
      <summary>Copies the elements of a <see cref="T:System.Collections.Generic.HashSet`1" /> object to an array.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.HashSet`1" /> object. The array must have zero-based indexing.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the elements of a <see cref="T:System.Collections.Generic.HashSet`1" /> object to an array, starting at the specified array index.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.HashSet`1" /> object. The array must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="arrayIndex" /> is greater than the length of the destination <paramref name="array" />.-or-<paramref name="count" /> is larger than the size of the destination <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
      <summary>Copies the specified number of elements of a <see cref="T:System.Collections.Generic.HashSet`1" /> object to an array, starting at the specified array index.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.HashSet`1" /> object. The array must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <param name="count">The number of elements to copy to <paramref name="array" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than 0.-or-<paramref name="count" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="arrayIndex" /> is greater than the length of the destination <paramref name="array" />.-or-<paramref name="count" /> is greater than the available space from the <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.Count">
      <summary>Gets the number of elements that are contained in a set.</summary>
      <returns>The number of elements that are contained in the set.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Removes all elements in the specified collection from the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</summary>
      <param name="other">The collection of items to remove from the <see cref="T:System.Collections.Generic.HashSet`1" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through a <see cref="T:System.Collections.Generic.HashSet`1" /> object.</summary>
      <returns>A <see cref="T:System.Collections.Generic.HashSet`1.Enumerator" /> object for the <see cref="T:System.Collections.Generic.HashSet`1" /> object.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifies the current <see cref="T:System.Collections.Generic.HashSet`1" /> object to contain only elements that are present in that object and in the specified collection.</summary>
      <param name="other">The collection to compare to the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determines whether a <see cref="T:System.Collections.Generic.HashSet`1" /> object is a proper subset of the specified collection.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.HashSet`1" /> object is a proper subset of <paramref name="other" />; otherwise, false.</returns>
      <param name="other">The collection to compare to the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determines whether a <see cref="T:System.Collections.Generic.HashSet`1" /> object is a proper superset of the specified collection.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.HashSet`1" /> object is a proper superset of <paramref name="other" />; otherwise, false.</returns>
      <param name="other">The collection to compare to the current <see cref="T:System.Collections.Generic.HashSet`1" /> object. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determines whether a <see cref="T:System.Collections.Generic.HashSet`1" /> object is a subset of the specified collection.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.HashSet`1" /> object is a subset of <paramref name="other" />; otherwise, false.</returns>
      <param name="other">The collection to compare to the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determines whether a <see cref="T:System.Collections.Generic.HashSet`1" /> object is a superset of the specified collection.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.HashSet`1" /> object is a superset of <paramref name="other" />; otherwise, false.</returns>
      <param name="other">The collection to compare to the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determines whether the current <see cref="T:System.Collections.Generic.HashSet`1" /> object and a specified collection share common elements.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.HashSet`1" /> object and <paramref name="other" /> share at least one common element; otherwise, false.</returns>
      <param name="other">The collection to compare to the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Remove(`0)">
      <summary>Removes the specified element from a <see cref="T:System.Collections.Generic.HashSet`1" /> object.</summary>
      <returns>true if the element is successfully found and removed; otherwise, false.  This method returns false if <paramref name="item" /> is not found in the <see cref="T:System.Collections.Generic.HashSet`1" /> object.</returns>
      <param name="item">The element to remove.</param>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
      <summary>Removes all elements that match the conditions defined by the specified predicate from a <see cref="T:System.Collections.Generic.HashSet`1" /> collection.</summary>
      <returns>The number of elements that were removed from the <see cref="T:System.Collections.Generic.HashSet`1" /> collection.</returns>
      <param name="match">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determines whether a <see cref="T:System.Collections.Generic.HashSet`1" /> object and the specified collection contain the same elements.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.HashSet`1" /> object is equal to <paramref name="other" />; otherwise, false.</returns>
      <param name="other">The collection to compare to the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifies the current <see cref="T:System.Collections.Generic.HashSet`1" /> object to contain only elements that are present either in that object or in the specified collection, but not both.</summary>
      <param name="other">The collection to compare to the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Adds an item to an <see cref="T:System.Collections.Generic.ICollection`1" /> object.</summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" /> object.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Gets a value indicating whether a collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.TrimExcess">
      <summary>Sets the capacity of a <see cref="T:System.Collections.Generic.HashSet`1" /> object to the actual number of elements it contains, rounded up to a nearby, implementation-specific value.</summary>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifies the current <see cref="T:System.Collections.Generic.HashSet`1" /> object to contain all elements that are present in both itself and in the specified collection.</summary>
      <param name="other">The collection to compare to the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="T:System.Collections.Generic.HashSet`1.Enumerator">
      <summary>Enumerates the elements of a <see cref="T:System.Collections.Generic.HashSet`1" /> object.</summary>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
      <summary>Gets the element at the current position of the enumerator.</summary>
      <returns>The element in the <see cref="T:System.Collections.Generic.HashSet`1" /> collection at the current position of the enumerator.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Enumerator.Dispose">
      <summary>Releases all resources used by a <see cref="T:System.Collections.Generic.HashSet`1.Enumerator" /> object.</summary>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the <see cref="T:System.Collections.Generic.HashSet`1" /> collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the element at the current position of the enumerator.</summary>
      <returns>The element in the collection at the current position of the enumerator, as an <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="T:System.Dynamic.BinaryOperationBinder">
      <summary>Represents the binary dynamic operation at the call site, providing the binding semantic and the details about the operation.</summary>
    </member>
    <member name="M:System.Dynamic.BinaryOperationBinder.#ctor(System.Linq.Expressions.ExpressionType)">
      <summary>Initializes a new instance of the <see cref="T:System.Dynamic.BinaryOperationBinder" /> class.</summary>
      <param name="operation">The binary operation kind.</param>
    </member>
    <member name="M:System.Dynamic.BinaryOperationBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic binary operation.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic operation.</param>
      <param name="args">An array of arguments of the dynamic operation.</param>
    </member>
    <member name="M:System.Dynamic.BinaryOperationBinder.FallbackBinaryOperation(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
      <summary>Performs the binding of the binary dynamic operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic binary operation.</param>
      <param name="arg">The right hand side operand of the dynamic binary operation.</param>
    </member>
    <member name="M:System.Dynamic.BinaryOperationBinder.FallbackBinaryOperation(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
      <summary>When overridden in the derived class, performs the binding of the binary dynamic operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic binary operation.</param>
      <param name="arg">The right hand side operand of the dynamic binary operation.</param>
      <param name="errorSuggestion">The binding result if the binding fails, or null.</param>
    </member>
    <member name="P:System.Dynamic.BinaryOperationBinder.Operation">
      <summary>The binary operation kind.</summary>
      <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> object representing the kind of binary operation.</returns>
    </member>
    <member name="P:System.Dynamic.BinaryOperationBinder.ReturnType">
      <summary>The result type of the operation.</summary>
      <returns>The result type of the operation.</returns>
    </member>
    <member name="T:System.Dynamic.BindingRestrictions">
      <summary>Represents a set of binding restrictions on the <see cref="T:System.Dynamic.DynamicMetaObject" /> under which the dynamic binding is valid.</summary>
    </member>
    <member name="M:System.Dynamic.BindingRestrictions.Combine(System.Collections.Generic.IList{System.Dynamic.DynamicMetaObject})">
      <summary>Combines binding restrictions from the list of <see cref="T:System.Dynamic.DynamicMetaObject" /> instances into one set of restrictions.</summary>
      <returns>The new set of binding restrictions.</returns>
      <param name="contributingObjects">The list of <see cref="T:System.Dynamic.DynamicMetaObject" /> instances from which to combine restrictions.</param>
    </member>
    <member name="F:System.Dynamic.BindingRestrictions.Empty">
      <summary>Represents an empty set of binding restrictions. This field is read only.</summary>
    </member>
    <member name="M:System.Dynamic.BindingRestrictions.GetExpressionRestriction(System.Linq.Expressions.Expression)">
      <summary>Creates the binding restriction that checks the expression for arbitrary immutable properties.</summary>
      <returns>The new binding restrictions.</returns>
      <param name="expression">The expression representing the restrictions.</param>
    </member>
    <member name="M:System.Dynamic.BindingRestrictions.GetInstanceRestriction(System.Linq.Expressions.Expression,System.Object)">
      <summary>Creates the binding restriction that checks the expression for object instance identity.</summary>
      <returns>The new binding restrictions.</returns>
      <param name="expression">The expression to test.</param>
      <param name="instance">The exact object instance to test.</param>
    </member>
    <member name="M:System.Dynamic.BindingRestrictions.GetTypeRestriction(System.Linq.Expressions.Expression,System.Type)">
      <summary>Creates the binding restriction that check the expression for runtime type identity.</summary>
      <returns>The new binding restrictions.</returns>
      <param name="expression">The expression to test.</param>
      <param name="type">The exact type to test.</param>
    </member>
    <member name="M:System.Dynamic.BindingRestrictions.Merge(System.Dynamic.BindingRestrictions)">
      <summary>Merges the set of binding restrictions with the current binding restrictions.</summary>
      <returns>The new set of binding restrictions.</returns>
      <param name="restrictions">The set of restrictions with which to merge the current binding restrictions.</param>
    </member>
    <member name="M:System.Dynamic.BindingRestrictions.ToExpression">
      <summary>Creates the <see cref="T:System.Linq.Expressions.Expression" /> representing the binding restrictions.</summary>
      <returns>The expression tree representing the restrictions.</returns>
    </member>
    <member name="T:System.Dynamic.CallInfo">
      <summary>Describes arguments in the dynamic binding process.</summary>
    </member>
    <member name="M:System.Dynamic.CallInfo.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Creates a new CallInfo that represents arguments in the dynamic binding process.</summary>
      <param name="argCount">The number of arguments.</param>
      <param name="argNames">The argument names.</param>
    </member>
    <member name="M:System.Dynamic.CallInfo.#ctor(System.Int32,System.String[])">
      <summary>Creates a new PositionalArgumentInfo.</summary>
      <param name="argCount">The number of arguments.</param>
      <param name="argNames">The argument names.</param>
    </member>
    <member name="P:System.Dynamic.CallInfo.ArgumentCount">
      <summary>The number of arguments.</summary>
      <returns>The number of arguments.</returns>
    </member>
    <member name="P:System.Dynamic.CallInfo.ArgumentNames">
      <summary>The argument names.</summary>
      <returns>The read-only collection of argument names.</returns>
    </member>
    <member name="M:System.Dynamic.CallInfo.Equals(System.Object)">
      <summary>Determines whether the specified CallInfo instance is considered equal to the current.</summary>
      <returns>true if the specified instance is equal to the current one otherwise, false.</returns>
      <param name="obj">The instance of <see cref="T:System.Dynamic.CallInfo" /> to compare with the current instance.</param>
    </member>
    <member name="M:System.Dynamic.CallInfo.GetHashCode">
      <summary>Serves as a hash function for the current <see cref="T:System.Dynamic.CallInfo" />.</summary>
      <returns>A hash code for the current <see cref="T:System.Dynamic.CallInfo" />.</returns>
    </member>
    <member name="T:System.Dynamic.ConvertBinder">
      <summary>Represents the convert dynamic operation at the call site, providing the binding semantic and the details about the operation.</summary>
    </member>
    <member name="M:System.Dynamic.ConvertBinder.#ctor(System.Type,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Dynamic.ConvertBinder" />.</summary>
      <param name="type">The type to convert to.</param>
      <param name="explicit">Is true if the conversion should consider explicit conversions; otherwise, false.</param>
    </member>
    <member name="M:System.Dynamic.ConvertBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic convert operation.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic convert operation.</param>
      <param name="args">An array of arguments of the dynamic convert operation.</param>
    </member>
    <member name="P:System.Dynamic.ConvertBinder.Explicit">
      <summary>Gets the value indicating if the conversion should consider explicit conversions.</summary>
      <returns>True if there is an explicit conversion, otherwise false.</returns>
    </member>
    <member name="M:System.Dynamic.ConvertBinder.FallbackConvert(System.Dynamic.DynamicMetaObject)">
      <summary>Performs the binding of the dynamic convert operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic convert operation.</param>
    </member>
    <member name="M:System.Dynamic.ConvertBinder.FallbackConvert(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
      <summary>When overridden in the derived class, performs the binding of the dynamic convert operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic convert operation.</param>
      <param name="errorSuggestion">The binding result to use if binding fails, or null.</param>
    </member>
    <member name="P:System.Dynamic.ConvertBinder.ReturnType">
      <summary>The result type of the operation.</summary>
      <returns>The <see cref="T:System.Type" /> object representing the result type of the operation.</returns>
    </member>
    <member name="P:System.Dynamic.ConvertBinder.Type">
      <summary>The type to convert to.</summary>
      <returns>The <see cref="T:System.Type" /> object that represents the type to convert to.</returns>
    </member>
    <member name="T:System.Dynamic.CreateInstanceBinder">
      <summary>Represents the dynamic create operation at the call site, providing the binding semantic and the details about the operation.</summary>
    </member>
    <member name="M:System.Dynamic.CreateInstanceBinder.#ctor(System.Dynamic.CallInfo)">
      <summary>Initializes a new intsance of the <see cref="T:System.Dynamic.CreateInstanceBinder" />.</summary>
      <param name="callInfo">The signature of the arguments at the call site.</param>
    </member>
    <member name="M:System.Dynamic.CreateInstanceBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic create operation.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic create operation.</param>
      <param name="args">An array of arguments of the dynamic create operation.</param>
    </member>
    <member name="P:System.Dynamic.CreateInstanceBinder.CallInfo">
      <summary>Gets the signature of the arguments at the call site.</summary>
      <returns>The signature of the arguments at the call site.</returns>
    </member>
    <member name="M:System.Dynamic.CreateInstanceBinder.FallbackCreateInstance(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic create operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic create operation.</param>
      <param name="args">The arguments of the dynamic create operation.</param>
    </member>
    <member name="M:System.Dynamic.CreateInstanceBinder.FallbackCreateInstance(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)">
      <summary>When overridden in the derived class, performs the binding of the dynamic create operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic create operation.</param>
      <param name="args">The arguments of the dynamic create operation.</param>
      <param name="errorSuggestion">The binding result to use if binding fails, or null.</param>
    </member>
    <member name="P:System.Dynamic.CreateInstanceBinder.ReturnType">
      <summary>The result type of the operation.</summary>
      <returns>The <see cref="T:System.Type" /> object representing the result type of the operation.</returns>
    </member>
    <member name="T:System.Dynamic.DeleteIndexBinder">
      <summary>Represents the dynamic delete index operation at the call site, providing the binding semantic and the details about the operation.</summary>
    </member>
    <member name="M:System.Dynamic.DeleteIndexBinder.#ctor(System.Dynamic.CallInfo)">
      <summary>Initializes a new instance of the <see cref="T:System.Dynamic.DeleteIndexBinder" />.</summary>
      <param name="callInfo">The signature of the arguments at the call site.</param>
    </member>
    <member name="M:System.Dynamic.DeleteIndexBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic delete index operation.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic delete index operation.</param>
      <param name="args">An array of arguments of the dynamic delete index operation.</param>
    </member>
    <member name="P:System.Dynamic.DeleteIndexBinder.CallInfo">
      <summary>Gets the signature of the arguments at the call site.</summary>
      <returns>The signature of the arguments at the call site.</returns>
    </member>
    <member name="M:System.Dynamic.DeleteIndexBinder.FallbackDeleteIndex(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic delete index operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic delete index operation.</param>
      <param name="indexes">The arguments of the dynamic delete index operation.</param>
    </member>
    <member name="M:System.Dynamic.DeleteIndexBinder.FallbackDeleteIndex(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)">
      <summary>When overridden in the derived class, performs the binding of the dynamic delete index operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic delete index operation.</param>
      <param name="indexes">The arguments of the dynamic delete index operation.</param>
      <param name="errorSuggestion">The binding result to use if binding fails, or null.</param>
    </member>
    <member name="P:System.Dynamic.DeleteIndexBinder.ReturnType">
      <summary>The result type of the operation.</summary>
      <returns>The <see cref="T:System.Type" /> object representing the result type of the operation.</returns>
    </member>
    <member name="T:System.Dynamic.DeleteMemberBinder">
      <summary>Represents the dynamic delete member operation at the call site, providing the binding semantic and the details about the operation.</summary>
    </member>
    <member name="M:System.Dynamic.DeleteMemberBinder.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Dynamic.DeleteIndexBinder" />.</summary>
      <param name="name">The name of the member to delete.</param>
      <param name="ignoreCase">Is true if the name should be matched ignoring case; false otherwise.</param>
    </member>
    <member name="M:System.Dynamic.DeleteMemberBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic delete member operation.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic delete member operation.</param>
      <param name="args">An array of arguments of the dynamic delete member operation.</param>
    </member>
    <member name="M:System.Dynamic.DeleteMemberBinder.FallbackDeleteMember(System.Dynamic.DynamicMetaObject)">
      <summary>Performs the binding of the dynamic delete member operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic delete member operation.</param>
    </member>
    <member name="M:System.Dynamic.DeleteMemberBinder.FallbackDeleteMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
      <summary>When overridden in the derived class, performs the binding of the dynamic delete member operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic delete member operation.</param>
      <param name="errorSuggestion">The binding result to use if binding fails, or null.</param>
    </member>
    <member name="P:System.Dynamic.DeleteMemberBinder.IgnoreCase">
      <summary>Gets the value indicating if the string comparison should ignore the case of the member name.</summary>
      <returns>True if the string comparison should ignore the case, otherwise false.</returns>
    </member>
    <member name="P:System.Dynamic.DeleteMemberBinder.Name">
      <summary>Gets the name of the member to delete.</summary>
      <returns>The name of the member to delete.</returns>
    </member>
    <member name="P:System.Dynamic.DeleteMemberBinder.ReturnType">
      <summary>The result type of the operation.</summary>
      <returns>The <see cref="T:System.Type" /> object representing the result type of the operation.</returns>
    </member>
    <member name="T:System.Dynamic.DynamicMetaObject">
      <summary>Represents the dynamic binding and a binding logic of an object participating in the dynamic binding.</summary>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObject.#ctor(System.Linq.Expressions.Expression,System.Dynamic.BindingRestrictions)">
      <summary>Initializes a new instance of the <see cref="T:System.Dynamic.DynamicMetaObject" /> class.</summary>
      <param name="expression">The expression representing this <see cref="T:System.Dynamic.DynamicMetaObject" /> during the dynamic binding process.</param>
      <param name="restrictions">The set of binding restrictions under which the binding is valid.</param>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObject.#ctor(System.Linq.Expressions.Expression,System.Dynamic.BindingRestrictions,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Dynamic.DynamicMetaObject" /> class.</summary>
      <param name="expression">The expression representing this <see cref="T:System.Dynamic.DynamicMetaObject" /> during the dynamic binding process.</param>
      <param name="restrictions">The set of binding restrictions under which the binding is valid.</param>
      <param name="value">The runtime value represented by the <see cref="T:System.Dynamic.DynamicMetaObject" />.</param>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObject.BindBinaryOperation(System.Dynamic.BinaryOperationBinder,System.Dynamic.DynamicMetaObject)">
      <summary>Performs the binding of the dynamic binary operation.</summary>
      <returns>The new <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="binder">An instance of the <see cref="T:System.Dynamic.BinaryOperationBinder" /> that represents the details of the dynamic operation.</param>
      <param name="arg">An instance of the <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the right hand side of the binary operation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObject.BindConvert(System.Dynamic.ConvertBinder)">
      <summary>Performs the binding of the dynamic conversion operation.</summary>
      <returns>The new <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="binder">An instance of the <see cref="T:System.Dynamic.ConvertBinder" /> that represents the details of the dynamic operation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObject.BindCreateInstance(System.Dynamic.CreateInstanceBinder,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic create instance operation.</summary>
      <returns>The new <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="binder">An instance of the <see cref="T:System.Dynamic.CreateInstanceBinder" /> that represents the details of the dynamic operation.</param>
      <param name="args">An array of <see cref="T:System.Dynamic.DynamicMetaObject" /> instances - arguments to the create instance operation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObject.BindDeleteIndex(System.Dynamic.DeleteIndexBinder,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic delete index operation.</summary>
      <returns>The new <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="binder">An instance of the <see cref="T:System.Dynamic.DeleteIndexBinder" /> that represents the details of the dynamic operation.</param>
      <param name="indexes">An array of <see cref="T:System.Dynamic.DynamicMetaObject" /> instances - indexes for the delete index operation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObject.BindDeleteMember(System.Dynamic.DeleteMemberBinder)">
      <summary>Performs the binding of the dynamic delete member operation.</summary>
      <returns>The new <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="binder">An instance of the <see cref="T:System.Dynamic.DeleteMemberBinder" /> that represents the details of the dynamic operation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObject.BindGetIndex(System.Dynamic.GetIndexBinder,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic get index operation.</summary>
      <returns>The new <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="binder">An instance of the <see cref="T:System.Dynamic.GetIndexBinder" /> that represents the details of the dynamic operation.</param>
      <param name="indexes">An array of <see cref="T:System.Dynamic.DynamicMetaObject" /> instances - indexes for the get index operation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObject.BindGetMember(System.Dynamic.GetMemberBinder)">
      <summary>Performs the binding of the dynamic get member operation.</summary>
      <returns>The new <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="binder">An instance of the <see cref="T:System.Dynamic.GetMemberBinder" /> that represents the details of the dynamic operation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObject.BindInvoke(System.Dynamic.InvokeBinder,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic invoke operation.</summary>
      <returns>The new <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="binder">An instance of the <see cref="T:System.Dynamic.InvokeBinder" /> that represents the details of the dynamic operation.</param>
      <param name="args">An array of <see cref="T:System.Dynamic.DynamicMetaObject" /> instances - arguments to the invoke operation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObject.BindInvokeMember(System.Dynamic.InvokeMemberBinder,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic invoke member operation.</summary>
      <returns>The new <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="binder">An instance of the <see cref="T:System.Dynamic.InvokeMemberBinder" /> that represents the details of the dynamic operation.</param>
      <param name="args">An array of <see cref="T:System.Dynamic.DynamicMetaObject" /> instances - arguments to the invoke member operation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObject.BindSetIndex(System.Dynamic.SetIndexBinder,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)">
      <summary>Performs the binding of the dynamic set index operation.</summary>
      <returns>The new <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="binder">An instance of the <see cref="T:System.Dynamic.SetIndexBinder" /> that represents the details of the dynamic operation.</param>
      <param name="indexes">An array of <see cref="T:System.Dynamic.DynamicMetaObject" /> instances - indexes for the set index operation.</param>
      <param name="value">The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the value for the set index operation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObject.BindSetMember(System.Dynamic.SetMemberBinder,System.Dynamic.DynamicMetaObject)">
      <summary>Performs the binding of the dynamic set member operation.</summary>
      <returns>The new <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="binder">An instance of the <see cref="T:System.Dynamic.SetMemberBinder" /> that represents the details of the dynamic operation.</param>
      <param name="value">The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the value for the set member operation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObject.BindUnaryOperation(System.Dynamic.UnaryOperationBinder)">
      <summary>Performs the binding of the dynamic unary operation.</summary>
      <returns>The new <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="binder">An instance of the <see cref="T:System.Dynamic.UnaryOperationBinder" /> that represents the details of the dynamic operation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObject.Create(System.Object,System.Linq.Expressions.Expression)">
      <summary>Creates a meta-object for the specified object.</summary>
      <returns>If the given object implements <see cref="T:System.Dynamic.IDynamicMetaObjectProvider" /> and is not a remote object from outside the current AppDomain, returns the object's specific meta-object returned by <see cref="M:System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)" />. Otherwise a plain new meta-object with no restrictions is created and returned.</returns>
      <param name="value">The object to get a meta-object for.</param>
      <param name="expression">The expression representing this <see cref="T:System.Dynamic.DynamicMetaObject" /> during the dynamic binding process.</param>
    </member>
    <member name="F:System.Dynamic.DynamicMetaObject.EmptyMetaObjects">
      <summary>Represents an empty array of type <see cref="T:System.Dynamic.DynamicMetaObject" />. This field is read only.</summary>
    </member>
    <member name="P:System.Dynamic.DynamicMetaObject.Expression">
      <summary>The expression representing the <see cref="T:System.Dynamic.DynamicMetaObject" /> during the dynamic binding process.</summary>
      <returns>The expression representing the <see cref="T:System.Dynamic.DynamicMetaObject" /> during the dynamic binding process.</returns>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObject.GetDynamicMemberNames">
      <summary>Returns the enumeration of all dynamic member names.</summary>
      <returns>The list of dynamic member names.</returns>
    </member>
    <member name="P:System.Dynamic.DynamicMetaObject.HasValue">
      <summary>Gets a value indicating whether the <see cref="T:System.Dynamic.DynamicMetaObject" /> has the runtime value.</summary>
      <returns>True if the <see cref="T:System.Dynamic.DynamicMetaObject" /> has the runtime value, otherwise false.</returns>
    </member>
    <member name="P:System.Dynamic.DynamicMetaObject.LimitType">
      <summary>Gets the limit type of the <see cref="T:System.Dynamic.DynamicMetaObject" />.</summary>
      <returns>
        <see cref="P:System.Dynamic.DynamicMetaObject.RuntimeType" /> if runtime value is available, a type of the <see cref="P:System.Dynamic.DynamicMetaObject.Expression" /> otherwise.</returns>
    </member>
    <member name="P:System.Dynamic.DynamicMetaObject.Restrictions">
      <summary>The set of binding restrictions under which the binding is valid.</summary>
      <returns>The set of binding restrictions.</returns>
    </member>
    <member name="P:System.Dynamic.DynamicMetaObject.RuntimeType">
      <summary>Gets the <see cref="T:System.Type" /> of the runtime value or null if the <see cref="T:System.Dynamic.DynamicMetaObject" /> has no value associated with it.</summary>
      <returns>The <see cref="T:System.Type" /> of the runtime value or null.</returns>
    </member>
    <member name="P:System.Dynamic.DynamicMetaObject.Value">
      <summary>The runtime value represented by this <see cref="T:System.Dynamic.DynamicMetaObject" />.</summary>
      <returns>The runtime value represented by this <see cref="T:System.Dynamic.DynamicMetaObject" />.</returns>
    </member>
    <member name="T:System.Dynamic.DynamicMetaObjectBinder">
      <summary>The dynamic call site binder that participates in the <see cref="T:System.Dynamic.DynamicMetaObject" /> binding protocol.</summary>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObjectBinder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Dynamic.DynamicMetaObjectBinder" /> class.</summary>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>When overridden in the derived class, performs the binding of the dynamic operation.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic operation.</param>
      <param name="args">An array of arguments of the dynamic operation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)">
      <summary>Performs the runtime binding of the dynamic operation on a set of arguments.</summary>
      <returns>An Expression that performs tests on the dynamic operation arguments, and performs the dynamic operation if the tests are valid. If the tests fail on subsequent occurrences of the dynamic operation, Bind will be called again to produce a new <see cref="T:System.Linq.Expressions.Expression" /> for the new argument types.</returns>
      <param name="args">An array of arguments to the dynamic operation.</param>
      <param name="parameters">The array of <see cref="T:System.Linq.Expressions.ParameterExpression" /> instances that represent the parameters of the call site in the binding process.</param>
      <param name="returnLabel">A LabelTarget used to return the result of the dynamic binding.</param>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>Defers the binding of the operation until later time when the runtime values of all dynamic operation arguments have been computed.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic operation.</param>
      <param name="args">An array of arguments of the dynamic operation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])">
      <summary>Defers the binding of the operation until later time when the runtime values of all dynamic operation arguments have been computed.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="args">An array of arguments of the dynamic operation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)">
      <summary>Gets an expression that will cause the binding to be updated. It indicates that the expression's binding is no longer valid. This is typically used when the "version" of a dynamic object has changed.</summary>
      <returns>The update expression.</returns>
      <param name="type">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of the resulting expression; any type is allowed.</param>
    </member>
    <member name="P:System.Dynamic.DynamicMetaObjectBinder.ReturnType">
      <summary>The result type of the operation.</summary>
      <returns>The <see cref="T:System.Type" /> object representing the result type of the operation.</returns>
    </member>
    <member name="T:System.Dynamic.DynamicObject">
      <summary>Provides a base class for specifying dynamic behavior at run time. This class must be inherited from; you cannot instantiate it directly.</summary>
    </member>
    <member name="M:System.Dynamic.DynamicObject.#ctor">
      <summary>Enables derived types to initialize a new instance of the <see cref="T:System.Dynamic.DynamicObject" /> type.</summary>
    </member>
    <member name="M:System.Dynamic.DynamicObject.GetDynamicMemberNames">
      <summary>Returns the enumeration of all dynamic member names. </summary>
      <returns>A sequence that contains dynamic member names.</returns>
    </member>
    <member name="M:System.Dynamic.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)">
      <summary>Provides a <see cref="T:System.Dynamic.DynamicMetaObject" /> that dispatches to the dynamic virtual methods. The object can be encapsulated inside another <see cref="T:System.Dynamic.DynamicMetaObject" /> to provide custom behavior for individual actions. This method supports the Dynamic Language Runtime infrastructure for language implementers and it is not intended to be used directly from your code.</summary>
      <returns>An object of the <see cref="T:System.Dynamic.DynamicMetaObject" /> type.</returns>
      <param name="parameter">The expression that represents <see cref="T:System.Dynamic.DynamicMetaObject" /> to dispatch to the dynamic virtual methods.</param>
    </member>
    <member name="M:System.Dynamic.DynamicObject.TryBinaryOperation(System.Dynamic.BinaryOperationBinder,System.Object,System.Object@)">
      <summary>Provides implementation for binary operations. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations such as addition and multiplication.</summary>
      <returns>true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)</returns>
      <param name="binder">Provides information about the binary operation. The binder.Operation property returns an <see cref="T:System.Linq.Expressions.ExpressionType" /> object. For example, for the sum = first + second statement, where first and second are derived from the DynamicObject class, binder.Operation returns ExpressionType.Add.</param>
      <param name="arg">The right operand for the binary operation. For example, for the sum = first + second statement, where first and second are derived from the DynamicObject class, <paramref name="arg" /> is equal to second.</param>
      <param name="result">The result of the binary operation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicObject.TryConvert(System.Dynamic.ConvertBinder,System.Object@)">
      <summary>Provides implementation for type conversion operations. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations that convert an object from one type to another.</summary>
      <returns>true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)</returns>
      <param name="binder">Provides information about the conversion operation. The binder.Type property provides the type to which the object must be converted. For example, for the statement (String)sampleObject in C# (CType(sampleObject, Type) in Visual Basic), where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, binder.Type returns the <see cref="T:System.String" /> type. The binder.Explicit property provides information about the kind of conversion that occurs. It returns true for explicit conversion and false for implicit conversion.</param>
      <param name="result">The result of the type conversion operation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicObject.TryCreateInstance(System.Dynamic.CreateInstanceBinder,System.Object[],System.Object@)">
      <summary>Provides the implementation for operations that initialize a new instance of a dynamic object. This method is not intended for use in C# or Visual Basic.</summary>
      <returns>true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)</returns>
      <param name="binder">Provides information about the initialization operation.</param>
      <param name="args">The arguments that are passed to the object during initialization. For example, for the new SampleType(100) operation, where SampleType is the type derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, <paramref name="args[0]" /> is equal to 100.</param>
      <param name="result">The result of the initialization.</param>
    </member>
    <member name="M:System.Dynamic.DynamicObject.TryDeleteIndex(System.Dynamic.DeleteIndexBinder,System.Object[])">
      <summary>Provides the implementation for operations that delete an object by index. This method is not intended for use in C# or Visual Basic.</summary>
      <returns>true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)</returns>
      <param name="binder">Provides information about the deletion.</param>
      <param name="indexes">The indexes to be deleted.</param>
    </member>
    <member name="M:System.Dynamic.DynamicObject.TryDeleteMember(System.Dynamic.DeleteMemberBinder)">
      <summary>Provides the implementation for operations that delete an object member. This method is not intended for use in C# or Visual Basic.</summary>
      <returns>true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)</returns>
      <param name="binder">Provides information about the deletion.</param>
    </member>
    <member name="M:System.Dynamic.DynamicObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
      <summary>Provides the implementation for operations that get a value by index. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for indexing operations.</summary>
      <returns>true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a run-time exception is thrown.)</returns>
      <param name="binder">Provides information about the operation. </param>
      <param name="indexes">The indexes that are used in the operation. For example, for the sampleObject[3] operation in C# (sampleObject(3) in Visual Basic), where sampleObject is derived from the DynamicObject class, <paramref name="indexes[0]" /> is equal to 3.</param>
      <param name="result">The result of the index operation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Provides the implementation for operations that get member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations such as getting a value for a property.</summary>
      <returns>true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a run-time exception is thrown.)</returns>
      <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member on which the dynamic operation is performed. For example, for the Console.WriteLine(sampleObject.SampleProperty) statement, where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
      <param name="result">The result of the get operation. For example, if the method is called for a property, you can assign the property value to <paramref name="result" />.</param>
    </member>
    <member name="M:System.Dynamic.DynamicObject.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
      <summary>Provides the implementation for operations that invoke an object. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations such as invoking an object or a delegate.</summary>
      <returns>true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.</returns>
      <param name="binder">Provides information about the invoke operation.</param>
      <param name="args">The arguments that are passed to the object during the invoke operation. For example, for the sampleObject(100) operation, where sampleObject is derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, <paramref name="args[0]" /> is equal to 100.</param>
      <param name="result">The result of the object invocation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicObject.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>Provides the implementation for operations that invoke a member. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations such as calling a method.</summary>
      <returns>true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)</returns>
      <param name="binder">Provides information about the dynamic operation. The binder.Name property provides the name of the member on which the dynamic operation is performed. For example, for the statement sampleObject.SampleMethod(100), where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, binder.Name returns "SampleMethod". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
      <param name="args">The arguments that are passed to the object member during the invoke operation. For example, for the statement sampleObject.SampleMethod(100), where sampleObject is derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, <paramref name="args[0]" /> is equal to 100.</param>
      <param name="result">The result of the member invocation.</param>
    </member>
    <member name="M:System.Dynamic.DynamicObject.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
      <summary>Provides the implementation for operations that set a value by index. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations that access objects by a specified index.</summary>
      <returns>true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.</returns>
      <param name="binder">Provides information about the operation. </param>
      <param name="indexes">The indexes that are used in the operation. For example, for the sampleObject[3] = 10 operation in C# (sampleObject(3) = 10 in Visual Basic), where sampleObject is derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, <paramref name="indexes[0]" /> is equal to 3.</param>
      <param name="value">The value to set to the object that has the specified index. For example, for the sampleObject[3] = 10 operation in C# (sampleObject(3) = 10 in Visual Basic), where sampleObject is derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, <paramref name="value" /> is equal to 10.</param>
    </member>
    <member name="M:System.Dynamic.DynamicObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Provides the implementation for operations that set member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations such as setting a value for a property.</summary>
      <returns>true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)</returns>
      <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member to which the value is being assigned. For example, for the statement sampleObject.SampleProperty = "Test", where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
      <param name="value">The value to set to the member. For example, for sampleObject.SampleProperty = "Test", where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, the <paramref name="value" /> is "Test".</param>
    </member>
    <member name="M:System.Dynamic.DynamicObject.TryUnaryOperation(System.Dynamic.UnaryOperationBinder,System.Object@)">
      <summary>Provides implementation for unary operations. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations such as negation, increment, or decrement.</summary>
      <returns>true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)</returns>
      <param name="binder">Provides information about the unary operation. The binder.Operation property returns an <see cref="T:System.Linq.Expressions.ExpressionType" /> object. For example, for the negativeNumber = -number statement, where number is derived from the DynamicObject class, binder.Operation returns "Negate".</param>
      <param name="result">The result of the unary operation.</param>
    </member>
    <member name="T:System.Dynamic.ExpandoObject">
      <summary>Represents an object whose members can be dynamically added and removed at run time.</summary>
    </member>
    <member name="M:System.Dynamic.ExpandoObject.#ctor">
      <summary>Initializes a new ExpandoObject that does not have members.</summary>
    </member>
    <member name="M:System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Adds the specified value to the <see cref="T:System.Collections.Generic.ICollection`1" /> that has the specified key.</summary>
      <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structure that represents the key and value to add to the collection.</param>
    </member>
    <member name="M:System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific key and value.</summary>
      <returns>true if the collection contains a specific key and value; otherwise, false.</returns>
      <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structure to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an array of type <see cref="T:System.Collections.Generic.KeyValuePair`2" />, starting at the specified array index.</summary>
      <param name="array">The one-dimensional array of type <see cref="T:System.Collections.Generic.KeyValuePair`2" /> that is the destination of the <see cref="T:System.Collections.Generic.KeyValuePair`2" /> elements copied from the <see cref="T:System.Collections.Generic.ICollection`1" />. The array must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying starts.</param>
    </member>
    <member name="P:System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{T}#Count">
      <summary>Gets the number of elements in the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>The number of elements in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="P:System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Removes a key and value from the collection.</summary>
      <returns>true if the key and value are successfully found and removed; otherwise, false. This method returns false if the key and value are not found in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
      <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structure that represents the key and value to remove from the collection.</param>
    </member>
    <member name="M:System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{TKey@TValue}#Add(System.String,System.Object)">
      <summary>Adds the specified key and value to the dictionary.</summary>
      <param name="key">The object to use as the key.</param>
      <param name="value">The object to use as the value.</param>
    </member>
    <member name="M:System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{TKey@TValue}#ContainsKey(System.String)">
      <summary>Determines whether the dictionary contains the specified key.</summary>
      <returns>true if the dictionary contains an element that has the specified key; otherwise, false.</returns>
      <param name="key">The key to locate in the dictionary.</param>
    </member>
    <member name="P:System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{TKey@TValue}#Item(System.String)">
      <summary>Gets or sets the element that has the specified key.</summary>
      <returns>The element that has the specified key.</returns>
      <param name="key">The key of the element to get or set.</param>
    </member>
    <member name="P:System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
      <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{TKey@TValue}#Remove(System.String)">
      <summary>Removes the element that has the specified key from the <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>true if the element is successfully removed; otherwise, false. This method also returns false if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
      <param name="key">The key of the element to remove.</param>
    </member>
    <member name="M:System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{TKey@TValue}#TryGetValue(System.String,System.Object@)">
      <summary>Gets the value associated with the specified key.</summary>
      <returns>true if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element that has the specified key; otherwise, false.</returns>
      <param name="key">The key of the value to get.</param>
      <param name="value">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, contains the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param>
    </member>
    <member name="P:System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
      <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Dynamic.ExpandoObject.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Dynamic.ExpandoObject.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="E:System.Dynamic.ExpandoObject.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="M:System.Dynamic.ExpandoObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)">
      <summary>The provided MetaObject will dispatch to the dynamic virtual methods. The object can be encapsulated inside another MetaObject to provide custom behavior for individual actions.</summary>
      <returns>The object of the <see cref="T:System.Dynamic.DynamicMetaObject" /> type.</returns>
      <param name="parameter">The expression that represents the MetaObject to dispatch to the Dynamic virtual methods.</param>
    </member>
    <member name="T:System.Dynamic.GetIndexBinder">
      <summary>Represents the dynamic get index operation at the call site, providing the binding semantic and the details about the operation.</summary>
    </member>
    <member name="M:System.Dynamic.GetIndexBinder.#ctor(System.Dynamic.CallInfo)">
      <summary>Initializes a new instance of the <see cref="T:System.Dynamic.GetIndexBinder" />.</summary>
      <param name="callInfo">The signature of the arguments at the call site.</param>
    </member>
    <member name="M:System.Dynamic.GetIndexBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic get index operation.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic get index operation.</param>
      <param name="args">An array of arguments of the dynamic get index operation.</param>
    </member>
    <member name="P:System.Dynamic.GetIndexBinder.CallInfo">
      <summary>Gets the signature of the arguments at the call site.</summary>
      <returns>The signature of the arguments at the call site.</returns>
    </member>
    <member name="M:System.Dynamic.GetIndexBinder.FallbackGetIndex(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic get index operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic get index operation.</param>
      <param name="indexes">The arguments of the dynamic get index operation.</param>
    </member>
    <member name="M:System.Dynamic.GetIndexBinder.FallbackGetIndex(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)">
      <summary>When overridden in the derived class, performs the binding of the dynamic get index operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic get index operation.</param>
      <param name="indexes">The arguments of the dynamic get index operation.</param>
      <param name="errorSuggestion">The binding result to use if binding fails, or null.</param>
    </member>
    <member name="P:System.Dynamic.GetIndexBinder.ReturnType">
      <summary>The result type of the operation.</summary>
      <returns>The <see cref="T:System.Type" /> object representing the result type of the operation.</returns>
    </member>
    <member name="T:System.Dynamic.GetMemberBinder">
      <summary>Represents the dynamic get member operation at the call site, providing the binding semantic and the details about the operation.</summary>
    </member>
    <member name="M:System.Dynamic.GetMemberBinder.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Dynamic.GetMemberBinder" />.</summary>
      <param name="name">The name of the member to obtain.</param>
      <param name="ignoreCase">Is true if the name should be matched ignoring case; false otherwise.</param>
    </member>
    <member name="M:System.Dynamic.GetMemberBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic get member operation.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic get member operation.</param>
      <param name="args">An array of arguments of the dynamic get member operation.</param>
    </member>
    <member name="M:System.Dynamic.GetMemberBinder.FallbackGetMember(System.Dynamic.DynamicMetaObject)">
      <summary>Performs the binding of the dynamic get member operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic get member operation.</param>
    </member>
    <member name="M:System.Dynamic.GetMemberBinder.FallbackGetMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
      <summary>When overridden in the derived class, performs the binding of the dynamic get member operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic get member operation.</param>
      <param name="errorSuggestion">The binding result to use if binding fails, or null.</param>
    </member>
    <member name="P:System.Dynamic.GetMemberBinder.IgnoreCase">
      <summary>Gets the value indicating if the string comparison should ignore the case of the member name.</summary>
      <returns>True if the case is ignored, otherwise false.</returns>
    </member>
    <member name="P:System.Dynamic.GetMemberBinder.Name">
      <summary>Gets the name of the member to obtain.</summary>
      <returns>The name of the member to obtain.</returns>
    </member>
    <member name="P:System.Dynamic.GetMemberBinder.ReturnType">
      <summary>The result type of the operation.</summary>
      <returns>The <see cref="T:System.Type" /> object representing the result type of the operation.</returns>
    </member>
    <member name="T:System.Dynamic.IDynamicMetaObjectProvider">
      <summary>Represents a dynamic object, that can have its operations bound at runtime.</summary>
    </member>
    <member name="M:System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)">
      <summary>Returns the <see cref="T:System.Dynamic.DynamicMetaObject" /> responsible for binding operations performed on this object.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> to bind this object.</returns>
      <param name="parameter">The expression tree representation of the runtime value.</param>
    </member>
    <member name="T:System.Dynamic.IInvokeOnGetBinder">
      <summary>Represents information about a dynamic get member operation, indicating if the get member should invoke properties when performing the get.</summary>
    </member>
    <member name="P:System.Dynamic.IInvokeOnGetBinder.InvokeOnGet">
      <summary>Gets the value indicating if this GetMember method should invoke properties when performing the get operation. The default value when this interface is not present is true.</summary>
      <returns>true if this GetMember method should invoke properties when performing the get operation; otherwise false.</returns>
    </member>
    <member name="T:System.Dynamic.InvokeBinder">
      <summary>Represents the invoke dynamic operation at the call site, providing the binding semantic and the details about the operation.</summary>
    </member>
    <member name="M:System.Dynamic.InvokeBinder.#ctor(System.Dynamic.CallInfo)">
      <summary>Initializes a new instance of the <see cref="T:System.Dynamic.InvokeBinder" />.</summary>
      <param name="callInfo">The signature of the arguments at the call site.</param>
    </member>
    <member name="M:System.Dynamic.InvokeBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic invoke operation.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic invoke operation.</param>
      <param name="args">An array of arguments of the dynamic invoke operation.</param>
    </member>
    <member name="P:System.Dynamic.InvokeBinder.CallInfo">
      <summary>Gets the signature of the arguments at the call site.</summary>
      <returns>The signature of the arguments at the call site.</returns>
    </member>
    <member name="M:System.Dynamic.InvokeBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic invoke operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic invoke operation.</param>
      <param name="args">The arguments of the dynamic invoke operation.</param>
    </member>
    <member name="M:System.Dynamic.InvokeBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)">
      <summary>Performs the binding of the dynamic invoke operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic invoke operation.</param>
      <param name="args">The arguments of the dynamic invoke operation.</param>
      <param name="errorSuggestion">The binding result to use if binding fails, or null.</param>
    </member>
    <member name="P:System.Dynamic.InvokeBinder.ReturnType">
      <summary>The result type of the operation.</summary>
      <returns>The <see cref="T:System.Type" /> object representing the result type of the operation.</returns>
    </member>
    <member name="T:System.Dynamic.InvokeMemberBinder">
      <summary>Represents the invoke member dynamic operation at the call site, providing the binding semantic and the details about the operation.</summary>
    </member>
    <member name="M:System.Dynamic.InvokeMemberBinder.#ctor(System.String,System.Boolean,System.Dynamic.CallInfo)">
      <summary>Initializes a new instance of the <see cref="T:System.Dynamic.InvokeMemberBinder" />.</summary>
      <param name="name">The name of the member to invoke.</param>
      <param name="ignoreCase">true if the name should be matched ignoring case; false otherwise.</param>
      <param name="callInfo">The signature of the arguments at the call site.</param>
    </member>
    <member name="M:System.Dynamic.InvokeMemberBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic invoke member operation.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic invoke member operation.</param>
      <param name="args">An array of arguments of the dynamic invoke member operation.</param>
    </member>
    <member name="P:System.Dynamic.InvokeMemberBinder.CallInfo">
      <summary>Gets the signature of the arguments at the call site.</summary>
      <returns>The signature of the arguments at the call site.</returns>
    </member>
    <member name="M:System.Dynamic.InvokeMemberBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)">
      <summary>When overridden in the derived class, performs the binding of the dynamic invoke operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic invoke operation.</param>
      <param name="args">The arguments of the dynamic invoke operation.</param>
      <param name="errorSuggestion">The binding result to use if binding fails, or null.</param>
    </member>
    <member name="M:System.Dynamic.InvokeMemberBinder.FallbackInvokeMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic invoke member operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic invoke member operation.</param>
      <param name="args">The arguments of the dynamic invoke member operation.</param>
    </member>
    <member name="M:System.Dynamic.InvokeMemberBinder.FallbackInvokeMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)">
      <summary>When overridden in the derived class, performs the binding of the dynamic invoke member operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic invoke member operation.</param>
      <param name="args">The arguments of the dynamic invoke member operation.</param>
      <param name="errorSuggestion">The binding result to use if binding fails, or null.</param>
    </member>
    <member name="P:System.Dynamic.InvokeMemberBinder.IgnoreCase">
      <summary>Gets the value indicating if the string comparison should ignore the case of the member name.</summary>
      <returns>True if the case is ignored, otherwise false.</returns>
    </member>
    <member name="P:System.Dynamic.InvokeMemberBinder.Name">
      <summary>Gets the name of the member to invoke.</summary>
      <returns>The name of the member to invoke.</returns>
    </member>
    <member name="P:System.Dynamic.InvokeMemberBinder.ReturnType">
      <summary>The result type of the operation.</summary>
      <returns>The <see cref="T:System.Type" /> object representing the result type of the operation.</returns>
    </member>
    <member name="T:System.Dynamic.SetIndexBinder">
      <summary>Represents the dynamic set index operation at the call site, providing the binding semantic and the details about the operation.</summary>
    </member>
    <member name="M:System.Dynamic.SetIndexBinder.#ctor(System.Dynamic.CallInfo)">
      <summary>Initializes a new instance of the <see cref="T:System.Dynamic.SetIndexBinder" />.</summary>
      <param name="callInfo">The signature of the arguments at the call site.</param>
    </member>
    <member name="M:System.Dynamic.SetIndexBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic set index operation.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic set index operation.</param>
      <param name="args">An array of arguments of the dynamic set index operation.</param>
    </member>
    <member name="P:System.Dynamic.SetIndexBinder.CallInfo">
      <summary>Gets the signature of the arguments at the call site.</summary>
      <returns>The signature of the arguments at the call site.</returns>
    </member>
    <member name="M:System.Dynamic.SetIndexBinder.FallbackSetIndex(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)">
      <summary>Performs the binding of the dynamic set index operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic set index operation.</param>
      <param name="indexes">The arguments of the dynamic set index operation.</param>
      <param name="value">The value to set to the collection.</param>
    </member>
    <member name="M:System.Dynamic.SetIndexBinder.FallbackSetIndex(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
      <summary>When overridden in the derived class, performs the binding of the dynamic set index operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic set index operation.</param>
      <param name="indexes">The arguments of the dynamic set index operation.</param>
      <param name="value">The value to set to the collection.</param>
      <param name="errorSuggestion">The binding result to use if binding fails, or null.</param>
    </member>
    <member name="P:System.Dynamic.SetIndexBinder.ReturnType">
      <summary>The result type of the operation.</summary>
      <returns>The <see cref="T:System.Type" /> object representing the result type of the operation.</returns>
    </member>
    <member name="T:System.Dynamic.SetMemberBinder">
      <summary>Represents the dynamic set member operation at the call site, providing the binding semantic and the details about the operation.</summary>
    </member>
    <member name="M:System.Dynamic.SetMemberBinder.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Dynamic.SetMemberBinder" />.</summary>
      <param name="name">The name of the member to obtain.</param>
      <param name="ignoreCase">Is true if the name should be matched ignoring case; false otherwise.</param>
    </member>
    <member name="M:System.Dynamic.SetMemberBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic set member operation.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic set member operation.</param>
      <param name="args">An array of arguments of the dynamic set member operation.</param>
    </member>
    <member name="M:System.Dynamic.SetMemberBinder.FallbackSetMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
      <summary>Performs the binding of the dynamic set member operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic set member operation.</param>
      <param name="value">The value to set to the member.</param>
    </member>
    <member name="M:System.Dynamic.SetMemberBinder.FallbackSetMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
      <summary>Performs the binding of the dynamic set member operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic set member operation.</param>
      <param name="value">The value to set to the member.</param>
      <param name="errorSuggestion">The binding result to use if binding fails, or null.</param>
    </member>
    <member name="P:System.Dynamic.SetMemberBinder.IgnoreCase">
      <summary>Gets the value indicating if the string comparison should ignore the case of the member name.</summary>
      <returns>True if the case is ignored, otherwise false.</returns>
    </member>
    <member name="P:System.Dynamic.SetMemberBinder.Name">
      <summary>Gets the name of the member to obtain.</summary>
      <returns>The name of the member to obtain.</returns>
    </member>
    <member name="P:System.Dynamic.SetMemberBinder.ReturnType">
      <summary>The result type of the operation.</summary>
      <returns>The <see cref="T:System.Type" /> object representing the result type of the operation.</returns>
    </member>
    <member name="T:System.Dynamic.UnaryOperationBinder">
      <summary>Represents the unary dynamic operation at the call site, providing the binding semantic and the details about the operation.</summary>
    </member>
    <member name="M:System.Dynamic.UnaryOperationBinder.#ctor(System.Linq.Expressions.ExpressionType)">
      <summary>Initializes a new instance of the <see cref="T:System.Dynamic.BinaryOperationBinder" /> class.</summary>
      <param name="operation">The unary operation kind.</param>
    </member>
    <member name="M:System.Dynamic.UnaryOperationBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
      <summary>Performs the binding of the dynamic unary operation.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic operation.</param>
      <param name="args">An array of arguments of the dynamic operation.</param>
    </member>
    <member name="M:System.Dynamic.UnaryOperationBinder.FallbackUnaryOperation(System.Dynamic.DynamicMetaObject)">
      <summary>Performs the binding of the unary dynamic operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic unary operation.</param>
    </member>
    <member name="M:System.Dynamic.UnaryOperationBinder.FallbackUnaryOperation(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
      <summary>Performs the binding of the unary dynamic operation if the target dynamic object cannot bind.</summary>
      <returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</returns>
      <param name="target">The target of the dynamic unary operation.</param>
      <param name="errorSuggestion">The binding result in case the binding fails, or null.</param>
    </member>
    <member name="P:System.Dynamic.UnaryOperationBinder.Operation">
      <summary>The unary operation kind.</summary>
      <returns>The object of the <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents the unary operation kind.</returns>
    </member>
    <member name="P:System.Dynamic.UnaryOperationBinder.ReturnType">
      <summary>The result type of the operation.</summary>
      <returns>The <see cref="T:System.Type" /> object representing the result type of the operation.</returns>
    </member>
    <member name="T:System.Linq.Enumerable">
      <summary>Provides a set of static (Shared in Visual Basic) methods for querying objects that implement <see cref="T:System.Collections.Generic.IEnumerable`1" />.</summary>
    </member>
    <member name="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})">
      <summary>Applies an accumulator function over a sequence.</summary>
      <returns>The final accumulator value.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to aggregate over.</param>
      <param name="func">An accumulator function to be invoked on each element.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="func" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> contains no elements.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
      <summary>Applies an accumulator function over a sequence. The specified seed value is used as the initial accumulator value.</summary>
      <returns>The final accumulator value.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to aggregate over.</param>
      <param name="seed">The initial accumulator value.</param>
      <param name="func">An accumulator function to be invoked on each element.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate">The type of the accumulator value.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="func" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
      <summary>Applies an accumulator function over a sequence. The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.</summary>
      <returns>The transformed final accumulator value.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to aggregate over.</param>
      <param name="seed">The initial accumulator value.</param>
      <param name="func">An accumulator function to be invoked on each element.</param>
      <param name="resultSelector">A function to transform the final accumulator value into the result value.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate">The type of the accumulator value.</typeparam>
      <typeparam name="TResult">The type of the resulting value.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="func" /> or <paramref name="resultSelector" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>Determines whether all elements of a sequence satisfy a condition.</summary>
      <returns>true if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, false.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the elements to apply the predicate to.</param>
      <param name="predicate">A function to test each element for a condition.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="predicate" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Determines whether a sequence contains any elements.</summary>
      <returns>true if the source sequence contains any elements; otherwise, false.</returns>
      <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to check for emptiness.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>Determines whether any element of a sequence satisfies a condition.</summary>
      <returns>true if any elements in the source sequence pass the test in the specified predicate; otherwise, false.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements to apply the predicate to.</param>
      <param name="predicate">A function to test each element for a condition.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="predicate" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Returns the input typed as <see cref="T:System.Collections.Generic.IEnumerable`1" />.</summary>
      <returns>The input sequence typed as <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
      <param name="source">The sequence to type as <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary>Computes the average of a sequence of <see cref="T:System.Decimal" /> values.</summary>
      <returns>The average of the sequence of values.</returns>
      <param name="source">A sequence of <see cref="T:System.Decimal" /> values to calculate the average of.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> contains no elements.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>Computes the average of a sequence of <see cref="T:System.Double" /> values.</summary>
      <returns>The average of the sequence of values.</returns>
      <param name="source">A sequence of <see cref="T:System.Double" /> values to calculate the average of.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> contains no elements.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>Computes the average of a sequence of <see cref="T:System.Int32" /> values.</summary>
      <returns>The average of the sequence of values.</returns>
      <param name="source">A sequence of <see cref="T:System.Int32" /> values to calculate the average of.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> contains no elements.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>Computes the average of a sequence of <see cref="T:System.Int64" /> values.</summary>
      <returns>The average of the sequence of values.</returns>
      <param name="source">A sequence of <see cref="T:System.Int64" /> values to calculate the average of.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> contains no elements.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary>Computes the average of a sequence of nullable <see cref="T:System.Decimal" /> values.</summary>
      <returns>The average of the sequence of values, or null if the source sequence is empty or contains only values that are null.</returns>
      <param name="source">A sequence of nullable <see cref="T:System.Decimal" /> values to calculate the average of.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
      <exception cref="T:System.OverflowException">The sum of the elements in the sequence is larger than <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary>Computes the average of a sequence of nullable <see cref="T:System.Double" /> values.</summary>
      <returns>The average of the sequence of values, or null if the source sequence is empty or contains only values that are null.</returns>
      <param name="source">A sequence of nullable <see cref="T:System.Double" /> values to calculate the average of.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>Computes the average of a sequence of nullable <see cref="T:System.Int32" /> values.</summary>
      <returns>The average of the sequence of values, or null if the source sequence is empty or contains only values that are null.</returns>
      <param name="source">A sequence of nullable <see cref="T:System.Int32" />values to calculate the average of.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
      <exception cref="T:System.OverflowException">The sum of the elements in the sequence is larger than <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary>Computes the average of a sequence of nullable <see cref="T:System.Int64" /> values.</summary>
      <returns>The average of the sequence of values, or null if the source sequence is empty or contains only values that are null.</returns>
      <param name="source">A sequence of nullable <see cref="T:System.Int64" /> values to calculate the average of.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
      <exception cref="T:System.OverflowException">The sum of the elements in the sequence is larger than <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
      <summary>Computes the average of a sequence of nullable <see cref="T:System.Single" /> values.</summary>
      <returns>The average of the sequence of values, or null if the source sequence is empty or contains only values that are null.</returns>
      <param name="source">A sequence of nullable <see cref="T:System.Single" /> values to calculate the average of.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})">
      <summary>Computes the average of a sequence of <see cref="T:System.Single" /> values.</summary>
      <returns>The average of the sequence of values.</returns>
      <param name="source">A sequence of <see cref="T:System.Single" /> values to calculate the average of.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> contains no elements.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
      <summary>Computes the average of a sequence of <see cref="T:System.Decimal" /> values that are obtained by invoking a transform function on each element of the input sequence.</summary>
      <returns>The average of the sequence of values.</returns>
      <param name="source">A sequence of values that are used to calculate an average.</param>
      <param name="selector">A transform function to apply to each element.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="selector" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> contains no elements.</exception>
      <exception cref="T:System.OverflowException">The sum of the elements in the sequence is larger than <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
      <summary>Computes the average of a sequence of <see cref="T:System.Double" /> values that are obtained by invoking a transform function on each element of the input sequence.</summary>
      <returns>The average of the sequence of values.</returns>
      <param name="source">A sequence of values to calculate the average of.</param>
      <param name="selector">A transform function to apply to each element.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="selector" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> contains no elements.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
      <summary>Computes the average of a sequence of <see cref="T:System.Int32" /> values that are obtained by invoking a transform function on each element of the input sequence.</summary>
      <returns>The average of the sequence of values.</returns>
      <param name="source">A sequence of values to calculate the average of.</param>
      <param name="selector">A transform function to apply to each element.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="selector" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> contains no elements.</exception>
      <exception cref="T:System.OverflowException">The sum of the elements in the sequence is larger than <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
      <summary>Computes the average of a sequence of <see cref="T:System.Int64" /> values that are obtained by invoking a transform function on each element of the input sequence.</summary>
      <returns>The average of the sequence of values.</returns>
      <param name="source">A sequence of values to calculate the average of.</param>
      <param name="selector">A transform function to apply to each element.</param>
      <typeparam name="TSource">The type of the elements of source.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="selector" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> contains no elements.</exception>
      <exception cref="T:System.OverflowException">The sum of the elements in the sequence is larger than <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary>Computes the average of a sequence of nullable <see cref="T:System.Decimal" /> values that are obtained by invoking a transform function on each element of the input sequence.</summary>
      <returns>The average of the sequence of values, or null if the source sequence is empty or contains only values that are null.</returns>
      <param name="source">A sequence of values to calculate the average of.</param>
      <param name="selector">A transform function to apply to each element.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="selector" /> is null.</exception>
      <exception cref="T:System.OverflowException">The sum of the elements in the sequence is larger than <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary>Computes the average of a sequence of nullable <see cref="T:System.Double" /> values that are obtained by invoking a transform function on each element of the input sequence.</summary>
      <returns>The average of the sequence of values, or null if the source sequence is empty or contains only values that are null.</returns>
      <param name="source">A sequence of values to calculate the average of.</param>
      <param name="selector">A transform function to apply to each element.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="selector" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary>Computes the average of a sequence of nullable <see cref="T:System.Int32" /> values that are obtained by invoking a transform function on each element of the input sequence.</summary>
      <returns>The average of the sequence of values, or null if the source sequence is empty or contains only values that are null.</returns>
      <param name="source">A sequence of values to calculate the average of.</param>
      <param name="selector">A transform function to apply to each element.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="selector" /> is null.</exception>
      <exception cref="T:System.OverflowException">The sum of the elements in the sequence is larger than <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary>Computes the average of a sequence of nullable <see cref="T:System.Int64" /> values that are obtained by invoking a transform function on each element of the input sequence.</summary>
      <returns>The average of the sequence of values, or null if the source sequence is empty or contains only values that are null.</returns>
      <param name="source">A sequence of values to calculate the average of.</param>
      <param name="selector">A transform function to apply to each element.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary>Computes the average of a sequence of nullable <see cref="T:System.Single" /> values that are obtained by invoking a transform function on each element of the input sequence.</summary>
      <returns>The average of the sequence of values, or null if the source sequence is empty or contains only values that are null.</returns>
      <param name="source">A sequence of values to calculate the average of.</param>
      <param name="selector">A transform function to apply to each element.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="selector" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
      <summary>Computes the average of a sequence of <see cref="T:System.Single" /> values that are obtained by invoking a transform function on each element of the input sequence.</summary>
      <returns>The average of the sequence of values.</returns>
      <param name="source">A sequence of values to calculate the average of.</param>
      <param name="selector">A transform function to apply to each element.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="selector" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> contains no elements.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)">
      <summary>Converts the elements of an <see cref="T:System.Collections.IEnumerable" /> to the specified type.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains each element of the source sequence converted to the specified type.</returns>
      <param name="source">The <see cref="T:System.Collections.IEnumerable" /> that contains the elements to be converted.</param>
      <typeparam name="TResult">The type to convert the elements of <paramref name="source" /> to.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">An element in the sequence cannot be cast to type <paramref name="TResult" />.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>Concatenates two sequences.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the concatenated elements of the two input sequences.</returns>
      <param name="first">The first sequence to concatenate.</param>
      <param name="second">The sequence to concatenate to the first sequence.</param>
      <typeparam name="TSource">The type of the elements of the input sequences.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> or <paramref name="second" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)">
      <summary>Determines whether a sequence contains a specified element by using the default equality comparer.</summary>
      <returns>true if the source sequence contains an element that has the specified value; otherwise, false.</returns>
      <param name="source">A sequence in which to locate a value.</param>
      <param name="value">The value to locate in the sequence.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Determines whether a sequence contains a specified element by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</summary>
      <returns>true if the source sequence contains an element that has the specified value; otherwise, false.</returns>
      <param name="source">A sequence in which to locate a value.</param>
      <param name="value">The value to locate in the sequence.</param>
      <param name="comparer">An equality comparer to compare values.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Returns the number of elements in a sequence.</summary>
      <returns>The number of elements in the input sequence.</returns>
      <param name="source">A sequence that contains elements to be counted.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
      <exception cref="T:System.OverflowException">The number of elements in <paramref name="source" /> is larger than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>Returns a number that represents how many elements in the specified sequence satisfy a condition.</summary>
      <returns>A number that represents how many elements in the sequence satisfy the condition in the predicate function.</returns>
      <param name="source">A sequence that contains elements to be tested and counted.</param>
      <param name="predicate">A function to test each element for a condition.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="predicate" /> is null.</exception>
      <exception cref="T:System.OverflowException">The number of elements in <paramref name="source" /> is larger than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Returns the elements of the specified sequence or the type parameter's default value in a singleton collection if the sequence is empty.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that contains the default value for the <paramref name="TSource" /> type if <paramref name="source" /> is empty; otherwise, <paramref name="source" />.</returns>
      <param name="source">The sequence to return a default value for if it is empty.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)">
      <summary>Returns the elements of the specified sequence or the specified value in a singleton collection if the sequence is empty.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <paramref name="defaultValue" /> if <paramref name="source" /> is empty; otherwise, <paramref name="source" />.</returns>
      <param name="source">The sequence to return the specified value for if it is empty.</param>
      <param name="defaultValue">The value to return if the sequence is empty.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
    </member>
    <member name="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Returns distinct elements from a sequence by using the default equality comparer to compare values.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains distinct elements from the source sequence.</returns>
      <param name="source">The sequence to remove duplicate elements from.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Returns distinct elements from a sequence by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains distinct elements from the source sequence.</returns>
      <param name="source">The sequence to remove duplicate elements from.</param>
      <param name="comparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <summary>Returns the element at a specified index in a sequence.</summary>
      <returns>The element at the specified position in the source sequence.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return an element from.</param>
      <param name="index">The zero-based index of the element to retrieve.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 or greater than or equal to the number of elements in <paramref name="source" />.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <summary>Returns the element at a specified index in a sequence or a default value if the index is out of range.</summary>
      <returns>default(<paramref name="TSource" />) if the index is outside the bounds of the source sequence; otherwise, the element at the specified position in the source sequence.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return an element from.</param>
      <param name="index">The zero-based index of the element to retrieve.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Empty``1">
      <summary>Returns an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> that has the specified type argument.</summary>
      <returns>An empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose type argument is <paramref name="TResult" />.</returns>
      <typeparam name="TResult">The type to assign to the type parameter of the returned generic <see cref="T:System.Collections.Generic.IEnumerable`1" />.</typeparam>
    </member>
    <member name="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>Produces the set difference of two sequences by using the default equality comparer to compare values.</summary>
      <returns>A sequence that contains the set difference of the elements of two sequences.</returns>
      <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements that are not also in <paramref name="second" /> will be returned.</param>
      <param name="second">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</param>
      <typeparam name="TSource">The type of the elements of the input sequences.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> or <paramref name="second" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Produces the set difference of two sequences by using the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</summary>
      <returns>A sequence that contains the set difference of the elements of two sequences.</returns>
      <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements that are not also in <paramref name="second" /> will be returned.</param>
      <param name="second">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</param>
      <param name="comparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</param>
      <typeparam name="TSource">The type of the elements of the input sequences.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> or <paramref name="second" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Returns the first element of a sequence.</summary>
      <returns>The first element in the specified sequence.</returns>
      <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return the first element of.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The source sequence is empty.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>Returns the first element in a sequence that satisfies a specified condition.</summary>
      <returns>The first element in the sequence that passes the test in the specified predicate function.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return an element from.</param>
      <param name="predicate">A function to test each element for a condition.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="predicate" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">No element satisfies the condition in <paramref name="predicate" />.-or-The source sequence is empty.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Returns the first element of a sequence, or a default value if the sequence contains no elements.</summary>
      <returns>default(<paramref name="TSource" />) if <paramref name="source" /> is empty; otherwise, the first element in <paramref name="source" />.</returns>
      <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return the first element of.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>Returns the first element of the sequence that satisfies a condition or a default value if no such element is found.</summary>
      <returns>default(<paramref name="TSource" />) if <paramref name="source" /> is empty or if no element passes the test specified by <paramref name="predicate" />; otherwise, the first element in <paramref name="source" /> that passes the test specified by <paramref name="predicate" />.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return an element from.</param>
      <param name="predicate">A function to test each element for a condition.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="predicate" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary>Groups the elements of a sequence according to a specified key selector function.</summary>
      <returns>An IEnumerable&lt;IGrouping&lt;TKey, TSource&gt;&gt; in C# or IEnumerable(Of IGrouping(Of TKey, TSource)) in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> object contains a sequence of objects and a key.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements to group.</param>
      <param name="keySelector">A function to extract the key for each element.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="keySelector" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Groups the elements of a sequence according to a specified key selector function and compares the keys by using a specified comparer.</summary>
      <returns>An IEnumerable&lt;IGrouping&lt;TKey, TSource&gt;&gt; in C# or IEnumerable(Of IGrouping(Of TKey, TSource)) in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> object contains a collection of objects and a key.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements to group.</param>
      <param name="keySelector">A function to extract the key for each element.</param>
      <param name="comparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="keySelector" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary>Groups the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.</summary>
      <returns>An IEnumerable&lt;IGrouping&lt;TKey, TElement&gt;&gt; in C# or IEnumerable(Of IGrouping(Of TKey, TElement)) in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> object contains a collection of objects of type <paramref name="TElement" /> and a key.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements to group.</param>
      <param name="keySelector">A function to extract the key for each element.</param>
      <param name="elementSelector">A function to map each source element to an element in the <see cref="T:System.Linq.IGrouping`2" />.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">The type of the elements in the <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Groups the elements of a sequence according to a key selector function. The keys are compared by using a comparer and each group's elements are projected by using a specified function.</summary>
      <returns>An IEnumerable&lt;IGrouping&lt;TKey, TElement&gt;&gt; in C# or IEnumerable(Of IGrouping(Of TKey, TElement)) in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> object contains a collection of objects of type <paramref name="TElement" /> and a key.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements to group.</param>
      <param name="keySelector">A function to extract the key for each element.</param>
      <param name="elementSelector">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</param>
      <param name="comparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">The type of the elements in the <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is null.</exception>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
      <summary>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The elements of each group are projected by using a specified function.</summary>
      <returns>A collection of elements of type <paramref name="TResult" /> where each element represents a projection over a group and its key.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements to group.</param>
      <param name="keySelector">A function to extract the key for each element.</param>
      <param name="elementSelector">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</param>
      <param name="resultSelector">A function to create a result value from each group.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">The type of the elements in each <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
      <typeparam name="TResult">The type of the result value returned by <paramref name="resultSelector" />.</typeparam>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function.</summary>
      <returns>A collection of elements of type <paramref name="TResult" /> where each element represents a projection over a group and its key.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements to group.</param>
      <param name="keySelector">A function to extract the key for each element.</param>
      <param name="elementSelector">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</param>
      <param name="resultSelector">A function to create a result value from each group.</param>
      <param name="comparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys with.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">The type of the elements in each <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
      <typeparam name="TResult">The type of the result value returned by <paramref name="resultSelector" />.</typeparam>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
      <summary>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</summary>
      <returns>A collection of elements of type <paramref name="TResult" /> where each element represents a projection over a group and its key.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements to group.</param>
      <param name="keySelector">A function to extract the key for each element.</param>
      <param name="resultSelector">A function to create a result value from each group.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />.</typeparam>
      <typeparam name="TResult">The type of the result value returned by <paramref name="resultSelector" />.</typeparam>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The keys are compared by using a specified comparer.</summary>
      <returns>A collection of elements of type <paramref name="TResult" /> where each element represents a projection over a group and its key.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements to group.</param>
      <param name="keySelector">A function to extract the key for each element.</param>
      <param name="resultSelector">A function to create a result value from each group.</param>
      <param name="comparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys with.</param>
      <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
      <typeparam name="TKey">The type of the key returned by <paramref name="keySelector" />.</typeparam>
      <typeparam name="TResult">The type of the result value returned by <paramref name="resultSelector" />.</typeparam>
    </member>
    <member name="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary>Correlates the elements of two sequences based on equality of keys and groups the results. The default equality comparer is used to compare keys.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains elements of type <paramref name="TResult" /> that are obtained by performing a grouped join on two sequences.</returns>
      <param name="outer">The first sequence to join.</param>
      <param name="inner">The sequence to join to the first sequence.</param>
      <param name="outerKeySelector">A function to extract the join key from each element of the first sequence.</param>
      <param name="innerKeySelector">A function to extract the join key from each element of the second sequence.</param>
      <par