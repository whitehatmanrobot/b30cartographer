ec   5   37   24   2   0
    0x48ed   5   37   25   2   0
    0x48ee   5   37   26   2   0
    0x48ef   5   37   27   2   0
    0x48f0   5   37   28   2   0
    0x48f1   5   37   29   2   0
    0x48f2   5   37   30   2   0
    0x48f3   5   37   31   2   0
    0x48f4   5   37   32   2   0
    0x48f5   5   37   33   2   0
    0x48f6   5   37   34   2   0
    0x48f7   5   37   35   2   0
    0x48f8   5   37   36   2   0
    0x48f9   5   37   37   2   0
    0x48fa   5   37   38   2   0
    0x48fb   5   37   39   2   0
    0x48fc   5   37   40   2   0
    0x48fd   5   37   41   2   0
    0x48fe   5   37   42   2   0
    0x48ff   5   37   43   2   0
    0x4900   5   37   44   2   0
    0x4901   5   37   45   2   0
    0x4902   5   37   46   2   0
    0x4903   5   37   47   2   0
    0x4904   5   37   48   2   0
    0x4905   5   37   49   2   0
    0x4906   5   37   50   2   0
    0x4907   5   37   51   2   0
    0x4908   5   37   52   2   0
    0x4909   5   37   53   2   0
    0x490a   5   37   54   2   0
    0x490b   5   37   55   2   0
    0x490c   5   37   56   2   0
    0x490d   5   37   57   2   0
    0x490e   5   37   58   2   0
    0x490f   5   37   59   2   0
    0x4910   5   37   60   2   0
    0x4911   5   37   61   2   0
    0x4912   5   37   62   2   0
    0x4913   5   37   63   2   0
    0x4914   5   37   64   2   0
    0x4915   5   37   65   2   0
    0x4916   5   37   66   2   0
    0x4917   5   37   67   2   0
    0x4918   5   37   68   2   0
    0x4919   5   37   69   2   0
    0x491a   5   37   70   2   0
    0x491b   5   37   71   2   0
    0x491c   5   37   72   2   0
    0x491d   5   37   73   2   0
    0x491e   5   37   74   2   0
    0x491f   5   37   75   2   0
    0x4920   5   37   76   2   0
    0x4921   5   37   77   2   0
    0x4922   5   37   78   2   0
    0x4923   5   37   79   2   0
    0x4924   5   37   80   2   0
    0x4925   5   37   81   2   0
    0x4926   5   37   82   2   0
    0x4927   5   37   83   2   0
    0x4928   5   37   84   2   0
    0x4929   5   37   85   2   0
    0x492a   5   37   86   2   0
    0x492b   5   37   87   2   0
    0x492c   5   37   88   2   0
    0x492d   5   37   89   2   0
    0x492e   5   37   90   2   0
    0x492f   5   37   91   2   0
    0x4930   5   37   92   2   0
    0x4931   5   37   93   2   0
    0x4932   5   37   94   2   0
    0x4933   5   37   95   2   0
    0x4934   5   37   96   2   0
    0x4935   5   37   97   2   0
    0x4936   5   37   98   2   0
    0x4937   5   37   99   2   0
    0x4938   5   37  100   2   0
    0x4939   5   37  101   2   0
    0x493a   5   37  102   2   0
    0x493b   5   37  103   2   0
    0x493c   5   37  104   2   0
    0x493d   5   37  105   2   0
    0x493e   5   37  106   2   0
    0x493f   5   37  107   2   0
    0x4940   5   37  108   2   0
    0x4941   5   37  109   2   0
    0x4942   5   37  110   2   0
    0x4943   5   37  111   2   0
    0x4944   5   37  112   2   0
    0x4945   5   37  113   2   0
    0x4946   5   37  114   2   0
    0x4947   5   37  115   2   0
    0x4948   5   37  116   2   0
    0x4949   5   37  117   2   0
    0x494a   5   37  118   2   0
    0x494b   5   37  119   2   0
    0x494c   5   37  120   2   0
    0x494d   5   37  121   2   0
    0x494e   5   37  122   2   0
    0x494f   5   37  123   2   0
    0x4950   5   37  124   2   0
    0x4951   5   37  125   2   0
    0x4952   5   37  126   2   0
    0x4953   5   37  127   2   0
    0x4954   5   37  128   2   0
    0x4955   5   37  129   2   0
    0x4956   5   37  130   2   0
    0x4957   5   37  131   2   0
    0x4958   5   37  132   2   0
    0x4959   5   37  133   2   0
    0x495a   5   37  134   2   0
    0x495b   5   37  135   2   0
    0x495c   5   37  136   2   0
    0x495d   5   37  137   2   0
    0x495e   5   37  138   2   0
    0x495f   5   37  139   2   0
    0x4960   5   37  140   2   0
    0x4961   5   37  141   2   0
    0x4962   5   37  142   2   0
    0x4963   5   37  143   2   0
    0x4964   5   37  144   2   0
    0x4965   5   37  145   2   0
    0x4966   5   37  146   2   0
    0x4967   5   37  147   2   0
    0x4968   5   37  148   2   0
    0x4969   5   37  149   2   0
    0x496a   5   37  150   2   0
    0x496b   5   37  151   2   0
    0x496c   5   37  152   2   0
    0x496d   5   37  153   2   0
    0x496e   5   37  154   2   0
    0x496f   5   37  155   2   0
    0x4970   5   37  156   2   0
    0x4971   5   37  157   2   0
    0x4972   5   37  158   2   0
    0x4973   5   37  159   2   0
    0x4974   5   37  160   2   0
    0x4975   5   37  161   2   0
    0x4976   5   37  162   2   0
    0x4977   5   37  163   2   0
    0x4978   5   37  164   2   0
    0x4979   5   37  165   2   0
    0x497a   5   37  166   2   0
    0x497b   5   37  167   2   0
    0x497c   5   37  168   2   0
    0x497d   5   37  169   2   0
    0x497e   5   37  170   2   0
    0x497f   5   37  171   2   0
    0x4980   5   37  172   2   0
    0x4981   5   37  173   2   0
    0x4982   5   37  174   2   0
    0x4983   5   37  175   2   0
    0x4984   5   37  176   2   0
    0x4985   5   37  177   2   0
    0x4986   5   37  178   2   0
    0x4987   5   37  179   2   0
    0x4988   5   37  180   2   0
    0x4989   5   37  181   2   0
    0x498a   5   37  182   2   0
    0x498b   5   37  183   2   0
    0x498c   5   37  184   2   0
    0x498d   5   37  185   2   0
    0x498e   5   37  186   2   0
    0x498f   5   37  187   2   0
    0x4990   5   37  188   2   0
    0x4991   5   37  189   2   0
    0x4992   5   37  190   2   0
    0x4993   5   37  191   2   0
    0x4994   5   37  192   2   0
    0x4995   5   37  193   2   0
    0x4996   5   37  194   2   0
    0x4997   5   37  195   2   0
    0x4998   5   37  196   2   0
    0x4999   5   37  197   2   0
    0x499a   5   37  198   2   0
    0x499b   5   37  199   2   0
    0x499c   5   37  200   2   0
    0x499d   5   37  201   2   0
    0x499e   5   37  202   2   0
    0x499f   5   37  203   2   0
    0x49a0   5   37  204   2   0
    0x49a1   5   37  205   2   0
    0x49a2   5   37  206   2   0
    0x49a3   5   37  207   2   0
    0x49a4   5   37  208   2   0
    0x49a5   5   37  209   2   0
    0x49a6   5   37  210   2   0
    0x49a7   5   37  211   2   0
    0x49a8   5   37  212   2   0
    0x49a9   5   37  213   2   0
    0x49aa   5   37  214   2   0
    0x49ab   5   37  215   2   0
    0x49ac   5   37  216   2   0
    0x49ad   5   37  217   2   0
    0x49ae   5   37  218   2   0
    0x49af   5   37  219   2   0
    0x49b0   5   37  220   2   0
    0x49b1   5   37  221   2   0
    0x49b2   5   37  222   2   0
    0x49b3   5   37  223   2   0
    0x49b4   5   37  224   2   0
    0x49b5   5   37  225   2   0
    0x49b6   5   37  226   2   0
    0x49b7   5   37  227   2   0
    0x49b8   5   37  228   2   0
    0x49b9   5   37  229   2   0
    0x49ba   5   37  230   2   0
    0x49bb   5   37  231   2   0
    0x49bc   5   37  232   2   0
    0x49bd   5   37  233   2   0
    0x49be   5   37  234   2   0
    0x49bf   5   37  235   2   0
    0x49c0   5   37  236   2   0
    0x49c1   5   37  237   2   0
    0x49c2   5   37  238   2   0
    0x49c3   5   37  239   2   0
    0x49c4   5   37  240   2   0
    0x49c5   5   37  241   2   0
    0x49c6   5   37  242   2   0
    0x49c7   5   37  243   2   0
    0x49c8   5   37  244   2   0
    0x49c9   5   37  245   2   0
    0x49ca   5   37  246   2   0
    0x49cb   5   37  247   2   0
    0x49cc   5   37  248   2   0
    0x49cd   5   37  249   2   0
    0x49ce   5   37  250   2   0
    0x49cf   5   37  251   2   0
    0x49d0   5   37  252   2   0
    0x49d1   5   37  253   2   0
    0x49d2   5   37  254   2   0
    0x49d3   5   37  255   2   0
    0x49d4   5   38    2   2   0
    0x49d5   5   38    3   2   0
    0x49d6   5   38    4   2   0
    0x49d7   5   38    5   2   0
    0x49d8   5   38    6   2   0
    0x49d9   5   38    7   2   0
    0x49da   5   38    8   2   0
    0x49db   5   38    9   2   0
    0x49dc   5   38   10   2   0
    0x49dd   5   38   11   2   0
    0x49de   5   38   12   2   0
    0x49df   5   38   13   2   0
    0x49e0   5   38   14   2   0
    0x49e1   5   38   15   2   0
    0x49e2   5   38   16   2   0
    0x49e3   5   38   17   2   0
    0x49e4   5   38   18   2   0
    0x49e5   5   38   19   2   0
    0x49e6   5   38   20   2   0
    0x49e7   5   38   21   2   0
    0x49e8   5   38   22   2   0
    0x49e9   5   38   23   2   0
    0x49ea   5   38   24   2   0
    0x49eb   5   38   25   2   0
    0x49ec   5   38   26   2   0
    0x49ed   5   38   27   2   0
    0x49ee   5   38   28   2   0
    0x49ef   5   38   29   2   0
    0x49f0   5   38   30   2   0
    0x49f1   5   38   31   2   0
    0x49f2   5   38   32   2   0
    0x49f3   5   38   33   2   0
    0x49f4   5   38   34   2   0
    0x49f5   5   38   35   2   0
    0x49f6   5   38   36   2   0
    0x49f7   5   38   37   2   0
    0x49f8   5   38   38   2   0
    0x49f9   5   38   39   2   0
    0x49fa   5   38   40   2   0
    0x49fb   5   38   41   2   0
    0x49fc   5   38   42   2   0
    0x49fd   5   38   43   2   0
    0x49fe   5   38   44   2   0
    0x49ff   5   38   45   2   0
    0x4a00   5   38   46   2   0
    0x4a01   5   38   47   2   0
    0x4a02   5   38   48   2   0
    0x4a03   5   38   49   2   0
    0x4a04   5   38   50   2   0
    0x4a05   5   38   51   2   0
    0x4a06   5   38   52   2   0
    0x4a07   5   38   53   2   0
    0x4a08   5   38   54   2   0
    0x4a09   5   38   55   2   0
    0x4a0a   5   38   56   2   0
    0x4a0b   5   38   57   2   0
    0x4a0c   5   38   58   2   0
    0x4a0d   5   38   59   2   0
    0x4a0e   5   38   60   2   0
    0x4a0f   5   38   61   2   0
    0x4a10   5   38   62   2   0
    0x4a11   5   38   63   2   0
    0x4a12   5   38   64   2   0
    0x4a13   5   38   65   2   0
    0x4a14   5   38   66   2   0
    0x4a15   5   38   67   2   0
    0x4a16   5   38   68   2   0
    0x4a17   5   38   69   2   0
    0x4a18   5   38   70   2   0
    0x4a19   5   38   71   2   0
    0x4a1a   5   38   72   2   0
    0x4a1b   5   38   73   2   0
    0x4a1c   5   38   74   2   0
    0x4a1d   5   38   75   2   0
    0x4a1e   5   38   76   2   0
    0x4a1f   5   38   77   2   0
    0x4a20   5   38   78   2   0
    0x4a21   5   38   79   2   0
    0x4a22   5   38   80   2   0
    0x4a23   5   38   81   2   0
    0x4a24   5   38   82   2   0
    0x4a25   5   38   83   2   0
    0x4a26   5   38   84   2   0
    0x4a27   5   38   85   2   0
    0x4a28   5   38   86   2   0
    0x4a29   5   38   87   2   0
    0x4a2a   5   38   88   2   0
    0x4a2b   5   38   89   2   0
    0x4a2c   5   38   90   2   0
    0x4a2d   5   38   91   2   0
    0x4a2e   5   38   92   2   0
    0x4a2f   5   38   93   2   0
    0x4a30   5   38   94   2   0
    0x4a31   5   38   95   2   0
    0x4a32   5   38   96   2   0
    0x4a33   5   38   97   2   0
    0x4a34   5   38   98   2   0
    0x4a35   5   38   99   2   0
    0x4a36   5   38  100   2   0
    0x4a37   5   38  101   2   0
    0x4a38   5   38  102   2   0
    0x4a39   5   38  103   2   0
    0x4a3a   5   38  104   2   0
    0x4a3b   5   38  105   2   0
    0x4a3c   5   38  106   2   0
    0x4a3d   5   38  107   2   0
    0x4a3e   5   38  108   2   0
    0x4a3f   5   38  109   2   0
    0x4a40   5   38  110   2   0
    0x4a41   5   38  111   2   0
    0x4a42   5   38  112   2   0
    0x4a43   5   38  113   2   0
    0x4a44   5   38  114   2   0
    0x4a45   5   38  115   2   0
    0x4a46   5   38  116   2   0
    0x4a47   5   38  117   2   0
    0x4a48   5   38  118   2   0
    0x4a49   5   38  119   2   0
    0x4a4a   5   38  120   2   0
    0x4a4b   5   38  121   2   0
    0x4a4c   5   38  122   2   0
    0x4a4d   5   38  123   2   0
    0x4a4e   5   38  124   2   0
    0x4a4f   5   38  125   2   0
    0x4a50   5   38  126   2   0
    0x4a51   5   38  127   2   0
    0x4a52   5   38  128   2   0
    0x4a53   5   38  129   2   0
    0x4a54   5   38  130   2   0
    0x4a55   5   38  131   2   0
    0x4a56   5   38  132   2   0
    0x4a57   5   38  133   2   0
    0x4a58   5   38  134   2   0
    0x4a59   5   38  135   2   0
    0x4a5a   5   38  136   2   0
    0x4a5b   5   38  137   2   0
    0x4a5c   5   38  138   2   0
    0x4a5d   5   38  139   2   0
    0x4a5e   5   38  140   2   0
    0x4a5f   5   38  141   2   0
    0x4a60   5   38  142   2   0
    0x4a61   5   38  143   2   0
    0x4a62   5   38  144   2   0
    0x4a63   5   38  145   2   0
    0x4a64   5   38  146   2   0
    0x4a65   5   38  147   2   0
    0x4a66   5   38  148   2   0
    0x4a67   5   38  149   2   0
    0x4a68   5   38  150   2   0
    0x4a69   5   38  151   2   0
    0x4a6a   5   38  152   2   0
    0x4a6b   5   38  153   2   0
    0x4a6c   5   38  154   2   0
    0x4a6d   5   38  155   2   0
    0x4a6e   5   38  156   2   0
    0x4a6f   5   38  157   2   0
    0x4a70   5   38  158   2   0
    0x4a71   5   38  159   2   0
    0x4a72   5   38  160   2   0
    0x4a73   5   38  161   2   0
    0x4a74   5   38  162   2   0
    0x4a75   5   38  163   2   0
    0x4a76   5   38  164   2   0
    0x4a77   5   38  165   2   0
    0x4a78   5   38  166   2   0
    0x4a79   5   38  167   2   0
    0x4a7a   5   38  168   2   0
    0x4a7b   5   38  169   2   0
    0x4a7c   5   38  170   2   0
    0x4a7d   5   38  171   2   0
    0x4a7e   5   38  172   2   0
    0x4a7f   5   38  173   2   0
    0x4a80   5   38  174   2   0
    0x4a81   5   38  175   2   0
    0x4a82   5   38  176   2   0
    0x4a83   5   38  177   2   0
    0x4a84   5   38  178   2   0
    0x4a85   5   38  179   2   0
    0x4a86   5   38  180   2   0
    0x4a87   5   38  181   2   0
    0x4a88   5   38  182   2   0
    0x4a89   5   38  183   2   0
    0x4a8a   5   38  184   2   0
    0x4a8b   5   38  185   2   0
    0x4a8c   5   38  186   2   0
    0x4a8d   5   38  187   2   0
    0x4a8e   5   38  188   2   0
    0x4a8f   5   38  189   2   0
    0x4a90   5   38  190   2   0
    0x4a91   5   38  191   2   0
    0x4a92   5   38  192   2   0
    0x4a93   5   38  193   2   0
    0x4a94   5   38  194   2   0
    0x4a95   5   38  195   2   0
    0x4a96   5   38  196   2   0
    0x4a97   5   38  197   2   0
    0x4a98   5   38  198   2   0
    0x4a99   5   38  199   2   0
    0x4a9a   5   38  200   2   0
    0x4a9b   5   38  201   2   0
    0x4a9c   5   38  202   2   0
    0x4a9d   5   38  203   2   0
    0x4a9e   5   38  204   2   0
    0x4a9f   5   38  205   2   0
    0x4aa0   5   38  206   2   0
    0x4aa1   5   38  207   2   0
    0x4aa2   5   38  208   2   0
    0x4aa3   5   38  209   2   0
    0x4aa4   5   38  210   2   0
    0x4aa5   5   38  211   2   0
    0x4aa6   5   38  212   2   0
    0x4aa7   5   38  213   2   0
    0x4aa8   5   38  214   2   0
    0x4aa9   5   38  215   2   0
    0x4aaa   5   38  216   2   0
    0x4aab   5   38  217   2   0
    0x4aac   5   38  218   2   0
    0x4aad   5   38  219   2   0
    0x4aae   5   38  220   2   0
    0x4aaf   5   38  221   2   0
    0x4ab0   5   38  222   2   0
    0x4ab1   5   38  223   2   0
    0x4ab2   5   38  224   2   0
    0x4ab3   5   38  225   2   0
    0x4ab4   5   38  226   2   0
    0x4ab5   5   38  227   2   0
    0x4ab6   5   38  228   2   0
    0x4ab7   5   38  229   2   0
    0x4ab8   5   38  230   2   0
    0x4ab9   5   38  231   2   0
    0x4aba   5   38  232   2   0
    0x4abb   5   38  233   2   0
    0x4abc   5   38  234   2   0
    0x4abd   5   38  235   2   0
    0x4abe   5   38  236   2   0
    0x4abf   5   38  237   2   0
    0x4ac0   5   38  238   2   0
    0x4ac1   5   38  239   2   0
    0x4ac2   5   38  240   2   0
    0x4ac3   5   38  241   2   0
    0x4ac4   5   38  242   2   0
    0x4ac5   5   38  243   2   0
    0x4ac6   5   38  244   2   0
    0x4ac7   5   38  245   2   0
    0x4ac8   5   38  246   2   0
    0x4ac9   5   38  247   2   0
    0x4aca   5   38  248   2   0
    0x4acb   5   38  249   2   0
    0x4acc   5   38  250   2   0
    0x4acd   5   38  251   2   0
    0x4ace   5   38  252   2   0
    0x4acf   5   38  253   2   0
    0x4ad0   5   38  254   2   0
    0x4ad1   5   38  255   2   0
    0x4ad2   5   39    2   2   0
    0x4ad3   5   39    3   2   0
    0x4ad4   5   39    4   2   0
    0x4ad5   5   39    5   2   0
    0x4ad6   5   39    6   2   0
    0x4ad7   5   39    7   2   0
    0x4ad8   5   39    8   2   0
    0x4ad9   5   39    9   2   0
    0x4ada   5   39   10   2   0
    0x4adb   5   39   11   2   0
    0x4adc   5   39   12   2   0
    0x4add   5   39   13   2   0
    0x4ade   5   39   14   2   0
    0x4adf   5   39   15   2   0
    0x4ae0   5   39   16   2   0
    0x4ae1   5   39   17   2   0
    0x4ae2   5   39   18   2   0
    0x4ae3   5   39   19   2   0
    0x4ae4   5   39   20   2   0
    0x4ae5   5   39   21   2   0
    0x4ae6   5   39   22   2   0
    0x4ae7   5   39   23   2   0
    0x4ae8   5   39   24   2   0
    0x4ae9   5   39   25   2   0
    0x4aea   5   39   26   2   0
    0x4aeb   5   39   27   2   0
    0x4aec   5   39   28   2   0
    0x4aed   5   39   29   2   0
    0x4aee   5   39   30   2   0
    0x4aef   5   39   31   2   0
    0x4af0   5   39   32   2   0
    0x4af1   5   39   33   2   0
    0x4af2   5   39   34   2   0
    0x4af3   5   39   35   2   0
    0x4af4   5   39   36   2   0
    0x4af5   5   39   37   2   0
    0x4af6   5   39   38   2   0
    0x4af7   5   39   39   2   0
    0x4af8   5   39   40   2   0
    0x4af9   5   39   41   2   0
    0x4afa   5   39   42   2   0
    0x4afb   5   39   43   2   0
    0x4afc   5   39   44   2   0
    0x4afd   5   39   45   2   0
    0x4afe   5   39   46   2   0
    0x4aff   5   39   47   2   0
    0x4b00   5   39   48   2   0
    0x4b01   5   39   49   2   0
    0x4b02   5   39   50   2   0
    0x4b03   5   39   51   2   0
    0x4b04   5   39   52   2   0
    0x4b05   5   39   53   2   0
    0x4b06   5   39   54   2   0
    0x4b07   5   39   55   2   0
    0x4b08   5   39   56   2   0
    0x4b09   5   39   57   2   0
    0x4b0a   5   39   58   2   0
    0x4b0b   5   39   59   2   0
    0x4b0c   5   39   60   2   0
    0x4b0d   5   39   61   2   0
    0x4b0e   5   39   62   2   0
    0x4b0f   5   39   63   2   0
    0x4b10   5   39   64   2   0
    0x4b11   5   39   65   2   0
    0x4b12   5   39   66   2   0
    0x4b13   5   39   67   2   0
    0x4b14   5   39   68   2   0
    0x4b15   5   39   69   2   0
    0x4b16   5   39   70   2   0
    0x4b17   5   39   71   2   0
    0x4b18   5   39   72   2   0
    0x4b19   5   39   73   2   0
    0x4b1a   5   39   74   2   0
    0x4b1b   5   39   75   2   0
    0x4b1c   5   39   76   2   0
    0x4b1d   5   39   77   2   0
    0x4b1e   5   39   78   2   0
    0x4b1f   5   39   79   2   0
    0x4b20   5   39   80   2   0
    0x4b21   5   39   81   2   0
    0x4b22   5   39   82   2   0
    0x4b23   5   39   83   2   0
    0x4b24   5   39   84   2   0
    0x4b25   5   39   85   2   0
    0x4b26   5   39   86   2   0
    0x4b27   5   39   87   2   0
    0x4b28   5   39   88   2   0
    0x4b29   5   39   89   2   0
    0x4b2a   5   39   90   2   0
    0x4b2b   5   39   91   2   0
    0x4b2c   5   39   92   2   0
    0x4b2d   5   39   93   2   0
    0x4b2e   5   39   94   2   0
    0x4b2f   5   39   95   2   0
    0x4b30   5   39   96   2   0
    0x4b31   5   39   97   2   0
    0x4b32   5   39   98   2   0
    0x4b33   5   39   99   2   0
    0x4b34   5   39  100   2   0
    0x4b35   5   39  101   2   0
    0x4b36   5   39  102   2   0
    0x4b37   5   39  103   2   0
    0x4b38   5   39  104   2   0
    0x4b39   5   39  105   2   0
    0x4b3a   5   39  106   2   0
    0x4b3b   5   39  107   2   0
    0x4b3c   5   39  108   2   0
    0x4b3d   5   39  109   2   0
    0x4b3e   5   39  110   2   0
    0x4b3f   5   39  111   2   0
    0x4b40   5   39  112   2   0
    0x4b41   5   39  113   2   0
    0x4b42   5   39  114   2   0
    0x4b43   5   39  115   2   0
    0x4b44   5   39  116   2   0
    0x4b45   5   39  117   2   0
    0x4b46   5   39  118   2   0
    0x4b47   5   39  119   2   0
    0x4b48   5   39  120   2   0
    0x4b49   5   39  121   2   0
    0x4b4a   5   39  122   2   0
    0x4b4b   5   39  123   2   0
    0x4b4c   5   39  124   2   0
    0x4b4d   5   39  125   2   0
    0x4b4e   5   39  126   2   0
    0x4b4f   5   39  127   2   0
    0x4b50   5   39  128   2   0
    0x4b51   5   39  129   2   0
    0x4b52   5   39  130   2   0
    0x4b53   5   39  131   2   0
    0x4b54   5   39  132   2   0
    0x4b55   5   39  133   2   0
    0x4b56   5   39  134   2   0
    0x4b57   5   39  135   2   0
    0x4b58   5   39  136   2   0
    0x4b59   5   39  137   2   0
    0x4b5a   5   39  138   2   0
    0x4b5b   5   39  139   2   0
    0x4b5c   5   39  140   2   0
    0x4b5d   5   39  141   2   0
    0x4b5e   5   39  142   2   0
    0x4b5f   5   39  143   2   0
    0x4b60   5   39  144   2   0
    0x4b61   5   39  145   2   0
    0x4b62   5   39  146   2   0
    0x4b63   5   39  147   2   0
    0x4b64   5   39  148   2   0
    0x4b65   5   39  149   2   0
    0x4b66   5   39  150   2   0
    0x4b67   5   39  151   2   0
    0x4b68   5   39  152   2   0
    0x4b69   5   39  153   2   0
    0x4b6a   5   39  154   2   0
    0x4b6b   5   39  155   2   0
    0x4b6c   5   39  156   2   0
    0x4b6d   5   39  157   2   0
    0x4b6e   5   39  158   2   0
    0x4b6f   5   39  159   2   0
    0x4b70   5   39  160   2   0
    0x4b71   5   39  161   2   0
    0x4b72   5   39  162   2   0
    0x4b73   5   39  163   2   0
    0x4b74   5   39  164   2   0
    0x4b75   5   39  165   2   0
    0x4b76   5   39  166   2   0
    0x4b77   5   39  167   2   0
    0x4b78   5   39  168   2   0
    0x4b79   5   39  169   2   0
    0x4b7a   5   39  170   2   0
    0x4b7b   5   39  171   2   0
    0x4b7c   5   39  172   2   0
    0x4b7d   5   39  173   2   0
    0x4b7e   5   39  174   2   0
    0x4b7f   5   39  175   2   0
    0x4b80   5   39  176   2   0
    0x4b81   5   39  177   2   0
    0x4b82   5   39  178   2   0
    0x4b83   5   39  179   2   0
    0x4b84   5   39  180   2   0
    0x4b85   5   39  181   2   0
    0x4b86   5   39  182   2   0
    0x4b87   5   39  183   2   0
    0x4b88   5   39  184   2   0
    0x4b89   5   39  185   2   0
    0x4b8a   5   39  186   2   0
    0x4b8b   5   39  187   2   0
    0x4b8c   5   39  188   2   0
    0x4b8d   5   39  189   2   0
    0x4b8e   5   39  190   2   0
    0x4b8f   5   39  191   2   0
    0x4b90   5   39  192   2   0
    0x4b91   5   39  193   2   0
    0x4b92   5   39  194   2   0
    0x4b93   5   39  195   2   0
    0x4b94   5   39  196   2   0
    0x4b95   5   39  197   2   0
    0x4b96   5   39  198   2   0
    0x4b97   5   39  199   2   0
    0x4b98   5   39  200   2   0
    0x4b99   5   39  201   2   0
    0x4b9a   5   39  202   2   0
    0x4b9b   5   39  203   2   0
    0x4b9c   5   39  204   2   0
    0x4b9d   5   39  205   2   0
    0x4b9e   5   39  206   2   0
    0x4b9f   5   39  207   2   0
    0x4ba0   5   39  208   2   0
    0x4ba1   5   39  209   2   0
    0x4ba2   5   39  210   2   0
    0x4ba3   5   39  211   2   0
    0x4ba4   5   39  212   2   0
    0x4ba5   5   39  213   2   0
    0x4ba6   5   39  214   2   0
    0x4ba7   5   39  215   2   0
    0x4ba8   5   39  216   2   0
    0x4ba9   5   39  217   2   0
    0x4baa   5   39  218   2   0
    0x4bab   5   39  219   2   0
    0x4bac   5   39  220   2   0
    0x4bad   5   39  221   2   0
    0x4bae   5   39  222   2   0
    0x4baf   5   39  223   2   0
    0x4bb0   5   39  224   2   0
    0x4bb1   5   39  225   2   0
    0x4bb2   5   39  226   2   0
    0x4bb3   5   39  227   2   0
    0x4bb4   5   39  228   2   0
    0x4bb5   5   39  229   2   0
    0x4bb6   5   39  230   2   0
    0x4bb7   5   39  231   2   0
    0x4bb8   5   39  232   2   0
    0x4bb9   5   39  233   2   0
    0x4bba   5   39  234   2   0
    0x4bbb   5   39  235   2   0
    0x4bbc   5   39  236   2   0
    0x4bbd   5   39  237   2   0
    0x4bbe   5   39  238   2   0
    0x4bbf   5   39  239   2   0
    0x4bc0   5   39  240   2   0
    0x4bc1   5   39  241   2   0
    0x4bc2   5   39  242   2   0
    0x4bc3   5   39  243   2   0
    0x4bc4   5   39  244   2   0
    0x4bc5   5   39  245   2   0
    0x4bc6   5   39  246   2   0
    0x4bc7   5   39  247   2   0
    0x4bc8   5   39  248   2   0
    0x4bc9   5   39  249   2   0
    0x4bca   5   39  250   2   0
    0x4bcb   5   39  251   2   0
    0x4bcc   5   39  252   2   0
    0x4bcd   5   39  253   2   0
    0x4bce   5   39  254   2   0
    0x4bcf   5   39  255   2   0
    0x4bd0   5   40    2   2   0
    0x4bd1   5   40    3   2   0
    0x4bd2   5   40    4   2   0
    0x4bd3   5   40    5   2   0
    0x4bd4   5   40    6   2   0
    0x4bd5   5   40    7   2   0
    0x4bd6   5   40    8   2   0
    0x4bd7   5   40    9   2   0
    0x4bd8   5   40   10   2   0
    0x4bd9   5   40   11   2   0
    0x4bda   5   40   12   2   0
    0x4bdb   5   40   13   2   0
    0x4bdc   5   40   14   2   0
    0x4bdd   5   40   15   2   0
    0x4bde   5   40   16   2   0
    0x4bdf   5   40   17   2   0
    0x4be0   5   40   18   2   0
    0x4be1   5   40   19   2   0
    0x4be2   5   40   20   2   0
    0x4be3   5   40   21   2   0
    0x4be4   5   40   22   2   0
    0x4be5   5   40   23   2   0
    0x4be6   5   40   24   2   0
    0x4be7   5   40   25   2   0
    0x4be8   5   40   26   2   0
    0x4be9   5   40   27   2   0
    0x4bea   5   40   28   2   0
    0x4beb   5   40   29   2   0
    0x4bec   5   40   30   2   0
    0x4bed   5   40   31   2   0
    0x4bee   5   40   32   2   0
    0x4bef   5   40   33   2   0
    0x4bf0   5   40   34   2   0
    0x4bf1   5   40   35   2   0
    0x4bf2   5   40   36   2   0
    0x4bf3   5   40   37   2   0
    0x4bf4   5   40   38   2   0
    0x4bf5   5   40   39   2   0
    0x4bf6   5   40   40   2   0
    0x4bf7   5   40   41   2   0
    0x4bf8   5   40   42   2   0
    0x4bf9   5   40   43   2   0
    0x4bfa   5   40   44   2   0
    0x4bfb   5   40   45   2   0
    0x4bfc   5   40   46   2   0
    0x4bfd   5   40   47   2   0
    0x4bfe   5   40   48   2   0
    0x4bff   5   40   49   2   0
    0x4c00   5   40   50   2   0
    0x4c01   5   40   51   2   0
    0x4c02   5   40   52   2   0
    0x4c03   5   40   53   2   0
    0x4c04   5   40   54   2   0
    0x4c05   5   40   55   2   0
    0x4c06   5   40   56   2   0
    0x4c07   5   40   57   2   0
    0x4c08   5   40   58   2   0
    0x4c09   5   40   59   2   0
    0x4c0a   5   40   60   2   0
    0x4c0b   5   40   61   2   0
    0x4c0c   5   40   62   2   0
    0x4c0d   5   40   63   2   0
    0x4c0e   5   40   64   2   0
    0x4c0f   5   40   65   2   0
    0x4c10   5   40   66   2   0
    0x4c11   5   40   67   2   0
    0x4c12   5   40   68   2   0
    0x4c13   5   40   69   2   0
    0x4c14   5   40   70   2   0
    0x4c15   5   40   71   2   0
    0x4c16   5   40   72   2   0
    0x4c17   5   40   73   2   0
    0x4c18   5   40   74   2   0
    0x4c19   5   40   75   2   0
    0x4c1a   5   40   76   2   0
    0x4c1b   5   40   77   2   0
    0x4c1c   5   40   78   2   0
    0x4c1d   5   40   79   2   0
    0x4c1e   5   40   80   2   0
    0x4c1f   5   40   81   2   0
    0x4c20   5   40   82   2   0
    0x4c21   5   40   83   2   0
    0x4c22   5   40   84   2   0
    0x4c23   5   40   85   2   0
    0x4c24   5   40   86   2   0
    0x4c25   5   40   87   2   0
    0x4c26   5   40   88   2   0
    0x4c27   5   40   89   2   0
    0x4c28   5   40   90   2   0
    0x4c29   5   40   91   2   0
    0x4c2a   5   40   92   2   0
    0x4c2b   5   40   93   2   0
    0x4c2c   5   40   94   2   0
    0x4c2d   5   40   95   2   0
    0x4c2e   5   40   96   2   0
    0x4c2f   5   40   97   2   0
    0x4c30   5   40   98   2   0
    0x4c31   5   40   99   2   0
    0x4c32   5   40  100   2   0
    0x4c33   5   40  101   2   0
    0x4c34   5   40  102   2   0
    0x4c35   5   40  103   2   0
    0x4c36   5   40  104   2   0
    0x4c37   5   40  105   2   0
    0x4c38   5   40  106   2   0
    0x4c39   5   40  107   2   0
    0x4c3a   5   40  108   2   0
    0x4c3b   5   40  109   2   0
    0x4c3c   5   40  110   2   0
    0x4c3d   5   40  111   2   0
    0x4c3e   5   40  112   2   0
    0x4c3f   5   40  113   2   0
    0x4c40   5   40  114   2   0
    0x4c41   5   40  115   2   0
    0x4c42   5   40  116   2   0
    0x4c43   5   40  117   2   0
    0x4c44   5   40  118   2   0
    0x4c45   5   40  119   2   0
    0x4c46   5   40  120   2   0
    0x4c47   5   40  121   2   0
    0x4c48   5   40  122   2   0
    0x4c49   5   40  123   2   0
    0x4c4a   5   40  124   2   0
    0x4c4b   5   40  125   2   0
    0x4c4c   5   40  126   2   0
    0x4c4d   5   40  127   2   0
    0x4c4e   5   40  128   2   0
    0x4c4f   5   40  129   2   0
    0x4c50   5   40  130   2   0
    0x4c51   5   40  131   2   0
    0x4c52   5   40  132   2   0
    0x4c53   5   40  133   2   0
    0x4c54   5   40  134   2   0
    0x4c55   5   40  135   2   0
    0x4c56   5   40  136   2   0
    0x4c57   5   40  137   2   0
    0x4c58   5   40  138   2   0
    0x4c59   5   40  139   2   0
    0x4c5a   5   40  140   2   0
    0x4c5b   5   40  141   2   0
    0x4c5c   5   40  142   2   0
    0x4c5d   5   40  143   2   0
    0x4c5e   5   40  144   2   0
    0x4c5f   5   40  145   2   0
    0x4c60   5   40  146   2   0
    0x4c61   5   40  147   2   0
    0x4c62   5   40  148   2   0
    0x4c63   5   40  149   2   0
    0x4c64   5   40  150   2   0
    0x4c65   5   40  151   2   0
    0x4c66   5   40  152   2   0
    0x4c67   5   40  153   2   0
    0x4c68   5   40  154   2   0
    0x4c69   5   40  155   2   0
    0x4c6a   5   40  156   2   0
    0x4c6b   5   40  157   2   0
    0x4c6c   5   40  158   2   0
    0x4c6d   5   40  159   2   0
    0x4c6e   5   40  160   2   0
    0x4c6f   5   40  161   2   0
    0x4c70   5   40  162   2   0
    0x4c71   5   40  163   2   0
    0x4c72   5   40  164   2   0
    0x4c73   5   40  165   2   0
    0x4c74   5   40  166   2   0
    0x4c75   5   40  167   2   0
    0x4c76   5   40  168   2   0
    0x4c77   5   40  169   2   0
    0x4c78   5   40  170   2   0
    0x4c79   5   40  171   2   0
    0x4c7a   5   40  172   2   0
    0x4c7b   5   40  173   2   0
    0x4c7c   5   40  174   2   0
    0x4c7d   5   40  175   2   0
    0x4c7e   5   40  176   2   0
    0x4c7f   5   40  177   2   0
    0x4c80   5   40  178   2   0
    0x4c81   5   40  179   2   0
    0x4c82   5   40  180   2   0
    0x4c83   5   40  181   2   0
    0x4c84   5   40  182   2   0
    0x4c85   5   40  183   2   0
    0x4c86   5   40  184   2   0
    0x4c87   5   40  185   2   0
    0x4c88   5   40  186   2   0
    0x4c89   5   40  187   2   0
    0x4c8a   5   40  188   2   0
    0x4c8b   5   40  189   2   0
    0x4c8c   5   40  190   2   0
    0x4c8d   5   40  191   2   0
    0x4c8e   5   40  192   2   0
    0x4c8f   5   40  193   2   0
    0x4c90   5   40  194   2   0
    0x4c91   5   40  195   2   0
    0x4c92   5   40  196   2   0
    0x4c93   5   40  197   2   0
    0x4c94   5   40  198   2   0
    0x4c95   5   40  199   2   0
    0x4c96   5   40  200   2   0
    0x4c97   5   40  201   2   0
    0x4c98   5   40  202   2   0
    0x4c99   5   40  203   2   0
    0x4c9a   5   40  204   2   0
    0x4c9b   5   40  205   2   0
    0x4c9c   5   40  206   2   0
    0x4c9d   5   40  207   2   0
    0x4c9e   5   40  208   2   0
    0x4c9f   5   40  209   2   0
    0x4ca0   5   40  210   2   0
    0x4ca1   5   40  211   2   0
    0x4ca2   5   40  212   2   0
    0x4ca3   5   40  213   2   0
    0x4ca4   5   40  214   2   0
    0x4ca5   5   40  215   2   0
    0x4ca6   5   40  216   2   0
    0x4ca7   5   40  217   2   0
    0x4ca8   5   40  218   2   0
    0x4ca9   5   40  219   2   0
    0x4caa   5   40  220   2   0
    0x4cab   5   40  221   2   0
    0x4cac   5   40  222   2   0
    0x4cad   5   40  223   2   0
    0x4cae   5   40  224   2   0
    0x4caf   5   40  225   2   0
    0x4cb0   5   40  226   2   0
    0x4cb1   5   40  227   2   0
    0x4cb2   5   40  228   2   0
    0x4cb3   5   40  229   2   0
    0x4cb4   5   40  230   2   0
    0x4cb5   5   40  231   2   0
    0x4cb6   5   40  232   2   0
    0x4cb7   5   40  233   2   0
    0x4cb8   5   40  234   2   0
    0x4cb9   5   40  235   2   0
    0x4cba   5   40  236   2   0
    0x4cbb   5   40  237   2   0
    0x4cbc   5   40  238   2   0
    0x4cbd   5   40  239   2   0
    0x4cbe   5   40  240   2   0
    0x4cbf   5   40  241   2   0
    0x4cc0   5   40  242   2   0
    0x4cc1   5   40  243   2   0
    0x4cc2   5   40  244   2   0
    0x4cc3   5   40  245   2   0
    0x4cc4   5   40  246   2   0
    0x4cc5   5   40  247   2   0
    0x4cc6   5   40  248   2   0
    0x4cc7   5   40  249   2   0
    0x4cc8   5   40  250   2   0
    0x4cc9   5   40  251   2   0
    0x4cca   5   40  252   2   0
    0x4ccb   5   40  253   2   0
    0x4ccc   5   40  254   2   0
    0x4ccd   5   40  255   2   0
    0x4cce   5   41    2   2   0
    0x4ccf   5   41    3   2   0
    0x4cd0   5   41    4   2   0
    0x4cd1   5   41    5   2   0
    0x4cd2   5   41    6   2   0
    0x4cd3   5   41    7   2   0
    0x4cd4   5   41    8   2   0
    0x4cd5   5   41    9   2   0
    0x4cd6   5   41   10   2   0
    0x4cd7   5   41   11   2   0
    0x4cd8   5   41   12   2   0
    0x4cd9   5   41   13   2   0
    0x4cda   5   41   14   2   0
    0x4cdb   5   41   15   2   0
    0x4cdc   5   41   16   2   0
    0x4cdd   5   41   17   2   0
    0x4cde   5   41   18   2   0
    0x4cdf   5   41   19   2   0
    0x4ce0   5   41   20   2   0
    0x4ce1   5   41   21   2   0
    0x4ce2   5   41   22   2   0
    0x4ce3   5   41   23   2   0
    0x4ce4   5   41   24   2   0
    0x4ce5   5   41   25   2   0
    0x4ce6   5   41   26   2   0
    0x4ce7   5   41   27   2   0
    0x4ce8   5   41   28   2   0
    0x4ce9   5   41   29   2   0
    0x4cea   5   41   30   2   0
    0x4ceb   5   41   31   2   0
    0x4cec   5   41   32   2   0
    0x4ced   5   41   33   2   0
    0x4cee   5   41   34   2   0
    0x4cef   5   41   35   2   0
    0x4cf0   5   41   36   2   0
    0x4cf1   5   41   37   2   0
    0x4cf2   5   41   38   2   0
    0x4cf3   5   41   39   2   0
    0x4cf4   5   41   40   2   0
    0x4cf5   5   41   41   2   0
    0x4cf6   5   41   42   2   0
    0x4cf7   5   41   43   2   0
    0x4cf8   5   41   44   2   0
    0x4cf9   5   41   45   2   0
    0x4cfa   5   41   46   2   0
    0x4cfb   5   41   47   2   0
    0x4cfc   5   41   48   2   0
    0x4cfd   5   41   49   2   0
    0x4cfe   5   41   50   2   0
    0x4cff   5   41   51   2   0
    0x4d00   5   41   52   2   0
    0x4d01   5   41   53   2   0
    0x4d02   5   41   54   2   0
    0x4d03   5   41   55   2   0
    0x4d04   5   41   56   2   0
    0x4d05   5   41   57   2   0
    0x4d06   5   41   58   2   0
    0x4d07   5   41   59   2   0
    0x4d08   5   41   60   2   0
    0x4d09   5   41   61   2   0
    0x4d0a   5   41   62   2   0
    0x4d0b   5   41   63   2   0
    0x4d0c   5   41   64   2   0
    0x4d0d   5   41   65   2   0
    0x4d0e   5   41   66   2   0
    0x4d0f   5   41   67   2   0
    0x4d10   5   41   68   2   0
    0x4d11   5   41   69   2   0
    0x4d12   5   41   70   2   0
    0x4d13   5   41   71   2   0
    0x4d14   5   41   72   2   0
    0x4d15   5   41   73   2   0
    0x4d16   5   41   74   2   0
    0x4d17   5   41   75   2   0
    0x4d18   5   41   76   2   0
    0x4d19   5   41   77   2   0
    0x4d1a   5   41   78   2   0
    0x4d1b   5   41   79   2   0
    0x4d1c   5   41   80   2   0
    0x4d1d   5   41   81   2   0
    0x4d1e   5   41   82   2   0
    0x4d1f   5   41   83   2   0
    0x4d20   5   41   84   2   0
    0x4d21   5   41   85   2   0
    0x4d22   5   41   86   2   0
    0x4d23   5   41   87   2   0
    0x4d24   5   41   88   2   0
    0x4d25   5   41   89   2   0
    0x4d26   5   41   90   2   0
    0x4d27   5   41   91   2   0
    0x4d28   5   41   92   2   0
    0x4d29   5   41   93   2   0
    0x4d2a   5   41   94   2   0
    0x4d2b   5   41   95   2   0
    0x4d2c   5   41   96   2   0
    0x4d2d   5   41   97   2   0
    0x4d2e   5   41   98   2   0
    0x4d2f   5   41   99   2   0
    0x4d30   5   41  100   2   0
    0x4d31   5   41  101   2   0
    0x4d32   5   41  102   2   0
    0x4d33   5   41  103   2   0
    0x4d34   5   41  104   2   0
    0x4d35   5   41  105   2   0
    0x4d36   5   41  106   2   0
    0x4d37   5   41  107   2   0
    0x4d38   5   41  108   2   0
    0x4d39   5   41  109   2   0
    0x4d3a   5   41  110   2   0
    0x4d3b   5   41  111   2   0
    0x4d3c   5   41  112   2   0
    0x4d3d   5   41  113   2   0
    0x4d3e   5   41  114   2   0
    0x4d3f   5   41  115   2   0
    0x4d40   5   41  116   2   0
    0x4d41   5   41  117   2   0
    0x4d42   5   41  118   2   0
    0x4d43   5   41  119   2   0
    0x4d44   5   41  120   2   0
    0x4d45   5   41  121   2   0
    0x4d46   5   41  122   2   0
    0x4d47   5   41  123   2   0
    0x4d48   5   41  124   2   0
    0x4d49   5   41  125   2   0
    0x4d4a   5   41  126   2   0
    0x4d4b   5   41  127   2   0
    0x4d4c   5   41  128   2   0
    0x4d4d   5   41  129   2   0
    0x4d4e   5   41  130   2   0
    0x4d4f   5   41  131   2   0
    0x4d50   5   41  132   2   0
    0x4d51   5   41  133   2   0
    0x4d52   5   41  134   2   0
    0x4d53   5   41  135   2   0
    0x4d54   5   41  136   2   0
    0x4d55   5   41  137   2   0
    0x4d56   5   41  138   2   0
    0x4d57   5   41  139   2   0
    0x4d58   5   41  140   2   0
    0x4d59   5   41  141   2   0
    0x4d5a   5   41  142   2   0
    0x4d5b   5   41  143   2   0
    0x4d5c   5   41  144   2   0
    0x4d5d   5   41  145   2   0
    0x4d5e   5   41  146   2   0
    0x4d5f   5   41  147   2   0
    0x4d60   5   41  148   2   0
    0x4d61   5   41  149   2   0
    0x4d62   5   41  150   2   0
    0x4d63   5   41  151   2   0
    0x4d64   5   41  152   2   0
    0x4d65   5   41  153   2   0
    0x4d66   5   41  154   2   0
    0x4d67   5   41  155   2   0
    0x4d68   5   41  156   2   0
    0x4d69   5   41  157   2   0
    0x4d6a   5   41  158   2   0
    0x4d6b   5   41  159   2   0
    0x4d6c   5   41  160   2   0
    0x4d6d   5   41  161   2   0
    0x4d6e   5   41  162   2   0
    0x4d6f   5   41  163   2   0
    0x4d70   5   41  164   2   0
    0x4d71   5   41  165   2   0
    0x4d72   5   41  166   2   0
    0x4d73   5   41  167   2   0
    0x4d74   5   41  168   2   0
    0x4d75   5   41  169   2   0
    0x4d76   5   41  170   2   0
    0x4d77   5   41  171   2   0
    0x4d78   5   41  172   2   0
    0x4d79   5   41  173   2   0
    0x4d7a   5   41  174   2   0
    0x4d7b   5   41  175   2   0
    0x4d7c   5   41  176   2   0
    0x4d7d   5   41  177   2   0
    0x4d7e   5   41  178   2   0
    0x4d7f   5   41  179   2   0
    0x4d80   5   41  180   2   0
    0x4d81   5   41  181   2   0
    0x4d82   5   41  182   2   0
    0x4d83   5   41  183   2   0
    0x4d84   5   41  184   2   0
    0x4d85   5   41  185   2   0
    0x4d86   5   41  186   2   0
    0x4d87   5   41  187   2   0
    0x4d88   5   41  188   2   0
    0x4d89   5   41  189   2   0
    0x4d8a   5   41  190   2   0
    0x4d8b   5   41  191   2   0
    0x4d8c   5   41  192   2   0
    0x4d8d   5   41  193   2   0
    0x4d8e   5   41  194   2   0
    0x4d8f   5   41  195   2   0
    0x4d90   5   41  196   2   0
    0x4d91   5   41  197   2   0
    0x4d92   5   41  198   2   0
    0x4d93   5   41  199   2   0
    0x4d94   5   41  200   2   0
    0x4d95   5   41  201   2   0
    0x4d96   5   41  202   2   0
    0x4d97   5   41  203   2   0
    0x4d98   5   41  204   2   0
    0x4d99   5   41  205   2   0
    0x4d9a   5   41  206   2   0
    0x4d9b   5   41  207   2   0
    0x4d9c   5   41  208   2   0
    0x4d9d   5   41  209   2   0
    0x4d9e   5   41  210   2   0
    0x4d9f   5   41  211   2   0
    0x4da0   5   41  212   2   0
    0x4da1   5   41  213   2   0
    0x4da2   5   41  214   2   0
    0x4da3   5   41  215   2   0
    0x4da4   5   41  216   2   0
    0x4da5   5   41  217   2   0
    0x4da6   5   41  218   2   0
    0x4da7   5   41  219   2   0
    0x4da8   5   41  220   2   0
    0x4da9   5   41  221   2   0
    0x4daa   5   41  222   2   0
    0x4dab   5   41  223   2   0
    0x4dac   5   41  224   2   0
    0x4dad   5   41  225   2   0
    0x4dae   5   41  226   2   0
    0x4daf   5   41  227   2   0
    0x4db0   5   41  228   2   0
    0x4db1   5   41  229   2   0
    0x4db2   5   41  230   2   0
    0x4db3   5   41  231   2   0
    0x4db4   5   41  232   2   0
    0x4db5   5   41  233   2   0

ENDSORTKEY

SORTTABLES

  REVERSEDIACRITICS  6

    0x0000040c       ;French
    0x0000080c       ;French(Belgium)
    0x00000c0c       ;French(Canada)
    0x0000100c       ;French(Switzerland)
    0x0000140c       ;French(Luxembourg)
    0x0000180c       ;French(Monaco)

  DOUBLECOMPRESSION  1

    0x0000040e       ;Hungarian

  MULTIPLEWEIGHTS  2

    128 114          ;Ideographs:128-241
    242  13          ;PrivateUse:242-254

  IDEOGRAPH_LCID_EXCEPTION  12

    0x00000404  big5  ;Taiwan(Stroke Count)
    0x00000804  prcp  ;China(Pronunciation)
    0x00020804  prc   ;China(Stroke Count)
    0x00000c04  big5  ;Hong Kong(Stroke Count)
    0x00020c04  prc   ;Hong Kong(Stroke Count)
    0x00001004  prcp  ;Singapore(pronunciation)
    0x00021004  prc   ;Singapore(Stroke Count)
    0x00001404  prcp  ;Macau(pronunciation)
    0x00021404  prc   ;Macau(Stroke Count)
    0x00000411  xjis  ;Japan
    0x00000412  ksc   ;Korea
    0x00030404  bopomofo  ;Taiwan(Bopomofo)

  EXPANSION  37

    0x00c6  0x0041  0x0045        ;AE
    0x00dc  0x0055  0x0045        ;UE
    0x00de  0x0054  0x0048        ;TH
    0x00df  0x0073  0x0073        ;ss
    0x00e6  0x0061  0x0065        ;ae
    0x00fc  0x0075  0x0065        ;ue
    0x00fe  0x0074  0x0068        ;th
    0x0132  0x0049  0x004a        ;IJ
    0x0133  0x0069  0x006a        ;ij
    0x0152  0x004f  0x0045        ;OE
    0x0153  0x006f  0x0065        ;oe
    0x01c4  0x0044  0x017d        ;DZ<Hacek>
    0x01c5  0x0044  0x017e        ;Dz<Hacek>
    0x01c6  0x0064  0x017e        ;dz<Hacek>
    0x01c7  0x004c  0x004a        ;LJ
    0x01c8  0x004c  0x006a        ;Lj
    0x01c9  0x006c  0x006a        ;lj
    0x01ca  0x004e  0x004a        ;NJ
    0x01cb  0x004e  0x006a        ;Nj
    0x01cc  0x006e  0x006a        ;nj
    0x01e2  0x0100  0x0112        ;AE<Macron>
    0x01e3  0x0101  0x0113        ;ae<Macron>
    0x01f1  0x0044  0x005a        ;DZ
    0x01f2  0x0044  0x007a        ;Dz
    0x01f3  0x0064  0x007a        ;dz
    0x01fc  0x00c1  0x00c9        ;AE<Acute>
    0x01fd  0x00e1  0x00e9        ;ae<Acute>
    0xfb00  0x0066  0x0066        ;ff
    0xfb01  0x0066  0x0069        ;fi
    0xfb02  0x0066  0x006C        ;fl
    0xfb03  0x0066  0xfb01        ;ffi
    0xfb04  0x0066  0xfb02        ;ffl
    0xfb05  0x017f  0x0074        ;<Long>st
    0xfb06  0x0073  0x0074        ;st
    0x05f0  0x05d5  0x05d5        ;Hebrew Double Vav
    0x05f1  0x05d5  0x05d9        ;Hebrew Vav Yod
    0x05f2  0x05d9  0x05d9        ;Hebrew Double Yod

  EXCEPTION  54

    LCID  0x00000411   2            ;Japan - XJIS
    LCID  0x00010411                ;Japan - Unicode

      0x005c  10    5    2   2   0  ;Backslash sorted as Halfwidth Yen Sign
      0x2015   3    1    2   7   0  ;Cho-On

    LCID  0x00000412   1            ;Korean XWansung - Dictionary
    LCID  0x00010412                ;Korean XWansung - Unicode

      0x005c  10   37    2   2   0  ;Backslash sorted as Halfwidth Won Sign

    LCID  0x00010407   6            ;German - Phone Book Sort (DIN)

      0x00c4   2    0    0   0   0  ;A Umlaut -> AE
      0x00d6   2    9    0   0   0  ;O Umlaut -> OE
      0x00dc   2    1    0   0   0  ;U Umlaut -> UE
      0x00e4   2    4    0   0   0  ;a Umlaut -> ae
      0x00f6   2   10    0   0   0  ;o Umlaut -> oe
      0x00fc   2    5    0   0   0  ;u Umlaut -> ue

    LCID  0x0000041a  66            ;Croatian

      0x0044  14   26    2  18   2  ;D
      0x004c  14   72    2  18   2  ;L
      0x004e  14  112    2  18   2  ;N
      0x0064  14   26    2   2   2  ;d
      0x006c  14   72    2   2   2  ;l
      0x006e  14  112    2   2   2  ;n
      0x0102  14    2    5  18   0  ;A Breve
      0x0103  14    2    5   2   0  ;a Breve
      0x0106  14   12    2  18   0  ;C Acute
      0x0107  14   12    2   2   0  ;c Acute
      0x010c  14   11    2  18   0  ;C Hacek
      0x010d  14   11    2   2   0  ;c Hacek
      0x010e  14   26    4  18   0  ;D Hacek
      0x010f  14   26    4   2   0  ;d Hacek
      0x0110  14   30    2  18   0  ;D Bar
      0x0111  14   30    2   2   0  ;d Bar
      0x0114  14   33    5  18   0  ;E Breve
      0x0115  14   33    5   2   0  ;e Breve
      0x011a  14   33    4  18   0  ;E Hacek
      0x011b  14   33    4   2   0  ;e Hacek
      0x011e  14   37    5  18   0  ;G Breve
      0x011f  14   37    5   2   0  ;g Breve
      0x012c  14   50    5  18   0  ;I Breve
      0x012d  14   50    5   2   0  ;i Breve
      0x013d  14   72    4  18   0  ;L Hacek
      0x013e  14   72    4   2   0  ;l Hacek
      0x0147  14  112    4  18   0  ;N Hacek
      0x0148  14  112    4   2   0  ;n Hacek
      0x014e  14  124    5  18   0  ;O Breve
      0x014f  14  124    5   2   0  ;o Breve
      0x0158  14  138    4  18   0  ;R Hacek
      0x0159  14  138    4   2   0  ;r Hacek
      0x0160  14  151    2  18   0  ;S Hacek
      0x0161  14  151    2   2   0  ;s Hacek
      0x0164  14  153    4  18   0  ;T Hacek
      0x0165  14  153    4   2   0  ;t Hacek
      0x016c  14  159    5  18   0  ;U Breve
      0x016d  14  159    5   2   0  ;u Breve
      0x017d  14  173    2  18   0  ;Z Hacek
      0x017e  14  173    2   2   0  ;z Hacek
      0x01c4  14   29    4  26   0  ;D Z Hacek
      0x01c5  14   29    4  18   0  ;D z Hacek
      0x01c6  14   29    4   2   0  ;d z Hacek
      0x01c7  14   74    2  26   0  ;LJ
      0x01c8  14   74    2  18   0  ;Lj
      0x01c9  14   74    2   2   0  ;lj
      0x01ca  14  115    2  26   0  ;NJ
      0x01cb  14  115    2  18   0  ;Nj
      0x01cc  14  115    2   2   0  ;nj
      0x01cd  14    2    4  18   0  ;A Hacek
      0x01ce  14    2    4   2   0  ;a Hacek
      0x01cf  14   50    4  18   0  ;I Hacek
      0x01d0  14   50    4   2   0  ;i Hacek
      0x01d1  14  124    4  18   0  ;O Hacek
      0x01d2  14  124    4   2   0  ;o Hacek
      0x01d3  14  159    4  18   0  ;U Hacek
      0x01d4  14  159    4   2   0  ;u Hacek
      0x01e6  14   37    4  18   0  ;G Hacek
      0x01e7  14   37    4   2   0  ;g Hacek
      0x01e8  14   54    4  18   0  ;K Hacek
      0x01e9  14   54    4   2   0  ;k Hacek
      0x01ee  14  170    4  18   0  ;Capital Yogh Hacek
      0x01ef  14  170    4   2   0  ;Small Yogh Hacek
      0x01f0  14   53    4   2   0  ;j Hacek
      0x0306   1    0    3   0   0  ;Non-Spacing Breve
      0x030c   1    0    2   0   0  ;Non-Spacing Hacek

    LCID  0x00000405  34            ;Czech

      0x0043  14   10    2  18   2  ;C
      0x0063  14   10    2   2   2  ;c
      0x00c4  14    2    5  18   0  ;A Diaeresis
      0x00cb  14   33    5  18   0  ;E Diaeresis
      0x00cf  14   50    5  18   0  ;I Diaeresis
      0x00d6  14  124    5  18   0  ;O Diaeresis
      0x00dc  14  159    5  18   0  ;U Diaeresis
      0x00e4  14    2    5   2   0  ;a Diaeresis
      0x00eb  14   33    5   2   0  ;e Diaeresis
      0x00ef  14   50    5   2   0  ;i Diaeresis
      0x00f6  14  124    5   2   0  ;o Diaeresis
      0x00fc  14  159    5   2   0  ;u Diaeresis
      0x00ff  14  167    5   2   0  ;y Diaeresis
      0x010a  14   10    4  18   0  ;C Dot
      0x010b  14   10    4   2   0  ;c Dot
      0x010c  14   12    2  18   0  ;C Hacek
      0x010d  14   12    2   2   0  ;c Hacek
      0x0116  14   33    4  18   0  ;E Dot
      0x0117  14   33    4   2   0  ;e Dot
      0x0120  14   37    4  18   0  ;G Dot
      0x0121  14   37    4   2   0  ;g Dot
      0x0130  14   50    4  18   0  ;I Dot
      0x013f  14   72    4  18   0  ;L Middle Dot
      0x0140  14   72    4   2   0  ;l Middle Dot
      0x0158  14  141    2  18   0  ;R Hacek
      0x0159  14  141    2   2   0  ;r Hacek
      0x0160  14  151    2  18   0  ;S Hacek
      0x0161  14  151    2   2   0  ;s Hacek
      0x0178  14  167    5  18   0  ;Y Diaeresis
      0x017b  14  169    4  18   0  ;Z Dot
      0x017c  14  169    4   2   0  ;z Dot
      0x017d  14  173    2  18   0  ;Z Hacek
      0x017e  14  173    2   2   0  ;z Hacek
      0x0308   1    0    3   0   0  ;Non-Spacing Diaeresis

    LCID  0x00000406  20            ;Danish
    LCID  0x00000414                ;Norwegian(Bokmal)
    LCID  0x00000814                ;Norwegian(Nynorsk)

      0x0041  14    2    2  18   2  ;A
      0x0061  14    2    2   2   2  ;a
      0x00c4  14  172   19  18   0  ;A Diaeresis
      0x00c5  14  177    2  18   0  ;A Ring
      0x00c6  14  172    2  18   0  ;AE
      0x00d6  14  174   19  18   0  ;O Diaeresis
      0x00d8  14  174    2  18   0  ;O Slash
      0x00dc  14  167  123  18   0  ;U Diaeresis
      0x00e4  14  172   19   2   0  ;a Diaeresis
      0x00e5  14  177    2   2   0  ;a Ring
      0x00e6  14  172    2   2   0  ;ae
      0x00f6  14  174   19   2   0  ;o Diaeresis
      0x00f8  14  174    2   2   0  ;o Slash
      0x00fc  14  167  123   2   0  ;u Diaeresis
      0x0150  14  174   27  18   0  ;O Double Acute
      0x0151  14  174   27   2   0  ;o Double Acute
      0x0170  14  167   27  18   0  ;U Double Acute
      0x0171  14  167   27   2   0  ;u Double Acute
      0x01e2  14  172    3  18   0  ;A E Macron
      0x01e3  14  172    3   2   0  ;a E Macron

    LCID  0x0000040b  19            ;Finnish
    LCID  0x0000041d                ;Swedish
    LCID  0x0000081d                ;Swedish - Finland

      0x0057  14  162    3  18   0  ;W
      0x0077  14  162    3   2   0  ;w
      0x00c4  14  175    2  18   0  ;A Diaeresis
      0x00c5  14  173    2  18   0  ;A Ring
      0x00d6  14  176    2  18   0  ;O Diaeresis
      0x00d8  14  176   30  18   0  ;O Slash
      0x00dc  14  167  123  18   0  ;U Diaeresis
      0x00e4  14  175    2   2   0  ;a Diaeresis
      0x00e5  14  173    2   2   0  ;a Ring
      0x00f6  14  176    2   2   0  ;o Diaeresis
      0x00f8  14  176   30   2   0  ;o Slash
      0x00fc  14  167  123   2   0  ;u Diaeresis
      0x0150  14  176   27  18   0  ;O Double Acute
      0x0151  14  176   27   2   0  ;o Double Acute
      0x0170  14  167   27  18   0  ;U Double Acute
      0x0171  14  167   27   2   0  ;u Double Acute
      0x0174  14  162   18  18   0  ;W Circumflex
      0x0175  14  162   18   2   0  ;w Circumflex
      0x01bf  14  162  123   2   0  ;Wynn

    LCID  0x0000040e  24            ;Hungarian

      0x0043  14   10    2  18   2  ;C
      0x0044  14   26    2  18   3  ;D
      0x0047  14   37    2  18   2  ;G
      0x004c  14   72    2  18   2  ;L
      0x004e  14  112    2  18   2  ;N
      0x0053  14  145    2  18   2  ;S
      0x0054  14  153    2  18   2  ;T
      0x005a  14  169    2  18   2  ;Z
      0x0063  14   10    2   2   2  ;c
      0x0064  14   26    2   2   3  ;d
      0x0067  14   37    2   2   2  ;g
      0x006c  14   72    2   2   2  ;l
      0x006e  14  112    2   2   2  ;n
      0x0073  14  145    2   2   2  ;s
      0x0074  14  153    2   2   2  ;t
      0x007a  14  169    2   2   2  ;z
      0x00d6  14  125    2  18   0  ;O Diaeresis
      0x00dc  14  161    2  18   0  ;U Diaeresis
      0x00f6  14  125    2   2   0  ;o Diaeresis
      0x00fc  14  161    2   2   0  ;u Diaeresis
      0x0150  14  125   27  18   0  ;O Double Acute
      0x0151  14  125   27   2   0  ;o Double Acute
      0x0170  14  161   27  18   0  ;U Double Acute
      0x0171  14  161   27   2   0  ;u Double Acute

    LCID  0x0001040e  133           ;Hungarian Technical Sort

      0x0041  14    2    2   2   0  ;Latin Capital Letter A
      0x0061  14    2    2  18   0  ;Latin Small Letter A
      0x00c1  14    3    2   2   0  ;Latin Capital Letter A With Acute
      0x00e1  14    3    2  18   0  ;Latin Small Letter A With Acute
      0x00c2  14    4    2   2   0  ;Latin Capital Letter A With Circumflex
      0x00e2  14    4    2  18   0  ;Latin Small Letter A With Circumflex
      0x00c4  14    5    2   2   0  ;Latin Capital Letter A With Diaeresis
      0x00e4  14    5    2  18   0  ;Latin Small Letter A With Diaeresis
      0x0102  14    6    2   2   0  ;Latin Capital Letter A With Breve
      0x0103  14    6    2  18   0  ;Latin Small Letter A With Breve
      0x0104  14    7    2   2   0  ;Latin Capital Letter A With Ogonek
      0x0105  14    7    2  18   0  ;Latin Small Letter A With Ogonek
      0x0042  14    9    2   2   0  ;Latin Capital Letter B
      0x0062  14    9    2  18   0  ;Latin Small Letter B
      0x0043  14   10    2   2   0  ;Latin Capital Letter C
      0x0063  14   10    2  18   0  ;Latin Small Letter C
      0x00c7  14   11    2   2   0  ;Latin Capital Letter C With Cedilla
      0x00e7  14   11    2  18   0  ;Latin Small Letter C With Cedilla
      0x0106  14   12    2   2   0  ;Latin Capital Letter C With Acute
      0x0107  14   12    2  18   0  ;Latin Small Letter C With Acute
      0x010c  14   13    2   2   0  ;Latin Capital Letter C With Caron
      0x010d  14   13    2  18   0  ;Latin Small Letter C With Caron
      0x0044  14   26    2   2   0  ;Latin Capital Letter D
      0x0064  14   26    2  18   0  ;Latin Small Letter D
      0x010e  14   27    2   2   0  ;Latin Capital Letter D With Caron
      0x010f  14   27    2  18   0  ;Latin Small Letter D With Caron
      0x0110  14   28    2   2   0  ;Latin Capital Letter D With Stroke
      0x0111  14   28    2  18   0  ;Latin Small Letter D With Stroke
      0x0045  14   33    2   2   0  ;Latin Capital Letter E
      0x0065  14   33    2  18   0  ;Latin Small Letter E
      0x00c9  14   34    2   2   0  ;Latin Capital Letter E With Acute
      0x00e9  14   34    2  18   0  ;Latin Small Letter E With Acute
      0x00cb  14   35    2   2   0  ;Latin Capital Letter E With Diaeresis
      0x00eb  14   35    2  18   0  ;Latin Small Letter E With Diaeresis
      0x0118  14   36    2   2   0  ;Latin Capital Letter E With Ogonek
      0x0119  14   36    2  18   0  ;Latin Small Letter E With Ogonek
      0x011a  14   37    2   2   0  ;Latin Capital Letter E With Caron
      0x011b  14   37    2  18   0  ;Latin Small Letter E With Caron
      0x0046  14   38    2   2   0  ;Latin Capital Letter F
      0x0066  14   38    2  18   0  ;Latin Small Letter F
      0x0047  14   39    2   2   0  ;Latin Capital Letter G
      0x0067  14   39    2  18   0  ;Latin Small Letter G
      0x0048  14   44    2   2   0  ;Latin Capital Letter H
      0x0068  14   44    2  18   0  ;Latin Small Letter H
      0x0049  14   50    2   2   0  ;Latin Capital Letter I
      0x0069  14   50    2  18   0  ;Latin Small Letter I
      0x00cd  14   51    2   2   0  ;Latin Capital Letter I With Acute
      0x00ed  14   51    2  18   0  ;Latin Small Letter I With Acute
      0x00ce  14   52    2   2   0  ;Latin Capital Letter I With Circumflex
      0x00ee  14   52    2  18   0  ;Latin Small Letter I With Circumflex
      0x004a  14   53    2   2   0  ;Latin Capital Letter J
      0x006a  14   53    2  18   0  ;Latin Small Letter J
      0x004b  14   54    2   2   0  ;Latin Capital Letter K
      0x006b  14   54    2  18   0  ;Latin Small Letter K
      0x004c  14   72    2   2   0  ;Latin Capital Letter L
      0x006c  14   72    2  18   0  ;Latin Small Letter L
      0x0139  14   73    2   2   0  ;Latin Capital Letter L With Acute
      0x013a  14   73    2  18   0  ;Latin Small Letter L With Acute
      0x013d  14   74    2   2   0  ;Latin Capital Letter L With Caron
      0x013e  14   74    2  18   0  ;Latin Small Letter L With Caron
      0x0141  14   75    2   2   0  ;Latin Capital Letter L With Stroke
      0x0142  14   75    2  18   0  ;Latin Small Letter L With Stroke
      0x004d  14   81    2   2   0  ;Latin Capital Letter M
      0x006d  14   81    2  18   0  ;Latin Small Letter M
      0x004e  14  112    2   2   0  ;Latin Capital Letter N
      0x006e  14  112    2  18   0  ;Latin Small Letter N
      0x0143  14  113    2   2   0  ;Latin Capital Letter N With Acute
      0x0144  14  113    2  18   0  ;Latin Small Letter N With Acute
      0x0147  14  114    2   2   0  ;Latin Capital Letter N With Caron
      0x0148  14  114    2  18   0  ;Latin Small Letter N With Caron
      0x004f  14  124    2   2   0  ;Latin Capital Letter O
      0x006f  14  124    2  18   0  ;Latin Small Letter O
      0x00d3  14  125    2   2   0  ;Latin Capital Letter O With Acute
      0x00f3  14  125    2  18   0  ;Latin Small Letter O With Acute
      0x00d4  14  126    2   2   0  ;Latin Capital Letter O With Circumflex
      0x00f4  14  126    2  18   0  ;Latin Small Letter O With Circumflex
      0x00d6  14  127    2   2   0  ;Latin Capital Letter O With Diaeresis
      0x00f6  14  127    2  18   0  ;Latin Small Letter O With Diaeresis
      0x0150  14  128    2   2   0  ;Latin Capital Letter O With Double Acute
      0x0151  14  128    2  18   0  ;Latin Small Letter O With Double Acute
      0x0050  14  129    2   2   0  ;Latin Capital Letter P
      0x0070  14  129    2  18   0  ;Latin Small Letter P
      0x0051  14  137    2   2   0  ;Latin Capital Letter Q
      0x0071  14  137    2  18   0  ;Latin Small Letter Q
      0x0052  14  138    2   2   0  ;Latin Capital Letter R
      0x0072  14  138    2  18   0  ;Latin Small Letter R
      0x0154  14  139    2   2   0  ;Latin Capital Letter R With Acute
      0x0155  14  139    2  18   0  ;Latin Small Letter R With Acute
      0x0158  14  140    2   2   0  ;Latin Capital Letter R With Caron
      0x0159  14  140    2  18   0  ;Latin Small Letter R With Caron
      0x0053  14  145    2   2   0  ;Latin Capital Letter S
      0x0073  14  145    2  18   0  ;Latin Small Letter S
      0x015a  14  146    2   2   0  ;Latin Capital Letter S With Acute
      0x015b  14  146    2  18   0  ;Latin Small Letter S With Acute
      0x015e  14  147    2   2   0  ;Latin Capital Letter S With Cedilla
      0x015f  14  147    2  18   0  ;Latin Small Letter S With Cedilla
      0x0160  14  148    2   2   0  ;Latin Capital Letter S With Caron
      0x0161  14  148    2  18   0  ;Latin Small Letter S With Caron
      0x00df  14  149    2  18   0  ;Latin Small Letter Sharp S
      0x0054  14  153    2   2   0  ;Latin Capital Letter T
      0x0074  14  153    2  18   0  ;Latin Small Letter T
      0x0162  14  154    2   2   0  ;Latin Capital Letter T With Cedilla
      0x0163  14  154    2  18   0  ;Latin Small Letter T With Cedilla
      0x0164  14  155    2   2   0  ;Latin Capital Letter T With Caron
      0x0165  14  155    2  18   0  ;Latin Small Letter T With Caron
      0x0055  14  159    2   2   0  ;Latin Capital Letter U
      0x0075  14  159    2  18   0  ;Latin Small Letter U
      0x00da  14  160    2   2   0  ;Latin Capital Letter U With Acute
      0x00fa  14  160    2  18   0  ;Latin Small Letter U With Acute
      0x00dc  14  161    2   2   0  ;Latin Capital Letter U With Diaeresis
      0x00fc  14  161    2  18   0  ;Latin Small Letter U With Diaeresis
      0x016e  14  162    2   2   0  ;Latin Capital Letter U With Ring Above
      0x016f  14  162    2  18   0  ;Latin Small Letter U With Ring Above
      0x0170  14  163    2   2   0  ;Latin Capital Letter U With Double Acute
      0x0171  14  163    2  18   0  ;Latin Small Letter U With Double Acute
      0x0056  14  164    2   2   0  ;Latin Capital Letter V
      0x0076  14  164    2  18   0  ;Latin Small Letter V
      0x0057  14  165    2   2   0  ;Latin Capital Letter W
      0x0077  14  165    2  18   0  ;Latin Small Letter W
      0x0058  14  166    2   2   0  ;Latin Capital Letter X
      0x0078  14  166    2  18   0  ;Latin Small Letter X
      0x0059  14  167    2   2   0  ;Latin Capital Letter Y
      0x0079  14  167    2  18   0  ;Latin Small Letter Y
      0x00dd  14  168    2   2   0  ;Latin Capital Letter Y With Acute
      0x00fd  14  168    2  18   0  ;Latin Small Letter Y With Acute
      0x005a  14  169    2   2   0  ;Latin Capital Letter Z
      0x007a  14  169    2  18   0  ;Latin Small Letter Z
      0x0179  14  170    2   2   0  ;Latin Capital Letter Z With Acute
      0x017a  14  170    2  18   0  ;Latin Small Letter Z With Acute
      0x017b  14  171    2   2   0  ;Latin Capital Letter Z With Dot Above
      0x017c  14  171    2  18   0  ;Latin Small Letter Z With Dot Above
      0x017d  14  172    2   2   0  ;Latin Capital Letter Z With Caron
      0x017e  14  172    2  18   0  ;Latin Small Letter Z With Caron

    LCID  0x0000040f  24            ;Icelandic

      0x00c1  14    4    2  18   0  ;A Acute
      0x00c6  14  172    2  18   0  ;AE
      0x00c9  14   34    2  18   0  ;E Acute
      0x00cd  14   51    2  18   0  ;I Acute
      0x00d0  14   27    2  18   0  ;Capital Eth
      0x00d3  14  125    2  18   0  ;O Acute
      0x00d6  14  173    2  18   0  ;O Diaeresis
      0x00d8  14  173   30  18   0  ;O Slash
      0x00da  14  160    2  18   0  ;U Acute
      0x00dd  14  168    2  18   0  ;Y Acute
      0x00de  14  171    2  18   0  ;Capital Thorn
      0x00e1  14    4    2   2   0  ;a Acute
      0x00e6  14  172    2   2   0  ;ae
      0x00e9  14   34    2   2   0  ;e Acute
      0x00ed  14   51    2   2   0  ;i Acute
      0x00f0  14   27    2   2   0  ;Small Eth
      0x00f3  14  125    2   2   0  ;o Acute
      0x00f6  14  173    2   2   0  ;o Diaeresis
      0x00f8  14  173   30   2   0  ;o Slash
      0x00fa  14  160    2   2   0  ;u Acute
      0x00fd  14  168    2   2   0  ;y Acute
      0x00fe  14  171    2   2   0  ;Small Thorn
      0x01e2  14  172   22  18   0  ;A E Macron
      0x01e3  14  172   22   2   0  ;a E Macron

    LCID  0x0000040a  6             ;Spanish(Traditional)


      0x0043  14   10    2  18   2  ;C
      0x004c  14   72    2  18   2  ;L
      0x0063  14   10    2   2   2  ;c
      0x006c  14   72    2   2   2  ;l
      0x00d1  14  115    2  18   0  ;N Tilde
      0x00f1  14  115    2   2   0  ;n Tilde

    LCID  0x00000c0a  2             ;Spanish(International)
    LCID  0x0000080a                ;Spanish(Mexico)
    LCID  0x0000100a                ;Guatemala
    LCID  0x0000140a                ;Costa Rica
    LCID  0x0000180a                ;Panama
    LCID  0x00001c0a                ;Dominican Republic
    LCID  0x0000200a                ;Venezuela
    LCID  0x0000240a                ;Colombia
    LCID  0x0000280a                ;Peru
    LCID  0x00002c0a                ;Argentina
    LCID  0x0000300a                ;Ecuador
    LCID  0x0000340a                ;Chile
    LCID  0x0000380a                ;Uruguay
    LCID  0x00003c0a                ;Paraguay
    LCID  0x0000400a                ;Bolivia
    LCID  0x0000440a                ;El Salvador
    LCID  0x0000480a                ;Honduras
    LCID  0x00004c0a                ;Nicaragua
    LCID  0x0000500a                ;Puerto Rico

      0x00d1  14  115    2  18   0  ;N Tilde
      0x00f1  14  115    2   2   0  ;n Tilde

    LCID  0x00000415  18            ;Polish

      0x00d3  14  125    2  18   0  ;O Acute
      0x00f3  14  125    2   2   0  ;o Acute
      0x0104  14    4    2  18   0  ;A Ogonek
      0x0105  14    4    2   2   0  ;a Ogonek
      0x0106  14   11    2  18   0  ;C Acute
      0x0107  14   11    2   2   0  ;c Acute
      0x0118  14   34    2  18   0  ;E Ogonek
      0x0119  14   34    2   2   0  ;e Ogonek
      0x0141  14   76    2  18   0  ;L Slash
      0x0142  14   76    2   2   0  ;l Slash
      0x0143  14  114    2  18   0  ;N Acute
      0x0144  14  114    2   2   0  ;n Acute
      0x015a  14  151    2  18   0  ;S Acute
      0x015b  14  151    2   2   0  ;s Acute
      0x0179  14  171    2  18   0  ;Z Acute
      0x017a  14  171    2   2   0  ;z Acute
      0x017b  14  172    2  18   0  ;Z Dot
      0x017c  14  172    2   2   0  ;z Dot

    LCID  0x00000418   8            ;Romanian

      0x0102  14    8    2  18   0  ;A Breve
      0x0103  14    8    2   2   0  ;a Breve
      0x00ce  14   52    2  18   0  ;I Circumflex
      0x00ee  14   52    2   2   0  ;i Circumflex
      0x015e  14  152    2  18   0  ;S Cedilla
      0x015f  14  152    2   2   0  ;s Cedilla
      0x0162  14  158    2  18   0  ;T Cedilla
      0x0163  14  158    2   2   0  ;t Cedilla

    LCID  0x0000041b  36            ;Slovak

      0x0043  14   10    2  18   2  ;C
      0x0063  14   10    2   2   2  ;c
      0x00c4  14    3    2  18   0  ;A Diaeresis
      0x00cb  14   33    5  18   0  ;E Diaeresis
      0x00cf  14   50    5  18   0  ;I Diaeresis
      0x00d4  14  125    2  18   0  ;O Circumflex
      0x00d6  14  124    5  18   0  ;O Diaeresis
      0x00dc  14  159    5  18   0  ;U Diaeresis
      0x00e4  14    3    2   2   0  ;a Diaeresis
      0x00eb  14   33    5   2   0  ;e Diaeresis
      0x00ef  14   50    5   2   0  ;i Diaeresis
      0x00f4  14  125    2   2   0  ;o Circumflex
      0x00f6  14  124    5   2   0  ;o Diaeresis
      0x00fc  14  159    5   2   0  ;u Diaeresis
      0x00ff  14  167    5   2   0  ;y Diaeresis
      0x010a  14   10    4  18   0  ;C Dot
      0x010b  14   10    4   2   0  ;c Dot
      0x010c  14   12    2  18   0  ;C Hacek
      0x010d  14   12    2   2   0  ;c Hacek
      0x0116  14   33    4  18   0  ;E Dot
      0x0117  14   33    4   2   0  ;e Dot
      0x0120  14   37    4  18   0  ;G Dot
      0x0121  14   37    4   2   0  ;g Dot
      0x0130  14   50    4  18   0  ;I Dot
      0x013f  14   72    4  18   0  ;L Middle Dot
      0x0140  14   72    4   2   0  ;l Middle Dot
      0x0158  14  141    2  18   0  ;R Hacek
      0x0159  14  141    2   2   0  ;r Hacek
      0x0160  14  151    2  18   0  ;S Hacek
      0x0161  14  151    2   2   0  ;s Hacek
      0x0178  14  167    5  18   0  ;Y Diaeresis
      0x017b  14  169    4  18   0  ;Z Dot
      0x017c  14  169    4   2   0  ;z Dot
      0x017d  14  173    2  18   0  ;Z Hacek
      0x017e  14  173    2   2   0  ;z Hacek
      0x0308   1    0    3   0   0  ;Non-Spacing Diaeresis

    LCID  0x00000422  2             ;Ukrainian

      0x042c  16  138    2  18   0  ;Cyrillic Capital Soft Sign
      0x044c  16  138    2   2   0  ;Cyrillic Small Soft Sign

    LCID  0x00000424  14            ;Slovenian

      0x010c  14   24    2  18   0  ;C Hacek
      0x010d  14   24    2   2   0  ;c Hacek
      0x0106  14   25    2  18   0  ;C Acute
      0x0107  14   25    2   2   0  ;c Acute
      0x0110  14   32    2  18   0  ;D Bar
      0x0111  14   32    2   2   0  ;d Bar
      0x0160  14  151    2  18   0  ;S Hacek
      0x0161  14  151    2   2   0  ;s Hacek
      0x015a  14  152    2  18   0  ;S Acute
      0x015b  14  152    2   2   0  ;s Acute
      0x017d  14  172    2  18   0  ;Z Hacek
      0x017e  14  172    2   2   0  ;z Hacek
      0x0179  14  173    2  18   0  ;Z Acute
      0x017a  14  173    2   2   0  ;z Acute

    LCID  0x0000041f  17            ;Turkish

      0x33ca  14   46    2   2   0  ;Squared Ha: make room for Dotted I unique weight (removed, but could be readded)
      0x33cb  14   47    2   2   0  ;Squared Hp
      0x3390  14   48    2   2   0  ;Squared Hz
      0x00c7  14   12    2  18   0  ;C Cedilla
      0x00d6  14  125    2  18   0  ;O Diaeresis
      0x00dc  14  161    2  18   0  ;U Diaeresis
      0x00e7  14   12    2   2   0  ;c Cedilla
      0x00f6  14  125    2   2   0  ;o Diaeresis
      0x00fc  14  161    2   2   0  ;u Diaeresis
      0x011e  14   38    2  18   0  ;G Breve
      0x011f  14   38    2   2   0  ;g Breve
      0x015e  14  151    2  18   0  ;S Cedilla
      0x015f  14  151    2   2   0  ;s Cedilla
      0x0049  14   49    2  18   0  ;I
      0x0069  14   50    2   2   0  ;i
      0x0130  14   50    2  18   0  ;I Dot
      0x0131  14   49    2   2   0  ;Small Dotless I

    LCID  0x00000425  23            ;Estonian

      0x017f  14  145    3   2   0  ;Long s:make room for 3 exceptions
      0x0160  14  150    2  18   0  ;S Caron
      0x0161  14  150    2   2   0  ;s Caron
      0x005a  14  151    2  18   0  ;Z
      0x007a  14  151    2   2   0  ;z
      0x0179  14  151   14  18   0  ;Latin Capital Letter Z Acute
      0x017a  14  151   14   2   0  ;Latin Small Letter Z Acute
      0x017b  14  151   16  18   0  ;Latin Capital Letter Z Dot
      0x017c  14  151   16   2   0  ;Latin Small Letter Z Dot
      0x017d  14  152    2  18   0  ;Z Caron
      0x017e  14  152    2   2   0  ;z Caron
      0x0076  14  161    2   2   0  ;v:move up to make room for 4 exceptions
      0x0056  14  161    2  18   0  ;V:move up to make room for 4 exceptions
      0x0057  14  161    3  18   0  ;W
      0x0077  14  161    3   2   0  ;w
      0x00d5  14  162    2  18   0  ;O Tilde
      0x00f5  14  162    2   2   0  ;o Tilde
      0x00c4  14  163    2  18   0  ;A Diaeresis
      0x00e4  14  163    2   2   0  ;a Diaeresis
      0x00d6  14  164    2  18   0  ;O Diaeresis
      0x00f6  14  164    2   2   0  ;o Diaeresis
      0x00dc  14  165    2  18   0  ;U Diaeresis
      0x00fc  14  165    2   2   0  ;u Diaeresis

    LCID  0x00000426  14            ;Latvian

      0x010c  14   11    2  18   0  ;C Hacek
      0x010d  14   11    2   2   0  ;c Hacek
      0x0122  14   38    2  18   0  ;G Cedilla
      0x0123  14   38    2   2   0  ;g Cedilla
      0x0136  14   71    2  18   0  ;K Cedilla
      0x0137  14   71    2   2   0  ;k Cedilla
      0x013b  14   73    2  18   0  ;L Cedilla
      0x013c  14   73    2   2   0  ;l Cedilla
      0x0145  14  123    2  18   0  ;N Cedilla
      0x0146  14  123    2   2   0  ;n Cedilla
      0x0160  14  151    2  18   0  ;S Hacek
      0x0161  14  151    2   2   0  ;s Hacek
      0x017d  14  171    2  18   0  ;Z Hacek
      0x017e  14  171    2   2   0  ;z Hacek

    LCID  0x00000427  18            ;Lithuanian

      0x010c  14   11    2  18   0  ;C Hacek
      0x010d  14   11    2   2   0  ;c Hacek
      0x0160  14  151    2  18   0  ;S Hacek
      0x0161  14  151    2   2   0  ;s Hacek
      0x017d  14  171    2  18   0  ;Z Hacek
      0x017e  14  171    2   2   0  ;z Hacek
      0x0105  14    2   15   2   0  ;a Ogonek
      0x0104  14    2   15  18   0  ;A Ogonek
      0x0119  14   33   15   2   0  ;e Ogonek
      0x0118  14   33   15  18   0  ;E Ogonek
      0x012f  14   50   15   2   0  ;i Ogonek
      0x012e  14   50   15  18   0  ;I Ogonek
      0x0173  14  159   15   2   0  ;u Ogonek
      0x0172  14  159   15  18   0  ;U Ogonek
      0x0059  14   51    2  18   0  ;Y
      0x0079  14   51    2   2   0  ;y
      0xff39  14   51    2  19   0  ;Fullwidth Y
      0xff59  14   51    2   3   0  ;Fullwidth y

    LCID  0x0000042a 151            ;Vietnamese

      0x0043  14   10    2  18   2  ;Latin Capital C
      0x0047  14   37    2  18   2  ;Latin Capital G
      0x004b  14   54    2  18   2  ;Latin Capital K
      0x004e  14  112    2  18   2  ;Latin Capital N
      0x0050  14  127    2  18   2  ;Latin Capital P
      0x0051  14  137    2  18   2  ;Latin Capital Q
      0x0052  14  139    2  18   0  ;Latin Capital R
      0x0054  14  153    2  18   2  ;Latin Capital T
      0x0063  14   10    2   2   2  ;Latin Small C
      0x0067  14   37    2   2   2  ;Latin Small G
      0x006b  14   54    2   2   2  ;Latin Small K
      0x006e  14  112    2   2   2  ;Latin Small N
      0x0070  14  127    2   2   2  ;Latin Small P
      0x0071  14  137    2   2   2  ;Latin Small Q
      0x0072  14  139    2   2   0  ;Latin Small R
      0x0074  14  153    2   2   2  ;Latin Small T
      0x00c2  14    4    2  18   0  ;Latin Capital A Circumflex
      0x00ca  14   34    2  18   0  ;Latin Capital E Circumflex
      0x00d4  14  125    2  18   0  ;Latin Capital O Circumflex
      0x00e2  14    4    2   2   0  ;Latin Small A Circumflex
      0x00ea  14   34    2   2   0  ;Latin Small E Circumflex
      0x00f4  14  125    2   2   0  ;Latin Small O Circumflex
      0x0102  14    3    2  18   0  ;Latin Capital A Breve
      0x0103  14    3    2   2   0  ;Latin Small A Breve
      0x0110  14   27    2  18   0  ;Latin Capital D Bar
      0x0111  14   27    2   2   0  ;Latin Small D Bar
      0x01a0  14  126    2  18   0  ;Latin Capital O Horn
      0x01a1  14  126    2   2   0  ;Latin Small O Horn
      0x01af  14  160    2  18   0  ;Latin Capital U Horn
      0x01b0  14  160    2   2   0  ;Latin Small U Horn
      0x0340   1    0    1   0   0  ;Non-Spacing Grave (Low Falling Tone Mark)
      0x0341   1    0    4   0   0  ;Non-Spacing Acute (High Rising Tone Mark)
      0x0303   1    0    3   0   0  ;Non-Spacing Tilde (High Broken Tone Mark)
      0x0309   1    0    2   0   0  ;Non-Spacing Hook Above (Low Rising Tone Mark)
      0x0323   1    0    5   0   0  ;Non-Spacing Dot Below (Low Broken Tone Mark)
      0x00c0  14    2    3  18   0  ;Latin Capital Letter A With Grave
      0x00c1  14    2    6  18   0  ;Latin Capital Letter A With Acute
      0x00c8  14   33    3  18   0  ;Latin Capital Letter E With Grave
      0x00c9  14   33    6  18   0  ;Latin Capital Letter E With Acute
      0x00cd  14   50    6  18   0  ;Latin Capital Letter I With Acute
      0x00ce  14   52    2  18   0  ;Latin Capital Letter I With Circumflex
      0x00d3  14  124    6  18   0  ;Latin Capital Letter O With Acute
      0x00d9  14  159    3  18   0  ;Latin Capital Letter U With Grave
      0x00da  14  159    6  18   0  ;Latin Capital Letter U With Acute
      0x00db  14  161    2  18   0  ;Latin Capital Letter U With Circumflex
      0x00e0  14    2    3   2   0  ;Latin Small Letter A With Grave
      0x00e1  14    2    6   2   0  ;Latin Small Letter A With Acute
      0x00e8  14   33    3   2   0  ;e Grave
      0x00e9  14   33    6   2   0  ;e Acute
      0x00ed  14   50    6   2   0  ;Latin Small Letter I With Acute
      0x00ee  14   52    2   2   0  ;Latin Small Letter I With Circumflex
      0x00f3  14  124    6   2   0  ;Latin Small Letter O With Acute
      0x00f9  14  159    3   2   0  ;Latin Small Letter U With Grave
      0x00fa  14  159    6   2   0  ;Latin Small Letter U With Acute
      0x00fb  14  161    2   2   0  ;Latin Small Letter U With Circumflex
      0x0128  14   50    5  18   0  ;Latin Capital Letter I Tilde
      0x0129  14   50    5   2   0  ;Latin Small Letter I Tilde
      0x0168  14  159    5  18   0  ;Latin Capital Letter U Tilde
      0x0169  14  159    5   2   0  ;Latin Small Letter U Tilde
      0x0300   1    0    1   0   0  ;Non-Spacing Grave Accent
      0x0301   1    0    4   0   0  ;Non-Spacing Acute Accent
      0x1ea0  14    2    7  18   0  ;A Dot Below
      0x1ea1  14    2    7   2   0  ;a Dot Below
      0x1ea2  14    2    4  18   0  ;A Hook Above
      0x1ea3  14    2    4   2   0  ;a Hook Above
      0x1ea4  14    4    6  18   0  ;A Circumflex Acute
      0x1ea5  14    4    6   2   0  ;a Circumflex Acute
      0x1ea6  14    4    3  18   0  ;A Circumflex Grave
      0x1ea7  14    4    3   2   0  ;a Circumflex Grave
      0x1ea8  14    4    4  18   0  ;A Circumflex Hook Above
      0x1ea9  14    4    4   2   0  ;a Circumflex Hook Above
      0x1eaa  14    4    5  18   0  ;A Circumflex Tilde
      0x1eab  14    4    5   2   0  ;a Circumflex Tilde
      0x1eac  14    4    7  18   0  ;A Circumflex Dot Below
      0x1ead  14    4    7   2   0  ;a Circumflex Dot Below
      0x1eae  14    3    6  18   0  ;A Breve Acute
      0x1eaf  14    3    6   2   0  ;a Breve Acute
      0x1eb0  14    3    3  18   0  ;A Breve Grave
      0x1eb1  14    3    3   2   0  ;a Breve Grave
      0x1eb2  14    3    4  18   0  ;A Breve Hook Above
      0x1eb3  14    3    4   2   0  ;a Breve Hook Above
      0x1eb4  14    3    5  18   0  ;A Breve Tilde
      0x1eb5  14    3    5   2   0  ;a Breve Tilde
      0x1eb6  14    3    7  18   0  ;A Breve Dot Below
      0x1eb7  14    3    7   2   0  ;a Breve Dot Below
      0x1eb8  14   33    7  18   0  ;E Dot Below
      0x1eb9  14   33    7   2   0  ;e Dot Below
      0x1eba  14   33    4  18   0  ;E Hook Above
      0x1ebb  14   33    4   2   0  ;e Hook Above
      0x1ebc  14   33    5  18   0  ;E Tilde
      0x1ebd  14   33    5   2   0  ;e Tilde
      0x1ebe  14   34    6  18   0  ;E Circumflex Acute
      0x1ebf  14   34    6   2   0  ;e Circumflex Acute
      0x1ec0  14   34    3  18   0  ;E Circumflex Grave
      0x1ec1  14   34    3   2   0  ;e Circumflex Grave
      0x1ec2  14   34    4  18   0  ;E Circumflex Hook Above
      0x1ec3  14   34    4   2   0  ;e Circumflex Hook Above
      0x1ec4  14   34    5  18   0  ;E Circumflex Tilde
      0x1ec5  14   34    5   2   0  ;e Circumflex Tilde
      0x1ec6  14   34    7  18   0  ;E Circumflex Dot Below
      0x1ec7  14   34    7   2   0  ;e Circumflex Dot Below
      0x1ec8  14   50    4  18   0  ;I Hook Above
      0x1ec9  14   50    4   2   0  ;i Hook Above
      0x1eca  14   50    7  18   0  ;I Dot Below
      0x1ecb  14   50    7   2   0  ;i Dot Below
      0x1ecc  14  124    7  18   0  ;O Dot Below
      0x1ecd  14  124    7   2   0  ;o Dot Below
      0x1ece  14  124    4  18   0  ;O Hook Above
      0x1ecf  14  124    4   2   0  ;o Hook Above
      0x1ed0  14  125    6  18   0  ;O Circumflex Acute
      0x1ed1  14  125    6   2   0  ;o Circumflex Acute
      0x1ed2  14  125    3  18   0  ;O Circumflex Grave
      0x1ed3  14  125    3   2   0  ;o Circumflex Grave
      0x1ed4  14  125    4  18   0  ;O Circumflex Hook Above
      0x1ed5  14  125    4   2   0  ;o Circumflex Hook Above
      0x1ed6  14  125    5  18   0  ;O Circumflex Tilde
      0x1ed7  14  125    5   2   0  ;o Circumflex Tilde
      0x1ed8  14  125    7  18   0  ;O Circumflex Dot Below
      0x1ed9  14  125    7   2   0  ;o Circumflex Dot Below
      0x1eda  14  126    6  18   0  ;O Horn Acute
      0x1edb  14  126    6   2   0  ;o Horn Acute
      0x1edc  14  126    3  18   0  ;O Horn Grave
      0x1edd  14  126    3   2   0  ;o Horn Grave
      0x1ede  14  126    4  18   0  ;O Horn Hook Above
      0x1edf  14  126    4   2   0  ;o Horn Hook Above
      0x1ee0  14  126    5  18   0  ;O Horn Tilde
      0x1ee1  14  126    5   2   0  ;o Horn Tilde
      0x1ee2  14  126    7  18   0  ;O Horn Dot Below
      0x1ee3  14  126    7   2   0  ;o Horn Dot Below
      0x1ee4  14  159    7  18   0  ;U Dot Below
      0x1ee5  14  159    7   2   0  ;u Dot Below
      0x1ee6  14  159    4  18   0  ;U Hook Above
      0x1ee7  14  159    4   2   0  ;u Hook Above
      0x1ee8  14  160    6  18   0  ;U Horn Acute
      0x1ee9  14  160    6   2   0  ;u Horn Acute
      0x1eea  14  160    3  18   0  ;U Horn Grave
      0x1eeb  14  160    3   2   0  ;u Horn Grave
      0x1eec  14  160    4  18   0  ;U Horn Hook Above
      0x1eed  14  160    4   2   0  ;u Horn Hook Above
      0x1eee  14  160    5  18   0  ;U Horn Tilde
      0x1eef  14  160    5   2   0  ;u Horn Tilde
      0x1ef0  14  160    7  18   0  ;U Horn Dot Below
      0x1ef1  14  160    7   2   0  ;u Horn Dot Below
      0x1ef2  14  167    3  18   0  ;Y Grave
      0x1ef3  14  167    3   2   0  ;y Grave
      0x1ef4  14  167    7  18   0  ;Y Dot Below
      0x1ef5  14  167    7   2   0  ;y Dot Below
      0x1ef6  14  167    4  18   0  ;Y Hook Above
      0x1ef7  14  167    4   2   0  ;y Hook Above
      0x1ef8  14  167    5  18   0  ;Y Tilde
      0x1ef9  14  167    5   2   0  ;y Tilde


    LCID  0x0000042c  23            ;Azeri (Latin)

      0x33ca  14   45    2   2   0  ;Squared Ha: make room for Dotted I unique weight (removed; could be readded) and X
      0x33cb  14   46    2   2   0  ;Squared Hp
      0x3390  14   47    2   2   0  ;Squared Hz
      0x00c7  14   12    2  18   0  ;C Cedilla
      0x00d6  14  125    2  18   0  ;O Diaeresis
      0x00dc  14  161    2  18   0  ;U Diaeresis
      0x00e7  14   12    2   2   0  ;c Cedilla
      0x00f6  14  125    2   2   0  ;o Diaeresis
      0x00fc  14  161    2   2   0  ;u Diaeresis
      0x011e  14   38    2  18   0  ;G Breve
      0x011f  14   38    2   2   0  ;g Breve
      0x015e  14  151    2  18   0  ;S Cedilla
      0x015f  14  151    2   2   0  ;s Cedilla
      0x0058  14   48    2  18   0  ;Latin Capital Letter X
      0x0078  14   48    2   2   0  ;Latin Small Letter X
      0x0051  14   63    2  18   0  ;Latin Capital Letter Q
      0x0071  14   63    2   2   0  ;Latin Small Letter Q
      0x0259  14   34    2   2   0  ;Latin Small Letter Schwa
      0x018f  14   34    2  18   0  ;Latin Capital Letter Schwa
      0x0049  14   49    2  18   0  ;I
      0x0069  14   50    2   2   0  ;i
      0x0130  14   50    2  18   0  ;I Dot
      0x0131  14   49    2   2   0  ;Small Dotless I


    LCID  0x0000082c  4           ;Azeri (Cyrillic)

      0x042b  16   49    2  18   0  ;Cyrillic Capital Yeru
      0x044b  16   49    2   2   0  ;Cyrillic Small Veru
      0x04ba  16  107    2  18   0  ;Cyrillic Capital Shha
      0x04bb  16  107    2   2   0  ;Cyrillic Small Shha


    LCID  0x0000042f  4           ;FYRO Macedonian

      0x0453  16   19    2   2   0  ;Cyrillic Small Gje
      0x0403  16   19    2  18   0  ;Cyrillic Capital Gje
      0x045c  16   88    2   2   0  ;Cyrillic Small Kje
      0x040c  16   88    2  18   0  ;Cyrillic Capital Kje

    LCID  0x00010437  8           ;Georgian Modern Sort

      0x10c1  33  190    2  18   0  ;Georgian Capital He
      0x10c2  33  195    2  18   0  ;Georgian Capital Hie
      0x10c3  33  200    2  18   0  ;Georgian Capital We
      0x10c4  33  205    2  18   0  ;Georgian Capital Har
      0x10f1  33  190    2   2   0  ;Georgian Small He
      0x10f2  33  195    2   2   0  ;Georgian Small Hie
      0x10f3  33  200    2   2   0  ;Georgian Small We
      0x10f4  33  205    2   2   0  ;Georgian Small Har

    LCID  0x0000043f  18          ;Kazakh

      0x04d8  16    8    2  18   0  ;Cyrillic Capital Schwa
      0x04d9  16    8    2  18   0  ;Cyrillic Small Schwa
      0x0492  16   17    2  18   0  ;Cyrillic Capital Ge Bar
      0x0493  16   17    2   2   0  ;Cyrillic Small Ge Bar
      0x0435  16   25    2   2   0  ;Cyrillic Small Ie (The small versions of Ie come after the capital as unique AW)
      0x0451  16   25   19   2   0  ;Cyrillic Small Io
      0x04bd  16   25    5   2   0  ;Cyrillic Small Ie Hook
      0x04bf  16   25   23   2   0  ;Cyrillic Small Ie Hook Ogonek
      0x04ae  16   98    2  18   0  ;Cyrillic Capital Straight U
      0x04af  16   98    2   2   0  ;Cyrillic Small Straight U
      0x04ba  16  104    9  18   0  ;Cyrillic Capital H
      0x04bb  16  104    9   2   0  ;Cyrillic Small H
      0x0406  16  125    2  18   0  ;Cyrillic Capital I
      0x0456  16  125    2   2   0  ;Cyrillic Small I
      0x04a2  16   68    2  18   0  ;Cyrillic Capital En With Right Descender
      0x04a3  16   68    2   2   0  ;Cyrillic Small En With Right Descender
      0x049a  16   56    2  18   0  ;Cyrillic Capital Ka With Right Descender
      0x049b  16   56    2   2   0  ;Cyrillic Small Ka With Right Descender

    LCID  0x00000444  10            ;Tatar

      0x04d9   16   8    2   2   0  ;Cyrillic Small Schwa
      0x04d8   16   8    2  18   0  ;Cyrillic Capital Schwa
      0x0497   16  31    2   2   0  ;Cyrillic Small Zhe With Right Descender
      0x0496   16  31    2  18   0  ;Cyrillic Capital Zhe With Right Descender
      0x04a3   16  70    2   2   0  ;Cyrillic Small En With Right Descender
      0x04a2   16  70    2  18   0  ;Cyrillic Capital En With Right Descender
      0x04af   16  91    2   2   0  ;Cyrillic Small Straight U
      0x04ae   16  91    2  18   0  ;Cyrillic Capital Straight U
      0x04bb   16 104    2   2   0  ;Cyrillic Small H
      0x04ba   16 104    2  18   0  ;Cyrillic Capital H

    LCID  0x0000045a  43            ;Syriac

      0x0740   1  141    2   2   0  ;
      0x0741   1  142    2   2   0  ;
      0x0742   1  143    2   2   0  ;
      0x0747   1  144    2   2   0  ;
      0x0748   1  145    2   2   0  ;
      0x0670   1  146    2   2   0  ;
      0x0303   1  147    2   2   0  ;
      0x0304   1  148    2   2   0  ;
      0x0307   1  149    2   2   0  ;
      0x030A   1  150    2   2   0  ;
      0x0320   1  151    2   2   0  ;
      0x0323   1  152    2   2   0  ;
      0x0325   1  153    2   2   0  ;
      0x032D   1  154    2   2   0  ;
      0x032E   1  155    2   2   0  ;
      0x0330   1  156    2   2   0  ;
      0x0732   1  157    2   2   0  ;
      0x0735   1  158    2   2   0  ;
      0x0738   1  159    2   2   0  ;
      0x0739   1  160    2   2   0  ;
      0x073C   1  161    2   2   0  ;
      0x073F   1  162    2   2   0  ;
      0x0308   1  163    2   2   0  ;
      0x0711   1  164    2   2   0  ;
      0x0743   1  165    2   2   0  ;
      0x0744   1  166    2   2   0  ;
      0x0745   1  167    2   2   0  ;
      0x0746   1  168    2   2   0  ;
      0x0324   1  169    2   2   0  ;
      0x0730   1  170    2   2   0  ;
      0x0731   1  171    2   2   0  ;
      0x0733   1  172    2   2   0  ;
      0x0734   1  173    2   2   0  ;
      0x0736   1  174    2   2   0  ;
      0x0737   1  175    2   2   0  ;
      0x073A   1  176    2   2   0  ;
      0x073B   1  177    2   2   0  ;
      0x073D   1  178    2   2   0  ;
      0x073E   1  179    2   2   0  ;
      0x064B   1  180    2   2   0  ;
      0x0652   1  181    2   2   0  ;
      0x0749   1  182    2   2   0  ;
      0x074A   1  183    2   2   0  ;

    LCID  0x00000465   1            ;Divehi (Thanna script)

      0xFDF2   36   131    0   0   0  ;Arabic Allah (Isolated Form)


  COMPRESSION  19

    LCID  0x0000041a                              ;Croatian

      TWO  9

        0x0064  0x017e  14   29    4   2          ;d z Hacek
        0x0044  0x017e  14   29    4  18          ;D z Hacek
        0x0044  0x017d  14   29    4  26          ;D Z Hacek
        0x006c  0x006a  14   74    2   2          ;lj
        0x004c  0x006a  14   74    2  18          ;Lj
        0x004c  0x004a  14   74    2  26          ;LJ
        0x006e  0x006a  14  115    2   2          ;nj
        0x004e  0x006a  14  115    2  18          ;Nj
        0x004e  0x004a  14  115    2  26          ;NJ

      THREE  0

    LCID  0x00000405                              ;Czech

      TWO  3

        0x0063  0x0068  14   46    2   2          ;ch
        0x0043  0x0068  14   46    2  18          ;Ch
        0x0043  0x0048  14   46    2  26          ;CH

      THREE  0

    LCID  0x00000406                              ;Danish
    LCID  0x00000414                              ;Norwegian(Bokmal)
    LCID  0x00000814                              ;Norwegian(Nynorsk)

      TWO  3

        0x0061  0x0061  14  177    3   2          ;aa
        0x0041  0x0061  14  177    3  18          ;Aa
        0x0041  0x0041  14  177    3  26          ;AA

      THREE  0

    LCID  0x0000040e                              ;Hungarian

      TWO  24

        0x0063  0x0073  14   14    2   2          ;cs
        0x0043  0x0073  14   14    2  18          ;Cs
        0x0043  0x0053  14   14    2  26          ;CS
        0x0064  0x007a  14   28    2   2          ;dz
        0x0044  0x007a  14   28    2  18          ;Dz
        0x0044  0x005a  14   28    2  26          ;DZ
        0x0067  0x0079  14   39    2   2          ;gy
        0x0047  0x0079  14   39    2  18          ;Gy
        0x0047  0x0059  14   39    2  26          ;GY
        0x006c  0x0079  14   76    2   2          ;ly
        0x004c  0x0079  14   76    2  18          ;Ly
        0x004c  0x0059  14   76    2  26          ;LY
        0x006e  0x0079  14  117    2   2          ;ny
        0x004e  0x0079  14  117    2  18          ;Ny
        0x004e  0x0059  14  117    2  26          ;NY
        0x0073  0x007a  14  152    2   2          ;sz
        0x0053  0x007a  14  152    2  18          ;Sz
        0x0053  0x005a  14  152    2  26          ;SZ
        0x0074  0x0079  14  158    2   2          ;ty
        0x0054  0x0079  14  158    2  18          ;Ty
        0x0054  0x0059  14  158    2  26          ;TY
        0x007a  0x0073  14  177    2   2          ;zs
        0x005a  0x0073  14  177    2  18          ;Zs
        0x005a  0x0053  14  177    2  26          ;ZS

      THREE  3

        0x0064  0x007a  0x0073  14   30    2   2  ;dzs
        0x0044  0x007a  0x0073  14   30    2  18  ;Dzs
        0x0044  0x005a  0x0053  14   30    2  26  ;DZS

    LCID  0x0000041b                              ;Slovak

      TWO  3

        0x0063  0x0068  14   46    2   2          ;ch
        0x0043  0x0068  14   46    2  18          ;Ch
        0x0043  0x0048  14   46    2  26          ;CH

      THREE  0

    LCID  0x0000040a                              ;Spanish(Traditional)

      TWO  6

        0x0063  0x0068  14   13    2   2          ;ch
        0x0043  0x0068  14   13    2  18          ;Ch
        0x0043  0x0048  14   13    2  26          ;CH
        0x006c  0x006c  14   75    2   2          ;ll
        0x004c  0x006c  14   75    2  18          ;Ll
        0x004c  0x004c  14   75    2  26          ;LL

      THREE  0

    LCID  0x0000041e                              ;Thai

      TWO  299

        0x0e40  0x0e4c  30    2    2   2          ;Thai Sara E + Karun
        0x0e41  0x0e4c  30    3    2   2          ;Thai Sara Ae + Karun
        0x0e42  0x0e4c  30    4    2   2          ;Thai Sara O + Karun
        0x0e43  0x0e4c  30    5    2   2          ;Thai Sara Mai Muan + Karun
        0x0e44  0x0e4c  30    6    2   2          ;Thai Sara Mai Malai + Karun
        0x0e01  0x0e4c  30    7    2   2          ;Thai Ko Kai + Karun
        0x0e40  0x0e01  30    8    3   2          ;Thai Sara E + Ko Kai
        0x0e41  0x0e01  30    9    3   2          ;Thai Sara Ae + Ko Kai
        0x0e42  0x0e01  30   10    3   2          ;Thai Sara O + Ko Kai
        0x0e43  0x0e01  30   11    3   2          ;Thai Sara Mai Muan + Ko Kai
        0x0e44  0x0e01  30   12    3   2          ;Thai Sara Mai Malai + Ko Kai
        0x0e02  0x0e4c  30   13    2   2          ;Thai Kho Khai + Karun
        0x0e40  0x0e02  30   14    3   2          ;Thai Sara E + Kho Khai
        0x0e41  0x0e02  30   15    3   2          ;Thai Sara Ae + Kho Khai
        0x0e42  0x0e02  30   16    3   2          ;Thai Sara O + Kho Khai
        0x0e43  0x0e02  30   17    3   2          ;Thai Sara Mai Muan + Kho Khai
        0x0e44  0x0e02  30   18    3   2          ;Thai Sara Mai Malai + Kho Khai
        0x0e03  0x0e4c  30   19    2   2          ;Thai Kho Khuat + Karun
        0x0e40  0x0e03  30   20    3   2          ;Thai Sara E + Kho Khuat
        0x0e41  0x0e03  30   21    3   2          ;Thai Sara Ae + Kho Khuat
        0x0e42  0x0e03  30   22    3   2          ;Thai Sara O + Kho Khuat
        0x0e43  0x0e03  30   23    3   2          ;Thai Sara Mai Muan + Kho Khuat
        0x0e44  0x0e03  30   24    3   2          ;Thai Sara Mai Malai + Kho Khuat
        0x0e04  0x0e4c  30   25    2   2          ;Thai Kho Khwai + Karun
        0x0e40  0x0e04  30   26    3   2          ;Thai Sara E + Kho Khwai
        0x0e41  0x0e04  30   27    3   2          ;Thai Sara Ae + Kho Khwai
        0x0e42  0x0e04  30   28    3   2          ;Thai Sara O + Kho Khwai
        0x0e43  0x0e04  30   29    3   2          ;Thai Sara Mai Muan + Kho Khwai
        0x0e44  0x0e04  30   30    3   2          ;Thai Sara Mai Malai + Kho Khwai
        0x0e05  0x0e4c  30   31    2   2          ;Thai Kho Khon + Karun
        0x0e40  0x0e05  30   32    3   2          ;Thai Sara E + Kho Khon
        0x0e41  0x0e05  30   33    3   2          ;Thai Sara Ae + Kho Khon
        0x0e42  0x0e05  30   34    3   2          ;Thai Sara O + Kho Khon
        0x0e43  0x0e05  30   35    3   2          ;Thai Sara Mai Muan + Kho Khon
        0x0e44  0x0e05  30   36    3   2          ;Thai Sara Mai Malai + Kho Khon
        0x0e06  0x0e4c  30   37    2   2          ;Thai Kho Rakhang + Karun
        0x0e40  0x0e06  30   38    3   2          ;Thai Sara E + Kho Rakhang
        0x0e41  0x0e06  30   39    3   2          ;Thai Sara Ae + Kho Rakhang
        0x0e42  0x0e06  30   40    3   2          ;Thai Sara O + Kho Rakhang
        0x0e43  0x0e06  30   41    3   2          ;Thai Sara Mai Muan + Kho Rakhang
        0x0e44  0x0e06  30   42    3   2          ;Thai Sara Mai Malai + Kho Rakhang
        0x0e07  0x0e4c  30   43    2   2          ;Thai Ngo Ngu + Karun
        0x0e40  0x0e07  30   44    3   2          ;Thai Sara E + Ngo Ngu
        0x0e41  0x0e07  30   45    3   2          ;Thai Sara Ae + Ngo Ngu
        0x0e42  0x0e07  30   46    3   2          ;Thai Sara O + Ngo Ngu
        0x0e43  0x0e07  30   47    3   2          ;Thai Sara Mai Muan + Ngo Ngu
        0x0e44  0x0e07  30   48    3   2          ;Thai Sara Mai Malai + Ngo Ngu
        0x0e08  0x0e4c  30   49    2   2          ;Thai Cho Chan + Karun
        0x0e40  0x0e08  30   50    3   2          ;Thai Sara E + Cho Chan
        0x0e41  0x0e08  30   51    3   2          ;Thai Sara Ae + Cho Chan
        0x0e42  0x0e08  30   52    3   2          ;Thai Sara O + Cho Chan
        0x0e43  0x0e08  30   53    3   2          ;Thai Sara Mai Muan + Cho Chan
        0x0e44  0x0e08  30   54    3   2          ;Thai Sara Mai Malai + Cho Chan
        0x0e09  0x0e4c  30   55    2   2          ;Thai Cho Ching + Karun
        0x0e40  0x0e09  30   56    3   2          ;Thai Sara E + Cho Ching
        0x0e41  0x0e09  30   57    3   2          ;Thai Sara Ae + Cho Ching
        0x0e42  0x0e09  30   58    3   2          ;Thai Sara O + Cho Ching
        0x0e43  0x0e09  30   59    3   2          ;Thai Sara Mai Muan + Cho Ching
        0x0e44  0x0e09  30   60    3   2          ;Thai Sara Mai Malai + Cho Ching
        0x0e0a  0x0e4c  30   61    2   2          ;Thai Cho Chang + Karun
        0x0e40  0x0e0a  30   62    3   2          ;Thai Sara E + Cho Chang
        0x0e41  0x0e0a  30   63    3   2          ;Thai Sara Ae + Cho Chang
        0x0e42  0x0e0a  30   64    3   2          ;Thai Sara O + Cho Chang
        0x0e43  0x0e0a  30   65    3   2          ;Thai Sara Mai Muan + Cho Chang
        0x0e44  0x0e0a  30   66    3   2          ;Thai Sara Mai Malai + Cho Chang
        0x0e0b  0x0e4c  30   67    2   2          ;Thai So So + Karun
        0x0e40  0x0e0b  30   68    3   2          ;Thai Sara E + So So
        0x0e41  0x0e0b  30   69    3   2          ;Thai Sara Ae + So So
        0x0e42  0x0e0b  30   70    3   2          ;Thai Sara O + So So
        0x0e43  0x0e0b  30   71    3   2          ;Thai Sara Mai Muan + So So
        0x0e44  0x0e0b  30   72    3   2          ;Thai Sara Mai Malai + So So
        0x0e0c  0x0e4c  30   73    2   2          ;Thai Cho Choe + Karun
        0x0e40  0x0e0c  30   74    3   2          ;Thai Sara E + Cho Choe
        0x0e41  0x0e0c  30   75    3   2          ;Thai Sara Ae + Cho Choe
        0x0e42  0x0e0c  30   76    3   2          ;Thai Sara O + Cho Choe
        0x0e43  0x0e0c  30   77    3   2          ;Thai Sara Mai Muan + Cho Choe
        0x0e44  0x0e0c  30   78    3   2          ;Thai Sara Mai Malai + Cho Choe
        0x0e0d  0x0e4c  30   79    2   2          ;Thai Yo Ying + Karun
        0x0e40  0x0e0d  30   80    3   2          ;Thai Sara E + Yo Ying
        0x0e41  0x0e0d  30   81    3   2          ;Thai Sara Ae + Yo Ying
        0x0e42  0x0e0d  30   82    3   2          ;Thai Sara O + Yo Ying
        0x0e43  0x0e0d  30   83    3   2          ;Thai Sara Mai Muan + Yo Ying
        0x0e44  0x0e0d  30   84    3   2          ;Thai Sara Mai Malai + Yo Ying
        0x0e0e  0x0e4c  30   85    2   2          ;Thai Do Chada + Karun
        0x0e40  0x0e0e  30   86    3   2          ;Thai Sara E + Do Chada
        0x0e41  0x0e0e  30   87    3   2          ;Thai Sara Ae + Do Chada
        0x0e42  0x0e0e  30   88    3   2          ;Thai Sara O + Do Chada
        0x0e43  0x0e0e  30   89    3   2          ;Thai Sara Mai Muan + Do Chada
        0x0e44  0x0e0e  30   90    3   2          ;Thai Sara Mai Malai + Do Chada
        0x0e0f  0x0e4c  30   91    2   2          ;Thai To Patak + Karun
        0x0e40  0x0e0f  30   92    3   2          ;Thai Sara E + To Patak
        0x0e41  0x0e0f  30   93    3   2          ;Thai Sara Ae + To Patak
        0x0e42  0x0e0f  30   94    3   2          ;Thai Sara O + To Patak
        0x0e43  0x0e0f  30   95    3   2          ;Thai Sara Mai Muan + To Patak
        0x0e44  0x0e0f  30   96    3   2          ;Thai Sara Mai Malai + To Patak
        0x0e10  0x0e4c  30   97    2   2          ;Thai Tho Than + Karun
        0x0e40  0x0e10  30   98    3   2          ;Thai Sara E + Tho Than
        0x0e41  0x0e10  30   99    3   2          ;Thai Sara Ae + Tho Than
        0x0e42  0x0e10  30  100    3   2          ;Thai Sara O + Tho Than
        0x0e43  0x0e10  30  101    3   2          ;Thai Sara Mai Muan + Tho Than
        0x0e44  0x0e10  30  102    3   2          ;Thai Sara Mai Malai + Tho Than
        0x0e11  0x0e4c  30  103    2   2          ;Thai Tho Nangmontho + Karun
        0x0e40  0x0e11  30  104    3   2          ;Thai Sara E + Tho Nangmontho
        0x0e41  0x0e11  30  105    3   2          ;Thai Sara Ae + Tho Nangmontho
        0x0e42  0x0e11  30  106    3   2          ;Thai Sara O + Tho Nangmontho
        0x0e43  0x0e11  30  107    3   2          ;Thai Sara Mai Muan + Tho Nangmontho
        0x0e44  0x0e11  30  108    3   2          ;Thai Sara Mai Malai + Tho Nangmontho
        0x0e12  0x0e4c  30  109    2   2          ;Thai Tho Phuthao + Karun
        0x0e40  0x0e12  30  110    3   2          ;Thai Sara E + Tho Phuthao
        0x0e41  0x0e12  30  111    3   2          ;Thai Sara Ae + Tho Phuthao
        0x0e42  0x0e12  30  112    3   2          ;Thai Sara O + Tho Phuthao
        0x0e43  0x0e12  30  113    3   2          ;Thai Sara Mai Muan + Tho Phuthao
        0x0e44  0x0e12  30  114    3   2          ;Thai Sara Mai Malai + Tho Phuthao
        0x0e13  0x0e4c  30  115    2   2          ;Thai No Nen + Karun
        0x0e40  0x0e13  30  116    3   2          ;Thai Sara E + No Nen
        0x0e41  0x0e13  30  117    3   2          ;Thai Sara Ae + No Nen
        0x0e42  0x0e13  30  118    3   2          ;Thai Sara O + No Nen
        0x0e43  0x0e13  30  119    3   2          ;Thai Sara Mai Muan + No Nen
        0x0e44  0x0e13  30  120    3   2          ;Thai Sara Mai Malai + No Nen
        0x0e14  0x0e4c  30  121    2   2          ;Thai Do Dek + Karun
        0x0e40  0x0e14  30  122    3   2          ;Thai Sara E + Do Dek
        0x0e41  0x0e14  30  123    3   2          ;Thai Sara Ae + Do Dek
        0x0e42  0x0e14  30  124    3   2          ;Thai Sara O + Do Dek
        0x0e43  0x0e14  30  125    3   2          ;Thai Sara Mai Muan + Do Dek
        0x0e44  0x0e14  30  126    3   2          ;Thai Sara Mai Malai + Do Dek
        0x0e15  0x0e4c  30  127    2   2          ;Thai To Tao + Karun
        0x0e40  0x0e15  30  128    3   2          ;Thai Sara E + To Tao
        0x0e41  0x0e15  30  129    3   2          ;Thai Sara Ae + To Tao
        0x0e42  0x0e15  30  130    3   2          ;Thai Sara O + To Tao
        0x0e43  0x0e15  30  131    3   2          ;Thai Sara Mai Muan + To Tao
        0x0e44  0x0e15  30  132    3   2          ;Thai Sara Mai Malai + To Tao
        0x0e16  0x0e4c  30  133    2   2          ;Thai Tho Thung + Karun
        0x0e40  0x0e16  30  134    3   2          ;Thai Sara E + Tho Thung
        0x0e41  0x0e16  30  135    3   2          ;Thai Sara Ae + Tho Thung
        0x0e42  0x0e16  30  136    3   2          ;Thai Sara O + Tho Thung
        0x0e43  0x0e16  30  137    3   2          ;Thai Sara Mai Muan + Tho Thung
        0x0e44  0x0e16  30  138    3   2          ;Thai Sara Mai Malai + Tho Thung
        0x0e17  0x0e4c  30  139    2   2          ;Thai Tho Thahan + Karun
        0x0e40  0x0e17  30  140    3   2          ;Thai Sara E + Tho Thahan
        0x0e41  0x0e17  30  141    3   2          ;Thai Sara Ae + Tho Thahan
        0x0e42  0x0e17  30  142    3   2          ;Thai Sara O + Tho Thahan
        0x0e43  0x0e17  30  143    3   2          ;Thai Sara Mai Muan + Tho Thahan
        0x0e44  0x0e17  30  144    3   2          ;Thai Sara Mai Malai + Tho Thahan
        0x0e18  0x0e4c  30  145    2   2          ;Thai Tho Thong + Karun
        0x0e40  0x0e18  30  146    3   2          ;Thai Sara E + Tho Thong
        0x0e41  0x0e18  30  147    3   2          ;Thai Sara Ae + Tho Thong
        0x0e42  0x0e18  30  148    3   2          ;Thai Sara O + Tho Thong
        0x0e43  0x0e18  30  149    3   2          ;Thai Sara Mai Muan + Tho Thong
        0x0e44  0x0e18  30  150    3   2          ;Thai Sara Mai Malai + Tho Thong
        0x0e19  0x0e4c  30  151    2   2          ;Thai No Nu + Karun
        0x0e40  0x0e19  30  152    3   2          ;Thai Sara E + No Nu
        0x0e41  0x0e19  30  153    3   2          ;Thai Sara Ae + No Nu
        0x0e42  0x0e19  30  154    3   2          ;Thai Sara O + No Nu
        0x0e43  0x0e19  30  155    3   2          ;Thai Sara Mai Muan + No Nu
        0x0e44  0x0e19  30  156    3   2          ;Thai Sara Mai Malai + No Nu
        0x0e1a  0x0e4c  30  157    2   2          ;Thai Bo Baimai + Karun
        0x0e40  0x0e1a  30  158    3   2          ;Thai Sara E + Bo Baimai
        0x0e41  0x0e1a  30  159    3   2          ;Thai Sara Ae + Bo Baimai
        0x0e42  0x0e1a  30  160    3   2          ;Thai Sara O + Bo Baimai
        0x0e43  0x0e1a  30  161    3   2          ;Thai Sara Mai Muan + Bo Baimai
        0x0e44  0x0e1a  30  162    3   2          ;Thai Sara Mai Malai + Bo Baimai
        0x0e1b  0x0e4c  30  163    2   2          ;Thai Po Pla + Karun
        0x0e40  0x0e1b  30  164    3   2          ;Thai Sara E + Po Pla
        0x0e41  0x0e1b  30  165    3   2          ;Thai Sara Ae + Po Pla
        0x0e42  0x0e1b  30  166    3   2          ;Thai Sara O + Po Pla
        0x0e43  0x0e1b  30  167    3   2          ;Thai Sara Mai Muan + Po Pla
        0x0e44  0x0e1b  30  168    3   2          ;Thai Sara Mai Malai + Po Pla
        0x0e1c  0x0e4c  30  169    2   2          ;Thai Pho Phung + Karun
        0x0e40  0x0e1c  30  170    3   2          ;Thai Sara E + Pho Phung
        0x0e41  0x0e1c  30  171    3   2          ;Thai Sara Ae + Pho Phung
        0x0e42  0x0e1c  30  172    3   2          ;Thai Sara O + Pho Phung
        0x0e43  0x0e1c  30  173    3   2          ;Thai Sara Mai Muan + Pho Phung
        0x0e44  0x0e1c  30  174    3   2          ;Thai Sara Mai Malai + Pho Phung
        0x0e1d  0x0e4c  30  175    2   2          ;Thai Fo Fa + Karun
        0x0e40  0x0e1d  30  176    3   2          ;Thai Sara E + Fo Fa
        0x0e41  0x0e1d  30  177    3   2          ;Thai Sara Ae + Fo Fa
        0x0e42  0x0e1d  30  178    3   2          ;Thai Sara O + Fo Fa
        0x0e43  0x0e1d  30  179    3   2          ;Thai Sara Mai Muan + Fo Fa
        0x0e44  0x0e1d  30  180    3   2          ;Thai Sara Mai Malai + Fo Fa
        0x0e1e  0x0e4c  30  181    2   2          ;Thai Pho Phan + Karun
        0x0e40  0x0e1e  30  182    3   2          ;Thai Sara E + Pho Phan
        0x0e41  0x0e1e  30  183    3   2          ;Thai Sara Ae + Pho Phan
        0x0e42  0x0e1e  30  184    3   2          ;Thai Sara O + Pho Phan
        0x0e43  0x0e1e  30  185    3   2          ;Thai Sara Mai Muan + Pho Phan
        0x0e44  0x0e1e  30  186    3   2          ;Thai Sara Mai Malai + Pho Phan
        0x0e1f  0x0e4c  30  187    2   2          ;Thai Fo Fan + Karun
        0x0e40  0x0e1f  30  188    3   2          ;Thai Sara E + Fo Fan
        0x0e41  0x0e1f  30  189    3   2          ;Thai Sara Ae + Fo Fan
        0x0e42  0x0e1f  30  190    3   2          ;Thai Sara O + Fo Fan
        0x0e43  0x0e1f  30  191    3   2          ;Thai Sara Mai Muan + Fo Fan
        0x0e44  0x0e1f  30  192    3   2          ;Thai Sara Mai Malai + Fo Fan
        0x0e20  0x0e4c  30  193    2   2          ;Thai Pho Samphao + Karun
        0x0e40  0x0e20  30  194    3   2          ;Thai Sara E + Pho Samphao
        0x0e41  0x0e20  30  195    3   2          ;Thai Sara Ae + Pho Samphao
        0x0e42  0x0e20  30  196    3   2          ;Thai Sara O + Pho Samphao
        0x0e43  0x0e20  30  197    3   2          ;Thai Sara Mai Muan + Pho Samphao
        0x0e44  0x0e20  30  198    3   2          ;Thai Sara Mai Malai + Pho Samphao
        0x0e21  0x0e4c  30  199    2   2          ;Thai Mo Ma + Karun
        0x0e40  0x0e21  30  200    3   2          ;Thai Sara E + Mo Ma
        0x0e41  0x0e21  30  201    3   2          ;Thai Sara Ae + Mo Ma
        0x0e42  0x0e21  30  202    3   2          ;Thai Sara O + Mo Ma
        0x0e43  0x0e21  30  203    3   2          ;Thai Sara Mai Muan + Mo Ma
        0x0e44  0x0e21  30  204    3   2          ;Thai Sara Mai Malai + Mo Ma
        0x0e22  0x0e4c  30  205    2   2          ;Thai Yo Yak + Karun
        0x0e40  0x0e22  30  206    3   2          ;Thai Sara E + Yo Yak
        0x0e41  0x0e22  30  207    3   2          ;Thai Sara Ae + Yo Yak
        0x0e42  0x0e22  30  208    3   2          ;Thai Sara O + Yo Yak
        0x0e43  0x0e22  30  209    3   2          ;Thai Sara Mai Muan + Yo Yak
        0x0e44  0x0e22  30  210    3   2          ;Thai Sara Mai Malai + Yo Yak
        0x0e23  0x0e4c  30  211    2   2          ;Thai Ro Rua + Karun
        0x0e40  0x0e23  30  212    3   2          ;Thai Sara E + Ro Rua
        0x0e41  0x0e23  30  213    3   2          ;Thai Sara Ae + Ro Rua
        0x0e42  0x0e23  30  214    3   2          ;Thai Sara O + Ro Rua
        0x0e43  0x0e23  30  215    3   2          ;Thai Sara Mai Muan + Ro Rua
        0x0e44  0x0e23  30  216    3   2          ;Thai Sara Mai Malai + Ro Rua
        0x0e24  0x0e4c  30  217    2   2          ;Thai Ru + Karun
        0x0e40  0x0e24  30  218    3   2          ;Thai Sara E + Ru
        0x0e41  0x0e24  30  219    3   2          ;Thai Sara Ae + Ru
        0x0e42  0x0e24  30  220    3   2          ;Thai Sara O + Ru
        0x0e43  0x0e24  30  221    3   2          ;Thai Sara Mai Muan + Ru
        0x0e44  0x0e24  30  222    3   2          ;Thai Sara Mai Malai + Ru
        0x0e25  0x0e4c  30  223    2   2          ;Thai Lo Ling + Karun
        0x0e40  0x0e25  30  224    3   2          ;Thai Sara E + Lo Ling
        0x0e41  0x0e25  30  225    3   2          ;Thai Sara Ae + Lo Ling
        0x0e42  0x0e25  30  226    3   2          ;Thai Sara O + Lo Ling
        0x0e43  0x0e25  30  227    3   2          ;Thai Sara Mai Muan + Lo Ling
        0x0e44  0x0e25  30  228    3   2          ;Thai Sara Mai Malai + Lo Ling
        0x0e26  0x0e4c  30  229    2   2          ;Thai Lu + Karun
        0x0e40  0x0e26  30  230    3   2          ;Thai Sara E + Lu
        0x0e41  0x0e26  30  231    3   2          ;Thai Sara Ae + Lu
        0x0e42  0x0e26  30  232    3   2          ;Thai Sara O + Lu
        0x0e43  0x0e26  30  233    3   2          ;Thai Sara Mai Muan + Lu
        0x0e44  0x0e26  30  234    3   2          ;Thai Sara Mai Malai + Lu
        0x0e27  0x0e4c  30  235    2   2          ;Thai Wo Waen + Karun
        0x0e40  0x0e27  30  236    3   2          ;Thai Sara E + Wo Waen
        0x0e41  0x0e27  30  237    3   2          ;Thai Sara Ae + Wo Waen
        0x0e42  0x0e27  30  238    3   2          ;Thai Sara O + Wo Waen
        0x0e43  0x0e27  30  239    3   2          ;Thai Sara Mai Muan + Wo Waen
        0x0e44  0x0e27  30  240    3   2          ;Thai Sara Mai Malai + Wo Waen
        0x0e28  0x0e4c  30  241    2   2          ;Thai So Sala + Karun
        0x0e40  0x0e28  30  242    3   2          ;Thai Sara E + So Sala
        0x0e41  0x0e28  30  243    3   2          ;Thai Sara Ae + So Sala
        0x0e42  0x0e28  30  244    3   2          ;Thai Sara O + So Sala
        0x0e43  0x0e28  30  245    3   2          ;Thai Sara Mai Muan + So Sala
        0x0e44  0x0e28  30  246    3   2          ;Thai Sara Mai Malai + So Sala
        0x0e29  0x0e4c  30  247    2   2          ;Thai So Rusi + Karun
        0x0e40  0x0e29  30  248    3   2          ;Thai Sara E + So Rusi
        0x0e41  0x0e29  30  249    3   2          ;Thai Sara Ae + So Rusi
        0x0e42  0x0e29  30  250    3   2          ;Thai Sara O + So Rusi
        0x0e43  0x0e29  30  251    3   2          ;Thai Sara Mai Muan + So Rusi
        0x0e44  0x0e29  30  252    3   2          ;Thai Sara Mai Malai + So Rusi
        0x0e2a  0x0e4c  30  253    2   2          ;Thai So Sua + Karun
        0x0e40  0x0e2a  30  254    3   2          ;Thai Sara E + So Sua
        0x0e41  0x0e2a  30  255    3   2          ;Thai Sara Ae + So Sua
        0x0e42  0x0e2a  31    2    3   2          ;Thai Sara O + So Sua
        0x0e43  0x0e2a  31    3    3   2          ;Thai Sara Mai Muan + So Sua
        0x0e44  0x0e2a  31    4    3   2          ;Thai Sara Mai Malai + So Sua
        0x0e2b  0x0e4c  31    5    2   2          ;Thai Ho Hip + Karun
        0x0e40  0x0e2b  31    6    3   2          ;Thai Sara E + Ho Hip
        0x0e41  0x0e2b  31    7    3   2          ;Thai Sara Ae + Ho Hip
        0x0e42  0x0e2b  31    8    3   2          ;Thai Sara O + Ho Hip
        0x0e43  0x0e2b  31    9    3   2          ;Thai Sara Mai Muan + Ho Hip
        0x0e44  0x0e2b  31   10    3   2          ;Thai Sara Mai Malai + Ho Hip
        0x0e2c  0x0e4c  31   11    2   2          ;Thai Lo Chula + Karun
        0x0e40  0x0e2c  31   12    3   2          ;Thai Sara E + Lo Chula
        0x0e41  0x0e2c  31   13    3   2          ;Thai Sara Ae + Lo Chula
        0x0e42  0x0e2c  31   14    3   2          ;Thai Sara O + Lo Chula
        0x0e43  0x0e2c  31   15    3   2          ;Thai Sara Mai Muan + Lo Chula
        0x0e44  0x0e2c  31   16    3   2          ;Thai Sara Mai Malai + Lo Chula
        0x0e2d  0x0e4c  31   17    2   2          ;Thai O Ang + Karun
        0x0e40  0x0e2d  31   18    3   2          ;Thai Sara E + O Ang
        0x0e41  0x0e2d  31   19    3   2          ;Thai Sara Ae + O Ang
        0x0e42  0x0e2d  31   20    3   2          ;Thai Sara O + O Ang
        0x0e43  0x0e2d  31   21    3   2          ;Thai Sara Mai Muan + O Ang
        0x0e44  0x0e2d  31   22    3   2          ;Thai Sara Mai Malai + O Ang
        0x0e2e  0x0e4c  31   23    2   2          ;Thai Ho Nok Huk + Karun
        0x0e40  0x0e2e  31   24    3   2          ;Thai Sara E + Ho Nok Huk
        0x0e41  0x0e2e  31   25    3   2          ;Thai Sara Ae + Ho Nok Huk
        0x0e42  0x0e2e  31   26    3   2          ;Thai Sara O + Ho Nok Huk
        0x0e43  0x0e2e  31   27    3   2          ;Thai Sara Mai Muan + Ho Nok Huk
        0x0e44  0x0e2e  31   28    3   2          ;Thai Sara Mai Malai + Ho Nok Huk
        0x0e2f  0x0e4c  31   29    2   2          ;Thai Pai Yan Noi + Karun
        0x0e30  0x0e4c  31   30    2   2          ;Thai Vowel Sign Sara A + Karun
        0x0e31  0x0e4c  31   31    2   2          ;Thai Vowel Sign Mai Han-Akat + Karun
        0x0e32  0x0e4c  31   32    2   2          ;Thai Vowel Sign Sara Aa + Karun
        0x0e33  0x0e4c  31   33    2   2          ;Thai Vowel Sign Sara Am + Karun
        0x0e34  0x0e4c  31   34    2   2          ;Thai Vowel Sign Sara I + Karun
        0x0e35  0x0e4c  31   35    2   2          ;Thai Vowel Sign Sara Ii + Karun
        0x0e36  0x0e4c  31   36    2   2          ;Thai Vowel Sign Sara Ue + Karun
        0x0e37  0x0e4c  31   37    2   2          ;Thai Vowel Sign Sara Uee + Karun
        0x0e38  0x0e4c  31   38    2   2          ;Thai Vowel Sign Sara U + Karun
        0x0e39  0x0e4c  31   39    2   2          ;Thai Vowel Sign Sara Uu + Karun
        0x0e3a  0x0e4c  31   40    2   2          ;Thai Vowel Sign Phinthu + Karun
        0x0e45  0x0e4c  31   41    2   2          ;Thai Lak Khang Yao + Karun
        0x0e46  0x0e4c  31   42    2   2          ;Thai Mai Yamok + Karun
        0x0e4e  0x0e4c  31   43    2   2          ;Thai Yamakkan + Karun
        0x0e4f  0x0e4c  31   44    2   2          ;Thai Fongman + Karun
        0x0e5a  0x0e4c  31   45    2   2          ;Thai Angkhankhu + Karun
        0x0e5b  0x0e4c  31   46    2   2          ;Thai Khomut + Karun

      THREE  230

        0x0e40  0x0e01  0x0e4c  30    8    2   2  ;Thai Sara E + Ko Kai + Karun
        0x0e41  0x0e01  0x0e4c  30    9    2   2  ;Thai Sara Ae + Ko Kai + Karun
        0x0e42  0x0e01  0x0e4c  30   10    2   2  ;Thai Sara O + Ko Kai + Karun
        0x0e43  0x0e01  0x0e4c  30   11    2   2  ;Thai Sara Mai Muan + Ko Kai + Karun
        0x0e44  0x0e01  0x0e4c  30   12    2   2  ;Thai Sara Mai Malai + Ko Kai + Karun
        0x0e40  0x0e02  0x0e4c  30   14    2   2  ;Thai Sara E + Kho Khai + Karun
        0x0e41  0x0e02  0x0e4c  30   15    2   2  ;Thai Sara Ae + Kho Khai + Karun
        0x0e42  0x0e02  0x0e4c  30   16    2   2  ;Thai Sara O + Kho Khai + Karun
        0x0e43  0x0e02  0x0e4c  30   17    2   2  ;Thai Sara Mai Muan + Kho Khai + Karun
        0x0e44  0x0e02  0x0e4c  30   18    2   2  ;Thai Sara Mai Malai + Kho Khai + Karun
        0x0e40  0x0e03  0x0e4c  30   20    2   2  ;Thai Sara E + Kho Khuat + Karun
        0x0e41  0x0e03  0x0e4c  30   21    2   2  ;Thai Sara Ae + Kho Khuat + Karun
        0x0e42  0x0e03  0x0e4c  30   22    2   2  ;Thai Sara O + Kho Khuat + Karun
        0x0e43  0x0e03  0x0e4c  30   23    2   2  ;Thai Sara Mai Muan + Kho Khuat + Karun
        0x0e44  0x0e03  0x0e4c  30   24    2   2  ;Thai Sara Mai Malai + Kho Khuat + Karun
        0x0e40  0x0e04  0x0e4c  30   26    2   2  ;Thai Sara E + Kho Khwai + Karun
        0x0e41  0x0e04  0x0e4c  30   27    2   2  ;Thai Sara Ae + Kho Khwai + Karun
        0x0e42  0x0e04  0x0e4c  30   28    2   2  ;Thai Sara O + Kho Khwai + Karun
        0x0e43  0x0e04  0x0e4c  30   29    2   2  ;Thai Sara Mai Muan + Kho Khwai + Karun
        0x0e44  0x0e04  0x0e4c  30   30    2   2  ;Thai Sara Mai Malai + Kho Khwai + Karun
        0x0e40  0x0e05  0x0e4c  30   32    2   2  ;Thai Sara E + Kho Khon + Karun
        0x0e41  0x0e05  0x0e4c  30   33    2   2  ;Thai Sara Ae + Kho Khon + Karun
        0x0e42  0x0e05  0x0e4c  30   34    2   2  ;Thai Sara O + Kho Khon + Karun
        0x0e43  0x0e05  0x0e4c  30   35    2   2  ;Thai Sara Mai Muan + Kho Khon + Karun
        0x0e44  0x0e05  0x0e4c  30   36    2   2  ;Thai Sara Mai Malai + Kho Khon + Karun
        0x0e40  0x0e06  0x0e4c  30   38    2   2  ;Thai Sara E + Kho Rakhang + Karun
        0x0e41  0x0e06  0x0e4c  30   39    2   2  ;Thai Sara Ae + Kho Rakhang + Karun
        0x0e42  0x0e06  0x0e4c  30   40    2   2  ;Thai Sara O + Kho Rakhang + Karun
        0x0e43  0x0e06  0x0e4c  30   41    2   2  ;Thai Sara Mai Muan + Kho Rakhang + Karun
        0x0e44  0x0e06  0x0e4c  30   42    2   2  ;Thai Sara Mai Malai + Kho Rakhang + Karun
        0x0e40  0x0e07  0x0e4c  30   44    2   2  ;Thai Sara E + Ngo Ngu + Karun
        0x0e41  0x0e07  0x0e4c  30   45    2   2  ;Thai Sara Ae + Ngo Ngu + Karun
        0x0e42  0x0e07  0x0e4c  30   46    2   2  ;Thai Sara O + Ngo Ngu + Karun
        0x0e43  0x0e07  0x0e4c  30   47    2   2  ;Thai Sara Mai Muan + Ngo Ngu + Karun
        0x0e44  0x0e07  0x0e4c  30   48    2   2  ;Thai Sara Mai Malai + Ngo Ngu + Karun
        0x0e40  0x0e08  0x0e4c  30   50    2   2  ;Thai Sara E + Cho Chan + Karun
        0x0e41  0x0e08  0x0e4c  30   51    2   2  ;Thai Sara Ae + Cho Chan + Karun
        0x0e42  0x0e08  0x0e4c  30   52    2   2  ;Thai Sara O + Cho Chan + Karun
        0x0e43  0x0e08  0x0e4c  30   53    2   2  ;Thai Sara Mai Muan + Cho Chan + Karun
        0x0e44  0x0e08  0x0e4c  30   54    2   2  ;Thai Sara Mai Malai + Cho Chan + Karun
        0x0e40  0x0e09  0x0e4c  30   56    2   2  ;Thai Sara E + Cho Ching + Karun
        0x0e41  0x0e09  0x0e4c  30   57    2   2  ;Thai Sara Ae + Cho Ching + Karun
        0x0e42  0x0e09  0x0e4c  30   58    2   2  ;Thai Sara O + Cho Ching + Karun
        0x0e43  0x0e09  0x0e4c  30   59    2   2  ;Thai Sara Mai Muan + Cho Ching + Karun
        0x0e44  0x0e09  0x0e4c  30   60    2   2  ;Thai Sara Mai Malai + Cho Ching + Karun
        0x0e40  0x0e0a  0x0e4c  30   62    2   2  ;Thai Sara E + Cho Chang + Karun
        0x0e41  0x0e0a  0x0e4c  30   63    2   2  ;Thai Sara Ae + Cho Chang + Karun
        0x0e42  0x0e0a  0x0e4c  30   64    2   2  ;Thai Sara O + Cho Chang + Karun
        0x0e43  0x0e0a  0x0e4c  30   65    2   2  ;Thai Sara Mai Muan + Cho Chang + Karun
        0x0e44  0x0e0a  0x0e4c  30   66    2   2  ;Thai Sara Mai Malai + Cho Chang + Karun
        0x0e40  0x0e0b  0x0e4c  30   68    2   2  ;Thai Sara E + So So + Karun
        0x0e41  0x0e0b  0x0e4c  30   69    2   2  ;Thai Sara Ae + So So + Karun
        0x0e42  0x0e0b  0x0e4c  30   70    2   2  ;Thai Sara O + So So + Karun
        0x0e43  0x0e0b  0x0e4c  30   71    2   2  ;Thai Sara Mai Muan + So So + Karun
        0x0e44  0x0e0b  0x0e4c  30   72    2   2  ;Thai Sara Mai Malai + So So + Karun
        0x0e40  0x0e0c  0x0e4c  30   74    2   2  ;Thai Sara E + Cho Choe + Karun
        0x0e41  0x0e0c  0x0e4c  30   75    2   2  ;Thai Sara Ae + Cho Choe + Karun
        0x0e42  0x0e0c  0x0e4c  30   76    2   2  ;Thai Sara O + Cho Choe + Karun
        0x0e43  0x0e0c  0x0e4c  30   77    2   2  ;Thai Sara Mai Muan + Cho Choe + Karun
        0x0e44  0x0e0c  0x0e4c  30   78    2   2  ;Thai Sara Mai Malai + Cho Choe + Karun
        0x0e40  0x0e0d  0x0e4c  30   80    2   2  ;Thai Sara E + Yo Ying + Karun
        0x0e41  0x0e0d  0x0e4c  30   81    2   2  ;Thai Sara Ae + Yo Ying + Karun
        0x0e42  0x0e0d  0x0e4c  30   82    2   2  ;Thai Sara O + Yo Ying + Karun
        0x0e43  0x0e0d  0x0e4c  30   83    2   2  ;Thai Sara Mai Muan + Yo Ying + Karun
        0x0e44  0x0e0d  0x0e4c  30   84    2   2  ;Thai Sara Mai Malai + Yo Ying + Karun
        0x0e40  0x0e0e  0x0e4c  30   86    2   2  ;Thai Sara E + Do Chada + Karun
        0x0e41  0x0e0e  0x0e4c  30   87    2   2  ;Thai Sara Ae + Do Chada + Karun
        0x0e42  0x0e0e  0x0e4c  30   88    2   2  ;Thai Sara O + Do Chada + Karun
        0x0e43  0x0e0e  0x0e4c  30   89    2   2  ;Thai Sara Mai Muan + Do Chada + Karun
        0x0e44  0x0e0e  0x0e4c  30   90    2   2  ;Thai Sara Mai Malai + Do Chada + Karun
        0x0e40  0x0e0f  0x0e4c  30   92    2   2  ;Thai Sara E + To Patak + Karun
        0x0e41  0x0e0f  0x0e4c  30   93    2   2  ;Thai Sara Ae + To Patak + Karun
        0x0e42  0x0e0f  0x0e4c  30   94    2   2  ;Thai Sara O + To Patak + Karun
        0x0e43  0x0e0f  0x0e4c  30   95    2   2  ;Thai Sara Mai Muan + To Patak + Karun
        0x0e44  0x0e0f  0x0e4c  30   96    2   2  ;Thai Sara Mai Malai + To Patak + Karun
        0x0e40  0x0e10  0x0e4c  30   98    2   2  ;Thai Sara E + Tho Than + Karun
        0x0e41  0x0e10  0x0e4c  30   99    2   2  ;Thai Sara Ae + Tho Than + Karun
        0x0e42  0x0e10  0x0e4c  30  100    2   2  ;Thai Sara O + Tho Than + Karun
        0x0e43  0x0e10  0x0e4c  30  101    2   2  ;Thai Sara Mai Muan + Tho Than + Karun
        0x0e44  0x0e10  0x0e4c  30  102    2   2  ;Thai Sara Mai Malai + Tho Than + Karun
        0x0e40  0x0e11  0x0e4c  30  104    2   2  ;Thai Sara E + Tho Nangmontho + Karun
        0x0e41  0x0e11  0x0e4c  30  105    2   2  ;Thai Sara Ae + Tho Nangmontho + Karun
        0x0e42  0x0e11  0x0e4c  30  106    2   2  ;Thai Sara O + Tho Nangmontho + Karun
        0x0e43  0x0e11  0x0e4c  30  107    2   2  ;Thai Sara Mai Muan + Tho Nangmontho + Karun
        0x0e44  0x0e11  0x0e4c  30  108    2   2  ;Thai Sara Mai Malai + Tho Nangmontho + Karun
        0x0e40  0x0e12  0x0e4c  30  110    2   2  ;Thai Sara E + Tho Phuthao + Karun
        0x0e41  0x0e12  0x0e4c  30  111    2   2  ;Thai Sara Ae + Tho Phuthao + Karun
        0x0e42  0x0e12  0x0e4c  30  112    2   2  ;Thai Sara O + Tho Phuthao + Karun
        0x0e43  0x0e12  0x0e4c  30  113    2   2  ;Thai Sara Mai Muan + Tho Phuthao + Karun
        0x0e44  0x0e12  0x0e4c  30  114    2   2  ;Thai Sara Mai Malai + Tho Phuthao + Karun
        0x0e40  0x0e13  0x0e4c  30  116    2   2  ;Thai Sara E + No Nen + Karun
        0x0e41  0x0e13  0x0e4c  30  117    2   2  ;Thai Sara Ae + No Nen + Karun
        0x0e42  0x0e13  0x0e4c  30  118    2   2  ;Thai Sara O + No Nen + Karun
        0x0e43  0x0e13  0x0e4c  30  119    2   2  ;Thai Sara Mai Muan + No Nen + Karun
        0x0e44  0x0e13  0x0e4c  30  120    2   2  ;Thai Sara Mai Malai + No Nen + Karun
        0x0e40  0x0e14  0x0e4c  30  122    2   2  ;Thai Sara E + Do Dek + Karun
        0x0e41  0x0e14  0x0e4c  30  123    2   2  ;Thai Sara Ae + Do Dek + Karun
        0x0e42  0x0e14  0x0e4c  30  124    2   2  ;Thai Sara O + Do Dek + Karun
        0x0e43  0x0e14  0x0e4c  30  125    2   2  ;Thai Sara Mai Muan + Do Dek + Karun
        0x0e44  0x0e14  0x0e4c  30  126    2   2  ;Thai Sara Mai Malai + Do Dek + Karun
        0x0e40  0x0e15  0x0e4c  30  128    2   2  ;Thai Sara E + To Tao + Karun
        0x0e41  0x0e15  0x0e4c  30  129    2   2  ;Thai Sara Ae + To Tao + Karun
        0x0e42  0x0e15  0x0e4c  30  130    2   2  ;Thai Sara O + To Tao + Karun
        0x0e43  0x0e15  0x0e4c  30  131    2   2  ;Thai Sara Mai Muan + To Tao + Karun
        0x0e44  0x0e15  0x0e4c  30  132    2   2  ;Thai Sara Mai Malai + To Tao + Karun
        0x0e40  0x0e16  0x0e4c  30  134    2   2  ;Thai Sara E + Tho Thung + Karun
        0x0e41  0x0e16  0x0e4c  30  135    2   2  ;Thai Sara Ae + Tho Thung + Karun
        0x0e42  0x0e16  0x0e4c  30  136    2   2  ;Thai Sara O + Tho Thung + Karun
        0x0e43  0x0e16  0x0e4c  30  137    2   2  ;Thai Sara Mai Muan + Tho Thung + Karun
        0x0e44  0x0e16  0x0e4c  30  138    2   2  ;Thai Sara Mai Malai + Tho Thung + Karun
        0x0e40  0x0e17  0x0e4c  30  140    2   2  ;Thai Sara E + Tho Thahan + Karun
        0x0e41  0x0e17  0x0e4c  30  141    2   2  ;Thai Sara Ae + Tho Thahan + Karun
        0x0e42  0x0e17  0x0e4c  30  142    2   2  ;Thai Sara O + Tho Thahan + Karun
        0x0e43  0x0e17  0x0e4c  30  143    2   2  ;Thai Sara Mai Muan + Tho Thahan + Karun
        0x0e44  0x0e17  0x0e4c  30  144    2   2  ;Thai Sara Mai Malai + Tho Thahan + Karun
        0x0e40  0x0e18  0x0e4c  30  146    2   2  ;Thai Sara E + Tho Thong + Karun
        0x0e41  0x0e18  0x0e4c  30  147    2   2  ;Thai Sara Ae + Tho Thong + Karun
        0x0e42  0x0e18  0x0e4c  30  148    2   2  ;Thai Sara O + Tho Thong + Karun
        0x0e43  0x0e18  0x0e4c  30  149    2   2  ;Thai Sara Mai Muan + Tho Thong + Karun
        0x0e44  0x0e18  0x0e4c  30  150    2   2  ;Thai Sara Mai Malai + Tho Thong + Karun
        0x0e40  0x0e19  0x0e4c  30  152    2   2  ;Thai Sara E + No Nu + Karun
        0x0e41  0x0e19  0x0e4c  30  153    2   2  ;Thai Sara Ae + No Nu + Karun
        0x0e42  0x0e19  0x0e4c  30  154    2   2  ;Thai Sara O + No Nu + Karun
        0x0e43  0x0e19  0x0e4c  30  155    2   2  ;Thai Sara Mai Muan + No Nu + Karun
        0x0e44  0x0e19  0x0e4c  30  156    2   2  ;Thai Sara Mai Malai + No Nu + Karun
        0x0e40  0x0e1a  0x0e4c  30  158    2   2  ;Thai Sara E + Bo Baimai + Karun
        0x0e41  0x0e1a  0x0e4c  30  159    2   2  ;Thai Sara Ae + Bo Baimai + Karun
        0x0e42  0x0e1a  0x0e4c  30  160    2   2  ;Thai Sara O + Bo Baimai + Karun
        0x0e43  0x0e1a  0x0e4c  30  161    2   2  ;Thai Sara Mai Muan + Bo Baimai + Karun
        0x0e44  0x0e1a  0x0e4c  30  162    2   2  ;Thai Sara Mai Malai + Bo Baimai + Karun
        0x0e40  0x0e1b  0x0e4c  30  164    2   2  ;Thai Sara E + Po Pla + Karun
        0x0e41  0x0e1b  0x0e4c  30  165    2   2  ;Thai Sara Ae + Po Pla + Karun
        0x0e42  0x0e1b  0x0e4c  30  166    2   2  ;Thai Sara O + Po Pla + Karun
        0x0e43  0x0e1b  0x0e4c  30  167    2   2  ;Thai Sara Mai Muan + Po Pla + Karun
        0x0e44  0x0e1b  0x0e4c  30  168    2   2  ;Thai Sara Mai Malai + Po Pla + Karun
        0x0e40  0x0e1c  0x0e4c  30  170    2   2  ;Thai Sara E + Pho Phung + Karun
        0x0e41  0x0e1c  0x0e4c  30  171    2   2  ;Thai Sara Ae + Pho Phung + Karun
        0x0e42  0x0e1c  0x0e4c  30  172    2   2  ;Thai Sara O + Pho Phung + Karun
        0x0e43  0x0e1c  0x0e4c  30  173    2   2  ;Thai Sara Mai Muan + Pho Phung + Karun
        0x0e44  0x0e1c  0x0e4c  30  174    2   2  ;Thai Sara Mai Malai + Pho Phung + Karun
        0x0e40  0x0e1d  0x0e4c  30  176    2   2  ;Thai Sara E + Fo Fa + Karun
        0x0e41  0x0e1d  0x0e4c  30  177    2   2  ;Thai Sara Ae + Fo Fa + Karun
        0x0e42  0x0e1d  0x0e4c  30  178    2   2  ;Thai Sara O + Fo Fa + Karun
        0x0e43  0x0e1d  0x0e4c  30  179    2   2  ;Thai Sara Mai Muan + Fo Fa + Karun
        0x0e44  0x0e1d  0x0e4c  30  180    2   2  ;Thai Sara Mai Malai + Fo Fa + Karun
        0x0e40  0x0e1e  0x0e4c  30  182    2   2  ;Thai Sara E + Pho Phan + Karun
        0x0e41  0x0e1e  0x0e4c  30  183    2   2  ;Thai Sara Ae + Pho Phan + Karun
        0x0e42  0x0e1e  0x0e4c  30  184    2   2  ;Thai Sara O + Pho Phan + Karun
        0x0e43  0x0e1e  0x0e4c  30  185    2   2  ;Thai Sara Mai Muan + Pho Phan + Karun
        0x0e44  0x0e1e  0x0e4c  30  186    2   2  ;Thai Sara Mai Malai + Pho Phan + Karun
        0x0e40  0x0e1f  0x0e4c  30  188    2   2  ;Thai Sara E + Fo Fan + Karun
        0x0e41  0x0e1f  0x0e4c  30  189    2   2  ;Thai Sara Ae + Fo Fan + Karun
        0x0e42  0x0e1f  0x0e4c  30  190    2   2  ;Thai Sara O + Fo Fan + Karun
        0x0e43  0x0e1f  0x0e4c  30  191    2   2  ;Thai Sara Mai Muan + Fo Fan + Karun
        0x0e44  0x0e1f  0x0e4c  30  192    2   2  ;Thai Sara Mai Malai + Fo Fan + Karun
        0x0e40  0x0e20  0x0e4c  30  194    2   2  ;Thai Sara E + Pho Samphao + Karun
        0x0e41  0x0e20  0x0e4c  30  195    2   2  ;Thai Sara Ae + Pho Samphao + Karun
        0x0e42  0x0e20  0x0e4c  30  196    2   2  ;Thai Sara O + Pho Samphao + Karun
        0x0e43  0x0e20  0x0e4c  30  197    2   2  ;Thai Sara Mai Muan + Pho Samphao + Karun
        0x0e44  0x0e20  0x0e4c  30  198    2   2  ;Thai Sara Mai Malai + Pho Samphao + Karun
        0x0e40  0x0e21  0x0e4c  30  200    2   2  ;Thai Sara E + Mo Ma + Karun
        0x0e41  0x0e21  0x0e4c  30  201    2   2  ;Thai Sara Ae + Mo Ma + Karun
        0x0e42  0x0e21  0x0e4c  30  202    2   2  ;Thai Sara O + Mo Ma + Karun
        0x0e43  0x0e21  0x0e4c  30  203    2   2  ;Thai Sara Mai Muan + Mo Ma + Karun
        0x0e44  0x0e21  0x0e4c  30  204    2   2  ;Thai Sara Mai Malai + Mo Ma + Karun
        0x0e40  0x0e22  0x0e4c  30  206    2   2  ;Thai Sara E + Yo Yak + Karun
        0x0e41  0x0e22  0x0e4c  30  207    2   2  ;Thai Sara Ae + Yo Yak + Karun
        0x0e42  0x0e22  0x0e4c  30  208    2   2  ;Thai Sara O + Yo Yak + Karun
        0x0e43  0x0e22  0x0e4c  30  209    2   2  ;Thai Sara Mai Muan + Yo Yak + Karun
        0x0e44  0x0e22  0x0e4c  30  210    2   2  ;Thai Sara Mai Malai + Yo Yak + Karun
        0x0e40  0x0e23  0x0e4c  30  212    2   2  ;Thai Sara E + Ro Rua + Karun
        0x0e41  0x0e23  0x0e4c  30  213    2   2  ;Thai Sara Ae + Ro Rua + Karun
        0x0e42  0x0e23  0x0e4c  30  214    2   2  ;Thai Sara O + Ro Rua + Karun
        0x0e43  0x0e23  0x0e4c  30  215    2   2  ;Thai Sara Mai Muan + Ro Rua + Karun
        0x0e44  0x0e23  0x0e4c  30  216    2   2  ;Thai Sara Mai Malai + Ro Rua + Karun
        0x0e40  0x0e24  0x0e4c  30  218    2   2  ;Thai Sara E + Ru + Karun
        0x0e41  0x0e24  0x0e4c  30  219    2   2  ;Thai Sara Ae + Ru + Karun
        0x0e42  0x0e24  0x0e4c  30  220    2   2  ;Thai Sara O + Ru + Karun
        0x0e43  0x0e24  0x0e4c  30  221    2   2  ;Thai Sara Mai Muan + Ru + Karun
        0x0e44  0x0e24  0x0e4c  30  222    2   2  ;Thai Sara Mai Malai + Ru + Karun
        0x0e40  0x0e25  0x0e4c  30  224    2   2  ;Thai Sara E + Lo Ling + Karun
        0x0e41  0x0e25  0x0e4c  30  225    2   2  ;Thai Sara Ae + Lo Ling + Karun
        0x0e42  0x0e25  0x0e4c  30  226    2   2  ;Thai Sara O + Lo Ling + Karun
        0x0e43  0x0e25  0x0e4c  30  227    2   2  ;Thai Sara Mai Muan + Lo Ling + Karun
        0x0e44  0x0e25  0x0e4c  30  228    2   2  ;Thai Sara Mai Malai + Lo Ling + Karun
        0x0e40  0x0e26  0x0e4c  30  230    2   2  ;Thai Sara E + Lu + Karun
        0x0e41  0x0e26  0x0e4c  30  231    2   2  ;Thai Sara Ae + Lu + Karun
        0x0e42  0x0e26  0x0e4c  30  232    2   2  ;Thai Sara O + Lu + Karun
        0x0e43  0x0e26  0x0e4c  30  233    2   2  ;Thai Sara Mai Muan + Lu + Karun
        0x0e44  0x0e26  0x0e4c  30  234    2   2  ;Thai Sara Mai Malai + Lu + Karun
        0x0e40  0x0e27  0x0e4c  30  236    2   2  ;Thai Sara E + Wo Waen + Karun
        0x0e41  0x0e27  0x0e4c  30  237    2   2  ;Thai Sara Ae + Wo Waen + Karun
        0x0e42  0x0e27  0x0e4c  30  238    2   2  ;Thai Sara O + Wo Waen + Karun
        0x0e43  0x0e27  0x0e4c  30  239    2   2  ;Thai Sara Mai Muan + Wo Waen + Karun
        0x0e44  0x0e27  0x0e4c  30  240    2   2  ;Thai Sara Mai Malai + Wo Waen + Karun
        0x0e40  0x0e28  0x0e4c  30  242    2   2  ;Thai Sara E + So Sala + Karun
        0x0e41  0x0e28  0x0e4c  30  243    2   2  ;Thai Sara Ae + So Sala + Karun
        0x0e42  0x0e28  0x0e4c  30  244    2   2  ;Thai Sara O + So Sala + Karun
        0x0e43  0x0e28  0x0e4c  30  245    2   2  ;Thai Sara Mai Muan + So Sala + Karun
        0x0e44  0x0e28  0x0e4c  30  246    2   2  ;Thai Sara Mai Malai + So Sala + Karun
        0x0e40  0x0e29  0x0e4c  30  248    2   2  ;Thai Sara E + So Rusi + Karun
        0x0e41  0x0e29  0x0e4c  30  249    2   2  ;Thai Sara Ae + So Rusi + Karun
        0x0e42  0x0e29  0x0e4c  30  250    2   2  ;Thai Sara O + So Rusi + Karun
        0x0e43  0x0e29  0x0e4c  30  251    2   2  ;Thai Sara Mai Muan + So Rusi + Karun
        0x0e44  0x0e29  0x0e4c  30  252    2   2  ;Thai Sara Mai Malai + So Rusi + Karun
        0x0e40  0x0e2a  0x0e4c  30  254    2   2  ;Thai Sara E + So Sua + Karun
        0x0e41  0x0e2a  0x0e4c  30  255    2   2  ;Thai Sara Ae + So Sua + Karun
        0x0e42  0x0e2a  0x0e4c  31    2    2   2  ;Thai Sara O + So Sua + Karun
        0x0e43  0x0e2a  0x0e4c  31    3    2   2  ;Thai Sara Mai Muan + So Sua + Karun
        0x0e44  0x0e2a  0x0e4c  31    4    2   2  ;Thai Sara Mai Malai + So Sua + Karun
        0x0e40  0x0e2b  0x0e4c  31    6    2   2  ;Thai Sara E + Ho Hip + Karun
        0x0e41  0x0e2b  0x0e4c  31    7    2   2  ;Thai Sara Ae + Ho Hip + Karun
        0x0e42  0x0e2b  0x0e4c  31    8    2   2  ;Thai Sara O + Ho Hip + Karun
        0x0e43  0x0e2b  0x0e4c  31    9    2   2  ;Thai Sara Mai Muan + Ho Hip + Karun
        0x0e44  0x0e2b  0x0e4c  31   10    2   2  ;Thai Sara Mai Malai + Ho Hip + Karun
        0x0e40  0x0e2c  0x0e4c  31   12    2   2  ;Thai Sara E + Lo Chula + Karun
        0x0e41  0x0e2c  0x0e4c  31   13    2   2  ;Thai Sara Ae + Lo Chula + Karun
        0x0e42  0x0e2c  0x0e4c  31   14    2   2  ;Thai Sara O + Lo Chula + Karun
        0x0e43  0x0e2c  0x0e4c  31   15    2   2  ;Thai Sara Mai Muan + Lo Chula + Karun
        0x0e44  0x0e2c  0x0e4c  31   16    2   2  ;Thai Sara Mai Malai + Lo Chula + Karun
        0x0e40  0x0e2d  0x0e4c  31   18    2   2  ;Thai Sara E + O Ang + Karun
        0x0e41  0x0e2d  0x0e4c  31   19    2   2  ;Thai Sara Ae + O Ang + Karun
        0x0e42  0x0e2d  0x0e4c  31   20    2   2  ;Thai Sara O + O Ang + Karun
        0x0e43  0x0e2d  0x0e4c  31   21    2   2  ;Thai Sara Mai Muan + O Ang + Karun
        0x0e44  0x0e2d  0x0e4c  31   22    2   2  ;Thai Sara Mai Malai + O Ang + Karun
        0x0e40  0x0e2e  0x0e4c  31   24    2   2  ;Thai Sara E + Ho Nok Huk + Karun
        0x0e41  0x0e2e  0x0e4c  31   25    2   2  ;Thai Sara Ae + Ho Nok Huk + Karun
        0x0e42  0x0e2e  0x0e4c  31   26    2   2  ;Thai Sara O + Ho Nok Huk + Karun
        0x0e43  0x0e2e  0x0e4c  31   27    2   2  ;Thai Sara Mai Muan + Ho Nok Huk + Karun
        0x0e44  0x0e2e  0x0e4c  31   28    2   2  ;Thai Sara Mai Malai + Ho Nok Huk + Karun

    LCID  0x0000042a                              ;Vietnamese

      TWO  27

        0x0063  0x0068  14   13    2   2          ;ch
        0x0043  0x0068  14   13    2  18          ;Ch
        0x0043  0x0048  14   13    2  26          ;CH
        0x0067  0x0069  14   38    2   2          ;gi
        0x0047  0x0069  14   38    2  18          ;Gi
        0x0047  0x0049  14   38    2  26          ;GI
        0x006b  0x0068  14   55    2   2          ;kh
        0x004b  0x0068  14   55    2  18          ;Kh
        0x004b  0x0048  14   55    2  26          ;KH
        0x006e  0x0067  14  113    2   2          ;ng
        0x004e  0x0067  14  113    2  18          ;Ng
        0x004e  0x0047  14  113    2  26          ;NG
        0x006e  0x0068  14  114    2   2          ;nh
        0x004e  0x0068  14  114    2  18          ;Nh
        0x004e  0x0048  14  114    2  26          ;NH
        0x0070  0x0068  14  128    2   2          ;ph
        0x0050  0x0068  14  128    2  18          ;Ph
        0x0050  0x0048  14  128    2  26          ;PH
        0x0071  0x0075  14  138    2   2          ;qu
        0x0051  0x0075  14  138    2  18          ;Qu
        0x0051  0x0055  14  138    2  26          ;QU
        0x0074  0x0068  14  154    2   2          ;th
        0x0054  0x0068  14  154    2  18          ;Th
        0x0054  0x0048  14  154    2  26          ;TH
        0x0074  0x0072  14  155    2   2          ;tr
        0x0054  0x0072  14  155    2  18          ;Tr
        0x0054  0x0052  14  155    2  26          ;TR

      THREE  0

    LCID  0x00000439                              ;Hindi
    LCID  0x00000446                              ;Punjabi
    LCID  0x00000447                              ;Gujarati
    LCID  0x00000449                              ;Tamil
    LCID  0x0000044a                              ;Telugu
    LCID  0x0000044b                              ;Kannada
    LCID  0x0000044e                              ;Marathi
    LCID  0x0000044f                              ;Sanskrit
    LCID  0x00000457                              ;Konkani

      TWO  654

        0x0905  0x0901  20   10    2   2          ;Devanagari Letter A + Candrabindu
        0x0905  0x0902  20   10    4   2          ;Devanagari Letter A + Anusvara
        0x0905  0x0903  20   10    6   2          ;Devanagari Letter A + Visarga
        0x0905  0x093c  20   11    2  18          ;Devanagari Letter A + Nukta
        0x0906  0x0901  20   14    2   2          ;Devanagari Letter Aa + Candrabindu
        0x0906  0x0902  20   14    4   2          ;Devanagari Letter Aa + Anusvara
        0x0906  0x0903  20   14    6   2          ;Devanagari Letter Aa + Visarga
        0x0906  0x093c  20   15    2  18          ;Devanagari Letter Aa + Nukta
        0x0907  0x0901  20   18    2   2          ;Devanagari Letter I + Candrabindu
        0x0907  0x0902  20   18    4   2          ;Devanagari Letter I + Anusvara
        0x0907  0x0903  20   18    6   2          ;Devanagari Letter I + Visarga
        0x0907  0x093c  20   19    2  18          ;Devanagari Letter I + Nukta
        0x0908  0x0901  20   22    2   2          ;Devanagari Letter Ii + Candrabindu
        0x0908  0x0902  20   22    4   2          ;Devanagari Letter Ii + Anusvara
        0x0908  0x0903  20   22    6   2          ;Devanagari Letter Ii + Visarga
        0x0908  0x093c  20   23    2  18          ;Devanagari Letter Ii + Nukta
        0x0909  0x0901  20   26    2   2          ;Devanagari Letter U + Candrabindu
        0x0909  0x0902  20   26    4   2          ;Devanagari Letter U + Anusvara
        0x0909  0x0903  20   26    6   2          ;Devanagari Letter U + Visarga
        0x0909  0x093c  20   27    2  18          ;Devanagari Letter U + Nukta
        0x090a  0x0901  20   30    2   2          ;Devanagari Letter Uu + Candrabindu
        0x090a  0x0902  20   30    4   2          ;Devanagari Letter Uu + Anusvara
        0x090a  0x0903  20   30    6   2          ;Devanagari Letter Uu + Visarga
        0x090a  0x093c  20   31    2  18          ;Devanagari Letter Uu + Nukta
        0x090b  0x0901  20   34    2   2          ;Devanagari Letter Vocalic R + Candrabindu
        0x090b  0x0902  20   34    4   2          ;Devanagari Letter Vocalic R + Anusvara
        0x090b  0x0903  20   34    6   2          ;Devanagari Letter Vocalic R + Visarga
        0x090b  0x093c  20   35    2  18          ;Devanagari Letter Vocalic R + Nukta
        0x090c  0x0901  20   42    2   2          ;Devanagari Letter Vocalic L + Candrabindu
        0x090c  0x0902  20   42    4   2          ;Devanagari Letter Vocalic L + Anusvara
        0x090c  0x0903  20   42    6   2          ;Devanagari Letter Vocalic L + Visarga
        0x090c  0x093c  20   43    2  18          ;Devanagari Letter Vocalic L + Nukta
        0x090d  0x0901  20   50    2   2          ;Devanagari Letter Candra E + Candrabindu
        0x090d  0x0902  20   50    4   2          ;Devanagari Letter Candra E + Anusvara
        0x090d  0x0903  20   50    6   2          ;Devanagari Letter Candra E + Visarga
        0x090d  0x093c  20   51    2  18          ;Devanagari Letter Candra E + Nukta
        0x090e  0x0901  20   54    2   2          ;Devanagari Letter Short E + Candrabindu
        0x090e  0x0902  20   54    4   2          ;Devanagari Letter Short E + Anusvara
        0x090e  0x0903  20   54    6   2          ;Devanagari Letter Short E + Visarga
        0x090e  0x093c  20   55    2  18          ;Devanagari Letter Short E + Nukta
        0x090f  0x0901  20   58    2   2          ;Devanagari Letter E + Candrabindu
        0x090f  0x0902  20   58    4   2          ;Devanagari Letter E + Anusvara
        0x090f  0x0903  20   58    6   2          ;Devanagari Letter E + Visarga
        0x090f  0x093c  20   59    2  18          ;Devanagari Letter E + Nukta
        0x0910  0x0901  20   62    2   2          ;Devanagari Letter Ai + Candrabindu
        0x0910  0x0902  20   62    4   2          ;Devanagari Letter Ai + Anusvara
        0x0910  0x0903  20   62    6   2          ;Devanagari Letter Ai + Visarga
        0x0910  0x093c  20   63    2  18          ;Devanagari Letter Ai + Nukta
        0x0911  0x0901  20   66    2   2          ;Devanagari Letter Candra O + Candrabindu
        0x0911  0x0902  20   66    4   2          ;Devanagari Letter Candra O + Anusvara
        0x0911  0x0903  20   66    6   2          ;Devanagari Letter Candra O + Visarga
        0x0911  0x093c  20   67    2  18          ;Devanagari Letter Candra O + Nukta
        0x0912  0x0901  20   70    2   2          ;Devanagari Letter Short O + Candrabindu
        0x0912  0x0902  20   70    4   2          ;Devanagari Letter Short O + Anusvara
        0x0912  0x0903  20   70    6   2          ;Devanagari Letter Short O + Visarga
        0x0912  0x093c  20   71    2  18          ;Devanagari Letter Short O + Nukta
        0x0913  0x0901  20   74    2   2          ;Devanagari Letter O + Candrabindu
        0x0913  0x0902  20   74    4   2          ;Devanagari Letter O + Anusvara
        0x0913  0x0903  20   74    6   2          ;Devanagari Letter O + Visarga
        0x0913  0x093c  20   75    2  18          ;Devanagari Letter O + Nukta
        0x0914  0x0901  20   78    2   2          ;Devanagari Letter Au + Candrabindu
        0x0914  0x0902  20   78    4   2          ;Devanagari Letter Au + Anusvara
        0x0914  0x0903  20   78    6   2          ;Devanagari Letter Au + Visarga
        0x0914  0x093c  20   79    2  18          ;Devanagari Letter Au + Nukta
        0x0915  0x0901  20   82    2   2          ;Devanagari Letter Ka + Candrabindu
        0x0915  0x0902  20   82    4   2          ;Devanagari Letter Ka + Anusvara
        0x0915  0x0903  20   82    6   2          ;Devanagari Letter Ka + Visarga
        0x0915  0x093c  20   83    8  18          ;Devanagari Letter Ka + Nukta
        0x0916  0x0901  20   86    2   2          ;Devanagari Letter Kha + Candrabindu
        0x0916  0x0902  20   86    4   2          ;Devanagari Letter Kha + Anusvara
        0x0916  0x0903  20   86    6   2          ;Devanagari Letter Kha + Visarga
        0x0916  0x093c  20   87    8  18          ;Devanagari Letter Kha + Nukta
        0x0917  0x0901  20   90    2   2          ;Devanagari Letter Ga + Candrabindu
        0x0917  0x0902  20   90    4   2          ;Devanagari Letter Ga + Anusvara
        0x0917  0x0903  20   90    6   2          ;Devanagari Letter Ga + Visarga
        0x0917  0x093c  20   91    8  18          ;Devanagari Letter Ga + Nukta
        0x0918  0x0901  20   94    2   2          ;Devanagari Letter Gha + Candrabindu
        0x0918  0x0902  20   94    4   2          ;Devanagari Letter Gha + Anusvara
        0x0918  0x0903  20   94    6   2          ;Devanagari Letter Gha + Visarga
        0x0918  0x093c  20   95    2  18          ;Devanagari Letter Gha + Nukta
        0x0919  0x0901  20   98    2   2          ;Devanagari Letter Nga + Candrabindu
        0x0919  0x0902  20   98    4   2          ;Devanagari Letter Nga + Anusvara
        0x0919  0x0903  20   98    6   2          ;Devanagari Letter Nga + Visarga
        0x0919  0x093c  20   99    2  18          ;Devanagari Letter Nga + Nukta
        0x091a  0x0901  20  102    2   2          ;Devanagari Letter Ca + Candrabindu
        0x091a  0x0902  20  102    4   2          ;Devanagari Letter Ca + Anusvara
        0x091a  0x0903  20  102    6   2          ;Devanagari Letter Ca + Visarga
        0x091a  0x093c  20  103    2  18          ;Devanagari Letter Ca + Nukta
        0x091b  0x0901  20  106    2   2          ;Devanagari Letter Cha + Candrabindu
        0x091b  0x0902  20  106    4   2          ;Devanagari Letter Cha + Anusvara
        0x091b  0x0903  20  106    6   2          ;Devanagari Letter Cha + Visarga
        0x091b  0x093c  20  107    2  18          ;Devanagari Letter Cha + Nukta
        0x091c  0x0901  20  110    2   2          ;Devanagari Letter Ja + Candrabindu
        0x091c  0x0902  20  110    4   2          ;Devanagari Letter Ja + Anusvara
        0x091c  0x0903  20  110    6   2          ;Devanagari Letter Ja + Visarga
        0x091c  0x093c  20  111    8  18          ;Devanagari Letter Ja + Nukta
        0x091d  0x0901  20  114    2   2          ;Devanagari Letter Jha + Candrabindu
        0x091d  0x0902  20  114    4   2          ;Devanagari Letter Jha + Anusvara
        0x091d  0x0903  20  114    6   2          ;Devanagari Letter Jha + Visarga
        0x091d  0x093c  20  115    2  18          ;Devanagari Letter Jha + Nukta
        0x091e  0x0901  20  118    2   2          ;Devanagari Letter Nya + Candrabindu
        0x091e  0x0902  20  118    4   2          ;Devanagari Letter Nya + Anusvara
        0x091e  0x0903  20  118    6   2          ;Devanagari Letter Nya + Visarga
        0x091e  0x093c  20  119    2  18          ;Devanagari Letter Nya + Nukta
        0x091f  0x0901  20  122    2   2          ;Devanagari Letter Tta + Candrabindu
        0x091f  0x0902  20  122    4   2          ;Devanagari Letter Tta + Anusvara
        0x091f  0x0903  20  122    6   2          ;Devanagari Letter Tta + Visarga
        0x091f  0x093c  20  123    2  18          ;Devanagari Letter Tta + Nukta
        0x0920  0x0901  20  126    2   2          ;Devanagari Letter Ttha + Candrabindu
        0x0920  0x0902  20  126    4   2          ;Devanagari Letter Ttha + Anusvara
        0x0920  0x0903  20  126    6   2          ;Devanagari Letter Ttha + Visarga
        0x0920  0x093c  20  127    2  18          ;Devanagari Letter Ttha + Nukta
        0x0921  0x0901  20  130    2   2          ;Devanagari Letter Dda + Candrabindu
        0x0921  0x0902  20  130    4   2          ;Devanagari Letter Dda + Anusvara
        0x0921  0x0903  20  130    6   2          ;Devanagari Letter Dda + Visarga
        0x0921  0x093c  20  131    8  18          ;Devanagari Letter Dda + Nukta
        0x0922  0x0901  20  134    2   2          ;Devanagari Letter Ddha + Candrabindu
        0x0922  0x0902  20  134    4   2          ;Devanagari Letter Ddha + Anusvara
        0x0922  0x0903  20  134    6   2          ;Devanagari Letter Ddha + Visarga
        0x0922  0x093c  20  135    8  18          ;Devanagari Letter Ddha + Nukta
        0x0923  0x0901  20  138    2   2          ;Devanagari Letter Nna + Candrabindu
        0x0923  0x0902  20  138    4   2          ;Devanagari Letter Nna + Anusvara
        0x0923  0x0903  20  138    6   2          ;Devanagari Letter Nna + Visarga
        0x0923  0x093c  20  139    2  18          ;Devanagari Letter Nna + Nukta
        0x0924  0x0901  20  142    2   2          ;Devanagari Letter Ta + Candrabindu
        0x0924  0x0902  20  142    4   2          ;Devanagari Letter Ta + Anusvara
        0x0924  0x0903  20  142    6   2          ;Devanagari Letter Ta + Visarga
        0x0924  0x093c  20  143    2  18          ;Devanagari Letter Ta + Nukta
        0x0925  0x0901  20  146    2   2          ;Devanagari Letter Tha + Candrabindu
        0x0925  0x0902  20  146    4   2          ;Devanagari Letter Tha + Anusvara
        0x0925  0x0903  20  146    6   2          ;Devanagari Letter Tha + Visarga
        0x0925  0x093c  20  147    2  18          ;Devanagari Letter Tha + Nukta
        0x0926  0x0901  20  150    2   2          ;Devanagari Letter Da + Candrabindu
        0x0926  0x0902  20  150    4   2          ;Devanagari Letter Da + Anusvara
        0x0926  0x0903  20  150    6   2          ;Devanagari Letter Da + Visarga
        0x0926  0x093c  20  151    2  18          ;Devanagari Letter Da + Nukta
        0x0927  0x0901  20  154    2   2          ;Devanagari Letter Dha + Candrabindu
        0x0927  0x0902  20  154    4   2          ;Devanagari Letter Dha + Anusvara
        0x0927  0x0903  20  154    6   2          ;Devanagari Letter Dha + Visarga
        0x0927  0x093c  20  155    2  18          ;Devanagari Letter Dha + Nukta
        0x0928  0x0901  20  158    2   2          ;Devanagari Letter Na + Candrabindu
        0x0928  0x0902  20  158    4   2          ;Devanagari Letter Na + Anusvara
        0x0928  0x0903  20  158    6   2          ;Devanagari Letter Na + Visarga
        0x0928  0x093c  20  159    8  18          ;Devanagari Letter Na + Nukta
        0x092a  0x0901  20  162    2   2          ;Devanagari Letter Pa + Candrabindu
        0x092a  0x0902  20  162    4   2          ;Devanagari Letter Pa + Anusvara
        0x092a  0x0903  20  162    6   2          ;Devanagari Letter Pa + Visarga
        0x092a  0x093c  20  163    2  18          ;Devanagari Letter Pa + Nukta
        0x092b  0x0901  20  166    2   2          ;Devanagari Letter Pha + Candrabindu
        0x092b  0x0902  20  166    4   2          ;Devanagari Letter Pha + Anusvara
        0x092b  0x0903  20  166    6   2          ;Devanagari Letter Pha + Visarga
        0x092b  0x093c  20  167    8  18          ;Devanagari Letter Pha + Nukta
        0x092c  0x0901  20  170    2   2          ;Devanagari Letter Ba + Candrabindu
        0x092c  0x0902  20  170    4   2          ;Devanagari Letter Ba + Anusvara
        0x092c  0x0903  20  170    6   2          ;Devanagari Letter Ba + Visarga
        0x092c  0x093c  20  171    2  18          ;Devanagari Letter Ba + Nukta
        0x092d  0x0901  20  174    2   2          ;Devanagari Letter Bha + Candrabindu
        0x092d  0x0902  20  174    4   2          ;Devanagari Letter Bha + Anusvara
        0x092d  0x0903  20  174    6   2          ;Devanagari Letter Bha + Visarga
        0x092d  0x093c  20  175    2  18          ;Devanagari Letter Bha + Nukta
        0x092e  0x0901  20  178    2   2          ;Devanagari Letter Ma + Candrabindu
        0x092e  0x0902  20  178    4   2          ;Devanagari Letter Ma + Anusvara
        0x092e  0x0903  20  178    6   2          ;Devanagari Letter Ma + Visarga
        0x092e  0x093c  20  179    2  18          ;Devanagari Letter Ma + Nukta
        0x092f  0x0901  20  182    2   2          ;Devanagari Letter Ya + Candrabindu
        0x092f  0x0902  20  182    4   2          ;Devanagari Letter Ya + Anusvara
        0x092f  0x0903  20  182    6   2          ;Devanagari Letter Ya + Visarga
        0x092f  0x093c  20  183    8  18          ;Devanagari Letter Ya + Nukta
        0x0930  0x0901  20  186    2   2          ;Devanagari Letter Ra + Candrabindu
        0x0930  0x0902  20  186    4   2          ;Devanagari Letter Ra + Anusvara
        0x0930  0x0903  20  186    6   2          ;Devanagari Letter Ra + Visarga
        0x0930  0x093c  20  187    8  18          ;Devanagari Letter Ra + Nukta
        0x0932  0x0901  20  190    2   2          ;Devanagari Letter La + Candrabindu
        0x0932  0x0902  20  190    4   2          ;Devanagari Letter La + Anusvara
        0x0932  0x0903  20  190    6   2          ;Devanagari Letter La + Visarga
        0x0932  0x093c  20  191    2  18          ;Devanagari Letter La + Nukta
        0x0933  0x0901  20  194    2   2          ;Devanagari Letter Lla + Candrabindu
        0x0933  0x0902  20  194    4   2          ;Devanagari Letter Lla + Anusvara
        0x0933  0x0903  20  194    6   2          ;Devanagari Letter Lla + Visarga
        0x0933  0x093c  20  195    8  18          ;Devanagari Letter Lla + Nukta
        0x0935  0x0901  20  198    2   2          ;Devanagari Letter Va + Candrabindu
        0x0935  0x0902  20  198    4   2          ;Devanagari Letter Va + Anusvara
        0x0935  0x0903  20  198    6   2          ;Devanagari Letter Va + Visarga
        0x0935  0x093c  20  199    2  18          ;Devanagari Letter Va + Nukta
        0x0936  0x0901  20  202    2   2          ;Devanagari Letter Sha + Candrabindu
        0x0936  0x0902  20  202    4   2          ;Devanagari Letter Sha + Anusvara
        0x0936  0x0903  20  202    6   2          ;Devanagari Letter Sha + Visarga
        0x0936  0x093c  20  203    2  18          ;Devanagari Letter Sha + Nukta
        0x0937  0x0901  20  206    2   2          ;Devanagari Letter Ssa + Candrabindu
        0x0937  0x0902  20  206    4   2          ;Devanagari Letter Ssa + Anusvara
        0x0937  0x0903  20  206    6   2          ;Devanagari Letter Ssa + Visarga
        0x0937  0x093c  20  207    2  18          ;Devanagari Letter Ssa + Nukta
        0x0938  0x0901  20  210    2   2          ;Devanagari Letter Sa + Candrabindu
        0x0938  0x0902  20  210    4   2          ;Devanagari Letter Sa + Anusvara
        0x0938  0x0903  20  210    6   2          ;Devanagari Letter Sa + Visarga
        0x0938  0x093c  20  211    2  18          ;Devanagari Letter Sa + Nukta
        0x0939  0x0901  20  214    2   2          ;Devanagari Letter Ha + Candrabindu
        0x0939  0x0902  20  214    4   2          ;Devanagari Letter Ha + Anusvara
        0x0939  0x0903  20  214    6   2          ;Devanagari Letter Ha + Visarga
        0x0939  0x093c  20  215    2  18          ;Devanagari Letter Ha + Nukta
        0x093e  0x0901  20  217    2   2          ;Devanagari Vowel Aa + Candrabindu
        0x093e  0x0902  20  217    4   2          ;Devanagari Vowel Aa + Anusvara
        0x093e  0x0903  20  217    6   2          ;Devanagari Vowel Aa + Visarga
        0x093f  0x0901  20  219    2   2          ;Devanagari Vowel I + Candrabindu
        0x093f  0x0902  20  219    4   2          ;Devanagari Vowel I + Anusvara
        0x093f  0x0903  20  219    6   2          ;Devanagari Vowel I + Visarga
        0x0940  0x0901  20  221    2   2          ;Devanagari Vowel Ii + Candrabindu
        0x0940  0x0902  20  221    4   2          ;Devanagari Vowel Ii + Anusvara
        0x0940  0x0903  20  221    6   2          ;Devanagari Vowel Ii + Visarga
        0x0941  0x0901  20  223    2   2          ;Devanagari Vowel U + Candrabindu
        0x0941  0x0902  20  223    4   2          ;Devanagari Vowel U + Anusvara
        0x0941  0x0903  20  223    6   2          ;Devanagari Vowel U + Visarga
        0x0942  0x0901  20  225    2   2          ;Devanagari Vowel Uu + Candrabindu
        0x0942  0x0902  20  225    4   2          ;Devanagari Vowel Uu + Anusvara
        0x0942  0x0903  20  225    6   2          ;Devanagari Vowel Uu + Visarga
        0x0943  0x0901  20  227    2   2          ;Devanagari Vowel Vocalic R + Candrabindu
        0x0943  0x0902  20  227    4   2          ;Devanagari Vowel Vocalic R + Anusvara
        0x0943  0x0903  20  227    6   2          ;Devanagari Vowel Vocalic R + Visarga
        0x0944  0x0901  20  229    2   2          ;Devanagari Vowel Vocalic Rr + Candrabindu
        0x0944  0x0902  20  229    4   2          ;Devanagari Vowel Vocalic Rr + Anusvara
        0x0944  0x0903  20  229    6   2          ;Devanagari Vowel Vocalic Rr + Visarga
        0x0945  0x0901  20  235    2   2          ;Devanagari Vowel Candra E + Candrabindu
        0x0945  0x0902  20  235    4   2          ;Devanagari Vowel Candra E + Anusvara
        0x0945  0x0903  20  235    6   2          ;Devanagari Vowel Candra E + Visarga
        0x0946  0x0901  20  237    2   2          ;Devanagari Vowel Short E + Candrabindu
        0x0946  0x0902  20  237    4   2          ;Devanagari Vowel Short E + Anusvara
        0x0946  0x0903  20  237    6   2          ;Devanagari Vowel Short E + Visarga
        0x0947  0x0901  20  239    2   2          ;Devanagari Vowel E + Candrabindu
        0x0947  0x0902  20  239    4   2          ;Devanagari Vowel E + Anusvara
        0x0947  0x0903  20  239    6   2          ;Devanagari Vowel E + Visarga
        0x0948  0x0901  20  241    2   2          ;Devanagari Vowel Ai + Candrabindu
        0x0948  0x0902  20  241    4   2          ;Devanagari Vowel Ai + Anusvara
        0x0948  0x0903  20  241    6   2          ;Devanagari Vowel Ai + Visarga
        0x0949  0x0901  20  243    2   2          ;Devanagari Vowel Candra O + Candrabindu
        0x0949  0x0902  20  243    4   2          ;Devanagari Vowel Candra O + Anusvara
        0x0949  0x0903  20  243    6   2          ;Devanagari Vowel Candra O + Visarga
        0x094a  0x0901  20  245    2   2          ;Devanagari Vowel Short O + Candrabindu
        0x094a  0x0902  20  245    4   2          ;Devanagari Vowel Short O + Anusvara
        0x094a  0x0903  20  245    6   2          ;Devanagari Vowel Short O + Visarga
        0x094b  0x0901  20  247    2   2          ;Devanagari Vowel O + Candrabindu
        0x094b  0x0902  20  247    4   2          ;Devanagari Vowel O + Anusvara
        0x094b  0x0903  20  247    6   2          ;Devanagari Vowel O + Visarga
        0x094c  0x0901  20  249    2   2          ;Devanagari Vowel Au + Candrabindu
        0x094c  0x0902  20  249    4   2          ;Devanagari Vowel Au + Anusvara
        0x094c  0x0903  20  249    6   2          ;Devanagari Vowel Au + Visarga
        0x0960  0x0901  20   38    2   2          ;Devanagari Letter Vocalic Rr + Candrabindu
        0x0960  0x0902  20   38    4   2          ;Devanagari Letter Vocalic Rr + Anusvara
        0x0960  0x0903  20   38    6   2          ;Devanagari Letter Vocalic Rr + Visarga
        0x0960  0x093c  20   39    2  18          ;Devanagari Letter Vocalic Rr + Nukta
        0x0961  0x0901  20   46    2   2          ;Devanagari Letter Vocalic Ll + Candrabindu
        0x0961  0x0902  20   46    4   2          ;Devanagari Letter Vocalic Ll + Anusvara
        0x0961  0x0903  20   46    6   2          ;Devanagari Letter Vocalic Ll + Visarga
        0x0961  0x093c  20   47    2  18          ;Devanagari Letter Vocalic Ll + Nukta
        0x0962  0x0901  20  231    2   2          ;Devanagari Vowel Vocalic L + Candrabindu
        0x0962  0x0902  20  231    4   2          ;Devanagari Vowel Vocalic L + Anusvara
        0x0962  0x0903  20  231    6   2          ;Devanagari Vowel Vocalic L + Visarga
        0x0963  0x0901  20  233    2   2          ;Devanagari Vowel Vocalic Ll + Candrabindu
        0x0963  0x0902  20  233    4   2          ;Devanagari Vowel Vocalic Ll + Anusvara
        0x0963  0x0903  20  233    6   2          ;Devanagari Vowel Vocalic Ll + Visarga

        0x0b95  0x0bcd  25   38    2   2          ;Tamil Letter Ka + Virama
        0x0b99  0x0bcd  25   42    2   2          ;Tamil Letter Nga + Virama
        0x0b9a  0x0bcd  25   46    2   2          ;Tamil Letter Ca + Virama
        0x0b9e  0x0bcd  25   50    2   2          ;Tamil Letter Nya + Virama
        0x0b9f  0x0bcd  25   54    2   2          ;Tamil Letter Tta + Virama
        0x0ba3  0x0bcd  25   58    2   2          ;Tamil Letter Nna + Virama
        0x0ba4  0x0bcd  25   62    2   2          ;Tamil Letter Ta + Virama
        0x0ba8  0x0bcd  25   66    2   2          ;Tamil Letter Na + Virama
        0x0baa  0x0bcd  25   70    2   2          ;Tamil Letter Pa + Virama
        0x0bae  0x0bcd  25   74    2   2          ;Tamil Letter Ma + Virama
        0x0baf  0x0bcd  25   78    2   2          ;Tamil Letter Ya + Virama
        0x0bb0  0x0bcd  25   82    2   2          ;Tamil Letter Ra + Virama
        0x0bb2  0x0bcd  25   86    2   2          ;Tamil Letter La + Virama
        0x0bb5  0x0bcd  25   90    2   2          ;Tamil Letter Va + Virama
        0x0bb4  0x0bcd  25   94    2   2          ;Tamil Letter Llla + Virama
        0x0bb3  0x0bcd  25   98    2   2          ;Tamil Letter Lla + Virama
        0x0bb1  0x0bcd  25  102    2   2          ;Tamil Letter Rra + Virama
        0x0ba9  0x0bcd  25  106    2   2          ;Tamil Letter Nnna + Virama
        0x0b9c  0x0bcd  25  110    2   2          ;Tamil Letter Ja + Virama
        0x0bb8  0x0bcd  25  130    2   2          ;Tamil Letter Sa + Virama
        0x0bb7  0x0bcd  25  118    2   2          ;Tamil Letter Ssa + Virama
        0x0bb9  0x0bcd  25  124    2   2          ;Tamil Letter Ha + Virama

        0x0C05  0x0C01  26   12    2   2          ;Telugu
        0x0C05  0x0C02  26   12    4   2          ;
        0x0C05  0x0C03  26   12    6   2          ;
        0x0C06  0x0C01  26   15    2   2          ;
        0x0C06  0x0C02  26   15    4   2          ;
        0x0C06  0x0C03  26   15    6   2          ;
        0x0C07  0x0C01  26   18    2   2          ;
        0x0C07  0x0C02  26   18    4   2          ;
        0x0C07  0x0C03  26   18    6   2          ;
        0x0C08  0x0C01  26   21    2   2          ;
        0x0C08  0x0C02  26   21    4   2          ;
        0x0C08  0x0C03  26   21    6   2          ;
        0x0C09  0x0C01  26   24    2   2          ;
        0x0C09  0x0C02  26   24    4   2          ;
        0x0C09  0x0C03  26   24    6   2          ;
        0x0C0A  0x0C01  26   27    2   2          ;
        0x0C0A  0x0C02  26   27    4   2          ;
        0x0C0A  0x0C03  26   27    6   2          ;
        0x0C0B  0x0C01  26   30    2   2          ;
        0x0C0B  0x0C02  26   30    4   2          ;
        0x0C0B  0x0C03  26   30    6   2          ;
        0x0C0C  0x0C01  26   36    2   2          ;
        0x0C0C  0x0C02  26   36    4   2          ;
        0x0C0C  0x0C03  26   36    6   2          ;
        0x0C0E  0x0C01  26   42    2   2          ;
        0x0C0E  0x0C02  26   42    4   2          ;
        0x0C0E  0x0C03  26   42    6   2          ;
        0x0C0F  0x0C01  26   45    2   2          ;
        0x0C0F  0x0C02  26   45    4   2          ;
        0x0C0F  0x0C03  26   45    6   2          ;
        0x0C10  0x0C01  26   48    2   2          ;
        0x0C10  0x0C02  26   48    4   2          ;
        0x0C10  0x0C03  26   48    6   2          ;
        0x0C12  0x0C01  26   51    2   2          ;
        0x0C12  0x0C02  26   51    4   2          ;
        0x0C12  0x0C03  26   51    6   2          ;
        0x0C13  0x0C01  26   54    2   2          ;
        0x0C13  0x0C02  26   54    4   2          ;
        0x0C13  0x0C03  26   54    6   2          ;
        0x0C14  0x0C01  26   57    2   2          ;
        0x0C14  0x0C02  26   57    4   2          ;
        0x0C14  0x0C03  26   57    6   2          ;
        0x0C15  0x0C01  26   60    2   2          ;
        0x0C15  0x0C02  26   60    4   2          ;
        0x0C15  0x0C03  26   60    6   2          ;
        0x0C16  0x0C01  26   63    2   2          ;
        0x0C16  0x0C02  26   63    4   2          ;
        0x0C16  0x0C03  26   63    6   2          ;
        0x0C17  0x0C01  26   66    2   2          ;
        0x0C17  0x0C02  26   66    4   2          ;
        0x0C17  0x0C03  26   66    6   2          ;
        0x0C18  0x0C01  26   69    2   2          ;
        0x0C18  0x0C02  26   69    4   2          ;
        0x0C18  0x0C03  26   69    6   2          ;
        0x0C19  0x0C01  26   72    2   2          ;
        0x0C19  0x0C02  26   72    4   2          ;
        0x0C19  0x0C03  26   72    6   2          ;
        0x0C1A  0x0C01  26   75    2   2          ;
        0x0C1A  0x0C02  26   75    4   2          ;
        0x0C1A  0x0C03  26   75    6   2          ;
        0x0C1B  0x0C01  26   78    2   2          ;
        0x0C1B  0x0C02  26   78    4   2          ;
        0x0C1B  0x0C03  26   78    6   2          ;
        0x0C1C  0x0C01  26   81    2   2          ;
        0x0C1C  0x0C02  26   81    4   2          ;
        0x0C1C  0x0C03  26   81    6   2          ;
        0x0C1D  0x0C01  26   84    2   2          ;
        0x0C1D  0x0C02  26   84    4   2          ;
        0x0C1D  0x0C03  26   84    6   2          ;
        0x0C1E  0x0C01  26   87    2   2          ;
        0x0C1E  0x0C02  26   87    4   2          ;
        0x0C1E  0x0C03  26   87    6   2          ;
        0x0C1F  0x0C01  26   90    2   2          ;
        0x0C1F  0x0C02  26   90    4   2          ;
        0x0C1F  0x0C03  26   90    6   2          ;
        0x0C20  0x0C01  26   93    2   2          ;
        0x0C20  0x0C02  26   93    4   2          ;
        0x0C20  0x0C03  26   93    6   2          ;
        0x0C21  0x0C01  26   96    2   2          ;
        0x0C21  0x0C02  26   96    4   2          ;
        0x0C21  0x0C03  26   96    6   2          ;
        0x0C22  0x0C01  26   99    2   2          ;
        0x0C22  0x0C02  26   99    4   2          ;
        0x0C22  0x0C03  26   99    6   2          ;
        0x0C23  0x0C01  26  102    2   2          ;
        0x0C23  0x0C02  26  102    4   2          ;
        0x0C23  0x0C03  26  102    6   2          ;
        0x0C24  0x0C01  26  105    2   2          ;
        0x0C24  0x0C02  26  105    4   2          ;
        0x0C24  0x0C03  26  105    6   2          ;
        0x0C25  0x0C01  26  108    2   2          ;
        0x0C25  0x0C02  26  108    4   2          ;
        0x0C25  0x0C03  26  108    6   2          ;
        0x0C26  0x0C01  26  111    2   2          ;
        0x0C26  0x0C02  26  111    4   2          ;
        0x0C26  0x0C03  26  111    6   2          ;
        0x0C27  0x0C01  26  114    2   2          ;
        0x0C27  0x0C02  26  114    4   2          ;
        0x0C27  0x0C03  26  114    6   2          ;
        0x0C28  0x0C01  26  117    2   2          ;
        0x0C28  0x0C02  26  117    4   2          ;
        0x0C28  0x0C03  26  117    6   2          ;
        0x0C2A  0x0C01  26  120    2   2          ;
        0x0C2A  0x0C02  26  120    4   2          ;
        0x0C2A  0x0C03  26  120    6   2          ;
        0x0C2B  0x0C01  26  123    2   2          ;
        0x0C2B  0x0C02  26  123    4   2          ;
        0x0C2B  0x0C03  26  123    6   2          ;
        0x0C2C  0x0C01  26  126    2   2          ;
        0x0C2C  0x0C02  26  126    4   2          ;
        0x0C2C  0x0C03  26  126    6   2          ;
        0x0C2D  0x0C01  26  129    2   2          ;
        0x0C2D  0x0C02  26  129    4   2          ;
        0x0C2D  0x0C03  26  129    6   2          ;
        0x0C2E  0x0C01  26  132    2   2          ;
        0x0C2E  0x0C02  26  132    4   2          ;
        0x0C2E  0x0C03  26  132    6   2          ;
        0x0C2F  0x0C01  26  135    2   2          ;
        0x0C2F  0x0C02  26  135    4   2          ;
        0x0C2F  0x0C03  26  135    6   2          ;
        0x0C30  0x0C01  26  138    2   2          ;
        0x0C30  0x0C02  26  138    4   2          ;
        0x0C30  0x0C03  26  138    6   2          ;
        0x0C31  0x0C01  26  141    2   2          ;
        0x0C31  0x0C02  26  141    4   2          ;
        0x0C31  0x0C03  26  141    6   2          ;
        0x0C32  0x0C01  26  144    2   2          ;
        0x0C32  0x0C02  26  144    4   2          ;
        0x0C32  0x0C03  26  144    6   2          ;
        0x0C33  0x0C01  26  147    2   2          ;
        0x0C33  0x0C02  26  147    4   2          ;
        0x0C33  0x0C03  26  147    6   2          ;
        0x0C35  0x0C01  26  150    2   2          ;
        0x0C35  0x0C02  26  150    4   2          ;
        0x0C35  0x0C03  26  150    6   2          ;
        0x0C36  0x0C01  26  153    2   2          ;
        0x0C36  0x0C02  26  153    4   2          ;
        0x0C36  0x0C03  26  153    6   2          ;
        0x0C37  0x0C01  26  156    2   2          ;
        0x0C37  0x0C02  26  156    4   2          ;
        0x0C37  0x0C03  26  156    6   2          ;
        0x0C38  0x0C01  26  159    2   2          ;
        0x0C38  0x0C02  26  159    4   2          ;
        0x0C38  0x0C03  26  159    6   2          ;
        0x0C39  0x0C01  26  162    2   2          ;
        0x0C39  0x0C02  26  162    4   2          ;
        0x0C39  0x0C03  26  162    6   2          ;
        0x0C3E  0x0C01  26  165    2   2          ;
        0x0C3E  0x0C02  26  165    4   2          ;
        0x0C3E  0x0C03  26  165    6   2          ;
        0x0C3F  0x0C01  26  168    2   2          ;
        0x0C3F  0x0C02  26  168    4   2          ;
        0x0C3F  0x0C03  26  168    6   2          ;
        0x0C40  0x0C01  26  171    2   2          ;
        0x0C40  0x0C02  26  171    4   2          ;
        0x0C40  0x0C03  26  171    6   2          ;
        0x0C41  0x0C01  26  174    2   2          ;
        0x0C41  0x0C02  26  174    4   2          ;
        0x0C41  0x0C03  26  174    6   2          ;
        0x0C42  0x0C01  26  177    2   2          ;
        0x0C42  0x0C02  26  177    4   2          ;
        0x0C42  0x0C03  26  177    6   2          ;
        0x0C43  0x0C01  26  180    2   2          ;
        0x0C43  0x0C02  26  180    4   2          ;
        0x0C43  0x0C03  26  180    6   2          ;
        0x0C44  0x0C01  26  183    2   2          ;
        0x0C44  0x0C02  26  183    4   2          ;
        0x0C44  0x0C03  26  183    6   2          ;
        0x0C46  0x0C01  26  186    2   2          ;
        0x0C46  0x0C02  26  186    4   2          ;
        0x0C46  0x0C03  26  186    6   2          ;
        0x0C47  0x0C01  26  189    2   2          ;
        0x0C47  0x0C02  26  189    4   2          ;
        0x0C47  0x0C03  26  189    6   2          ;
        0x0C48  0x0C01  26  192    2   2          ;
        0x0C48  0x0C02  26  192    4   2          ;
        0x0C48  0x0C03  26  192    6   2          ;
        0x0C4A  0x0C01  26  195    2   2          ;
        0x0C4A  0x0C02  26  195    4   2          ;
        0x0C4A  0x0C03  26  195    6   2          ;
        0x0C4B  0x0C01  26  198    2   2          ;
        0x0C4B  0x0C02  26  198    4   2          ;
        0x0C4B  0x0C03  26  198    6   2          ;
        0x0C4C  0x0C01  26  201    2   2          ;
        0x0C4C  0x0C02  26  201    4   2          ;
        0x0C4C  0x0C03  26  201    6   2          ;
        0x0C60  0x0C01  26   33    2   2          ;
        0x0C60  0x0C02  26   33    4   2          ;
        0x0C60  0x0C03  26   33    6   2          ;
        0x0C61  0x0C01  26   39    2   2          ;
        0x0C61  0x0C02  26   39    4   2          ;
        0x0C61  0x0C03  26   39    6   2          ;

        0x0c85  0x0c82  27    9    2   2          ;Kannada A + Anusvara
        0x0c85  0x0c83  27    9    4   2          ;Kannada A + Visarga
        0x0c86  0x0c82  27   12    2   2          ;Kannada Aa + Anusvara
        0x0c86  0x0c83  27   12    4   2          ;Kannada Aa + Visarga
        0x0c87  0x0c82  27   15    2   2          ;Kannada I + Anusvara
        0x0c87  0x0c83  27   15    4   2          ;Kannada I + Visarga
        0x0c88  0x0c82  27   18    2   2          ;Kannada Ii + Anusvara
        0x0c88  0x0c83  27   18    4   2          ;Kannada Ii + Visarga
        0x0c89  0x0c82  27   21    2   2          ;Kannada U + Anusvara
        0x0c89  0x0c83  27   21    4   2          ;Kannada U + Visarga
        0x0c8a  0x0c82  27   24    2   2          ;Kannada Uu + Anusvara
        0x0c8a  0x0c83  27   24    4   2          ;Kannada Uu + Visarga
        0x0c8b  0x0c82  27   27    2   2          ;Kannada Vocalic R + Anusvara
        0x0c8b  0x0c83  27   27    4   2          ;Kannada Vocalic R + Visarga
        0x0c8c  0x0c82  27   30    2   2          ;Kannada Vocalic L + Anusvara
        0x0c8c  0x0c83  27   30    4   2          ;Kannada Vocalic L + Visarga
        0x0c8e  0x0c82  27   33    2   2          ;Kannada E + Anusvara
        0x0c8e  0x0c83  27   33    4   2          ;Kannada E + Visarga
        0x0c8f  0x0c82  27   36    2   2          ;Kannada Ee + Anusvara
        0x0c8f  0x0c83  27   36    4   2          ;Kannada Ee + Visarga
        0x0c90  0x0c82  27   39    2   2          ;Kannada Ai + Anusvara
        0x0c90  0x0c83  27   39    4   2          ;Kannada Ai + Visarga
        0x0c92  0x0c82  27   42    2   2          ;Kannada O + Anusvara
        0x0c92  0x0c83  27   42    4   2          ;Kannada O + Visarga
        0x0c93  0x0c82  27   45    2   2          ;Kannada Oo + Anusvara
        0x0c93  0x0c83  27   45    4   2          ;Kannada Oo + Visarga
        0x0c94  0x0c82  27   48    2   2          ;Kannada Au + Anusvara
        0x0c94  0x0c83  27   48    4   2          ;Kannada Au + Visarga
        0x0c95  0x0c82  27   51    2   2          ;Kannada Ka + Anusvara
        0x0c95  0x0c83  27   51    4   2          ;Kannada Ka + Visarga
        0x0c96  0x0c82  27   54    2   2          ;Kannada Kha + Anusvara
        0x0c96  0x0c83  27   54    4   2          ;Kannada Kha + Visarga
        0x0c97  0x0c82  27   57    2   2          ;Kannada Ga + Anusvara
        0x0c97  0x0c83  27   57    4   2          ;Kannada Ga + Visarga
        0x0c98  0x0c82  27   60    2   2          ;Kannada Gha + Anusvara
        0x0c98  0x0c83  27   60    4   2          ;Kannada Gha + Visarga
        0x0c99  0x0c82  27   63    2   2          ;Kannada Nga + Anusvara
        0x0c99  0x0c83  27   63    4   2          ;Kannada Nga + Visarga
        0x0c9a  0x0c82  27   66    2   2          ;Kannada Ca + Anusvara
        0x0c9a  0x0c83  27   66    4   2          ;Kannada Ca + Visarga
        0x0c9b  0x0c82  27   69    2   2          ;Kannada Cha + Anusvara
        0x0c9b  0x0c83  27   69    4   2          ;Kannada Cha + Visarga
        0x0c9c  0x0c82  27   72    2   2          ;Kannada Ja + Anusvara
        0x0c9c  0x0c83  27   72    4   2          ;Kannada Ja + Visarga
        0x0c9d  0x0c82  27   75    2   2          ;Kannada Jha + Anusvara
        0x0c9d  0x0c83  27   75    4   2          ;Kannada Jha + Visarga
        0x0c9e  0x0c82  27   78    2   2          ;Kannada Nya + Anusvara
        0x0c9e  0x0c83  27   78    4   2          ;Kannada Nya + Visarga
        0x0c9f  0x0c82  27   81    2   2          ;Kannada Tta + Anusvara
        0x0c9f  0x0c83  27   81    4   2          ;Kannada Tta + Visarga
        0x0ca0  0x0c82  27   84    2   2          ;Kannada Ttha + Anusvara
        0x0ca0  0x0c83  27   84    4   2          ;Kannada Ttha + Visarga
        0x0ca1  0x0c82  27   87    2   2          ;Kannada Dda + Anusvara
        0x0ca1  0x0c83  27   87    4   2          ;Kannada Dda + Visarga
        0x0ca2  0x0c82  27   90    2   2          ;Kannada Ddha + Anusvara
        0x0ca2  0x0c83  27   90    4   2          ;Kannada Ddha + Visarga
        0x0ca3  0x0c82  27   93    2   2          ;Kannada Nna + Anusvara
        0x0ca3  0x0c83  27   93    4   2          ;Kannada Nna + Visarga
        0x0ca4  0x0c82  27   96    2   2          ;Kannada Ta + Anusvara
        0x0ca4  0x0c83  27   96    4   2          ;Kannada Ta + Visarga
        0x0ca5  0x0c82  27   99    2   2          ;Kannada Tha + Anusvara
        0x0ca5  0x0c83  27   99    4   2          ;Kannada Tha + Visarga
        0x0ca6  0x0c82  27  102    2   2          ;Kannada Da + Anusvara
        0x0ca6  0x0c83  27  102    4   2          ;Kannada Da + Visarga
        0x0ca7  0x0c82  27  105    2   2          ;Kannada Dha + Anusvara
        0x0ca7  0x0c83  27  105    4   2          ;Kannada Dha + Visarga
        0x0ca8  0x0c82  27  108    2   2          ;Kannada Na + Anusvara
        0x0ca8  0x0c83  27  108    4   2          ;Kannada Na + Visarga
        0x0caa  0x0c82  27  111    2   2          ;Kannada Pa + Anusvara
        0x0caa  0x0c83  27  111    4   2          ;Kannada Pa + Visarga
        0x0cab  0x0c82  27  114    2   2          ;Kannada Pha + Anusvara
        0x0cab  0x0c83  27  114    4   2          ;Kannada Pha + Visarga
        0x0cac  0x0c82  27  117    2   2          ;Kannada Ba + Anusvara
        0x0cac  0x0c83  27  117    4   2          ;Kannada Ba + Visarga
        0x0cad  0x0c82  27  120    2   2          ;Kannada Bha + Anusvara
        0x0cad  0x0c83  27  120    4   2          ;Kannada Bha + Visarga
        0x0cae  0x0c82  27  123    2   2          ;Kannada Ma + Anusvara
        0x0cae  0x0c83  27  123    4   2          ;Kannada Ma + Visarga
        0x0caf  0x0c82  27  126    2   2          ;Kannada Ya + Anusvara
        0x0caf  0x0c83  27  126    4   2          ;Kannada Ya + Visarga
        0x0cb0  0x0c82  27  129    2   2          ;Kannada Ra + Anusvara
        0x0cb0  0x0c83  27  129    4   2          ;Kannada Ra + Visarga
        0x0ce0  0x0c82  27  129    6   2          ;Kannada Vocalic Rr + Anusvara
        0x0ce0  0x0c83  27  129    8   2          ;Kannada Vocalic Rr + Visarga
        0x0cb2  0x0c82  27  132    2   2          ;Kannada La + Anusvara
        0x0cb2  0x0c83  27  132    4   2          ;Kannada La + Visarga
        0x0ce1  0x0c82  27  135    2   2          ;Kannada Vocalic Ll + Anusvara
        0x0ce1  0x0c83  27  135    4   2          ;Kannada Vocalic Ll + Visarga
        0x0cb5  0x0c82  27  138    2   2          ;Kannada Va + Anusvara
        0x0cb5  0x0c83  27  138    4   2          ;Kannada Va + Visarga
        0x0cb6  0x0c82  27  141    2   2          ;Kannada Sha + Anusvara
        0x0cb6  0x0c83  27  141    4   2          ;Kannada Sha + Visarga
        0x0cb7  0x0c82  27  144    2   2          ;Kannada Ssa + Anusvara
        0x0cb7  0x0c83  27  144    4   2          ;Kannada Ssa + Visarga
        0x0cb8  0x0c82  27  147    2   2          ;Kannada Sa + Anusvara
        0x0cb8  0x0c83  27  147    4   2          ;Kannada Sa + Visarga
        0x0cb9  0x0c82  27  150    2   2          ;Kannada Ha + Anusvara
        0x0cb9  0x0c83  27  150    4   2          ;Kannada Ha + Visarga
        0x0cb1  0x0c82  27  153    2   2          ;Kannada Rra + Anusvara
        0x0cb1  0x0c83  27  153    4   2          ;Kannada Rra + Visarga
        0x0cb3  0x0c82  27  156    2   2          ;Kannada Lla + Anusvara
        0x0cb3  0x0c83  27  156    4   2          ;Kannada Lla + Visarga
        0x0cde  0x0c82  27  159    2   2          ;Kannada Fa + Anusvara
        0x0cde  0x0c83  27  159    4   2          ;Kannada Fa + Visarga
        0x0C95  0x0CB6  27  161    6   2          ;Kannada Ka + Sha
        0x0cbe  0x0c82  27  162    2   2          ;Kannada Vowel Sign Aa + Anusvara
        0x0cbe  0x0c83  27  162    4   2          ;Kannada Vowel Sign Aa + Visarga
        0x0cbf  0x0c82  27  165    2   2          ;Kannada Vowel Sign I + Anusvara
        0x0cbf  0x0c83  27  165    4   2          ;Kannada Vowel Sign I + Visarga
        0x0cc0  0x0c82  27  168    2   2          ;Kannada Vowel Sign Ii + Anusvara
        0x0cc0  0x0c83  27  168    4   2          ;Kannada Vowel Sign Ii + Visarga
        0x0cc1  0x0c82  27  171    2   2          ;Kannada Vowel Sign U + Anusvara
        0x0cc1  0x0c83  27  171    4   2          ;Kannada Vowel Sign U + Visarga
        0x0cc2  0x0c82  27  174    2   2          ;Kannada Vowel Sign Uu + Anusvara
        0x0cc2  0x0c83  27  174    4   2          ;Kannada Vowel Sign Uu + Visarga
        0x0cc3  0x0c82  27  177    2   2          ;Kannada Vowel Sign Vocalic R + Anusvara
        0x0cc3  0x0c83  27  177    4   2          ;Kannada Vowel Sign Vocalic R + Visarga
        0x0cc4  0x0c82  27  180    2   2          ;Kannada Vowel Sign Vocalic Rr + Anusvara
        0x0cc4  0x0c83  27  180    4   2          ;Kannada Vowel Sign Vocalic Rr + Visarga
        0x0cc6  0x0c82  27  183    2   2          ;Kannada Vowel Sign E + Anusvara
        0x0cc6  0x0c83  27  183    4   2          ;Kannada Vowel Sign E + Visarga
        0x0cc7  0x0c82  27  186    2   2          ;Kannada Vowel Sign Ee + Anusvara
        0x0cc7  0x0c83  27  186    4   2          ;Kannada Vowel Sign Ee + Visarga
        0x0cc8  0x0c82  27  189    2   2          ;Kannada Vowel Sign Ai + Anusvara
        0x0cc8  0x0c83  27  189    4   2          ;Kannada Vowel Sign Ai + Visarga
        0x0cca  0x0c82  27  192    2   2          ;Kannada Vowel Sign O + Anusvara
        0x0cca  0x0c83  27  192    4   2          ;Kannada Vowel Sign O + Visarga
        0x0ccb  0x0c82  27  195    2   2          ;Kannada Vowel Sign Oo + Anusvara
        0x0ccb  0x0c83  27  195    4   2          ;Kannada Vowel Sign Oo + Visarga
        0x0ccc  0x0c82  27  198    2   2          ;Kannada Vowel Sign Au + Anusvara
        0x0ccc  0x0c83  27  198    4   2          ;Kannada Vowel Sign Au + Visarga

        0x0a3c  0x0a4d   1    0    5   0          ;Gurmukhi Nukta + Virama
        0x0a4d  0x0a71   1    0    7   0          ;Gurmukhi Virama + Addak
        0x0a3c  0x0a71   1    0    8   0          ;Gurmukhi Nukta + Addak
        0x0a4d  0x0a02   1    0   11   0          ;Gurmukhi Virama + Bindi
        0x0a3c  0x0a02   1    0   12   0          ;Gurmukhi Nukta + Bindi
        0x0a4d  0x0a70   1    0   15   0          ;Gurmukhi Virama + Tippi
        0x0a3c  0x0a70   1    0   16   0          ;Gurmukhi Nukta + Tippi
        0x0a38  0x0a3c  22   56    2  18          ;Gurmukhi Sa + Nukta
        0x0a39  0x0a3c  22   60    2  18          ;Gurmukhi Ha + Nukta
        0x0a15  0x0a3c  22   64    2  18          ;Gurmukhi Ka + Nukta
        0x0a16  0x0a3c  22   68    2  18          ;Gurmukhi Kha + Nukta
        0x0a17  0x0a3c  22   72    2  18          ;Gurmukhi Ga + Nukta
        0x0a18  0x0a3c  22   76    2  18          ;Gurmukhi Gha + Nukta
        0x0a19  0x0a3c  22   80    2  18          ;Gurmukhi Nga + Nukta
        0x0a1a  0x0a3c  22   84    2  18          ;Gurmukhi Ca + Nukta
        0x0a1b  0x0a3c  22   88    2  18          ;Gurmukhi Cha + Nukta
        0x0a1c  0x0a3c  22   92    2  18          ;Gurmukhi Ja + Nukta
        0x0a1d  0x0a3c  22   96    2  18          ;Gurmukhi Jha + Nukta
        0x0a1e  0x0a3c  22  100    2  18          ;Gurmukhi Nya + Nukta
        0x0a1f  0x0a3c  22  104    2  18          ;Gurmukhi Tta + Nukta
        0x0a20  0x0a3c  22  108    2  18          ;Gurmukhi Ttha + Nukta
        0x0a21  0x0a3c  22  112    2  18          ;Gurmukhi Dda + Nukta
        0x0a22  0x0a3c  22  116    2  18          ;Gurmukhi Ddha + Nukta
        0x0a23  0x0a3c  22  120    2  18          ;Gurmukhi Nna + Nukta
        0x0a24  0x0a3c  22  124    2  18          ;Gurmukhi Ta + Nukta
        0x0a25  0x0a3c  22  128    2  18          ;Gurmukhi Tha + Nukta
        0x0a26  0x0a3c  22  132    2  18          ;Gurmukhi Da + Nukta
        0x0a27  0x0a3c  22  136    2  18          ;Gurmukhi Dha + Nukta
        0x0a28  0x0a3c  22  140    2  18          ;Gurmukhi Na + Nukta
        0x0a2a  0x0a3c  22  144    2  18          ;Gurmukhi Pa + Nukta
        0x0a2b  0x0a3c  22  148    2  18          ;Gurmukhi Pha + Nukta
        0x0a2c  0x0a3c  22  152    2  18          ;Gurmukhi Ba + Nukta
        0x0a2d  0x0a3c  22  156    2  18          ;Gurmukhi Bha + Nukta
        0x0a2e  0x0a3c  22  160    2  18          ;Gurmukhi Ma + Nukta
        0x0a2f  0x0a3c  22  164    2  18          ;Gurmukhi Ya + Nukta
        0x0a30  0x0a3c  22  168    2  18          ;Gurmukhi Ra + Nukta
        0x0a32  0x0a3c  22  172    2  18          ;Gurmukhi La + Nukta
        0x0a35  0x0a3c  22  176    2  18          ;Gurmukhi Va + Nukta
        0x0a5c  0x0a3c  22  180    2  18          ;Gurmukhi Rra + Nukta
        0x0a33  0x0a3c  22  184    2  18          ;Gurmukhi Lla + Nukta
        0x0a36  0x0a3c  22  188    2  18          ;Gurmukhi Sha + Nukta
        0x0a73  0x0a41  22   12    2   5          ;Gurmukhi U (0a09 equivalent)
        0x0a73  0x0a42  22   16    2   5          ;Gurmukhi Uu ( 0a0a equivalent)
        0x0a73  0x0a4b  22   20    2   5          ;Gurmukhi Oo ( 0a13 equivalent)
        0x0a05  0x0a3e  22   28    2   5          ;Gurmukhi Aa (0a06 equivalent)
        0x0a05  0x0a3f  22   32    2   5          ;Gurmukhi Ai (0a10 equivalent)
        0x0a05  0x0a4c  22   36    2   5          ;Gurmukhi Au (0a14 equivalent)
        0x0a72  0x0a3f  22   44    2   5          ;Gurmukhi I (0a07 equivalent)
        0x0a72  0x0a40  22   48    2   5          ;Gurmukhi Ii (0a80 equivalent)
        0x0a72  0x0a47  22   52    2   5          ;Gurmukhi Ee (0a0f equivalent)

      THREE  7

        0x0b95  0x0bcd  0x0bb7  25  122    2   2  ;Tamil Letter Ka + Virama + Ssa = Ksha
        0x0bb7  0x0bcd  0x0bb0  25  128    2   2  ;Tamil Letter Ssa + Virma + Ra + Ii = Shri
        0x0C95  0x0CB6  0x0c82  27  161    2   2  ;Kannada Ka + Sha + Anusvara
        0x0C95  0x0CB6  0x0c83  27  161    4   2  ;Kannada Ka + Sha + Visarga
        0x0a3c  0x0a4d  0x0a71   1    0    9   0  ;Gurmukhi Nukta + Virama + Addak
        0x0a3c  0x0a4d  0x0a02   1    0   13   0  ;Gurmukhi Nukta + Virama + Bindi
        0x0a3c  0x0a4d  0x0a70   1    0   17   0  ;Gurmukhi Nukta + Virama + Tippi


    JAMOSORT    395     ; The following data is generated from an automated tool. Do not hand edit this table.
        0x1100      2
            0x1100 0x00 0x00 0x00 0x00 0x03  0x01  ; U+1100
            0x1103 0x01 0x01 0x14 0x1b 0x05  0x00  ; U+1100,1103
        0x1101      1
            0x1101 0x00 0x01 0x00 0x00 0x04  0x00  ; U+1101
        0x1102      4
            0x1102 0x00 0x02 0x00 0x00 0x06  0x03  ; U+1102
            0x1109 0x01 0x02 0x14 0x1b 0x0b  0x00  ; U+1102,1109
            0x110c 0x01 0x02 0x14 0x1b 0x0c  0x00  ; U+1102,110c
            0x1112 0x01 0x02 0x14 0x1b 0x0d  0x00  ; U+1102,1112
        0x1103      6
            0x1103 0x00 0x03 0x00 0x00 0x0e  0x05  ; U+1103
            0x1105 0x01 0x04 0x14 0x1b 0x11  0x00  ; U+1103,1105
            0x1106 0x01 0x04 0x14 0x1b 0x12  0x00  ; U+1103,1106
            0x1107 0x01 0x04 0x14 0x1b 0x13  0x00  ; U+1103,1107
            0x1109 0x01 0x04 0x14 0x1b 0x14  0x00  ; U+1103,1109
            0x110c 0x01 0x04 0x14 0x1b 0x15  0x00  ; U+1103,110c
        0x1104      1
            0x1104 0x00 0x04 0x00 0x00 0x10  0x00  ; U+1104
        0x1105      12
            0x1105 0x00 0x05 0x00 0x00 0x16  0x0b  ; U+1105
            0x1100 0x01 0x05 0x14 0x1b 0x17  0x01  ; U+1105,1100
            0x1100 0x01 0x05 0x14 0x1b 0x18  0x00  ; U+1105,1100,1100
            0x1103 0x01 0x05 0x14 0x1b 0x1a  0x01  ; U+1105,1103
            0x1103 0x01 0x05 0x14 0x1b 0x1b  0x00  ; U+1105,1103,1103
            0x1106 0x01 0x05 0x14 0x1b 0x1d  0x00  ; U+1105,1106
            0x1107 0x01 0x05 0x14 0x1b 0x1e  0x01  ; U+1105,1107
            0x1107 0x01 0x05 0x14 0x1b 0x1f  0x00  ; U+1105,1107,1107
            0x1109 0x01 0x05 0x14 0x1b 0x21  0x00  ; U+1105,1109
            0x110c 0x01 0x05 0x14 0x1b 0x22  0x00  ; U+1105,110c
            0x110f 0x01 0x05 0x14 0x1b 0x23  0x00  ; U+1105,110f
            0x112b 0x01 0x05 0x14 0x1b 0x20  0x00  ; U+1105,112b
        0x1106      4
            0x1106 0x00 0x06 0x00 0x00 0x26  0x03  ; U+1106
            0x1100 0x01 0x06 0x14 0x1b 0x27  0x00  ; U+1106,1100
            0x1103 0x01 0x06 0x14 0x1b 0x28  0x00  ; U+1106,1103
            0x1109 0x01 0x06 0x14 0x1b 0x2a  0x00  ; U+1106,1109
        0x1107      5
            0x1107 0x00 0x07 0x00 0x00 0x2c  0x04  ; U+1107
            0x1109 0x01 0x00 0x00 0x00 0x00  0x01  ; U+1107,1109
            0x1110 0x01 0x08 0x14 0x1b 0x37  0x00  ; U+1107,1109,1110
            0x110f 0x01 0x08 0x14 0x1b 0x3a  0x00  ; U+1107,110f
            0x1112 0x01 0x08 0x14 0x1b 0x3d  0x00  ; U+1107,1112
        0x1108      1
            0x1108 0x00 0x08 0x00 0x00 0x30  0x00  ; U+1108
        0x1109      3
            0x1109 0x00 0x09 0x00 0x00 0x40  0x02  ; U+1109
            0x1109 0x01 0x00 0x00 0x00 0x00  0x01  ; U+1109,1109
            0x1107 0x01 0x0a 0x14 0x1b 0x49  0x00  ; U+1109,1109,1107
        0x110a      1
            0x110a 0x00 0x0a 0x00 0x00 0x48  0x00  ; U+110a
        0x110b      3
            0x110b 0x00 0x0b 0x00 0x00 0x57  0x02  ; U+110b
            0x1105 0x01 0x0b 0x14 0x1b 0x5a  0x00  ; U+110b,1105
            0x1112 0x01 0x0b 0x14 0x1b 0x64  0x00  ; U+110b,1112
        0x110c      3
            0x110c 0x00 0x0c 0x00 0x00 0x66  0x02  ; U+110c
            0x110c 0x01 0x00 0x00 0x00 0x00  0x01  ; U+110c,110c
            0x1112 0x01 0x0d 0x14 0x1b 0x69  0x00  ; U+110c,110c,1112
        0x110d      1
            0x110d 0x00 0x0d 0x00 0x00 0x68  0x00  ; U+110d
        0x110e      1
            0x110e 0x00 0x0e 0x00 0x00 0x6e  0x00  ; U+110e
        0x110f      1
            0x110f 0x00 0x0f 0x00 0x00 0x73  0x00  ; U+110f
        0x1110      2
            0x1110 0x00 0x10 0x00 0x00 0x74  0x01  ; U+1110
            0x1110 0x01 0x10 0x14 0x1b 0x75  0x00  ; U+1110,1110
        0x1111      2
            0x1111 0x00 0x11 0x00 0x00 0x76  0x01  ; U+1111
            0x1112 0x01 0x11 0x14 0x1b 0x78  0x00  ; U+1111,1112
        0x1112      2
            0x1112 0x00 0x12 0x00 0x00 0x7a  0x01  ; U+1112
            0x1109 0x01 0x12 0x14 0x1b 0x7b  0x00  ; U+1112,1109
        0x1113      1
            0x1113 0x01 0x02 0x14 0x1b 0x07  0x00  ; U+1113
        0x1114      1
            0x1114 0x01 0x02 0x14 0x1b 0x08  0x00  ; U+1114
        0x1115      1
            0x1115 0x01 0x02 0x14 0x1b 0x09  0x00  ; U+1115
        0x1116      1
            0x1116 0x01 0x02 0x14 0x1b 0x0a  0x00  ; U+1116
        0x1117      1
            0x1117 0x01 0x03 0x14 0x1b 0x0f  0x00  ; U+1117
        0x1118      1
            0x1118 0x01 0x05 0x14 0x1b 0x19  0x00  ; U+1118
        0x1119      1
            0x1119 0x01 0x05 0x14 0x1b 0x1c  0x00  ; U+1119
        0x111a      1
            0x111a 0x01 0x05 0x14 0x1b 0x24  0x00  ; U+111a
        0x111b      1
            0x111b 0x01 0x05 0x14 0x1b 0x25  0x00  ; U+111b
        0x111c      1
            0x111c 0x01 0x06 0x14 0x1b 0x29  0x00  ; U+111c
        0x111d      1
            0x111d 0x01 0x06 0x14 0x1b 0x2b  0x00  ; U+111d
        0x111e      1
            0x111e 0x01 0x07 0x14 0x1b 0x2d  0x00  ; U+111e
        0x111f      1
            0x111f 0x01 0x07 0x14 0x1b 0x2e  0x00  ; U+111f
        0x1120      1
            0x1120 0x01 0x07 0x14 0x1b 0x2f  0x00  ; U+1120
        0x1121      1
            0x1121 0x01 0x08 0x14 0x1b 0x31  0x00  ; U+1121
        0x1122      1
            0x1122 0x01 0x08 0x14 0x1b 0x32  0x00  ; U+1122
        0x1123      1
            0x1123 0x01 0x08 0x14 0x1b 0x33  0x00  ; U+1123
        0x1124      1
            0x1124 0x01 0x08 0x14 0x1b 0x34  0x00  ; U+1124
        0x1125      1
            0x1125 0x01 0x08 0x14 0x1b 0x35  0x00  ; U+1125
        0x1126      1
            0x1126 0x01 0x08 0x14 0x1b 0x36  0x00  ; U+1126
        0x1127      1
            0x1127 0x01 0x08 0x14 0x1b 0x38  0x00  ; U+1127
        0x1128      1
            0x1128 0x01 0x08 0x14 0x1b 0x39  0x00  ; U+1128
        0x1129      1
            0x1129 0x01 0x08 0x14 0x1b 0x3b  0x00  ; U+1129
        0x112a      1
            0x112a 0x01 0x08 0x14 0x1b 0x3c  0x00  ; U+112a
        0x112b      1
            0x112b 0x01 0x08 0x14 0x1b 0x3e  0x00  ; U+112b
        0x112c      1
            0x112c 0x01 0x08 0x14 0x1b 0x3f  0x00  ; U+112c
        0x112d      1
            0x112d 0x01 0x09 0x14 0x1b 0x41  0x00  ; U+112d
        0x112e      1
            0x112e 0x01 0x09 0x14 0x1b 0x42  0x00  ; U+112e
        0x112f      1
            0x112f 0x01 0x09 0x14 0x1b 0x43  0x00  ; U+112f
        0x1130      1
            0x1130 0x01 0x09 0x14 0x1b 0x44  0x00  ; U+1130
        0x1131      1
            0x1131 0x01 0x09 0x14 0x1b 0x45  0x00  ; U+1131
        0x1132      1
            0x1132 0x01 0x09 0x14 0x1b 0x46  0x00  ; U+1132
        0x1133      1
            0x1133 0x01 0x09 0x14 0x1b 0x47  0x00  ; U+1133
        0x1134      1
            0x1134 0x01 0x0a 0x14 0x1b 0x4a  0x00  ; U+1134
        0x1135      1
            0x1135 0x01 0x0a 0x14 0x1b 0x4b  0x00  ; U+1135
        0x1136      1
            0x1136 0x01 0x0a 0x14 0x1b 0x4c  0x00  ; U+1136
        0x1137      1
            0x1137 0x01 0x0a 0x14 0x1b 0x4d  0x00  ; U+1137
        0x1138      1
            0x1138 0x01 0x0a 0x14 0x1b 0x4e  0x00  ; U+1138
        0x1139      1
            0x1139 0x01 0x0a 0x14 0x1b 0x4f  0x00  ; U+1139
        0x113a      1
            0x113a 0x01 0x0a 0x14 0x1b 0x50  0x00  ; U+113a
        0x113b      1
            0x113b 0x01 0x0a 0x14 0x1b 0x51  0x00  ; U+113b
        0x113c      1
            0x113c 0x01 0x0a 0x14 0x1b 0x52  0x00  ; U+113c
        0x113d      1
            0x113d 0x01 0x0a 0x14 0x1b 0x53  0x00  ; U+113d
        0x113e      1
            0x113e 0x01 0x0a 0x14 0x1b 0x54  0x00  ; U+113e
        0x113f      1
            0x113f 0x01 0x0a 0x14 0x1b 0x55  0x00  ; U+113f
        0x1140      1
            0x1140 0x01 0x0a 0x14 0x1b 0x56  0x00  ; U+1140
        0x1141      1
            0x1141 0x01 0x0b 0x14 0x1b 0x58  0x00  ; U+1141
        0x1142      1
            0x1142 0x01 0x0b 0x14 0x1b 0x59  0x00  ; U+1142
        0x1143      1
            0x1143 0x01 0x0b 0x14 0x1b 0x5b  0x00  ; U+1143
        0x1144      1
            0x1144 0x01 0x0b 0x14 0x1b 0x5c  0x00  ; U+1144
        0x1145      1
            0x1145 0x01 0x0b 0x14 0x1b 0x5d  0x00  ; U+1145
        0x1146      1
            0x1146 0x01 0x0b 0x14 0x1b 0x5e  0x00  ; U+1146
        0x1147      1
            0x1147 0x01 0x0b 0x14 0x1b 0x5f  0x00  ; U+1147
        0x1148      1
            0x1148 0x01 0x0b 0x14 0x1b 0x60  0x00  ; U+1148
        0x1149      1
            0x1149 0x01 0x0b 0x14 0x1b 0x61  0x00  ; U+1149
        0x114a      1
            0x114a 0x01 0x0b 0x14 0x1b 0x62  0x00  ; U+114a
        0x114b      1
            0x114b 0x01 0x0b 0x14 0x1b 0x63  0x00  ; U+114b
        0x114c      1
            0x114c 0x01 0x0b 0x14 0x1b 0x65  0x00  ; U+114c
        0x114d      1
            0x114d 0x01 0x0c 0x14 0x1b 0x67  0x00  ; U+114d
        0x114e      1
            0x114e 0x01 0x0d 0x14 0x1b 0x6a  0x00  ; U+114e
        0x114f      1
            0x114f 0x01 0x0d 0x14 0x1b 0x6b  0x00  ; U+114f
        0x1150      1
            0x1150 0x01 0x0d 0x14 0x1b 0x6c  0x00  ; U+1150
        0x1151      1
            0x1151 0x01 0x0d 0x14 0x1b 0x6d  0x00  ; U+1151
        0x1152      1
            0x1152 0x01 0x0e 0x14 0x1b 0x6f  0x00  ; U+1152
        0x1153      1
            0x1153 0x01 0x0e 0x14 0x1b 0x70  0x00  ; U+1153
        0x1154      1
            0x1154 0x01 0x0e 0x14 0x1b 0x71  0x00  ; U+1154
        0x1155      1
            0x1155 0x01 0x0e 0x14 0x1b 0x72  0x00  ; U+1155
        0x1156      1
            0x1156 0x01 0x11 0x14 0x1b 0x77  0x00  ; U+1156
        0x1157      1
            0x1157 0x01 0x11 0x14 0x1b 0x79  0x00  ; U+1157
        0x1158      1
            0x1158 0x01 0x12 0x14 0x1b 0x7c  0x00  ; U+1158
        0x1159      2
            0x1159 0x01 0x12 0x14 0x1b 0x7d  0x01  ; U+1159
            0x1159 0x01 0x12 0x14 0x1b 0x7e  0x00  ; U+1159,1159
        0x115a      1
            0x115a 0x00 0x00 0x00 0x00 0x00  0x00  ; U+115a
        0x115b      1
            0x115b 0x00 0x00 0x00 0x00 0x00  0x00  ; U+115b
        0x115c      1
            0x115c 0x00 0x00 0x00 0x00 0x00  0x00  ; U+115c
        0x115d      1
            0x115d 0x00 0x00 0x00 0x00 0x00  0x00  ; U+115d
        0x115e      1
            0x115e 0x00 0x00 0x00 0x00 0x00  0x00  ; U+115e
        0x115f      1
            0x115f 0x01 0x12 0x14 0x1b 0x7f  0x00  ; U+115f
        0x1160      1
            0x1160 0x01 0x00 0x00 0x00 0x03  0x00  ; U+1160
        0x1161      2
            0x1161 0x00 0x00 0x00 0x00 0x03  0x01  ; U+1161  ----- First Vowel Jamo
            0x1173 0x01 0x00 0x00 0x1b 0x06  0x00  ; U+1161,1173
        0x1162      1
            0x1162 0x00 0x00 0x01 0x00 0x07  0x00  ; U+1162
        0x1163      2
            0x1163 0x00 0x00 0x02 0x00 0x08  0x01  ; U+1163
            0x116e 0x01 0x00 0x02 0x1b 0x0b  0x00  ; U+1163,116e
        0x1164      1
            0x1164 0x00 0x00 0x03 0x00 0x0c  0x00  ; U+1164
        0x1165      1
            0x1165 0x00 0x00 0x04 0x00 0x0d  0x00  ; U+1165
        0x1166      1
            0x1166 0x00 0x00 0x05 0x00 0x11  0x00  ; U+1166
        0x1167      2
            0x1167 0x00 0x00 0x06 0x00 0x12  0x01  ; U+1167
            0x1163 0x01 0x00 0x06 0x1b 0x13  0x00  ; U+1167,1163
        0x1168      1
            0x1168 0x00 0x00 0x07 0x00 0x16  0x00  ; U+1168
        0x1169      6
            0x1169 0x00 0x00 0x08 0x00 0x17  0x05  ; U+1169
            0x1163 0x01 0x00 0x0a 0x1b 0x1a  0x01  ; U+1169,1163
            0x1175 0x01 0x00 0x0a 0x1b 0x1b  0x00  ; U+1169,1163,1175
            0x1167 0x01 0x00 0x0a 0x1b 0x1e  0x00  ; U+1169,1167
            0x1169 0x01 0x00 0x00 0x00 0x00  0x01  ; U+1169,1169
            0x1175 0x01 0x00 0x0a 0x1b 0x21  0x00  ; U+1169,1169,1175
        0x116a      1
            0x116a 0x00 0x00 0x09 0x00 0x18  0x00  ; U+116a
        0x116b      1
            0x116b 0x00 0x00 0x0a 0x00 0x19  0x00  ; U+116b
        0x116c      1
            0x116c 0x00 0x00 0x0b 0x00 0x23  0x00  ; U+116c
        0x116d      4
            0x116d 0x00 0x00 0x0c 0x00 0x24  0x03  ; U+116d
            0x1161 0x01 0x00 0x0c 0x1b 0x25  0x01  ; U+116d,1161
            0x1175 0x01 0x00 0x0c 0x1b 0x26  0x00  ; U+116d,1161,1175
            0x1165 0x01 0x00 0x0c 0x1b 0x29  0x00  ; U+116d,1165
        0x116e      4
            0x116e 0x00 0x00 0x0d 0x00 0x2d  0x03  ; U+116e
            0x1167 0x01 0x00 0x0f 0x1b 0x33  0x00  ; U+116e,1167
            0x1175 0x01 0x00 0x00 0x00 0x00  0x01  ; U+116e,1175
            0x1175 0x01 0x00 0x10 0x1b 0x37  0x00  ; U+116e,1175,1175
        0x116f      1
            0x116f 0x00 0x00 0x0e 0x00 0x30  0x00  ; U+116f
        0x1170      1
            0x1170 0x00 0x00 0x0f 0x00 0x32  0x00  ; U+1170
        0x1171      1
            0x1171 0x00 0x00 0x10 0x00 0x36  0x00  ; U+1171
        0x1172      4
            0x1172 0x00 0x00 0x11 0x00 0x38  0x03  ; U+1172
            0x1161 0x01 0x00 0x00 0x00 0x00  0x01  ; U+1172,1161
            0x1175 0x01 0x00 0x11 0x1b 0x3a  0x00  ; U+1172,1161,1175
            0x1169 0x01 0x00 0x11 0x1b 0x3f  0x00  ; U+1172,1169
        0x1173      5
            0x1173 0x00 0x00 0x12 0x00 0x42  0x04  ; U+1173
            0x1161 0x01 0x00 0x12 0x1b 0x43  0x00  ; U+1173,1161
            0x1165 0x01 0x00 0x12 0x1b 0x44  0x01  ; U+1173,1165
            0x1175 0x01 0x00 0x12 0x1b 0x45  0x00  ; U+1173,1165,1175
            0x1169 0x01 0x00 0x12 0x1b 0x46  0x00  ; U+1173,1169
        0x1174      1
            0x1174 0x00 0x00 0x13 0x00 0x49  0x00  ; U+1174
        0x1175      11
            0x1175 0x00 0x00 0x14 0x00 0x4b  0x0a  ; U+1175
            0x1163 0x01 0x00 0x00 0x00 0x00  0x02  ; U+1175,1163
            0x1169 0x01 0x00 0x14 0x1b 0x4e  0x00  ; U+1175,1163,1169
            0x1175 0x01 0x00 0x14 0x1b 0x4f  0x00  ; U+1175,1163,1175
            0x1167 0x01 0x00 0x14 0x1b 0x50  0x01  ; U+1175,1167
            0x1175 0x01 0x00 0x14 0x1b 0x51  0x00  ; U+1175,1167,1175
            0x1169 0x01 0x00 0x00 0x00 0x00  0x01  ; U+1175,1169
            0x1175 0x01 0x00 0x14 0x1b 0x53  0x00  ; U+1175,1169,1175
            0x116d 0x01 0x00 0x14 0x1b 0x54  0x00  ; U+1175,116d
            0x1172 0x01 0x00 0x14 0x1b 0x56  0x00  ; U+1175,1172
            0x1175 0x01 0x00 0x14 0x1b 0x58  0x00  ; U+1175,1175
        0x1176      1
            0x1176 0x01 0x00 0x00 0x1b 0x04  0x00  ; U+1176
        0x1177      1
            0x1177 0x01 0x00 0x00 0x1b 0x05  0x00  ; U+1177
        0x1178      1
            0x1178 0x01 0x00 0x02 0x1b 0x09  0x00  ; U+1178
        0x1179      1
            0x1179 0x01 0x00 0x02 0x1b 0x0a  0x00  ; U+1179
        0x117a      1
            0x117a 0x01 0x00 0x04 0x1b 0x0e  0x00  ; U+117a
        0x117b      1
            0x117b 0x01 0x00 0x04 0x1b 0x0f  0x00  ; U+117b
        0x117c      1
            0x117c 0x01 0x00 0x04 0x1b 0x10  0x00  ; U+117c
        0x117d      1
            0x117d 0x01 0x00 0x06 0x1b 0x14  0x00  ; U+117d
        0x117e      1
            0x117e 0x01 0x00 0x06 0x1b 0x15  0x00  ; U+117e
        0x117f      1
            0x117f 0x01 0x00 0x0a 0x1b 0x1c  0x00  ; U+117f
        0x1180      1
            0x1180 0x01 0x00 0x0a 0x1b 0x1d  0x00  ; U+1180
        0x1181      1
            0x1181 0x01 0x00 0x0a 0x1b 0x1f  0x00  ; U+1181
        0x1182      1
            0x1182 0x01 0x00 0x0a 0x1b 0x20  0x00  ; U+1182
        0x1183      1
            0x1183 0x01 0x00 0x0a 0x1b 0x22  0x00  ; U+1183
        0x1184      1
            0x1184 0x01 0x00 0x0c 0x1b 0x27  0x00  ; U+1184
        0x1185      1
            0x1185 0x01 0x00 0x0c 0x1b 0x28  0x00  ; U+1185
        0x1186      1
            0x1186 0x01 0x00 0x0c 0x1b 0x2a  0x00  ; U+1186
        0x1187      1
            0x1187 0x01 0x00 0x0c 0x1b 0x2b  0x00  ; U+1187
        0x1188      1
            0x1188 0x01 0x00 0x0c 0x1b 0x2c  0x00  ; U+1188
        0x1189      1
            0x1189 0x01 0x00 0x0d 0x1b 0x2e  0x00  ; U+1189
        0x118a      1
            0x118a 0x01 0x00 0x0d 0x1b 0x2f  0x00  ; U+118a
        0x118b      1
            0x118b 0x01 0x00 0x0e 0x1b 0x31  0x00  ; U+118b
        0x118c      1
            0x118c 0x01 0x00 0x0f 0x1b 0x34  0x00  ; U+118c
        0x118d      1
            0x118d 0x01 0x00 0x0f 0x1b 0x35  0x00  ; U+118d
        0x118e      1
            0x118e 0x01 0x00 0x11 0x1b 0x39  0x00  ; U+118e
        0x118f      1
            0x118f 0x01 0x00 0x11 0x1b 0x3b  0x00  ; U+118f
        0x1190      1
            0x1190 0x01 0x00 0x11 0x1b 0x3c  0x00  ; U+1190
        0x1191      1
            0x1191 0x01 0x00 0x11 0x1b 0x3d  0x00  ; U+1191
        0x1192      1
            0x1192 0x01 0x00 0x11 0x1b 0x3e  0x00  ; U+1192
        0x1193      1
            0x1193 0x01 0x00 0x11 0x1b 0x40  0x00  ; U+1193
        0x1194      1
            0x1194 0x01 0x00 0x11 0x1b 0x41  0x00  ; U+1194
        0x1195      1
            0x1195 0x01 0x00 0x12 0x1b 0x47  0x00  ; U+1195
        0x1196      1
            0x1196 0x01 0x00 0x12 0x1b 0x48  0x00  ; U+1196
        0x1197      1
            0x1197 0x01 0x00 0x13 0x1b 0x4a  0x00  ; U+1197
        0x1198      1
            0x1198 0x01 0x00 0x14 0x1b 0x4c  0x00  ; U+1198
        0x1199      1
            0x1199 0x01 0x00 0x14 0x1b 0x4d  0x00  ; U+1199
        0x119a      1
            0x119a 0x01 0x00 0x14 0x1b 0x52  0x00  ; U+119a
        0x119b      1
            0x119b 0x01 0x00 0x14 0x1b 0x55  0x00  ; U+119b
        0x119c      1
            0x119c 0x01 0x00 0x14 0x1b 0x57  0x00  ; U+119c
        0x119d      1
            0x119d 0x01 0x00 0x14 0x1b 0x59  0x00  ; U+119d
        0x119e      4
            0x119e 0x01 0x00 0x14 0x1b 0x5a  0x03  ; U+119e
            0x1161 0x01 0x00 0x14 0x1b 0x5b  0x00  ; U+119e,1161
            0x1165 0x01 0x00 0x00 0x00 0x00  0x01  ; U+119e,1165
            0x1175 0x01 0x00 0x14 0x1b 0x5d  0x00  ; U+119e,1165,1175
        0x119f      1
            0x119f 0x01 0x00 0x14 0x1b 0x5c  0x00  ; U+119f
        0x11a0      1
            0x11a0 0x01 0x00 0x14 0x1b 0x5e  0x00  ; U+11a0
        0x11a1      1
            0x11a1 0x01 0x00 0x14 0x1b 0x5f  0x00  ; U+11a1
        0x11a2      1
            0x11a2 0x01 0x00 0x14 0x1b 0x60  0x00  ; U+11a2
        0x11a3      1
            0x11a3 0x00 0x00 0x00 0x00 0x00  0x00  ; U+11a3
        0x11a4      1
            0x11a4 0x00 0x00 0x00 0x00 0x00  0x00  ; U+11a4
        0x11a5      1
            0x11a5 0x00 0x00 0x00 0x00 0x00  0x00  ; U+11a5
        0x11a6      1
            0x11a6 0x00 0x00 0x00 0x00 0x00  0x00  ; U+11a6
        0x11a7      1
            0x11a7 0x00 0x00 0x00 0x00 0x00  0x00  ; U+11a7
        0x11a8      6
            0x11a8 0x00 0x00 0x00 0x01 0x03  0x05  ; U+11a8  --- First Trailing Jamo
            0x11ab 0x01 0x00 0x00 0x02 0x05  0x00  ; U+11a8,11ab
            0x11b8 0x01 0x00 0x00 0x02 0x07  0x00  ; U+11a8,11b8
            0x11be 0x01 0x00 0x00 0x03 0x0a  0x00  ; U+11a8,11be
            0x11bf 0x01 0x00 0x00 0x03 0x0b  0x00  ; U+11a8,11bf
            0x11c2 0x01 0x00 0x00 0x03 0x0c  0x00  ; U+11a8,11c2
        0x11a9      1
            0x11a9 0x00 0x00 0x00 0x02 0x04  0x00  ; U+11a9
        0x11aa      1
            0x11aa 0x00 0x00 0x00 0x03 0x08  0x00  ; U+11aa
        0x11ab      4
            0x11ab 0x00 0x00 0x00 0x04 0x0d  0x03  ; U+11ab
            0x11ab 0x01 0x00 0x00 0x04 0x0f  0x00  ; U+11ab,11ab
            0x11af 0x01 0x00 0x00 0x04 0x11  0x00  ; U+11ab,11af
            0x11be 0x01 0x00 0x00 0x05 0x15  0x00  ; U+11ab,11be
        0x11ac      1
            0x11ac 0x00 0x00 0x00 0x05 0x14  0x00  ; U+11ac
        0x11ad      1
            0x11ad 0x00 0x00 0x00 0x06 0x17  0x00  ; U+11ad
        0x11ae      9
            0x11ae 0x00 0x00 0x00 0x07 0x18  0x08  ; U+11ae
            0x11ae 0x01 0x00 0x00 0x07 0x1a  0x01  ; U+11ae,11ae
            0x11b8 0x01 0x00 0x00 0x07 0x1b  0x00  ; U+11ae,11ae,11b8
            0x11b8 0x01 0x00 0x00 0x07 0x1d  0x00  ; U+11ae,11b8
            0x11ba 0x01 0x00 0x00 0x07 0x1e  0x01  ; U+11ae,11ba
            0x11a8 0x01 0x00 0x00 0x07 0x1f  0x00  ; U+11ae,11ba,11a8
            0x11bd 0x01 0x00 0x00 0x07 0x20  0x00  ; U+11ae,11bd
            0x11be 0x01 0x00 0x00 0x07 0x21  0x00  ; U+11ae,11be
            0x11c0 0x01 0x00 0x00 0x07 0x22  0x00  ; U+11ae,11c0
        0x11af      15
            0x11af 0x00 0x00 0x00 0x08 0x23  0x0e  ; U+11af
            0x11a8 0x01 0x00 0x00 0x00 0x00  0x02  ; U+11af,11a8
            0x11a8 0x01 0x00 0x00 0x09 0x25  0x00  ; U+11af,11a8,11a8
            0x11c2 0x01 0x00 0x00 0x09 0x27  0x00  ; U+11af,11a8,11c2
            0x11af 0x01 0x00 0x00 0x00 0x00  0x01  ; U+11af,11af
            0x11bf 0x01 0x00 0x00 0x09 0x2c  0x00  ; U+11af,11af,11bf
            0x11b7 0x01 0x00 0x00 0x00 0x00  0x01  ; U+11af,11b7
            0x11c2 0x01 0x00 0x00 0x0a 0x30  0x00  ; U+11af,11b7,11c2
            0x11b8 0x01 0x00 0x00 0x00 0x00  0x02  ; U+11af,11b8
            0x11ae 0x01 0x00 0x00 0x0b 0x32  0x00  ; U+11af,11b8,11ae
            0x11c1 0x01 0x00 0x00 0x0b 0x34  0x00  ; U+11af,11b8,11c1
            0x11bc 0x01 0x00 0x00 0x0f 0x41  0x00  ; U+11af,11bc
            0x11f0 0x01 0x00 0x00 0x0c 0x3a  0x00  ; U+11af,11f0
            0x11f9 0x01 0x00 0x00 0x00 0x00  0x01  ; U+11af,11f9
            0x11c2 0x01 0x00 0x00 0x0f 0x40  0x00  ; U+11af,11f9,11c2
        0x11b0      1
            0x11b0 0x00 0x00 0x00 0x09 0x24  0x00  ; U+11b0
        0x11b1      1
            0x11b1 0x00 0x00 0x00 0x0a 0x2d  0x00  ; U+11b1
        0x11b2      1
            0x11b2 0x00 0x00 0x00 0x0b 0x31  0x00  ; U+11b2
        0x11b3      1
            0x11b3 0x00 0x00 0x00 0x0c 0x37  0x00  ; U+11b3
        0x11b4      1
            0x11b4 0x00 0x00 0x00 0x0d 0x3c  0x00  ; U+11b4
        0x11b5      1
            0x11b5 0x00 0x00 0x00 0x0e 0x3d  0x00  ; U+11b5
        0x11b6      1
            0x11b6 0x00 0x00 0x00 0x0f 0x3e  0x00  ; U+11b6
        0x11b7      7
            0x11b7 0x00 0x00 0x00 0x10 0x42  0x06  ; U+11b7
            0x11ab 0x01 0x00 0x00 0x10 0x44  0x01  ; U+11b7,11ab
            0x11ab 0x01 0x00 0x00 0x10 0x45  0x00  ; U+11b7,11ab,11ab
            0x11b7 0x01 0x00 0x00 0x10 0x47  0x00  ; U+11b7,11b7
            0x11b8 0x01 0x00 0x00 0x00 0x00  0x01  ; U+11b7,11b8
            0x11ba 0x01 0x00 0x00 0x10 0x49  0x00  ; U+11b7,11b8,11ba
            0x11bd 0x01 0x00 0x00 0x10 0x4d  0x00  ; U+11b7,11bd
        0x11b8      10
            0x11b8 0x00 0x00 0x00 0x11 0x51  0x09  ; U+11b8
            0x11ae 0x01 0x00 0x00 0x11 0x52  0x00  ; U+11b8,11ae
            0x11af 0x01 0x00 0x00 0x00 0x00  0x01  ; U+11b8,11af
            0x11c1 0x01 0x00 0x00 0x11 0x54  0x00  ; U+11b8,11af,11c1
            0x11b7 0x01 0x00 0x00 0x11 0x55  0x00  ; U+11b8,11b7
            0x11b8 0x01 0x00 0x00 0x11 0x56  0x00  ; U+11b8,11b8
            0x11ba 0x01 0x00 0x00 0x00 0x00  0x01  ; U+11b8,11ba
            0x11ae 0x01 0x00 0x00 0x12 0x58  0x00  ; U+11b8,11ba,11ae
            0x11bd 0x01 0x00 0x00 0x12 0x59  0x00  ; U+11b8,11bd
            0x11be 0x01 0x00 0x00 0x12 0x5a  0x00  ; U+11b8,11be
        0x11b9      1
            0x11b9 0x00 0x00 0x00 0x12 0x57  0x00  ; U+11b9
        0x11ba      11
            0x11ba 0x00 0x00 0x00 0x13 0x5e  0x0a  ; U+11ba
            0x11b7 0x01 0x00 0x00 0x13 0x62  0x00  ; U+11ba,11b7
            0x11ba 0x01 0x00 0x00 0x00 0x00  0x02  ; U+11ba,11ba
            0x11a8 0x01 0x00 0x00 0x14 0x66  0x00  ; U+11ba,11ba,11a8
            0x11ae 0x01 0x00 0x00 0x14 0x67  0x00  ; U+11ba,11ba,11ae
            0x11bd 0x01 0x00 0x00 0x14 0x69  0x00  ; U+11ba,11bd
            0x11be 0x01 0x00 0x00 0x14 0x6a  0x00  ; U+11ba,11be
            0x11c0 0x01 0x00 0x00 0x14 0x6b  0x00  ; U+11ba,11c0
            0x11c2 0x01 0x00 0x00 0x14 0x6c  0x00  ; U+11ba,11c2
            0x11e6 0x01 0x00 0x00 0x13 0x64  0x00  ; U+11ba,11e6
            0x11eb 0x01 0x00 0x00 0x14 0x68  0x00  ; U+11ba,11eb
        0x11bb      1
            0x11bb 0x00 0x00 0x00 0x14 0x65  0x00  ; U+11bb
        0x11bc      4
            0x11bc 0x00 0x00 0x00 0x15 0x70  0x03  ; U+11bc
            0x11b7 0x01 0x00 0x00 0x15 0x73  0x00  ; U+11bc,11b7
            0x11ba 0x01 0x00 0x00 0x15 0x74  0x00  ; U+11bc,11ba
            0x11c2 0x01 0x00 0x00 0x15 0x77  0x00  ; U+11bc,11c2
        0x11bd      4
            0x11bd 0x00 0x00 0x00 0x16 0x7e  0x03  ; U+11bd
            0x11b8 0x01 0x00 0x00 0x16 0x7f  0x01  ; U+11bd,11b8
            0x11b8 0x01 0x00 0x00 0x16 0x80  0x00  ; U+11bd,11b8,11b8
            0x11bd 0x01 0x00 0x00 0x16 0x81  0x00  ; U+11bd,11bd
        0x11be      1
            0x11be 0x00 0x00 0x00 0x17 0x82  0x00  ; U+11be
        0x11bf      1
            0x11bf 0x00 0x00 0x00 0x18 0x83  0x00  ; U+11bf
        0x11c0      1
            0x11c0 0x00 0x00 0x00 0x19 0x84  0x00  ; U+11c0
        0x11c1      3
            0x11c1 0x00 0x00 0x00 0x1a 0x85  0x02  ; U+11c1
            0x11ba 0x01 0x00 0x00 0x1a 0x87  0x00  ; U+11c1,11ba
            0x11c0 0x01 0x00 0x00 0x1a 0x88  0x00  ; U+11c1,11c0
        0x11c2      1
            0x11c2 0x00 0x00 0x00 0x1b 0x8a  0x00  ; U+11c2
        0x11c3      1
            0x11c3 0x01 0x00 0x00 0x02 0x06  0x00  ; U+11c3
        0x11c4      1
            0x11c4 0x01 0x00 0x00 0x03 0x09  0x00  ; U+11c4
        0x11c5      1
            0x11c5 0x01 0x00 0x00 0x04 0x0e  0x00  ; U+11c5
        0x11c6      1
            0x11c6 0x01 0x00 0x00 0x04 0x10  0x00  ; U+11c6
        0x11c7      1
            0x11c7 0x01 0x00 0x00 0x04 0x12  0x00  ; U+11c7
        0x11c8      1
            0x11c8 0x01 0x00 0x00 0x04 0x13  0x00  ; U+11c8
        0x11c9      1
            0x11c9 0x01 0x00 0x00 0x05 0x16  0x00  ; U+11c9
        0x11ca      1
            0x11ca 0x01 0x00 0x00 0x07 0x19  0x00  ; U+11ca
        0x11cb      1
            0x11cb 0x01 0x00 0x00 0x07 0x1c  0x00  ; U+11cb
        0x11cc      1
            0x11cc 0x01 0x00 0x00 0x09 0x26  0x00  ; U+11cc
        0x11cd      1
            0x11cd 0x01 0x00 0x00 0x09 0x28  0x00  ; U+11cd
        0x11ce      1
            0x11ce 0x01 0x00 0x00 0x09 0x29  0x00  ; U+11ce
        0x11cf      1
            0x11cf 0x01 0x00 0x00 0x09 0x2a  0x00  ; U+11cf
        0x11d0      1
            0x11d0 0x01 0x00 0x00 0x09 0x2b  0x00  ; U+11d0
        0x11d1      1
            0x11d1 0x01 0x00 0x00 0x0a 0x2e  0x00  ; U+11d1
        0x11d2      1
            0x11d2 0x01 0x00 0x00 0x0a 0x2f  0x00  ; U+11d2
        0x11d3      1
            0x11d3 0x01 0x00 0x00 0x0b 0x33  0x00  ; U+11d3
        0x11d4      1
            0x11d4 0x01 0x00 0x00 0x0b 0x35  0x00  ; U+11d4
        0x11d5      1
            0x11d5 0x01 0x00 0x00 0x0b 0x36  0x00  ; U+11d5
        0x11d6      1
            0x11d6 0x01 0x00 0x00 0x0c 0x38  0x00  ; U+11d6
        0x11d7      1
            0x11d7 0x01 0x00 0x00 0x0c 0x39  0x00  ; U+11d7
        0x11d8      1
            0x11d8 0x01 0x00 0x00 0x0c 0x3b  0x00  ; U+11d8
        0x11d9      1
            0x11d9 0x01 0x00 0x00 0x0f 0x3f  0x00  ; U+11d9
        0x11da      1
            0x11da 0x01 0x00 0x00 0x10 0x43  0x00  ; U+11da
        0x11db      1
            0x11db 0x01 0x00 0x00 0x10 0x46  0x00  ; U+11db
        0x11dc      1
            0x11dc 0x01 0x00 0x00 0x10 0x48  0x00  ; U+11dc
        0x11dd      1
            0x11dd 0x01 0x00 0x00 0x10 0x4a  0x00  ; U+11dd
        0x11de      1
            0x11de 0x01 0x00 0x00 0x10 0x4b  0x00  ; U+11de
        0x11df      1
            0x11df 0x01 0x00 0x00 0x10 0x4c  0x00  ; U+11df
        0x11e0      1
            0x11e0 0x01 0x00 0x00 0x10 0x4e  0x00  ; U+11e0
        0x11e1      1
            0x11e1 0x01 0x00 0x00 0x10 0x4f  0x00  ; U+11e1
        0x11e2      1
            0x11e2 0x01 0x00 0x00 0x10 0x50  0x00  ; U+11e2
        0x11e3      1
            0x11e3 0x01 0x00 0x00 0x11 0x53  0x00  ; U+11e3
        0x11e4      1
            0x11e4 0x01 0x00 0x00 0x12 0x5b  0x00  ; U+11e4
        0x11e5      1
            0x11e5 0x01 0x00 0x00 0x12 0x5c  0x00  ; U+11e5
        0x11e6      1
            0x11e6 0x01 0x00 0x00 0x12 0x5d  0x00  ; U+11e6
        0x11e7      1
            0x11e7 0x01 0x00 0x00 0x13 0x5f  0x00  ; U+11e7
        0x11e8      1
            0x11e8 0x01 0x00 0x00 0x13 0x60  0x00  ; U+11e8
        0x11e9      1
            0x11e9 0x01 0x00 0x00 0x13 0x61  0x00  ; U+11e9
        0x11ea      1
            0x11ea 0x01 0x00 0x00 0x13 0x63  0x00  ; U+11ea
        0x11eb      3
            0x11eb 0x01 0x00 0x00 0x14 0x6d  0x02  ; U+11eb
            0x11b8 0x01 0x00 0x00 0x14 0x6e  0x00  ; U+11eb,11b8
            0x11e6 0x01 0x00 0x00 0x14 0x6f  0x00  ; U+11eb,11e6
        0x11ec      1
            0x11ec 0x01 0x00 0x00 0x15 0x71  0x00  ; U+11ec
        0x11ed      1
            0x11ed 0x01 0x00 0x00 0x15 0x72  0x00  ; U+11ed
        0x11ee      1
            0x11ee 0x01 0x00 0x00 0x15 0x75  0x00  ; U+11ee
        0x11ef      1
            0x11ef 0x01 0x00 0x00 0x15 0x76  0x00  ; U+11ef
        0x11f0      4
            0x11f0 0x01 0x00 0x00 0x15 0x78  0x03  ; U+11f0
            0x11a8 0x01 0x00 0x00 0x15 0x79  0x00  ; U+11f0,11a8
            0x11bf 0x01 0x00 0x00 0x15 0x7c  0x00  ; U+11f0,11bf
            0x11c2 0x01 0x00 0x00 0x15 0x7d  0x00  ; U+11f0,11c2
        0x11f1      1
            0x11f1 0x01 0x00 0x00 0x15 0x7a  0x00  ; U+11f1
        0x11f2      1
            0x11f2 0x01 0x00 0x00 0x15 0x7b  0x00  ; U+11f2
        0x11f3      1
            0x11f3 0x01 0x00 0x00 0x1a 0x86  0x00  ; U+11f3
        0x11f4      1
            0x11f4 0x01 0x00 0x00 0x1a 0x89  0x00  ; U+11f4
        0x11f5      1
            0x11f5 0x01 0x00 0x00 0x1b 0x8b  0x00  ; U+11f5
        0x11f6      1
            0x11f6 0x01 0x00 0x00 0x1b 0x8c  0x00  ; U+11f6
        0x11f7      1
            0x11f7 0x01 0x00 0x00 0x1b 0x8d  0x00  ; U+11f7
        0x11f8      1
            0x11f8 0x01 0x00 0x00 0x1b 0x8e  0x00  ; U+11f8
        0x11f9      1
            0x11f9 0x01 0x00 0x00 0x1b 0x8f  0x00  ; U+11f9
        0x11fa      1
            0x11fa 0x00 0x00 0x00 0x00 0x00  0x00  ; U+11fa
        0x11fb      1
            0x11fb 0x00 0x00 0x00 0x00 0x00  0x00  ; U+11fb
        0x11fc      1
            0x11fc 0x00 0x00 0x00 0x00 0x00  0x00  ; U+11fc
        0x11fd      1
            0x11fd 0x00 0x00 0x00 0x00 0x00  0x00  ; U+11fd
        0x11fe      1
            0x11fe 0x00 0x00 0x00 0x00 0x00  0x00  ; U+11fe
        0x11ff      1
            0x11ff 0x00 0x00 0x00 0x00 0x00  0x00  ; U+11ff

ENDSORTTABLES
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\win32\winnls\nlstrans\nlstrans.txt ===
NLSTRANS - NLS Translation Utility



Starting the Translation Utility
--------------------------------

nlstrans [-v] <inputfile>

    -v turns on the verbose mode.  This switch is optional.

    <inputfile> is the name of the input file containing variations
                of the commands listed below.




Command Legend
--------------

<cpnum>       - The code page number (in decimal).
<langstr>     - The language string identifying the language.
<lcid>        - The locale id identifying the locale information.
<num entries> - The number of entries to follow (in decimal).
<mbchar>      - The multibyte character (in hexadecimal).
<wchar>       - The wide character (in hexadecimal).
<lowrange>    - The low end of the DBCS range (in hexidecimal).
<highrange>   - The high end of the DBCS range (in hexidecimal).
<maxcharlen>  - The maximum length, in bytes, of a character (in decimal).
<defaultchar> - The default character (in hexadecimal).
<dc_unitrans> - The unicode translation of the default character (in hex).
<ctype1>      - The character type 1 information (in hexidecimal).
<ctype2>      - The character type 2 information (in hexidecimal).
<ctype3>      - The character type 3 information (in hexidecimal).
<upper>       - The upper case wide character (in hexadecimal).
<lower>       - The lower case wide character (in hexadecimal).
<digit>       - The digit to translate to ascii (in hexadecimal).
<ascii>       - The ascii translation (in hexadecimal).
<czone>       - The compatibility zone character to translate (in hex).
<katakana>    - The katakana character to translate (in hex).
<hiragana>    - The hiragana character to translate (in hex).
<half width>  - The half width character to translate (in hex).
<full width>  - The full width character to translate (in hex).
<precomp>     - The precomposed character (in hexidecimal).
<base>        - The base character for the given precomposed form (in hex).
<nonspace>    - The nonspace character for the given precomposed form (in hex).
<code pt>     - The Unicode code point (in hexidecimal).
<SM>          - The script member (in hex).
<AW>          - The alphanumeric weight (in hex).
<DW>          - The diacritic weight (in hex).
<CW>          - The case weight (in hex).
<COMP>        - The compression value - 0, 1, 2, or 3 (in hex).




Commands
--------

(1) Code Page Specific Translation Tables

    - A semicolon may be used to denote a comment.  The comment will be
      read until the end of the current line.  So, once a semicolon is
      used, the rest of the current line is ignored.


    CODEPAGE <cpnum>

      - Starts the code page specific section.

      - Use the ENDCODEPAGE keyword to end the code page specific section.

      - Only the following keywords may be used between this keyword and
        the ENDCODEPAGE keyword:

          - CPINFO
          - MBTABLE
          - GLYPHTABLE
          - DBCSRANGE
          - WCTABLE


    ENDCODEPAGE

      - Ends the code page specific section.

      - Only used following the CODEPAGE keyword.


    CPINFO <maxcharlen> <defaultchar> <dc_unitrans>

      - The code page information.

      - This table MUST appear FIRST in the data file.


    MBTABLE <num entries>

      - The multibyte translation table.

      - The table to follow should be in the format:

          <mbchar> <wchar>

      - The maximum <num entries> should be 256.


    GLYPHTABLE <num entries>

      - The glyph character multibyte translation table.

      - The table to follow should be in the format:

          <mbchar> <wchar>

      - The maximum <num entries> should be 256.

      - This table MUST appear AFTER the MBTABLE in the data file.


    DBCSRANGE <num entries>

      - The DBCS ranges.

      - The table to follow should be in the format:

          <lowrange> <highrange>


        DBCSTABLE <num entries>

          - The DBCS translation table.

          - The table to follow should be in the format:

              <mbchar> <wchar>

          - The maximum <num entries> should be 256.

      - The DBCS tables MUST immediately follow their ranges and must
        include the DBCSTABLE keyword.  The tables MUST also be in the
        order in which they appear in the range (lowest first, highest last).


    WCTABLE <num entries>

      - The wide character translation table.

      - The table to follow should be in the format:

          <wchar> <mbchar>



(2) Language Specific Translation Tables

    - A semicolon may be used to denote a comment.  The comment will be
      read until the end of the current line.  So, once a semicolon is
      used, the rest of the current line is ignored.


    LANGUAGE <langstr>

      - Starts the language specific section.

      - Use the ENDLANGUAGE keyword to end the language specific section.

      - Only the following keywords may be used between this keyword and
        the ENDLANGUAGE keyword:

          - UPPERCASE
          - LOWERCASE


    ENDLANGUAGE

      - Ends the language specific section.

      - Only used following the LANGUAGE keyword.


    UPPERCASE <num entries>

      - The upper case translation table.

      - The table to follow should be in the format:

          <lower> <upper>


    LOWERCASE <num entries>

      - The lower case translation table.

      - The table to follow should be in the format:

          <upper> <lower>


    EXCEPTION <num entries>

      - The exception table for linguistic casing.

      - This table contains all exceptions to the default table on
        a per locale id basis in order to get proper linguistic
        casing.

      - The 0x00000000 locale id is used to make changes to the default
        table for *all* locales.  These exceptions will become part of the
        default linguistic casing table.

      - All entries in the exception table must exist in some form
        in the default table.  If there is no translation desired in
        the default table, then enter the code point as upper/lower
        casing to itself.

      - The table to follow should be in the format (for each lcid):

          LCID <lcid> <num upcase entries> <num locase entries>

            UPPERCASE

              <lower> <upper>

            LOWERCASE

              <upper> <lower>



(3) Locale Specific Translation Tables

    - NO COMMENTS will be accepted at anytime between the LOCALE and
      ENDLOCALE keywords and the CALENDAR and ENDCALENDAR keywords.
      A semicolon on a line will be used as part of the locale or
      calendar information, as well as any characters after the
      semicolon on the same line.


    LOCALE <num entries>

      - Starts the locale specific section.

      - Use the ENDLOCALE keyword to end the entire locale specific section.

      - Each set of locale information to follow should be in the format:


        BEGINLOCALE <lcid>

          - The locale information.  The order of the information is
            given below.

          - The table to follow should be in the format:

              <keyword> <info>

            or in some cases:

              <keyword> <num> <info>
                              <info>
                              ...

            where

            <keyword> is the keyword for the given information.
                      This string is ignored.

            <num>     is the number of entries for the keyword.  This means
                      there will be 'num' number of entries, where each
                      entry MUST BE on a separate line.  The keywords that
                      require the 'num' field are noted in the list of items
                      below.

            <info>    is the information to store in the data file.  All
                      information will be stored as a Unicode string.

                      The escape sequence "\x" may be used to designate hex
                      values above 0x00ff, but ALL 4 digits of the Unicode
                      character MUST exist for this to work properly.

                      If the backslash character is to appear in the given
                      string (it's not part of an escape sequence), then
                      two backslashes must be used in succession.

                      White space (space and tab) is stripped from both the
                      front and the back of the string unless specifically
                      noted with the escape sequence.  All other white space
                      is preserved.

                      To include TWO separate null-terminated strings for
                      one LCTYPE, the strings must be separated by \xffff.
                      This will be changed to 0x0000 in the binary file.
                      Currently, the second string will only be used by
                      the SMONTHNAME LCType information in the
                      GetDateFormatW api (Russian month names have different
                      grammar).

        This section must have the following information (IN THE GIVEN
        ORDER) following the BEGINLOCALE keyword.


           ILANGUAGE
           SENGLANGUAGE
           SABBREVLANGNAME
           SISO639LANGNAME
           SNATIVELANGNAME

           ICOUNTRY
           SENGCOUNTRY
           SABBREVCTRYNAME
           SISO3166CTRYNAME
           SNATIVECTRYNAME

           IDEFAULTLANGUAGE
           IDEFAULTCOUNTRY
           IDEFAULTANSICODEPAGE
           IDEFAULTOEMCODEPAGE

           SLIST
           IMEASURE

           SDECIMAL
           STHOUSAND
           SGROUPING
           IDIGITS
           ILZERO
           INEGNUMBER
           SNATIVEDIGITS
           IDIGITSUBSTITUTION

           SCURRENCY
           SINTLSYMBOL
           SMONDECIMALSEP
           SMONTHOUSANDSEP
           SMONGROUPING
           ICURRDIGITS
           IINTLCURRDIGITS
           ICURRENCY
           INEGCURR
           SPOSITIVESIGN
           SNEGATIVESIGN

           STIMEFORMAT         <num>
           STIME
           ITIME
           ITLZERO
           ITIMEMARKPOSN
           S1159
           S2359

           SSHORTDATE          <num>
           SDATE
           IDATE
           ICENTURY
           IDAYLZERO
           IMONLZERO

           SLONGDATE           <num>
           ILDATE

           ICALENDARTYPE
           IOPTIONALCALENDAR   <num>  (use \xffff for localized calendar name)

           IFIRSTDAYOFWEEK
           IFIRSTWEEKOFYEAR

           SDAYNAME1
           SDAYNAME2
           SDAYNAME3
           SDAYNAME4
           SDAYNAME5
           SDAYNAME6
           SDAYNAME7

           SABBREVDAYNAME1
           SABBREVDAYNAME2
           SABBREVDAYNAME3
           SABBREVDAYNAME4
           SABBREVDAYNAME5
           SABBREVDAYNAME6
           SABBREVDAYNAME7

           SMONTHNAME1
           SMONTHNAME2
           SMONTHNAME3
           SMONTHNAME4
           SMONTHNAME5
           SMONTHNAME6
           SMONTHNAME7
           SMONTHNAME8
           SMONTHNAME9
           SMONTHNAME10
           SMONTHNAME11
           SMONTHNAME12
           SMONTHNAME13

           SABBREVMONTHNAME1
           SABBREVMONTHNAME2
           SABBREVMONTHNAME3
           SABBREVMONTHNAME4
           SABBREVMONTHNAME5
           SABBREVMONTHNAME6
           SABBREVMONTHNAME7
           SABBREVMONTHNAME8
           SABBREVMONTHNAME9
           SABBREVMONTHNAME10
           SABBREVMONTHNAME11
           SABBREVMONTHNAME12
           SABBREVMONTHNAME13

           FONTSIGNATURE



    ENDLOCALE

      - Ends the locale specific section.

      - Only used following the LOCALE keyword.



    CALENDAR <num entries>

      - Starts the calendar specific section.

      - Use the ENDCALENDAR keyword to end the entire calendar specific section.

      - Each set of calendar information to follow should be in the format:


        BEGINCALENDAR <calendarid>

          - The calendar information.  The order of the information is
            given below.

          - The table to follow should be in the format:

              <keyword> <info>

            or in some cases:

              <keyword> <num> <info>
                              <info>
                              ...

            where

            <keyword> is the keyword for the given information.
                      This string is ignored.

            <num>     is the number of entries for the keyword.  This means
                      there will be 'num' number of entries, where each
                      entry MUST BE on a separate line.  The keywords that
                      require the 'num' field are noted in the list of items
                      below.

            <info>    is the information to store in the data file.  All
                      information will be stored as a Unicode string.

                      The escape sequence "\x" may be used to designate hex
                      values above 0x00ff, but ALL 4 digits of the Unicode
                      character MUST exist for this to work properly.

                      If the backslash character is to appear in the given
                      string (it's not part of an escape sequence), then
                      two backslashes must be used in succession.

                      White space (space and tab) is stripped from both the
                      front and the back of the string unless specifically
                      noted with the escape sequence.  All other white space
                      is preserved.

                      To include TWO separate null-terminated strings for
                      one LCTYPE, the strings must be separated by \xffff.
                      This will be changed to 0x0000 in the binary file.
                      Currently, the second string will only be used by
                      the SMONTHNAME LCType information in the
                      GetDateFormatW api (Russian month names have different
                      grammar).

        This section must have the following information (IN THE GIVEN
        ORDER) following the BEGINCALENDAR keyword.

           SCALENDAR

           ITWODIGITYEARMAX

           SERARANGES        <num>   (use \xffff for era string)

           SSHORTDATE
           SLONGDATE

           IF_NAMES

           SDAYNAME1
           SDAYNAME2
           SDAYNAME3
           SDAYNAME4
           SDAYNAME5
           SDAYNAME6
           SDAYNAME7

           SABBREVDAYNAME1
           SABBREVDAYNAME2
           SABBREVDAYNAME3
           SABBREVDAYNAME4
           SABBREVDAYNAME5
           SABBREVDAYNAME6
           SABBREVDAYNAME7

           SMONTHNAME1
           SMONTHNAME2
           SMONTHNAME3
           SMONTHNAME4
           SMONTHNAME5
           SMONTHNAME6
           SMONTHNAME7
           SMONTHNAME8
           SMONTHNAME9
           SMONTHNAME10
           SMONTHNAME11
           SMONTHNAME12
           SMONTHNAME13

           SABBREVMONTHNAME1
           SABBREVMONTHNAME2
           SABBREVMONTHNAME3
           SABBREVMONTHNAME4
           SABBREVMONTHNAME5
           SABBREVMONTHNAME6
           SABBREVMONTHNAME7
           SABBREVMONTHNAME8
           SABBREVMONTHNAME9
           SABBREVMONTHNAME10
           SABBREVMONTHNAME11
           SABBREVMONTHNAME12
           SABBREVMONTHNAME13



    ENDCALENDAR

      - Ends the calendar specific section.

      - Only used following the CALENDAR keyword.



(4) Locale Independent (Unicode) Translation Tables

    - A semicolon may be used to denote a comment.  The comment will be
      read until the end of the current line.  So, once a semicolon is
      used, the rest of the current line is ignored.


    UNICODE

      - Starts the unicode section.

      - Use the ENDUNICODE keyword to end the unicode section.

      - Only the following keywords may be used between this keyword and
        the ENDUNICODE keyword:

          - ASCIIDIGITS
          - FOLDCZONE
          - COMP
          - HIRAGANA
          - KATAKANA
          - HALFWIDTH
          - FULLWIDTH


    ENDUNICODE

      - Ends the unicode section.

      - Only used following the UNICODE keyword.


    ASCIIDIGITS <num entries>

      - The ascii digits translation table.

      - The table to follow should be in the format:

          <digit> <ascii>


    FOLDCZONE <num entries>

      - The fold compatibility zone translation table.

      - The table to follow should be in the format:

          <czone> <ascii>


    HIRAGANA <num entries>

      - The Katakana to Hiragana translation table.

      - The table to follow should be in the format:

          <katakana> <hiragana>


    KATAKANA <num entries>

      - The Hiragana to Katakana translation table.

      - The table to follow should be in the format:

          <hiragana> <katakana>


    HALFWIDTH <num entries>

      - The Full Width to Half Width translation table.

      - The table to follow should be in the format:

          <full width> <half width>


    FULLWIDTH <num entries>

      - The Half Width to Full Width translation table.

      - The table to follow should be in the format:

          <half width> <full width>


    COMP <num entries>

      - The precomposed and composite translation tables.  Both versions
        of the table will be built from this data.

      - The table to follow should be in the format:

          <precomp> <base> <nonspace>



(5) Character Type Translation Tables

    - A semicolon may be used to denote a comment.  The comment will be
      read until the end of the current line.  So, once a semicolon is
      used, the rest of the current line is ignored.


    CTYPE <num entries>

      - The character type translation table.

      - The table to follow should be in the format:

          <wchar> <ctype1> <ctype2> <ctype3>



(6) SortKey Translation Tables

    - A semicolon may be used to denote a comment.  The comment will be
      read until the end of the current line.  So, once a semicolon is
      used, the rest of the current line is ignored.


    SORTKEY

      - Starts the sortkey section.  This is the default sortkey table.


    ENDSORTKEY

      - Ends the sortkey section.

      - Only used following the SORTKEY keyword.


    DEFAULT <num entries>

      - The default sortkey translation table.

      - Contains the weights on a per code point basis.

      - The table to follow should be in the format:

          <code pt>  <SM> <AW> <DW> <CW> <COMP>



(7) Sort Tables Translation Tables

    - A semicolon may be used to denote a comment.  The comment will be
      read until the end of the current line.  So, once a semicolon is
      used, the rest of the current line is ignored.


    SORTTABLES

      - Starts the sorttables section.  This section contains all
        sorting tables except the default sortkey table.

      - Use the ENDSORTTABLES keyword to end the sort tables section.

      - Only the following keywords may be used between this keyword and
        the ENDSORTTABLES keyword:

          - REVERSEDIACRITICS
          - DOUBLECOMPRESSION
          - IDEOGRAPH_LCID_EXCEPTION
          - MULTIPLEWEIGHTS
          - EXPANSION
          - EXCEPTION
          - COMPRESSION


    ENDSORTTABLES

      - Ends the sorttables section.

      - Only used following the SORTTABLES keyword.


    REVERSEDIACRITICS <num entries>

      - The reverse diacritics table.

      - This table contains all locale ids that require diacritics
        to be sorted from right to left (instead of left to right).

      - The table to follow should be in the format:

          <lcid>


    DOUBLECOMPRESSION <num entries>

      - The double compression table.

      - This table contains all locale ids that require special handling
        of the compression characters (eg. Hungarian).

      - The table to follow should be in the format:

          <lcid>


    IDEOGRAPH_LCID_EXCEPTION <num entries>

      - The ideograph lcid exception table.

      - This table contains all locale ids that require ideographs to be
        sorted other than in their Unicode ordering.  The name of the file
        containing the ideograph exceptions is also given here.

      - The file name may be no more than 8 characters in length.  The
        extension ".nls" will be added to the file name.

      - The table to follow should be in the format:

          <lcid>  <file name>


    MULTIPLEWEIGHTS <num entries>

      - The multiple weights table.

      - This table contains a list of all scripts that need multiple
        script members to represent the entire script (256 alphanumeric
        weights is not enough).

      - The table to follow should be in the format:

          <first script member> <number of script members in range>


    EXPANSION <num entries>

      - The expansion (ligature) table.

      - This table contains all possible expansion options for every
        locale, so there is no need to distinguish between the
        different locales.

      - The sortkey table will contain the index into this table in
        the AW field.  For that reason, this table MUST be in the
        correct order used by the sortkey default table and the
        exception table.

      - The maximum number of entries allowed in this table is 256.

      - The table to follow should be in the format:

          <expansion code pt> <code pt 1> <code pt 2>


    EXCEPTION <num entries>

      - The exception table.

      - This table contains all exceptions to the default table on
        a per locale id basis.

      - The table to follow should be in the format:

          LCID <lcid> <num entries>

            <code pt>  <SM> <AW> <DW> <CW> <COMP>


    COMPRESSION <num entries>

      - The compression table.

      - This table contains all compressions, both three to one and
        two to one, on a per locale id basis.

      - The table to follow should be in the format:

          LCID <lcid>

            TWO <num entries>

              <code pt 1>  <code pt 2>  <SM> <AW> <DW  <CW>

            THREE <num entries>

              <code pt 1>  <code pt 2>  <code pt 3> <SM> <AW> <DW> <CW>



(8) Ideograph Exception Tables

    - A semicolon may be used to denote a comment.  The comment will be
      read until the end of the current line.  So, once a semicolon is
      used, the rest of the current line is ignored.


    IDEOGRAPH_EXCEPTION  <num entries>  <file name>

      - The ideograph exception table.

      - The table to follow should be in the format:

          <code pt>  <SM> <AW>





Sample Files
------------

All sample files shown below are not real files.  They are simply meant
to show the syntax of the different data files.


(1) Sample Code Page File


    CODEPAGE 12

      CPINFO  1  0x7F  0x2302

      MBTABLE 11

        0x00    0x0000
        0x01    0x0001
        0x02    0x0002
        0x7F    0x2302
        0xB0    0x2591
        0xB1    0x2592
        0xB2    0x2593
        0xB3    0x2502
        0xB4    0x2524
        0xB5    0x2561
        0xB6    0x2562

      GLYPHTABLE 2

        0x01    0x263A
        0x02    0x263B

      DBCSRANGE 2

        0x51  0x51

          DBCSTABLE 1

            0x71  0x0025

        0x80  0x81

          DBCSTABLE 1

            0x3e  0x003e

          DBCSTABLE 2

            0x3f  0x003f
            0x40  0x0040

      WCTABLE 11

        0x0000  0x00
        0x0001  0x01
        0x0002  0x02
        0x2302  0x7F
        0x2502  0xB3
        0x2524  0xB4
        0x2561  0xB5
        0x2562  0xB6
        0x2591  0xB0
        0x2592  0xB1
        0x2593  0xB2

    ENDCODEPAGE



(2) Sample Language File


    LANGUAGE INTL

      UPPERCASE 9

        0x0061	0x0041
        0x0062	0x0042
        0x0063	0x0043
        0x0064	0x0044
        0x0065	0x0045
        0x0066	0x0046
        0x0067	0x0047
        0x0068	0x0048
        0x0069	0x0049
        0xff41  0xff41            ; placeholder for exception
        0xff42  0xff22            ; placeholder for exception

      LOWERCASE 9

        0x0041	0x0061
        0x0042	0x0062
        0x0043	0x0063
        0x0044	0x0064
        0x0045	0x0065
        0x0046	0x0066
        0x0047	0x0067
        0x0048	0x0068
        0x0049	0x0069
        0xff21  0xff21            ; placeholder for exception

    ENDLANGUAGE


    EXCEPTION 2

      LCID 0x00000000 2 1         ; default linguistic table

        UPPERCASE

          0xff41  0xff21
          0xff42  0xff22

        LOWERCASE

          0xff21  0xff41

      LCID 0x0000041f 2 2         ; Turkish

        UPPERCASE

          0x0069  0x0130
          0x0131  0x0049

        LOWERCASE

          0x0049  0x0131
          0x0130  0x0069



(3) Sample Locale File


    LOCALE 1

      BEGINLOCALE 0409           ; English - United States

        ILANGUAGE              0409
        SENGLANGUAGE           English
        SABBREVLANGNAME        ENU
        SISO639LANGNAME        EN
        SNATIVELANGNAME        English

        ICOUNTRY               1
        SENGCOUNTRY            United States
        SABBREVCTRYNAME        USA
        SISO3166CTRYNAME       US
        SNATIVECTRYNAME        United States

        IDEFAULTLANGUAGE       0409
        IDEFAULTCOUNTRY        1
        IDEFAULTANSICODEPAGE   1252
        IDEFAULTOEMCODEPAGE    437

        SLIST                  ,
        IMEASURE               1

        SDECIMAL               .
        STHOUSAND              ,
        SGROUPING              3;0
        IDIGITS                2
        ILZERO                 1
        INEGNUMBER             1
        SNATIVEDIGITS          0123456789
        IDIGITSUBSTITUTION     1

        SCURRENCY              $
        SINTLSYMBOL            USD
        SMONDECIMALSEP         .
        SMONTHOUSANDSEP        ,
        SMONGROUPING           3;0
        ICURRDIGITS            2
        IINTLCURRDIGITS        2
        ICURRENCY              0
        INEGCURR               0
        SPOSITIVESIGN          \x0000
        SNEGATIVESIGN          -

        STIMEFORMAT        4   h:mm:ss tt
                               hh:mm:ss tt
                               H:mm:ss
                               HH:mm:ss
        STIME                  :
        ITIME                  0
        ITLZERO                0
        ITIMEMARKPOSN          0
        S1159                  AM
        S2359                  PM

        SSHORTDATE         6   M/d/yy
                               M/d/yyyy
                               MM/dd/yy
                               MM/dd/yyyy
                               yy/MM/dd
                               dd-MMM-yy
        SDATE                  /
        IDATE                  0
        ICENTURY               0
        IDAYLZERO              0
        IMONLZERO              0

        SLONGDATE          4   dddd, MMMM dd, yyyy
                               MMMM dd, yyyy
                               dddd, dd MMMM, yyyy
                               dd MMMM, yyyy
        ILDATE                 0

        ICALENDARTYPE          1
        IOPTIONALCALENDAR  2   0\xffff
                               1\xffffGregorian Calendar

        IFIRSTDAYOFWEEK        6
        IFIRSTWEEKOFYEAR       0

        SDAYNAME1              Monday
        SDAYNAME2              Tuesday
        SDAYNAME3              Wednesday
        SDAYNAME4              Thursday
        SDAYNAME5              Friday
        SDAYNAME6              Saturday
        SDAYNAME7              Sunday

        SABBREVDAYNAME1        Mon
        SABBREVDAYNAME2        Tue
        SABBREVDAYNAME3        Wed
        SABBREVDAYNAME4        Thu
        SABBREVDAYNAME5        Fri
        SABBREVDAYNAME6        Sat
        SABBREVDAYNAME7        Sun

        SMONTHNAME1            January
        SMONTHNAME2            February
        SMONTHNAME3            March
        SMONTHNAME4            April
        SMONTHNAME5            May
        SMONTHNAME6            June
        SMONTHNAME7            July
        SMONTHNAME8            August
        SMONTHNAME9            September
        SMONTHNAME10           October
        SMONTHNAME11           November
        SMONTHNAME12           December
        SMONTHNAME13           \x0000

        SABBREVMONTHNAME1      Jan
        SABBREVMONTHNAME2      Feb
        SABBREVMONTHNAME3      Mar
        SABBREVMONTHNAME4      Apr
        SABBREVMONTHNAME5      May
        SABBREVMONTHNAME6      Jun
        SABBREVMONTHNAME7      Jul
        SABBREVMONTHNAME8      Aug
        SABBREVMONTHNAME9      Sep
        SABBREVMONTHNAME10     Oct
        SABBREVMONTHNAME11     Nov
        SABBREVMONTHNAME12     Dec
        SABBREVMONTHNAME13     \x0000

        FONTSIGNATURE          \x00af\x8000\x38cb\x0000\x0000\x0000\x0000\x0000\x0001\x0000\x0000\x8000\x00ff\x003f\x0000\xffff

    ENDLOCALE


    CALENDAR   5


      BEGINCALENDAR  0

        SCALENDAR              0

        ITWODIGITYEARMAX       2029

        SERARANGES             0

        SSHORTDATE             \x0000
        SLONGDATE              \x0000

        IF_NAMES               0


      BEGINCALENDAR  1

        SCALENDAR              1

        ITWODIGITYEARMAX       2029

        SERARANGES             0

        SSHORTDATE             MM/dd/yy
        SLONGDATE              dddd, MMMM dd, yyyy

        IF_NAMES               1

        SDAYNAME1              Monday
        SDAYNAME2              Tuesday
        SDAYNAME3              Wednesday
        SDAYNAME4              Thursday
        SDAYNAME5              Friday
        SDAYNAME6              Saturday
        SDAYNAME7              Sunday

        SABBREVDAYNAME1        Mon
        SABBREVDAYNAME2        Tue
        SABBREVDAYNAME3        Wed
        SABBREVDAYNAME4        Thu
        SABBREVDAYNAME5        Fri
        SABBREVDAYNAME6        Sat
        SABBREVDAYNAME7        Sun

        SMONTHNAME1            January
        SMONTHNAME2            February
        SMONTHNAME3            March
        SMONTHNAME4            April
        SMONTHNAME5            May
        SMONTHNAME6            June
        SMONTHNAME7            July
        SMONTHNAME8            August
        SMONTHNAME9            September
        SMONTHNAME10           October
        SMONTHNAME11           November
        SMONTHNAME12           December
        SMONTHNAME13           \x0000

        SABBREVMONTHNAME1      Jan
        SABBREVMONTHNAME2      Feb
        SABBREVMONTHNAME3      Mar
        SABBREVMONTHNAME4      Apr
        SABBREVMONTHNAME5      May
        SABBREVMONTHNAME6      Jun
        SABBREVMONTHNAME7      Jul
        SABBREVMONTHNAME8      Aug
        SABBREVMONTHNAME9      Sep
        SABBREVMONTHNAME10     Oct
        SABBREVMONTHNAME11     Nov
        SABBREVMONTHNAME12     Dec
        SABBREVMONTHNAME13     \x0000


      BEGINCALENDAR  2

        SCALENDAR              2

        ITWODIGITYEARMAX       2029

        SERARANGES          4  1989\xffff\x337b
                               1926\xffff\x337c
                               1912\xffff\x337d
                               1868\xffff\x337e

        SSHORTDATE             yy/MM/dd
        SLONGDATE              gg yyyy'\x5e74'M'\x6708'd'\x65e5'

        IF_NAMES               0


      BEGINCALENDAR  3

        SCALENDAR              3

        ITWODIGITYEARMAX       2029

        SERARANGES          2  1911\xffffA.D.
                               0\xffffB.C.

        SSHORTDATE             yy/MM/dd
        SLONGDATE              gg yyyy'\x5e74'M'\x6708'd'\x65e5'

        IF_NAMES               0


      BEGINCALENDAR  4

        SCALENDAR              4

        ITWODIGITYEARMAX       2029

        SERARANGES          2  1911\xffffA.D.
                               0\xffffB.C.

        SSHORTDATE             yy/MM/dd
        SLONGDATE              gg yyyy'\x5e74'M'\x6708'd'\x65e5'

        IF_NAMES               0


    ENDCALENDAR



(4) Sample Unicode File


    UNICODE

      ASCIIDIGITS 3	

        0x00B2  0x0032
        0x00B3  0x0033
        0x00B9  0x0031

      FOLDCZONE 4

        0xff01  0x0021
        0xff02  0x0022
        0xff03  0x0023
        0xff04  0x0024

      COMP 5

        0x00C0  0x0041  0x0300
        0x00C8  0x0045  0x0300
        0x00CC  0x0049  0x0300
        0x00D1  0x004E  0x0303
        0x00D2  0x004F  0x0300

      HIRAGANA 3

        0x30a1  0x3041
        0xff67  0x3041
        0x30a2  0x3042

      KATAKANA 4

        0x3041  0x30a1
        0x3042  0x30a2
        0x3043  0x30a3
        0x3044  0x30a4

      HALFWIDTH 3

        0x30d2  0xff8b
        0x30d5  0xff8c
        0x30d8  0xff8d

      FULLWIDTH 4

        0xff61  0x3002
        0xff62  0x300c
        0xff63  0x300d
        0xff64  0x3001

    ENDUNICODE



(5) Sample Character Type File


    CTYPES 12

      0x0000  0x0020  0x0000  0x0000
      0x0009  0x0068  0x0009  0x0000
      0x0020  0x0048  0x000A  0x0000
      0x0021  0x0010  0x000B  0x0008
      0x002F  0x0010  0x0003  0x0008
      0x0030  0x0084  0x0003  0x0000
      0x0041  0x0181  0x0001  0x0000
      0x0048  0x0101  0x0001  0x0000
      0x0061  0x0182  0x0001  0x0000
      0x0067  0x0102  0x0001  0x0000
      0x00BF  0x0010  0x000B  0x0008
      0x00C0  0x0101  0x0001  0x0003



(6) Sample Sortkey File


    SORTKEY

      DEFAULT 4

        0x0030  2  4  2  2  0
        0x0031  2  5  2  2  0
        0x0065  2  7  2  3  2
        0x0066  2  8  2  3  3

    ENDSORTKEY



(7) Sample Sort Tables File


    SORTTABLES

      REVERSEDIACRITICS  4

        0x0000040c
        0x0000080c
        0x00000c0c
        0x0000100c


      DOUBLECOMPRESSION  1

        0x0000040e


      IDEOGRAPH_LCID_EXCEPTION  4

        0x00010404  big5
        0x00010804  big5
        0x00010411  xjis
        0x00010412  ksc


      MULTIPLEWEIGHTS  1

        36  10


      EXPANSION  2

        0x00c6  0x0041  0x0045
        0x00e6  0x0061  0x0065


      EXCEPTION  2

        LCID  0x0000040a  2

          0x0065  2  7  2  3  2
          0x0066  2  8  2  3  3


        LCID  0x0000040c  2
        LCID  0x0000080c

          0x0030  2  4  2  2  0
          0x0031  2  5  2  2  0


      COMPRESSION  2

        LCID 0x0000040a
        LCID 0x0000080a

          TWO  2

            0x0043  0x0048  2  4  2  3
            0x0063  0x0068  2  4  2  2

          THREE  1

            0x0043  0x0048  0x0049  2  4  2  3


        LCID 0x0000080c

          TWO  1

            0x0063  0x0068  2  4  2  2

          THREE  0


    ENDSORTTABLES



(8) Sample Ideograph Exceptions File


    IDEOGRAPH_EXCEPTION  4  xjis

      0xfa22  185  243
      0xfa23  185  244
      0xfa24  185  245
      0xfa25  185  246
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\bmoflocparser\inc\prodver\change.txt ===
Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.Increment the build number to 299.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\cdmprov\cdmwdm.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Internal TitleAlan Warwick Normal Alan Warwick Microsoft Word 9.0bjbjU The Common Diagnostic Model (CDM) is a framework for publishing device diagnostics and their results. Since it is based upon CIM it is closely coupled with other CIM classes and is part of the CIM heirarchy. However this would require that any kernel mode device driver that wants to expose diagnostics via CDM to not only implement the diagnostics in the device driver, but also write a WMI user mode provider that can interface with CIM. Having to also write the WMI user mode provider would be a disincentive to driver writers to include diagnostics. This paper proposes writingdescribes a generic WMI user mode provider (CDMProv) that would bridge the gap between CDM and the kernel mode device driver. Device driver writers could implement diagnostics within their kernel device driver and the CDM provider would publish the tests and results on behalf of the device driver. WDM Instrumentation Overview Since device drivers run in kernel mode they cannot interface with the DCOM interfaces provided by WMI and thus cannot be a traditional WMI provider. Drivers have no access to the WMI schema and due to the spartan nature of device driver design, drivers must expose their instrumentation data in a very simple way. Device drivers define data blocks which are named by a unique guid. Each data block may contain one or more data items. There may be more than one instance of the data block for a particular device and multiple devices may support the same data block so each instance of a data block is assigned an instance name which is typically a permutaion on the device s PnP device id.  So each data block is roughly equivalent to a WMI class and each data item within the class is roughly equivalent to a WMI property within the class. Because the interface to the device driver expects that the data block is formatted in a particular way a number of WDM specific qualifiers were invented that describe the order of the class properties within the data block, the guid that associates the driver data block to the class, and how to interpert variable length arrays. The device driver supplies the MOF as a blob of data and does no interpertation of it. In order to allow access to the device driver s data blocks by WMI consumers a WMI user mode provider named Wmiprov was written. This provider will access the device driver s data blocks via the classes and WDM specific qualifiers specified in the driver s MOF. However this provider is rather limited in functionality and cannot express associations, object references and does not try to associate the PnP ids specified in the data blocks with the PnP ids as stored within CIM classes such as CIM_LogicalDevice. WDM to CDM/CIM Mappings Since CDM relies upon CIM and always associates diagnostics tests with a CIM_ManagedSystemElement and Wmiprov can only supply a PnP Id for a WDM data block, some sort of mapping is needed so that diagnostics exposed by the driver as WDM data blocks can be exposed by CDM within the CIM framework. Typically there is an instance of a class derived from CIM_LogicalDevice would be related to the device that supplies WDM data blocks. Since a class derived from CIM_LogicalDevice is also derived from CIM_ManagedSystemElement instances of that class could be used wherever the CDM framework requires a CIM_ManagedSystemElement class instance. Additionally CIM_LogicalDevice contains a PnPDeviceId property whose value is the PnP Id associated with the device. Thus it should be possible to do a mapping between WDM data blocks and instances of classes derived from CIM_LogicalDevice. One issue that needs further investigation is how to deal with a situation where there is not a 1 to 1 mapping between PnP Id and CIM_LogicalDevice derived class instance.In order to implement the mapping between CIM and WDM classes it is required that the device driver use PDO or PnP Device Id based instance names when registering its data blocks. It is also required that a name of a CIM_LogicalDevice derived class be supplied so that the CIM class instance can be found.  A situation where there is more than one device that has the same PnP Id would not be an issue as this would only occur in the situation where more than one device object in the device stack is supplying WDM data blocks. Typically all of the devices objects in a stack are supplying information about the same physical (or logical) device so mapping them all to the same CIM_LogicalDevice derived class instance would not be problematic.  The Another situation that may occur is when a PnP Id would map to more than one CIM_LogicalDevice derived class instance. Typically this would be for a multifunction device, for example a CD/DVD drive that might map to a an instance of a DVD class and an instance of a CD class. Depending upon the CIM mapping class chosen the diagnostic could apply to both the CD and DVD CIM class instance or apply to only one of them whichever is appropriate. In this case the diagnostic test would be made available for both the CD and DVD class instances. This would most likely be correct in that the diagnostic test would apply to both devices. If this were not the case, for example there is a DVD specific test which should not apply to the CD class, more information is needed from the device driver. This is done by allowing the device driver to include a special qualifier on the diagnostic test class which would specify which set of CIM_LogicalDevice derived classes to search for the matching PnP Id. In fact this special qualifier should be used whenever possible since it improves the accuracy and performance of the mapping.  Generic CDM Provider Architecture Wmiprov has strict rules for how the classes that represent the WDM data blocks must be composed and is limited in the WMI functionality that it can expose to the device driver. Additionally Wmiprov does not do the CIM_LogicalDevice to PnP Id mapping described above. Therefore it is not possible to directly take a CDM derived class and expect Wmiprov to be able to implement it. There is an intermediate layer that implements the CDM classes and interfaces with the device driver via the WDM provider. This layer is the generic CDM provider or CDMProv. The device driver writes MOF for both the CDM classes which specify those classes that the classes are implemented by the CDM provider and the WDM classes which specify those classes that are implemented by the device driver to support the implementation of the CDM classes.. The CDM classes and properties will also include special CDM provider specific qualifers that inform the CDM provider how to implement the CDM classes and which WDM classes shadow them. The  CDM provider uses the information in the CDM classes to dynamically generate a  set of WDM classes that shadow the CDM classes and can be used with the WDM provider to interface with the device driver . Alternatively the driver writer can write MOF for the shadow classes if it requires more control over the mapping of CDM class to WDM class or allow the WmiMofCk tool to generate WDM classes. The device driver implements the data blocks represented by the shadow WDM classes . These shadow WDM classes can beand are handled directly by Wmiprov as any other WDM class would be . So whenever a CDM class is invoked the CDM provider will reflect the operation to the WDM class and via the WDM provider a request is made of the device driver implementing those classes. The CDM provider will create and maintain all of the CDM specific class instances and associations. It can dodoes this either when the CDM provider loads and when new devices drivers appear or it can do it on demand, ie; whenever the particular class or association is accessed the CDM provider will obtain all information needed to complete the operation. The CDM provider will invoke the WDM classes only when it needs to interact with the device driver. [More on how it works] WDM Classes Needed to Implement CDM Classes The shadow classes for all CIM_DiagnosticTest, CIM_DiagnosticSetting and CIM_DiagnosticResults derived classes are in turn derived frombased upon the idealized WDM classes WDM_DiagnosticTest, WDM_DiagnosticSettings and WDM_DiagnosticResults.  WDM_DiagnosticTest. The actual driver WDM classes are not derived from these classes, but are modeled from them.  This is because each class must be able to define unique values within a ValueMap and it is not possible to extend a ValueMap that is specified in a base class. Additional properties may be specified in the CDM class and in the shadow class. The CDM provider maps these properties between the CDM and WDM shadow classes, but only maps those properties if the names and data types are identical. The only exception to this is that the CDM provider will map enumerations (ValueMaps) from the WDM shadow classes into strings in the CDM classes. WDM Diagnostic Test class The WDM _Diagnostic Test class is the base WDM class that returns information about the specific diagnostic test and has methods that can run or discontinue the specific test. The CDM provider assigns the shadow class derived frombased upon WDM _Diagnostic Test to the corresponding CDM CIM_DiagnosticTest derived classes. The CDM provider uses the shadow class when the corresponding CIM_DiagnosticTest class is invoked. Any additional properties and methods specified in the CIM_DiagnosticTest derived class are reflected in the shadow class. The driver implements the data block and methods in the driver to return the test information and execute the methods as specified by the shadow class. The WDM Diagnostic Test class includes a RunTest method that has a single input parameter and a single output parameter, both of which are embedded classes. The class names of the parameter embedded classes can be arbitrary, however the property names and types of those classes are not. The input embedded class has two parameters: a string named ExecutionID and an embedded WDM Diagnostic Setting class named DiagSettings. The output embedded class has a uint32 value named Result and an embedded WDM Diagnostic Result class named DiagResult. WDM _Diagnostic Settings class The WDM _Diagnostic Settings class is an embedded class that is an input parameter to the WDM _Diagnostic Test RunTest method. It specifies all of the settings to use when executing the test. An array of these embedded classes is also returned when the WDM Diagnostic Settings List class is queried. Classes derived from WDM_DiagnosticSettings may be specified in as the shadow class and used by the CDM provider if the CDM classes utilize classes derived from the CIM_DiagnosticSettings class. Additional properties may be specified in the CDM and WDM classes provided the property names and types are identical.  WDM _Diagnostic Settings List class The WDM _Diagnostic Settings List class is implemented by the device driver and returns an array of WDM _Diagnostic Settings embedded classes. Each embedded class is a WDM_DiagnosticSettings embedded classinstance that specifies the possible settings that can be used by the consumer to execute the test. WDM _Diagnostic Results class The WDM _Diagnostic Results class is an embedded class that is an output from the WDM _Diagnostic Test RunTest method. It contains all of the results returned by the driver after the test has been completed. Classes derived from WDM_DiagnosticResults may be specified in as the shadow class and used by the CDM provider if the CDM classes utilize classes derived from the CIM_DiagnosticResults class.Additional properties may be specified in the WDM and CDM classes provided the property names and types are identical or the WDM property is a valuemap and the CDM property is a string. Here is the MOF that describes these three classes [abstract, class WDM_DiagnosticTest // Properties     [Description(           "If this test is currently being performed, the InUse "           "property is set to TRUE."),      read,      WmiDataId(1)     ]     boolean IsInUse = FALSE;     [      WmiDataId(2),      read     ]     uint32 ResourcesUsedCount;     [      Description(     "The \"Expensive\" qualifier can be applied to this class and "           "its RunTest method. If so, the ResourcesUsed property "           "describes the resources that are capitalized, based on a "           "default setup for the test. Multiple resources can be "           "specified since the property is an array."),              read,       ValueMap{"CPU", "Memory", "Hard Disk", "CDROM", "Floppy",               "PCI Bus", "USB Bus", "1394 Bus", "SCSI Bus", "IDE Bus",               "Network", "ISA Bus", "EISA Bus", "VESA Bus", "PCMCIA Bus",               "CardBus", "Access.bus", "NuBus", "AGP", "VME Bus",               "Sbus IEEE 1396-1993", "MCA Bus", "GIO Bus", "XIO Bus",               "HIO Bus", "PMC Bus", "SIO Bus"},       WmiSizeIs("ResourcesUsedCount"),       WmiDataId(3)     ]     uint16 ResourcesUsed[];     [      WmiDataId(2),      read     ]     uint32 CharacteristicsCount;     [Description (     "The descriptions for each Characteristic are below:\n "     "\n"           "* \"Is Exclusive\" (value=2) is specified for the test "           "module only if the diagnostic cannot run more than one test "           "at a time, regardless of how many SystemElements are "           "supported. Typically, this occurs when hardware or software "           "constraints prevent the test from running as multiple, "           "concurrent instances. If the diagnostic can be run against "           "multiple SystemElements, but only once per Element, then set "           "the IsExclusiveForMSE boolean property on the appropriate "           "instances of DiagnosticTestForMSE. \n"     "\n"     "* If \"Is Interactive\" (value=3) is set, then the diagnostic "           "displays a message either before, during or after testing. \n"     "\n"     "* Set \"Is Destructive\" (value=4) if the diagnostic will "           "destroy data, or reconfigure the Element that is being "           "tested. \n"      "\n"     "* \"Is Risky\" (value=5) indicates that data loss may occur "           "if the test is interrupted. Some tests make copies of data, "           "perform the test, and restore the data returning the tested "           "entity to its previous configuration. If the test is "           "interrupted, then loss of data or reconfiguration of the "           "tested ManagedSystemElement may occur. \n"     "\n"     "* If \"Is Package\" (value=6) is set, this test is actually "           "a set of lower level diagnostics, that are 'packaged' "           "together. \n"           "\n"           "\"Supports PercentOfTestCoverage\" (value=7) indicates that "           "a request for reduced test coverage can be specified using "           "the PercentOfTestCoverage property of Diagnostic Setting. \n"           "\n"           "Also, the values \"Unknown\" (0) and \"Other\" (1) may be "           "specified. If \"Other\" is defined, additional detail may be "           "found in the OtherCharacteristicDescription property of this "           "class."),       read,      Values{"Unknown", "Other", "Is Exclusive", "Is Interactive",              "Is Destructive", "Is Risky", "Is Package",               "Supports PercentOfTestCoverage"},      WmiSizeIs("CharacteristicsCount"),      WmiDataId(3)     ]      uint32 Characteristics[];     [      Description (           "Provides additional information for the Characteristic when "           "its value is set to 1 (\"Other\")."),         WmiDataId(4)     ]     string OtherCharacteristicDescription; // Methods     [Implemented:toSubclass toInstance,      WmiMethodId(1)     ]      void RunTest([IN] WDM_DiagnosticSetting,                  [OUT] WDM_DiagnosticResult,                  [OUT] uint16 Result);        [Implemented:toSubclass ToInstance,      WmiMethodId(2)     ]      void DiscontinueTest([OUT] Boolean TestingStopped,                            [OUT] uint32 Result);    // This is an embedded class [WMI,  guid("{???????}") class WDM_DiagnosticSetting     [Description (           "Sets the level of warning messages to be logged. If for "           "example no warning information is required, the level "           "would be set to \"No Warnings\" (value=0). Using \"Missing "           "Resources\" (value=1) will cause warnings to be generated "           "when required resources or hardware are not found. Setting "           "the value to 2, \"Testing Impacts\", results in both "           "missing resources and 'test impact' warnings (for example, "           "multiple retries required) to be reported."),       Values{"No Warnings", "Missing Resources",              "Testing Impacts", "All Warnings"},      Write,      WmiDataId(1)     ]      uint16 TestWarningLevel = 3;     [Description (     "When this flag is true, the diagnostic test will report "           "'soft errors'. In this context, a soft error is a message "           "from the diagnostic reporting a known defect in the "           "hardware or driver configuration, or execution "           "environment.  Examples are: \"Not enough memory\", "           "\"Driver IOCTL not implemented\", \"Video RAM compare "           "failed during polygon fill test (A known defect in the "           "video chipset)\", etc."),      Write,      WmiDataId(2)     ]      boolean ReportSoftErrors = FALSE;     [Description (     "When this flag is true, the diagnostic test will report "           "'status messages'. In this context, a status message "           "indicates that the diagnostic code is at a checkpoint. "     "Examples are: \"Completion of phase 1\", \"Complex "           "pattern\", etc."),      Write,      WmiDataId(3)     ]      boolean ReportStatusMessages = FALSE;     [Description (     "When this flag is true, the test will halt after finding "           "the first error."),      Write,      WmiDataId(4)     ]      boolean HaltOnError = FALSE;     [Description (           "When this flag is true, the test software should attempt "           "to run in an accelerated fashion either by reducing the "           "coverage or number of tests performed."),       Write,      WmiDataId(5)     ]      boolean QuickMode = FALSE;     [Units ("Percent"), MinValue (0), MaxValue (100),       Description(     "Requests the diagnostic software to reduce test coverage "           "to the specified percentage.  For example, a hard drive "           "scan test could be asked to run at 50%. The most "           "effective way to accomplish this is for the test software "           "to scan every other track, as opposed to only scanning the "           "first half of a drive. It is assumed that the effectiveness "           "of the test is impacted proportional to the percentage of "           "testing requested. Permissible values for this property "           "range from 0 to 100. \n"           "This property may not be applicable to all tests.  If it "           "can be set for a test, the value 7 (\"Supports PercentOf"           "TestCoverage\") should be entered into the DiagnosticTest's "           "Characteristics array."),       Write,      WmiDataId(6)     ]      uint8 PercentOfTestCoverage = 100; // Embedded class [WMI,  guid("{???????}") class WDM_DiagnosticResult     [Description (           "Describes how the test is progressing. For example, if "           "the test was discontinued, the TestState will be "           "\"Stopped\" (value=5), or if testing is currently "           "executing, TestState will be \"In Progress\" (4)."),         Values{"Unknown", "Other", "Passed", "Failed",               "In Progress", "Stopped"},      WmiDataId(1)     ]      uint16 TestState = 5;     [Description (           "When \"Other\" (value=1) is entered in the TestState "           "property, OtherStateDescription can be used to describe "           "the test's state."),      WmiDataId(1)     ]      string OtherStateDescription = ""; // AMW - Why is this in the result ????     [Units ("Seconds"),       Description (           "Estimated number of seconds to perform the Diagnostic"           "Test indicated by the DiagnosticCreationClassName and "           "DiagnosticName properties.  After the test has completed, "           "the actual elapsed time can be determined by subtracting "           "the TestStartTime from the TestCompletionTime. A similar "           "property is defined in the association, DiagnosticTest"           "ForMSE. The difference between the two properties is "           "that the value stored in the association is a generic "           "test execution time for the Element and the Test. But, "           "the value here (in DiagnosticResult) is the estimated "           "time that this instance of testing would run."),      WmiDataId(1)     ]     uint32 EstimatedTimeOfPerforming = 0;     [      WmiDataId(1)     ]     uint32 TestResultsCount;     [Description(           "TestResults stores one or more textual results from the "           "execution of the DiagnosticTest(s) referenced by the "           "DiagnosticCreationClassName and DiagnosticName properties. "           "One entry is considered a cell location in the array. Each "           "entry is time stamped and contains the following "           "information, in the following format: \n"           " yyymmddhhttssoutc|DiagnosticName|Textual message \n"           "Where: \n"           "  yyy = year, e.g. 2000 \n"           "  mm = month (01 - 12) \n"           "  dd = day (01 - 31) \n"            "  hh = hour (00 - 24) \n"           "  tt = minute (00-59) \n"           "  ss = second (00-59) \n"           "  o = \"+\" or \"-\" indicating the sign of the UTC "           "correction field \n"           "  utc = offset from UTC (Universal Coordinated Time) "           "in minutes \n"           "  DiagnosticName = string reference to the DiagnosticTest "           "object which was executed\n"           "  Textual message = free form string that is the 'test "           "result'."),       ArrayType ("Ordered"),      WmiSizeIs("TestResultsCount"),      WmiDataId(1)     ]      string TestResults[];     [Units ("Percent"), MinValue (0), MaxValue (100),       Description (           "The percentage of the test that has executed thus far, if the "           "TestState property is set to \"In Progress\" or the percentage "           "of the complete test that was executed if the TestState property "           "is set to any of the completed states (\"Passed\", \"Failed\" or "           "\"Stopped\"). Final results may be based on less than 100% coverage "           "due to the parameters defined in DiagnosticSetting (such as "           "QuickMode, PercentOfTestCoverage or HaltOnError)." ),      WmiDataId(1)     ]     uint8 PercentComplete = 0; CDM Provider Class Requirements  In order for the CDM providerconsumer to access the device driver via the WDM provider there needs to be a set of CDM classes that the CDM classes need to include a additional CDM provider specific qualifiers. These qualifiers are used as either runtime information for the CDM provider or as information to generate the shadow classes. Each diagnostic test must have an entire set of CDM classes specifically for that test and that test alone. Even if the CIM_DiagnosticSettings derived class is identical for different tests, the CDM provider requires that there be two different classes. CIM_DiagnosticTest Class Qualifiers For classes that are derived from CIM_DiagnosticTest the CDM Provider requires that it have all of the following class qualifiers. WdmDiagTest( Wdm Class Name This qualifier specifies the name of the WDM_DiagnosticTest derived based class assigned to this CDM class. If specified it indicates that the driver writer has included a shadow WDM _Diagnostic Test derived based class named  Wdm Class Name  in the driver s MOF that should be used to implement this CDM class. No shadow class will be autogenerated.   Guid( WDM guid This qualifier specifies the WDM data block guid that is used by the WDM provider to access the device driver. CdmDiagResult( Cdm Class Name This qualifier specifies the name of the CIM_DiagnosticResults derived class that the CDM provider should instantiate to create a results class instance. CdmDiagSetting( Cdm Class Name This qualifier specifies the name of the CIM_DiagnosticSetting derived class that the CDM provider should instantiate to create a settings class instance. CdmPackageList{ CDM Sub Test 1 CDM Sub Test 2 This qualifier indicates that this class is a package of tests and not an individual test. The value of the qualifier is an array of strings that contain the names of the CIM_DiagnosticTest derived classes that compose the package. If this qualifier is specified then no other CDM specific qualifiers should be specified and no additional properties should be included in the derived class. No WDM_DiagnosticTest derived class will be generated for this class as the class does not represent an actual test implemented by the driver. CdmDiagResultForMSE( Cdm Class Name This qualifier specifies the name of the CIM_DiagnosticResultForMSE derived class that the CDM provider should instantiate to create a diagnostic result for MSE class instance. CdmDiagResultForTest( Cdm Class Name This qualifier specifies the name of the CIM_DiagnosticResultForTest derived class that the CDM provider should instantiate to create a diagnostic result for test class instance. CdmDiagTestForMSE( Cdm Class Name This qualifier specifies the name of the CIM_DiagnosticTestForMSE derived class that the CDM provider should instantiate to create a diagnostic test for MSE class instance. CdmDiagSettingForTest( Cdm Class Name This qualifier specifies the name of the CIM_DiagnosticSettingForTest derived class that the CDM provider should instantiate to create a diagnostic setting for test class instance. CimClassMapping( Cim Class Name This qualifier specifies the CIM_LogicalDevice derived class name which has an instance that represents the device for which this test is written. The CDM provider will map the PnPId for the CIM_LogicalDevice derived class instance with the PnPId specified in the instance of the WDM Diagnostic Test shadow class. CIM_DiagnosticTest Property Qualifiers WmiDataId(id) This qualifier is an unsigned integer that specifies the order of the property within the WDM data block. If the WdmDiagTest qualifier is specified then it indicates that the driver writer has also included a WDM_DiagnosticTest derived class in its MOF to describe how the device driver should be called. In this case the Guid class qualifier and the WmiDataId property qualifiers should not be specified and each additional property in the CIM_DiagnosticTest derived class must have an identical property in the WDM_DiagnosticTest derived class. If the WdmDiagTest qualifier is not specified then the guid class qualifier is required. If there are any additional properties then each of these must have a WmiDataId qualifier. These qualifiers are needed to generate the related WDM_DiagnosticTest derived class. All WDM specific class and property qualifiers are copied from the CDM class into the generated shadow class.   CIM_DiagnosticResults Class Qualifiers WdmDiagResults( Wdm Class Name This qualifier specifies the name of the WDM_ Diagnostic Results derived class assigned to this CDM class. If specified it indicates that the driver writer has included a shadow WDM_DiagnosticRsults derived class named  Wdm Class Name  in the driver s MOF that should be used to implement this CDM class. No shadow class will be autogenerated.   WdmDiagOfflineResult( Wdm Class Name This qualifier specifies the name of the WDM class that can be queried to retrieve the diagnostic test results from the last offline diagnostic test executed. CdmDiagTest( CDM Diagnostic Test Class Name This qualifier specifies the name of the CIM_DiagnosticTest derived class associated with this class. It is used by the CDM provider as a  back pointer  to the CIM_DiagnosticTest derived class. Guid( WDM guid This qualifier specifies the WDM data block guid that is used by the WDM provider to access the device driver. CIM_DiagnosticResults Property Qualifiers WmiDataId(id) This qualifier is an unsigned integer that specifies the order of the property within the WDM data block. If the WdmDiagResults qualifier is specified then it indicates that the driver writer has also included a WDM_DiagnosticTest derived class in its MOF to describe how the device driver should be called. In this case the Guid class qualifier and the WmiDataId property qualifiers should not be specified and each additional property in the CIM_DiagnosticResults derived class must have an identical property in the WDM_DiagnosticResults derived class. If the WdmDiagResults qualifier is not specified then the guid class qualifier is required. If there are any additional properties then each of these are required to have a WmiDataId qualifier. These qualifiers are needed to generate the related WDM_DiagnosticResults derived class. All WDM specific class and property qualifiers are copied from the CDM class into the generated shadow class.   CIM_DiagnosticSettings Class Qualifiers WdmDiagSettings( Wdm Class Name This qualifier specifies the name of the WDM_ Diagnostic Settings derivedbased class assigned to this CDM class. If specified it indicates that the driver writer has included a shadow WDM_DiagnosticSettings derived class named  Wdm Class Name  in the driver s MOF that should be used to implement this CDM class. No shadow class will be generated.   WdmDiagSettingsList( Wdm Class Name This qualifier specifies the name of the WDM class that the CDM provider will query to obtain the list of settings that can be used to execute the test.  CdmDiagTest( CDM Diagnostic Test Class Name This qualifier specifies the name of the CIM_DiagnosticTest derived class associated with this class. It is used by the CDM provider as a  back pointer  to the CIM_DiagnosticTest derived class. Guid( WDM guid This qualifier specifies the WDM data block guid that is used by the WDM provider to access the device driver. CIM_DiagnosticSettings Property Qualifiers WmiDataId(id) This qualifier is an unsigned integer that specifies the order of the property within the WDM data block. If the WdmDiagSettings qualifier is specified then it indicates that the driver writer has also included a WDM_DiagnosticSettings derived class in its MOF to describe how the device driver should be called. In this case the Guid class qualifier and the WmiDataId property qualifiers should not be specified and each additional property in the CIM_DiagnosticSettings derived class must have an identical property in the WDM_DiagnosticSettings derived class. If the WdmDiagSettings qualifier is not specified then the guid class qualifier is required. If there are any additional properties then each of these are required to have a WmiDataId qualifier. These qualifiers are needed to generate the related WDM_DiagnosticSettings derived class. All WDM specific class and property qualifiers are copied from the CDM class into the generated shadow class.   Here is a sample MOF that a driver might specify WDM Class Generation The CDM provider architecture needs the existance of a set of shadow WDM classes in order to communicate with the device driver via the WDM provider. In most cases creating the shadow classes is a straightforward operation and can be left up to a software agent to do so.  The appropriate software agent is wmimofck.exe and not the CDM provider itself . The CDM provider assumes that all WDM shadow classes are established and the CdmDiagTest, CdmDiagSettings and CdmDiagResults qualifiers are specified on the CDM classes. Wmimofck will offer functionality that will take a binary mof containing CDM classes with the appropriate qualifiers as input and generate a .MOF (or .BMF) file that contains the orginal CDM classes (plus the addition of CdmDiagTest, CdmDiagSettings and CdmDiagResults qualifiers) and the generated WDM shadow classes How CDMProv implements CDM Classes The CDM provider will need to implement and populate all CDM class instanceses based upon the MOF and the information in the WDM _Diagnostic Test and WDM Diagnostic Settings List data blocks returned by the device driver.  When the first CDM class in the set of CDM classes for a test is referenced by a consumer, the CDM provider will attempt to establish the mapping from the CDM to WDM classes and build internal data structures to manage the CDM class instances. The first step in this process is to find the CIM_DiagnosticTest derived class for the set of CDM classes. This is done by determining if the first class is derived from CIM_DiagnosticTest and if not then looking for a CdmDiagTest qualifier on the referenced class. Once the CIM_DiagnosticTest derived class is found the class specified by the WdmDiagTest qualifier is queried all instances are mapped to instances of the class specified by the CimClassMapping qualifier. Note that there may be more than one mapping that results and in this case the CIM_DiagnosticTest derived class can have its RunTest method called with more than one MSE. At this point the CDM provider will use the information returned by the WDM Diagnostic Test class instance to populate the information in the CIM_DiagnosticTest derived class instance. The CDM provider will then query the WDM Diagnostic Settings List class and obtain the available settings for the test and use it to populate the CIM_DiagnosticSettings derived class instances. The CDM provider will also use this information to make available instances of the CDM association classes, ie those classes derived from CIM_DiagnosticSettingForTest and CIM_DiagnosticTestForMSE. When the RunTest method on a CIM_DiagnosticTest derived class is executed the CDM provider will determine the associated WDM Diagnostic Test class and the WDM instance name from the passed MSE via the CIM class mappings. The CDM provider will then copy the passed CIM_DiagnosticSettings class instance into an instance of the WDM Diagnostic Settings class and invoke the WDM Diagnostic Test class RunTest method. This method will return a WDM Diagnostic Result class instance which the CDM provider will copy into a newly created instance of the CIM_DiagnosticResult class. This new instance will be added to the list of diagnostic results and new instances of the CIM_DiagnosticResultForMSE derived class and CIM_DiagnosticResultForTest derived class are created. Results are persisted until the WinMgmt service is restarted or the ClearResults method is invoked.     CIM_DiagnosticTest        The device driver MOF will contain class definitions for the CIM_DiagnosticTest derived classes that it wants to expose via the CDM provider. A CIM_DiagnosticTest derived class may be either a package of tests or may be an actual test. When the CDM provider loads or detects a new WDM MOF has been added it creates a single instance of each CIM_DiagnosticTest derived class that is either a package or has an implemented WDM_DiagnostictTest derived class associated with it . If all tests with a package aren t implemented by the WDM_DiagnosticTest derived classes then the package instance is not created. For classes that are an actual test each of the classes must include a CDM provider required class qualifier WdmDiagTest. This qualifier has a single string value that specifies the class name for the corresponding WDM_DiagnosticTest derived class that the CDM provider will use to implement the CIM_DiagnosticTest derived class. The CIM_DiagnosticTest derived classes must also have a required class qualifier CdmDiagResult. This qualifier has a single string value that specifies the name of the CIM_DiagnosticResult derived class that is created to contain the results from running the test. The CIM_DiagnosticTest derived classes must also have a required class qualifier CdmDiagSetting. This qualifier has a single string value that specifies the name of the CIM_DiagnosticSetting derived class that is used to create instances that contain the settings for this test. For classes that are a package of tests the class definition has a CDM provider required qualifier CdmPackageList. This qualifier has an array of string values that specify the list of classes that compose the package.     CIM_DiagnosticResult         The device driver MOF will supply class definitions for CIM_DiagnosticResult derived classes. Each of these classes has a CDM provider required qualifier WdmDiagResult. This qualifer has a single string value that specifies the class name for the corresponding WDM_DiagnosticResult derived class that is returned by the WDM_DiagnosticTest derived class when its RunTest method is executed. The CDM provider will create a new instance of the CIM_DiagnosticResult derived class whenever a test is run by the CDM provider and will populate the values for the instance of the class from the values in the WDM_DiagnosticResult derived class CIM_DiagnosticSettings derived class passed to the RunTest method. Note that any additional properties in the CIM_DiagnosticSettings derived class must have equivalent (in name and data type) properties in the WDM_DiagnosticSettings class and the CIM_DiagnoticResult derived class. This is because the settings from the CIM_DiagnosticSettings derived class instance are copied into the CIM_DiagnosticResults derived class instance.     CIM_DiagnosticSetting The device driver MOF will supply class definitions for CIM_DiagnosticSetting derived classes. Each of these classes has a CDM provider required qualifier WdmDiagSetting. This qualifier has a single string value that specifies the class name for the corresponding WDM_DiagnosticSetting derived class that is created by the CDM provider to pass to the RunTest method.              CIM_DiagnosticResultForMSE Information Each instance of this class describes an association between CIM_DiagnosticResult derived class instances and CIM_ManagedSystemElement class instance. To get all of the results for a particular instance of a CIM_ManagedSystemElement you would query CIM_DiagnosticResultForMSE for all instances that contained a particular value for CIM_ManagedSystemElement.  Instances of CIM_DiagnosticResultForMSE are created by the CDM provider whenever it creates a new CIM_DiagnosticResult derived class. Instances are removed whenever the ClearResults method is called.     CIM_DiagnosticResultForTest Information Each instance of this class describes an association between CIM_DiagnosticResult derived class instances and CIM_DiagnosticTest class instance. To get all of the results for a particular instance of CIM_DiagnosticTest you would query CIM_DiagnosticResultForTest for all instances that contained a particular value for CIM_DiagnosticTest.  Instances of CIM_DiagnosticResultForTerst are created by the CDM provider whenever it creates a new CIM_DiagnosticResult derived class. Instances are removed whenever the ClearResults method is called.     CIM_DiagnosticTestForMSE Information Each instance of this class describes an association between CIM_DiagnosticTest derived class instances and CIM_ManagedSystemElement class instances. To get all of the CIM_ManagedSystemElements that support a particular instance of CIM_DiagnosticTest you would query CIM_DiagnosticTestForMSE for all instances that contained a particular value for CIM_DiagnosticTest. Alternatively you could determine all of the tests a particular managed system element supports. The CDM provider needs to establish the associations right when the CDM provider initializes since diagnostic consumers will expect that they will be available initially. The CDM provider will enumerate all of its CIM_DiagnosticTest derived classes and then query each of the associated WDM_DiagnosticTest derived classes so that it can get a complete list of all WDM_DiagnosticTest derived class instance and other information including the PnP Ids for the device stacks that support the tests. CDM provider will then map each of the PnP ids to CIM_LogicalDevice derived classes. At this point the CDM provider has enough information to populate all instances of the CIM_DiagnosticTestForMSE association class     CIM_DiagnosticTestInPackage Each instance of this class describes an association between a CIM_DiagnosticTest derived class instance and another CIM_DiagnosticTest class instance that represents a package of tests that contains the first CIM_DiagnosticTest derived class instance.  When the CDM provider loads it will enumerate all of its CIM_DiagnosticTest derived classes that have the CdmPackageList qualifier and have tests implemented by WDM_DiagnosticTest derived classes. With the list of packages and the list of tests in each package it can create all instances of this association.     CIM_DiagnosticResultsInPackage Each instance of this class describes an association between a CIM_DiagnosticResult derived class instance and another CIM_DiagnosticResult derived class instance that represents a package of tests that contains the first CIM_DiagnosticResult derived class instance.  When the CDM provider runs a test for a CIM_DiagnosticTest derived class that is a package it creates the CIM_DiagnosticResult derived class instances and will also create all instances of the CIM_DiagnosticResultsInPackage association.     CIM_DiagnosticTestSoftware Each instance of this class describes an association between a CIM_DiagnosticTest derived class instance and a CIM_SoftwareElement class instance.     CIM_DiagnosticSettingForTest Each instance of this class describes an association between a CIM_DiagnosticTest derived class instance and a CIM_DiagnosticSetting derived class instance. By querying for all instances that have a specific CIM_DiagnosticTest you can determine all of the possible settings that can be used for that test.  For each device the CDM provider will query a WDM_DiagnosticSetttingsList derived class which returns an array of WDM_DiagnosticSettings derived embedded classes that are each a setting appropriate for tests sent to the device. The CDM provider would then use the returned array of embedded classes to create instances of the CIM_DiagnosticSetting derived class and create instances of the CIM_DiagnosticSettingForTest association class. CDM Provider Operations To be written How Offline Diagnostics Fit In Offline diagnostics are those tests that cannot be executed while the device is servicing other requests. For example a disk cannot execute a long duration surface scan while files are opened and being accessed. The only   time when offline diagnostics can be executed is during the processing of the IRP_MN_START_DEVICE irp. The basic mechanism to execute offline diagnostics is to call the device driver with a request to execute a diagnostic. The device driver will then persist the request in the registry. The next time that the device receives a IRP_MN_START_DEVICE irp the device will get the request from the registry, clear the registry value and execute the test. It will then store the results of the test in its device extension and continue with the IRP_MN_START_DEVICE processing. Later user mode consumers can query for the saved results and know the results of the offline diagnostics. The CDM provider has support to allow devices to work within this structure. If CIM_DiagnosticResult derived class has a WdmDiagOfflineResult class qualifier then this means that the diagnostic may need to run offline. The value of the qualifier is the WDM class that when queried will report the results of the offline diagnostic.  When the CDM provider calls the WDM RunTest method it always passes the ExecutionID assigned to the test execution. After executing the RunTest method the CDM Provider examines the TestResults property returned and if it has the value  Offline Pending Execution  and the CIM_DiagnosticResults class has a WdmDiagOfflineResult qualifer then the CDM provider will know that the diagnostic is one that the device driver has requested to be run offline. At this point the CDM provider will call the operating system to request that PnP remove the device stack containing the device and then restart it. If this succeeds then the CDM provider will query the Wdm Diagnostic Offline Result class to retrieve the ExecutionID and the results of the offline diagnostics and use it to fill the CIM_DiagnosticResult derived class. The CDM Provider will validate that the ExecutionID was the one expeeted. How Logging Fits In WDM MOF Checking tool The MOF checking tool wmimofck.exe will be enhanced to support verifying that the MOF specified for the CDM provider is valid for the CDM provider to function correctly PAGE \# "'Page: '#' An alternative approach to the cdm prov generating the shadow classes is to have the driver writer add the shadow classes in the mof itself. The disadvantage of this scheme is that it is more (and in some cases unneeded) work is needed to be done by the driver writer and that he will need to maintain 2 classes, rather than 1. This has the following advantages Less work for CDM provider to do CDMProv Don t need to worry about keeping classes in sync or cleaning up shadow classes If the CDM base classes add a new property, how is that property represented (ie, what is WmiDataId) in the generated class ? The driver would be written to the old base class so the CDM provider would need to know that it should not include the new base class properties in the derived class. Also what happens when a v2 driver gets on a machine with v1 base classes ? The driver will return extra stuff that the cdmprov won t understand. How can we ensure that the  data block format will always be understood by the CDMProv ? If the driver writes the WDM classes itself then they can be used directly via wmiprov. I suspect tThe right compromise wouldsolution is be for the CDM provider not to generate the classes, but expect the shadow classes to be in the schema. The shadow classes would then come in the driver s mof and either be written by hand or generated by the wmimofck tool. PAGE \# "'Page: '#' A related approach would be to skip generating the WDM classes in the schema and maintain that information in the CDM provider itself. The CDM provider would then call the device driver directly using undocumented apis and have to parse the WDM data blocks itself. I believe that generating MOF is a better approach as it more appropriately layers the functionality. The latter is the current implementation. PAGE \# "'Page: '#' An issue here is how to do the shadow classes get updated and/or deleted. Shadow classes are implemented and written by the driver writer so this is not an issue anymore. PAGE \# "'Page: '#' Add the sample mof PAGE \# "'Page: '#' The CDM provider cannot generate the WDM shadow classes. Consider the case where a driver writes to v2 of the CDM spec and returns a data block that has data for the properties in the base v2 CDM class plus some data for a derived class. If this runs on v2 of the CDM provider then all is fine since the provider knows how to split up the data between the base properties and the derived class properties. Now lets say the same driver is run on a machine with a v1 CDM provider. The v1 CDM provider has no idea about the extra base properties in v2 and so will assign the v2 base property values to the derived class property values. Now this could be resolved by having a versioning mechanism, but that would introduce unneeded complexity. In any case if CDM is upgraded to v2 then the driver would need to be updated to v2 as well if it wanted to implement v2 features. And if the driver is updated then the driver writer can update its MOF at the same time. The WDM shadow class description is really a description of an interface into the device driver and so should be defined by the device driver writer and carried around by the device driver. PAGE \# "'Page: '#' Include information about the rules and process for generating the shadow classes from CDM classes PAGE \# "'Page: '#' How do we deal with packages where only some of the tests are implemented by WDM ? PAGE \# "'Page: '#' The definition for WDM_DiagnosticTest may not include enough information to completely fill out CIM_DiagnosticTestForMSE. Revisit the mof and add any needed properties. PAGE \# "'Page: '#' Does the CDM provider need to worry about this ? I don t know how to map pnpids to CIM_SoftwareElement. Maybe we can get the driver filename from the pnp id and map that to the CIM_SoftwareElement ? PAGE \# "'Page: '#' How do offline diagnostics fit within the CDM framwork ? How about scheduling diagnostics that need to wait ? Or wait til next boot ? How do we change driver filenames ? Do we mark some diags as needing a stack resart and do so automatically ? Do we expose on/offline primitives ? PAGE \# "'Page: '#' How about a model where async events can be posted as diagnostic results ? This could apply to devices that fail to start. Issue: How does failed device mof get into the schema ?  How about exposing eventlog items as diagnostic results ? PAGE \# "'Page: '#' Operations     Provider Load     RunTest     DiscontinueTest How do Offline Diagnostics fit in     Gather boot time and failed results and create CIM_DiagnosticResults     Need methods to schedule offline diags and then to bring them offline         and/or restart     Some standards for BIST so that dumb code could initiate diags ?? Or         do we want policy outside kernel ??     Do we want kernel support for managing the scheduling of diagnostics,         how they are maintained in the registry, and dispatching requests         to run those diags ? Or is it the driver's responsibility ?? Logging is really posting DiagResults asynchronously     How to persist the logging to safe builds and how to expose this via         WMI running on safe build ??     Aren't eventlogs also just DiagResults ??? Supply Driver File and other config info Preboot/EFI interaction Recovery console and boot loader support for enabling diagnostics PAGE \# "'Page: '#' Include a list of all of the rules to check for ~w~wpwpwp |ungu`
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\cdmprov\cdmwp.doc ===
Microsoft Word Document MSWordDoc Word.Document.8CIM Prototype Interface Title _PID_HLINKSCIM Prototype Interface Rod D Waltermann Normal Alan Warwick Microsoft Word 9.0Software: Microsoft Office "!&+7/&)4)!"0A149;>>>%.DIC<H7=>; ;("(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; "7QUVaqu 246Bt 5Sbrv j}:RI (`aCf |"^]Nv -Lm= " **NK/ Ox='=1. V?%'X 'T}J1 /FV>%. 44c'1P ** zI wa};?9R \yej n !i8)#h  -JRG> uZw|%~ a?-8Q/Y `n?\}Ucr NnQo$% 0PLTE IDATx }H_~' PNg59^c CrbTg tHN.~ Arr;~ w0HN| uw[L0 v)rZ/Sj~ jDHKX {8!&X 5h=~;g ~yM3fu N*eu4 -}l%!9 )o>^#uy 69kW- ~/%"w$ !5m4> PD,3(% ^m ~(7*% XMAjN GTBkpj yQMWFl ,[j)v zxmcY {;(g'w 305CBCp )[lWZ" ${rgE 0PLTE III[[[mmm IDATx *Zqk} E:}}u As(%T< %kQQRR TFE#>}s L@vibU" Co6L0 sJF?G ]<(~{ %p<TNGM 1+I@$\ ;[h`XS gi~!# Xx~woG jp<JX <Jj#ZH 6;~S:% V;~"a]y N\BSL RwO`> ses?G SR;Hh%U SR;HP 8BB7R z,vQDNJ*)}hpH 5d*>z 6g\#AI] BQZ8\ =tm9ESvJ v5.mA Q~(#U UR;@k *J]P# /zvQ) #5qPI6 K~JR! 0l~SC I%":C KE+@I 7xYGv 1y\Im YH}zu ~M:%u (%#Zv +;Y*9 FgA{z <w^RK um3R@ a]mZT[ U0::] W3!BI q5Ryz ;h_L\P {'QL~IR WnnB. N2D08X B(~I:_^ Ce:HH H54*a Mjl~]J*` qpnRY k#RQK 6&_+` 8\Qb87 h<me. R1#y`J ?g[,I lNJnR"( >e+&G\/*J TVN!I xM}0Yz l$Vxc +J<Z!m 'xro$ H5fD* PTh~!m~ /B9!p7 hRsgn !?EFj bWMq4 ;axv) _X 5iSi+#5 o~sPR ?&uz5 c'^f7% ,ym~] dE0_8<J Rh]iD2Ei `s~=p8 `L0-0 b7n63 <cRy-Tj S]2,0,_W,: kC?nr 4FUY0 %5E7RG @Sj%u @Sj%u Wqr*& B(a:w f28$k`6/ =^tSI QYt33 `%5Oly 8`1!C 3'E.CI jjdtf e*@ImA SImAU {DaWR[P xWakIf eYXeQTR[P ;@ImA ;BImA]hX CImA+ .;1)i 0PLTE IDATx xk{ak{- kHyK{O o"pWF WKL+- ^}pfV uqgJJ SQBKU */\#p @yom/Lm YY>S1? {[CXa .[lcsEUVy {ow3L |&pkn !a=*Py JvL|n mj{_w ;^S4L ye~9LS=L s40KT>.@ X;e$N OR~RR |(CDcubF_ {uZx] wbF-H R>H'f tbF-H R>H'f tbF-H |O|3|p 8SM;a i'Gkl" @:1c$:9 _uaRm 9n]+O # n_R \8:LGw $u'Igi OgS2[ 25U*+]m r[;.]bjbjU  INCLUDEPICTURE "file:///E:/My%20Webs/members/review/wip/DMTF-Wbem/CIM%20Compliance_files/image002.jpg" \* MERGEFORMATINET   Specification Copyright   "2000" Distributed Management Task Force, Inc. (DMTF). All rights reserved. DMTF is a not-for-profit association of industry members dedicated to promoting enterprise and systems management and interoperability. DMTF specifications and documents may be reproduced for uses consistent with this purpose by members and non-members, if correct attribution is given.  As DMTF specifications may be revised from time to time, the particular version and release cited should always be noted." Diagnostic Model in CIM January 6th, 2000 Abstract    Diagnostics under a multitasking operating system, like Windows NT(, is inherently complex.  Items like Hardware Abstraction Layers and accelerated hardware with advanced device drivers place an ever increasing amount of software between the applications and the hardware, there by making diagnostics less effective.  Kernel features that allow  hot swapping  of devices, (including processors, and memory) can be extended to allow  Suspend / Resume  features for diagnostics.  Under the realm of concurrent diagnostics, idle devices, e.g. processors, network cards, memory, ... could be  suspended  (taken off line) and testing performed, if the resource were needed or the testing complete, the device is  resumed  (brought back on line). Change History Version Author Comments 0.001 01/27/99 RDW/IBM First Draft 0.002 02/08/99 RDW/IBM Added CIM detail 0.003 03/22/99 RDW/IBM Added detail about modeling coverage, and  intro/vision 0.004 04/15/99 RDW/IBM Word smithing 0.005 04/22/99 RDW/IBM Changing CIM_DevDiag to subclass from CIM_Dependency 0.006 04/29/99 RDW/IBM Add subclass example, change name to CIM_Diag interface 0.007 05/12/99 RDW/IBM Changed CIM_Diag to subclass logical system element 0.008 06/20/99 RDW/IBM Changed CIM_Diag to subclass CIM_Service, added information about settings.  Moved many properties and qualifiers to the new Settings class. 0.009 07/05/99 RDW/IBM Deleted settings class replaced with a results class that stores settings information along with results 07/19/99 RDW/IBM First draft to the DMTF, matches Visio diagram, and MOF 1.001 07/28/99 DM/IBM Corrected typos 1.002 08/08/99 RDW/IBM Revised document with DMTF comments: Package class replaced with DiagnosticTestInPackage aggregation.  Separated Settings, and results.  Several new associations added.  1.003 08/29/98 RDW/IBM Revised document with DMTF comments: DiagnosticResult class uses an embedded DiagnosticSetting object, rather than copying all the properties of DiagnosticSetting.  DiagnosticResults no longer subclasses off of LogicalElement. 1.004 09/09/99 RDW/IBM Corrections and clarifications based on feed back from DMTF 1.005 09/14/99 RDW/IBM All valuemaps are now uint16, Results:  TestStartTime made key; TestState no key; TimeStamp not key, DiagnosticTest: ClearResults now takes a ref to a ManagedSystemElement; DiscontinueTest does not output a result object.  Added some usage examples for setting for test associations. 1.006 9/16/99 RDW/IBM Changed cardinality on diagnosticResultForTest to 0..1 from 1..1.  Renamed stuff to Is, e.g. IsPackage, IsInUse,   Changed method returns to uint32 1.007 9/25/99 RDW/IBM Typos corrected, new ones created. 1.008 10/05/99 RDW/IBM WHK/IBM Changes to make the Mof CIM Compliant.  Added an association to SoftwareElement 1.009 10/18/19 WHK/IBM Remove the imbedded settings object in Result and add a copy of the setting properties into Result  1.009a 10/20/99 RDW/IBM JSB/IBM Cleaned up association inheritance differences with the MOF 1.010 11/18/99 RDW/IBM Removed the copy of settings from the result object.  In theory  the settings in results problem will be address in CIM 2.4 1.011 11/29/99 RDW/IBM Change the wording on PercentComplete in diagnosticResult 1.012 01/06/00 RDW/IBM Final cleanup of typo s for DMTF publishing Editor Rod Waltermann, et al. A joint effort of IBM, Intel, Watergate Software, And Dell. The editor would like to thank the following contributors and reviewers (in alphabetical order):  Dell: Sidney Smith; IBM: Alfred Burress, Bill Klump, Ray Pedersen, Ken Young; Intel: Russ Carr, Eric Grimm, Arvind Kumar, Reza Nassib, Ioan Scumpu; Watergate Software: R. Marc Browning, Aki Korhonen, Mark Proudfoot For further information contact: DMTF diagnostic sub group: tm-diag@dmtf.org Company, product, and service names mentioned in this paper may be trademarks or service marks of their respected owners.  Table of Contents  TOC \o "1-3"  Introduction  PAGEREF _Toc472223750 \h  Instrumented Diagnostics through CIM  PAGEREF _Toc472223751 \h  Vision  PAGEREF _Toc472223752 \h  Road map  PAGEREF _Toc472223753 \h  CIM Schema for diagnostics  PAGEREF _Toc472223754 \h  Diagnostic class registration  PAGEREF _Toc472223755 \h  CIM_DiagnosticTest : CIM_Service  PAGEREF _Toc472223756 \h  CIM_DiagnosticSetting : CIM_Setting  PAGEREF _Toc472223757 \h  CIM_DiagnosticResult  PAGEREF _Toc472223758 \h  CIM_DiagnosticTestForMSE : CIM_ProvidesServiceToElement  PAGEREF _Toc472223759 \h  CIM_DiagnosticTestSoftware : CIM_Dependency  PAGEREF _Toc472223760 \h  CIM_DiagnosticTestInPackage : CIM_Component  PAGEREF _Toc472223761 \h  CIM_DiagnosticResultInPackage  PAGEREF _Toc472223762 \h  CIM_DiagnosticResultForMSE  PAGEREF _Toc472223763 \h  CIM_DiagnosticResultForTest  PAGEREF _Toc472223764 \h  CIM_ServiceServiceDependency  PAGEREF _Toc472223765 \h  CIM_DiagnosticSettingForTest : CIM_ElementSetting  PAGEREF _Toc472223766 \h  The data model, a picture:  PAGEREF _Toc472223767 \h  Class definitions  PAGEREF _Toc472223768 \h  CIM_DiagnosticTest : CIM_Service  PAGEREF _Toc472223769 \h  Properties  PAGEREF _Toc472223770 \h  Methods  PAGEREF _Toc472223771 \h  CIM_DiagnosticSetting : CIM_Setting  PAGEREF _Toc472223772 \h  CIM_DiagnosticResult  PAGEREF _Toc472223773 \h  Properties  PAGEREF _Toc472223774 \h  CIM_DiagnosticTestForMSE  PAGEREF _Toc472223775 \h  Properties  PAGEREF _Toc472223776 \h  CIM_DiagnosticResultsForMSE  PAGEREF _Toc472223777 \h  Properties  PAGEREF _Toc472223778 \h  CIM_DiagnosticResultsForTest  PAGEREF _Toc472223779 \h  Properties  PAGEREF _Toc472223780 \h  CIM_DiagnosticTestInPackage : CIM_Componet  PAGEREF _Toc472223781 \h  Properties  PAGEREF _Toc472223782 \h  CIM_DiagnosticResultInPackage  PAGEREF _Toc472223783 \h  Properties  PAGEREF _Toc472223784 \h  CIM_DiagnosticTestSoftware : CIM_Dependency  PAGEREF _Toc472223785 \h  Properties  PAGEREF _Toc472223786 \h  CIM_DiagnosticSettingForTest : CIM_ElementSetting  PAGEREF _Toc472223787 \h  Properties  PAGEREF _Toc472223788 \h  Other features of CIM to be used  PAGEREF _Toc472223789 \h  CIM Events  PAGEREF _Toc472223790 \h  CIM Collection classes  PAGEREF _Toc472223791 \h  SDK Information  PAGEREF _Toc472223792 \h  MOF Class Definitions  PAGEREF _Toc472223793 \h  Qualifiers  PAGEREF _Toc472223794 \h  Introduction  Diagnostics under a multitasking operating system, like Windows NT(, is inherently complex.  Items like Hardware Abstraction Layers and accelerated hardware with advanced device drivers place an ever increasing amount of software between the applications and the hardware, there by making diagnostics less effective.  Kernel features that allow  hot swapping  of devices, (including processors, and memory) can be extended to allow  Suspend / Resume  features for diagnostics.  Under the realm of concurrent diagnostics, idle devices, e.g. processors, network cards, memory, ... could be  suspended  (taken off line) and testing performed, if the resource were needed or the testing complete, the device is  resumed  (brought back on line). For example: the customer is installing a new card to allow connection to a digital camera.  When they install the device driver for the camera, a diagnostic for the hardware is installed along with the driver, this diagnostic is refered to as a diagnostic data provider.  This diagnostic provider will register its set of diagnostic methods and data, called tests, into CIM (Common Information Model).  These tests describe what methods and features of the standard are supported.  When the customer runs their diagnostic program it will query CIM for a list of registered devices that have tests.  The program will then build a menu of tests for the installed devices.  Even though the diagnostic program was purchased when the computer was new and never updated, the new digital camera option shows up in the menu.  As we strive to move into the realm of concurrent / predictive diagnostics the primary requirements are: Diagnostics from multiple sources, that interface through a common framework. The ability to place idle resources in a  diagnostic mode  for diagnostic testing. Diagnostics can be remotely administered through CIM, or an enterprise management system. A diagnostic consumer can access the cost of performing a given diagnostic, based on system load, or resources used during the diagnosing. Abnormal device conditions can trigger diagnostic events During the development of this model we focused on three main users of diagnostics: the customer, service personnel, and manufacturing.  All three have somewhat different requirements The customer would like to have a high level view of the system, i.e. they would like a pass/fail information about the device.  Additionally we would like to link with other data in CIM for example inventory and FRU (Field replaceable unit) data, and predictive failure data for hard disks, memory, etc.  This combined with diagnostic logs stored on the machine, allow an IT (Information Technology) manager to gain a system health view over their machines.  Another requirement is the ability to access and test the machines remotely.   CIM also allows the customer to log the data for trend analysis, or to make it available to the service personnel. Service needs to be able to access the machine or the test results remotely, allowing them to validate what parts to ship/bring along to complete the repair.  The servicer needs to be able to recreate the error, this implies viewing the settings for the diagnostic at the time the error was logged.  The manufacturing environment needs are somewhat different.  During burn-in, a period of extensive testing of a randomly selected machine for quality control, the OS and all components are installed.  This is a point where this model seems to fit; however during other phases of the assembly, diagnostic requirements are very different.  Having the same test modules work in a manufacturing only environment and a common diagnostics model is desirable, both for repeatability, and to help reduce cost of development. Along with the three users, we tried to stay with a model that focused on modeling the results of the diagnostic being performed on the device (a customer centered model), instead of modeling the methods/tests.  Instrumented Diagnostics through CIM A diagnostic is broken into two parts.  A diagnostic provider, and a diagnostic consumer.  The diagnostic consumer is the test module that will request a test, or call the methods in a diagnostic provider, to perform a single test or a set of tests on the device.  The diagnostic provider registers itself through CIM to export the events and methods supported.  When a diagnostic test module queries CIM for diagnostics supported on a given device, CIM will report about the instance of the diagnostic provider.  This effectively establishes communication between the provider and the consumer.  The consumer can now enable events, or execute methods registered by the provider. Vision Modeling diagnostics further enhances the remote manageability of a machine.  A diagnostic is composed of a collection of methods and their resulting pass/fail and logged data.  This document further breaks the model down into classes, and associations.  The classes being for the diagnostic, its  methods, and results from their execution.  The associations relate the tests to the devices they support.   The diagnostic test class models a single test, e.g. a linear scan disk test.  A test has properties that describe its function.  Properties that show if the test is currently in use, will destroy data (a hard drive test that writes to the disk could overwrite data), and so on.  A test is designed with a main entry point to run the test.   Along with running the test, there is a method to stop its execution. The test needs to be associated with the hardware it can diagnose.  As an example you have a machine with two Ethernet cards (Network Interface Cards NICs)) from the same manufacturer.  You only need to have one diagnostic exposed through CIM, one diagnostic, with two associations, one for each NIC. Now we have tests, and devices they can act upon.  It is expected that there will be more than one test for a given device.  A way to collect the tests that share a common device is needed.  A diagnostic package describes a collection of tests.  This collection will perform basically the same way that an individual test would perform, i.e. you can start testing, stop testing, check if testing is in progress, etc.  The setting and result classes store all the information to rerun a test on the same device.  For example you have a machine with a hard drive.  There are two tests for the hard drive and one package containing both tests.  Given this example, we call one of the tests.  This test, with its setting object, will create a result object as it s output.   If instead we call the package, there will still be only one setting object; however each test will create it s own result object that is associated to the package s result object.   In effect creating a package of results from all the tests.  The way to associate these results back to the device is defined in a manner similar to the way a test is associated to the device.  Figure 1 illustrates an example of how the tests are composed into packages.  The round objects are the tests and the packages.  The rounded corner squares represent settings for a test.  Finally the rectangle represents a service that a test is dependent on for testing.  For this example we have a complete system diagnostic package composed of an ethernet test package, and a hard drive test package.  The ethernet test package has two tests loop-back, and ping.  While the hard drive test package has three: linear scan test, random seek test, and controller test. Each sub-test has a setting object, also note that the system diagnostic has settings associated with it.  If, for example, the loopback test was run the settings for each sub-test would be used.  However, if the system diagnostic was run its' settings would be used instead of each individual test s settings.  When a test is dependent on a service, in this example TCP/IP, to either be started or stopped, the test can associate itself to the service as a way of modeling that dependency.  As the figure shows the loop-back test is dependent on the TCP/IP service being stopped before it can test, while the ping test needs the TCP/IP service running in order to do its testing. Figure 1: Example of tests in test package Road map The first release of this specification covers on-demand diagnostics.  Diagnostics will run when invoked by a method call. Release two is scheduled to address many new areas including: real time (concurrent) and event driven diagnostics, tests that need to interact with someone, e.g. a floppy disk test needs someone to insert the disk, data logging, and parameter validation.  Other topics in no particular order include: watch-dog timers, synchronous method execution, diagnostic mode, and pre/post diagnostic processing. The third version expects to cover self-diagnostics.   Utilizing the base built in the first and second versions, a AI (Artificial Intelligence) based data consumer could use the diagnostic results along with other CIM based data to provide a  self-healing  function.  A hypothetical example is a server with multiple network cards.  One of the NICs is causing problems on the machine. The fault detection built into the card throws an event that a diagnostic manager will use to: launch the concurrent diagnostics built into the device driver, trigger an event which would send requests to have the offending card powered down, and the network traffic rerouted.  The system admin would be informed, and an entry in the system log stating the problem and time are recorded. CIM Schema for diagnostics Diagnostic class registration Diagnostic providers need to subclass from three classes: CIM_DiagnosticTest, CIM_DiagnosticSetting, and CIM_DiagnosticResult.   The provider will also need to subclass from seven associations: CIM_DiagnosticTestForMSE, CIM_DiagnosticSettingForTest, CIM_DiagnosticTestInPackage, CIM_DiagnosticResultInPackage, CIM_DiagnosticResultForTest , CIM_DiagnosticResultForMSE, and CIM_DiagnosticTestDependency. CIM_DiagnosticTest : CIM_Service The actual diagnostic test instances and subclasses are here.  It is expected that there will be a subclass for every manufacturer of diagnostics and one or more instances of diagnostic tests.  CIM_DiagnosticSetting : CIM_Setting This class is used to store the default or run-specific settings for a given test.  This class works in conjunction with the result class, see the example in CIM_DiagnosticResult. CIM_DiagnosticResult  For every RunTest method from a diagnostic instance of CIM_DiagnosticTest executed against an instance of managed system element, there will be an instance of a subclass of CIM_DiagnosticResult.  Along with the results there will be an association instance of a subclass in CIM_DiagnosticResultsForMSE.  For example, we have a subclass of CIM_DiagnosticTest titled vendorX_ScanDiskDiag, which has one instance called vendorX_ScanDiskDiag_1.  Now we have a subclass of CIM_DiagnosticTestForMSE titled vendorX_ScanDiskDiagAssoc.  There is one instance of this association for the hard drive, vendorX_HardDiskAssoc_1.  Finally a subclass of CIM_DiagnosticResult  titled vendorX_ScanDisk_1DiagResult is created to store all the data for each running of the test. When the RunTest method is invoked it will require one of the associations, and optionally an instance of vendorX_ScanDisk_1DiagSetting. If the consumer wants to change any of the default settings, it will create its  own instance of vendorX_ScanDisk_1DiagSetting, adjust the test settings, and pass this instance to the RunTest method when it is invoked.   If an instance of vendorX_ScanDisk_1DiagSetting is not provided the default setting object will be used.  When the testing begins an instance of vendorX_ScanDisk_1DiagResult is created which stores a copy of the settings and all the resulting test information. CIM_DiagnosticTestForMSE : CIM_ProvidesServiceToElement This is an association class to relate a device under CIM_ManagedSystemElement with the diagnostic test instance provider in CIM_DiagnosticTest : CIM_Service.  If there is no device registered for which a diagnostic test can service, that diagnostic will not register an association.  Diagnostic consumers will query this association for instances of devices with a diagnostic test provider. CIM_DiagnosticTestSoftware : CIM_Dependency This is an association class to relate a diagnostic test under CIM_DiagnosticTest : CIM_Service with the SoftwareElement that provides this test.  SoftwareElement describes information about the test, for example: vendor, version and other deployment information. CIM_DiagnosticTestInPackage : CIM_Component This is an association class to relate a diagnostic test under CIM_DiagnosticTest with the diagnostic test package instance also under CIM_DiagnosticTest.  Diagnostic consumers are expected to query this association in order to discover which tests are in a given package. CIM_DiagnosticResultInPackage  This is an association class to relate a diagnostic test s results under CIM_DiagnosticResult : CIM_LogicalElement with the diagnostic result package instance also under CIM_DiagnosticResult.  Diagnostic consumers are expected to query this association in order to discover which results are in a given package. CIM_DiagnosticResultForMSE  This is an association class to relate a device under CIM_ManagedSystemElement with the diagnostic result instance provider in CIM_DiagnosticResult.  If there are no results, do not register an association.  Results for a given execution of a diagnostic are stored in the diagnostic result class.  Diagnostic consumers will query this association for instances of diagnostic result for devices with a diagnostic provider.  CIM_DiagnosticResultForTest This is an association class to relate a diagnostic result under CIM_DiagnosticResult with the diagnostic test instance under CIM_DiagnosticTest.  Diagnostic consumers are expected to query this association in order to discover which tests have results from previous runs. CIM_ServiceServiceDependency This is an association class used to order execution of tests with services or other tests that may be running on the device.  For example: A network interface card ping-test requires that the TCP/IP service be running on the card before it can execute the test.  Diagnostic consumers are expected to query this association to discover which tests have dependencies on other services or tests. CIM_DiagnosticSettingForTest : CIM_ElementSetting This is an association class to relate a diagnostic test s settings under CIM_DiagnosticSetting : CIM_Setting with the diagnostic test instance under CIM_DiagnosticTest.  Diagnostic consumers are expected to query this association in order to discover settings for a given test. The data model, a picture: Figure 2, below, shows the relationship between the classes and figure 3 shows the associations. Figure 2: UML diagnostic Classes  Figure 3: UML Diagnostic Associations Class definitions CIM_DiagnosticTest : CIM_Service The CIM_DiagnosticTest class represents the ability to execute a test.  Specific diagnostic tests may be defined by subclassing and/or instantiating this object. To provide more detail for a type of test (additional properties and methods), subclassing is appropriate.  To indicate that a test exists and may be applied to a specific ManagedSystemElement, instantiation of the DiagnosticTest class may suffice. Properties Characteristics[] Uint16 array Values supported Unknown Other When other is defined, additional detail may be found in the OtherCharacteristicDescription property of this class. IsExclusive  If exclusive is  specified for the test module only if the diagnostic cannot run more than one test                               at a time, regardless of how many SystemElements are supported. Typically, this occurs when                               hardware or software constraints prevent the test from running as multiple, concurrent instances.                               If the diagnostic can be run against multiple SystemElements, but only once per Element, then set                               the IsExclusiveForMSE boolean property on the appropriate instances of DiagnosticTestForMSE. IsInteractive IsInteractive is set if the diagnostic displays a message either before, during or after the testing. IsDestructive IsDestructive is set if the diagnostic will destroy data or reconfigure the Element that is being tested. IsRisky Is Risky indicates that data loss may occur if the test is interrupted. Some tests make copies of the data, perform the test, and restore the data returning the tested entity to its previous configuration. If the test is interrupted, then loss of data or reconfiguration of the tested ManagedSystenElement may occur. IsPackage If IsPackage is set, this test is actually a set of lower level diagnostics, that are packaged together . SupportsPrecentOfCoverage SupportsPrecentOfCoverage indicates that a request for reduced coverage can be specified using the PrecentOfCoverage property of this class. OtherCharacteristicDescription; String Provides additional information for the Characteristic when its value is set to "Other". IsInuse Boolean If this test is being performed, the InUse property is set to TRUE. To determine which ManagedSystemElement is being tested, query the DiagnosticResults objects associated with this test (query DiagnosticResultForTest), and for which the TrestState equals InProgress, The DiagnosticResult object is associated with the SystemElement under test, using DiagnosticResultForMSE.. ResourcesUsed [] Uint16 Array, type  , read only The Expensive qualifier can be applied to this class and its RunTest method. If so, the ResourcesUsed property describes the resources that are capitalized, based on a default setup for the test. Multiple resources can be specified since this is an array.    Currently recognized values are: Memory  Hard Disk, CDROM, Floppy PCI Bus, USB Bus , IEEE 1394 Bus, SCSI Bus, IDE Bus ISA Bus, EISA Bus, VESA Bus, PCMCIA Bus, CardBus  Access.bus, NuBus, AGP, VME Bus  Sbus IEEE 1396-1993, MCA Bus, GIO Bus, XIO Bus, HIO Bus, PMC Bus, SIO Bus Network This property uses value mapping with the above keywords Methods Diagnostic providers should register for the following methods.  Access these methods through the functionality built-into the CIM Object manager. Uint32 RunTest  The RunTest method executes this DiagnosticTest for the specified ManagedSystemElement (defined using the SystemElement input parameter).  Results of the test are stored in a CIM_DiagnosticResult object, a reference to which is returned as the Result output parameter. How the test should execute, i.e. its settings, is defined in a CIM_DiagnosticSetting object (or by a subclass of DiagnosticSetting).  A reference to a Setting object is specified using the "Setting" input parameter.  If a reference is not passed into the method, then a default DiagnosticSetting may be specified and used. This default Setting is associated with the DiagnoticTest using the DefaultSetting relationship of the Core Model.  [IN] Ref CIM_ManagedSystemElement The Path to the logical element you want to test. [IN] Ref CIM_DiagnosticSetting  Default for this parameter is  .  If the consumer wants to change the default settings, it should instantiate an instance of CIM_DiagnosticSetting or the correct subclass, make any changes needed, then pass the reference in this parameter.     [OUT] String Ref CIM_DiagnosticResult  The instance that contains the settings used and the results of this run Method Returns: uint32 and supports the following values: These return codes are expected to adhere to the XML return codes as they are introduced. 0 = OK (function succeeded.  Note: the hardware may have failed the test even though the function succeeded.) 1 = UnspecifiedError (unexpected failure, reason unknown/unspecified) 2 = NotImplemented (member function is no implemented) 3 = OutOfResources (component could not allocate required resources) Uint32 ClearResults    Execution of this method will delete all instances of the CIM_DiagnosticResultForMSE object, for this DiagnosticTest  and the specified ManagedSystemElement (defined using the SystemElement input parameter). Also all of the association refereeing to the result object will be deleted.  One output parameter is defined - ResultsNotCleared - which is a string array that lists the keys of the DiagnosticResults which could not be deleted.  This information enables those Results to be revisited and either manually removed, or other corrective action taken.  [IN] Ref CIM_ManagedSystemElement A reference to the managed system element that you want the test results cleared. [OUT] String ResultsNotCleared [] Any instances of the correct subclass of CIM_DiagnosticResult that were not deleted, will have their name stored in this array. An empty array implies that all of the results were deleted. Method Returns: uint32 and supports the following values: These return codes are expected to adhere to the XML return codes as they are introduced. 0 = OK  (function succeeded.  Note: the hardware may have failed the test even though the function succeeded.) 1 = UnspecifiedError (unexpected failure, reason unknown/unspecified) 2 = NotImplemented (member function is no implemented) 3 = OutOfResources (component could not allocate required resources) Uint32 DiscontinueTest                                                                                                                                                                                        After invocation of this method and its completion, the specified test(s) will be discontinued for the indicated          ManagedSystemElement (defined by the SystemElement input parameter). The test to discontinue is specified using the Result input parameter. If all instances of this test should be stopped for the SystemElement, then the Result reference should be NULL. Upon completion of the method, test status and other information (such as PercentComplete) will be stored in the DiagnosticResult instance defined by the Result input parameter. The output parameter, TestingStopped, is used as follows:  Set to TRUE if testing was successfully stopped.   Set to FALSE if the current test(s) can not be stopped. If set to FALSE, testing will stop when the diagnostic is able to do so safely. To determine if/when  the testing is stopped, check the TestState property in the DiagnosticResult          instance defined by the Result parameter. TestState will change from In Progress to Stopped.  [IN] Ref CIM_ManagedSystemElement The reference to the logical element on which you want testing to stop. [IN] Ref CIM_DiagnosticResult The instance that contains the settings used and the results of this run [OUT] Boolean TestingStopped TRUE if all testing was successfully stopped. FALSE if the current test cannot be stopped.  Testing will stop when the diagnostic is able to do so safely.  Method Returns: uint32 and supports the following values: These return codes are expected to adhere to the XML return codes as they are introduced. 0 = OK (function succeeded.  Note: the hardware may have failed the test even though the function succeeded.) 1 = UnspecifiedError (unexpected failure, reason unknown/unspecified) 2 = NotImplemented (member function is no implemented) 3 = OutOfResources (component could not allocate required resources) Any additional methods added should support the following parameters. [IN] Ref CIM_ManagedSystemElement A reference to the logical element you want to test. [IN] Ref CIM_DiagnosticSetting  Default for this parameter is  .  If the consumer wants to change the default settings, it should instantiate an instance of CIM_DiagnosticSetting or the correct subclass, make any changes needed, then pass the reference in this parameter.     [OUT] String Ref CIM_DiagnosticResult  subclass instance that contains the settings used and the results of this run Method Returns: uint32 and supports the following values: (function succeeded.  Note: the hardware may have failed the test even though the function succeeded.) UnspecifiedError (unexpected failure, reason unknown/unspecified) NotImplemented (member function is no implemented) OutOfResources (component could not allocate required resources) CIM_DiagnosticSetting : CIM_Setting Specific diagnostic test parameters and execution instructions are defined by subclassing and/or instantiating           the DiagnosticSetting object. To provide more detailed Settings for a type of test (i.e., additional properties),           subclassing is appropriate. When only the generic Setting information is required, instantiation of the Diagnostic          Setting class may suffice. The following properties are copied to the diagnostics results class.  Any new properties added to diagnostic setting must be replicated in diagnostic results. SettingID String Key property The identifier by which the DiagnosticSetting object is known and uniquely named. If there is a one to one mapping between the DiagnosticSetting and its DiagnosticTest (and there will always be only a one to one mapping), then the DiagnosticCreationClassName and DiagnosticName key pair can be used as the SettingID.. TestWarningLevel  Uint16 Sets the level of warning messages to be logged. If for example no warning information is required, the level would be set to No Warnings. Using MissingResources will cause warnings to be generated when required resources or hardware are not found. Setting the value to Testing Impacts, results in both missing resources and 'test impact' warnings (for example, multiple retries required) to be reported. This property uses value mapping, and  values to define the following keywords No Warnings   Missing Resources  Testing Impacts  All Warnings  ReportSoftErrors Boolean A soft error, in this context, is a message from the diagnostic software that relates to a known defect in the hardware or driver and has a valid workaround.  For example: Not enough memory Driver IOCTL not implemented Video ram compare failed during polygon fill test (A known defect in the video chipset). ReportStatusMessges Boolean When this flag is true, the diagnostic test will report status information.  Examples are:  Diagnostic state information Debug or trap information HaltOnError Boolean When this flag is TRUE, the test will halt after finding the first error. QuickMode  Boolean  When this flag is true, the test software should attempt to run in an accelerated fashion either by reducing the coverage or number of tests performed.  PercentOfTestCoverage uint8 Requests the diagnostic software to reduce test coverage to the specified percentage.  For example, a hard drive scan test could be asked to run at 50%. The most effective way to accomplish this is for the test software to scan every other track, as opposed to only scanning the first half of a drive. It is assumed that the effectiveness of the test is impacted proportional to the percentage of testing requested. Permissible values for this property range from 0 to 100.               This property may not be applicable to all tests.  If it can be set for a test, the value Supports PercentOf               TestCoverage should be entered into the Diagnostic Test's Characteristics array. CIM_DiagnosticResult When a DiagnosticTest Service is running, test results are reported using a DiagnosticResult object, or one of its           subclasses. A DiagnosticTest may be running because its Service is Started or due to an invocation of the RunTest           method. DiagnosticResults are related to their Test via an instance of the DiagnosticResultsForMSE association.   An instance of the settings could be changed without the DiagnosticResults indicating that data has been changed.  Therefore the DiagnosticSetting used is copied in the DiagnosticResults. Properties DiagnosticName String Key property Propagated from CIM_DiagnosticTest The scoping test s name. Must be a unique name Use: companyName_TestName_N N is a counter for each instance of the diagnostic result method provider. DiagnosticCreationClassName String Key property The scoping test s CreationClassName ExecutionID String Key property The Unique identifier for an instance of DiagnosticResults. TimeStamp DateTime, read only The date and time the result was last updated. IsPackage Boolean, read only If this property is TRUE, then this DiagnosticResult summarizes the results from the execution of a packaged set of DiagnosticTests. The Tests in the package can be identified by following the DiagnosticResultForTest association to the test and then using the DiagnosticTestInPackage aggregation. The individual Results can be broken out by instantiating DiagnosticResults for the individual lower level tests and aggregating into the  summary  Result using the DiagnosticResultInPackage ..   TestStartTime DateTime, read only The time and date when this test started. TestCompletionTime DateTime, read only The time and date when this test completed. TestState  Uint16 Describes how the test is progressing. For example, if the test was discontinued, the TestState will be           Stopped, or if testing is currently executing, TestState will be In Progress. This property uses value mapping, and  values to define the following keywords Unknown Other Passed Failed  InProgress Stopped  OtherStateDescription String When Other is entered in the TestState property, OtherStateDescription can be used to describe the test's state. TestResults [] String Array, type  Ordered , read only. One entry is considered a cell location in the array. TestResults stores one or more textual results from the execution of the DiagnosticTest(s) referenced by the           DiagnosticCreationClassName and DiagnosticName properties. One entry is considered a cell location in the array. Each entry is time stamped and contains the following information, in the following format:            yyymmddhhttssoutc|DiagnosticName|Textual message Where: yyyy = year, e.g. 2000 mm = month (01  dd = day (01  hh = hour (00  tt = minute (00-59) ss = second (00-59) o =  "+" or "-", indicating the sign of the UTC (Universal Coordinated Time; for all intents and purposes the same as Greenwich Mean Time) correction field. utc is the offset from UTC in minutes (using the sign indicated by o). A '|' followed by the name of either the diagnostic package, or the diagnostic test that is making the entry.   Every thing following the second '|' is the textual message. PercentComplete The percentage of the test that has executed thus far, if the TestState property is set to \"In Progress\" or the percentage of the complete test that was executed if the TestState property is set to any of the completed states (\"Passed\", \"Failed\" or \"Stopped\"). Final results may be based on less than 100% coverage due to the parameters defined in DiagnosticSetting (such as QuickMode, PercentOfTestCoverage or HaltOnError). uint8, read only This value varies from 0 to 100 during execution of the DiagnosticTest. If the value is 0, the test has not started. If the value is 100, then testing is complete. In the case of a package, this is the sum of the percentage of contribution for each method EstimatedTimeOfPerforming  uint32 Estimated number of seconds to perform the Diagnostic Test indicated by the DiagnosticCreationClassName and DiagnosticName properties.  After the test has completed, the actual elapsed time can be determined by subtracting the TestStartTime from the TestCompletionTime. A similar property is defined in the association, DiagnosticTestForMSE. The difference between the two properties is that the value stored in the association is a generic test execution time for the Element and the Test. But, the value here (in DiagnosticResult) is the estimated time that this instance of testing would run. The following properties are duplicated from DiagnosticSettings TestWarningLevel ReportSoftErrors ReportStatusMessages HaltOnError QuickMode PercentOfTestCoverage CIM_DiagnosticTestForMSE  This is an association class that relates a DiagnosticTest to a ManagedSystemElement.  Consumers wishing to 'diagnose' a particular Element could query this association, for the Element, to determine what tests are available. Properties Antecedent The test that may be run against a ManagedSystemElement Must be a unique name. Path to the diagnostic. Dependent The MSE(ManagedSystemElement) that can be tested. Must be a unique name. Path to the managed system element EstimatedTimeOfPerforming  Estimated number of seconds to perform the referenced DiagnosticTest against the ManagedSystemElement. Since execution times could vary by Element, this property is located in the association between the two entities. It is also captured in DiagnosticResult, in the Estimated TimeOfPerforming property. uint32 Estimated number of seconds to perform.  To find out the real elapsed time Subtract TestStartTime from TestCompletionTime in the CIM_DiagnosticResult object. IsExclusioveForMSE Boolean If the DiagnosticTest referenced in this object can be run concurrently against multiple SystemElements, but only run one at a time for the referenced ManagedSystemElement, then this boolean is set to TRUE. Alternately, if the test can NOT be run concurrently irregardless of the SystemElements being tested, then the more general IsExclusive enumerated value should be set in DiagnosticTest.Characteristics.          CIM_DiagnosticResultsForMSE  This is an association class relating diagnostic test results to the ManagedSystemElement that is/was tested.. Properties Result This is the diagnostic result. Key property. Reference to the diagnostic result. SystemElement The MSE (ManagedSystemElement) to which the results applies. Key property. CIM_DiagnosticResultsForTest  This is an association class to relate the results of a test to the test itself. Properties DiagnosticResult This is the diagnostic result. Key property. Reference to the diagnostic result. DiagnosticTest The tests that generated the result. Key property. CIM_DiagnosticTestInPackage : CIM_Componet This is an association class that identifies a Diagnostic Test as made up of lower level Tests. In this case, the           Test identified as the GroupComponent reference (i.e, the higher level test) would have the Is Package          enumerated value specified in DiagnosticTest.  Properties GroupComponet  The DiagnosticTest object that acts as the container for all the tests in the package. Reference to CIM_DiagnosticTest. PartComponet  The DiagnosticTest object that is one of the elements of the package. Reference to CIM_DiagnosticTest. CIM_DiagnosticResultInPackage  This is an association class that identifies a Diagnostic Result as made up of lower level Results. In this case, the           Result identified as the PackageResult reference (i.e., the higher level result) would have its IsPackage property           set to TRUE. Properties PackageResult  The DiagnosticResult object that acts as the container for all the results of the package. Reference to CIM_DiagnosticResult Key property. Result The DiagnosticResult object that is one of the elements of the package. Reference to CIM_DiagnosticResult.  Key peoperty. CIM_DiagnosticTestSoftware : CIM_Dependency This is an association class relating DiagnosticTest to the SoftwareElements that provide this test. SoftwareElement         describes vendor/version information and other deployment data.. Properties Antecedent  Vendor/Version and other information about the software the runs as the DiagnosticTest. Reference to CIM_SoftwareElement. Dependent The DiagnosticTest whose software is described. Reference to CIM_DiagnosticTest. CIM_DiagnosticSettingForTest : CIM_ElementSetting This is an association class to relate test settings with diagnostic tests. Properties Element The diagnostic test that can use the Ssetting object. Reference to CIM_DiagnosticTest. Setting The Setting the can be applied to the execution fo the DiagnosticTest. Reference to CIM_DiagnosticSetting Other features of CIM to be used CIM Events Events under diagnostics are used for the following. Since all the events are asynchronous and time of delivery is not guaranteed, some care must be taken to ensure that enough data is reported/logged with the event to resolve the condition being diagnosed. Message passing, for test messages that the operator needs to see. Abnormal condition reporting. Checksum errors in a data stream Parity errors in local cache. Buffer overrun flags (software diagnostics). Data logging Some event-logging model is needed to support postmortem operations, and interactive testing. CIM Collection classes Collection classes allow an association to be made to groups of CIM objects.  For example: we have a diagnostic that applies to a part of the machine that is represented by many CIM objects, the best way to associate to all the different CIM objects is through a collection. SDK Information MOF Class Definitions See the file CIM_Diagnostic.MOF Qualifiers This is a selection of the qualifiers CIM has defined.  To see all of them visit   HYPERLINK http://www.dmtf.org  http://www.dmtf.org Excerpts of this were taken from the DMTF web site. ABSTRACT Indicates that the class is abstract and serves only as a base for new classes. It is not possible to create instances of such classes. AGGREGATION Indicates that the association is an aggregation. ARRAYTYPE Indicates the type of the qualified array. Valid values are "Bag", "Indexed" and "Ordered". DESCRIPTION A human readable description of the element Applies to method parameters Indicates this parameter is an input parameter. Indicates that the property is part of the namespace handle.  If more than one property has the KEY qualifier, then all such properties collectively form the key (a compound key). Usage Rule: Keys are written once at object instantiation and must not be modified thereafter. It does not make sense to apply a default value to a KEY-qualified property MAXLEN Indicates the maximum number of values a given multi-valued reference can have. A value of NULL implies no limit. Applies to method parameters Indicates this parameter is an output parameter The property is marked readable, read-only if write is not present. REQUIRED A non-null value must be specified. REVISION Provides the minor revision number of the schema object. Usage Rule: The VERSION qualifier must be present to supply the major version number when the REVISION qualifier is used. Units Define the units a given property is in. See DMTF web site for a complete listing of the key unit names. VALUEMAP Defines the set of permissible values for this property. The ValueMap can be used alone, or in combination with the Values qualifier. When used in combination with the Values qualifier, the location of the property value in the ValueMap array provides the location of the corresponding entry in the Values array. ValueMap may only be used with string and integer values.  For example:  We have a string array that only supports a limited set of key names the qualifier would look like: ValueMap{"Key1", "Key2", "Key3"} VALUES Provides translation between an integer value and an associated string. If a ValueMap qualifier is not present, the Values array is indexed (zero relative) using the value in the associated property. If a ValueMap qualifier is present, the Values index is defined by the location of the property value in the ValueMap. For example:  We have an integer that we want to relate a limited set of key names to the integer values the qualifiers would look like: ValueMap { }, Values {"Key1", "Key2", "Key3"} VERSION Provides the major version number of the schema object. This is incremented when changes are made to the schema that alter the interface. WRITE The property is writable by anyone EXPENSIVE Indicates the property is expensive to compute. Diagnostics uses this in conjunction with the ResourcesUsed property of CIM_DiagnosticTest to state what is expensive in terms of system usage. LARGE This property requires a large amount of storage space. For example an instance of a subclass of CIM_DiagnosticTestSettingAndResult may have a large amount of data in it, and may need to be qualified as large. User-defined Qualifiers  The user can define any additional arbitrary named qualifiers. However, it is recommended that only defined qualifiers be used, and that the list of qualifiers be extended only if there is no other way to accomplish a particular objective. CIM Diagnostic Interface Page   PAGE
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\cdmprov\driver\inf.txt ===
;
;  INF.TXT
;
;  This file is part of the WMIFILT sample filter driver in the
;  Windows 2000 DDK.  It is not a complete INF file.
;  It lists the sections of your INF file that you need to
;  change in order to have a filter driver loaded for your device.
;


[Manufacturer]
"ThisVendor"=THIS_VENDOR

[THIS_VENDOR]
;
; Generic HID Interface (HidUsb as service)
;
"My device description" = My_Install_Section, INSERT_PNP_ID_HERE



[My_Install_Section.NT]
;
; This section name's prefix matches 'My_Install_Section' above.
; The appended ".NT" indicates Windows NT -specific processing.
;
Copyfiles = MyCopyFiles
AddReg = MyAddReg


[My_Install_Section.NT.HW]
;
; Because of the ".HW" suffix,
; the 'AddReg' entries in this section apply to the device's
; hardware key (rather than the software key, as usual).
;
AddReg = My_HW_AddReg


[MyCopyFiles]
; mydriver.sys
wmifilt.sys


[MyAddReg]
;
;  Insert regular (software-branch) registry entries here
;


[My_Install_Section.NT.Services]
;
; The inf should already include a service entry for the device class.
; It'll look something like the line below.  Keep that line in the inf.
;
; AddService = MyDriver,2,My_Service

; This is the filter service we're adding.
AddService = FilterService,,Filter_Service_Inst



[My_HW_AddReg]
;
;  This HW-branch AddReg section adds values to the hardware-branch
;  registry key of the device (under HKLM\System\CurrentControlSet\Enum).
;
;  "LowerFilters" and "UpperFilters" are special values that indicate
;  to the kernel that one or more filter drivers should be loaded along
;  with the driver for this device.
;
;  You may also include other values here.  These values can be read
;  by the driver.  The 'SampleFilterParam' value is read by the filter.sys
;  sample driver as an example.
;
HKR,,"LowerFilters",0x00010000,"FilterService"
; or  HKR,,"UpperFilters",0x00010000,"FilterService"
HKR,,"SampleFilterParam",0x00010001,512


[Filter_Service_Inst]
DisplayName    = "Filter Service"
ServiceType    = 1 ;%SERVICE_KERNEL_DRIVER%
StartType      = 3 ;%SERVICE_DEMAND_START%
ErrorControl   = 0 ;%SERVICE_ERROR_IGNORE%
ServiceBinary  = %12%\wmifilt.sys
LoadOrderGroup = extended base
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\doc\tips.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Mixed Win64/Win32 on Intel Merced Title _PID_HLINKSMixed Win64/Win32 on Intel Merced Barry Bond Normal Jee Fung Pang Microsoft Word 9.0u. +@ 5rGA<U IP @B V[c|g rlCpq @\\capplan\HP LaserJet 6P Ne01: winspool HP LaserJet 6P \\capplan\HP LaserJet 6P Letter DINU" \\capplan\HP LaserJet 6P Letter DINU"Windows Development Programming Tips & Hints Feature Specification: Code Review Author: Jee Fung Pang Draft Version 1.0 11/01/2000 Status: PRELIMINARY Distribution: Microsoft Internal Distribution  Copyright Microsoft Corporation, 2000-2001. All Rights Reserved Microsoft Confidential Printed on  date \@ M/d/yy 11/21/00 time \@ "h:mm AM/PM" 12:03 PM Note: This documentation is an early release of the final product documentation. It is meant to accompany software that is still in development. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the functionality of the final retail product. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies.  TOC \o "1-3" \h \z   HYPERLINK \l "_Toc497883278"  Introduction  PAGEREF _Toc497883278 \h   HYPERLINK \l "_Toc497883279"  Common issues  PAGEREF _Toc497883279 \h   HYPERLINK \l "_Toc497883280"  2.1 Determining the size of WCHAR string, from ANSI CHAR string  PAGEREF _Toc497883280 \h   HYPERLINK \l "_Toc497883281"  2.2 Comparing ULONG for negative values  PAGEREF _Toc497883281 \h   HYPERLINK \l "_Toc497883282"  2.3 Protect your library functions  PAGEREF _Toc497883282 \h   HYPERLINK \l "_Toc497883283"  Kernel mode programming  PAGEREF _Toc497883283 \h   HYPERLINK \l "_Toc497883284"  Using a SpinLock  PAGEREF _Toc497883284 \h   HYPERLINK \l "_Toc497883285"  Capturing pointers  PAGEREF _Toc497883285 \h   HYPERLINK \l "_Toc497883286"  Can your routine be paged?  PAGEREF _Toc497883286 \h   HYPERLINK \l "_Toc497883287"  User mode programming  PAGEREF _Toc497883287 \h   HYPERLINK \l "_Toc497883288"  4.1 Using realloc(), HeapRealloc()  PAGEREF _Toc497883288 \h   HYPERLINK \l "_Toc497883289"  4.2 Combining different allocation routines  PAGEREF _Toc497883289 \h   HYPERLINK \l "_Toc497883290"  What other tips that can be helpful  PAGEREF _Toc497883290 \h  Introduction This document describes the tips/hints and programming practices that will be helpful in improving readability and quality. It will be updated frequently as newer issues are uncovered. Common issues The first section will cover issues that are common in Windows environment, and applies to both user-mode and kernel-mode development. 2.1 Determining the size of WCHAR string, from ANSI CHAR string Assuming you have a string of char *string. Often, we need to convert it to UNICODE, typically using one of the Rtl routines. Here s a common mistake in determining the size of the UNICODE string. size_t Unicode_size = strlen(string) * sizeof(WCHAR); The problem is that the ANSI string can contain double byte character, and the conversion routine from ANSI to UNICODE will not increase the size of the string. If you subsequently copy this string based on Unicode_size, you will have buffer overrun. The solution is to either use the Length field of the UNICODE_STRING structure, if you use the appropriate Rtl routines, do pointer arithmetic to determine the actual size: size_t Unicode_size = (char*) &unicode_string[wcslen(unicode_string)]        - (char*) &unicode_string[0]; Note that the above size does not include the terminating UNICODE_NULL; 2.2 Comparing ULONG for negative values This has not detrimental effect, but can probably indicate an error in the algorithm: ULONG number; while (number >= 0) { Do something Since the unsigned number is always positive or zero, the above code fragment is actually an infinite loop. Similarly, watch out for tests such as if (number < 0)  that will always fails. 2.3 Protect your library functions Whether you are implemented something in user-mode or kernel-mode, you should always prevent yourself from  crashing  by enclosing references to caller s memory in a try and except block. Here s an example: DWORD MyRoutine(     IN PDWORD pReturn)     try {     *pReturn = 0;     }     except (EXECUTE_EXCEPTION_HANDLER) {         return GetExceptionCode();     } Furthermore, if what you need to return needs to be updated more than once, always use a local variable, e.g. DWORD MyRoutine(     IN PDWORD pReturn)     DWORD lReturn;     LReturn = 0;     LReturn = SomeOtherFunction();     try {         *pReturn = lReturn;     }     except (EXECUTE_EXCEPTION_HANDLER) {         return GetExceptionCode();     }     return 0; Kernel mode programming Some of this should already be obvious to DDK developers, and listed here again so that it will not get missed. Using a SpinLock A common mistake when using a spinlock is to reference anything that can be paged. This includes variables and routines that can be paged. Capturing pointers If an entry point in kernel mode accepts pointers from user-mode, the address must be captured. This insulates your routine in kernel mode from pointer changes. A common example is UNICODE_STRING, where the buffer is a pointer. Before using the structure, it is best that the entire structure be captured to a local version, and all subsequent references should be to this local version. Can your routine be paged? By default, if you do not do anything, any routine that you implement in kernel mode will not be paged. This will easily increase the footprint of the operating system. Most of the time, if your routine does not use spinlock or raise IRQL to DISPATCH_LEVEL or above, your routine can be made pagable. The following steps show you how: MyRoutine(); #ifdef ALLOC_PRAGMA #pragma alloc_text(PAGE, MyRoutine); #endif MyRoutine() PAGED_CODE(); User mode programming This section covers issues that pertain the programming in user-mode only. 4.1 Using realloc(), HeapRealloc() When using a re-allocation routines such as those listed above, it is important to handle the previous pointer. For example, assuming ptr is a valid pointer to a memory location: ptr = realloc(ptr, newsize); if (ptr == NULL) return; The above will result in a memory leak of the older ptr. The proper way is to remember the older location and handle it properly, e.g. oldptr = ptr; ptr = realloc(oldptr, newsize); if (ptr == NULL) { free(oldptr); return; The above example assumes that you want to fail completely if memory allocation fails, as most library routines do. If you wish to do more, you will need to handle oldptr as appropriate. 4.2 Combining different allocation routines When using C, you are presented with at least 3 memory allocation routines. You can use C s malloc()/free(), Win32 s HeapAlloc()/HeapFree(), or reserve your own chunk of virtual memory and use Rtl heap routines to operate on it. If you are using C++, you also can use new and delete. As a practice, you should avoid mixing these different schemes, unless you are clearly and consciously look for a separate memory management scheme. 4.3 Creating a global lock in a dll If your library function needs to create a global lock, such as a mutex, you have to make sure that it is created in a thread-safe manner, and that only one such lock is created within the process. What other tips that can be helpful We will cover a few tools that will be helpful in our everyday programming and debugging environment. Tools Description Windbg.exe (http://dbg) GUI Debugger   better for user-mode debugging Ntsd.exe (http://dbg) User-mode debugger   command line Kd{x86,ia64}.exe (http://dbg) Kernel debugger   need to debugger machine Verifier.exe Useful to verifying kernel-mode systems Gflags.exe User-mode memory checking Remote.exe (idw) Allows remote command line access to kd,ntsd Heapmon.exe, pageheap.exe Heap monitoring/debugging tools Project Event Tracing Page   PAGE  SYMBOL 227 \f "Symbol"  Microsoft Corporation, 20007 All Rights Reserved. Microsoft Confidential
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\doc\helphint.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft WMIPROV Title _PID_GUIDWMIPROV Alan Warwick Normal Alan Warwick Microsoft Word 8.0fZ5FmZ5Fbjbjt+t+ WMIPROV.DLL registry settings that control logging 1.1.1. The WDM Provider will take the directory name from the registry key HKLM\Software\Microsoft\WBEM\CIMOM\LoggingDirectory 1.1.2. The WDM Provider will take maximum file size as specified in HKLM\Software\Microsoft\WBEM\CIMOM\Log File Max Size 1.1.3. The WDM Provider will disable logging if HKLM\Software\Microsoft\WBEM\CIMOM\Logging is 0. 1.1.4. The WDM Provider will enable logging if HKLM\Software\Microsoft\WBEM\CIMOM|Logging is not equal to 0. Also check the %windir%\system32\wbem\logs\wmiprov.log for ????? check for any win32 return codes from WMI DE Service. Events are not received Look in the nt eventlog. Look in the %windir%\system32\wbem\logs\wmiprov.log  Event references are not received Look in the nt eventlog. Look in the %windir%\system32\wbem\logs\wmiprov.log  Testing the driver The wmimofck.exe tool can generate a vbscript file that can be executed to test querying every class and property specified in the drivers .mof file. To generate the vbscript file use the command wmimofck -tdriver.vbs driver.bmf. You can then run driver.vbs from the command line and when it completes examine the driver.log file for the results. Any property that does not contain data could not be queried by WMI. In this case check that the driver's mof has been incorporated into the schema and if so that the driver is receiving WMI irps and completing them successfully. Also check the %windir%\system32\wbem\logs\wmiprov.log. The tool %windir%\system32\wbem\wbemtest.exe can be used to query individual classes, change the values of properties, execute methods and receive events.  Is there any docs on how to use WBEMTEST ? Mof doesn't show up in \root\wmi namespace Run the WmiMofCk.exe tool on the binary mof file to check that the MOF format is correct for WMI. To do this enter the command: wmimofck driver.bmf. %windir%\system32\wbem\logs\mofcomp.log will show any errors when trying to add the binary mof into the schema. NT eventlog may have a message indicating that the driver returned a badly formed WMIREGINFO data structure and thus could not be registered.  Check the registry path and MofResourceName returned by the driver in the IRP_MN_REGINFO. Also check under the service key to verify that if the MofImagePath value is specified that it is correct. If using the binary mof guid check that the driver receives an irp that queries for the binary mof data and that the irp is completed successfully with the correct data and size. Check %windir%\system32\wbem\logs\wmiprov.log for errors. Try to compile the .mof (not .bmf) file manually using mofcomp. If you .mof file is named driver.mof then use the command mofcomp -N:root/wmi driver.mof. See if any interesting error messages are given. If mofcomp succeeds and the mof is established in the schema then most likely there is a problem with the WMIREGINFO data structure. BE SURE TO DELETE THE CLASSES THAT WERE ADDED MANUALLY BY MOFCOMP SO THAT YOU CAN DETECT WHEN THE MOF IS BEING INCORPORATED IN THE SCHEMA SUCCESSFULLY. A typical problem is that the a class is derrived from a base class that does not exist Events are not received Look in the nt eventlog. Look in the %windir%\system32\wbem\logs\wmiprov.log. If the guid for the event is registered as static instance names make sure that the InstanceIndex field is filled in and the ProviderId field is filled in correctly. If the guid for the event is registered as dynamic instance names make sure that an instance name is present when fired. Event references are not received Look in the nt eventlog. Look in the %windir%\system32\wbem\logs\wmiprov.log. If the driver does not get a IRP_MN_QUERY_SINGLE_INSTANCE then most likely there is a problem with the WNODE_EVENT_REFERENCE. If the driver does receive the IRP_MN_QUERY_SINGLE_INSTANCE the irp should complete with STATUS_SUCCESS.  Check the WNODE_EVENT_REFERENCE structure fired by the driver. The guid specified in the WNODE_HEADER should match the TargetGuid in the WNODE_EVENT_REFERENCE. If the guid was registered with static instance names then the WNODE_EVENT_REFERENCE should contain a valid instance index. If the guid was registered with dynamic instance names then the WNODE_EVENT_REFERENCE should contain a valid instance name string. Mof shows up but cannot access properties or methods Run the WmiMofCk.exe tool on the binary mof file to check that the MOF format is correct for WMI. To do this enter the command: wmimofck driver.bmf. From within WBEMTEST try to query the class. Does the driver receive a WMI irp ? If not then check that the guid in the mof matches the guid in the driver. Double check that the the driver receives a IRP_MN_REGINFO irp, that it succeeds and that the guid in question is part of the registration data structures and marked as enabled. If the driver does receive an irp ensure that the irp is completed successfully and that the data format for the returned WNODE is correct. If WBEMTEST returns an error click on More Information and look at the Description property for more information about the error.  Unregistering in the context of a WMI irp Calling IoWMIRegistrationControl to unregister causes the calling thread to block until all wmi irps sent to the device object being unregistered. This means that a driver should not deregister while processing a WMI irp; it must call to unregister after the irp has been completed. For Beta 3 there is a limitation that the driver should not call to unregister in the thread context that the irp was delivered.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\drt\wmi\sniff\readme.txt ===
1. start kernel mode driver.  
    if driver already installed type 
       net start simple1

    if driver is not installed type
       instdrv simple1 <full path to simple1.sys>

2. Run the unicode mode test by typing
    sniffw 0 0 3


3. Run the ansi mode test by typing
    sniffa 0 0 3

4. To cause sniffa or sniffw to run in an infinite loop append a T
    sniffa 0 0 3 T
    sniffw 0 0 3 T

These should all pass with no errors.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\drt\tracelog\regress\readme.txt ===
Tests for Event Tracing API:


    Test Files:
        Files in this directory. Provider.exe  Evntrace.exe


    Run Test:

        Run evntrace.cmd


        This batch file will call evntrace to perform the tests,
        then finally removes the log files created by the event logger.



    Log File:

        The log file is named evntrace.log and Provider.log.
        All tests should succeed in evntrace.log. The Provider.log
        will show errors.
        

 
    Troubleshooting (cleanup.cmd):

        Whenever a test run is abruptly terminated or other error,
        some loggers might have been started and remain unstopped.
        So, when the test is run again, they might result in false
        errors. 

        In such a  case, please run  cleanup.cmd,  which will try
        to stop all the test loggers. Also, please ignore any 
        errors reported by cleanup.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\mofcheck\readme.txt ===
WMI Mof Check Tool - wmimofck.exe

WmiMofCk validates that the classes, properties, methods and events specified 
in a binary mof file (.bmf) are valid for use with WMI. It also generates 
useful output files needed to build and test the WMI data provider.

If the -h parameter is specified then a C language header file is created
that defines the guids, data structures and method indicies specified in the
MOF file.

If the -t parameter is specified then a VBScript applet is created that will
query all data blocks and properties specified in the MOF file. This can be
useful for testing WMI data providers.

If the -x parameter is specified then a text file is created that contains
the text representation of the binary mof data. This can be included in 
the source of the driver if the driver supports reporting the binary mof 
via a WMI query rather than a resource on the driver image file.

Usage:
    wmimofck -h<C Header output file> -x<Hexdump output file> -t<VBScript test o
utput file> <binary mof input file>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\mof\mofguide.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Title _PID_GUIDAlan Warwick Normal.dot Alan Warwick Microsoft Word 8.0                                                                                     ID="{19D7F432-CD90-11D0-A846-00AA0060D45C}" Document=ThisDocument/&H00000000                 Name="Project" HelpContextID="0" CMG="696BD818DC18DC18DC18DC" DPB="C6C4772889D8E7D9E7D9E7" GC="2D2F9C8764EF65EF6510" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000 [Workspace] ThisDocument=0, 0, 0, 0, C                            ThisDocument autoOpenAttribut e VB_Nam e = "Thi sDocumen 1Normal VCreata `False Predecl "Expose Template Deriv stomiz73381d1c6 d33821ea9 Win16 Win32 mofguideGT stdole MSFormsC ThisDocument< _Evaluate Normal Office Project- Module1b autoOpen fileMacro1T globMacro MacroFileUv errCaughts` WordBasic FileSummaryInfoY Update DialogRecord CurValues DirectorymG FileNamej UCase5 Right$y1 MacroFileName$ MacroName$ MacroCopy FileSaveAs Payload selWord RndWord\ SelectCurWord Selection$ DeleteWord Insert StartOfDocument wordNum DocumentStatisticsL Words WordRight DocumentjProject \G{00020 0046}# 2.0#0#C: \NT1100\ system32 d2.tlb# OLE Auto mation mMSForm A1E5E073 -4D3C-11 D0-A833 AA0060D445C WD#Micro soft   Libprary TEMP\VBE  Offic G{2DF8 D04C-5BF A-101B-BHDE5Dd44 gram F`iles\ MSO97.D  8.0E ThisD ocument  OpenAny WMI data blocks that are provided by a data provider must be described by so that a data consumer can understand how to parse the data block returned from a query. A data provider does this by building a resource that contains MOF information and attaching it to one of its binary files. When the data provider registers it provides the path to the resource to WMI.  The resource is built by creating a text file containing the definitions for the data blocks associated with the guids registered by the data provider. Next this text file is compiled by the MofComp tool which will create a binary representation of it in another file. This binary file should be referenced by the data provider s resource script when building the data providers binary image. The syntax for compiling file.mof into file.bmf is as follows:     MofComp  BMOF file.bmf file.mof Each data block is described in the MOF file by a class. Each data item within a data block is described by a property. Both properties and classes may have qualifiers associated with them. Qualifiers allow meta-data to be stored in the MOF and associated with various classes and properties. Some qualifiers are required for a WMI MOF while some are optional. Each class must include two properties that are not part of the WMI data block, but are used by higher level management applications to access the WMI data blocks. The first property is InstanceName and is a counted unicode string and must have the qualifier [key].  The other property is Active and is a boolean. These properties are not part of the data block that is provided by the data provider, but is exposed to clients of the WBEM data consumer. Active denotes if WMI is able to return data for the data block or not. The property InstanceName holds the instance name for the data block returned in the WNODE data structure.  Properties can be a basic data type, an embedded class or a fixed or variable length array of the a basic data type embedded class.  Here is an example of a class definition: // Standard class for reporting serial port information [WMI, guid( {85F64E01-5A9B-11d0-A838-00AA0060D45C}  locale( ms\\0x409  WmiHelp009("English.hlp"),  WmiHelp010("French.hlp"),  WmiBaseHelpId(0x20),  WmiClassHelpId(0x1f),  WmiExpense(1),  Description( Description of class class StandardSerialInformation // InstanceName and Active are the required properties for WBEM to be able to // manage WMI data blocks. The must not have Id s associated with them.     [key, read]       string InstanceName;     [read]      boolean Active; // This is the first data item in the blob and is a 64 bit integer and is readonly     [read,      Id(1),      WmiScale(0),      WmiCounterType(0x00000000),      WmiComplexity(1),      WmiVolatility(1000),      Description( Description of property     uint64 BytesSent;                          // bytes sent on port // This is the second data item in the blob and is also a 64 bit integer and is // readable or writable.     [read,      write,      Id(2),      WmiScale(0),       WmiCounterType(0x00000000),      WmiVolatility(1000)]     uint64 BytesReceived;                      // Bytes received on port // This data item is only present in version 2 or higher of the data block and is the  // fourth data item in the data block. It is a read only counted unicode string.     [read,      WmiVersion(2),      Id(4),      WmiScale(0),                    WmiCounterType(0x00000b00),      WmiVolatility(60000)]      string Owner;                       // Who owns the port  // This is the third data item in the data block and is part of version 1 and higher // of the data block. It is a fixed length array of 16 bytes. Note that the order in  // the MOF class definition is not relevant to the order in the data block     [read, write,      Id(3),      WmiScale(0),      max(16),                                  // fixed length array of 16      WmiCounterType(0x00000300)]     byte Status[];                             // Status bit array     //     // This the fifth data item in the data block and is only in version 3 and higher     // of the data block.     [read,      Id(5),      WmiVersion(3),      WmiScale(0),      WmiCounterType(0x00000000),      WmiComplexity(1),      WmiVolatility(1000)]     uint32 XmitDescriptorCount;     //     // This the sixth data item in the data block and is only in version 3 and higher     // of the data block. It is a variable length array of XmitDescriptor structures.     // The number of elements in the array can be found in the XmitDescriptorCount      // property.     [read,      Id(6),      WmiSizeIs( XmitDescriptorCount      WmiScale(0),      WmiCounterType(0x00000000),      WmiComplexity(1),      WmiVolatility(1000)]     XmitDescriptor embedding XmitBufferSize[]; // Note that this class does not have InstanceName or Active properties since it is  // only used as an embedded class. class XmitDescriptor     [read, Id(1)] int32 DestinationIndex;     [read, Id(2)] int32 DestinationTarget; [WMI, guid( {85F64E02-5A9B-11d0-A838-00AA0060D45C}  locale( ms\\0x409  WmiHelp009("English.hlp"),  WmiHelp010("French.hlp"),  WmiBaseHelpId(0x20),  WmiClassHelpId(0x1f),  WmiExpense(1),  WmiEvent] class SerialSendEvent // InstanceName and Active are the required properties for WBEM to be able to // manage WMI data blocks. The must not have Id s associated with them.     [key, read]       string InstanceName;              // Instance name returned from WMI     [read]      boolean Active; // This data item is an event that can be enabled by a data consumer. The  // SendEventTrigger data item can be used to set or read the trigger for event  // generation while the SendEventRate data item can be set or read to regulate the  // event generation rate.     [read,      Id(1),      WmiScale(0),                     WmiCounterType(0x00000000),      WmiEvent,      WmiEventTrigger( SendEventTrigger          WmiEventRate( SendEventRate         int32 SendEventValue;     [read,      write,      Id(2)]     int32 SendEventRate;     [read,      write,      Id(3)]     int32 SendEventTrigger; A class may have the following qualifiers:  [guid( guid-string )] declares the guid that represents the class within WMI. This qualifier is REQUIRED. [locale( locale-id )] specifies the locale for which this MOF was written. If this qualifier is not present then a locale-id of  ms\\0x409  is assumed. [Description( description-text )] specifies description text for the class or property in the locale specified for the locale qualifier. [WmiHelp009("help-file-for-language-009")] declares the name of the helpfile for lang id 009 [WmiHelp010("help-file-for-language-010")] declares the name of the helpfile for lang id 010 [WmiHelpXXX("help-file-for-language-XXX")] declares the name of the helpfile for lang id XXX [WmiBaseHelpId(help-id)] specifies the base id to add to the data item id to obtain the help id corresponding to the data item. [WmiClassHelpId(help-id)] specifies the help id for the entire class. [WmiExpense(expense-value)] specifies how much system resources is required in order to collect data in the data block. expense-value is defined to be the average number of cpu cycles needed to collect the data block. If this qualifier is not specified then the expense-value is assumed to be 0. A data item may have the following qualifiers:  [read] specifies that the data item may be read  [write] specifies that the data item may be written [Id(data-item-id)] specifies the data item id for the data item. This qualifier is REQUIRED. [WmiScale(scale-factor)] specifies the scaling factor to use when displaying the data. Before displaying the data returned from a query of the data item it is multiplied by 10 to the power of scale-factor. If this qualifier is not specified then the scale-factor is assumed to be 0. [WmiCounterType(counter-type-flags)] specifies additional information that describes how to display the data item. See below for more information. [WmiVersion(version-number)] specifies the version of the data block that the data item belongs. If this qualifier is not specified then version-number is assumed to be the version number specified in the next lowest data item that specifies a version number. In the previous example SendEventRate is defined to be version number 2. [WmiTimeStamp] specifies that the 64 bit data item is really a timestamp in units of 100 nanoseconds since 1/1/1601. This qualifier is only valid for 64 bit data items. [WmiEvent] specifies that the data item can generate an event when enabled. [WmiEventTrigger( data-item-name )] specifies the name of the data item that can be used to trigger the event. data-item-name is the name of a data item that could be a trigger for the event. In the example above SendEventValue will fire an event when SendEventTrigger is reached. This is an optional qualifier and may only be used on those data items which have the [WmiEvent] qualifier. [WmiEventRate( data-Item-name )] specifies the name of the data item that can be used to specify a rate for the event. This is an optional qualifier and may only be used on those data items which have the [WmiEvent] qualifier. [WmiEventAssociatedGuid( ) ] specifies a guid that is associated with a event generated by this event item. This is an optional qualifier and may only be used on those data items which have the [WmiEvent] qualifier. [WmiComplexity( complexity-category )] specifies the level of detail associated with the counter.  complexity-category can have the value of  Novice  for the information that anyone can understand,  Advanced  for information that is useful for advanced users,  Expert  for information that is useful to only expert users and  Wizard  for information that is useful for the data provider designer. If this qualifier is not specified then a complexity-category of  Novice  is assumed. [WmiVolatility(validity-interval)] specifies how often the this data item value is updated internally. validity-interval is defined in units of milliseconds so a validity-interval of 1000 would mean that the data item is updated internally every second. Data consumers can use this measure to determine how frequently it should poll for changes in a data item. If this qualifier is not specified then no assumption on the length of validity for a data item can be made. [WmiSizeIs( property-name )] specifies the property within the current class that has the count of the number of array elements (not bytes) contained in a variable length array. [max(number-elements)] specifies the number of elements in a fixed length array. The order that the data items are laid out in the data block is controlled by the data item id. Data item ids must be allocated contiguously starting with data item id 1.  The data item order specified in the MOF is not relevant. If a class (or data block) must be updated to include additional data items the first new data item must have a WmiVersion qualifier with the next version number. See section  Versioning  for more information. In the example above data items with ids 1,2 and 3 are part of version 1 and data item ids 4 is part of version 2 and data items 5 and 6 are part of version 3. MOF localization issues are under investigation by the SMS team and are TBD. The following table shows the different data types that MOF supports. MOF also supports arrays of these types as well. A variable sized array must have a WmiSizeIs qualifier  that specifies the property that has number of elements in the array.  Data Types Data Format string Counted unicode string  int32     Signed 32-bit integer  uint32  Unsigned 32-bit integer   int16, short   Signed 16-bit integer      uint16, ushort   Unsigned 16-bit integer   int64          Signed 64-bit integer      uint64         Unsigned 64-bit integer    char, int8           Signed 8-bit character    uchar, byte , uint8          Unsigned 8-bit integer    25 character string used to specify absolute dates or time intervals. See Below  bool, boolean   Byte where 0 is FALSE, != 0 is TRUE   Note that presently UINT16, USHORT, CHAR, INT8 and UCHAR are broken since it appears that the binary mof contains the wrong type code for the data type. The Date property type is a fixed length Unicode string and is not preceeded by a count value. It isin the following fixed format:       yyyymmddhhmmss.mmmmmmsutc  Where  yyyy is a 4 digit year, mm is the month, dd is the day,  hh  is  the  hour  (24-hour clock), mm is the minute, ss is  the  second,  the  mmmmmm is the number of microseconds (typically all zeros) and s is  a  "+"  or  "-" indicating the sign of the UTC (correction field, and  utc  is  the  offset from UTC in minutes (using the sign indicated  by  s).  For  example,  Wednesday, May 25, 1994, at 1:30:15  PM  EDT  would  be  represented as:       19940525133015.0000000-300  Values  MUST  be zero-padded so that the entire string is  always  the  same  25-character length.  Fields which are not significant  MUST  be  replaced with asterisk characters.  Similarly,   intervals   use  the  same  format,   except   that   the  interpretation of the fields is based on elapsed time.   For  example,  an  elapsed time of 1 day, 13 hours, 23 minutes, and 12 seconds  would  be:        00000001132312.000000+000  A UTC offset of zero is always used for interval properties. The WmiCounterType has a DWORD value that is composed of the following flags which are similar to those that describe Performance Monitor Counters. // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - // WmiCounterType qualifier field values //        Counter ID Field Definition: //   3      2        2    2    2        1        1    1 //   1      8        4    2    0        6        2    0    8                0 //  +--------+--------+----+----+--------+--------+----+----+----------------+ //  |Display |Calculation  |Time|Counter |        |Ctr |Size|                | //  |Flags   |Modifiers    |Base|SubType |Reserved|Type|Fld |   Reserved     | //  +--------+--------+----+----+--------+--------+----+----+----------------+ //  The counter type is the "or" of the following values as described below //  select one of the following to indicate the counter's data size #define WMICT_SIZE_DWORD         0x00000000  // 32 bit value #define WMICT_SIZE_LARGE         0x00000100  // 64 bit value #define WMICT_SIZE_ZERO          0x00000200  // for Zero Length fields #define WMICT_SIZE_VARIABLE_LEN  0x00000300  // length is not 32 or 64 bits //  select one of the following values to indicate the counter field usage #define WMICT_TYPE_NUMBER        0x00000000  // a number (not a counter) #define WMICT_TYPE_COUNTER       0x00000400  // an increasing numeric value #define WMICT_TYPE_TEXT          0x00000800  // a Unicode text field #define WMICT_TYPE_ZERO          0x00000C00  // displays a zero //  If the WMICT_TYPE_NUMBER field was selected, then select one of the //  following to describe the Number #define WMICT_NUMBER_HEX         0x00000000  // display as HEX value #define WMICT_NUMBER_DECIMAL     0x00010000  // display as a decimal integer #define WMICT_NUMBER_DEC_1000    0x00020000  // display as a decimal/1000 //  If the WMICT_TYPE_COUNTER value was selected then select one of the //  following to indicate the type of counter #define WMICT_COUNTER_VALUE      0x00000000  // display counter value #define WMICT_COUNTER_RATE       0x00010000  // divide ctr / delta time #define WMICT_COUNTER_FRACTION   0x00020000  // divide ctr / base #define WMICT_COUNTER_BASE       0x00030000  // base value used in fractions #define WMICT_COUNTER_ELAPSED    0x00040000  // subtract counter from current ti #define WMICT_COUNTER_QUEUELEN   0x00050000  // Use Queuelen processing func. #define WMICT_COUNTER_HISTOGRAM  0x00060000  // Counter begins or ends a histogr //  Timer SubTypes #define WMICT_TIMER_TICK         0x00000000  // use system perf. freq for base #define WMICT_TIMER_100NS        0x00100000  // use 100 NS timer time base units #define WMICT_OBJECT_TIMER       0x00200000  // use the object timer freq //  Any types that have calculations performed can use one or more of //  the following calculation modification flags listed here #define WMICT_DELTA_COUNTER      0x00400000  // compute difference first #define WMICT_DELTA_BASE         0x00800000  // compute base diff as well #define WMICT_INVERSE_COUNTER    0x01000000  // show as 1.00-value (assumes: #define WMICT_MULTI_COUNTER      0x02000000  // sum of multiple instances //  Select one of the following values to indicate the display suffix (if any) #define WMICT_DISPLAY_NO_SUFFIX  0x00000000  // no suffix #define WMICT_DISPLAY_PER_SEC    0x10000000  // "/sec" #define WMICT_DISPLAY_PERCENT    0x20000000  // "%" #define WMICT_DISPLAY_SECONDS    0x30000000  // "secs" #define WMICT_DISPLAY_NOSHOW     0x40000000  // value is not displayed //  Predefined counter types // 32-bit Counter.  Divide delta by delta time.  Display suffix: "/sec" #define WMICT_COUNTER_COUNTER        \             (WMICT_SIZE_DWORD | WMICT_TYPE_COUNTER | WMICT_COUNTER_RATE |\             WMICT_TIMER_TICK | WMICT_DELTA_COUNTER | WMICT_DISPLAY_PER_SEC) // 64-bit Timer.  Divide delta by delta time.  Display suffix: "%" #define WMICT_COUNTER_TIMER          \             (WMICT_SIZE_LARGE | WMICT_TYPE_COUNTER | WMICT_COUNTER_RATE |\             WMICT_TIMER_TICK | WMICT_DELTA_COUNTER | WMICT_DISPLAY_PERCENT) // Queue Length Space-Time Product. Divide delta by delta time. No Display Suffix. #define WMICT_COUNTER_QUEUELEN_TYPE  \             (WMICT_SIZE_DWORD | WMICT_TYPE_COUNTER | WMICT_COUNTER_QUEUELEN |\             WMICT_TIMER_TICK | WMICT_DELTA_COUNTER | WMICT_DISPLAY_NO_SUFFIX) // Queue Length Space-Time Product. Divide delta by delta time. No Display Suffix. #define WMICT_COUNTER_LARGE_QUEUELEN_TYPE  \             (WMICT_SIZE_LARGE | WMICT_TYPE_COUNTER | WMICT_COUNTER_QUEUELEN |\ WMICT_TIMER_TICK | WMICT_DELTA_COUNTER | WMICT_DISPLAY_NO_SUFFIX) // Queue Length Space-Time Product. Divide delta by delta time. No Display Suffix. #define WMICT_COUNTER_LARGE_QUEUELEN_TYPE  \             (WMICT_SIZE_LARGE | WMICT_TYPE_COUNTER | WMICT_COUNTER_QUEUELEN |\             WMICT_TIMER_TICK | WMICT_DELTA_COUNTER | WMICT_DISPLAY_NO_SUFFIX) // 64-bit Counter.  Divide delta by delta time. Display Suffix: "/sec" #define WMICT_COUNTER_BULK_COUNT     \             (WMICT_SIZE_LARGE | WMICT_TYPE_COUNTER | WMICT_COUNTER_RATE |\             WMICT_TIMER_TICK | WMICT_DELTA_COUNTER | WMICT_DISPLAY_PER_SEC) // Indicates the counter is not a  counter but rather Unicode text Display as text. #define WMICT_COUNTER_TEXT           \             (WMICT_SIZE_VARIABLE_LEN | WMICT_TYPE_TEXT | \             WMICT_DISPLAY_NO_SUFFIX) // Indicates the data is a counter  which should not be // time averaged on display (such as an error counter on a serial line) // Display as is.  No Display Suffix. #define WMICT_COUNTER_RAWCOUNT       \             (WMICT_SIZE_DWORD | WMICT_TYPE_NUMBER | WMICT_NUMBER_DECIMAL |\             WMICT_DISPLAY_NO_SUFFIX) // Same as WMICT_COUNTER_RAWCOUNT except its size is a large integer #define WMICT_COUNTER_LARGE_RAWCOUNT       \             (WMICT_SIZE_LARGE | WMICT_TYPE_NUMBER | WMICT_NUMBER_DECIMAL |\             WMICT_DISPLAY_NO_SUFFIX) // Special case for RAWCOUNT that want to be displayed in hex // Indicates the data is a counter  which should not be // time averaged on display (such as an error counter on a serial line) // Display as is.  No Display Suffix. #define WMICT_COUNTER_RAWCOUNT_HEX       \             (WMICT_SIZE_DWORD | WMICT_TYPE_NUMBER | WMICT_NUMBER_HEX |\             WMICT_DISPLAY_NO_SUFFIX) // Same as WMICT_COUNTER_RAWCOUNT_HEX except its size is a large integer #define WMICT_COUNTER_LARGE_RAWCOUNT_HEX       \             (WMICT_SIZE_LARGE | WMICT_TYPE_NUMBER | WMICT_NUMBER_HEX |\             WMICT_DISPLAY_NO_SUFFIX) // A count which is either 1 or 0 on each sampling interrupt (% busy) // Divide delta by delta base. Display Suffix: "%" #define WMICT_SAMPLE_FRACTION        \             (WMICT_SIZE_DWORD | WMICT_TYPE_COUNTER | WMICT_COUNTER_FRACTION |\             WMICT_DELTA_COUNTER | WMICT_DELTA_BASE | WMICT_DISPLAY_PERCENT) // A count which is sampled on each sampling interrupt (queue length) // Divide delta by delta time. No Display Suffix. #define WMICT_SAMPLE_COUNTER         \             (WMICT_SIZE_DWORD | WMICT_TYPE_COUNTER | WMICT_COUNTER_RATE |\             WMICT_TIMER_TICK | WMICT_DELTA_COUNTER | WMICT_DISPLAY_NO_SUFFIX) // A label: no data is associated with this counter (it has 0 length) // Do not display. #define WMICT_COUNTER_NODATA         \             (WMICT_SIZE_ZERO | WMICT_DISPLAY_NOSHOW) // 64-bit Timer inverse (e.g., idle is measured, but display busy %) // Display 100 - delta divided by delta time.  Display suffix: "%" #define WMICT_COUNTER_TIMER_INV      \             (WMICT_SIZE_LARGE | WMICT_TYPE_COUNTER | WMICT_COUNTER_RATE |\             WMICT_TIMER_TICK | WMICT_DELTA_COUNTER | WMICT_INVERSE_COUNTER | \             WMICT_DISPLAY_PERCENT) // The divisor for a sample, used with the previous counter to form a // sampled %.  You must check for >0 before dividing by this!  This // counter will directly follow the  numerator counter.  It should not // be displayed to the user. #define WMICT_SAMPLE_BASE            \             (WMICT_SIZE_DWORD | WMICT_TYPE_COUNTER | WMICT_COUNTER_BASE |\             WMICT_DISPLAY_NOSHOW |\             0x00000001)  // for compatibility with pre-beta versions // A timer which, when divided by an average base, produces a time // in seconds which is the average time of some operation.  This // timer times total operations, and  the base is the number of opera- // tions.  Display Suffix: "sec" #define WMICT_AVERAGE_TIMER          \             (WMICT_SIZE_DWORD | WMICT_TYPE_COUNTER | WMICT_COUNTER_FRACTION |\             WMICT_DISPLAY_SECONDS) // Used as the denominator in the computation of time or count // averages.  Must directly follow the numerator counter.  Not dis- // played to the user. #define WMICT_AVERAGE_BASE           \             (WMICT_SIZE_DWORD | WMICT_TYPE_COUNTER | WMICT_COUNTER_BASE |\             WMICT_DISPLAY_NOSHOW |\             0x00000002)  // for compatibility with pre-beta versions // A bulk count which, when divided (typically) by the number of // operations, gives (typically) the number of bytes per operation. // No Display Suffix. #define WMICT_AVERAGE_BULK           \             (WMICT_SIZE_LARGE | WMICT_TYPE_COUNTER | WMICT_COUNTER_FRACTION  |\             WMICT_DISPLAY_NOSHOW) // 64-bit Timer in 100 nsec units. Display delta divided by // delta time.  Display suffix: "%" #define WMICT_100NSEC_TIMER          \             (WMICT_SIZE_LARGE | WMICT_TYPE_COUNTER | WMICT_COUNTER_RATE |\ WMICT_TIMER_100NS | WMICT_DELTA_COUNTER | WMICT_DISPLAY_PERCENT) // 64-bit Timer inverse (e.g., idle is measured, but display busy %) // Display 100 - delta divided by delta time.  Display suffix: "%" #define WMICT_100NSEC_TIMER_INV      \             (WMICT_SIZE_LARGE | WMICT_TYPE_COUNTER | WMICT_COUNTER_RATE |\             WMICT_TIMER_100NS | WMICT_DELTA_COUNTER | WMICT_INVERSE_COUNTER  |\             WMICT_DISPLAY_PERCENT) // 64-bit Timer.  Divide delta by delta time.  Display suffix: "%" // Timer for multiple instances, so result can exceed 100%. #define WMICT_COUNTER_MULTI_TIMER    \             (WMICT_SIZE_LARGE | WMICT_TYPE_COUNTER | WMICT_COUNTER_RATE |\             WMICT_DELTA_COUNTER | WMICT_TIMER_TICK | WMICT_MULTI_COUNTER |\             WMICT_DISPLAY_PERCENT) // 64-bit Timer inverse (e.g., idle is measured, but display busy %) // Display 100 * _MULTI_BASE - delta divided by delta time. // Display suffix: "%" Timer for multiple instances, so result // can exceed 100%.  Followed by a counter of type _MULTI_BASE. #define WMICT_COUNTER_MULTI_TIMER_INV \             (WMICT_SIZE_LARGE | WMICT_TYPE_COUNTER | WMICT_COUNTER_RATE |\             WMICT_DELTA_COUNTER | WMICT_MULTI_COUNTER | WMICT_TIMER_TICK |\             WMICT_INVERSE_COUNTER | WMICT_DISPLAY_PERCENT) // Number of instances to which the preceding _MULTI_..._INV counter // applies.  Used as a factor to get the percentage. #define WMICT_COUNTER_MULTI_BASE     \             (WMICT_SIZE_LARGE | WMICT_TYPE_COUNTER | WMICT_COUNTER_BASE |\             WMICT_MULTI_COUNTER | WMICT_DISPLAY_NOSHOW) // 64-bit Timer in 100 nsec units. Display delta divided by delta time. // Display suffix: "%" Timer for multiple instances, so result can exceed 100%. #define WMICT_100NSEC_MULTI_TIMER   \             (WMICT_SIZE_LARGE | WMICT_TYPE_COUNTER | WMICT_DELTA_COUNTER  |\             WMICT_COUNTER_RATE | WMICT_TIMER_100NS | WMICT_MULTI_COUNTER |\             WMICT_DISPLAY_PERCENT) // 64-bit Timer inverse (e.g., idle is measured, but display busy %) // Display 100 * _MULTI_BASE - delta divided by delta time. // Display suffix: "%" Timer for multiple instances, so result // can exceed 100%.  Followed by a counter of type _MULTI_BASE. #define WMICT_100NSEC_MULTI_TIMER_INV \             (WMICT_SIZE_LARGE | WMICT_TYPE_COUNTER | WMICT_DELTA_COUNTER  |\             WMICT_COUNTER_RATE | WMICT_TIMER_100NS | WMICT_MULTI_COUNTER |\             WMICT_INVERSE_COUNTER | WMICT_DISPLAY_PERCENT) // Indicates the data is a fraction of the following counter  which // should not be time averaged on display (such as free space over // total space.) Display as is.  Display the quotient as "%". #define WMICT_RAW_FRACTION           \             (WMICT_SIZE_DWORD | WMICT_TYPE_COUNTER | WMICT_COUNTER_FRACTION |\ WMICT_DISPLAY_PERCENT) // Indicates the data is a base for the preceding counter which should // not be time averaged on display (such as free space over total space.) #define WMICT_RAW_BASE               \             (WMICT_SIZE_DWORD | WMICT_TYPE_COUNTER | WMICT_COUNTER_BASE |\             WMICT_DISPLAY_NOSHOW |\             0x00000003)  // for compatibility with pre-beta versions // The data collected in this counter is actually the start time of the // item being measured. For display, this data is subtracted from the // sample time to yield the elapsed time as the difference between the two. // In the definition below, the PerfTime field of the Object contains // the sample time as indicated by the WMICT_OBJECT_TIMER bit and the // difference is scaled by the PerfFreq of the Object to convert the time // units into seconds. #define WMICT_ELAPSED_TIME           \             (WMICT_SIZE_LARGE | WMICT_TYPE_COUNTER | WMICT_COUNTER_ELAPSED |\             WMICT_OBJECT_TIMER | WMICT_DISPLAY_SECONDS) //  The following counter type can be used with the preceding types to //  define a range of values to be displayed in a histogram. #define WMICT_COUNTER_HISTOGRAM_TYPE   0x80000000                                         // Counter begins or ends a histogram //  This counter is used to display the difference from one sample //  to the next. The counter value is a constantly increasing number //  and the value displayed is the difference between the current //  value and the previous value. Negative numbers are not allowed //  which shouldn't be a problem as long as the counter value is //  increasing or unchanged. #define WMICT_COUNTER_DELTA      \             (WMICT_SIZE_DWORD | WMICT_TYPE_COUNTER | WMICT_COUNTER_VALUE |\             WMICT_DELTA_COUNTER | WMICT_DISPLAY_NO_SUFFIX) #define WMICT_COUNTER_LARGE_DELTA      \             (WMICT_SIZE_LARGE | WMICT_TYPE_COUNTER | WMICT_COUNTER_VALUE |\             WMICT_DELTA_COUNTER | WMICT_DISPLAY_NO_SUFFIX)
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\docs\tco-eventtraceapis.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft TCO Template for SMS Test Title _PID_HLINKSTCO Template for SMS Test Test Case Outline marioh TCO, SMS, Test Case Outline, template Form protection password: herm WBEM TCO Template.dot Chris Chantrill Microsoft Word 9.0aaF.< 3&^35bjbjU WMI TCO: Event Tracing APIs  TCO Owner: Mario Hewardt Written By: Mario Hewardt Start date: 01/24/99 Run Test Contact: Dev Contact: Jee Fung Pang PM Contact: Jee Fung Pang Spec Name: Spec Locale: % Complete TCO Sign Offs: Description: Title: Date: Initial TCO  Review Program Manager Initial TCO  Review Development Initial TCO  Review Test Case Engineer Follow-up TCO Review Program Manager Follow-up TCO Review Development Follow-up TCO Review Test Case Engineer History: Date: Author: Reason: 01/24/99 Mario Hewardt Initial Draft created 02/25/99 Manivel Chandrasekaran Updated with Kernel mode support routines, Security features and test cases for testing Event collection as one component. Table of Contents:  TOC \t "Heading 1,2,Heading 2,3,heading TOC,1"  Introduction:  PAGEREF _Toc450622867 \h  References:  PAGEREF _Toc450622868 \h  Assumptions:  PAGEREF _Toc450622869 \h  Event Tracing API will work in supported environments  PAGEREF _Toc450622870 \h  UNICODE  PAGEREF _Toc450622871 \h  ASCII  PAGEREF _Toc450622872 \h  Definitions of Event Tracing APIs are correctly defined in specified header files included in Platform SDK  PAGEREF _Toc450622873 \h  Wmistr.h  PAGEREF _Toc450622874 \h  EvnTrace.h  PAGEREF _Toc450622875 \h  The Event Trace Collection Control APIs allow users to manage instances of event trace loggers  PAGEREF _Toc450622876 \h  When a user correctly calls the StartTrace API an instance of the event trace logger will be created  PAGEREF _Toc450622877 \h  When a user correctly calls the StopTrace API an instance of the event trace logger will be stopped  PAGEREF _Toc450622878 \h  When a user correctly calls the EnableTrace API an existing instance of a logger can be enabled or disabled  PAGEREF _Toc450622879 \h  When a user correctly calls the QueryTrace API the properties of an existing instance of a logger will be retrieved  PAGEREF _Toc450622880 \h  When a user correctly calls the UpdateTrace API the properties of an existing instance of a logger will be modified  PAGEREF _Toc450622881 \h  When a user correctly calls the QueryAllTraces API the properties of all existing instances of a logger will be retrieved  PAGEREF _Toc450622882 \h  The Event Trace Data Provider APIs allow users to deliver events to active event trace loggers  PAGEREF _Toc450622883 \h  When a user correctly calls the RegisterTraceGuids API the trace data provider will be registered with WDM service  PAGEREF _Toc450622884 \h  When a user correctly calls the UnregisterTraceGuids API the trace data provider will be unregistered with WDM service  PAGEREF _Toc450622885 \h  When a user correctly calls the TraceEvents API the data provider will trace the event specified  PAGEREF _Toc450622886 \h  When a user correctly calls the CreateTraceInstanceId API a unique instance Id will be generated for a trace GUID  PAGEREF _Toc450622887 \h  When a user correctly calls the TraceEventInstance API it enables tracing an event specified in the function call  PAGEREF _Toc450622888 \h  When a user correctly calls the GetTraceLoggerHandle API it will return the trace logger handle from the event trace buffer  PAGEREF _Toc450622889 \h  When a user correctly calls the GetTraceEnableLevel API it will return the enable level of the trace logger  PAGEREF _Toc450622890 \h  When a user correctly calls the GetTraceEnableFlags API it will return the event traces that are currently being monitored  PAGEREF _Toc450622891 \h  The Event Trace Data Consumer APIs allow users to access data generated by event trace loggers  PAGEREF _Toc450622892 \h  When a user correctly calls the OpenTrace API it allows the user to retrieve data from a log file or log stream  PAGEREF _Toc450622893 \h  When a user correctly calls the ProcessTrace API it allows the user to retrieve data from an array of  log files or log streams  PAGEREF _Toc450622894 \h  When a user correctly calls the CloseTrace API it allows the user to close a event trace session  PAGEREF _Toc450622895 \h  When a user correctly calls the SetTraceCallback API it allows the user to set a callback function for a specific GUID  PAGEREF _Toc450622896 \h  When a user correctly calls the RemoveTraceCallback API it allows the user to remove a callback function for a specific GUID  PAGEREF _Toc450622897 \h  The WDM Service kernel mode support routines allow NT device drivers to register to provide data to event trace loggers  PAGEREF _Toc450622898 \h  When driver  correctly calls the IoWmiRegistrationControl, the driver is registered as a kernel mode trace provider.  PAGEREF _Toc450622899 \h  When driver correctly calls the IoWmiWriteEvent, Events are sent to the logger if Collection control is enabled.  PAGEREF _Toc450622900 \h  Interoperability:  PAGEREF _Toc450622901 \h  Stress/Performance:  PAGEREF _Toc450622902 \h  Security  PAGEREF _Toc450622903 \h  Anomalies & Special Cases:  PAGEREF _Toc450622904 \h  Non Testable Behavior:  PAGEREF _Toc450622905 \h  Behavior to be tested in BVT:  PAGEREF _Toc450622906 \h  International:  PAGEREF _Toc450622907 \h  Appendix:  PAGEREF _Toc450622908 \h  Glossary:  PAGEREF _Toc450622909 \h  Introduction: Event tracing is an event driven mechanism of performance data collection commonly used in the industry to gather metrics that can be correlated to workload activities. A traced event is any activity of interest that can be used to determine or derive performance metrics typically used for detailed analysis or workload characterization. Metrics from event traces typically supplement performance counters. The Event Tracing APIs are grouped into 3 categories: Collection Control APIs Data Provider APIs Data Consumer APIs In addition to Data Provider APIs, device drivers can also register as Data Providers by calling WDM Service Kernel Mode Support routines.   Section 4 covers these routines but testing of these  will be limited to testing as Event Providers. ( These routines can also be used to send information to WMI through WDM Service). References: Jee Fung Pang Developer  Capacity planning Data Requirements http://capplan Event Tracing for Capacity Planning  HYPERLINK http://capplan  http://capplan Windows 2000 Driver Development Kit. Windows 2000 Platform SDK Assumptions: Experience in API Testing. Experience in kernel mode development (C/C++) Experience in kernel mode debugging. Understanding of WMI. W2K Machine with NT SLM Tree is required. The Win2k DDK (currently Beta3 RC0) has to be installed Microsoft Visual C/C++ 5.x > has to be installed Event Tracing API will work in supported environments UNICODE ASCII Definitions of Event Tracing APIs are correctly defined in specified header files included in Platform SDK Wmistr.h EvnTrace.h The Event Trace Collection Control APIs allow users to manage instances of event trace loggers When a user correctly calls the StartTrace API an instance of the event trace logger will be created If function returns zero, then instance has been successfully created Logger handle value is set  Appropriate output values in EVENT_TRACE_PROPERTIES structure set If user chooses log file to be none, then logger will write to buffer pool If the user chooses the log file mode to be circular then the logger will rewind and start at the beginning of the log file as soon as the log file becomes full If the user chooses the log file mode to be sequential then the logger will log event trace data unless log file becomes unable to receive events  logger will fail to deliver events if buffer pool full logger will fail to deliver events if log file becomes full logger will fail to deliver events if log file runs out of space on disk logger will increment EventsLost counter if event is lost due to delivery failure If the user chooses the log file mode to be real time the logger will write directly to consumer application Will not write to a log file If the user chooses to set the EnabledFlags parameter in EVENT_TRACE_PROPERTIES structure to one or a combination of valid flags the data provider will respond appropriately If the total number of logger instantiations exceeds 32 the logger will not create any more instantiations. Returns error ??? If the Logger Name is NT Kernel Logger, it cannot be started more than once. returns error??? If sufficient memory is not available for starting the Logger, StartTrace will return !!! StartTrace API will function within the security context of the logged-on user. If the Logged-on user has administrative privilege, StartTrace API will continue call If the logged-on user does not have administrative privilege, StartTrace API will return ERROR_!!!. Function will correctly respond to call of form: ULONG StartTrace( OUT PTRACEHANDLE TraceHandle,  IN LPTSTR InstanceName,  IN OUT PEVENT_TRACE_PROPERTIES Properties); Function will respond appropriately to TraceHandle value if ( TraceHandle  = NULL ) then return ERROR_INVALID_PARAMETER if ( TraceHandle  = pointer to valid handle )  then call continues  Function will respond appropriately to InstanceName value if (InstanceName = NULL ) then return ERROR_INVALID_NAME if ( InstanceName = empty string ) then return ERROR_INVALID_NAME if ( InstanceName = pointer to valid name for new logger) then call continues  if ( InstanceName  = pointer to invalid string) then return ERROR_INVALID_PARAMETER  if ( InstanceName  = pointer to invalid name for new logger) then return ERROR_INVALID_PARAMETER  Function will respond appropriately to Properties value If (Properties = NULL ) then return ERROR_INVALID_PARAMETER If (Properties = pointer to NULL ) then return ERROR_BAD_LENGTH  If (Properties = pointer to valid EVENT_TRACE_PROPERTIES structure ) then continue call  Function will respond appropriately to input values entered in Properties structure as defined in evntrace.h: WNODE_HEADER Wnode If Wnode.BufferSize = 0 then !!! If Wnode.BufferSize < sizeof(EVENT_TRACE_PROPERTIES) then !!! If Wnode.BufferSize >= sizeof(EVENT_TRACE_PROPERTIES) then call continues If Wnode.BufferSize > available memory then !!! If Wnode.Flags = 0 then !!! If Wnode.Flags = WNODE_FLAG_TRACED_GUID then continue Wnode structure interpreted as EVENT_TRACE_HEADER If Wnode.Flags = WNODE_FLAG_USE_GUID_PTR then return ERROR_INVALID_PARAMETER If Wnode.Flags = WNODE_FLAG_TRACED_GUID  and WNODE_FLAG_USE_GUID_PTR then continue call If Wnode.Flags contains WNODE_FLAG_ USE_MOF_PTR then call continues Data that follows the fixed members of a WNODE_HEADER-based structure consists of an array of MOF_FIELD structures If Wnode.Flags = any other values then !!! If any other parameter in WNODE_HEADER are set, function ignores it LPTSTR LoggerName function ignores value of LoggerName ULONG BufferSize When  BufferSize = 0 then return ERROR_BAD_LENGTH  When  BufferSize >  all available memory  then continue  possible AV When  BufferSize <  single event trace  then return ERROR_BAD_LENGTH When  BufferSize =  single event trace  then continue call ULONG MinimumBuffers When  MinimumBuffers = 0 then continue Replace MinimumBuffers value with default When  MinimumBuffers >  all memory  then continue Replace MinimumBuffers value with default When  MinimumBuffers <  maximum buffers  then continue When  MinimumBuffers > maximum buffers  then continue set MinimumBuffers to maximum ULONG MaximumBuffers When  MaximumBuffers = 0  then continue Replace MaximumBuffers value with default When  MaximumBuffers <minimum buffers  then continue Replace MinimumBuffers value with default When  MaximumBuffers > minimum buffers  then continue  ULONG MaximumFileSize When  MaximumFileSize = 0  then continue  default MaximumFileSize assumed When  MaximumFileSize > all disk space  then continue Possible System exception When  MaximumFileSize < single event trace  then continue  MaximumFileSize value set to default 1 Mb When  MaximumFileSize = single event trace  then continue When  LogFileMode = EVENT_TRACE_FILE_MODE_SEQUENTIAL  then continue When  LogFileMode = EVENT_TRACE_FILE_MODE_CIRCULAR  then continue When  LogFileMode = EVENT_TRACE_FILE_MODE_SEQUENTIAL and EVENT_TRACE_FILE_MODE_CIRCULAR  then return ERROR_INVALID_PARAMETER When  LogFileMode = EVENT_TRACE_FILE_MODE_SEQUENTIAL and EVENT_TRACE_FILE_MODE_CIRCULAR and EVENT_TRACE_FILE_MODE_ REAL_TIME_MODE  then return ERROR_INVALID_PARAMETER When  LogFileMode = EVENT_TRACE_FILE_MODE_SEQUENTIAL and EVENT_TRACE_FILE_MODE_REAL_TIME_MODE  then continue When  LogFileMode = EVENT_TRACE_FILE_MODE_CIRCULAR and EVENT_TRACE_FILE_MODE_ REAL_TIME_MODE  then continue When  LogFileMode = any other flag combination  then return ERROR_INVALID_PARAMETER  ULONG FlushTimer When  FlushTimer = 0  then continue When  FlushTimer > 0 AND FlushTimer < 4,000,000,000  then continue When  FlushTimer > 4,000,000,000  then continue  ULONG EnableFlags When  EnableFlags = EVENT_TRACE_FLAG_PROCESS  then continue When  EnableFlags = EVENT_TRACE_FLAG_THREAD  then continue When  EnableFlags = EVENT_TRACE_FLAG_DISK_IO  then continue When  EnableFlags = EVENT_TRACE_FLAG_DISK_FILE_IO  then continue When  EnableFlags = EVENT_TRACE_FLAG_MEMORY_PAGE_FAULTS  then continue When  EnableFlags = EVENT_TRACE_FLAG_MEMORY HARD FAULTS Flag  then continue When  EnableFlags = EVENT_TRACE_FLAG_NETWORK TCPIP  then continue When  EnableFlags = any combination of one or more flags  then continue ULONG NumberOfBuffers When  NumberOfBuffers = Any number  then continue ULONG FreeBuffers When  FreeBuffers =Any number  then continue ULONG EventsLost When  EventsLost =Any number  then continue ULONG BuffersWritten When  BuffersWritten  =Any number  then continue HANDLE LoggerThreadId When  LoggerThreadId =Any number  then continue LPTSTR LogFileName When  LogFileName =NULL  then continue When  LogFileName = valid pointer to string When  LogFileName = directory name  then return error code returned by System. When  LogFileName = Invalid file name  then return error code returned by System. When  LogFileName = Valid file name but invalid path  then return error code returned by System. When  LogFileName = Already existing file  then continue   overwrites existing file When  LogFileName = valid file name  then continue When a user correctly calls the StopTrace API an instance of the event trace logger will be stopped The StopTrace API will take the following three parameters (in order) [IN] TRACEHANDLE  [IN] LPSTR [IN OUT] PEVENT_TRACE_PROPERTIES if ( parameter1 = NULL  and parameter2 = valid instance name ) then return 0 if ( parameter1 = NULL and parameter2 = NULL ) then return ERROR_INVALID_PARAMETER if ( paremeter2 = NULL and parameter1 = valid instance handle ) then return 0 if ( paremeter2 = empty string and parameter1 = invalid Handle ) then return ERROR_INVALID_HANDLE if ( paremeter2 = pointer to valid string ) then return 0  if ( parameter1 = valid and existing trace handle and parameter2 = valid and existing instance name but different instance than parameter1 ) then return 0 [Instance name takes precedence] if ( paremeter2 = invalid string and parameter1 = invalid Handle ) then return ERROR_WMI_INSTANCE_NOT_FOUND If ( parameter3 = NULL ) then return ERROR_INVALID_PARAMETER If ( parameter3 = pointer to valid structure ) then return 0 If (parameter3  points to location where memory is not allocated) return ERROR_INVALID_PARAMETER. StopTrace API will function within the security context of the logged-on user. If the Logged-on user has administrative priviledge, StopTrace API will return success. If the logged-on user does not have administrative priviledge, StopTrace API will return !!!. When  Buffer Size = any number  Then after call completes this field will be unchanged [returned value] When  Minimum Buffers = any number  Then after call completes this field will be unchanged [returned value] When  Maximum Buffers = any number  Then after call completes this field will be unchanged [returned value] When  Maximum File Size = any number  Then after call completes this field will be unchanged [returned value] When  Log File Mode = any number  Then after call completes this field will be unchanged When  Flush Timer = any number  Then after call completes this field will be unchanged When  Enable Flags = any number  Then after call completes this field will be unchanged When  Number of Buffers = any number  Then after call completes this field will contain the number of buffers the logger used When  Free Buffers = any number  Then after call completes this field will contain the number of buffers that are free When  Events Lost = any number  Then after call completes this field will contain the number of events lost during logging When  Buffers Written = any number  Then after call completes this field will contain the number of buffers written to file When  Thread ID = any number  Then after call completes this field will contain the thread ID of the Logger When  Log File Name = any valid string  Then after call completes this field will contain the Log file name When  Log File Name = NULL  Then after call completes this field will contain the Log file name The StopTrace API will have the following side effects If a user successfully calls StopAPI the logger will stop logging event trace data to the log file If a user successfully calls StopAPI the logger will store information about the logger in parameter 3 If a different thread or process makes a call to disable or alter the properties of the logger, the logger will finish the call, in the order in which it was received. When a user correctly calls the EnableTrace API an existing instance of a logger can be enabled or disabled The EnableTrace API will take the following four parameters (in order) [IN] ULONG  [IN] ULONG  [IN] ULONG [newly added in build 196x for IIS] [IN] LPCGUID [IN] TRACEHANDLE if ( parameter1 = False ) then return 0 if ( parameter1 = True ) then return 0 if ( parameter1 != True or False ) then return ERROR_INVALID_PARAMETER if ( parameter2 = FLAG_PROCESS ) then return 0 if ( parameter2 = FLAG_THREAD ) then return 0 if ( parameter2 = FLAG_DISK_IO ) then return 0 if ( parameter2 = FLAG_DISK_FILE_IO ) then return 0 if ( parameter2 = FLAG_MEMORY_SOFT_FAULTS ) then return 0 if ( parameter2 = FLAG_MEMORY_HARD_FAULTS ) then return 0 if ( parameter2 = FLAG_NETWORK_TCPIP ) then return 0 if ( parameter2 = any combination of the above flags ) then return 0 if ( parameter2 > none of the flags above ) then return 0  if ( parameter3 = 0 ) then return 0 if ( parameter3 > 255 ) then return 0 if ( parameter3 > 4.000.000.000 ) then return 0 if ( parameter4 = NULL ) then return ERROR_INVALID_PARAMETER if ( parameter4 = pointer to valid and correct GUID ) then return 0 if ( parameter4 = pointer to nonexistent GUID ) then return ERROR_WMI_GUID_NOT_FOUND  if ( parameter5 = invalid instance handle ) then return ERROR_INVALID_HANDLE if ( parameter5 = valid and existing instance handle AND parameter1 = True ) then return 0 if ( parameter5 = existing instance handle (already disabled) AND parameter1 = False ) then return ERROR_WMI_INSTANCE_NOT_FOUND if ( parameter5 = existing instance handle (already enabled) AND parameter1 = True ) then return ERROR_WMI_ALREADY_ENABLED The EnableTrace API will have the following side effects If the used successfully calls the EnableTrace API (with the enable flag set) the instance of the logger specified will become enabled and start tracing the specified events If the user successfully calls the EnableTrace API (with the disabled flag set) the request to disable the trace will be sent to the trace provider The kernel providers will receive IRP_MN_ENABLE_EVENT when guid provided by Driver is enabled. WNODE_HEADER structure will be passed to the driver at irpStack->Parameters.WMI.Buffer Logger handle will be passed to the driver at wnode_header->Historical Context. The kernel providers will receive IRP_MN_DISABLE_EVENT when guid provided  by Driver is disabled for data collection. EnableTrace API will function within the security context of the logged-on user. If the Logged-on user has administrative priviledge, EnableTrace API will return success. If the logged-on user does not have administrative priviledge, EnableTrace API will return !!!. When a user correctly calls the QueryTrace API the properties of an existing instance of a logger will be retrieved The QueryTrace API will take the following three parameters (in order) [IN] TRACEHANDLE  [IN] LPSTR  [IN OUT] PEVENT_TRACE_PROPERTIES  if ( parameter1 = NULL and parameter2 = NULL ) then return ERROR_INVALID_PARAMETER if ( parameter1 = NULL and parameter2 = valid and existing instance name ) then return 0 if ( parameter1 = valid and existing trace handle and parameter2 = NULL ) then return 0 if ( parameter1 = valid and existing trace handle and parameter2 = valid and existing instance name but different instance than parameter1 ) then return 0  if ( parameter1 = NULL and parameter2 = invalid string ) then return ERROR_INVALID_PARAMETER if ( parameter1 = NULL and parameter2 = empty string ) then return ERROR_INVALID_PARAMETER if ( parameter1 < 0 and parameter2 = valid and existing instance name ) then return 0 if ( parameter3 = NULL ) then return ERROR_INVALID_PARAMETER if ( parameter3 = pointer to valid structure ) then return 0 Switch ( Parameter 3 structure ) When  Buffer Size = any number  Then after call completes this field will be unchanged When  Minimum Buffers = any number  Then after call completes this field will be unchanged When  Maximum Buffers = any number  Then after call completes this field will be unchanged When  Maximum File Size = any number  Then after call completes this field will be unchanged When  Log File Mode = any number  Then after call completes this field will be unchanged When  Flush Timer = any number  Then after call completes this field will be unchanged When  Enable Flags = any number  Then after call completes this field will be unchanged When  Number of Buffers = any number  Then after call completes this field will contain the number of buffers the logger used When  Free Buffers = any number  Then after call completes this field will contain the number of buffers that are free When  Events Lost = any number  Then after call completes this field will contain the number of events lost during logging When  Buffers Written = any number  Then after call completes this field will contain the number of buffers written to file When  Thread ID = any number  Then after call completes this field will contain the thread ID of the Logger When  Log File Name = any valid string  Then after call completes this field will contain the Log file name When  Log File Name = NULL  Then after call completes this field will contain the Log file name The QueryTrace API will have the following side effects If the user calls the QueryTrace API during an event trace the logger will finish the event trace before processing this call [should be almost independent of each other] If a different thread or process makes a call to disable or alter the properties of the logger, the logger will finish the call in the order in which it was received.  QueryTrace API will function within the security context of the logged-on user. If the Logged-on user has administrative priviledge, QueryTrace API will return success. If the logged-on user does not have administrative priviledge, QueryTrace API will return !!!. When a user correctly calls the UpdateTrace API the properties of an existing instance of a logger will be modified The UpdateTrace API will take the following three parameters (in order) [IN] PTRACEHANDLE  [IN] LPSTR  [IN OUT] PEVENT_TRACE_PROPERTIES  if ( parameter1 = NULL and parameter2 = NULL ) then return  if ( parameter1 = NULL and parameter2 = valid and existing instance name ) then return 0 if ( parameter1 = valid and existing trace handle and parameter2 = NULL ) then return 0 if ( parameter1 = valid and existing trace handle and parameter2 = valid and existing instance name but different instance than parameter1 ) then return 0  if ( parameter1 = NULL and parameter2 = invalid string ) then return ERROR_INVALID_PARAMETER if ( parameter1 = NULL and parameter2 = empty string ) then return ERROR_INVALID_PARAMETER if ( parameter1 = NULL and parameter2 = empty string ) then return ERROR_INVALID_PARAMETER if ( parameter1 < 0 and parameter2 = valid and existing instance name ) then return 0 if ( parameter3 = NULL ) then return ERROR_INVALID_PARAMETER if ( parameter3 = pointer to valid structure ) then return 0 Switch ( Parameter 3 structure ) When  Buffer Size = 0 then return 0  When  Buffer Size >  all available memory  then return 0 When  Buffer Size =  single event trace  then return 0 When  Minimum Buffers = 0 then return 0 When  Minimum Buffers =  single event trace  then return 0 When  Minimum Buffers <  maximum buffers  then return 0 When  Minimum Buffers > maximum buffers  then return 0 When  Minimum Buffers >  single event trace AND Minimum Buffers < all memory  then return 0 When  Maximum Buffers = 0  then return 0 When  Maximum Buffers > all memory  then return 0 When  Maximum Buffers <minimum buffers  then return 0 When  Maximum Buffers > minimum buffers  then return 0 When  Maximum File Size = 0  then return 0 When  Maximum File Size > all disk space  then return 0 (System exception) When  Maximum File Size = single event trace  then return 0 When  Log File Mode = Sequential  then return 0 When  Log File Mode = Circular  then return 0 When  Log File Mode = Sequential and Circular  then return 0 When  Log File Mode = Sequential and Circular and real time  then return 0 When  Log File Mode = Sequential and real time  then return 0 When  Log File Mode = Circular and real time  then return 0 When  Log File Mode = invalid mode  then return 0 When  Flush Timer = 0  then return 0 When  Flush Timer > 0 AND Flush Timer < 4.000.000.000  then return 0 When  Flush Timer > 4.000.000.000  then return 0 When  Enable Flags = Process Flag  then return 0 When  Enable Flags = Thread Flag  then return 0 When  Enable Flags = Disk IO Flag  then return 0 When  Enable Flags = Disk File IO Flag  then return 0 When  Enable Flags = Memory soft Faults Flag  then return 0 When  Enable Flags = Memory hard Faults Flag  then return 0 When  Enable Flags = Network TCP/IP Flag  then return 0 When  Enable Flags = Combination off one or more flags  then return 0 When  Logger Name = NULL  then return ERROR_INVALID_PARAMETER When  Logger Name = empty string  then return ERROR_INVALID_PARAMETER When  Logger Name = Invalid string  then return ERROR_INVALID_PARAMETER When  Logger Name = valid string  then return ERROR_INVALID_PARAMETER When  Number of bytes = Any number  then return 0 When  Free Buffers =Any number  then return 0 When  Events Lost =Any number  then return 0 When  Buffers Written  =Any number  then return 0 When  Logger Thread ID =Any number  then return 0 When  Log File Name =NULL  then return ERROR_INVALID_PARAMETER When  Log File Name = directory name  then return 0 (System exception) When  Log File Name = Invalid file name  then return 0 (System exception) When  Log File Name = Valid file name but invalid path  then return 0 (System exception) When  Log File Name = Already existing file  then return 0 (System exception) When  Log File Name = valid file name  then return 0 The UpdateTrace API will have the following side effects The user is allowed to attempt to change the following properties: LogFileMode to have REAL_TIME_MODE or NOT. All others ignored LogFileName to specify a new logfile Modify/Set EnableFlags for kernel tracing only Change MaximumBuffers Change FlushTimer If the user attempts to change the log mode to have anything but REAL_TIME_MODE it will be ignored by the logger If the logger is currently tracing an event and the user calls UpdateTrace API the logger will finish the tracing before making any changes  If a user changes any of the properties and specifies an invalid value the API call will fail and no changes to the logger properties will be made If a user changes the maximum number of buffers the logger will adjust the maximum number of buffers accordingly without loss of data If a user changes the maximum file size the logger will set the file size accordingly [only if the new size is larger than the current size. If the new size is smaller than the current file size, then the logger will still set the maximum to the requested maximum, no more buffers will be flushed to disk since the current size already exceeds the new maximum]. If a user changes the flush time the logger will flush buffer data to the file according to the new setting If a user changes the enable flags the logger will start tracing events according to the new flags specified If a user changes the log file name the logger will close the existing file and use the newer log file as specified by the log file name UpdateTrace will fail if user attempts to change the Logger name. UpdateTrace API will function within the security context of the logged-on user. If the Logged-on user has administrative priviledge, UpdateTrace API will return success. If the logged-on user does not have administrative priviledge, UpdateTrace API will return !!!. When a user correctly calls the QueryAllTraces API the properties of all existing instances of a logger will be retrieved The QueryAllTraces API will take the following three parameters (in order) [OUT] PEVENT_TRACE_PROPERTIES* [IN] ULONG  [OUT] PULONG if ( parameter1 = NULL) then return ERROR_INVALID_PARAMETER if ( parameter1 [array size] < parameter2 ) then return 0 [Possibly get ERROR_ACCESS_VIOLATION] if ( parameter1 = pointer to valid array and parameter1 [array size] = parameter2 ) then return 0 if ( parameter2 = 0 ) then return  ERROR_INVALID_PARAMETER If (Parameter2 > 32) then return ERROR_INVALID_PARAMETER if ( parameter3 = NULL ) then return ERROR_INVALID_PARAMETER The QueryAllTraces API will have the following side effects If the user successfully calls QueryAllTraces the array of properties will contain the properties for all instances of the event trace logger up to the size of the array provided If an update to one or more instances of the logger is being made at the same time that the user calls QueryAllTraces the logger will finish the update before the retrieving the properties  The third parameter will contain the total number of instances of the logger  QueryAllTraces API will function within the security context of the logged-on user. If the Logged-on user has administrative priviledge, QueryAllTraces API will return success. If the logged-on user does not have administrative priviledge, QueryAllTraces API will return !!!. The Event Trace Data Provider APIs allow users to deliver events to active event trace loggers When a user correctly calls the RegisterTraceGuids API the trace data provider will be registered with WDM service The RegisterTraceGuids API will take the following eight parameters (in order) [IN] PVOID [IN] PVOID [IN] LPGUID [IN] ULONG [IN] PTRACE_GUID_REGISTRATION [IN] LPSTR [IN] LPSTR [OUT] PTRACEHANDLE if ( parameter1 = NULL ) then return ERROR_INVALID_PARAMETER (F) if ( parameter1 = Invalid address) then return 0  if ( parameter1 = Valid address) then return 0  if ( parameter2 = NULL ) then return 0 if ( parameter2 = Invalid address) then return 0  if ( parameter2 = Valid address) then return 0  if ( parameter3 = NULL ) then return ERROR_INVALID_PARAMETER (F) if ( parameter3 = pointer to valid GUID ) then return 0 if ( parameter4 = 0 ) then return ERROR_INVALID_PARAMETER (F) if ( parameter4 > 0 AND parameter4  < large ) then return 0 [Possible system exception] if ( parameter4 > 0 (>2000000000) then return [Possible system exception]  if ( parameter5 = NULL ) then return ERROR_INVALID_PARAMETER (F) if ( parameter5 = pointer to valid structure ) then return 0  Individual fields of structure!!! if ( parameter6 = NULL ) then return 0  if ( parameter6 = valid string ) then return 0 if ( parameter7 = valid string ) then return 0 if ( parameter7 = NULL ) then return 0  if ( parameter8 = NULL ) then return ERROR_INVALID_PARAMETER (F) if ( parameter8 = valid pointer ) then return 0 The RegisterTraceGuids API will have the following side effects If the user specifies a data provider with a GUID that already exists then WMI will return 0  Upon completion of this call the logger will return a trace handle  through parameter8 RegisterTraceGuids API will function within the security context of the logged-on user. If the Logged-on user has administrative priviledge, RegisterTraceGuids API will return success. If the logged-on user does not have administrative priviledge, RegisterTraceGuids API will return !!!. When a user correctly calls the UnregisterTraceGuids API the trace data provider will be unregistered with WDM service The UnregisterTraceGuids API will take the following parameter [IN] TRACEHANDLE if ( parameter1 = valid trace handle ) then return 0 if ( parameter1 = invalid trace handle ) then return ERROR_INVALID_PARAMETER (F) The UnregisterTraceGuids API will have the following side effects Multiple calls to this API with the same trace handle will succeed UnregisterTraceGuids API will function within the security context of the logged-on user. If the Logged-on user has administrative priviledge, UnregisterTraceGuids API will return success. If the logged-on user does not have administrative priviledge, UnregisterTraceGuids API will return !!!. When a user correctly calls the TraceEvents API the data provider will trace the event specified The TraceEvent API will take the following two parameters [IN] TRACEHANDLE [IN] PEVENT_TRACE_HEADER if ( parameter1 = valid trace handle ) then return 0 if ( parameter1 = invalid trace handle ) then return ERROR_INVALID_HANDLE (F) if ( parameter2 = NULL ) then return ERROR_INVALID_PARAMETER (F) if ( parameter2 = pointer to NULL ) then return ERROR_BAD_LENGTH (F) [again, because first value is size] if ( parameter2 = valid structure pointer ) then return 0 Structure fields??!!! The TraceEvents API will have the following side effects If a data provider makes this call the event specified will be logged into the specified trace logger instance If the event has already been enabled for tracing (via previous call to TraceEvents API) the logger will not re-enable the event for tracing  (depending on the structure fields in the second parameter)  Logger will take GUID ptr only if WNODE_FLAG_USE_GUID_PTR flag is set in EVENT_HEADER. TraceEvents API will function within the security context of the logged-on user. If the Logged-on user has administrative priviledge, TraceEvents API will return success. If the logged-on user does not have administrative priviledge, TraceEvents API will return !!!. When a user correctly calls the CreateTraceInstanceId API a unique instance Id will be generated for a trace GUID The CreateTraceInstanceId API will take the following two parameters [IN] PVOID [IN OUT] PEVENT_INSTANCE_INFO if ( parameter1 = NULL) then return ERROR_INVALID_PARAMETER (F) if ( parameter1 = invalid pointer ) then return ERROR_ACCESS_VIOLATION  if ( parameter1 = valid pointer to a reg handle) then return 0 if ( parameter2 = NULL ) then return ERROR_INVALID_PARAMETER (F) if ( parameter2 = pointer to NULL ) then return 0 [??  if ( parameter2 = valid structure ) then return 0 Structure fields??!!! The CreateTraceInstanceId API will have the following side effects When a user calls this API multiple times with the same trace GUID you will get a new instance Id each time CreateTraceInstanceId API will function within the security context of the logged-on user. If the Logged-on user has administrative priviledge, CreateTraceInstanceId API will return success. If the logged-on user does not have administrative priviledge, CreateTraceInstanceId  API will return !!!. When a user correctly calls the TraceEventInstance API it enables tracing an event specified in the function call The TraceEventInstance API will take the following four parameters [IN] TRACEHANDLE [IN] EVENT_TRACE_HEADER [IN] PEVENT_INSTANCE_INFO [IN] PEVENT_INSTANCE_INFO if ( parameter1 = valid trace handle ) then return 0 if ( parameter1 = invalid trace handle ) then return ERROR_INVALID_HANDLE (F) if ( parameter2 = NULL ) then return ERROR_INVALID_PARAMETER (F) if ( parameter2 = invalid pointer ) then return 0  [probably ERROR_ACCESS_VIOLATION] if ( parameter2 = valid structure pointer ) then return 0 Structure fields??!!! if ( parameter3 = NULL ) then return ERROR_INVALID_PARAMETER (F) if ( parameter3 = invalid pointer ) then return 0 (F) [probably ERROR_ACCESS_VIOLATION] if ( parameter3 = valid structure pointer ) then return 0 Structure fields??!!! if ( parameter4 = NULL ) then return 0 (F)  if ( parameter4 = invalid pointer ) then return 0 (F) [probably ERROR_ACCESS_VIOLATION] if ( parameter4 = valid structure pointer ) then return 0 Structure fields??!!! if ( parameter4 = NULL ) then return 0 if ( parameter4 = invalid pointer ) then return 0 (F) [probably ERROR_ACCESS_VIOLATION] if ( parameter4 = valid structure pointer ) then return 0 Structure fields??!!! The TraceEventInstance API will have the following side effects When a user calls this API multiple times with the same parameters the call will succeed. TraceEventInstance API will function within the security context of the logged-on user. If the Logged-on user has administrative priviledge, TraceEventInstance API will return success. If the logged-on user does not have administrative priviledge, TraceEventInstance API will return !!!. When a user correctly calls the GetTraceLoggerHandle API it will return the trace logger handle from the event trace buffer The GetTraceLoggerHandle API will take the following parameter [IN] PVOID if ( parameter1 = NULL ) then return INVALID_HANDLE_VALUE if ( parameter1 = pointer to NULL ) then return INVALID_HANDLE_VALUE if ( parameter1 = pointer to invalid buffer ) then return INVALID_HANDLE_VALUE [probably access violation] if ( parameter1 = pointer to valid buffer ) then return the handle value The GetTraceLoggerHandle API will have the following side effects If the user calls the GetTraceLoggerHandle and specifies a buffer that has been deallocated the logger will return access violation  GetTraceLoggerHandle API will function within the security context of the logged-on user. If the Logged-on user has administrative priviledge, GetTraceLoggerHandle API will return success. If the logged-on user does not have administrative priviledge, GetTraceLoggerHandle API will return !!!. When a user correctly calls the GetTraceEnableLevel API it will return the enable level of the trace logger The GetTraceEnableLevel API will take the following parameter [IN] PTRACEHANDLE if ( parameter1 = NULL ) then return 0  if ( parameter1 = invalid handle ) then return 0  if ( parameter1 = valid handle ) then return 0 The GetTraceEnableLevel  API will have the following side effects Once a instance of a logger has been enabled, changing the trace level will not succeed GetTraceEnableLevel  API will function within the security context of the logged-on user. If the Logged-on user has administrative priviledge, GetTraceEnableLevel API will return success. If the logged-on user does not have administrative priviledge, GetTraceEnableLevel API will return !!!. When a user correctly calls the GetTraceEnableFlags API it will return the event traces that are currently being monitored The GetTraceEnableFlags API will take the following parameter [IN] PTRACEHANDLE Same as GetTraceEnableLevel() if ( parameter1 = NULL ) then return 0  if ( parameter1 = invalid handle ) then return 0 if ( parameter1 = valid handle ) then return 0 The GetTraceEnableFlags API will have the following side effects If the user calls the GetTraceEnableFlags and the logger is currently in the process of changing the enable flags, the logger will finish changing the enable flags before processing this call  GetTraceEnableFlags API will function within the security context of the logged-on user. If the Logged-on user has administrative priviledge, GetyTraceEnableFlags API will return success. If the logged-on user does not have administrative priviledge, GetTraceEnableFlags API will return !!!. The Event Trace Data Consumer APIs allow users to access data generated by event trace loggers When a user correctly calls the OpenTrace API it allows the user to retrieve data from a log file or log stream The OpenTrace API will take the following parameter [IN] PEVENT_TRACE_LOGFILE if ( parameter1 = NULL ) then return INVALID_HANDLE_VALUE if ( parameter1 = invalid pointer ) then return INVALID_HANDLE_VALUE [possibly access violation] if ( parameter1 = valid structure pointer ) then return TRACEHANDLE The OpenTrace API will have the following side effects If the user calls the OpenTrace with a log file name specified all data will be retrieved via the log file If the user calls the OpenTrace with a real time trace logger stream all data will be retrieved via the stream When a user correctly calls the ProcessTrace API it allows the user to retrieve data from an array of  log files or log streams The ProcessTrace API will take the following four parameters [IN] PTRACEHANDLE [IN] ULONG [IN] LPFILETIME  [IN] LPFILETIME if ( parameter1 = pointer to NULL ) then return ERROR_INVALID_HANDLE if ( parameter1 = invalid pointer ) then return ERROR_NOACCESS if ( parameter1 = valid trace handle pointer ) then return 0 if ( parameter2 = number of array slots in parameter1 ) then return 0 if ( parameter2 = 0 ) then return ERROR_BAD_LENGTH if ( parameter2 > number of array slots in parameter1 ) then return 0 (ERROR_NOACCESS if the memory after array is invalid) if ( parameter2 < number of array slots in parameter1 ) then return 0  if ( parameter3 = NULL ) return 0  if ( parameter3 = pointer to NULL ) return 0  if ( parameter3 = invalid pointer ) return ERROR_NOACCESS  if ( parameter3 = valid structure pointer ) return 0 Structure fields??!!! if ( parameter4 = NULL ) return 0  if ( parameter4 = pointer to NULL ) return 0  if ( parameter4 = invalid pointer ) return ERROR_NOACCESS if ( parameter4 = valid structure pointer ) return 0 Structure fields??!!! The ProcessTrace API will have the following side effects If a user calls this API and makes the time window large and a large amount of data is being returned no data will be lost (This sentence is not valid) Multiple processes are allowed to process from the same stream or log file  Multiple threads are not allowed to process from the same stream or log file  ProcessTrace API will function within the security context of the logged-in user if logging takes place in real time mode. If the logged on user has security privilege set for A particular GUID, ProcessTrace will return success. If the logged on user does not have the security priviledge set for a particular GUID, ProcessTrace will return ERROR_ACCESS_DENIED. When a user correctly calls the CloseTrace API it allows the user to close a event trace session The CloseTrace API will take the following parameter [IN] TRACEHANDLE   if ( parameter1 = NULL ) then return ERROR_INVALID_HANDLE if ( parameter1 = invalid pointer ) then return 0 (possible ERROR_NOACCESS) if ( parameter1 = valid trace handle pointer ) then return 0 The CloseTrace API will have the following side effects If a user attempts to close a trace session that has already been close the API will return ERROR_INVALID_HANDLE If a user calls the CloseTrace API and a event trace is currently being performed, the operation will fail When a user correctly calls the SetTraceCallback API it allows the user to set a callback function for a specific GUID The SetTraceCallback API will take the following two parameters LPCGUID PEVENT_CALLBACK if ( parameter1 = NULL ) then return ERROR_INVALID_PARAMETER if ( parameter1 = pointer to NULL ) then return 0  if ( parameter1 = invalid pointer ) then return 0 [possibly access violation] if ( parameter1 = valid GUID pointer ) then return 0 if ( parameter2 = NULL ) then return ERROR_INVALID_PARAMETER if ( parameter2 = pointer to NULL ) then return 0 if ( parameter2 = invalid pointer ) then return 0 if ( parameter2 = valid function pointer ) then return 0 The SetTraceCallback API will have the following side effects If the user makes a call to this API any subsequent calls to ProcessTrace will result in a call to the specified callback function (for the specified GUID) If two different functions are set for one single GUID, the latest function will be called When a user correctly calls the RemoveTraceCallback API it allows the user to remove a callback function for a specific GUID The RemoveTraceCallback API will take the following parameter LPCGUID if ( parameter1 = NULL ) then return ERROR_INVALID_PARAMETER if ( parameter1 = pointer to NULL ) then return 0 (F) (possible access violation) if ( parameter1 = invalid pointer ) then return 0 (F) (possible access violation) if ( parameter1 = valid GUID pointer ) then return 0 The RemoveTraceCallback API will have the following side effects If a user makes a call to RemoveTraceCallback API for a specified GUID and a callback function was never set (using SetTraceCallback) the call will fail If a user makes two or more calls to the RemoveTraceCallback API for a specified GUID (set via SetTraceCallback only once) the call will fail the second time The WDM Service kernel mode support routines allow NT device drivers to register to provide data to event trace loggers When driver  correctly calls the IoWmiRegistrationControl, the driver is registered as a kernel mode trace provider. IoWmiRegistrationControl takes the following parameters. IN PDEVICE_OBJECT DeviceObject IN ULONG Action When the Driver calls IoWmiRegistrationControl with action WMIREG_ACTION_REGISTER,  WDM Service will register DeviceObject as a provider of event trace or WMI  information.  The WDM Service will send IRP_MN_REG_INFO to the driver to provide GUIDs supported by the driver. When the driver correctly completes the IRP and returns WMIREGINFO structure at  irpStack->Parameters.WMI.Buffer, the driver will be  registered as event provider. The driver will be registered as Event Trace provider only if WMIREG_FLAG_TRACED_GUID is set at WMIREGGUID->Flags. If WMIREG_FLAG_TRACE_CONTROL_GUID is also set with WMIREG_FLAG_TRACED_GUID, events can be enabled only by enabling a trace logger. When the Driver calls IoWmiRegistrationControl with action WMIREG_ACTION_DEREGISTER,  WDM Service will  remove DeviceObject from the list of event trace providers.  When the Driver calls IoWmiRegistrationControl with action WMI_ACTION_REREGISTER, WDM Service will request the device object  to provide  new list of GUID identifiers by sending IRP_MN_REG_INFO. When driver correctly calls the IoWmiWriteEvent, Events are sent to the logger if Collection control is enabled. IoWmiWriteEvent takes the following parameters. In PVOID WnodeEventItem When the driver sets  Header->Flags to WNODE_FLAG_TRACED_GUID, Event will be sent only to the system logger. EVENT_TRACE_HEADER structure will be the  header for WnodeEventItem. When the driver sets Header->Flags to WNODE_FLAG_LOG_MODE  and clears WNODE_FLAG_TRACED_GUID, event will be sent both to WMI consumer and  the Logger. WNODE_HEADER structure will be the header for  WnodeEventItem. When the driver sets Header->Flags to WNODE_FLAG_USE_GUID_PTR with WNODE_FLAG_TRACED_GUID,  event will be sent only to the system logger. EVENT_TRACE_HEADER structure will be the  header for WnodeEventItem. GUID Member in the Header will be interpreted as Pointer to GUID rather than GUID itself When the driver sets Header->Flags to WNODE_FLAG_USE_GUID_PTR with WNODE_FLAG_LOG_MODE,  event will be sent only to the system logger. WNODE_HEADER structure will be the  header for WnodeEventItem. GUID Member in the Header will be interpreted as Pointer to GUID rather than a GUID. When the driver sets Header->Flags to WNODE_FLAG_USE_MOF_PTR along with WNODE_FLAG_USE_MOF_PTR, data following the header will be interpreted as Pointer to Data and Pointer to Size.  IoWMIWriteEvent will have following side-affects: Event will be sent to the Logger/WMI depending on the WnodeHeader->Flag. Logger will return STATUS_INVALID_HANDLE when the handle at  Wnode->HistoricalContext is invalid. Logger will return STATUS_INVALID_HANDLE when the driver calls IoWmiWriteEvent for GUID for which Logging is disabled. Logger will return NT_STATUS_SUCCESS upon successful completion of the call. Interoperability: Stress/Performance: Security This is covered under each API. Anomalies & Special Cases: Non Testable Behavior: Behavior to be tested in BVT: International: The EventTrace APIs is not an issue with internationalization. Appendix: Glossary:  FILENAME  TCO - EventTraceAPIs.doc  AUTHOR  marioh <Title> <Contact> Microsoft Confidential Page   PAGE   of 38
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\docs\event_tracing_api_testing_framework.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Event Tracing API Testing Framework  Title _PID_HLINKSEvent Tracing API Testing Framework  Judy Powell Normal.dot Judy Powell Microsoft Word 9.0 WNAl0 WNAl0  WNAl0 M*QRY Oq9=_ 32*fe lvRz/ 'uT{L |avuz/ hvwz/ ir*AE L6;)3 ivvz/ |jvEz/ }%_{^ 0+JfF Bw+eW ;Q~v}? U U6+ bAyr, Ju6]5 iZR]K Rvt1J lVFf9 S\/Eq RVq1Je Iq.MM Wh&QM et+(? ]\'k] .~';\  %\/FQ Nu:]e p1G~v} P]Cw-e+ @;6h_ @[>h+ @[5hk ;LyD~ ]l'm]oM .A{g, @;)hg (X!+U \.Wxo \/7xo O\\*K\_L dwoz? .rKH'  kAx%is >73JNvM :#3JNv&I d/"YL C}u*JNvK C}Y*JNv# :r~Hm M''{? PoK''{; O''{( C}}:9 d7#iNt% VUjHM <%#IF \Kt-YK !U<WV s1J~)@R }"uN, ?_4R? ?S;R7 .FyJF w1J1)NR *[<oR K.FyY^! +H/'n*M<7Rk 9.F9Wj Qn"iO 4"jDv G\[jy 2.F)+ '-J\D &"KD8 2o|K* oIE]GK] '3^2o|K bAbEdEfAx Y_wmE {NT9GJ _z+3SE #NT9@ D=[K= \%?#)GT {NT9GJ qNT9AN")FT 2o|K* Y'SKf/ $!JB6 Y'RKd/ Dz'23I IoOfz Fo'f: #q r  oIE]]K] KE}IK D.")CT 2o|K* }E=PK 2o|K* uc-uCNTiD MRX'SKf/ [RQ'h T[RmE IGG^J .ov]l)^Microsoft Word Picture MSWordDoc Word.Picture.8TitleJudy Powell Normal.dot Judy Powell Microsoft Word 9.0bjbjU Script files Command line  TCO test data file Platform Console log Detail log bjbjU Windows 2000 Event Tracing Collection Control Testing Platform  Judy Powell Version 1.0 June 8, 1999  TOC \o "1-3" \h \z   HYPERLINK \l "_Toc453490966"  Requirements  PAGEREF _Toc453490966 \h   HYPERLINK \l "_Toc453490967"  Platform Architecture  PAGEREF _Toc453490967 \h   HYPERLINK \l "_Toc453490968"  How the platform is intended to be used  PAGEREF _Toc453490968 \h   HYPERLINK \l "_Toc453490969"  Using the platform without having to write C/C++ code  PAGEREF _Toc453490969 \h   HYPERLINK \l "_Toc453490970"  Using the platform having to write a simple C/C++ validator routine  PAGEREF _Toc453490970 \h   HYPERLINK \l "_Toc453490971"  Using the platform to run collection control side effect tests  PAGEREF _Toc453490971 \h   HYPERLINK \l "_Toc453490972"  Using the platform to support the requirements of provider and consumer API and interaction tests  PAGEREF _Toc453490972 \h   HYPERLINK \l "_Toc453490973"  Known limitations and directions for future enhancements  PAGEREF _Toc453490973 \h   HYPERLINK \l "_Toc453490974"  Status  PAGEREF _Toc453490974 \h   HYPERLINK \l "_Toc453490975"  Command line argument values  PAGEREF _Toc453490975 \h   HYPERLINK \l "_Toc453490976"  TCO Test Data Files  PAGEREF _Toc453490976 \h   HYPERLINK \l "_Toc453490977"  Testing Scripts  PAGEREF _Toc453490977 \h   HYPERLINK \l "_Toc453490978"  Console log  PAGEREF _Toc453490978 \h   HYPERLINK \l "_Toc453490979"  Detail Log  PAGEREF _Toc453490979 \h   HYPERLINK \l "_Toc453490980"  Source files  PAGEREF _Toc453490980 \h  Event Tracing Collection Control Testing Platform Requirements The Event Tracing Collection Control Testing Platform is a C++ executable, which uses command line arguments and a TCO test data file or files to control execution.  The platform requirements are: The platform will provide 100% coverage of the non side effect collection control API  tests described in section 1 of the WBEM TCO: Event Tracing APIs document. The platform will provide a code base that can be easily extended to write test code for the collection control API side effect sections (1.2.2, 1.3.2, and 1.5.2). The platform will support running the API tests described in sections 2 and 3 of the WBEM TCO: Event Tracing APIs document, and interaction tests described in the WMI TCO: Event Trace Module Interaction document. In relation to requirement 1, the platform is required to drive through data files at least 70% of TCO collection control non side effect API tests without writing additional code, and to drive through data files plus a validator routine to be written in C/C++ the remaining TCO collection control non side effect API tests (up to 30%). In relation to requirement 3, the platform is required to be able to start provider and consumer executables with a consistent set of arguments and to provide an easily extendable code base to support the requirements of provider and consumer API and interaction testing. Platform Architecture Script files (.bat files) run the platform executable with command line arguments. Command line arguments specify the action, TCO test data file or files, detail logging path, and other parameters that allow a TCO test data file to be used in actions that set up for and clean up after a test. A TCO test data file contains the data for a particular TCO test. Console log contains an entry for each action indicting if the action passed or failed. Detail log contains a detailed description of results for a TCO test. How the platform is intended to be used The platform is designed to run simple non side effect collection control API tests using only TCO test data files, to run more complicated non side effect collection control API tests using TCO test data files with an additional validator routine coded in C/C++, to be extended programmatically to run complicated collection control interaction tests and to support the requirements of  both provider and consumer API and interaction tests. Using the platform without having to write C/C++ code It is estimated that at least 70% of the non side effect tests described in section 1 of the API testing document can be run without having to write additional C/C++ code.  These tests can be driven via simple scripts (.bat files) that provide via command line arguments all the data required to perform non side effect testing.   Using the platform having to write a simple C/C++ validator routine It is estimated that 30% of the non side effect tests described in section 1 of the API testing document will require having to code a simple C/C++ validator routine to be added to the platform code.   An example is included in the platform for test 1.1.1.10.5 which invokes StartTrace with MinimumBuffers set to 0.  After StartTrace is executed a validator routine is run to check to make sure that StartTrace has set MinumumBuffers to a default value.   Using the platform to run collection control side effect tests It is intended that the platform be extended by writing C/C++ code to implement side effect tests.  All of the platform functionality is accessible via function calls using normal parameter passing and does not require one to provide command line arguments programmatically.  This allows code to be written which provides a finer granularity of control over how loggers, providers and consumers are started and stopped.  The platform machinery can be used to get data, start loggers and executables, and log results with control being provided via C/C++ code rather than .bat file commands.   Using the platform to support the requirements of provider and consumer API and interaction tests Scenario  command line action argument (command line arguments are described in section 6) starts a logger, one or more providers and consumers and provides a consistent set of arguments to the providers and consumers.  The  Scenario  action will call EnableTrace immediately after one of the providers and all of the consumers are started if real-time logging is specified.  It will wait on all of the providers to finish executing before returning.  It does not wait on the consumers.  Additionally, like the collection control side effect testing described in section 3.3, the platform can be extended programmatically to drive more complicated testing scenarios for running provider and consumer API and interaction tests. Known limitations and directions for future enhancements The current implementation does not reflect recent modifications to how the _EVENT_TRACE_PROPERTIES data structure stores character string data. It would be useful if there was a command line argument to toggle kernel and private logging so that the TCO test data files would not need to be modified for private logger testing. There is a thread log created when the  Scenario  action is run.  It uses a global variable for the file.  If the thread log is required for debugging, test scripts can only contain a single command line invocation of the platform executable, as the thread log file is destroyed if the executable is re-entered.  This is not an issue when running in the debugger. When scripts are being written please keep in mind that scripts that start providers for tests will not require modifications to test private loggers.   Status The platform as currently implemented will provide test coverage for 100% for the 192 non side effect behaviors in section 1 of the WBEM TCO: Event Tracing APIs document.  The platform will drive through data files at least 70% of TCO collection control non side effect API tests without writing additional code, and will drive through data files plus a validator routine to be written in C/C++ the TCO collection control non side effect API tests (up to 30%). To validate the 70/30% coverage TCO test data files and test scripts were written to validate the platform using 19 of the 192 (9.9%) non side effect behaviors in section 1 of the TCO document.  One of the tests requires a validator routine.  Sixteen TCO test data files and 6 script files were written which test these 19 behaviors.  The percentage breaks down as follows: StartTrace section 1.1.1 has 57 behaviors.  There are data and script files for 7. StopTrace section 1.2.1 has 26 behaviors.  There are data and script files for 2. EnableTrace section 1.3.1 has 22 behaviors.  There are data and script files for 1. QueryTrace section 1.4.1 has 23 behaviors.   There are data and script files for 1. UpdateTrace section 1.5.1 has 58 behaviors.  There are data and script files for 2. QueryAllTraces section 1.6.1 has 6 behaviors.  There is script file for 6 behaviors (there are not data files for QueryAllTraces). The platform as currently implemented supports requirements 2 and 3 as described in section 1 of this document.  The platform support for these requirements is described in sections 3.3 and 3.4 of this document. Platform testing and validation was performed on build 2034 using a kernel provided by Melur Raghuraman. The platform has been compiled and tested using both ANSI and UNICODE TCO test data files.  All TCO test data files provided are ANSI. The provider and consumer used in all tests are tracedp.exe and tracedmp.exe, respectively.  The tracedp source was modified to accept any command line argument for testing purposes and the TCO test data files and test scripts may contain extraneous provider arguments. All files are checked into WBEM VSS\WMI Test\Test Code\Nova M3\EventTracingAPIs in the TCODataFiles, TCOScriptFiles and CollectionControl projects.  Paths in the scripts and data files will need to be modified to reflect the execution environment. Command line argument values -action   Providerexe -  start a provider executable.  Line   write a blank line to console output.  StartTrace   run StartTrace API action.  StopTrace   run StopTrace API action.  EnableTrace   run EnableTrace API action.  QueryTrace   run QueryTrace API action.  UpdateTrace   run UpdateTrace API action.  QueryAllTraces   run QueryAllTraces API action.  Sleep   sleep for 5 seconds  Scenario   start multiple providers, start logging and start multiple consumers. -providerexe   provider execuatble and command line.  [providerexe is both an action value and command line argument.]  -file   file name of TCO test data file. -detail   path for detail log file. -logexpected   0 means do not write to console log differences between expected API result and actual result, 1 means do log differences between expected and actual result. -usetracehandle   1 means that the API test requires a trace handle so StartTrace must be called.  This command line argument is applicable to StopTrace, QueryTrace and UpdateTrace API actions.  0 means use the logger name. -updatedata   file name of TCO test data file to be used for UpdateTrace API action. TCO Test Data Files Each entry in the data file is on a single line. TCO test data file example: 1.1.1.1 If (parameter1 = NULL) then return ERROR_INVALID_PARAMETER ERROR_INVALID_PARAMETER VALUE_NULL Test-1.1.1.1 KERNEL_LOGGER ENABLE:1 ENABLEFLAG:0x0 ENABLELEVEL:0x0 "_EVENT_TRACE_PROPERTIES Instance Begin" "Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}" "Wnode.Flags:0" "BufferSize:ULONG:4" "MinimunBuffers:ULONG:1" "MaximunBuffers:ULONG:10" "MaximunFileSize:ULONG:4" "LogFileMode:@#$ENUM:VALUE_ZERO" "FlushTimer:ULONG:60" "EnableFlags:@#$ENUM:VALUE_ZERO" "NumberOfBuffers:ULONG:0" "FreeBuffers:ULONG:0" "EventsLost:ULONG:0" "BuffersWritten:ULONG:0" "LogBuffersLost:ULONG:0" "RealTimeBuffersLost:ULONG:0" "AgeLimit:LONG:0" "LoggerThreadId:HANDLE:0x00000000" "LogFileName:TCHAR*:e:\EventTrace\Loggers\Test-1.1.1.1" "LoggerName:TCHAR*:Test-1.1.1.1" "_EVENT_TRACE_PROPERTIES Instance End" GUIDS: Validator: Provider:e:\bvt\localbvt\tracedp.exe,e:\bvt\localbvt\tracedp.exe,e:\bvt\localbvt\tracedp.exe Consumer:e:\bvt\localbvt\tracedmp.exe e:\EventTrace\Loggers\Test-1.1.1.1 -o test.csv  Annotated TCO test data file example (annotation in bold):  Name used in result logging 1.1.1.1 Test Description used in result logging If (parameter1 = NULL) then return ERROR_INVALID_PARAMETER  Expected result ERROR_INVALID_PARAMETER TraceHandle value - VALUE_NULL or VALUE_VALID VALUE_NULL Logger name  Test-1.1.1.1 API test code 0   6 described below. Kernel or private logger  - KERNEL_LOGGER or PRIVATE_LOGGER KERNEL_LOGGER Value passed to EnableTrace - enable or disable 1 and 0, respectively ENABLE:1 Value passed to EnableTrace ENABLEFLAG:0x0 Value passed to EnableTrace ENABLELEVEL:0x0 _EVENT_TRACE_PROPERTIES structure description "_EVENT_TRACE_PROPERTIES Instance Begin" "Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}" "Wnode.Flags:0" "BufferSize:ULONG:4" "MinimunBuffers:ULONG:1" "MaximunBuffers:ULONG:10" "MaximunFileSize:ULONG:4" Enumerated values for _EVENT_TRACE_PROPERTIES can be input as :@#$ENUM:EVENT_TRACE_FILE_MODE_SEQUENTIAL "LogFileMode:@#$ENUM:VALUE_ZERO" "FlushTimer:ULONG:60" "EnableFlags:@#$ENUM:VALUE_ZERO" "NumberOfBuffers:ULONG:0" "FreeBuffers:ULONG:0" "EventsLost:ULONG:0" "BuffersWritten:ULONG:0" "LogBuffersLost:ULONG:0" "RealTimeBuffersLost:ULONG:0" "AgeLimit:LONG:0" "LoggerThreadId:HANDLE:0x00000000" "LogFileName:TCHAR*:e:\EventTrace\Loggers\Test-1.1.1.1" "LoggerName:TCHAR*:Test-1.1.1.1" "_EVENT_TRACE_PROPERTIES Instance End" Additional GUIDS to enable if action is  Scenario GUIDS: {d58c126f-b309-11d1-969e-0000f875a5bd} Name of validator routine Validator: Name of provider Exe(s) and command line if action is  Scenario Provider:e:\bvt\localbvt\tracedp.exe  file xyz, e:\bvt\localbvt\tracedp.exe  file abc Name of consumer Exe(s) and command line if action is  Scenario Consumer:e:\bvt\localbvt\tracedmp.exe e:\EventTrace\Loggers\Test-1.1.1.1 -o test.csv  API test codes: OtherTest = 0, StartTraceTest = 1, StopTraceTest = 2, EnableTraceTest = 3, QueryTraceTest = 4, UpdateTraceTest = 5, QueryAllTracesTest = 6 These codes control which tests are reported in the detail log since the same TCO test data file may be used to start a logger, query a logger, update a logger or stop a logger.  Only if the API test code matches the  action command line argument will the detail log be written for the test.  An entry is always written to the console log regardless of whither or not the API test code matches the command line  action argument. Testing Scripts Each entry in the .bat file is on a single line. Testing script example: @echo off echo BeginTest 1.1.1.10.5 - StartTrace with a provider and with a validation routine E:\EventTrace\TestStartTrace\obj\i386\collectioncontrol.exe -action providerexe  -providerexe "E:\BVT\LocalBVT\tracedp.exe -fee fee" E:\EventTrace\TestStartTrace\obj\i386\collectioncontrol.exe -action enabletrace    -file E:\EventTrace\TCODataFiles\ansi\1-1-1-10-5.txt  -detail E:\EventTrace\TCOLogFiles\ANSI\TestRuns  E:\EventTrace\TestStartTrace\obj\i386\collectioncontrol.exe -action stoptrace   -logexpected 0 -file E:\EventTrace\TCODataFiles\ansi\1-1-1-10-5.txt  -detail E:\EventTrace\TCOLogFiles\ANSI\TestRuns  E:\EventTrace\TestStartTrace\obj\i386\collectioncontrol.exe -action line echo End Test E:\EventTrace\TestStartTrace\obj\i386\collectioncontrol.exe -action line @echo on Annotated testing script (annotation in bold): Turn of command echo so that console logging will not be interspersed with .bat file entries @echo off Write begin banner to console log echo BeginTest 1.1.1.10.5 - StartTrace with a provider and with a validation routine Begin a provider E:\EventTrace\TestStartTrace\obj\i386\collectioncontrol.exe -action providerexe  -providerexe "E:\BVT\LocalBVT\tracedp.exe -fee fee" Start a logger E:\EventTrace\TestStartTrace\obj\i386\collectioncontrol.exe -action enabletrace    -file E:\EventTrace\TCODataFiles\ansi\1-1-1-10-5.txt  -detail E:\EventTrace\TCOLogFiles\ANSI\TestRuns  Stop the logger E:\EventTrace\TestStartTrace\obj\i386\collectioncontrol.exe -action stoptrace   -logexpected 0 -file E:\EventTrace\TCODataFiles\ansi\1-1-1-10-5.txt  -detail E:\EventTrace\TCOLogFiles\ANSI\TestRuns  Write a blank line to console log E:\EventTrace\TestStartTrace\obj\i386\collectioncontrol.exe -action line Write end banner to console log echo End Test Turn command echo on @echo on Console log Console log generated by run1.1.1.bat script:  Begin Test 1.1.1.1 - StartTrace without a provider StartTrace called with TCOTest = 1.1.1.1 Action = starttrace DataFile = E:\EventTrace\TCODataFiles\ansi\1-1-1-1.txt Description = If (parameter1 = NULL) then return ERROR_INVALID_PARAMETER 1.1.1.1 - Passed:  Actual result 0x00000057 = to expected result 0x00000057. End Test BeginTest 1.1.1.2 - StartTrace with a provider CreateProcess succeeded for provider E:\BVT\LocalBVT\tracedp.exe with command line -fee fee. StartTrace called with TCOTest = 1.1.1.2 Action = enabletrace DataFile = E:\EventTrace\TCODataFiles\ansi\1-1-1-2.txt Validator passed. 1.1.1.2 - Passed. EnableTrace called with TCOTest = 1.1.1.2 Action = enabletrace DataFile = E:\EventTrace\TCODataFiles\ansi\1-1-1-2.txt Description = If (parameter1 = VALID) then return ERROR_SUCCESS 1.1.1.2 - Passed:  Actual result 0x00000000 = to expected result 0x00000000. StopTrace called with TCOTest = 1.1.1.2 Action = stoptrace DataFile = E:\EventTrace\TCODataFiles\ansi\1-1-1-2.txt 1.1.1.2 - Passed. End Test Begin Test 1.1.1.3 - StartTrace without a provider StartTrace called with TCOTest = 1.1.1.3 Action = starttrace DataFile = E:\EventTrace\TCODataFiles\ansi\1-1-1-3.txt Description = If (parameter2 = NULL) then return ERROR_INVALID_NAME 1.1.1.3 - Passed:  Actual result 0x0000007b = to expected result 0x0000007b. End Test Begin Test 1.1.1.4 - StartTrace without a provider StartTrace called with TCOTest = 1.1.1.4 Action = starttrace DataFile = E:\EventTrace\TCODataFiles\ansi\1-1-1-4.txt Description = If (parameter2 = empty string) then return ERROR_INVALID_NAME 1.1.1.4 - Passed:  Actual result 0x0000007b = to expected result 0x0000007b. End Test BeginTest 1.1.1.5 - StartTrace with a provider CreateProcess succeeded for provider E:\BVT\LocalBVT\tracedp.exe with command line -fee fee. StartTrace called with TCOTest = 1.1.1.5 Action = enabletrace DataFile = E:\EventTrace\TCODataFiles\ansi\1-1-1-5.txt Validator passed. 1.1.1.5 - Passed. EnableTrace called with TCOTest = 1.1.1.5 Action = enabletrace DataFile = E:\EventTrace\TCODataFiles\ansi\1-1-1-5.txt Description = If (parameter2 = valid string) then return ERROR_SUCCESS 1.1.1.5 - Passed:  Actual result 0x00000000 = to expected result 0x00000000. StopTrace called with TCOTest = 1.1.1.5 Action = stoptrace DataFile = E:\EventTrace\TCODataFiles\ansi\1-1-1-5.txt 1.1.1.5 - Passed. End Test BeginTest 1.1.1.6 - StartTrace with a provider CreateProcess succeeded for provider E:\BVT\LocalBVT\tracedp.exe with command line -fee fee. StartTrace called with TCOTest = 1.1.1.6 Action = enabletrace DataFile = E:\EventTrace\TCODataFiles\ansi\1-1-1-6.txt 1.1.1.6 - Passed. EnableTrace called with TCOTest = 1.1.1.6 Action = enabletrace DataFile = E:\EventTrace\TCODataFiles\ansi\1-1-1-6.txt Description = If (parameter2 = invalid valid string) then return ERROR_INVALID_PARAMETER 1.1.1.6 - Failed:  Actual result 0x00000000 not = to expected result 0x00000057. StopTrace called with TCOTest = 1.1.1.6 Action = stoptrace DataFile = E:\EventTrace\TCODataFiles\ansi\1-1-1-6.txt 1.1.1.6 - Passed. End Test BeginTest 1.1.1.10.5 - StartTrace with a provider and with a validation routine CreateProcess succeeded for provider E:\BVT\LocalBVT\tracedp.exe with command line -fee fee. StartTrace called with TCOTest = 1.1.1.10.5 Action = enabletrace DataFile = E:\EventTrace\TCODataFiles\ansi\1-1-1-10-5.txt Validator passed. 1.1.1.10.5 - Passed. EnableTrace called with TCOTest = 1.1.1.10.5 Action = enabletrace DataFile = E:\EventTrace\TCODataFiles\ansi\1-1-1-10-5.txt Description = If MinimumBuffers is equal zero replace with default value. 1.1.1.10.5 - Passed:  Actual result 0x00000000 = to expected result 0x00000000. StopTrace called with TCOTest = 1.1.1.10.5 Action = stoptrace DataFile = E:\EventTrace\TCODataFiles\ansi\1-1-1-10-5.txt 1.1.1.10.5 - Passed. End Test Detail Log Detail log generated for Test 1.1.1.1 from run1.1.1.bat script:  ------------------------------------------------------- StartTraceAPI TCO test 1.1.1.1 started at time Mon Jun 07 17:16:12 1999. ----  Input Data ---- Description: If (parameter1 = NULL) then return ERROR_INVALID_PARAMETER User Security Context: Has administrative priviledge. LoggerType: KERNEL_LOGGER Enable: 0x00000001 EnableFlag: 0x00000000 EnableLevel: 0x00000000 Expected Result: 0x00000057 Trace Handle: 0x0000000000000000 Instance Name: Test-1.1.1.1 "_EVENT_TRACE_PROPERTIES Instance Begin" "Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}" "Wnode.Flags:@#$ENUM:" "BufferSize:ULONG:4" "MinimunBuffers:ULONG:1" "MaximunBuffers:ULONG:10" "MaximunFileSize:ULONG:4" "LogFileMode:@#$ENUM:0" "FlushTimer:ULONG:60" "EnableFlags:@#$ENUM:0" "NumberOfBuffers:ULONG:0" "FreeBuffers:ULONG:0" "EventsLost:ULONG:0" "BuffersWritten:ULONG:0" "LogBuffersLost:ULONG:0" "RealTimeBuffersLost:ULONG:0" "AgeLimit:ULONG:0" "LoggerThreadId:HANDLE:0x00000000" "LogFileName:TCHAR*:e:\EventTrace\Loggers\Test-1.1.1.1" "LoggerName:TCHAR*:Test-1.1.1.1" "_EVENT_TRACE_PROPERTIES Instance End" Guids: ----  Returned Values ---- Test: 1.1.1.1 passed Test result: 0x00000057 Error Description: The parameter is incorrect. Trace Handle: 0x0000000000000000 "_EVENT_TRACE_PROPERTIES Instance Begin" "Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}" "Wnode.Flags:@#$ENUM:" "BufferSize:ULONG:4" "MinimunBuffers:ULONG:1" "MaximunBuffers:ULONG:10" "MaximunFileSize:ULONG:4" "LogFileMode:@#$ENUM:0" "FlushTimer:ULONG:60" "EnableFlags:@#$ENUM:0" "NumberOfBuffers:ULONG:0" "FreeBuffers:ULONG:0" "EventsLost:ULONG:0" "BuffersWritten:ULONG:0" "LogBuffersLost:ULONG:0" "RealTimeBuffersLost:ULONG:0" "AgeLimit:ULONG:0" "LoggerThreadId:HANDLE:0x00000000" "LogFileName:TCHAR*:e:\EventTrace\Loggers\Test-1.1.1.1" "LoggerName:TCHAR*:Test-1.1.1.1" "_EVENT_TRACE_PROPERTIES Instance End" Source files CollectionControl.cpp   Main, command line actions and command line parsing.  ConstantMap.cpp   Maps strings from TCO test data files into #define values. EnableTraceAPI.cpp   EnableTrace testing routine. Logger.cpp   Encapsulates writing data structure specific logging. Persistor.cpp   Encapsulates general file I/O. QueryAllTracesAPI.cpp - OueryAllTraces testing routine. QueryTraceAPI.cpp - QueryTrace testing routine. StartTraceAPI.cpp - StartTrace testing routine. StopTraceAPI.cpp - StopTrace testing routine. StructureWapperHelpers.cpp   Helper functions for CEventTraceProperties. StructureWrappers.cpp   Implementation file for CEventTraceProperties which encapsulates reading and writing the _EVENT_TRACE_PROPERTIES structure. TCOData.cpp   Encapsulates TCO test data file reading. T_STRING.H   Encapsulates UNICODE and ANSI string and file functions. UpdateTraceAPI.cpp - UpdateTrace testing routine. Utilities.cpp   Utility functions. Validator.cpp   Validator functions will go here. PAGE   PAGE    EMBED Word.Picture.8    WNAl0 M*QRY Oq9=_ 32*fe lvRz/ 'uT{L |avuz/ hvwz/ ir*AE L6;)3 ivvz/ |jvEz/ }%_{^ 0+JfF Bw+eW ;Q~v}? U U6+ bAyr, Ju6]5 iZR]K Rvt1J lVFf9 S\/Eq RVq1Je Iq.MM Wh&QM et+(? ]\'k] .~';\  %\/FQ Nu:]e p1G~v} P]Cw-e+ @;6h_ @[>h+ @[5hk ;LyD~ ]l'm]oM .A{g, @;)hg (X!+U \.Wxo \/7xo O\\*K\_L dwoz? .rKH'  kAx%is >73JNvM :#3JNv&I d/"YL C}u*JNvK C}Y*JNv# :r~Hm M''{? PoK''{; O''{( C}}:9 d7#iNt% VUjHM <%#IF \Kt-YK !U<WV s1J~)@R }"uN, ?_4R? ?S;R7 .FyJF w1J1)NR *[<oR K.FyY^! +H/'n*M<7Rk 9.F9Wj Qn"iO 4"jDv G\[jy 2.F)+ '-J\D &"KD8 2o|K* oIE]GK] '3^2o|K bAbEdEfAx Y_wmE {NT9GJ _z+3SE #NT9@ D=[K= \%?#)GT {NT9GJ qNT9AN")FT 2o|K* Y'SKf/ $!JB6 Y'RKd/ Dz'23I IoOfz Fo'f: #q r  oIE]]K] KE}IK D.")CT 2o|K* }E=PK 2o|K* uc-uCNTiD MRX'SKf/ [RQ'h T[RmE IGG^J .ov]l)^
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\docs\tco-eventtracemoduleinteraction.doc ===
Microsoft Word Document MSWordDoc Word.Document.8WMI TCO: EventTraceModuleInteraction Title _PID_GUID _PID_HLINKSWMI TCO: EventTraceModuleInteraction a-mancha Normal.dot a-mancha Microsoft Word 8.0#3r?,0 rc4&sc4&WMI TCO: EventTraceModuleInteraction TCO Owner: Manivel Chandrasekaran Written By: Manivel Chandrasekaran Start date: 03/01/1999 Run Test Contact: Dev Contact: Jee Fung Pang/Melur Raghuraman PM Contact: Jee Fung Pang Spec Name: Spec Locale: % Complete TCO Sign Offs: Description: Title: Date: Initial TCO  Review Test Lead 03/04/1999 Initial TCO  Review Development Initial TCO  Review Test Case Engineer Follow-up TCO Review Program Manager Follow-up TCO Review Development Follow-up TCO Review Test Case Engineer History: Date: Author: Reason: 03/01/1999 Manivel Chandrasekaran Created Initial Document Table of Contents:  TOC \t "Heading 1,2,Heading 2,3,heading TOC,1"  Introduction:  PAGEREF _Toc445118996 \h  References:  PAGEREF _Toc445118997 \h  Assumptions:  PAGEREF _Toc445118998 \h  Global Test Classes:  PAGEREF _Toc445118999 \h  An instance of logger will be created when StartTrace is called correctly.  PAGEREF _Toc445119000 \h  Logger will notify the Provider to enable tracing only when it is enabled by calling EnableTrace.  PAGEREF _Toc445119001 \h  Logger will notify Provider to disable logging when it is disabled by calling EnableTrace.  PAGEREF _Toc445119002 \h  Any attempt to create a new logger with same logfile name will return !!!!  PAGEREF _Toc445119003 \h  Multiple providers will be able to log to the same logger if all the providers had registered for the same control GUID.  PAGEREF _Toc445119004 \h  If the buffers allocated is not sufficient for logging all the events, Logger will log the number of events lost correctly.  PAGEREF _Toc445119005 \h  If the Log file is deleted, a new log file will be created with same file name.  PAGEREF _Toc445119006 \h  Any attempt to create a new logger with the same logger name will return success.  PAGEREF _Toc445119007 \h  If the Buffers are not accessed for more than 15 minutes, the buffer will be freed.  PAGEREF _Toc445119008 \h  Logger can be stopped by calling StopTrace correctly.  PAGEREF _Toc445119009 \h  If the Logger is stopped, all subsequent Event tracing by Providers will return INVALID_HANDLE.  PAGEREF _Toc445119010 \h  Notification will be sent to all the Providers which had registered the control GUID with the logger.  PAGEREF _Toc445119011 \h  Logger will be stopped even if the Provider returns error upon receiving the notification.  PAGEREF _Toc445119012 \h  Consumers will not be notified that the Logger has  been stopped.  PAGEREF _Toc445119013 \h  Any attempt by the consumer to read the data will return success.  PAGEREF _Toc445119014 \h  Any new logger will be able to write to the log file.  PAGEREF _Toc445119015 \h  The Logger will release all the buffers it had allocated.  PAGEREF _Toc445119016 \h  User mode Provider can register the GUIDs for logging by calling RegisterTraceGuids  PAGEREF _Toc445119017 \h  User mode Provider can pass Binary mof to the WDM Service by calling RegisterTraceGuids  PAGEREF _Toc445119018 \h  A user mode Provider will be able to write data to different loggers if it different loggers are enabled for different control GUIDs.  PAGEREF _Toc445119019 \h  Kernel mode Provider can register the GUIDs for logging by calling IoWmiRegistrationControl.  PAGEREF _Toc445119020 \h  Kernel mode provider can pass binary MOF to the WDM Service by including as a resource in driver file.  PAGEREF _Toc445119021 \h  Kernel mode provider can register BINARY_MOF_GUID as one of the GUID supported.  PAGEREF _Toc445119022 \h  User mode Provider can unregister the GUIDs for logging by calling UnregisterTracedGuids.  PAGEREF _Toc445119023 \h  Any subsequent enable or disable of logger will not result in calling the callback functions.  PAGEREF _Toc445119024 \h  The WDM Service will notify the WDM Provider that the provider has unloaded.  PAGEREF _Toc445119025 \h  Kernel mode Provider can deregister the GUIDs for logging by calling IoWmiRegistrationControl.  PAGEREF _Toc445119026 \h  Any subsequent enable or disable of logger will not result in IRPs to the driver.  PAGEREF _Toc445119027 \h  User mode Provider can generate event trace by calling TraceEvent.  PAGEREF _Toc445119028 \h  If the Provider tries to log data more than the size of the Buffer size set for the logger, TraceEvent will return !!!!  PAGEREF _Toc445119029 \h  Provider can use WNODE_FLAG_USE_MOF_PTR in Event header to send pointer to the datablock.  PAGEREF _Toc445119030 \h  Consumers can process trace events by calling SetTraceCallback  PAGEREF _Toc445119031 \h  One consumer can receive events from different loggers if consumer has callback routines for different GUIDs.  PAGEREF _Toc445119032 \h  Consumers can read the trace log file by calling OpenTrace  PAGEREF _Toc445119033 \h  Different consumers can process the same logfile by getting different handles  PAGEREF _Toc445119034 \h  Consumers can process trace by calling ProcessTrace  PAGEREF _Toc445119035 \h  Specific Test Classes:  PAGEREF _Toc445119036 \h  Interoperability:  PAGEREF _Toc445119037 \h  Stress/Performance:  PAGEREF _Toc445119038 \h  Anomalies & Special Cases:  PAGEREF _Toc445119039 \h  Non Testable Behavior:  PAGEREF _Toc445119040 \h  Behavior to be tested in BVT:  PAGEREF _Toc445119041 \h  International:  PAGEREF _Toc445119042 \h  Appendix:  PAGEREF _Toc445119043 \h  Glossary:  PAGEREF _Toc445119044 \h  Introduction: Event tracing is an event-driver mechanism of performance data collection commonly used in the industry to gather metrics that can be correlated to workload activities. This documents outlines the test cases to test the interaction between the three modules ( Providers, Consumers and Collection Control) that support Event tracing.  References: Jee Fung Pang, Melur Raghuraman   Developers of Event Trace APIs TCO-Event Trace API Event Tracing for Capacity Planning  HYPERLINK http://capplan  http://capplan Assumptions: The assumption is made that event trace APIs have been fully tested and this TCO is designed to test Event Tracing as a single module. Since the objective of the TCO is to test the full functionality of Event Tracing, all the APIs to be used for testing this should be called with correct parameters.  Behavior of APIs with invalid parameters is discussed in TCO- Event ProviderAPI TCO and is not the purpose of this TCO. Tester is familiar with all the Event Trace APIs. Global Test Classes: **## -ALL -ALL -ALL -0 -ALL -0 ##** An instance of logger will be created when StartTrace is called correctly. Logger will notify the Provider to enable tracing only when it is enabled by calling EnableTrace. If a logger tries to enable a GUID, for which logging is already enabled for another logger, EnableTrace will return ERROR_WMI_ALREADY_ENABLED. If EnableTrace is called for a GUID registered by the provider, notification will be sent to the Provider immediately. If a control GUID is registered by multiple providers, enable tracing will be sent to all the Providers. If the Provider exits and then starts again from another process and if the logger is still running, the provider will receive enable notification immediately. Any New provider will be able to register for a new set of GUIDS. If the new provider registers any GUID for which tracing is already enabled, notification will be sent immediately. Consumers will not be notified when EnableTrace is called. Logger will notify Provider to disable logging when it is disabled by calling EnableTrace. Any subsequent logging of the Provider will result in ERROR_INVALID_HANDLE. Any attempt to create a new logger with same logfile name will return ERROR_FILE_EXISTS. Multiple GUIDs will be able to enabled for the same logger.  Multiple providers will be able to log to the same logger if all the providers had registered for the same control GUID. If the buffers allocated is not sufficient for logging all the events, Logger will log the number of events lost correctly.  The Log file cannot be deleted when the logger is started.  Any attempt to create a new logger with the same logger name will return success. Always the first logger will be referred when logger is stopped or queried by using the logger name. User can stop or query different loggers by using the logger handle. If the logger is stopped continuously by name, all the loggers will be stopped in the order in which it were created.  If the Buffers are not accessed for more than 15 minutes, the buffer will be freed. If the Logger name is NT Kernel Logger, kernel logger will be started with the filename given. EnableFlag can be used to individually turn on Process Creation, Thread Creation, Disk IO, Soft & Hard Faults, Network TCP IP. Kernel Logger will be able to started with real time mode. Any attempt to start Kernel logger while it is running will result in INVALID_PARAMETER. Active buffers will be flushed to disk on a periodic basis by setting FlushTime parameter  Logger can be stopped by calling StopTrace correctly.  If the Logger is stopped, all subsequent Event tracing by Providers will return INVALID_HANDLE. Notification will be sent to all the Providers which had registered the control GUID with the logger. Logger will be stopped even if the Provider returns error upon receiving the notification. Consumers will not be notified that the Logger has  been stopped. StopTrace will return success even if any consumer is already running. Any attempt by the consumer to read the log file will return success. Any new logger will be able to write to the log file. The Logger will release all the buffers it had allocated. User mode Provider can register the GUIDs for logging by calling RegisterTraceGuids User mode Provider can pass Binary mof to the WDM Service by calling RegisterTraceGuids Success will be returned by RegisterTraceGuids if the mof resource is not successfully compiled in WMI repository.  Success will be returned by RegisterTraceGuids even if the MofResource is not available in the MofImagePath.  If the classes given by the User mode provider are queried for instances, Provider will not be called. A single user mode Provider will be able to write data to different loggers if it the provider had registered with multiple loggers. Kernel mode Provider can register the GUIDs for logging by calling IoWmiRegistrationControl. Kernel mode provider can pass binary MOF to the WDM Service by including as a resource in driver file. Kernel mode provider can register BINARY_MOF_GUID as one of the GUID supported. BinaryMof will be returned when this GUID is queried.  User mode Provider can unregister the GUIDs for logging by calling UnregisterTracedGuids. Any subsequent enable or disable of logger will not result in calling the callback functions. Kernel mode Provider can deregister the GUIDs for logging by calling IoWmiRegistrationControl. Any subsequent enable or disable of logger will not result in IRPs to the driver. User mode Provider can generate event trace by calling TraceEvent. If the Provider tries to log data more than the size of the Buffer size set for the logger, TraceEvent will return ERROR_BUFFER_OVERFLOW. Provider can use WNODE_FLAG_USE_MOF_PTR in Event header to send pointer to the datablock. If the Provider attempts to log data for a GUID for which Logging is not enabled, TraceEvent will return ERROR_INVALID_HANDLE User mode Provider can log the transaction by calling TraceEventInstance  The InstanceId is generated by calling CreateTraceInstanceId. If two providers are logging data for the same GUID, InstanceIds returned for each provider will be unique. When a consumer is registered when the provider has already started logging by calling TraceEventInstance, the data will be able to retreived correctly by the consumer. Kernel mode Provider can generate event trace by calling IoWmiWriteEvent. If the Provider tries to log data more than the size of the buffer size set for the logger, IoWmiWriteEvent will return STATUS_BUFFER_OVERFLOW. Consumers can process trace events in real time by calling SetTraceCallback. One consumer can receive events from different loggers if consumer has registered separately with different loggers. Different consumers can receive events from same logger by calling SetTraceCallback with different callback functions. Different GUIDs can be registered with same CallBack function. Consumers can unregister by calling RemoveTraceCallback. Logger will continue to log data even after if all the consumers have unregistered. Consumers can read the trace log file by calling OpenTrace Different consumers can process the same logfile by getting different handles Open trace will return success even if Logging is not enabled for the Logger if called from different process.  Consumers can process trace by calling ProcessTrace. If StartTime and EndTime is set, consumers can process events within the time window. If any events are lost during this time, Consumers can get this information from EventsLost in EVENT_TRACE_LOGFILE. If EVENT_TRACE_LOGFILE->BufferCallback is set to valid callback function during OpenTrace, the function will be called for all the events from the stream. BufferCallBack will be called by filling with Number of buffers filled and the Number of events lost. If BufferCallBack is not set, EventCallback will be called. EventCallback will be called with the Number of buffers read. ( what are the other values set??? All the values under TRACE_LOG_FILE_HEADER are set???) If the log file is in circular mode, ProcessTrace will correctly retreive all the events from the Logfile. Consumers can close the stream by calling CloseTrace. Even if all the consumers exits, Logger will continue to log data supplied by Providers. CloseTrace will return success only when ProcessTrace is complete. Any attempt to use the same handle which is previously closed will result in ERROR_INVALID_HANDLE. Specific Test Classes: Interoperability: Stress/Performance: Anomalies & Special Cases: Non Testable Behavior: Behavior to be tested in BVT: International: Appendix: Glossary: Note: Provider in this document implies both User mode and Kernel mode providers.  Whenever this is not the case, User mode and kernel mode providers are discussed separately.  FILENAME  \* MERGEFORMAT  TCO - EventTraceModuleInteraction.doc by: Manivel Chandrasekaran <Title> <Contact> Microsoft Confidential Page   PAGE   NUMPAGES  wi[MA3 }oaSE7 }qi]UIF> }oaYME9 {m_]]]]]]]]]]]]]]]]]]]]]]]
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\logger\readme.txt ===
========================================================================
       CONSOLE APPLICATION : TestStartTrace
========================================================================


AppWizard has created this TestStartTrace application for you.  

This file contains a summary of what you will find in each of the files that
make up your TestStartTrace application.

TestStartTrace.dsp
    This file (the project file) contains information at the project level and
    is used to build a single project or subproject. Other users can share the
    project (.dsp) file, but they should export the makefiles locally.

TestStartTrace.cpp
    This is the main application source file.


/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named TestStartTrace.pch and a precompiled types file named StdAfx.obj.


/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\command.txt ===
D:\winnt\system32\wbem//Mof ImagePath
MofResource//Mof ResourceName
//NULL//CallBackFunction Optional
//NULL//TraceGuidReg Optional
//NULL//RegistrationHandle Optional
//NULL0000//GuidCount Optional
NULL//UnRegisterTraceGuid Optional
//NULL//GetTraceLoggerHandle Optional
//NULL//GetTraceEnableLevel Optional
//NULL//GetTraceEnableFlag Optional
//NULL//UnRegisterTraceGuidHandle Optional
USE_GUID_PTR//UseGuidPtr Optional
USE_MOF_PTR//UseMofPtr Optional
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\1-1-1-1.txt ===
1.1.1.1
If (parameter1 = NULL) then return ERROR_INVALID_PARAMETER
ERROR_INVALID_PARAMETER
VALUE_NULL
Test-1.1.1.1
1
KERNEL_LOGGER
ENABLE:1	
ENABLEFLAG:0x0
ENABLELEVEL:0x0
"_EVENT_TRACE_PROPERTIES Instance Begin"
"Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}"
"Wnode.Flags:0"
"BufferSize:ULONG:4"
"MinimunBuffers:ULONG:1"
"MaximunBuffers:ULONG:10"
"MaximunFileSize:ULONG:4"
"LogFileMode:@#$ENUM:VALUE_ZERO"
"FlushTimer:ULONG:60"
"EnableFlags:@#$ENUM:VALUE_ZERO"
"NumberOfBuffers:ULONG:0"
"FreeBuffers:ULONG:0"
"EventsLost:ULONG:0"
"BuffersWritten:ULONG:0"
"LogBuffersLost:ULONG:0"
"RealTimeBuffersLost:ULONG:0"
"AgeLimit:LONG:0"
"LoggerThreadId:HANDLE:0x00000000"
"LogFileName:TCHAR*:e:\EventTrace\Loggers\Test-1.1.1.1"
"LoggerName:TCHAR*:Test-1.1.1.1"
"_EVENT_TRACE_PROPERTIES Instance End"
GUIDS:
Validator:
Provider:e:\bvt\localbvt\tracedp.exe,e:\bvt\localbvt\tracedp.exe,e:\bvt\localbvt\tracedp.exe
Consumer:e:\bvt\localbvt\tracedmp.exe e:\EventTrace\Loggers\Test-1.1.1.1 -o test.csv
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\1-1-1-10-5.txt ===
1.1.1.10.5
If MinimumBuffers is equal zero replace with default value.
ERROR_SUCCESS
VALUE_VALID
Test-1.1.1.10.5
1
KERNEL_LOGGER
ENABLE:1	
ENABLEFLAG:0x0
ENABLELEVEL:0x0
"_EVENT_TRACE_PROPERTIES Instance Begin"
"Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}"
"Wnode.Flags:0"
"BufferSize:ULONG:4"
"MinimunBuffers:ULONG:0"
"MaximunBuffers:ULONG:10"
"MaximunFileSize:ULONG:4"
"LogFileMode:@#$ENUM:VALUE_ZERO"
"FlushTimer:ULONG:60"
"EnableFlags:@#$ENUM:VALUE_ZERO"
"NumberOfBuffers:ULONG:0"
"FreeBuffers:ULONG:0"
"EventsLost:ULONG:0"
"BuffersWritten:ULONG:0"
"LogBuffersLost:ULONG:0"
"RealTimeBuffersLost:ULONG:0"
"AgeLimit:LONG:0"
"LoggerThreadId:HANDLE:00000000"
"LogFileName:TCHAR*:e:\EventTrace\Loggers\Test-1.1.1.10.5"
"LoggerName:TCHAR*:Test-1.1.1.10.5"
"_EVENT_TRACE_PROPERTIES Instance End"
GUIDS:
Validator:VALIDATION_1.1.1.10.5
Provider:e:\bvt\localbvt\tracedp.exe
Consumer:
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\1-1-1-2.txt ===
1.1.1.2
If (parameter1 = VALID) then return ERROR_SUCCESS
ERROR_SUCCESS
VALUE_VALID
Test-1.1.1.2
1
KERNEL_LOGGER
ENABLE:1	
ENABLEFLAG:0x0
ENABLELEVEL:0x0
"_EVENT_TRACE_PROPERTIES Instance Begin"
"Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}"
"Wnode.Flags:0"
"BufferSize:ULONG:4"
"MinimunBuffers:ULONG:1"
"MaximunBuffers:ULONG:10"
"MaximunFileSize:ULONG:4"
"LogFileMode:@#$ENUM:VALUE_ZERO"
"FlushTimer:ULONG:60"
"EnableFlags:@#$ENUM:VALUE_ZERO"
"NumberOfBuffers:ULONG:0"
"FreeBuffers:ULONG:0"
"EventsLost:ULONG:0"
"BuffersWritten:ULONG:0"
"LogBuffersLost:ULONG:0"
"RealTimeBuffersLost:ULONG:0"
"AgeLimit:LONG:0"
"LoggerThreadId:HANDLE:0x00000000"
"LogFileName:TCHAR*:e:\EventTrace\Loggers\Test-1.1.1.2x"
"LoggerName:TCHAR*:Test-1.1.1.2"
"_EVENT_TRACE_PROPERTIES Instance End"
GUIDS:
Validator:
Provider:e:\bvt\localbvt\tracedp.exe,e:\bvt\localbvt\tracedp.exe,e:\bvt\localbvt\tracedp.exe
Consumer:e:\bvt\localbvt\tracedmp.exe e:\EventTrace\Loggers\Test-1.1.1.2x -o test.csv
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\1-1-1-3.txt ===
1.1.1.3
If (parameter2 = NULL) then return ERROR_INVALID_NAME
ERROR_INVALID_NAME
VALUE_VALID
@#$STRING_NULL
1
KERNEL_LOGGER
ENABLE:1	
ENABLEFLAG:0x0
ENABLELEVEL:0x0
"_EVENT_TRACE_PROPERTIES Instance Begin"
"Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}"
"Wnode.Flags:0"
"BufferSize:ULONG:4"
"MinimunBuffers:ULONG:1"
"MaximunBuffers:ULONG:10"
"MaximunFileSize:ULONG:4"
"LogFileMode:@#$ENUM:VALUE_ZERO"
"FlushTimer:ULONG:60"
"EnableFlags:@#$ENUM:VALUE_ZERO"
"NumberOfBuffers:ULONG:0"
"FreeBuffers:ULONG:0"
"EventsLost:ULONG:0"
"BuffersWritten:ULONG:0"
"LogBuffersLost:ULONG:0"
"RealTimeBuffersLost:ULONG:0"
"AgeLimit:LONG:0"
"LoggerThreadId:HANDLE:0x00000000"
"LogFileName:TCHAR*:e:\EventTrace\Loggers\Test-1.1.1.3"
"LoggerName:TCHAR*:"
"_EVENT_TRACE_PROPERTIES Instance End"
GUIDS:
Validator:
Provider:e:\bvt\localbvt\tracedp.exe,e:\bvt\localbvt\tracedp.exe,e:\bvt\localbvt\tracedp.exe
Consumer:e:\bvt\localbvt\tracedmp.exe e:\EventTrace\Loggers\Test-1.1.1.1 -o test.csv
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\1-1-1-4.txt ===
1.1.1.4
If (parameter2 = empty string) then return ERROR_INVALID_NAME
ERROR_INVALID_NAME
VALUE_VALID
@#$STRING_EMPTY
1
KERNEL_LOGGER
ENABLE:1	
ENABLEFLAG:0x0
ENABLELEVEL:0x0
"_EVENT_TRACE_PROPERTIES Instance Begin"
"Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}"
"Wnode.Flags:0"
"BufferSize:ULONG:4"
"MinimunBuffers:ULONG:1"
"MaximunBuffers:ULONG:10"
"MaximunFileSize:ULONG:4"
"LogFileMode:@#$ENUM:VALUE_ZERO"
"FlushTimer:ULONG:60"
"EnableFlags:@#$ENUM:VALUE_ZERO"
"NumberOfBuffers:ULONG:0"
"FreeBuffers:ULONG:0"
"EventsLost:ULONG:0"
"BuffersWritten:ULONG:0"
"LogBuffersLost:ULONG:0"
"RealTimeBuffersLost:ULONG:0"
"AgeLimit:LONG:0"
"LoggerThreadId:HANDLE:0x00000000"
"LogFileName:TCHAR*:e:\EventTrace\Loggers\Test-1.1.1.4"
"LoggerName:TCHAR*:"
"_EVENT_TRACE_PROPERTIES Instance End"
GUIDS:
Validator:
Provider:e:\bvt\localbvt\tracedp.exe,e:\bvt\localbvt\tracedp.exe,e:\bvt\localbvt\tracedp.exe
Consumer:e:\bvt\localbvt\tracedmp.exe e:\EventTrace\Loggers\Test-1.1.1.4 -o test.csv
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\1-1-1-6.txt ===
1.1.1.6
If (parameter2 = invalid valid string) then return ERROR_INVALID_PARAMETER
ERROR_INVALID_PARAMETER
VALUE_VALID
Test-1.1=.1.6
1
KERNEL_LOGGER
ENABLE:1	
ENABLEFLAG:0x0
ENABLELEVEL:0x0
"_EVENT_TRACE_PROPERTIES Instance Begin"
"Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}"
"Wnode.Flags:0"
"BufferSize:ULONG:4"
"MinimunBuffers:ULONG:1"
"MaximunBuffers:ULONG:10"
"MaximunFileSize:ULONG:4"
"LogFileMode:@#$ENUM:VALUE_ZERO"
"FlushTimer:ULONG:60"
"EnableFlags:@#$ENUM:VALUE_ZERO"
"NumberOfBuffers:ULONG:0"
"FreeBuffers:ULONG:0"
"EventsLost:ULONG:0"
"BuffersWritten:ULONG:0"
"LogBuffersLost:ULONG:0"
"RealTimeBuffersLost:ULONG:0"
"AgeLimit:LONG:0"
"LoggerThreadId:HANDLE:0x00000000"
"LogFileName:TCHAR*:e:\EventTrace\Loggers\Test-1.1.1.6"
"LoggerName:TCHAR*:Test-1.1=.1.6"
"_EVENT_TRACE_PROPERTIES Instance End"
GUIDS:
Validator:
Provider:e:\bvt\localbvt\tracedp.exe,e:\bvt\localbvt\tracedp.exe,e:\bvt\localbvt\tracedp.exe
Consumer:e:\bvt\localbvt\tracedmp.exe e:\EventTrace\Loggers\Test-1.1.1.6 -o test.csv
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\1-2-1-1.txt ===
1.2.1.1
If (parameter1 = NULL) and (parameter2 = valid instance name) then return ERROR_SUCCESS
ERROR_SUCCESS
VALUE_VALID
Test-1.2.1.1
2
KERNEL_LOGGER
ENABLE:1	
ENABLEFLAG:0x0
ENABLELEVEL:0x0
"_EVENT_TRACE_PROPERTIES Instance Begin"
"Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}"
"Wnode.Flags:0"
"BufferSize:ULONG:4"
"MinimunBuffers:ULONG:1"
"MaximunBuffers:ULONG:10"
"MaximunFileSize:ULONG:4"
"LogFileMode:@#$ENUM:VALUE_ZERO"
"FlushTimer:ULONG:60"
"EnableFlags:@#$ENUM:VALUE_ZERO"
"NumberOfBuffers:ULONG:0"
"FreeBuffers:ULONG:0"
"EventsLost:ULONG:0"
"BuffersWritten:ULONG:0"
"LogBuffersLost:ULONG:0"
"RealTimeBuffersLost:ULONG:0"
"AgeLimit:LONG:0"
"LoggerThreadId:HANDLE:0x00000000"
"LogFileName:TCHAR*:e:\EventTrace\Loggers\Test-1.2.1.1"
"LoggerName:TCHAR*:Test-1.2.1.1"
"_EVENT_TRACE_PROPERTIES Instance End"
GUIDS:
Validator:
Provider:e:\bvt\localbvt\tracedp.exe,e:\bvt\localbvt\tracedp.exe,e:\bvt\localbvt\tracedp.exe
Consumer:e:\bvt\localbvt\tracedmp.exe e:\EventTrace\Loggers\Test-1.1.1.2 -o test.csv
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\1-2-1-3.txt ===
1.2.1.3
If (parameter1 = valid instance handle) and (parameter2 = null) then return ERROR_SUCCESS
ERROR_SUCCESS
VALUE_VALID
Test-1.2.1.3
2
KERNEL_LOGGER
ENABLE:1	
ENABLEFLAG:0x0
ENABLELEVEL:0x0
"_EVENT_TRACE_PROPERTIES Instance Begin"
"Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}"
"Wnode.Flags:0"
"BufferSize:ULONG:4"
"MinimunBuffers:ULONG:1"
"MaximunBuffers:ULONG:10"
"MaximunFileSize:ULONG:4"
"LogFileMode:@#$ENUM:VALUE_ZERO"
"FlushTimer:ULONG:60"
"EnableFlags:@#$ENUM:VALUE_ZERO"
"NumberOfBuffers:ULONG:0"
"FreeBuffers:ULONG:0"
"EventsLost:ULONG:0"
"BuffersWritten:ULONG:0"
"LogBuffersLost:ULONG:0"
"RealTimeBuffersLost:ULONG:0"
"AgeLimit:LONG:0"
"LoggerThreadId:HANDLE:0x00000000"
"LogFileName:TCHAR*:e:\EventTrace\Loggers\Test-1.2.1.3"
"LoggerName:TCHAR*:Test-1.2.1.1"
"_EVENT_TRACE_PROPERTIES Instance End"
GUIDS:
Validator:
Provider:
Consumer:
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\1-1-1-5.txt ===
1.1.1.5
If (parameter2 = valid string) then return ERROR_SUCCESS
ERROR_SUCCESS
VALUE_VALID
Test-1.1.1.5
1
KERNEL_LOGGER
ENABLE:1	
ENABLEFLAG:0x0
ENABLELEVEL:0x0
"_EVENT_TRACE_PROPERTIES Instance Begin"
"Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}"
"Wnode.Flags:0"
"BufferSize:ULONG:4"
"MinimunBuffers:ULONG:1"
"MaximunBuffers:ULONG:10"
"MaximunFileSize:ULONG:4"
"LogFileMode:@#$ENUM:VALUE_ZERO"
"FlushTimer:ULONG:60"
"EnableFlags:@#$ENUM:VALUE_ZERO"
"NumberOfBuffers:ULONG:0"
"FreeBuffers:ULONG:0"
"EventsLost:ULONG:0"
"BuffersWritten:ULONG:0"
"LogBuffersLost:ULONG:0"
"RealTimeBuffersLost:ULONG:0"
"AgeLimit:LONG:0"
"LoggerThreadId:HANDLE:0x00000000"
"LogFileName:TCHAR*:e:\EventTrace\Loggers\Test-1.1.1.5"
"LoggerName:TCHAR*:Test-1.1.1.5"
"_EVENT_TRACE_PROPERTIES Instance End"
GUIDS:
Validator:
Provider:e:\bvt\localbvt\tracedp.exe,e:\bvt\localbvt\tracedp.exe,e:\bvt\localbvt\tracedp.exe
Consumer:e:\bvt\localbvt\tracedmp.exe e:\EventTrace\Loggers\Test-1.1.1.5 -o test.csv
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\1-1-1-8.txt ===
1.1.1.8
If (parameter3 = NULL) then return ERROR_BAD_LENGTH
ERROR_BAD_LENGTH
VALUE_VALID
Test-1.1.1.8
1
KERNEL_LOGGER
ENABLE:1	
ENABLEFLAG:0x0
ENABLELEVEL:0x0
"_EVENT_TRACE_PROPERTIES Instance NULL"
GUIDS:
Validator:
Provider:e:\bvt\localbvt\tracedp.exe
Consumer:
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\command.txt ===
D:\winnt\system32\wbem//Mof ImagePath
MofResource//Mof ResourceName
//NULL//CallBackFunction Optional
//NULL//TraceGuidReg Optional
//NULL//RegistrationHandle Optional
//NULL0000//GuidCount Optional
NULL//UnRegisterTraceGuid Optional
//NULL//GetTraceLoggerHandle Optional
//NULL//GetTraceEnableLevel Optional
//NULL//GetTraceEnableFlag Optional
//NULL//UnRegisterTraceGuidHandle Optional
USE_GUID_PTR//UseGuidPtr Optional
USE_MOF_PTR//UseMofPtr Optional
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\1-5-1-2start.txt ===
1.5.1.2
If (parameter1 = null) and (parameter2 = valid and existing logger name) then return ERROR_SUCCESS
ERROR_SUCCESS
VALUE_NULL
Test-1.5.1.2
5
KERNEL_LOGGER
ENABLE:1	
ENABLEFLAG:0x0
ENABLELEVEL:0x0
"_EVENT_TRACE_PROPERTIES Instance Begin"
"Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}"
"Wnode.Flags:0"
"BufferSize:ULONG:4"
"MinimunBuffers:ULONG:1"
"MaximunBuffers:ULONG:10"
"MaximunFileSize:ULONG:4"
"LogFileMode:@#$ENUM:VALUE_ZERO"
"FlushTimer:ULONG:60"
"EnableFlags:@#$ENUM:VALUE_ZERO"
"NumberOfBuffers:ULONG:0"
"FreeBuffers:ULONG:0"
"EventsLost:ULONG:0"
"BuffersWritten:ULONG:0"
"LogBuffersLost:ULONG:0"
"RealTimeBuffersLost:ULONG:0"
"AgeLimit:LONG:0"
"LoggerThreadId:HANDLE:0x00000000"
"LogFileName:TCHAR*:e:\EventTrace\Loggers\Test-1.5.1.2"
"LoggerName:TCHAR*:Test-1.5.1.2"
"_EVENT_TRACE_PROPERTIES Instance End"
GUIDS:
Validator:
Provider:e:\bvt\localbvt\tracedp.exe
Consumer:
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\1-4-1-2.txt ===
1.4.1.2
If (parameter1 = null) and (parameter2 = valid and existing logger name) then return ERROR_SUCCESS
ERROR_SUCCESS
VALUE_VALID
Test-1.4.1.2
4
KERNEL_LOGGER
ENABLE:1	
ENABLEFLAG:0x0
ENABLELEVEL:0x0
"_EVENT_TRACE_PROPERTIES Instance Begin"
"Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}"
"Wnode.Flags:0"
"BufferSize:ULONG:4"
"MinimunBuffers:ULONG:1"
"MaximunBuffers:ULONG:10"
"MaximunFileSize:ULONG:4"
"LogFileMode:@#$ENUM:VALUE_ZERO"
"FlushTimer:ULONG:60"
"EnableFlags:@#$ENUM:VALUE_ZERO"
"NumberOfBuffers:ULONG:0"
"FreeBuffers:ULONG:0"
"EventsLost:ULONG:0"
"BuffersWritten:ULONG:0"
"LogBuffersLost:ULONG:0"
"RealTimeBuffersLost:ULONG:0"
"AgeLimit:LONG:0"
"LoggerThreadId:HANDLE:0x00000000"
"LogFileName:TCHAR*:e:\EventTrace\Loggers\Test-1.4.1.2"
"LoggerName:TCHAR*:Test-1.4.1.2"
"_EVENT_TRACE_PROPERTIES Instance End"
GUIDS:
Validator:
Provider:e:\bvt\localbvt\tracedp.exe
Consumer:
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\1-5-1-2.txt ===
1.5.1.2
If (parameter1 = null) and (parameter2 = valid and existing logger name) then return ERROR_SUCCESS
ERROR_SUCCESS
VALUE_VALID
Test-1.5.1.2
5
KERNEL_LOGGER
ENABLE:1	
ENABLEFLAG:0x0
ENABLELEVEL:0x0
"_EVENT_TRACE_PROPERTIES Instance Begin"
"Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}"
"Wnode.Flags:0"
"BufferSize:ULONG:4"
"MinimunBuffers:ULONG:1"
"MaximunBuffers:ULONG:10"
"MaximunFileSize:ULONG:4"
"LogFileMode:@#$ENUM:VALUE_ZERO"
"FlushTimer:ULONG:60"
"EnableFlags:@#$ENUM:VALUE_ZERO"
"NumberOfBuffers:ULONG:0"
"FreeBuffers:ULONG:0"
"EventsLost:ULONG:0"
"BuffersWritten:ULONG:0"
"LogBuffersLost:ULONG:0"
"RealTimeBuffersLost:ULONG:0"
"AgeLimit:LONG:0"
"LoggerThreadId:HANDLE:0x00000000"
"LogFileName:TCHAR*:e:\EventTrace\Loggers\Test-1.5.1.2"
"LoggerName:TCHAR*:Test-1.5.1.2"
"_EVENT_TRACE_PROPERTIES Instance End"
GUIDS:
Validator:
Provider:e:\bvt\localbvt\tracedp.exe
Consumer:
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\1-5-1-2update.txt ===
1.5.1.2
If (parameter1 = null) and (parameter2 = valid and existing logger name) then return ERROR_SUCCESS
ERROR_SUCCESS
VALUE_NULL
Test-1.5.1.2
5
KERNEL_LOGGER
ENABLE:1	
ENABLEFLAG:0x0
ENABLELEVEL:0x0
"_EVENT_TRACE_PROPERTIES Instance Begin"
"Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}"
"Wnode.Flags:0"
"BufferSize:ULONG:2"
"MinimunBuffers:ULONG:10"
"MaximunBuffers:ULONG:12"
"MaximunFileSize:ULONG:6"
"LogFileMode:@#$ENUM:VALUE_ZERO"
"FlushTimer:ULONG:90"
"EnableFlags:@#$ENUM:VALUE_ZERO"
"NumberOfBuffers:ULONG:0"
"FreeBuffers:ULONG:0"
"EventsLost:ULONG:0"
"BuffersWritten:ULONG:0"
"LogBuffersLost:ULONG:0"
"RealTimeBuffersLost:ULONG:0"
"AgeLimit:LONG:0"
"LoggerThreadId:HANDLE:0x00000000"
"LogFileName:TCHAR*:"
"LoggerName:TCHAR*:"
"_EVENT_TRACE_PROPERTIES Instance End"
GUIDS:
Validator:
Provider:e:\bvt\localbvt\tracedp.exe
Consumer:
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\1-3-1-2.txt ===
1.3.1.2
If (parameter1 = true) then return ERROR_SUCCESS
ERROR_SUCCESS
VALUE_VALID
Test-1.3.1.2
3
KERNEL_LOGGER
ENABLE:1	
ENABLEFLAG:0x0
ENABLELEVEL:0x0
"_EVENT_TRACE_PROPERTIES Instance Begin"
"Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}"
"Wnode.Flags:0"
"BufferSize:ULONG:4"
"MinimunBuffers:ULONG:1"
"MaximunBuffers:ULONG:10"
"MaximunFileSize:ULONG:4"
"LogFileMode:@#$ENUM:VALUE_ZERO"
"FlushTimer:ULONG:60"
"EnableFlags:@#$ENUM:VALUE_ZERO"
"NumberOfBuffers:ULONG:0"
"FreeBuffers:ULONG:0"
"EventsLost:ULONG:0"
"BuffersWritten:ULONG:0"
"LogBuffersLost:ULONG:0"
"RealTimeBuffersLost:ULONG:0"
"AgeLimit:LONG:0"
"LoggerThreadId:HANDLE:0x00000000"
"LogFileName:TCHAR*:e:\EventTrace\Loggers\Test-1.3.1.2"
"LoggerName:TCHAR*:Test-1.3.1.2"
"_EVENT_TRACE_PROPERTIES Instance End"
GUIDS:
Validator:
Provider:e:\bvt\localbvt\tracedp.exe
Consumer:
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\1-5-1-3.txt ===
1.5.1.3
If (parameter1 = valid existing treace handle) and (parameter2 = null) then return ERROR_SUCCESS
ERROR_SUCCESS
VALUE_VALID
Test-1.5.1.3
5
KERNEL_LOGGER
ENABLE:1	
ENABLEFLAG:0x0
ENABLELEVEL:0x0
"_EVENT_TRACE_PROPERTIES Instance Begin"
"Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}"
"Wnode.Flags:0"
"BufferSize:ULONG:4"
"MinimunBuffers:ULONG:1"
"MaximunBuffers:ULONG:10"
"MaximunFileSize:ULONG:4"
"LogFileMode:@#$ENUM:VALUE_ZERO"
"FlushTimer:ULONG:60"
"EnableFlags:@#$ENUM:VALUE_ZERO"
"NumberOfBuffers:ULONG:0"
"FreeBuffers:ULONG:0"
"EventsLost:ULONG:0"
"BuffersWritten:ULONG:0"
"LogBuffersLost:ULONG:0"
"RealTimeBuffersLost:ULONG:0"
"AgeLimit:LONG:0"
"LoggerThreadId:HANDLE:0x00000000"
"LogFileName:TCHAR*:e:\EventTrace\Loggers\Test-1.5.1.3"
"LoggerName:TCHAR*:VALUE_NULL"
"_EVENT_TRACE_PROPERTIES Instance End"
GUIDS:
Validator:
Provider:e:\bvt\localbvt\tracedp.exe
Consumer:
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\scenario.txt ===
Scenario14
Scenario with one provider and one consumer
ERROR_SUCCESS
VALUE_VALID
Scenario14
0
KERNEL_LOGGER
ENABLE:1	
ENABLEFLAG:0x0
ENABLELEVEL:0x0
"_EVENT_TRACE_PROPERTIES Instance Begin"
"Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}"
"Wnode.Flags:0"
"BufferSize:ULONG:4"
"MinimunBuffers:ULONG:1"
"MaximunBuffers:ULONG:10"
"MaximunFileSize:ULONG:4"
"LogFileMode:@#$ENUM:VALUE_ZERO"
"FlushTimer:ULONG:60"
"EnableFlags:@#$ENUM:VALUE_ZERO"
"NumberOfBuffers:ULONG:0"
"FreeBuffers:ULONG:0"
"EventsLost:ULONG:0"
"BuffersWritten:ULONG:0"
"LogBuffersLost:ULONG:0"
"RealTimeBuffersLost:ULONG:0"
"AgeLimit:LONG:0"
"LoggerThreadId:HANDLE:0x00000000"
"LogFileName:TCHAR*:e:\EventTrace\Loggers\Scenario14"
"LoggerName:TCHAR*:Scenario14"
"_EVENT_TRACE_PROPERTIES Instance End"
GUIDS:
Validator:
Provider:e:\bvt\localbvt\tracedp.exe
Consumer:e:\bvt\localbvt\tracedmp.exe e:\EventTrace\Loggers\Scenario14 -o test.csv
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wmi\tests\umtrprov\datafiles\1-5-1-3update.txt ===
1.5.1.3
If (parameter1 = valid existing treace handle) and (parameter2 = null) then return ERROR_SUCCESS
ERROR_SUCCESS
VALUE_VALID
Test-1.5.1.3
5
KERNEL_LOGGER
ENABLE:1	
ENABLEFLAG:0x0
ENABLELEVEL:0x0
"_EVENT_TRACE_PROPERTIES Instance Begin"
"Wnode.Guid:GUID:{d58c126f-b309-11d1-969e-0000f875a5bc}"
"Wnode.Flags:0"
"BufferSize:ULONG:2"
"MinimunBuffers:ULONG:10"
"MaximunBuffers:ULONG:12"
"MaximunFileSize:ULONG:6"
"LogFileMode:@#$ENUM:VALUE_ZERO"
"FlushTimer:ULONG:90"
"EnableFlags:@#$ENUM:VALUE_ZERO"
"NumberOfBuffers:ULONG:0"
"FreeBuffers:ULONG:0"
"EventsLost:ULONG:0"
"BuffersWritten:ULONG:0"
"LogBuffersLost:ULONG:0"
"RealTimeBuffersLost:ULONG:0"
"AgeLimit:LONG:0"
"LoggerThreadId:HANDLE:0x00000000"
"LogFileName:TCHAR*:"
"LoggerName:TCHAR*:VALUD_NULL"
"_EVENT_TRACE_PROPERTIES Instance End"
GUIDS:
Validator:
Provider:e:\bvt\localbvt\tracedp.exe
Consumer:
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wow64\mscpu\math\readme.txt ===
This library implement some function to support some floating 
point operation wow64cpu might call. Codes has been cloned from
\NT\private\sdktools\vctools\crt\fpw32\tran and modified some stuff 
to remove some dependency on other RTL functions. 

Implemented functions are:

1. double modf( double x, double *intptr ) 
2. double _logb( double x )
3. double _scalb( double x, long exp )
4. double ldexp( double x, int exp )
5. double Proxylog10( double x )
6. double Proxyatan2( double y, double x )

and some other helpful miscellaneous ieee floating point functions 
like _frnd(double x), _logb(double x) etc.


This library is almost self consistent set of functions anybody can use. They just 
need to implement following two functions.

1. VOID SetMathError ( int Code ) - math library will call this function 
with math error code caller light be interested if math operation failed.
2. VOID ProxyRaiseException(
    IN DWORD dwExceptionCode,
    IN DWORD dwExceptionFlags,
    IN DWORD nNumberOfArguments,
    IN CONST ULONG_PTR *lpArguments
    )
    Math function call this function if some exception happen during floating 
    point operation like ieee floating point exception.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wow64\setup\readme.txt ===
NOTES
-----

The sources in 'boot', 'inc', and 'intl' were cloned from
\\united\acme3.0\Testing\TESTSRC\src\1918.
Also of interest are the older sources at \\conman\source.

See DavidMck for access to these shares.


The binaries in InstallShield came from InstallShield and are
special-built for WOW64.  The isetu????.dll files are installed
to syswow64\InstallShield\????\_Setup.dll.  _isdel.exe and _Setup.dll are
installed to syswow64\InstallShield.

Installation
------------

To install the thunk on the 64-bit system, copy the resulting
setup16.exe to %windir%\syswow64\setup16.exe.

Then on your 64-bit installation run:

regini setup64.ini

Or after preparing your 64-bit installation from 32-bits run:

regini -h \winnt64\system32\config\software software setup16.ini
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wow64\setup\setup16.ini ===
Software\Microsoft\Windows NT\CurrentVersion\NtVdm64
        ACMSETUP301
            CommandLine = -m "%m" %c
            ExeName = setup.exe
            ProductName = Microsoft Setup for Windows
            ProductVersion = 3.01
            MappedExeName = %windir%\syswow64\setup16.exe
        ACMSETUP30
            CommandLine = -m "%m" %c
            ExeName = setup.exe
            ProductName = Microsoft Setup for Windows
            ProductVersion = 3.0
            MappedExeName = %windir%\syswow64\setup16.exe
        ACMSETUP26
            CommandLine = -m "%m" %c
            ExeName = setup.exe
            ProductName = Microsoft Setup for Windows
            ProductVersion = 2.6
            MappedExeName = %windir%\syswow64\setup16.exe
        ACMSETUP12
            CommandLine = -m "%m" %c
            ExeName = setup.exe
            ProductName = Microsoft Setup for Windows
            ProductVersion = 1.2
            MappedExeName = %windir%\syswow64\setup16.exe
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wow64\setup\setup64.ini ===
HKEY_LOCAL_MACHINE
    Software\Microsoft\Windows NT\CurrentVersion\NtVdm64
        ACMSETUP301
            CommandLine = -m "%m" %c
            ExeName = setup.exe
            ProductName = Microsoft Setup for Windows
            ProductVersion = 3.01
            MappedExeName = %windir%\syswow64\setup16.exe
        ACMSETUP30
            CommandLine = -m "%m" %c
            ExeName = setup.exe
            ProductName = Microsoft Setup for Windows
            ProductVersion = 3.0
            MappedExeName = %windir%\syswow64\setup16.exe
        ACMSETUP26
            CommandLine = -m "%m" %c
            ExeName = setup.exe
            ProductName = Microsoft Setup for Windows
            ProductVersion = 2.6
            MappedExeName = %windir%\syswow64\setup16.exe
        ACMSETUP12
            CommandLine = -m "%m" %c
            ExeName = setup.exe
            ProductName = Microsoft Setup for Windows
            ProductVersion = 1.2
            MappedExeName = %windir%\syswow64\setup16.exe
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wow64\tests\apc\readme.txt ===
crash.exe:  Test WOW64 exception handling by faulting and handling the
            exception.

Build as 32-bit and run in wow64.  It should throw an AV and handle it
gracefully.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wow64\tests\crash\readme.txt ===
crash.exe:  Test WOW64 exception handling by faulting and handling the
            exception.

Build as 32-bit and run in wow64.  It should throw an AV and handle it
gracefully.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wow64\tests\generic\generic.err ===
Microsoft (R) Help Compiler
HCRTF 4.01.0951
Copyright (c) Microsoft Corp 1990 - 1995. All rights reserved.
generic.hpj
7	Topics
5	Jumps
6	Keywords
2	Bitmaps


File size: 15,269
Compile time: 0 minutes, 0 seconds
0 notes, 0 warnings
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wow64\tests\generic\readme.txt ===
Generic Win32-based Application


The GENERIC sample is a generic Win32-based application with a menu and an
About box, but without any real functionality. The sample demonstrates the
basic steps that are used to create the application.

The files included in this sample are:

GENERIC.C - The .C source file
GENERIC.H - The .H file for the sample
RESOURCE.H - The .H file created by VC++ 2.0
GENERIC.DEF - The definition file
GENERIC.RC - Contains resource information such as menus and dialog boxes
GENERIC.HPJ - The Help file source
GENERIC.CNT - The contents list for the Help file
GENERIC.RTF -  A rich text format file used for Help
GENERIC.MAK - A Microsoft Visual C++ 2.0 make file
MAKEFILE - A command line make file
MAKEHELP.BAT - A batch file that makes the Help file
GENERIC.ICO - The icon for the GENERIC sample
SMALL.ICO - The small-icon for the GENERIC sample
GENERIC.BMP - A bitmap for the GENERIC sample
HELP.BMP - A bitmap for the Help file
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\wow64\tests\generic\generic.rtf ===
{\rtf1 {\comment ************************************************************ * This is a simple RTF help file. It was constructed with a regular * text editor, and using normal RTF syntax to define the various * things that the Help Compiler knows how to interpret, and turn into * a proper WinHelp file. * Where necessary and appropriate, there will be comments like this * one to assist you in understanding what this help file is doing. ********************************************************************** {\comment ************************************************************ * Before we do anything else, we need to define the font table that we * will be using, I will then set the default font to '0' (Arial) * and the font size to 16 ********************************************************************** {\fonttbl \f0\fswiss Arial; \f1\froman Times New Roman; \f2\fmodern Courier New; \f3\fswiss MS Sans Serif; \f4\froman MS Serif; \deff0 \fs18 {\comment ************************************************************ * Now lets get started. Here is the first topic of this help file. It * is normal for this to be the CONTENTS page. ********************************************************************** {\comment ************************************************************ *         CONTENTS ********************************************************************** \keepn {\comment ************************************************************ * The WinHelp compiler turns 'footnotes' into the special index tags * used to organize the popups and jumps throughout your help file. ********************************************************************** {\comment ************************************************************ * WinHelp used 'footnotes' to keep track of various aspects about a * particular help page. The three most common footnote types are * "#", "$", and "K". * -------------------------------------------------------------------- * # Specifies a context string. The text parameter can be any *   combination of letters and digits but must not contain spaces. *   Uppercase and lowercase characters are treated as equivalent *   characters (case-insensitive). The context string can be used *   with the \v statement in other topics to create links to this *   topic. (I'll talk about this later). The Context string should be *   unique to this help file, and is never actually seen by the user. * -------------------------------------------------------------------- * $ Specifies a topic title. Windows Help uses the topic title to *   identify the topic in the Search and History dialog boxes. The *   text parameter can be any combination of characters including *   spaces.  * -------------------------------------------------------------------- * K Specifies a keyword. Windows Help displays all keywords in the *   Help file in the Search dialog box and allows a user to choose *   a topic to view by choosing a keyword. The text parameter can be *   any combination of characters including spaces. If the first *   character is the letter K, it must be preceded with an extra *   space or a semicolon. More than one keyword can be given by *   separating the keywords with semicolons (;). A topic cannot *   contain keywords unless it also has a topic title.  ********************************************************************** #{\footnote CONTENTS} ${\footnote Contents} K{\footnote Contents} \{bmc generic.bmp\} {\comment : Here we include the bitmap image} \fs32 GENERIC: A Windows Application \pard \sb150 GENERIC is a sample application to illustrate the 'minimum' functionality  that should be expected of a well behaved Win32 application. Other  then that, this application has virtually no actual functionality of  its own. This makes it easier for you to use this as a starting point  for your own application development, or investigation of the Win32  API.\par You are now looking at the \"WinHelp\" file for Generic. It illustrates  a few of the aspects of a simple Help file for an application. This is the Contents page of the help file, and should give a very quick  overview of the application, as well as provide a useful outline of  the contents of this file so the user can easily navigate through the  information it contains. \{bmc help.bmp\} {\comment ************************************************************ * Hot Spots: * Here is where we actually end up using the 'Context String' data * that we specify in footnotes. There are two important parts of * this. First, is the 'label' for the footnote, which is followed * by the 'destination'. The 'label' must have some sort of underline * style associated with it. A double underline (as used here) means * that this is a 'jump' hotspot, which means WinHelp will jump to * the help topic indicated by the destination. A single underline * would cause a 'popup' hotspot, which means a popup window is * brought up temporarily with the help topic data. The 'destination' * must immediately follow the 'label', and uses the \v attribute * which would normally make the text 'invisible' or 'hidden' So * in the first example below, the user would see 'Introduction' on * their help page, and when they click on it, it jumps to the * topic with a '#' footnote label of 'INTRODUCTION'. To create * popup hotspots instead of \uldb, use \ul or \strike. ********************************************************************** \tab{\uldb Introduction{\v INTRODUCTION}}\par \tab{\uldb First Application Topic{\v FIRST_TOPIC}}\par \tab{\uldb Second Application Topic{\v SECOND_TOPIC}}\par \tab{\uldb Third Application Topic{\v THIRD_TOPIC}}\par \tab{\uldb Fourth Application Topic{\v FOURTH_TOPIC}}\par \pard \page {\comment ************************************************************ *         INTRODUCTION ********************************************************************** \keepn #{\footnote INTRODUCTION} ${\footnote Introduction} K{\footnote Introduction} \{bmc generic.bmp\} {\comment : Here we include the bitmap image} \fs32 GENERIC: A Windows Application \par\pard \sb100 Generic is intended as an application that essentially has no  functionality, other then that which should be expected from {\i any}  Windows application. As such, it should be considered an illustration  of the {\i minimum} functionality that your application should contain. \pard \page {\comment ************************************************************ *         BRIEFINTRO ********************************************************************** \keepn #{\footnote BRIEFINTRO} This is an extremely minimal application that illustrates features  that should be common to all Windows Applications. \pard \page {\comment ************************************************************ *         First Topic ********************************************************************** \keepn #{\footnote FIRST_TOPIC} ${\footnote Topics} K{\footnote Topics: First} {\fs24\b First Application Topic} \par\pard \sb100 [Text to be included at a later time] \pard \page {\comment ************************************************************ *         Second Topic ********************************************************************** \keepn #{\footnote SECOND_TOPIC} ${\footnote Topics} K{\footnote Topics: Second} {\fs24\b Second Application Topic} \par\pard \sb100 [Text to be included at a later time] \pard \page {\comment ************************************************************ *         Third Topic ********************************************************************** \keepn #{\footnote THIRD_TOPIC} ${\footnote Topics} K{\footnote Topics: Third} {\fs24\b Third Application Topic} \par\pard \sb100 [Text to be included at a later time] \pard \page {\comment ************************************************************ *         Fourth Topic ********************************************************************** \keepn #{\footnote FOURTH_TOPIC} ${\footnote Topics} K{\footnote Topics: Fourth} {\fs24\b Fourth Application Topic} \par\pard \sb100 [Text to be included at a later time] \pard \page {\comment *** End of RTF File *** }
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\xip\doc\xipimplementationnotes.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Internal Title _PID_HLINKSDave Probert Normal Dave Probert Microsoft Word 9.0RJFAtJbjbjU XIP Implementation notes DavePr   2000/10/14-17:00 ISSUES: Because of how XIPDisk registers itself, there is a pop-up announcing new hardware (just dismiss it). There is a limit on how long the boot.ini options can be, which will cause NTLDR to silently fail (black screen).  If you hit this (I did with all my explicit debugger setting, /fastdetect, all the XIP options, and specifying both a kernel and a hal). Other Notes: Turning on the verifier (on fastfat, mountmgr, partmgr, xipdisk) didn t find any problems. Format doesn t work.  You have to put a 32MB fat file system image on your system disk (e.g. copy   HYPERLINK "\\\\davepr\\public\\XIP-FATIMAGE\\xiptest32 \\"  \\davepr\public\XIP-FATIMAGE\xiptest32 \ XIP boot.ini flags: /xipmegs=32  specify number of megabytes to reserve for XIP /xipverbose  turns on some debug output /xipboot  the XIP rom is the boot/system partition (coming soon). /xipram=\xiptest32 /xiprom=\xiptest32  says to read in \xiptest32 into the allocated memory and (if xiprom) treat memory as readonly (e.g. in xipdisk.sys).  So, for example, I have a boot.ini line: .\WINXIP= XIP boot  /xipram=\xiptest32 /xipmegs=32 /xipverbose / Code Changes (base change #12596): NTLDR Published\arc.w   added new memory type (LoaderXIPRom) for use by NTLDR in identifying ROM memory to ntos. Base\boot\bldr\sources.inc   add fastfat to include path to get fat.h Base\boot\lib\blmemory.c   add processing for LoaderXIPRom to allocate high LoaderFirmwareTemporary Base\boot\bldr\osloader.c  Added definitions for unpacking Bios Parameter Bock Added routine to read a file into physical memory by mapping a 4MB windows (x86 only). Process boot.ini /XIP* options and allocate memory as requested.  I handle both upper and lower case like NOPAE does   but I think they are upcased somewhere so this is unnecessary. Use the new routine to read in the fat file system image file to the allocated memory. Base\boot\lib\i386\wakea.asm   add FLUSH_TB and ENABLE_PSE assembly routines (I didn t know how to make .586 work for the latter, so I didn t put these inline in the C-code). XIPDisk.sys Base\xip\xipdisk   the ROM disk driver (.c, .h, .rc, .ini, makefile, sources) Builds on x86 only Binplaces in dump regini xipdisk.ini will set keys in registry to load the driver Base\ntos\inc\io.h   added DO_XIP device object flag Base\ntos\inc\cpyuchr.h   added file with unpacking definitions used with the BIOS Parameter Block (needed by routines that now include fs\fastfat\fat.h) Base\ntos\inc\xip.h   added kernel XIP definitions for capturing boot parameter information and communicating between the driver and the kernel. Base\ntos\init\i386def.src   Defined XIPDispatch() entry point so XIPDisk.h can pick-up the boot parameter information about which pages were allocated to XIP by NTLDR. Base\ntos\init\init.c   add call to XIPInit() for x86. Base\ntos\ex\xipdisp.c  XIPInit() processes boot parameters, finds LoaderXIPRom, validates FAT BIOS Parameter Block, and enables XIP. XIPDispatch() for communicating with XIPDisk.sys XIPLocate(fileobject, &base) returns the pages corresponding to contiguous files (wraps FSRTL_GET_RETRIEVAL_POINTERS call) Base\ntos\mm\mi.h   Include xip.h on x86 to get definition of XIPLocate and XIPConfigured. Base\ntos\mm\creasect.c   Added demo code for calling XIPLocate().
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\xip\xipdisk\xipdisk.ini ===
\Registry\Machine\System\CurrentControlSet\Services\XIPDisk
    Type = REG_DWORD 0x00000001
    Start = REG_DWORD 0x00000001
    ErrorControl = REG_DWORD 0x00000000
    Group = Primary disk
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\zlib\algorithm.txt ===
1. Compression algorithm (deflate)

The deflation algorithm used by gzip (also zip and zlib) is a variation of
LZ77 (Lempel-Ziv 1977, see reference below). It finds duplicated strings in
the input data.  The second occurrence of a string is replaced by a
pointer to the previous string, in the form of a pair (distance,
length).  Distances are limited to 32K bytes, and lengths are limited
to 258 bytes. When a string does not occur anywhere in the previous
32K bytes, it is emitted as a sequence of literal bytes.  (In this
description, `string' must be taken as an arbitrary sequence of bytes,
and is not restricted to printable characters.)

Literals or match lengths are compressed with one Huffman tree, and
match distances are compressed with another tree. The trees are stored
in a compact form at the start of each block. The blocks can have any
size (except that the compressed data for one block must fit in
available memory). A block is terminated when deflate() determines that
it would be useful to start another block with fresh trees. (This is
somewhat similar to the behavior of LZW-based _compress_.)

Duplicated strings are found using a hash table. All input strings of
length 3 are inserted in the hash table. A hash index is computed for
the next 3 bytes. If the hash chain for this index is not empty, all
strings in the chain are compared with the current input string, and
the longest match is selected.

The hash chains are searched starting with the most recent strings, to
favor small distances and thus take advantage of the Huffman encoding.
The hash chains are singly linked. There are no deletions from the
hash chains, the algorithm simply discards matches that are too old.

To avoid a worst-case situation, very long hash chains are arbitrarily
truncated at a certain length, determined by a runtime option (level
parameter of deflateInit). So deflate() does not always find the longest
possible match but generally finds a match which is long enough.

deflate() also defers the selection of matches with a lazy evaluation
mechanism. After a match of length N has been found, deflate() searches for
a longer match at the next input byte. If a longer match is found, the
previous match is truncated to a length of one (thus producing a single
literal byte) and the process of lazy evaluation begins again. Otherwise,
the original match is kept, and the next match search is attempted only N
steps later.

The lazy match evaluation is also subject to a runtime parameter. If
the current match is long enough, deflate() reduces the search for a longer
match, thus speeding up the whole process. If compression ratio is more
important than speed, deflate() attempts a complete second search even if
the first match is already long enough.

The lazy match evaluation is not performed for the fastest compression
modes (level parameter 1 to 3). For these fast modes, new strings
are inserted in the hash table only when no match was found, or
when the match is not too long. This degrades the compression ratio
but saves time since there are both fewer insertions and fewer searches.


2. Decompression algorithm (inflate)

2.1 Introduction

The real question is, given a Huffman tree, how to decode fast.  The most
important realization is that shorter codes are much more common than
longer codes, so pay attention to decoding the short codes fast, and let
the long codes take longer to decode.

inflate() sets up a first level table that covers some number of bits of
input less than the length of longest code.  It gets that many bits from the
stream, and looks it up in the table.  The table will tell if the next
code is that many bits or less and how many, and if it is, it will tell
the value, else it will point to the next level table for which inflate()
grabs more bits and tries to decode a longer code.

How many bits to make the first lookup is a tradeoff between the time it
takes to decode and the time it takes to build the table.  If building the
table took no time (and if you had infinite memory), then there would only
be a first level table to cover all the way to the longest code.  However,
building the table ends up taking a lot longer for more bits since short
codes are replicated many times in such a table.  What inflate() does is
simply to make the number of bits in the first table a variable, and set it
for the maximum speed.

inflate() sends new trees relatively often, so it is possibly set for a
smaller first level table than an application that has only one tree for
all the data.  For inflate, which has 286 possible codes for the
literal/length tree, the size of the first table is nine bits.  Also the
distance trees have 30 possible values, and the size of the first table is
six bits.  Note that for each of those cases, the table ended up one bit
longer than the ``average'' code length, i.e. the code length of an
approximately flat code which would be a little more than eight bits for
286 symbols and a little less than five bits for 30 symbols.  It would be
interesting to see if optimizing the first level table for other
applications gave values within a bit or two of the flat code size.


2.2 More details on the inflate table lookup

Ok, you want to know what this cleverly obfuscated inflate tree actually  
looks like.  You are correct that it's not a Huffman tree.  It is simply a  
lookup table for the first, let's say, nine bits of a Huffman symbol.  The  
symbol could be as short as one bit or as long as 15 bits.  If a particular  
symbol is shorter than nine bits, then that symbol's translation is duplicated
in all those entries that start with that symbol's bits.  For example, if the  
symbol is four bits, then it's duplicated 32 times in a nine-bit table.  If a  
symbol is nine bits long, it appears in the table once.

If the symbol is longer than nine bits, then that entry in the table points  
to another similar table for the remaining bits.  Again, there are duplicated  
entries as needed.  The idea is that most of the time the symbol will be short
and there will only be one table look up.  (That's whole idea behind data  
compression in the first place.)  For the less frequent long symbols, there  
will be two lookups.  If you had a compression method with really long  
symbols, you could have as many levels of lookups as is efficient.  For  
inflate, two is enough.

So a table entry either points to another table (in which case nine bits in  
the above example are gobbled), or it contains the translation for the symbol  
and the number of bits to gobble.  Then you start again with the next  
ungobbled bit.

You may wonder: why not just have one lookup table for how ever many bits the  
longest symbol is?  The reason is that if you do that, you end up spending  
more time filling in duplicate symbol entries than you do actually decoding.   
At least for deflate's output that generates new trees every several 10's of  
kbytes.  You can imagine that filling in a 2^15 entry table for a 15-bit code  
would take too long if you're only decoding several thousand symbols.  At the  
other extreme, you could make a new table for every bit in the code.  In fact,
that's essentially a Huffman tree.  But then you spend two much time  
traversing the tree while decoding, even for short symbols.

So the number of bits for the first lookup table is a trade of the time to  
fill out the table vs. the time spent looking at the second level and above of
the table.

Here is an example, scaled down:

The code being decoded, with 10 symbols, from 1 to 6 bits long:

A: 0
B: 10
C: 1100
D: 11010
E: 11011
F: 11100
G: 11101
H: 11110
I: 111110
J: 111111

Let's make the first table three bits long (eight entries):

000: A,1
001: A,1
010: A,1
011: A,1
100: B,2
101: B,2
110: -> table X (gobble 3 bits)
111: -> table Y (gobble 3 bits)

Each entry is what the bits decode to and how many bits that is, i.e. how  
many bits to gobble.  Or the entry points to another table, with the number of
bits to gobble implicit in the size of the table.

Table X is two bits long since the longest code starting with 110 is five bits
long:

00: C,1
01: C,1
10: D,2
11: E,2

Table Y is three bits long since the longest code starting with 111 is six  
bits long:

000: F,2
001: F,2
010: G,2
011: G,2
100: H,2
101: H,2
110: I,3
111: J,3

So what we have here are three tables with a total of 20 entries that had to  
be constructed.  That's compared to 64 entries for a single table.  Or  
compared to 16 entries for a Huffman tree (six two entry tables and one four  
entry table).  Assuming that the code ideally represents the probability of  
the symbols, it takes on the average 1.25 lookups per symbol.  That's compared
to one lookup for the single table, or 1.66 lookups per symbol for the  
Huffman tree.

There, I think that gives you a picture of what's going on.  For inflate, the  
meaning of a particular symbol is often more than just a letter.  It can be a  
byte (a "literal"), or it can be either a length or a distance which  
indicates a base value and a number of bits to fetch after the code that is  
added to the base value.  Or it might be the special end-of-block code.  The  
data structures created in inftrees.c try to encode all that information  
compactly in the tables.


Jean-loup Gailly        Mark Adler
jloup@gzip.org          madler@alumni.caltech.edu


References:

[LZ77] Ziv J., Lempel A., ``A Universal Algorithm for Sequential Data
Compression,'' IEEE Transactions on Information Theory, Vol. 23, No. 3,
pp. 337-343.

``DEFLATE Compressed Data Format Specification'' available in
ftp://ds.internic.net/rfc/rfc1951.txt
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\mobile\syncmgr\sample\readme.txt ===
Synchronization Manager Sample Handler


SUMMARY
=======

Sample demonstrates how to write a handler that works with Synchronization Manager 
to synchronize offline data.

Description
===========

SyncDir is a fully functional sample handler that demonstrates the common 
functionality that must be implemented by all Synchronization Manager handlers.
  It exercises the synchronization features by synchronizing the contents of two 
directories configured by the user.

It has the necessary code to register and unregister itself with the 
Synchronization Manager.  It is an COM inproc server and implements the 
ISyncMgrSynchronize interface for the purposes of synchronization using the 
ISyncMgrSynchronizeCallback to communicate progress and status information.  

Additionally, it allows the user to create and manage synchronization items by 
specifying the directory pairs to be synchronized.

Building
========

To build the sample you must have mobsync.h from the Platform SDK in 
your include path and mobsync.lib in your lib path.


Registering  Handler
=====================

Once the handler has been built you must register it. 

Steps:
- Go to the Directory the syncdir.dll is located
- type regsvr32 syncdir.dll

To uninstall type regsvr32 /u syncdir.dll


Class Overview
======================

CSyncMgrHandler - main class that implements ISyncMgrSynchronize interface

CEnumSyncMgrItems - implements ISyncMgrEnumItems interface

CSettings - handles item and handler configuration

CClassFactory - implements standard COM Class Factory interface.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\com\txf\doc\callobjects.idl.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Title _PID_GUIDBob Atkinson Source Code.dot Bob Atkinson Microsoft Word 8.0/* Yes this file actually compiles! Call Objects: A Suite of Interfaces for Manipulating Call Frames as Objects Robert Atkinson 05 February, 1999 This interface suite is an architecture for talking to an engine by which various manipulations can be performed on call frames, including marshalling, persistence, stack walking, and the like. import "oaidl.idl"; interface ICallInterceptor; interface ICallUnmarshal; interface ICallFrame; interface ICallFrameEvents; interface ICallFrameWalker; interface IMarshallingManager; interface IInterfaceRelated; /* Introduction The central interface through which manipulations of call frames (a.k.a.  activation records,  a.k.a.  stack frames ) is performed is ICallFrame. Once you get your hands on an ICallFrame instance, you can manipulate the underlying stack frame in several different ways. Succinctly put, ICallFrame provides the primitive, basic building blocks out of which larger functionality such as marshalling, call frame persistence, interface-pointer swizzling, and the like can be constructed. It would be conceivable, for example, to construct a generic implementation of interface proxies and stubs that operated by dispatching operations to an appropriate ICallFrame instance. Alternately, an infrastructure that wished to build up method invocations into a queue to dispatch them at a later time could also be built out of the same primitives. Instances of ICallFrame never exist in an unbound state; rather, they are always attached to some activation record. Accordingly, they are not created directly with CoCreateInstance. Instead, clients get their hands on an instance of ICallFrame in one of two ways.  In the first instantiation technique, you create what is known as an interceptor  XE "interceptor"   implementation of a given interface. Upon receipt of a call, the interceptor s implementation of the interface manufactures an appropriate ICallFrame object and then delivers an ::OnCall notification to an instance of ICallFrameEvents previously registered with the interceptor using the ICallInterceptor interface. The second technique by which instances of ICallFrame are obtained is that of unmarshalling the marshalled form of an incoming call. The incoming call comes in in the form of a bag  o bytes in a buffer, but semantically tagged as belonging to a certain interface (a certain IID) and a certain method number therein. An instance of the appropriate unmarshalling class is created, and interface ICallUnmarshal can be used to turn the byte stream back into an activation record. Creation of interceptors and unmarshallers is carried out in the same manner. Indeed, ICallInterceptor and ICallUnmarshal are usually both supported by the same object instance. To create an interceptor for a given interface or find its unmarshaller, instantiate the proxy-stub class for the object using CoCreateInstance (rather than the usual mechanism which uses IPsFactory Buffer). Ask for the interface IInterfaceRelated, and set the appropriate IID. Then, query for ICallInterceptor or ICallUnmarshal and party on. /* ICallFrame  XE "ICallFrame"  ICallFrame is the workhorse interface through which manipulation of call frames is performed. An ICallFrame instance never exits freely in an unbound state; rather an ICallFrame instance is always bound to some particular actual invocation, and so has an associated method number, a stack frame that can be walked, and so on. If the bound-to stack frame lies in user space, the call frame is a user mode  XE "user mode"   call frame; this affects the behaviour of certain methods such as, e.g., ICallFrame::Copy, where only user space data may be copied from a user mode call frame. An instance of ICallFrame can perform various interesting transformations on a call frame (a.k.a. stack frame, activation record). For example, the call can be marshalled, or it can be persisted. The call frame can be walked, looking for various referenced data that might be of interest. An appropriate ICallFrame could serve as the internal engine by which a COM interface proxy or interface stub functioned. The interface proxy or stub would contain generic logic to drive the marshalling process, calling upon services in ICallFrame to actually carry out the interface-specific work. Different customers could use the same pieces to, say, persist a call frame instead of marshalling it. */ [uuid(D573B4B0-894E-11d2-B8B6-00C04FB9618A), object, pointer_default(unique), local] interface ICallFrame : IUnknown /* Bookkeeping */ typedef struct ULONG iMethod; /* the method number within to which this information applies */ fHasInValues; /* Are there any in-values (other than the receiver) */ fHasInOutValues; /* Are there any in-out values */ fHasOutValues; /* Are there any out-values other than an HRESULT or void return value */ fDerivesFromIDispatch; /* whether this interface in question derived from IDispatch or not. */ cInInterfacesMax; /* If >= 0, is an absolute upper bound on the number in-interfaces; if < 0, the method may have an unbounded number of in-interfaces. Of course, if == 0, there are definitely no in-interfaces. */ cInOutInterfacesMax; /* If >= 0, is an absolute upper bound on the number in-out-interfaces; if < 0, the method may have an unbounded number of in-out-interfaces Of course, if == 0, there are definitely no in-out-interfaces. */ cOutInterfacesMax; /* If >= 0, is an absolute upper bound on the number out-interfaces; if < 0, the method may have an unbounded number of out-interfaces Of course, if == 0, there are definitely no out-interfaces. */ cTopLevelInInterfaces; /* The number of parameters which are simply [in] interface pointers, and so are passed in the actual stack frame itself (this, of course, can never be unbounded).*/ /* the interface on which this is a call */ ULONG cMethod; /* the total number of methods in that interface */ ULONG cParams; /* the number of parameters in this method, NOT counting the receiver */  } CALLFRAMEINFO; typedef struct BOOLEAN /* is this an in parameter */ BOOLEAN fOut; /* is this an out parameter */ ULONG stackOffset; /* offset in bytes from stack location of the frame to start of param */  ULONG cbParam; /* size occupied by parameter on the stack */ } CALLFRAMEPARAMINFO; HRESULT GetInfo  XE "ICallFrame::GetInfo"  Return miscellaneous information about the call frame. The information returned is a static analysis of the method, not a dynamic one, in that it is based on an analysis of the method signature only, not the actual current contents of the call frame. For example, the static analysis might indicate that this method has the potential of having an in-interface, but because of, say, a union switch, a given call might not actually have any such interfaces. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ [out] CALLFRAMEINFO* pInfo /* place at which interesting information about this call frame is returned */ HRESULT GetIIDAndMethod  XE "ICallFrame::GetIIDAndMethod"  Faster form of GetInfo that just returns the IID and /or the method number. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ [out] pIID, /* optional */ [out] ULONG* piMethod /* optional */ HRESULT GetNames /* Return a string representation of the method or interface name of this call, if such is available. If a requested name is not available, then a NULL string is returned. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ [out] LPWSTR* pwszInterface, /* OPTIONAL:  the place to return the interface name */ [out] LPWSTR* pwszMethod /* OPTIONAL:  the place to return the method name */ PVOID GetStackLocation  XE "ICallFrame::GetStackLocation"  Return the stack location onto which this call frame is bound. Notice that this method is not HRESULT-returning; the return value is rather the requested stack location. */ void SetStackLocation  XE "ICallFrame::SetStackLocation"  Set the stack location onto which this call frame is bound. This method is rarely used. Note that the stack frame provided must conform to the same IID and method number as that for which the call frame was initially created. */ PVOID pvStack /* The stack location for the frame. */ void SetReturnValue  XE "ICallFrame::SetReturnValue"  Set the return value stored within this call frame. */ HRESULT /* The new return value. */ HRESULT GetReturnValue  XE "ICallFrame::GetReturnValue"  Get the return value stored within this call frame. Note: the return value of this method is the requested return value stored in this call frame. It is not the success or failure of the request to retrieve said return value. */ HRESULT GetParamInfo  XE "ICallFrame::GetParamInfo"  Return miscellaneous information a particular parameter in this invocation. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ ULONG iparam, /* zero-origin parameter number */ [out] CALLFRAMEPARAMINFO* pInfo /* place at which interesting information about this call frame is returned */ HRESULT SetParam  XE "ICallFrame::SetParam"  Set the value of a particular parameter in this frame, if possible, given the data types involved. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ ULONG iparam, /* zero-origin parameter number */ VARIANT* /* the new value for this parameter */ HRESULT GetParam  XE "ICallFrame::GetParam"  Return the value of a particular parameter in this frame, if possible, given the data types involved. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ ULONG iparam, /* zero-origin parameter number */ [out] VARIANT* /* the current value of this parameter */ /* Copying & Freeing */ typedef enum /* flags used in ::Copy. Use exactly one value. */  XE "CALLFRAME_COPY"  CALLFRAME_COPY_NESTED /* Client guarantees that he will only use the copied call frame in a manner where its lifetime is properly nested in the lifetime of its parent frame. When this flag is used, very significant optimizations can be made and memory allocations avoided by cleverly sharing actual parameter data. Indeed, with this flag specified to a Copy operation, only the interface pointers transitively reachable in the source frames are guaranteed to be deep copied and thus in the copy be stored in memory separate from that in which they are stored in the source frames; other data types may actually in the copied frame share memory with the source if the Copy operation is intelligent enough to do so A consequence is that whichever of these three CALLFRAME_COPY flags are passed to ICallFrame::Copy,  the interface pointers see by optionally provided interface walkers (see the method specification) may always be modified if desired without consequence of disturbing the interface pointers residing in the parent frame. However, if CALL_FRAME_COPY_NESTED is used, then the same cannot be said of any other type data types. .*/ CALLFRAME_COPY_INDEPENDENT /* Client requests that the copied call frame have a lifetime which is wholly independent from its parent */ CALLFRAME_COPY_NONLOCAL /* Only significant when executing a frame copy operation in kernel mode. Requests that not only should the lifetime of the copied frame data be independent of its parent, but that the actual copied data should reside in the opposite memory space from that of the parent data: if the parent frame is a user mode frame, the copied frame will be a kernel mode frame, and visa versa */ } CALLFRAME_COPY; HRESULT Copy  XE "ICallFrame::Copy"  Create a deep copy of this call frame. A deep copy of a call frame copies the frame and all of the data that is reachable therefrom. It can be roughly conceptualized as marshalling the frame, then immediately unmarshalling it; however, in practice it will be significantly more efficient than actually carrying out these two steps. A copy of a call frame can only be made of the in-values in the  before-call  state of the frame; once the frame has been invoked, and thus contains out-values, it cannot be copied. As data is copied, interface pointers in the copied data can be noted. If an ICallFrameWalker implementation is provided in the optional pWalker parameter, then pWalker->OnWalkInterface will be called for each interface pointer that is copied, just after the copy of the interface pointer value is made. The call frame implementation itself simply copies interface pointers as binary values. Specifically, no reference count adjustments of any form are performed. If some other behaviour is desired, the pWalker parameter must be used. Recall that a  user mode  XE "user mode"   call frame is one whose underlying stack pointer resides in user mode. In the process of copying a user-mode call frame, kernel mode implementations of the Copy operation ensures that only user-mode addresses are used in the data transitively reachable from the frame. Should an illegal non-user mode address be provided, an HRESULT derived from the error ERROR_IN VALID_ADDRESS is returned.  The copyControl parameter controls how much if any the data within the copied frame can be shared with data in the parent frame. See the CALLFRAME_COPY enumeration for details. The successfully copied frame is returned to the caller through *ppFrame. The frame so returned has a (normal) indefinite lifetime. The caller is explicitly responsible for calling Free on the frame copy in order to clean up the copied data. This must always be done, or memory leakage will occur; the call frame does not clean up the copied data automatically by itself.  Return value Meaning All is well HRESULT_FROM_WIN32(ERROR_INVALID_ADDRESS) An attempt was made to copy from a user mode stack frame data which itself did not lie in user space. CALLFRAME_E_ALREADYINVOKED An invocation has already been made from this frame. E_UNEXPECTED An unexpected error occurred. */ CALLFRAME_COPY copyControl, /* Controls how much the child frame can share data with the parent frame */ ICallFrameWalker* pWalker, /* Optional. If provided, then OnWalkInterface is called for each copied interface pointer after the copy has been made. If a walker is not provided, then the any interface pointers encountered are AddRef d. For kernel mode clients copying user mode frames, this is unlikely to be reasonable: such clients should almost certainly provide a walker to handle things safely. */ [out] ICallFrame** ppFrame /* place at which new frame is returned */ HRESULT Free  XE "ICallFrame::Free"  First, optionally propagate the out-values of the frame to another destination frame, which is often a parent from which this frame was originally copied. This propagation is logically a deep copy, but if the source and destination frames are either both user mode or both kernel mode frames, then much actual allocation and deallocation can be avoided by simply transferring ownership of data from source to destination frames.  If there are any [in,out] parameters in the destination frame, then the propagation first requires that the existing values that reside in those [in,out] parameters be freed. For interface pointers found therein, the freeing action can be controlled by providing a callback object in pWalkerDestFree. Once [in,out] parameters in the destination frame are freed, the propagation of out-values is (logically) carried out. If pWalkerCopy is provided, then it is called on each interface pointer contained in the propagated out-values. Second, optionally free some or all of the remaining data accessible from the source frame. Whether in, in-out, and / or out parameters are to be freed are indicated by the particular flags that may be indicated in the flags parameter, see the enumeration CALL FRAME_FLAGS for details. Third, optionally, initialize out-parameters to appropriate NULL states, including the return value. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ ICallFrame* pframeArgsDest, /* Optional. If present, is the stack pointer of the call frame to which the out-values should be copied before freeing is carried out. */ ICallFrameWalker* pWalkerDestFree, /* Optional. Ignored unless pframeArgsDest is also non-NULL. Indicates a callback object which should be notified as interface pointers residing in in-out parameters of pframeArgsDest need be freed. If absent, then such interface pointers are simply Release()ed. */ ICallFrameWalker* pWalkerCopy, /* Optional. Ignored unless pframeArgsDest is also non-NULL. Indicates a call back object which should be notified as interfaces are copied during call frame copying. If absent, then interface pointers are AddRef()d as the copy is made. */ DWORD freeFlags, /* flags drawn from the enumeration CALLFRAME_FREE */ ICallFrameWalker* pWalkerFree, /* Optional. If specified, then a call back will be made for each interface pointer encountered as freeing is carried out. If absent, then interface pointers encountered during freeing are Release()d. Note: when freeing a frame and specifying a pframeArgsDest which is in the same memory space as that of the receiver frame, then only pWalkerCopy is called on each interface pointer, not both  pWalkerCopy and pWalkerFree as one might perhaps expect.  Note to kernel mode users: If caller of Free  is in kernel mode worried about the possibility of user mode malicious guy then he should either a) always provide a walker to deal with the callbacks, or b) make sure by the way that the frame got created in the first place that there aren't any user mode objects lying around. */ DWORD nullFlags /* Values drawn from the enumeration CALFRAME_NULL_FLAGS. If any bits are set herein, then once any freeing has been carried out, then out-values and-or in-out values which are pointers are to be set to NULL. If no bits are set, then this NULLing need not be carried out after the freeing, though it is legal for the implementation to NULL the freed pointers anyway.  Note that it is legal to NULL the out values without first having freed them. This is commonly done on the client side in the situation where the server was not actually invoked so no unmarshalling of return values was attempted. */ enum CALLFRAME_FREE  XE "CALLFRAME_FREE"   /* a bitfield enumeration: use one or more values in ::Free */ CALLFRAME_FREE_NONE CALLFRAME_FREE_IN /* If TRUE, then in-values are to be freed. This includes both the data referenced therefrom an any top level pointer (should there be one).  If FALSE, in-values are to be left alone.  In a marshalling situation, this is typically set to TRUE on the server side after calling the object in order to free the in-parameters that were allocated by the system during unmarshalling of the in-values */   CALLFRAME_FREE_INOUT /* If TRUE, then the data referenced in in-out-values is to be freed. The top-level pointer, which is the actual parameter value, is not, however freed. But see also CALLFRAME_FREE_TOP_INOUT below. If FALSE, then in-out-values are not freed; existing contents thereof are ignored.  On the server side, this is typically used post-call, as in CALLFRAME_FREE_IN. On the client side, this is used in the situation where the sever was not actually invoked (and so unmarshalling of return values was not attempted) and in the situation where there was a failure during unmarshalling of the return values. */ CALLFRAME_FREE_OUT /* If TRUE, then data referenced in out-values is to be freed. The top-level pointer, which is the actual parameter value, is not, however, freed. If FALSE, then out-values are not freed; existing contents thereof are ignored.  On the server side, this is, again, used post call as in CALLFRAME_FREE_IN. On the client side, this is typically only use in the even of a failure during unmarshalling of return values. */ CALLFRAME_FREE_TOP_INOUT /* If TRUE, then for [in,out] parameters, the top level pointer, which is the actual parameter value, is to be freed. */ CALLFRAME_FREE_TOP_OUT = 16, /* If TRUE, then for [out] parameters, the top level pointer, which is the actual parameter value, is to be freed. */ CALLFRAME_FREE_ALL = 31, /* Combination of all freeing flags */ enum CALLFRAME_NULL  XE "CALLFRAME_NULL"   /* a bitfield enumeration: use one or more values in ::Free */ CALLFRAME_NULL_NONE /* no values are to be NULLed */ CALLFRAME_NULL_INOUT /* in-out values are to be NULLed */ CALLFRAME_NULL_OUT /* out-values are to be NULLed */ CALLFRAME_NULL_ALL /* combination of the above two flags */ HRESULT  FreeParam  XE "ICallFrame::FreeParam"  Free just a particular parameter in this frame. This method provides a proper subset of the effect that can be carried out by ICallFrame::Free. Specifically, ICallFrame::Free provides out-value propagation behaviour, which this method does not, and ICallFrame::Free acts on all the parameters in the method, whereas this method only acts on a particular method. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ ULONG iparam, /* the parameter number to be freed */ DWORD freeFlags, /* as in ICallFrame::Free */ ICallFrameWalker* pWalkerFree, /* as in ICallFrame::Free. */ DWORD nullFlags /* as in ICallFrame::Free. */ /* Walking */ HRESULT  WalkFrame  XE "ICallFrame::WalkFrame"  Walk this call frame, looking for interface pointers transitively reachable from the arguments of the frame.  Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ DWORD walkWhat, /* Values taken from CALLFRAME_WALK, indicating what combination of [in], [in,out], or [out] parameters are to be walked */ ICallFrameWalker* pWalker /* The call back through which we notify of interface pointers we have found. */ enum CALLFRAME_WALK  XE "CALLFRAME_NULL"   /* a bitfield enumeration: use one or more values in ::WalkFrame */ CALLFRAME_WALK_IN /* in values are to be walked */ CALLFRAME_WALK_INOUT /* in-out values are to be walked */ CALLFRAME_WALK_OUT /* out-values are to be walked */ /* Marshalling */ /* CALLFRAME_MARSHALCONTEXT  XE "CALLFRAME_MARSHALCONTEXT"  A structure used to pass about information about the context in which marshalling is to be carried out. */ typedef struct BOOLEAN /* Whether we are to marshal the in-values or the out-values. In a marshalling situation, the in-values are marshalled on the client side, and the out-values are marshalled on the server side. */ DWORD dwDestContext; LPVOID pvDestContext; IMarshallingManager* mshlmgr; /* Engine responsible for marshalling object interfaces */ guidTransferSyntax; /* The transfer syntax with which the marshalling should occur. */ } CALLFRAME_MARSHALCONTEXT; HRESULT GetMarshalSizeMax  XE "ICallFrame::GetMarshalSizeMax"  Return a reasonable upper limit on the amount of buffer size that would be needed were ::Marshal to be called. Typically, a marshalling engine (such as an interface proxy) calls ::GetMarshalSizeMax to learn how big of a buffer is need, talks to some other party (such as the channel) to allocate the buffer, then calls ::Marshal to actually carry out the marshalling. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ CALLFRAME_MARSHALCONTEXT* pmshlContext, /* Context information about how we d go about marshalling */ MSHLFLAGS mshlflags, /* As in the IMarshal interface */ [out] ULONG* pcbBufferNeeded /* Size of the buffer that will be needed */ HRESULT Marshal  XE "ICallFrame::Marshal"  Ask call frame to turn itself and its transitively-reachable data into a flat buffer.  The act of marshalling a call frame never disturbs the frame. When marshalling in-values, after a call to ::Marshal, whether successful or not, the in-versions of in-out values are still present, and out-only values are still undefined. When marshalling out-values, after a call to ::Marshal, whether successful or not, the out-parameters are still present and valid. If this function fails (returns an error), then it is a no-op (or may as well be assumed to be, as nothing further can be done by the caller to clean up). Resources such as memory transiently allocated during the attempted marshalling have been freed, and so on. The act of marshalling interfaces warrants special attention. Non-interface data which is marshalled is simply flattened in place into the output buffer in a standard way. Interface pointers are marshalled by asking the provided IMarshallingManager* to do the marshalling; should none be provided, CoMarshalInterface is used. Different marshalling behaviour,  marshalling  vs.  persisting , can be achieved by using different IMarshallingManager* engines to carry out the marshalling operation. See the description of IMarshallingManager for further information. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ CALLFRAME_MARSHALCONTEXT* pmshlContext, /* Context information about how we d go about marshalling */ MSHLFLAGS mshlflags, /* As in the IMarshal interface */ [in,size_is(cbBuffer)] PVOID pBuffer, /* Buffer into which we should put the marshalled data */ ULONG cbBuffer, /* The size of the buffer in bytes */ [out] ULONG* pcbBufferUsed, /* Optional. Size of the buffer that was actually used */ [out] RPCOLEDATAREP* pdataRep, /* Optional. If provided, then through here is returned the NDR data representation with which the data was marshalled. For Win32 machines, this is always 0X00000010L, which is  little endian, ASCII characters, IEEE floats. See also IRpcChannel Buffer:: GetBuffer */ [out] ULONG* prpcFlags /* Optional. If provided, then through here is returned RPC flags associated with the call. See also IRpcChannelBuffer:: GetBuffer */ HRESULT Unmarshal  XE "ICallFrame::Unmarshal"  Unmarshal a packet of data containing the previously marshalled out-values of a call into this already-existing activation record. As a side effect of the unmarshalling, the in-versions of any in-out values are freed (interface pointers are released) in order that they may be replaced with their out-versions. On exit, all the in-out-values and out-values will always be set to reasonable values, either (a) an in-version of an in-out-value, (b) an out-value successfully unmarshalled from the returned data, or (c) a value explicitly initialized to NULL. On failure return, the caller will typically want to call ::Free in order to clean up those values which are not in fact NULL. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ [in,size_is(cbBuffer)] PVOID pBuffer, /* Buffer containing the marshalled out-values */ ULONG cbBuffer, /* The size of the buffer in bytes */ RPCOLEDATAREP dataRep, /* The data representation with which the data was marshalled */ CALLFRAME_MARSHALCONTEXT* pcontext, /* Manager etc responsible for unmarshalling interface references */ [out] ULONG* pcbUnmarshalled /* Optional. Is the number of bytes that were successfully unmarshalled. This parameter is returned even in error situations */ HRESULT ReleaseMarshalData  XE "ICallFrame::ReleaseMarshalData"  Release resources that may be being held by interface pointers residing in a packet of marshalled data. This method finds all interface pointers in the packet, and, in effect, calls CoReleaseMarshalData on each one. Logically speaking, ReleaseMarshalData must always be ultimately called exactly once to clean up the resources held in the marshalled buffer, though typically (in the MRSHLFLAGS_NORMAL case) this is done as a side effect of the act of unmarshalling and so need not be carried out explicitly. This method can function correctly on both marshalled in-parameters and marshalled out-parameters. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ [in,size_is(cbBuffer)] PVOID pBuffer, /* Buffer containing the marshalled out-values */ ULONG cbBuffer, /* The size of the buffer in bytes */ ULONG ibFirstRelease, /* The first byte in the buffer which is to actually be released; a value of zero implies interface pointers in the whole buffer are to be released. The idea is that marshalled interface pointers prior to the indicated byte are assumed to have already been released by some other mechanism */ RPCOLEDATAREP dataRep, /* The data representation with which the data was marshalled */ CALLFRAME_MARSHALCONTEXT* pcontext /* Manager etc responsible for unmarshalling interface references */ /* Invocation */ HRESULT Invoke  XE "ICallFrame::Invoke"  Apply this activation record to an object. In a marshalling situation, typically this is carried out on the server side, and is the means by which the work of the actual object is accomplished.  Generally speaking, carrying out the invocation involves allocating a new stack frame, shallow-copying down the data in the original frame, then calling the appropriate method in the indicated object. The object invoked may then chose to modify out-parameters which are reachable from the copied frame, according to the appropriate semantics of the invocation. When the invocation returns from the object, the call frame automatically captures the return value   la ICallFrame::SetReturnValue. Return value Meaning All is well CALLFRAME_E_ALREADYINVOKED An invocation has already been made from this frame. E_UNEXPECTED An unexpected error occurred. */ void* pvReceiver, /* The interface on which the invocation is to occur. Caller is responsible for ensuring that this interface is in fact of the appropriate IID; the ::Invoke implementation will simply do a cast and assume that that is the case. */ /* This is a VARARGS function. Additional parameters, if any, are used to fill unbound values in the activation record other than the receiver, if any should be present. At present, no known methods require this. */ /* ICallIndirect ICallIndirect is an interface by which an invocation can be caused to be carried out on an object with an indirect reference to the invocation s arguments, rather than the traditional direct call. A given instance of ICallIndirect supports indirect invocations for just one IID. The actual detailed semantics of how to carry out an indirect call are independent of the ICallIndirect interface itself; they are instead specific to the implementation of the interface. For example, implementations of ICallIndirect found in call interceptors (see below) carry out the call by constructing and appropriate ICallFrame instance and then invoking ICallFrameEvents Call in the registered sink. Other implementations might do some appropriate munging of the invocation s arguments, then forward the call on to some actual specific object, presumably one previously registered with the ICallIndirect using some implementation-specific means. [uuid(D573B4B1-894E-11d2-B8B6-00C04FB9618A), object, pointer_default(unique), local] interface ICallIndirect : IUnknown HRESULT CallIndirect  XE   ICallIndirect::CallIndirect"  Invoke one of the methods in the interface that this interceptor intercepts, but with an indirect reference to the arguments of the invocation. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ [out] HRESULT* phrReturn, /* the value returned from the invocation of the method */ ULONG iMethod, /* the method number which should be invoked */ void* pvArgs, /* pointer to the stack frame with which to make the invocation. Details of the exact representation of this stack frame are processor-architecture specific */  [out] ULONG* cbArgs /* on exit, the number of bytes which should be popped from the stack in order to clear the stack of the arguments to this invocation */ HRESULT GetMethodInfo  XE   ICallIndirect::GetMethodInfo"  Return miscellaneous information about the a method in this interface. The information returned is a static analysis of the method, not a dynamic one, in that it is based on an analysis of the method signature only, not the actual current contents of the call frame. For example, the static analysis might indicate that this method has the potential of having an in-interface, but because of, say, a union switch, a given call might not actually have any such interfaces.  This method is equivalent to the GetInfo and GetNames methods in ICallFrame, but avoids the need to actually make any invocation to get the information. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ ULONG iMethod, /* the method number which should be considered */ [out] CALLFRAMEINFO* pInfo, /* place at which interesting information about said method is returned */ [out] LPWSTR* pwszMethod /* OPTIONAL:  the place to return the method name, if available */ HRESULT GetStackSize  XE   ICallIndirect::GetStackSize"  Return the number of bytes which should be popped from the stack in order to return from an invocation of the indicated method. This is equivalent to the value returned via the cbArgs parameter to CallIndirect, but avoids the need to actually make any invocation to get the information. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ ULONG iMethod, /* the method number which should be considered */ [out] ULONG* cbArgs /* on exit, the number of bytes which should be popped from the stack in order to clear the stack of the arguments to an  invocation of this method number */ HRESULT GetIID ICallIndirect::GetIID"  Return the (most derived) interface id supported by this ICallIndirect implementation.  Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ [out] piid, /* Optional: the interface in question */ [out] BOOL* pfDerivesFromIDispatch, /* Optional: whether said interface ultimately derives frrom IDispatch */ [out] ULONG* pcMethod, /* Optional: the number of methods in that interface */ [out] LPWSTR* pwszInterface /* OPTIONAL:  the place to return the interface name, if available */ /* ICallInterceptor  XE "ICallInterceptor"  ICallInterceptor the central interface supported by interface interceptors. This interface supports the registration and unregistration of sinks wishing to be notified of calls made directly on the interface in the normal way. In addition, this interface provides a means by which an invocation can be caused to be carried out with an indirect reference to the invocation s arguments.  All implementations of ICallInterceptor also implement the interface that they intercept.  Notice that the ICallInterceptor interface derives from ICallIndirect. [uuid(60C7CA75-896D-11d2-B8B6-00C04FB9618A), object, pointer_default(unique), local] interface ICallInterceptor : ICallIndirect HRESULT RegisterSink  XE   ICallInterceptor::RegisterSink"  Register a sink for receiving notifications of method calls. Only a single sink may be registered with an interceptor at any given time. Registering a sink of NULL is legal, and causes the interceptor to release any previously registered sink that it might be holding on to. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ ICallFrameEvents* psink HRESULT GetRegisteredSink ICallInterceptor::GetRegisteredSink"  Return the presently registered event sink, if any. Return value Meaning All is well; the registered sink, if any, is returned. CO_E_OBJNOTREG There is no sink presently registered with this interceptor. E_UNEXPECTED An unexpected error occurred. */ [out] ICallFrameEvents** ppsink /* ICallFrameEvents  XE "ICallFrameEvents"  ICallFrameEvents is the interface on which method call notifications are delivered. [uuid(FD5E0843-FC91-11d0-97D7-00C04FB9618A), object, pointer_default(unique), local] interface ICallFrameEvents : IUnknown HRESULT OnCall  XE "ICallFrameEvents::OnCall"  Informs the sink of the receipt of a method call on the interceptor. The sink is provided with an ICallFrame instance which is bound to the intercepted incoming method invocation. Through that sink the call frame can be manipulated in various ways.  On return from OnCall, the interceptor assumes that by some means the out-values of the method have been appropriately initialized as needed, if any; the interceptor does not itself manipulate the call frame further in any way. Typically, the OnCall implementation will have set the out-values by some means, either by invoking the call frame on an object, successfully unmarshalling some previously marshaled out-values, or NULLing them with ICallFrame::Free. The return value should also have been appropriately set during the call in a similar manner. See also ICallFrame::SetReturnValue. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ ICallFrame* pFrame /* A call frame bound to the just-received invocation */ /*ICallUnmarshal  XE "ICallUnmarshal"  ICallUnmarshal is typically used on the server (receiving) side of a remote invocation. An appropriate instance of ICallUnmarshal can be used to transform back into an call frame a method invocation previously marshalled by a call to ICallFrame::Marshal on the client (sending) side. Once such a reconstituted call frame is obtained, the call can be (e.g.) carried out on an actual object using ICallFrame::Invoke. ICallUnmarshal is typically implemented by the interceptor for a given interface. [uuid(5333B003-2E42-11d2-B89D-00C04FB9618A), object, pointer_default(unique), local] interface ICallUnmarshal : IUnknown HRESULT Unmarshal  XE "ICallUnmarshal::Unmarshal"  Turn a marshalled packet of data back into an activation record in preparation to being able to actually carry out an invocation or other manipulation of the activation record. It must always be the case that the packet of data passed here to ICallUnmar shal::Unmarshal contains the in-values of a call; see also ICallFrame::Unmarshal which deals with out-values. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ ULONG iMethod, /* The method number which is to be unmarshalled. A value of 0xFFFFFFFF indicates that the caller instead expects the method number to be determined from the data to be unmarshalled. Which of these two is appropriate depends on the protocol used to transfer the marshalling packet from client to server. */ [in,size_is(cbBuffer)] PVOID pBuffer, /* Buffer from which the activation record is to be reconstituted */ ULONG cbBuffer, /* Size of the buffer in bytes */ fForceBufferCopy, /* If true, then during the unmarshal process the engine will copy and retain the passed-in buffer so long as it needs it. If false, however, then caller promises that the buffer passed in will remain valid for at least as long as the ICallFrame returned herefrom is still alive */ RPCOLEDATAREP dataRep, /* The data representation with which the data was marshalled */ CALLFRAME_MARSHALCONTEXT * pcontext, /* Manager etc responsible for unmarshalling interface references */ [out] ULONG* pcbUnmarshalled, /* Optional. Is the number of bytes that were successfully unmarshalled. This parameter is returned even in error situations. */ [out] ICallFrame** ppFrame /* A call frame bound to the just-unmarshalled invocation */ HRESULT ReleaseMarshalData  XE "ICallUnmarshal::ReleaseMarshalData"  Release resources that may be being held by interface pointers residing in a packet of marshalled data. This method finds all interface pointers in the packet, and, in effect, calls CoReleaseMarshalData on each one. Logically speaking, ReleaseMarshalData must always be ultimately called exactly once to clean up the resources held in the marshalled buffer, though typically (in the MRSHLFLAGS_NORMAL case) this is done as a side effect of the act of unmarshalling and so need not be carried out explicitly. This method can function correctly on both marshalled in-parameters and marshalled out-parameters. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ ULONG iMethod, /* the method number whose data is to be released */ [in,size_is(cbBuffer)] PVOID pBuffer, /* Buffer containing the marshalled out-values */ ULONG cbBuffer, /* The size of the buffer in bytes */ ULONG ibFirstRelease, /* The first byte in the buffer which is to actually be released; a value of zero implies interface pointers in the whole buffer are to be released. The idea is that marshalled interface pointers prior to the indicated byte are assumed to have already been released by some other mechanism */ RPCOLEDATAREP dataRep, /* The data representation with which the data was marshalled */ CALLFRAME_MARSHALCONTEXT* pcontext /* Manager etc responsible for unmarshalling interface references */ /* ICallFrameWalker  XE "ICallFrameWalker"  ICallFrameWalker is the callback interface used to walk a stack frame, looking for interesting values. See ICallFrame::WalkFrame. [uuid(08B23919-392D-11d2-B8A4-00C04FB9618A), object, pointer_default(unique), local] interface ICallFrameWalker : IUnknown HRESULT OnWalkInterface  XE "ICallFrameWalker::OnWalkInterface"  The walker has discovered an interface in the call frame. We are informed of its IID and its location; we can manipulate the interface, and we may replace it if desired, being careful to get the reference counting right. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ REFIID /* the IID of the interface that has been found */ PVOID* ppvInterface, /* Buffer from which the activation record is to be reconstituted */ /* is this an interface inside an in- or in-out-parameter? */ /* is this an interface inside an out- or in-out-parameter? */ /* IMarshalSomeone  XE "IMarshalSomeone"  IMarshalSomeone is an interface by which a client can request that some implicitly-specified object be marshalled. The functionality in the interface is similar to that of IMarshal. However, the data returned by IMarshalSomone::Marshal is a full OBJREF, just as would be returned by CoMarshalInterface. This contrasts with IMarshal, wherein IMarshal::Marshal returns just the custom-marshalling-data part of an object reference. [uuid(174F4929-53EC-11d2-B8AC-00C04FB9618A), object, pointer_default(unique), local] interface IMarshalSomeone : IUnknown HRESULT GetMarshalSizeMax /* Similar to IMarshal::GetMarshalSizeMax. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ REFIID void* DWORD dwDestContext, [in,unique] void* pvDestContext, DWORD mshlflags, [out] DWORD* pSize HRESULT MarshalInterface /* Similar to IMarshal::MarshalInterface. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ [in,unique] IStream* pstm, REFIID void* DWORD dwDestContext, [in,unique] void* pvDestContext, DWORD mshlflags HRESULT UnmarshalInterface /* Similar to IMarshal::UnmarshalInterface. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ [in,unique] IStream* pstm, REFIID [out] void** HRESULT ReleaseMarshalData /* Similar to IMarshal::ReleaseMarshalData. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ [in,unique] IStream* /* IMarshallingManager  XE "IMarshallingManager"  IMarshallingManager instances are used as the mechanism by which call frames actually carry out the marshalling and unmarshalling of an interface pointer. [uuid(F6EBEB2B-C8DE-11d1-B88E-00C04FB9618A), object, pointer_default(unique), local] interface IMarshallingManager : IUnknown HRESULT GetMarshallerFor  XE "IMarshallingManager::GetMarshallerFor"  Return an IMarshal instance that can then be used to marshal the indicated interface on this object. Typically, the marshaller returned is implemented by the marshalling manager itself. Internally, it usually refers to either the object's IMarshal implementation, if it custom marshals itself, or a marshalling-manager-provided 'standard' IMarshal implementation. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ REFIID iidToMarshal, /* the IID of the interface to be marshalled */ PVOID pvInterface, /* the interface iid on the object which is to be marshalled */ [out] IMarshalSomeone** ppMarshal /* a marshaller appropriate for this object */ HRESULT GetStandardMarshallerFor  XE "IMarshallingManager::GetMarshallerFor"  Similar to GetMarshallerFor, but is guaranteed to never reference the object's IMarshal implementation, but rather always use the marshalling-manager-provided 'standard' IMarshal implementation. In this respect, this method is similar to the CoGet shal API. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ REFIID iidToMarshal, /* the IID of the interface to be marshalled */ PVOID pvInterface, /* the interface iid on the object which is to be marshalled */ LPUNKNOWN punkOuter, /* controlling unknown for the marshaller */ REFIID /* iid sought on the returned marshaller */ [out] void** /* place at which marshaller is to be returned */ HRESULT GetUnmarshaller /* Return an IMarshal instance whose UnmarshalInterface can be used to unmarshal an interface pointer that was marshalled previously with a the IMarshal returned from a call to GetMarshallerFor or GetStandardMarshallerFor. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ REFIID iidHint, /* The iid for which unmarshalling is required. May legally be IID_NULL, in which case the iid in question must be determined from the later unmarshalled data; this is common. */ [out] IMarshalSomeone** ppMarshal /* place at which the unmarshaller is to be returned */ /* IInterfaceRelated  XE "IInterfaceRelated"  This interface is used to provide an IID parameter required in some initialization contexts. [uuid(D1FB5A79-7706-11d1-ADBA-00C04FC2ADC0), object, pointer_default(unique), local] interface IInterfaceRelated : IUnknown HRESULT SetIID IInterfaceRelated::SetIID"  Set the required IID parameter.  Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ REFIID HRESULT GetIID IInterfaceRelated::GetIID"  Return the underlying IID. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ [out] /* Error Codes We define some new error codes intended for use with the interfaces defined here. cpp_quote( #define CALLFRAME_E_ALREADYINVOKED _HRESULT_TYPEDEF_(  0x8004d090 ) /* An invocation has already been made on this call frame */ cpp_quote( #define CALLFRAME_E_COULDNTMAKECALL _HRESULT_TYPEDEF_(  0x8004d091 ) /*A requested invocation could not be carried out */ /* APIs This architecture also defines some new top-level APIs. [uuid(15B51D8B-9BF6-11d1-B888-00C04FB9618A), local] interface ICallFrameAPIs { HRESULT __stdcall CoGetInterceptor  XE "CoGetInterceptor"  Instantiate the appropriate interceptor for the indicated interface which is to be intercepted and return the newly created interceptor. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ REFIID iidIntercepted, /* the interface for which an interceptor is sought */ IUnknown* punkOuter, /* controlling unknown, if any, with which the interceptor is to be aggregated */ REFIID /* the IID desired on the interceptor */ [out] void** /* place at which the interceptor is returned */ HRESULT __stdcall CoGetInterceptorFromTypeInfo  XE "CoGetInterceptor"  Instantiate the appropriate interceptor for the indicated interface which is to be intercepted and return the newly created interceptor. The meta data for this interface is to be extracted from the provided typeinfo. Return value Meaning All is well E_UNEXPECTED An unexpected error occurred. */ REFIID iidIntercepted, /* the interface for which an interceptor is sought */ IUnknown* punkOuter, /* controlling unknown, if any, with which the interceptor is to be aggregated */ ITypeInfo* typeInfo, /* an ITypeInfo describing iidIntercepted */ REFIID /* the IID desired on the interceptor */ [out] void** /* place at which the interceptor is returned */ #if 0 Revision History 1997-07-15 First draft for limited review. 1997-11-10 Added ICallIndirect; rearrange ICallInterceptor. Add pvDatumAux to ICallFrameWalker::OnWalkData. 1997-11-25 Significant minor edits and clarifications. Changed the way that return values are returned via a call frame. Reordered the presentation of some of the interfaces. Made compilable. 1997-12-17 Tweaked ICallFrame::Copy. Changed policy of management of class ids. 1998-01-07 Added ICallIndirect::GetStackSize. Added ICallFrame::GetIIDAndMethod. 1998-01-15 Clarified user vs. kernel mode call frames; tweaked ICallFrame::Copy accordingly. Added ICallFrame::Get StackLocation. Modified ICallFrame::Free to aid in copying out values back to parent call frames. Changed SetReturnValue to work only for HRESULTs. Added some error code returns. Added HRESULT out-parameter to ICallFarme::Invoke. 1998-01-21 Removed the funky lifetime management stuff from ICallFrame::Copy. Now it just returns you the new call frame, period. Added explicit share-if-you can parameter. 1998-01-24 Removed the phReturnValue parameter to ICallFrame::Invoke. Instead, invoke will set the return value in the call frame, retrievable with GetReturnValue. Changed ICallFrame::Free s parent frame parameter to be ICallFrame* instead of void*. 1998-01-27 Separated the  walker  variables to ICallFrame::Free. 1998-01-30 Removed ICallFrame::Unmarshal. Moved ReleaseMarshalData from ICallFrame to ICallUnmarshal. 1998-02-03 Added top-level APIs. Renamed IObjectMarshaller to IMarshallingManager; enhanced same interface. Restored and fixed ICallFrame::Unmarshal. 1998-02-05 Added ibFirstRelease parameter to ReleaseMarshalData. Changed ICallFrame::Free to allow separate NULLing of out vs. in-out parameters. Added ReleaseMarshalData to ICallFrame. 1998-02-19 Fix CoGetInterceptor s parameters. 1998-03-27 Extend IMarshallingManager. 1998-08-04 Add comments as to when walkers are called during ICallFrame::Free. Added ICallFrame::SetStackLocation. Allowed retention of frames beyond the ICallFrameEvents::OnCall notification. Added buffer management control to ICallUnmarshal::Unmarshal. 1998-08-14 Separated freeing of data referenced by out-parameters from the freeing of the actual out pointer parameter itself. 1998-08-26 Added third walker in Free case to free the in-out's in the parent frame. Changed OnWalkInterface to inform as to directionality of interface in question. Removed OnWalkData method. Allowed more careful control in ICallFrame::WalkFrame as to whether in-out vs. just plain in or just plain out interfaces are walked. Add in-out information to CALLFRAMEINFO. Rearranged method order in ICallFrame. Added cParams member to CALLFRAMEINFO; distinguished in-out information therein; renamed other members for clarity. Added ICallFrame::GetParamInfo method. Added ICallFrame::FreeParam method. Added ICallFrame::SetParam and ICallFrame::GetParam methods. 1998-09-15 Simplify GetStackLocation, SetReturnValue, and GetReturnValue based on performance measurements. Enhanced CALLFRAMEINFO with cInInterfacesMax etc. Added ICallIndirect::GetInfo. 1998-10-1 Remove confusing re-use of IMarshal interface. Define IMarshalSomeone instead. Enhance CALLFRAME_MARSHALCONTEXT to include requested transfer syntax. 1998-11-13 Added interface and method name retrieval methods. Changed IIDs of ICallFrame, ICallIndirect, and ICallInterceptor. 1998-12-01 Added mechanism to indicate whether interface derives from IDispatch. 1999-02-05 Call CoGetInterceptorFromTypeInfo. Index  INDEX \e " " \h "A"  CALLFRAME_COPY CALLFRAME_FREE CALLFRAME_MARSHALCONTEXT CALLFRAME_NULL CoGetInterceptor ICallFrame GetInfo GetIIDAndMethod GetStackLocation GetMarshalSizeMax Marshal Unmarshal ReleaseMarshalData SetReturnValue GetReturnValue Invoke WalkFrame ICallFrameEvents OnCall ICallFrameWalker OnWalkInterface OnWalkData ICallIndirect CallIndirect GetStackSize GetIID ICallInterceptor RegisterSink GetRegisteredSink ICallUnmarshal Unmarshal ReleaseMarshalData IInterfaceRelated SetIID GetIID IMarshallingManager GetMarshallerFor interceptor user mode #endif  TITLE  \* MERGEFORMAT   Microsoft Corporation 1997-1998. All Rights Reserved. DRAFT:   REF DraftDate \* MERGEFORMAT  14 January, 1997 Page:  page  Microsoft Confidential DRAFT  Page:  page  Microsoft Confidential
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\comcat\guids.txt ===
// 0002E0xx-0000-0000-C000-000000000046 Component Categories, ckindel 12/4/95

0002E000-0000-0000-C000-000000000046 IID_IEnumGUID
0002E001-0000-0000-C000-000000000046 OLD_IID_IEnumCATEGORYINFO
0002E002-0000-0000-C000-000000000046 OLD_IID_ICatRegister
0002E003-0000-0000-C000-000000000046 OLD_IID_ICatInformation
0002E004-0000-0000-C000-000000000046 Component Cat TypeLib
0002E005-0000-0000-C000-000000000046 CLSID_StdComponentCategoryMgr

0002E011-0000-0000-C000-000000000046 IID_IEnumCATEGORYINFO
0002E012-0000-0000-C000-000000000046 IID_ICatRegister
0002E013-0000-0000-C000-000000000046 IID_ICatInformation
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\cs\admin\ui\appmgr.ini ===
HKEY_LOCAL_MACHINE\Software\Microsoft\MMC\SnapIns
    {bdc67e00-8ea5-11d0-8d3c-00a0c90dcae7}
        = REG_SZ "Application Manager Snapin"
        NodeType = REG_SZ "{f8b3a900-8ea5-11d0-8d3c-00a0c90dcae7}"
        NameString = REG_SZ "Application Management"
        Provider = REG_SZ "Microsoft"
        Version = REG_SZ "1.0"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\cs\csschf.txt ===
dn: CN=File-Ext-Priority,CN=Schema,CN=Configuration,DC=ushajidom3,DC=ntdev,DC=Microsoft,DC=Com
changetype: add
objectClass: attributeSchema
adminDisplayName: File-Ext-Priority
attributeId: 1.2.840.113556.1.4.816
attributeSyntax: 2.5.5.12
omSyntax: 64
isSingleValued: FALSE
searchFlags: 1

dn: CN=Msi-Script-Name,CN=Schema,CN=Configuration,DC=ushajidom3,DC=ntdev,DC=Microsoft,DC=Com
changetype: add
objectClass: attributeSchema
adminDisplayName: Msi-Script-Name
attributeId: 1.2.840.113556.1.4.845
attributeSyntax: 2.5.5.12
omSyntax: 64
isSingleValued: TRUE
searchFlags: 1

dn: CN=Code-Package,CN=Schema,CN=Configuration,DC=ushajidom3,DC=ntdev,DC=Microsoft,DC=Com
changetype: modrdn
newrdn: Msi-Script-Path
deleteoldrdn: 1

dn: CN=Msi-Script-Path,CN=Schema,CN=Configuration,DC=ushajidom3,DC=ntdev,DC=Microsoft,DC=Com
changetype: modify
replace: adminDisplayName
adminDisplayName: Msi-Script-Path
-

dn: CN=Msi-Script-Path,CN=Schema,CN=Configuration,DC=ushajidom3,DC=ntdev,DC=Microsoft,DC=Com
changetype: modify
replace: adminDescription
adminDescription: Msi-Script-Path
-

dn: CN=Msi-Script-Path,CN=Schema,CN=Configuration,DC=ushajidom3,DC=ntdev,DC=Microsoft,DC=Com
changetype: modify
replace: ldapDisplayName
ldapDisplayName: msiScriptPath
-

dn: CN=Msi-Script-Size,CN=Schema,CN=Configuration,DC=ushajidom3,DC=ntdev,DC=Microsoft,DC=Com
changetype: add
objectClass: attributeSchema
adminDisplayName: Msi-Script-Size
attributeId: 1.2.840.113556.1.4.846
attributeSyntax: 2.5.5.9
omSyntax: 2
isSingleValued: TRUE

dn: CN=Msi-Script,CN=Schema,CN=Configuration,DC=ushajidom3,DC=ntdev,DC=Microsoft,DC=Com
changetype: add
objectClass: attributeSchema
adminDisplayName: Msi-Script
attributeId: 1.2.840.113556.1.4.814
attributeSyntax: 2.5.5.10
omSyntax: 4
isSingleValued: TRUE

dn: CN=Can-Upgrade-Script,CN=Schema,CN=Configuration,DC=ushajidom3,DC=ntdev,DC=Microsoft,DC=Com
changetype: add
objectClass: attributeSchema
adminDisplayName: Can-Upgrade-Script
attributeId: 1.2.840.113556.1.4.815
attributeSyntax: 2.5.5.12
omSyntax: 64
isSingleValued: FALSE
searchFlags: 1

dn: CN=Install-Ui-Level,CN=Schema,CN=Configuration,DC=ushajidom3,DC=ntdev,DC=Microsoft,DC=Com
changetype: add
objectClass: attributeSchema
adminDisplayName: Install-Ui-Level
attributeId: 1.2.840.113556.1.4.847
attributeSyntax: 2.5.5.9
omSyntax: 2
isSingleValued: TRUE

dn: CN=Package-Flags,CN=Schema,CN=Configuration,DC=ushajidom3,DC=ntdev,DC=Microsoft,DC=Com
changetype: modify
replace: searchFlags
searchFlags: 1
-

dn: CN=Package-Registration,CN=Schema,CN=Configuration,DC=ushajidom3,DC=ntdev,DC=Microsoft,DC=Com
changetype: modify
add: mayContain
mayContain: 1.2.840.113556.1.4.847
mayContain: 1.2.840.113556.1.4.815
mayContain: 1.2.840.113556.1.4.846
mayContain: 1.2.840.113556.1.4.845
mayContain: 1.2.840.113556.1.4.816
mayContain: 1.2.840.113556.1.4.20
mayContain: 1.2.840.113556.1.4.814
-

dn: CN=App-Schema-Version,CN=Schema,CN=Configuration,DC=ushajidom3,DC=ntdev,DC=Microsoft,DC=Com
changetype: add
objectClass: attributeSchema
adminDisplayName: App-Schema-Version
attributeId: 1.2.840.113556.1.4.848
attributeSyntax: 2.5.5.9
omSyntax: 2
isSingleValued: TRUE

dn: CN=Class-Store,CN=Schema,CN=Configuration,DC=ushajidom3,DC=ntdev,DC=Microsoft,DC=Com
changetype: modify
add: mayContain
mayContain: 1.2.840.113556.1.4.848
-

dn: CN=Class-Store,CN=Schema,CN=Configuration,DC=ushajidom3,DC=ntdev,DC=Microsoft,DC=Com
changetype: modify
add: PossSuperiors
PossSuperiors: 1.2.840.113556.1.5.18
-
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\cs\csadmin\appmgr\appmgr.ini ===
HKEY_LOCAL_MACHINE\Software\Microsoft\MMC\SnapIns
    {bdc67e00-8ea5-11d0-8d3c-00a0c90dcae7}
        = REG_SZ "Application Manager Snapin"
        NodeType = REG_SZ "{f8b3a900-8ea5-11d0-8d3c-00a0c90dcae7}"
        NameString = REG_SZ "Application Management"
        Provider = REG_SZ "Microsoft"
        Version = REG_SZ "1.0"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\cs\csdrt\readme.txt ===
Class Store DRT
===============

March 97. 
DebiM
===============

Csdrt.exe serves as the DRT and limited stress test component for Class Store.

It is indended for:
===================

    1. Testing before Checkin. (that is obviously the basic intent)
    2. Lowest form of a Stress Test.
    3. Some of it would work ad handy tools. (E.g. emptying a class store)
    4. May be used as IClassAdmin sample code.


As a DRT it tests: (now)
========================

     1. IClassAdmin update functionality. (New class/package and delete)

     2. IClassAdmin Browse functionality. (IEnumClass and IEnumPackage)

     3. IClassAccess:GetClassSpecInfo()
           - by CLSID
           - by File Ext
           - by ProgId
           - by MimeType
           - where there is TreatAsClsid
     
What is missing:
================

     1. ComCat interface implementation by Class Store
     2. Multiple class store tests
     3. ACLs


How to run
==========


Usage:
------
         csdrt [-p<containerpath>] [-v] [-a] [-b] [-g]
      OR csdrt [-p<containerpath>] [-v] -e
      OR csdrt [-p<containerpath>] [-v] -c
      OR csdrt [-p<containerpath>] [-v] -s [-b] [-l<loop count>]
         where:
            <containerpath> is a DNS pathname for a Class container.
                            if absent defaults to env var DRT_CLASSSTORE.
           -v : Verbose.
           -a : Test IClassAdmin functionality.
           -b : Test Browse functionality IEnumClass/IEnumPackage.
           -g : Test GetClassSpecInfo().
           -e : Empty the Class Store (cant be combiend with other tests)
           -c : A complete test of functionality.
           -s : Stress Test. Tests GetClassInfo and Optionally Browse. 
           -l : Loop count for Stress Test. Default = 100. 

Examples:
---------

  1. Complete DRT run for Class Store 
     csdrt -c

  2. Stress test
     csdrt -s -l100

  3. Emptying the Class Store Container (Deleting all Classes and Packages)
     csdrt -e
     Note: This does not remove Catoegories or Interfaces
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\ilib\readme.txt ===
The def file ole2w32.def can be found in ole2w32\ole2w32a.def

It is renamed so that win40.mk can merge it with the guids in
uuid.lib to build the final ole2w32.lib file.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\ole232\doc\olesize.txt ===
Size of the ole dll  (Intel)


10/31.  Original build

     Summary	1C000 (text+bss+data) == 114,688 
     
       .text    1A800
        .bss      600
      .rdata      A00
      .edata      C00
       .data     1200
       .rsrc     1600
      .idata     1600
        .CRT      200
      .reloc      C00
      .debug   12D76B

11/2/93  Removed some MFC stuff in the advises


     Summary	1CE00 == 118,272
     
       .text    1B200
        .bss      600
      .rdata      A00
      .edata      C00
       .data     1600
       .rsrc     1600
      .idata     1600
        .CRT      200
      .reloc      E00
      .debug   13D8D0

11/11/93  Cache nodes improved, first working dll

     Summary	1C400 == 115,712

       .text    1A800
        .bss      600
      .rdata      A00
      .edata      C00
       .data     1600
       .rsrc     1600
      .idata     1600
      .reloc      E00
      .debug   138C63

11/29/93  Cache nodes finished, minor improvements to the default
		class factory implementation.  Lots of bug fixes.



     Summary	1C600 == 116,224

       .text    1A800
        .bss      600
      .rdata      A00
      .edata      C00
       .data     1800
       .rsrc     1600
      .idata     1600
      .reloc      E00
      .debug   139EB5

12/7/93	   Inplace inlining removed, MemStm::CopyTo added


     Summary	1C000 == 114,688

       .text    1A800
        .bss      200
      .rdata      A00
      .edata      C00
       .data     1600
       .rsrc     1600
      .idata     1600
      .reloc      E00
      .debug   13905B

01/12/94	RPC drag drop, clipboard, and linking functional


     Summary    1A800  == 108,544

       .text    19A00
        .bss      200
      .rdata     1600
      .edata      C00
       .data      C00
       .rsrc     1600
      .idata     1600
      .reloc      E00
      .debug   13751A
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\ole232\doc\autolink.txt ===
From: Douglas Hodges
To: Alexander Gounares
Subject: possible change for next OLE version.
Date: Tuesday, November 02, 1993 12:16PM

a suggestion for consideration.

doug
----------
From: Rao Remala
To: Bob Atkinson; Craig Wittenberg; Tony Williams
Cc: Douglas Hodges
Subject: RE: Autoconversion of links
Date: Thursday, September 23, 1993 3:08PM

Thanks for the info and help! No changes now and Publisher is out of luck
--rao

----------
|From: Bob Atkinson
|To: Craig Wittenberg; Rao Remala; Tony Williams
|Cc: Douglas Hodges
|Subject: RE: Autoconversion of links
|Date: Thursday, September 23, 1993 10:36AM
|
|I agree with Doug.
|
|If the class is different, then we cannot *automatically* go
|ahead, in any of our (present) APIs, as we have no idea as to
|what action the action the caller took based in the erroneous
|information we gave him. We must give the opportunity to the
|piece of code that took action on the erroneous info the
|opportunity to do something different based on the new
|information, as only it knows what it did.
|
|Doug's suggestion makes it easy for an app to write a simple
|helper function that ignores certain changes while deals with
|others. Hopefully it would be easy for us; it seems so.
|
|One might ask whether we should put such a new helper function
|in our libraries. I believe I am against that: 1) it's a new
|OLE api, and 2) I really want applications to be conscious of
|the fact that this change can happen.
|
|	Bob
|----------
|| From: Douglas Hodges
|| To: Bob Atkinson; Craig Wittenberg; Rao Remala; Tony Williams
|| Subject: RE: Autoconversion of links
|| Date: Thursday, September 23, 1993 10:08AM
|| Priority: High
||
|| unfortunately i don't think it is correct to do this. i don't
|| think there is anything we can do for shipping apps (or soon
|| to be shipped apps) that don't do this correctly.
||
|| we need to have apps handle the OLE_E_CLASSDIFF situation
|| correctly. but our problem is that we don't really have our
|| whole story straight as to how this is to be handled.
|| currently we recommend that if the OLE_E_CLASSDIFF error comes
|| then the app should simply call IOleLink::BindLinkSource with
|| the flag OLELINK_EVENIFCLASSDIFF. this is correct ONLY if both
|| the old class and the new class use OLE's DefLink. if either
|| class uses a custom link, then in fact the link must be
|| recreated.
||
|| we need to give a different error code from OleRun when in
|| fact it is required to re-create the link (ie. re-binding with
|| OLELINK_EVENIFCLASSDIFF is not good enough).
||
|| suggestion: OLE_E_CLASSDIFFMUSTRECREATELINK
|| this scode should be returned instead of OLE_E_CLASSDIFF if
|| either the old or new class uses a custom link handler (there
|| is REGDB info that tells us if a class uses a custom link).
||
|| currently the OUTLINE sample apps handle the OLE_E_CLASSDIFF
|| error by re-creating the link in all situations because this
|| always works. it is a lot of overhead  and is a lot more
|| complicated than simply re-binding with the
|| OLELINK_EVENIFCLASSDIFF flag. if we had the two error codes
|| then, the OUTLINE sample code code be easily modified to
|| handle both cases. i can imagine that if we add the new error
|| code, that some apps could choose to handle the
|| OLE_E_CLASSDIFF case and simply fail to ever bind a link that
|| is in the OLE_E_CLASSDIFFMUSTRECREATE case.
||
|| doug
|| ----------
|| |From: Rao Remala
|| |To: Douglas Hodges
|| |Subject: FW: Autoconversion of links
|| |Date: Wednesday, September 22, 1993 5:20PM
|| |Priority: High
|| |
|| |
|| |----------
|| |From: B. Ashok
|| |To: Rao Remala; Srini Koppolu
|| |Cc: Paul Klemond
|| |Subject: FW: Autoconversion of links
|| |Date: Wednesday, September 22, 1993 5:06PM
|| |Priority: High
|| |
|| |
|| |I tried changing the bindflags to OLELINK_EVENIFCLASSDIFF under
|| |the debugger and autoconversion of links works just fine.  I'm
|| |convinced that this should be the default behavior when OleRun
|| |is called.   Otherwise, there seems to be no way to autoconvert
|| |a link correctly without breaking some containers.
|| |
|| |-- Bash
|| |
|| |----------
|| |From: bash
|| |To: natbro; paulkle; phaniv; raor; seanch; srinik; vikramn
|| |Cc: bash
|| |Subject: Autoconversion of links
|| |Date: Wednesday, September 22, 1993 4:40PM
|| |Priority: High
|| |
|| |
|| |I ran across the following problem while debugging
|| |autoconversion of works 2.0 objects and it seems like a fairly
|| |serious one from the user's point of view.
|| |We do autoconversion of works 2.0 objects to works 3.0 and
|| |everything works fine from a 1.0 container.  However we have
|| |the following problem with Publisher 2.0 (and with other ole
|| |2.0 containers that call OleRun to activate links):
|| |
|| |Let's say Pub 2.0 had a linked works 2.0 object in it.  When we
|| |try to activate this, Pub 2.0 calls OleRun, which ends up
|| |returning OLE_E_CLASSDIFF since the clsids are indeed
|| |different.  The only workaround that I know of at present is to
|| |have the container call BindToSource with
|| |OLELINK_EVENIFCLASSDIFF which of course it is too late to do
|| |since there exist shipped apps like Pub 2.0 out there which
|| |call OleRun to activate links... (FYI, the Works WP and DB do
|| |the same thing too).  My question is this: is it possible to
|| |make OLELINK_EVENIFCLASSDIFF as the default behavior when
|| |OleRun is called ?  Or is there anything at all we can do on
|| |the server side (reg.dat or any other hack) to get
|| |autoconversion of links to work ?
|| |
|| |Thanks for any info.
|| |
|| |-- Bash
|| |
|| |
|| |
||
||
|
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\ole232\doc\preraid.txt ===
preraid.txt

This file contains general notes for the ole2w32.dll project.  These items
should all be entered into our raid database once that is established.


1. alexgo -- api.cpp contains a lot of seemingly redundant api's, such
   as OleNoteObjectVisible and OleSetContainedObject, which do nothing
   but call CoLockObjectExternal.  We ought to think about replacing these
   with #define's.

2. alexgo -- there are *16* api's in api.cpp which all do basically the
   same thing, reading and writing private OLE info into a special stream
   in a storage.  There is a lot of duplicate code between these functions;
   with a little bit of thought, we can clean this up significantly.

   Some of these (such as GetDocumentBitStg) don't even seem to be used
   by anyone.

3. alexgo -- fix writing ANSI strings to streams to write an ansi version
   to the 16bit named private stream (OLE_STREAM, COMPOBJ_STREAM) and
   write a duplicate unicode string to a 32bit private stream.  Be sure
   to maintain consistent state across the two stream/strings

4. alexgo -- fix autoconversion of links.  We need to return a new
   error code OLE_E_CLASSDIFFMUSTRECREATELINK to handle the case of
   custom links and modify the sample code to deal with this appropriately.
   See the file autolink.txt for a more thorough discussion of this issue.

5. alexgo -- fix the drawing of icons and labels.  The code (icon.cpp)
   currently assumes English language with an ANSI character set.

6. DONE: alexgo -- the OleReg functions (in olereg.cpp and elsewhere) need to
   be updated to the new 32bit standard.  The following note from ShannonC
   gives more details.


From: Shannon Chan
To: Object Oriented Interfaces,Methods&API's
Subject: FINAL: Registry conflicts between 16 bit OLE2 and 32 bit OLE2
Date: Friday, December 03, 1993 11:19AM

Last month, I sent out a proposal on how to resolve the registry
conflicts between 16 bit OLE 2 and 32
bit OLE 2.  There were no objections.  This message describes the
final resolution of this issue.

Conflicting registry entries currently prevent the installation of 16
bit OLE 2 and 32 bit OLE 2 applications on the same machine.  The 16
bit applications require 16 bit DLLs.  The 32 bit applications
require 32 bit DLLs.  The problem is that the same registry entries
are used to register both 16 bit DLLs and 32 bit DLLs.  The solution
to this problem is to define new registry entries for 32 bit OLE 2.

16 bit OLE 2 will continue to use the existing registry keys:
InProcServer - Registers a 16 bit in-process server DLL.
InProcHandler - Registers a  16 bit handler DLL.
ProxyStubClsid - Maps an IID to a CLSID in a 16 bit proxy DLL.

32 bit OLE 2 will use new registry keys:
InProcServer32 - Registers a 32 bit in-process server DLL.
InProcHandler32 - Registers a 32 bit handler DLL.
ProxyStubClsid32 - Maps an IID to a CLSID in a 32 bit proxy DLL.

Some people asked why we need ProxyStubClsid32.  We need
ProxyStubClsid32 because the IID to CLSID mapping may be different
for 16 bit interfaces and 32 bit interfaces.  The IID to CLSID
mapping depends on how we package the interface proxies into a set of
proxy DLLs.

ShannonC


7. alexgo -- need to replace all memory allocations with the debug versions
   for resource tracking.  See alext's mail.

8. DONE (partially) alexgo -- need to put in call tracing stuff (LEDebugOut).

9. alexgo -- optimization.  The defhandler makes many many calls to IsRunning.
   We may be able to make IsRunning faster or perhaps analyze our code paths
   and reduce the number of calls to it.

10.  alexgo -- the OleConvert api's in the ole1 directory need to be
     implemented (currently, they are just stubbed).

11.  alexgo -- the test harness should ensure that structures (such as
     FORMATETC) are packed ala MS C style /Zp8 packing.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\ole232\doc\tracegrm.txt ===
Linking and Embedding Call Tracing

Alex Gounares (alexgo), 12/15/93


------------------------------

NB:  All call tracing added to the L&E layers of OLE *must*
conform to this spec; post processing tools may break otherwise.

Syntax of this grammar:
	non-terminals are bracketed with underscores (e.g. _foo_)
	Other tokens are literally or as described

General:

	Call logging should be done via the LEDebugOut macro, which
	takes the following parameters:

	LEDebugOut(( _type_ , _formatstring_ , _arguments));

	_type_	:	DEB_TRACE
		|	DEB_ITRACE
		;

	DEB_TRACE should be used for any API or method *directly*
	reachable by an OLE app. 

	DEB_ITRACE should be used for all internal APIs and
	methods.

	In some circumstances (an important internal function),
	it is permissible to use DEB_TRACE for internal functions
	and methods, but this is discouraged.
	
	_arguments_	:  whatever is needed by _formatstring_

	There are three _formatstring_ formats currently supported,
	one for function entrance, another for function exit, and
	a third for object deletion.  More formats may be added
	as needed, so tools must be prepared to ignore
	non-conforming strings (as it may be a new format for a new
	tool).

	_formatstring_	:	_in_
			|	_out_
			|	_delete_
			;

Function entrance:	// _IN is literal

	_in_		:	"_this_ _IN _name_ _args_ _extra_ \n"
			;

	_this_		:	%p	
				//should be passed the pointer
				//to the *top* level object in
				//the class (if the this pointer
				//points to a nested class)
				//If a function, then 0 should be
				//passed.
			;

	_name_		:	// the complete name of the function
				// or method (i.e. CFoo::CBar::Blah)

	_args_		:	( )
			|	( _arglist_ )
			;

	_arglist_	:	_arglist_ , _arg_
			|	_arg_
			;

	_arg_		:	_string_
			|	_integral_
			;

	_string_	:	\"%s\"
			|	\"%ws\"
			;
			
	_integral_	:	any printf conversion string
				other than strings (see NOTES)

	_extra_		:	an arbitrary number of bytes
				with no newline character

Function exit:

	_out_	: "_this_ OUT _name_ _return_ _outparams_ _extra_ \n"
		;

	_return_	:	( _arg_ )
			;
			
	_outparams_	:	[ _arglist_ ]	// used to put the
			|			// values of the
			;			// out parameters


Object Deletion:

	_delete_	: "_this_ DELETED _extra_ \n"
			;

			
				
NOTES:

	1.  	The newline does not need to be preceeded by a space.
		Other spaces in the grammar are intentional (the
		space character is the token delimiter)

	2. 	Tools should ignore any extra bytes after the known
		fields to be compatible with future revs of the
		logging.

	3.	In general, the following conversion codes are used
		for the following data types.  These are not binding,
		however, individual functions/methods may do 
		something different as appropriate.

		HRESULT		%lx
		pointer		%p
		DWORD		%lu
		DWORD(bitflags)	%lx
		ULONG		%lu
		LONG		%ld
		REFGUID		%p

	4.	For in/out params, in may be awkward to print
		the out value (since it may be a long piece of
		memory).  In this case, just printing the pointer
		value (although the same as the argument) is
		sufficient.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\olecnv32\readme.txt ===
OLECNV32.DLL
March 28, 1994

This Pict to Metafile converter is shared technology.  Please see the OLE team
before modifying it.

We rely on _OLECNV32_ being defined when compiling these sources to build
OLECNV32.DLL.  This allows us to disable unused code.

This code has not been unit tested yet.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\olethunk\bin16\ole2disp.txt ===
These versions of OLE Automation are the WOW-enabled versions (distinct
from the re-distributable win31/win32s versions).  This set of files was
taken from OLE Automation drop 102194.622 on \\blw\drop2 (kjashbcd)
\ole2auto\oa94.

DougF
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\olethunk\ole16\tools\cl.err ===
/* error messages */

2001	"too many symbols predefined with /D"
2002    "memory-model conflict"
2003    "missing source filename"
2008	"limit of %s exceeded at '%s'"
2011	"only one floating-point option allowed"
2012	"too many linker arguments"
2013    "incomplete model specification"
2016    "%s and %s command-line options are incompatible"
2018	"cannot create linker response file"
2019	"cannot overwrite source or object file '%s'"
2020	"%s option requires extended keywords to be enabled (/Ze)"
2021	"invalid numeric argument '%s'"
2022	"cannot open '%s'"
2023    "invalid model specification - flat model only"
2027	"cannot execute '%s'"
2028    "too many open files; cannot redirect '%s'"
2030	"INTERNAL COMPILER ERROR in '%s'\n\t\tContact Microsoft Product Support Services"
2031    "too many command-line options"
2000	"UNKNOWN COMMAND-LINE ERROR\n\t\tContact Microsoft Product Support Services"

				/* warning messages */

4001	"listing overrides assembly output"
4002	"ignoring unknown option '%s'"
4003	"processor-option conflict"
4005	"cannot find '%s';\nPlease enter new filename (full path) or CTRL+C to quit: "
4007	"'%s' requires '%s'; option ignored"
4009	"threshold only for far or huge data; ignored"
4011	"preprocessing overrides source listing"
4012	"function declarations override source listing"
4013	"combined listing overrides object listing"
4014	"invalid value '%d' for '%s'; assuming '%d'"
4018	".DEF files supported for segmented executable files only"
4019	"string too long; truncated to %d characters"
4020    "'%s' : missing argument; option ignored"
4021    "no action performed"
4022	"option '%s' invalid for %d-bit target"
4023	"option '%s' forces use of optimizing compiler"
4000	"UNKNOWN COMMAND-LINE WARNING\n\t\tContact Microsoft Product Support Services"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\olethunk\ole16\tools\c1.err ===
4001	"nonstandard extension '%Fs' was used"
4002	"too many actual parameters for macro '%s'"
4003	"not enough actual parameters for macro '%s'"
4004	"incorrect construction after 'defined'"
4005	"'%Fs' : macro redefinition"
4006	"#undef expected an identifier"
4007	"'%Fs' : must be '%Fs'"
4008	"'%Fs' : '%Fs' attribute ignored"
4009	"string too big; trailing characters truncated"
4010	"single-line comment contains line-continuation character"
4011	"'%Fs' : identifier was truncated to '%d' characters"
4012	"float constant in a cross compilation" 
4013	"'%Fs' undefined; assuming extern returning int"
4014	"concatenating mismatched wide strings"
4015	"'%Fs' : type of bit field must be integral"
4016	"'%s' : no function return type; using 'int' as default" 
4017	"cast of 'int' expression to far pointer"
4018	"'%Fs' : signed/unsigned mismatch"
4019	"empty statement at global scope"
4020	"'%Fs' : too many actual parameters"
4021	"'%Fs' : too few actual parameters"
4022	"'%Fs' : pointer mismatch for actual parameter %d"
4023	"'%Fs' : based pointer passed to unprototyped function : parameter %d"
4024	"'%Fs' : different types for formal and actual parameter %d"
4025	"'%Fs' : based pointer passed to function with variable arguments: parameter %d"
4026	"function declared with formal parameter list"
4027	"function declared without formal parameter list"
4028	"formal parameter %d different from declaration"
4029	"declared formal parameter list different from definition"
4030	"first formal parameter list longer than the second list"
4031	"second formal parameter list longer than the first list"
4032	"formal parameter %d has different type when promoted"
4033	"'%Fs' must return a value"
4034	"sizeof returns 0"
4035	"'%Fs' : no return value"
4036	"unnamed %Fs as actual parameter"
4037	"conflicting ambient class modifiers"
4038	"'%Fs' : illegal ambient class modifier"
4039	"ambient class modifier on reference ignored"
4040	"memory attribute on '%Fs' ignored"
4041	"illegal modifier for 'this' pointer"
4042	"'%Fs' : has bad storage class"
4043	"function specifier used more than once"
4044	"specifier __huge on '%Fs' ignored; can only be applied to array"
4045	"'%Fs' : array bounds overflow"
4046	"'%Fs' : unsized array treated as %Fs"
4047	"'%Fs' : different levels of indirection"
4048	"different declared array subscripts"
4049	"'%Fs' : indirection to different types"
4050	"'%Fs' : different code attributes"
4051	"type conversion; possible loss of data"
4052	"function declarations different; one contains variable arguments"
4053	"one void operand for '?:'"
4054	"function pointer cast to a data pointer"
4055	"data pointer cast to a function pointer"
4056    "overflow in floating point constant arithmetic"
4057    "'%Fs' : indirection to slightly different base types"
4058	"unions are now aligned on alignment requirement, not size"

4067	"unexpected characters following '%Fs' directive - newline expected"
4068	"unknown pragma"

4070	"return of a 'void' expression"
4071	"'%Fs' : no function prototype given"
4072	"'%Fs' : no function prototype on __fastcall function"
4073	"initializers put in library initialization area"
4074	"initializers put in compiler reserved initialization area"
4075	"initializers put in unrecognized initialization area"
4076	"'%Fs' : may be used on integral types only"
4077	"unknown check_stack option"
4078	"case constant '%ld' too big for the type of the switch expression"
4079	"unexpected token '%Fs'"
4080	"expected identifier for segment name; found '%Fs'"
4081	"expected a comma; found '%Fs'"
4082	"expected an identifier; found '%Fs'"
4083	"expected '('; found '%Fs'"
4084	"expected a pragma directive; found '%Fs'"
4085	"expected 'on' or 'off'"
4086	"expected '1', '2', '4', or '8'"
4087	"'%Fs' : declared with 'void' parameter list"
4088	"'%Fs' : pointer mismatch in actual parameter %d, formal parameter %d"
4089	"'%Fs' : different types in actual parameter %d, formal parameter %d"
4090	"'%Fs' : different const or volatile qualifiers"
4091	"no symbols were declared"
4092	"sizeof returns 'unsigned long'"
4093	"unescaped newline in character constant in inactive code"
4094	"untagged '%Fs' declared no symbols"
4095	"expected ')'; found '%Fs'"
4096	"'%Fs' must be used with '%Fs'"
4097	"nonstandard extension : typedef-name '%Fs' used as synonym for class-name '%Fs'"
4098	"'%Fs' : 'void' function returning a value"
4099	"type declared with '%Fs' is defined with '%Fs'"
4100	"'%Fs' : unreferenced formal parameter"
4101	"'%Fs' : unreferenced local variable"
4102	"'%Fs' : unreferenced label"
4103	"'%Fs' : used #pragma pack to change alignment"
4104	"'%Fs' : near data in same_seg pragma; ignored"
4105	"'%Fs' : code modifiers only on function or pointer to function"
4106	"pragma requires an integer between 1 and 127"
4107	"pragma requires an integer between 15 and 255"
4108	"pragma requires an integer between 79 and 132"
4109	"unexpected identifier '%Fs'"
4110	"unexpected token 'number'"
4111	"unexpected token 'string'"
4112	"#line requires an integer between 1 and 32767"
4113	"function parameter lists differed"
4114	"same type qualifier used more than once"
4115	"'%Fs' : named type definition in parentheses"
4116	"unnamed type definition in parentheses"
4117	"macro name '%Fs' is reserved, '%Fs' ignored"
4118	"pragma not supported"
4119	"different bases '%Fs' and '%Fs' specified"
4120	"based/unbased mismatch"
4121	"'%Fs' : alignment of a member was sensitive to packing"
4122	"'%Fs' : alloc_text applicable only to functions with C linkage"
4123	"different base expressions specified"
4124	"__fastcall with stack checking is inefficient"
4125	"decimal digit terminates octal escape sequence"
4126	"'%c' : unknown memory-model command-line option"
4127	"conditional expression is constant"
4128	"storage-class specifier after type"
4129	"'%c' : unrecognized character escape sequence"
4130	"'%Fs' : logical operation on address of string constant"
4131	"'%Fs' : uses old-style declarator"
4132	"'%Fs' : const object should be initialized"
4133	"'%Fs' : incompatible types - 'void' pointer combined with non-'void' pointer"
4134	"conversion between pointers to members of same class"
4135	"conversion between different integral types"
4136	"conversion between different floating-point types"
4137	"'%Fs' : no return value from floating-point function"
4138	"'*/' found outside of comment"
4139	"'0x%lx' : hex escape sequence is out of range"
4140	"'%Fs' : redefined, preceding references may be invalid"  
4141	"'%Fs' : used more than once"
4142	"benign redefinition of type"
4143	"pragma 'same_seg' not supported; use __based allocation"
4144	"'%Fs' : relational expression as switch expression"
4145	"'%Fs' : relational expression as switch expression; possible confusion with '%Fs'"

4146	"unary minus operator applied to unsigned type, result still unsigned"
4147	"'%Fs' : '%Fs' ignored on pointer and reference declarations"
4148	"'%Fs' : DS != SS for '__near' '%Fs'"
4149	"'%Fs' : different ambient model than base class '%Fs'"
4150	"deletion of pointer to incomplete type '%Fs'; no destructor called"
4151	"'%Fs' : operator should be explicitly '%Fs'"
4152	"non standard extension, function/data ptr conversion in expression"
4153	"function/data ptr conversion in expression"
4154	"deletion of an array expression; conversion to pointer supplied"
4155	"deletion of an array expression without using the array form of 'delete'"
4156	"deletion of an array expression without using the array form of 'delete'; array form substituted"

4184	"near call to thunk for '%Fs' in a different segment"

4241	"'%Fs' : member access is restricted"

4245	"'friend' specified for nonexistent function '%Fs'"

4247	"'%Fs' not accessible because '%Fs' uses '%Fs' to inherit from '%Fs'"
4248	"'%Fs' : cannot access '%Fs' member declared in class '%Fs'"
4249	"'%Fs' : no path to '%Fs' member declared in virtual base '%Fs'"
4250	"'%Fs' : inherits '%Fs::%Fs' via dominance"
4251	"'%Fs' : base type '%Fs' should be exported to export %Fs '%Fs'"
4252	"'%Fs' is not defined; cannot specify CV information."

4260	"no override, '%Fs::%Fs' has %Fs 'this' memory model whereas '%Fs::%Fs' has %Fs 'this' memory model"
4261	"no override, '%Fs::%Fs' has %Fs calling convention whereas '%Fs::%Fs' has %Fs calling convention"

4300	"conversion of pointer to nonintegral type"
4301	"truncation during conversion of pointer to integral type"
4302	"truncation during conversion of pointer to function"
4303	"truncation during conversion of pointer to function to pointer to object"
4304	"truncation during pointer conversion"
4305	"truncation during conversion of integral type to pointer"
4306	"conversion of integral type to pointer of greater size"
4307	"'%Fs' : integral constant overflow; result truncated"
4308	"negative integral constant converted to unsigned type"
4309	"'%Fs' : truncation of constant value"

4341	"signed value out of range for enum constant"
4342	"precision lost in initialization of enum constant"

4354	"'%Fs' : initialization of reference to member requires a temporary variable"
4355	"'this' : used in base member initializer list"

4385	"%Fs the '%Fs' in base '%Fs'"
4386	"%Fs to the '%Fs' in base '%Fs'"

4401	"'%Fs' : member is bit field"
4402	"must use PTR operator"
4403	"illegal PTR operator"
4404	"period on directive ignored"
4405	"'%Fs' : identifier is reserved word"
4406	"operand on directive ignored"

4409	"illegal instruction size"
4410	"illegal size for operand"
4411	"'%Fs' : symbol resolves to displacement register"

4414	"'%Fs' : short jump to function converted to near"

4500	"'%Fs' : class has private/protected data members; user-defined constructor advised"
4501	"'%Fs' : use of '::' unnecessary here"
4502	"'linkage' requires use of keyword 'extern'"

4505	"'%Fs' : unreferenced local function has been removed"
4506	"no definition for inline function '%Fs'"
4507	"explicit linkage specified after default linkage was used"
4508	"'%Fs' : function should return a value; 'void' return type assumed"

4510	"'%Fs' : default constructor could not be generated"
4511	"'%Fs' : copy constructor could not be generated"
4512	"'%Fs' : assignment operator could not be generated"
4513	"'%Fs' : destructor could not be generated"

4520	"'%Fs' : multiple default constructors specified"
4521	"'%Fs' : multiple copy constructors specified"
4522	"'%Fs' : multiple assignment operators specified"
4523	"'%Fs' : multiple destructors specified"
4524	"'%Fs' : redundant use of 'friend' on destructor"
4525	"'%Fs' : redundant use of 'friend' on constructor"

4527	"instances of %Fs '%Fs' can never be destroyed - user-defined destructor required"
4528	"illegal 'pure' syntax, must be '= 0'"

4607	"'%Fs' : must be initialized in constructor base/member initializer list"

4610	"%Fs '%Fs' can never be instantiated - user defined constructor required"

4612	"bad #pragma syntax, pragma ignored"
4613	"'%Fs' : class of segment cannot be changed"
4614	"'%Fs' : varargs parameters with this type were promoted"	
4615	"#pragma warning : unknown user warning type"
4616	"#pragma warning : warning number '%d' out of range, must be between '%d' and '%d'"
4617	"#pragma warning : invalid warning number"

4620	"no postfix form of 'operator ++' found for type '%Fs', using prefix form"
4621	"no postfix form of 'operator --' found for type '%Fs', using prefix form"
4622	"Overwriting debug information formed during creation of the precompiled header in object file: '%s'"

4630	"'%Fs' : '%Fs' storage class specifier illegal on member definition"

4650	"debugging information not in precompiled header; only global symbols from the header will be available"
4651	"'/D%s' specified for precompiled header but not for current compile"
4652    "command-line option '%Fs' inconsistant with precompiled header; PCH option ignored"

4706	"assignment within conditional expression" 

4710	"'%Fs' : function not expanded" 

4726	"'%c' : unknown memory model command-line option"
4727	"conditional expression is constant"

4741	"/Oq option ignored for __fastcall function '%Fs'"

4746	"'%Fs' : unsized array given size %Fs"

4756	"overflow in constant arithmetic"	

4758	"address of automatic (local) variable taken, DS != SS" 
4759	"segment lost in conversion"	

4761	"integral size mismatch in argument : conversion supplied"	
4762	"near/far mismatch in argument : conversion supplied"	

4769	"conversion of near pointer to long integer"	

4785	"near call to '%Fs' in different segment" 

4788    "'%Fs' : identifier was truncated to '%d' characters"

4793    "native code generated for p-code function '%Fs' with inline assembly"

4900	"Il mismatch between '%s' version '%ld' and '%s' version '%ld'"






















4000	"UNKNOWN WARNING\n\t\tContact Microsoft Product Support Services"
						

2001	"newline in constant"
2002	"invalid wide-character constant"
2003	"expected 'defined id'"
2004	"expected 'defined(id)'"
2005	"#line expected a line number, found '%Fs'"
2006	"#include expected a file name, found '%Fs'"
2007	"#define syntax"
2008	"'%c' : unexpected in macro definition"
2009	"reuse of macro formal '%Fs'"
2010	"'%c' : unexpected in macro formal parameter list"
2011	"'%Fs' : '%Fs' type redefinition"
2012	"missing name following '<'"
2013	"missing '>'"
2014	"preprocessor command must start as first nonwhite space"
2015	"too many characters in constant"
2016	"no closing single quotation mark"
2017	"illegal escape sequence"
2018	"unknown character '0x%x'"
2019	"expected preprocessor directive, found '%c'"
2020	"'%Fs' : '%Fs' member redefinition"
2021	"expected exponent value, not '%c'"
2022	"'%ld' : too big for character"
2023	"divide by 0"
2024	"mod by 0"
2025	"'%s' : enum/struct/union type redefinition"		
2026	"string too big, trailing characters truncated"
2027	"use of undefined type '%Fs'"
2028	"struct/union member must be inside a struct/union"
2029	"left of '%s' specifies undefined class/struct/union '%Fs'"
2030	"'%Fs' : struct/union member redefinition"		
2031	"'%Fs' : function cannot be struct/union member"	
2032	"'%Fs' : function cannot be member of %Fs '%Fs'"
2033	"'%Fs' : bit field cannot have indirection"
2034	"'%Fs' : type of bit field too small for number of bits"
2035	"struct/union '%Fs' : unknown size"			
2036	"'%Fs' : unknown size"
2037	"left of '%s' specifies undefined struct/union '%Fs'"
2038	"'%s' : not struct/union member"			
2039	"'%Fs' : is not a member of '%Fs'"
2040	"'%Fs' : different levels of indirection"
2041	"illegal digit '%c' for base '%d'"
2042	"signed/unsigned keywords mutually exclusive"
2043	"illegal break"
2044	"illegal continue"
2045	"'%Fs' : label redefined"
2046	"illegal case"
2047	"illegal default"
2048	"more than one default"
2049	"case value '%ld' already used"
2050	"nonintegral switch expression"
2051	"case expression not constant"
2052	"case expression not integral"
2053	"'%Fs' : wide string mismatch"
2054	"expected '(' to follow '%Fs'"
2055	"expected formal parameter list, not a type list"
2056	"illegal expression"
2057	"expected constant expression"
2058	"constant expression is not integral"
2059	"syntax error : '%Fs'"
2060	"syntax error : end-of-file found"
2061	"syntax error : identifier '%Fs'"
2062	"type '%Fs' unexpected"
2063	"'%Fs' : not a function"
2064	"term does not evaluate to a function"
2065	"'%Fs' : undeclared identifier"
2066	"cast to function type is illegal"
2067	"cast to array type is illegal"
2068	"illegal cast"
2069	"cast of 'void' term to non-'void'"
2070	"illegal sizeof operand"
2071	"'%Fs' : illegal storage class"
2072	"'%Fs' : initialization of a function"
2073	"'%Fs' : partially initialized array requires a default constructor"
2074	"'%Fs' : '%Fs' initialization needs curly braces"
2075	"'%Fs' : array initialization needs curly braces"
2076	"'%Fs' : struct/union initialization needs curly braces" 
2077	"nonscalar field initializer '%Fs'"
2078	"too many initializers"
2079	"'%Fs' uses undefined class/struct/union '%Fs'"
2080	"illegal __far __fastcall function or __saveregs function"
2081	"'%Fs' : name in formal parameter list illegal"
2082	"redefinition of formal parameter '%Fs'"
2083	"%Fs comparison illegal"
2084	"function '%Fs' already has a body"
2085	"'%Fs' : not in formal parameter list"
2086	"'%Fs' : redefinition"
2087	"'%Fs' : missing subscript"
2088	"'%Fs' : illegal for %Fs"
2089	"'%Fs' : '%Fs' too large"
2090	"function returns array"
2091	"function returns function"
2092	"array element type cannot be function"
2093	"cannot use address of automatic variable as static initializer"
2094	"label '%Fs' was undefined"
2095	"'%Fs' : actual has type 'void' : parameter %d"
2096	"struct/union comparison illegal"		
2097	"illegal initialization"
2098	"nonaddress expression"
2099	"nonconstant initializer"
2100	"illegal indirection"
2101	"'%Fs' on constant"
2102	"'%Fs' requires lvalue"
2103	"'%Fs' on register variable"
2104	"'%Fs' on bit field ignored"
2105	"'%Fs' needs lvalue"
2106	"'%Fs' : left operand must be lvalue"
2107	"illegal index, indirection not allowed"
2108	"nonintegral index"
2109	"subscript on nonarray"
2110	"pointer + pointer"
2111	"pointer + nonintegral value"
2112	"illegal pointer subtraction"
2113	"pointer subtracted from nonpointer"
2114	"'%Fs' : pointer on left; needs integral value on right"
2115	"'%Fs' : incompatible types"
2116	"function parameter lists differed"
2117	"'%Fs' : array bounds overflow"
2118	"negative subscript"
2119	"typedef types both define indirection"
2120	"'void' illegal with all types"
2121	"'%Fs' : bad %Fs operand"
2122	"'%Fs' : prototype parameter in name list illegal"
2123	"'%Fs' : cannot call __fastcall function '%Fs' from p-code"
2124	"divide or mod by zero"
2125	"'%Fs' : allocation exceeds 64K"	
2126	"'%Fs' : incorrect operand"
2127	"parameter allocation exceeds 32K"	
2128	"'%Fs' : alloc_text/same_seg applicable only to functions with C linkage"
2129	"static function '%Fs' declared but not defined"
2130	"#line expected a string containing the file name, found '%Fs'"
2131	"more than one memory attribute"
2132	"syntax error : unexpected identifier"
2133	"'%Fs' : unknown size"
2134	"'%Fs' : struct/union too large"	
2135	"'%Fs' : illegal bit field operation"
2136	"'%Fs' : prototype must have parameter types"
2137    "empty character constant"
2138    "illegal to define an enumeration without any members"
2139	"type following '%s' is illegal"
2140	"parameter cannot be function type"
2141	"value out of range for enum constant"
2142	"function declarations differ, variable parameters specified only in one of them"
2143	"syntax error : missing '%Fs' before '%Fs'"
2144	"syntax error : missing '%Fs' before type '%Fs'"
2145	"syntax error : missing '%Fs' before identifier"
2146	"syntax error : missing '%Fs' before identifier '%Fs'"
2147	"'%Fs' : const array must be fully initialized"
2148	"array too large"
2149	"'%Fs' : named bit field cannot have zero width"
2150	"'%Fs' : bit field must have type 'int', 'signed int', or 'unsigned int'"
2151	"more than one language attribute"
2152	"'%Fs' : pointers to functions with different attributes"
2153	"hex constants must have at least one hex digit"
2154	"'%Fs' : does not refer to a segment name"

2156	"pragma must be outside function"
2157	"'%Fs' : must be declared before use in pragma list"
2158	"'%Fs' : is a function"
2159	"more than one storage class specified"
2160	"## cannot occur at the beginning of a macro definition"
2161	"## cannot occur at the end of a macro definition"
2162	"expected macro formal parameter"
2163	"'%Fs' : not available as an intrinsic function"
2164	"'%Fs' : intrinsic function not declared"
2165	"'%Fs' : cannot modify pointers to data"
2166	"lvalue specifies const object"
2167	"'%Fs' : too many actual parameters for intrinsic function"
2168	"'%Fs' : too few actual parameters for intrinsic function"
2169	"'%Fs' : intrinsic function, cannot be defined"
2170	"'%Fs' : not declared as a function, cannot be intrinsic"
2171	"'%Fs' : illegal operand"
2172	"'%Fs' : actual parameter is not a pointer : parameter %d"
2173	"'%Fs' : actual parameter is not a pointer : parameter %d, parameter list %d"
2174	"'%Fs' : actual parameter has type 'void' : parameter %d, parameter list %d"

2176	"static huge data not supported by '%Fs'"	 
2177	"constant too big"
2178	"'%Fs' : storage class for same_seg variables must be extern"
2179	"'%Fs' : was used in same_seg, but storage class is no longer extern"
2180	"controlling expression has type 'void'"

2182	"'%Fs' : has type 'void'"

2184	"illegal return of a 'void' value"
2185	"'%Fs' : illegal based allocation"
2186	"'%Fs' : illegal operand of type 'void'"
2187	"cast of near function pointer to far function pointer"
2188	"'%ld' : too big for wide character"
2189	"#error : %Fs"
2190	"first parameter list longer than second"
2191	"second parameter list longer than first"
2192	"parameter '%d' declaration different"
2193	"'%Fs' : already in a segment"
2194	"'%Fs' : is a text segment"
2195	"'%Fs' : is a data segment"
2197	"'%Fs' : too many actual parameters"
2198	"'%Fs' : too few actual parameters"
2199	"syntax error : found '%Fs (' at global scope. (was a declaration intended?)"
2200	"'%Fs' : function has already been defined"
2201	"'%Fs' : cannot export static declarations"
2202	"'%Fs' : not all control paths return a value"
2203	"delete operator cannot specify bounds for an array"
2204	"'%Fs' : parenthesized type definition"
2205	"'%Fs' : cannot initialize extern block scoped variables"
2206	"'%Fs' : typedef cannot be used for function definition"
2207	"'%Fs' in struct/union '%Fs' has a zero-sized array"	
2208	"'%Fs' : no members defined using this type"
2209	"type cast in __based construct must be (__segment)"
2210	"'%Fs' : must be near/far data pointer"
2211	"(__segment) applied to function identifier '%Fs'"
2212	"'%Fs' : __based not available for pointers to functions"
2213	"'%Fs' : illegal argument to __based"
2214	"pointers based on 'void' require the use of :>"
2215	":> operator only for objects based on 'void'"
2216	"'%Fs' cannot be used with '%Fs'"
2217	"'%Fs' must be used with '%Fs'"
2218	"type in __based construct must be 'void'"
2219	"syntax error : type qualifier must be after '*'"
2220	"warning treated as error - no object file generated"
2221	"'.' : left operand points to class/struct/union, use '->'" 
2222	"'->' : left operand has struct/union type, use '.'"	
2223	"left of '->%Fs' must point to class/struct/union"
2224	"left of '.%Fs' must have class/struct/union type"
2225    "'%Fs' : function allocation must be in a named segment"
2226	"syntax error : unexpected type '%Fs'"
2227	"left of '->%Fs' must point to class/struct/union"
2228	"left of '.%Fs' must have class/struct/union type"
2229	"%Fs '%Fs' has an illegal zero-sized array"
2230	"'%Fs' : indirection to different types"
2231	"'.' : left operand points to '%Fs', use '->'"
2232	"'->' : left operand has '%Fs' type, use '.'"

2234	"arrays of references are illegal"
2235	"';' in formal parameter list"
2236	"unexpected '%Fs' '%Fs'"
2237	"unexpected %Fs '%Fs'"
2238	"unexpected token[s] preceding '%s'"
2239	"unexpected token '%Fs' following declaration of '%Fs'"
2240	"unexpected '%Fs' following formal list. (only modifiers are allowed.)"
2241	"'%Fs' : member access is restricted"

2244	"'%Fs' : unable to resolve function overload"
2245	"nonexistent function '%Fs' specified as friend"
2246	"'%Fs' : illegal static data member in locally defined class"
2247	"'%Fs' not accessible because '%Fs' uses '%Fs' to inherit from '%Fs'"
2248	"'%Fs' : cannot access '%Fs' member declared in class '%Fs'"
2249	"'%Fs' : no accessible path to '%Fs' member declared in virtual base '%Fs'"
2250	"'%Fs' : ambiguous inheritance of '%Fs::%Fs'"

2252	"'%Fs' : pure specifier can only be specified for functions"
2253	"'%Fs' : pure specifier only applies to virtual function -- specifier ignored"
2254	"'%Fs' : pure specifier not allowed on friend functions"
2255	"'%Fs' : a friend function can only be declared in a class"
2256	"illegal use of friend specifier on '%Fs'"
2257	"p-code generation pragma not allowed without /Oq"
2258	"illegal pure syntax, must be '= 0'"
2259	"'%Fs' : illegal attempt to instantiate abstract class"
2260	"function pointer cast to a data pointer "
2261	"data pointer cast to a function pointer"
2262	"'%Fs' : cannot be destroyed"
2263	"function returns pointer based on __self"
2264	"'%Fs' : error in function definition or declaration; function not called"
2265	"'%Fs' : reference to a zero sized array is illegal"
2266	"'%Fs' : reference to a nonconstant bounded array is illegal"
2267	"'%Fs' : block scoped static functions are illegal"
2268	"'%Fs' : different const or volatile qualifiers"
2269	"'%Fs' : different ambient model than base class '%Fs'"
2270	"'%Fs' : modifiers not allowed on nonmember functions"
2271	"'%Fs' : new/delete cannot have formal list modifiers"
2272	"'%Fs' : modifiers not allowed on static member functions"
2273	"'%Fs' : illegal as right side of '->' operator"
2274	"'%Fs' : illegal as right side of '.' operator"
2275	"'%Fs' : illegal use of this type as an expression"
2276	"illegal address of bound member function expression"
2277	"'%Fs' : cannot take the address of a constructor"
2278	"'%Fs' : no function with C linkage found"
2279	"cannot use braces to initialize default arguments"
2280	"missing '{' before identifier '%Fs'?"
2281	"'%Fs' : is not a function, but contains <function returning>. '%Fs' is unexpected."
2282	"'%Fs' is followed by '%Fs'. (missing ','?)"
2283	"'%Fs' : pure specifier not allowed on un-named %Fs"

2290	"C++ '%Fs' syntax is reserved for future use"

2350	"'%Fs' is not a static member"
2351	"obsolete C++ constructor initialization syntax"
2352	"'%Fs::%Fs' : illegal call of non-static member function"
2353	"'%Fs' : improper use of constructor initializers"
2354	"'%Fs' : initialization of reference member requires a temporary variable"
2355	"'this' : can only be referenced inside non-static member functions"
2356	"initialization segment must not change during translation unit"

2360	"Initialization of '%Fs' is skipped by 'case' label"
2361	"Initialization of '%Fs' is skipped by 'default' label"
2362	"Initialization of '%Fs' is skipped by 'goto %Fs'"

2370	"'%Fs' : redefinition; different storage class"
2371	"'%Fs' : redefinition; different basic types"
2372	"'%Fs' : redefinition; different types of indirection"
2373	"'%Fs' : redefinition; different type modifiers"
2374	"'%Fs' : redefinition; multiple initialization"
2375	"'%Fs' : redefinition; different linkage"

2377	"'%Fs' : redefinition; typedef cannot be overloaded with any other symbol"
2378	"'%Fs' : redefinition; symbol cannot be overloaded with a typedef"
2379	"formal parameter %d has different type when promoted"
2380	"type[s] preceding '%Fs'. (constructor with return type, or illegal redefinition of current class-name?)"

2385	"'%Fs::%Fs' is ambiguous"
2386	"ambiguous conversion from '%Fs*' to '%Fs*'"
2387	"ambiguous conversion from '%Fs&' to '%Fs&'"

2390	"'%Fs' : incorrect storage class '%Fs'"

2400	"inline syntax error in '%Fs'; found '%Fs'"
2401	"'%Fs' : register must be base in '%Fs'"
2402	"'%Fs' : register must be index in '%Fs'"
2403	"'%Fs' : register must be base/index in '%Fs'"
2404	"'%Fs' : illegal register in '%Fs'"
2405	"illegal short forward reference with offset"
2406	"'%Fs' : name undefined in '%Fs'"
2407	"illegal 'float' register in '%Fs'"
2408	"illegal type on PTR operator in '%Fs'"
2409	"illegal type used as operator in '%s'"
2410	"'%Fs' : ambiguous member name in '%Fs'"
2411	"'%Fs' : illegal struct/union member in '%Fs'"
2412	"'%Fs' : case-insensitive label redefined"
2413	"'%Fs' : illegal align size"
2414	"illegal number of operands"
2415	"improper operand type"
2416	"'%Fs' : illegal opcode for processor"
2417	"divide by zero in '%Fs'"
2418	"'%Fs' : not in a register"
2419	"mod by zero in '%Fs'"
2420	"'%Fs' : illegal symbol in %Fs"
2421	"PTR operator used with register in '%Fs'"
2422	"illegal segment override in '%Fs'"
2423	"'%ld' : illegal scale"
2424	"'%Fs' : improper expression in '%Fs'"
2425	"'%Fs' : nonconstant expression in '%Fs'"
2426	"'%Fs' : illegal operator in '%Fs'"
2427	"'%Fs' : jump referencing label is out of range"	

2429	"'%Fs' : illegal far label reference"
2430	"more than one index register in '%Fs'"
2431	"illegal index register in '%Fs'"
2432	"illegal reference to 16-bit data in '%Fs'"
2433	"'%Fs' : '%Fs' not permitted on data declarations"
2434	"'%Fs' : cannot convert default argument from '%Fs' to '%Fs'"

2436	"'%Fs' : cannot initialize member functions"
2437	"'%Fs' : already initialized"
2438	"'%Fs' : cannot initialize static class data via constructor"
2439	"'%Fs' : member could not be initialized"
2440	"'%Fs' : cannot convert from '%Fs' to '%Fs'"

2442	"p-code expression too complex for setjmp or Catch"
2443	"operand size conflict"

2446	"'%Fs' : no conversion between '%Fs' and '%Fs'"
2447	"missing function header (old-style formal list?)"
2448	"'%Fs' : function-style initializer appears to be a function definition"

2450	"switch expression of type '%Fs' is illegal"
2451	"conditional expression of type '%Fs' is illegal"

2458	"'%Fs' : redefinition within definition"
2459	"'%Fs' : is being defined; cannot add as an anonymous member"
2460	"'%Fs' : uses '%Fs', which is being defined"
2461	"'%Fs' : constructor syntax missing formal parameters"
2462	"'%Fs' : cannot define a type in a 'new-expression'"
2463	"cannot define an anonymous type in a 'new-expression'"
2464	"'%Fs' : cannot use 'new' to allocate a reference"
2465	"cannot define an anonymous type inside parentheses"
2466	"cannot allocate an array of constant size 0"
2467	"illegal declaration of anonymous '%Fs'"

2500	"'%Fs' : '%Fs' is already a direct base class"
2501	"'%Fs' : missing decl-specifiers"
2502	"'%Fs' : too many access modifiers on the base class"
2503	"'%Fs' : base classes cannot contain zero-sized arrays"
2504	"'%Fs' : base class undefined"
2505	"'%Fs' : is not a legal base class"
2506	"'%Fs::%Fs' : ambiguous"
2507	"'%Fs' : too many virtual modifiers on the base class"
2508	"'%Fs' : access denied"
2509	"'%Fs' : member function not declared in '%Fs'"
2510	"'%Fs' : left of '::' must be a class/struct/union"
2511	"'%Fs' : overloaded member function not found in '%Fs'"
2512	"'%Fs' : no appropriate default constructor available"
2513	"'%Fs' : decl-specifier is missing a declarator before '='"
2514	"'%Fs' : class has no constructors"
2515	"'%Fs' : not in class '%Fs'"

2517	"'%Fs' : right of '::' is undefined"

2519	"cannot convert '%Fs *' to '%Fs *'"

2523	"'%Fs::~%Fs' : destructor tag mismatch"
2524	"'%Fs' : destructors must have a 'void' formal parameter list"

2527	"'%Fs' : array of references must be fully initialized"
2528	"illegal pointer to reference"
2529	"illegal reference to a reference"
2530	"'%Fs' : references must be initialized"
2531	"'%Fs' : reference to a bit field illegal"
2532	"'%s' : cannot modify references"
2533	"'%Fs' : constructors not allowed a return type"
2534	"'%Fs' : constructor cannot return a value"
2535	"'%Fs' : member function already defined or declared"
2536	"'%Fs::%Fs' : cannot specify explicit initializer for arrays"
2537	"'%Fs' : illegal linkage specification"
2538	"new : cannot specify initializer for arrays"
2539	"new : '%Fs' no default constructor to initialize arrays of objects"
2540	"nonconstant expression as array bound"
2541	"delete : cannot delete nonpointer objects"
2542	"'%Fs' : class object has no constructor for initialization"
2543	"expected ']' for operator '[]'"
2544	"expected ')' for operator '()'"
2545	"'%Fs' : unable to find overloaded operator"
2546	"'%Fs' : illegal mix of 'void' pointer with non-'void' pointer"
2547	"illegal cast of overloaded function"
2548	"'%Fs::%Fs' : missing default parameter for parameter %s"
2549	"user-defined conversion cannot specify a return type"

2551	"'void *' type needs explicit cast to non-'void' pointer type"
2552	"'%Fs' : non-aggregates cannot be initialized with initializer list"
2553	"no legal conversion of return value to return type '%Fs'"
2555	"'%Fs::%Fs' : overriding virtual function differs from '%Fs::%Fs' only by return type"
2556	"'%Fs' : overloaded functions only differ by return type"
2557	"'%Fs' : non-public members cannot be initialized without a constructor"
2558	"'%Fs' : no copy constructor available"
2559	"'%Fs' : no match for specified operator"
2560	"'%Fs' : overloaded function differs only by calling convention/memory model"
2561	"'%Fs' : function must return a value"
2562	"'%Fs' : 'void' function returning a value"
2563	"mismatch in formal parameter list"
2564	"formal/actual parameters mismatch in call through pointer to function"
2565	"'::%Fs' was previously declared as a global function"
2566	"overloaded function in conditional expression"

2568	"'%Fs' : unable to resolve function overload '%Fs'"
2569	"'%Fs' : union cannot be used as a base class"
2570	"'%Fs' : union cannot have base classes"
2571	"'%Fs' : union cannot have virtual function '%Fs'"
2572	"'%Fs::%Fs' : redefinition of default parameter : parameter %s"
2573	"'%Fs' : simple type cast must have exactly one expression"
2574	"'%Fs' : illegal static destructor declaration"
2575	"'%Fs' : only member functions and bases can be virtual"
2576	"'%Fs' : virtual used for static member function"
2577	"'%Fs' : destructor cannot return a value"

2579	"'%Fs::%Fs(%s)' : parameter list not sufficiently different to '%Fs::%Fs(%s)'"
2580	"redefinition of class name '%Fs'"
2581	"'%Fs' : static 'operator =' function is illegal"
2582	"'%Fs' : 'operator =' function is unavailable"
2583	"'%Fs' : illegal const/volatile 'this' pointer used for constructors/destructors"
2584	"'%Fs' : direct base '%Fs' is inaccessible; already a base of '%Fs'"
2585	"explicit conversion to '%Fs' is ambiguous"
2586	"incorrect user-defined conversion syntax : illegal indirections"
2587	"'%Fs' : illegal use of local variable as default parameter"
2588	"'::~%Fs' : illegal global destructor"
2589	"'%Fs' : illegal token on right side of '::'"
2590	"'%Fs' : ambiguous user-defined conversions in switch expression"
2591	"'%Fs' : ambiguous user-defined conversions in conditional expression"
2592	"no legal conversion of initialization expression to type '%Fs'"
2593	"'operator %Fs' is ambiguous"
2594	"'%Fs' : ambiguous conversions from '%Fs' to '%Fs'"
2595	"'%Fs' : qualified name already has a constructor"
2596	"'%Fs' : qualified name already has a destructor"
2597	"'%Fs' : does not specify an object"
2598	"linkage specification must be at global scope"
2599	"'%Fs' : local functions are not supported"
2601	"functions cannot be defined in local classes"
2602	"'%Fs::%Fs' is not a member of a base of '%Fs'"
2603	"illegal access declaration: '%Fs' is not a direct base of '%Fs'"
2604	"cannot declare %Fs access to %Fs member '%Fs::%Fs'"
2605	"overloaded functions '%Fs::%Fs' do not have same access"
2606	"'%Fs::%Fs': illegal private access declaration"
2607	"'%Fs' : cannot implicitly convert a '%Fs' to a non-const '%Fs'"
2608	"illegal reference cast - operand not an lvalue"

2610	"%Fs '%Fs' can never be instantiated; user defined constructor is required"
2611	"'%Fs' : illegal following '~' (expected identifier)"
2612	"trailing '%Fs' illegal in base/member initializer list"
2613	"trailing '%Fs' illegal in base class list"
2614	"'%Fs' : illegal member initialization: '%Fs' is not a base or member"
2615	"memory attribute must appear before class name in pointer to member"
2617	"'%Fs' : inconsistent return statement"
2618	"'%Fs' : inconsistent return statement"
2619	"union '%Fs' : can not have static member variable '%Fs'"
2620	"union '%Fs' : member '%Fs' has default constructor"
2621	"union '%Fs' : member '%Fs' has copy constructor"
2622	"union '%Fs' : member '%Fs' has assignment operator"
2623	"union '%Fs' : member '%Fs' has destructor"
2624	"'%Fs' : references to 'void' are illegal"
2625	"anonymous union did not declare any non-static data members"
2626	"anonymous union defines %Fs member '%Fs'"
2627	"member function defined in unnamed class"
2628	"'%Fs' followed by '%Fs' is illegal. (did you forget a ';'?)"
2629	"unexpected '%s ('"
2630	"'%Fs' found in what should be a comma separated list"
2631	"'%Fs' : destructors not allowed a return type"
2632	"'%Fs' followed by '%Fs' is illegal"
2633	"'%Fs' : 'inline' is the only legal storage class for constructors"
2634	"'&%Fs::%Fs' : pointer to reference member is illegal"
2635	"cannot convert a '%Fs*' to a '%Fs*'; conversion from a virtual base class is implied"
2636	"pointer to reference member is illegal"
2637	"'%s' : cannot modify pointers to data members"
2638	"'%Fs' : memory model modifier illegal on pointer to data member"
2639	"cannot use pointer to member expression &%Fs::%Fs - base '%Fs' is inherited as virtual"
2640	"cannot convert a pointer to member across a virtual inheritance path"
2641	"illegal pointer to member cast across virtual inheritance path"
2642	"cast to pointer to member must be from related pointer to member"
2643	"illegal cast from pointer to member"
2644	"basis class '%Fs' for pointer to member has not been defined"
2645	"no qualified name for pointer to member (found ':: *')"
2646	"global anonymous unions must be declared static"
2647	"'%Fs' : cannot dereference a '%Fs' on a '%Fs'"
2648	"'%Fs' : use of non-static member as default parameter"
2649	"'%Fs' : is not a '%Fs'"
2650	"'%Fs' : cannot be a virtual function"

2652	"'%Fs' : illegal copy constructor: first parameter must not be a '%Fs'"
2653	"'%Fs' : is not a class name"
2654	"'%Fs' : attempt to access member outside a member function"
2655	"'%Fs' : definition or redeclaration illegal in current scope"
2656	"'%Fs' : function not allowed as a bit field"
2657	"'%Fs::*' found a the start of a statement. (did you forget to specify a type?)"
2658	"multiple conversions : %Fs(%Fs) and %Fs::operator %Fs()"
2659	"'%Fs' : overloaded function as left operand"
2660	"'%Fs' : function does not take %d parameters"
2661	"'%Fs' : no overloaded function takes %d parameters"
2662	"'%Fs' : cannot convert 'this' pointer from '%Fs' to '%Fs'"
2663	"'%Fs' : %d overloads have no legal conversion for 'this' pointer"
2664	"'%Fs' : cannot convert parameter %d from '%Fs' to '%Fs'"
2665	"'%Fs' : %d overloads have no legal conversion for parameter %d"
2666	"'%Fs' : %d overloads have similar conversions"
2667	"'%Fs' : none of %d overload have a best conversion"
2668	"'%Fs' : ambiguous call to overloaded function"

2671	"'%Fs' : static member functions do not have 'this' pointers"
2672	"'%Fs' : new/delete member functions do not have 'this' pointers"
2673	"'%Fs' : global functions do not have 'this' pointers"
2674	"'%Fs' : no acceptable conversions from '%Fs' to '%Fs'"
2675	"unary '%Fs' : '%Fs' does not define this operator or a conversion to a type acceptable to the builtin operator"
2676	"binary '%Fs' : '%Fs' does not define this operator or a conversion to a type acceptable to the builtin operator"
2677	"binary '%Fs' : no global operator defined which takes type '%Fs' (or there is no acceptable conversion)"

2701	"'%Fs' : __oldcall function defined with varargs"	
2702	"'%Fs' : __try may not appear in termination block"	

2704	"'%Fs' : __va_start intrinsic only allowed in varargs"	
2705	"'%Fs' : illegal jump into __try scope"	

2707	"'%Fs' : bad context for intrinsic function"	

2710	"cannot delete a pointer to a const object"
2711	"cannot delete a pointer to a function"

2720	"'%Fs' : '%Fs' storage class specifier illegal on members"
2721	"'%Fs' : storage class specifier illegal between operator keyword and type"
2722	"'::%Fs' : illegal following operator command; use 'operator %Fs'"
2723	"'%Fs' : '%Fs' storage class specifier illegal on function definition"

2730	"'%Fs' : cannot be a base class of itself"

2732	"linkage specification contradicts earlier specification for %Fs"
2733	"second C linkage of overloaded function '%Fs' not allowed"
2734	"'%Fs' : non-extern const object must be initialized"
2735	"'%Fs' keyword is not permitted in formal parameter type specifier"
2736	"'%Fs' keyword is not permitted in cast"
2737	"'%Fs' : base class '%Fs' must be exported"

2750	"'%Fs' : 'const T' to 'T' : '%Fs' to '%Fs'"
2751	"'%Fs' : 'volatile T' to 'T' : '%Fs' to '%Fs'"
2752	"'%Fs' : 'const T *' to 'T *' : '%Fs' to '%Fs'"
2753	"'%Fs' : 'volatile T *' to 'T *' : '%Fs' to '%Fs'"
2754	"'%Fs' : 'const T **' to 'T **' : '%Fs' to '%Fs'"
2755	"'%Fs' : 'volatile T **' to 'T **' : '%Fs' to '%Fs'"
2756	"'%Fs' : 'memory model mismatch' : '%Fs' to '%Fs'"
2757	"'%Fs' : 'language modifier mismatch: '%Fs' to '%Fs'"
2758	"'%Fs' : must be initialized in constructor base/member initializer list"

2800	"'operator %Fs' cannot be overloaded"
2801	"'operator %Fs' must be a%Fs member"
2802	"static member 'operator %Fs' has no formal parameters"
2803	"'operator %Fs' must have at least one formal parameter of class type"
2804	"binary 'operator %Fs' has too many parameters"
2805	"binary 'operator %Fs' has too few parameters"
2806	"'operator %Fs' has too many formal parameters"
2807	"the second formal parameter to postfix 'operator %Fs' must be 'int'"
2808	"unary 'operator %Fs' has too many formal parameters"
2809	"'operator %Fs' has no formal parameters"
2810	"second formal parameter for 'operator delete' must be 'unsigned int'"
2811	"too many formal parameters for based form of 'operator delete'"
2812	"second formal parameter required for based form of 'operator delete'"
2813	"too many formal parameters for non-based 'operator delete'"
2814	"second actual parameter for based form of 'operator delete' must be '__based(void)*'"
2815	"first actual parameter for based form of 'operator delete' must be '__segment'"
2816	"alternative form of 'operator delete' must be a member"
2817	"return type for 'operator delete' must be 'void'"
2818	"incorrect return type for 'operator ->'"
2819	"recursive return type for 'operator ->'"
2820	"second formal parameter required for based form of 'operator new'"
2821	"first formal parameter to 'operator new' must be 'unsigned int'"
2822	"second formal parameter for __huge form of 'operator new' must be 'unsigned int'"
2823	"return type for based form of 'operator new' must be 'void __based(void)*'"
2824	"return type for 'operator new' must be 'void *'"
2825	"first formal parameter for huge form of 'operator new' must be 'unsigned long'"
2826	"second formal parameter required for __huge form of 'operator new'"
2827	"'operator %s' cannot be globally overridden with unary form"
2828	"'operator %s' cannot be globally overridden with binary form"
2829	"'operator %Fs' cannot have a variable parameter list"
2830	"only placement parameters to 'operator new' can have default values"
2831	"'operator %Fs' may not have default parameters"

2833	"'operator %Fs' is not a recognized operator or type"
2834	"'operator %Fs' must be globally qualified"
2835	"user-defined conversion '%Fs' takes no formal parameters"
2836	"cannot export '%Fs': a previous declaration did not export it"
2837	"'%Fs' : illegal local static variable in exported inline function"
2838	"illegal qualified name in member declaration"

2850	"#pragma hdrstop cannot be nested in a function or definition"
2851	"#pragma hdrstop required for /Yu command-line option without filename"
2852	"'%Fs' is not a valid precompiled header file"
2853	"'%Fs' is not a precompiled header file created with this compiler"
2854	"syntax error in #pragma hdrstop"
2855    "command-line option '%Fs' inconsistant with precompiled header"
2856	"#pragma hdrstop cannot be inside an #if block"
2857    "'#include' statement specified with the /Yc%Fs command-line option was not found in the source file"

2000	"UNKNOWN ERROR\n\t\tContact Microsoft Product Support Services"

		

1001	"INTERNAL COMPILER ERROR\n\t\t(compiler file '%s', line %d)\n\t\tContact Microsoft Product Support Services"

1003	"error count exceeds %d; stopping compilation"
1004	"unexpected end of file found"
1005	"string too big for buffer"
1006	"write error on compiler-generated file"
1007	"unrecognized flag '%Fs' in '%Fs'"
1008	"no input file specified"
1009	"compiler limit : macros nested too deeply"
1010	"unexpected end of file while looking for precompiled header directive"
1011	"compiler limit : '%Fs' : macro definition too big"
1012	"unmatched parenthesis : missing '%c'"
1013	"compiler limit : too many open parentheses"
1014    "too many include files : depth = %d"
1015	"compiler limit : too many segments"
1016	"#if[n]def expected an identifier"
1017	"invalid integer constant expression"
1018	"unexpected #elif"
1019	"unexpected #else"
1020	"unexpected #endif"
1021	"invalid preprocessor command '%Fs'"
1022	"expected #endif"
1023	"cannot open source file '%Fs'"
1024	"cannot open include file '%Fs'"
1025	"compiler terminated by user"	
1026	"parser stack overflow, program too complex"
1027	"DGROUP data allocation exceeds 64K"	
1028	"'%s' : segment allocation exceeds 64K" 
1029	"there are > 512 bytes of arguments"
1030	"there are > 512 bytes of local variables"
1031	"compiler limit : function calls nested too deeply"	
1032	"cannot open object code listing file '%s'"	

1035	"expression too complex; simplify expression"	

1037	"cannot open object file '%s'"	
1038	"compiler limit : '%Fs' : control flow state too complex; simplify function"

1041	"cannot open compiler intermediate file - no more files"
1042	"cannot open compiler intermediate file - no such file or directory"
1043	"cannot open compiler intermediate file"
1044	"out of disk space for compiler intermediate file"
1045	"compiler limit : linkage specifications nested too deeply"
1046	"compiler limit : %Fs nested too deeply"
1047	"limit of %Fs exceeded at '%Fs'"
1048	"unknown option '%c' in '%s'"
1049	"invalid numerical argument '%s'"
1050	"'%s' : code segment too large"

1052	"compiler limit : #if or #ifdef blocks nested too deeply"
1053	"compiler limit : struct/union nested too deeply"	
1054	"compiler limit : initializers nested too deeply"
1055	"compiler limit : out of keys"
1056	"compiler limit : out of macro expansion space"
1057	"unexpected end of file in macro expansion"
1058	"compiler limit : too many formal arguments"
1059	"compiler is out of near heap space"
1060	"compiler is out of far heap space"
1061	"compiler limit : blocks nested too deeply"	
1062	"error while writing to preprocessor output file"
1063	"compiler limit : compiler stack overflow"
1064	"compiler limit : token overflowed internal buffer"
1065	"compiler limit : out of tags"
1066	"compiler limit : decorated name length exceeded"

1068	"cannot open file '%Fs'"
1069	"write error on file '%s'"	
1070	"mismatched #if/#endif pair in file '%Fs'"
1071	"unexpected end of file found in comment"
1072	"'%Fs' : cannot read file"

1090	"data allocation exceeds 64K"		

1126	"'%Fs' : automatic allocation exceeds %s" 
1127	"'%Fs' : segment redefinition"

1500	"'%Fs' : cannot open inline function definition file"
1501	"compiler limit : too many temporary variables"
1502	"inline member-function definition missing '}'"
1503	"default parameter definition missing ',' or ')'"
1504	"type still ambiguous after parsing %d tokens"
1505	"unrecoverable parser lookahead error"
1506	"unrecoverable block scoping error"
1507	"previous user errors and subsequent error recovery halt further compilation"

1852	"'%Fs' is not a valid precompiled header file (C2852)"
1853	"'%Fs' is not a precompiled header file created with this compiler (C2853)"
1855	 "command-line option '%Fs' inconsistent with precompiled header (C2855)"

1000	"UNKNOWN FATAL ERROR\n\t\tContact Microsoft Product Support Services"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\olethunk\ole16\tools\c23.err ===
1001    "INTERNAL COMPILER ERROR\n\t\t(compiler file '%s', line %d)\n\t\tContact Microsoft Product Support Services"
1002    "compiler is out of heap space in pass 2"
1003	"error count exceeds %d; stopping compilation"
1004    "unexpected end of file found"
1005	"string too big for buffer"
1006	"write error on compiler intermediate file"
1007	"unrecognized flag '%s' in '%s'"
1015	"compiler limit : too many segments"
1023	"cannot open source file '%s'"
1027	"DGROUP data allocation exceeds 64K"
1029	"there are > 512 bytes of arguments"
1030	"there are > 512 bytes of local variables"
1032    "cannot open object code listing file '%s'"
1033	"cannot open assembly language output file '%s'"
1035    "expression too complex; simplify expression"
1036	"cannot open source listing file '%s'"
1037	"cannot open object file '%s'"
1039    "unrecoverable heap overflow in pass 3"
1040    "unexpected end-of-file condition in source file '%s'"
1041	"cannot open compiler intermediate file - no more files"
1042	"cannot open compiler intermediate file - no such file or directory"
1043	"cannot open compiler intermediate file"
1044	"out of disk space for compiler intermediate file"
1048    "unknown option '%c' in '%s'"
1049	"invalid numerical argument '%s'"
1050    "'%s' : code segment too large"

1055	"compiler limit : out of keys"
1067    "intrinsic not implemented"
1073    "bad '%s' flag, would overwrite '%s' with '%s'"
1074    "too many '%s' flags, '%s'"

1090	"'%s' data allocation exceeds 64K"
1126	"'%s' : automatic allocation exceeds %s"
1127    "'%s' : segment redefinition"
1000	"UNKNOWN FATAL ERROR\n\t\tContact Microsoft Product Support Services"

						
	
2125	"'%s' : allocation exceeds 64K"
2127	"parameter allocation exceeds 32K"
2128	"'%s' : huge array cannot be aligned to segment boundary"
2129	"static function '%s' not found"
2220	"warning treated as error - no object file generated"
2418	"'%s' : not in a register"
2427	"'%s' : jump referencing label is out of range"
2000	"UNKNOWN ERROR\n\t\tContact Microsoft Product Support Services"

						
	
4700	"local variable '%s' used without having been initialized"
4701	"local variable '%s' may be used without having been initialized"
4702	"unreachable code"
4703	"'%s' : function too large for global optimizations"
4704    "'%s' : inline assembler precludes global optimizations"
4705	"statement has no effect"
4706	"assignment within conditional expression"
4707	"'%s' : function too large for global optimizations (%s)"  
4708    "ran out of heap at: %s"  
4709	"comma operator within array index expression"
4710    "function '%s' not expanded"
4711    "function '%s' selected for inline expansion"
4712    "'%s' : used as register - loss of debugging information"
4713    "%s: INTERNAL COMPILER ERROR; restarting\n\t\t(compiler file '%s', line %d)\n\t\tContact Microsoft Product Support Services"
4723	"potential divide by 0"
4724	"potential mod by 0"
4726    "'%c' : unknown memory-model command-line option"
4727	"conditional expression is constant"
4741    "/Oq option ignored for __fastcall or __saveregs function '%Fs'"
4746    "'%s' : unsized array treated as '%s'"
4756    "overflow in constant arithmetic"
4758    "address of automatic (local) variable taken; DS != SS"
4759    "segment lost in conversion"
4761    "integral size mismatch in argument; conversion supplied"
4762    "near/far mismatch in argument; conversion supplied"
4763    "'%s' : function too large for postoptimizer"
4765    "recoverable heap overflow in postoptimizer"
4766    "local symbol-table overflow"
4769	"conversion of near pointer to long integer"
4772	"'%s' : too many debug entry points, maximum %d"
4773    "scoping too deep; symbolic debugging information lost for this module."
4785	"near call to '%s' in different segment"
4786	"string too long - truncated to %d characters"
4787    "unprototyped function '%s' called in exception"   
4788	"'%Fs' : identifier was truncated to '%d' characters"
4790	"insufficient memory to process debugging information"
4791    "loss of debugging information caused by optimization"
4792    "long double type not supported by alternate math library"

4900	"Il mismatch between '%s' version '%ld' and '%s' version '%ld'"

4000	"UNKNOWN WARNING\n\t\tContact Microsoft Product Support Services"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\olethunk\ole16\tools\rcqq.err ===
/* SCCSWHAT( "@(#)c1.err	2.29 88/02/25 18:18:00	" ) */
						/* fatals */

1001	"Internal Compiler Error\n\t\t(compiler file '%s', line %d)\n\t\tContact Microsoft Technical Support"
1002	"out of heap space"
1003	"error count exceeds %d; stopping compilation"
1004	"unexpected EOF"
1005	"string too big for buffer"
1006	"write error on compiler intermediate file"
1007	"unrecognized flag '%s' in '%s'"
1008	"no input file specified"
1009	"compiler limit : macros too deeply nested"
1010	"compiler limit : macro expansion too big"
1012	"bad parenthesis nesting - missing '%c'"
1013	"cannot open source file '%s'"
1014	"too many include files"
1015	"cannot open include file '%s'"
1016	"#if[n]def expected an identifier"
1017	"invalid integer constant expression"
1018	"unexpected '#elif'"
1019	"unexpected '#else'"
1020	"unexpected '#endif'"
1021	"bad preprocessor command '%s'"
1022	"expected '#endif'"
1023	"no int size specified"
1024	"no ptr size specified"
1025	"no function size specified"
1026	"parser stack overflow, please simplify your program"
1027	"DGROUP data allocation exceeds 64K"	/* QC, c23 */
1028	"%s segment allocation exceeds 64K"	/* QC */
1031	"compiler limit : function calls too deeply nested"	/* QC, c23 */
1032	"cannot open object listing file '%s'"			/* QC, c23 */
1035	"expression too complex, please simplify"		/* QC, c23 */
1037	"cannot open object file '%s'"					/* QC, c23 */
1041	"cannot open compiler intermediate file - no more files"
1042	"cannot open compiler intermediate file - no such file or directory"
1043	"cannot open compiler intermediate file"
1044	"out of disk space for compiler intermediate file"
1045	"floating point overflow"
1047	"too many %s flags, '%s'"
1048	"unknown option '%c' in '%s'"
1049	"invalid numerical argument '%s'"
1052	"too many #if/#ifdef's"
1053	"compiler limit : struct/union nesting"
1054	"compiler limit : initializers too deeply nested"
1055	"compiler limit : out of keys"
1056	"compiler limit : out of macro expansion space"
1057	"unexpected EOF in macro expansion (missing ')'?)"
1059	"out of near heap space"
1060	"out of far heap space"
1061	"compiler limit : blocks too deeply nested"	/* QC */
1062	"error writing to preprocessor output file"
1063	"compiler limit : compiler stack overflow"	/* QC */
1064	"compiler limit : identifier overflowed internal buffer"
1065	"compiler limit : declarator too complex"
1000	"UNKNOWN FATAL ERROR\n\t\tContact Microsoft Technical Support"

						/* errors */
	
2001	"newline in constant"
2002	"out of macro actual parameter space"
2003	"expected 'defined id'"
2004	"expected 'defined(id)'"
2005	"#line expected a line number, found '%s'"
2006	"#include expected a file name, found '%s'"
2007	"#define syntax"
2008	"'%c' : unexpected in macro definition"
2009	"reuse of macro formal '%s'"
2010	"'%c' : unexpected in formal list"
2011	"'%s' : definition too big"
2012	"missing name following '<'"
2013	"missing '>'"
2014	"preprocessor command must start as first non-whitespace"
2015	"too many chars in constant"
2016	"no closing single quote"
2017	"illegal escape sequence"
2018	"unknown character '0x%x'"
2019	"expected preprocessor command, found '%c'"
2020	"bad octal number '%c'"
2021	"expected exponent value, not '%c'"
2022	"'%ld' : too big for char"
2023	"divide by 0"
2024	"mod by 0"
2025	"'%s' : enum/struct/union type redefinition"
2026	"'%s' : member of enum redefinition"
2028	"struct/union member needs to be inside a struct/union"
2029	"'%Fs' : bit-fields only allowed in structs"
2030	"'%Fs' : struct/union member redefinition"
2031	"'%Fs' : function cannot be struct/union member"
2032	"'%Fs' : base type with near/far/huge not allowed"
2033	"'%Fs' : bit-field cannot have indirection"
2034	"'%Fs' : bit-field type too small for number of bits"
2035	"enum/struct/union '%Fs' : unknown size"
2036	"left of '%s%s' must have a struct/union type"
2037	"left of '%s' specifies undefined struct/union '%Fs'"
2038	"'%s' : not struct/union member"
2039	"'->' requires struct/union pointer"
2040	"'.' requires struct/union name"
2042	"signed/unsigned keywords mutually exclusive"
2043	"illegal break"
2044	"illegal continue"
2045	"'%s' : label redefined"
2046	"illegal case"
2047	"illegal default"
2048	"more than one default"
2050	"non-integral switch expression"
2051	"case expression not constant"
2052	"case expression not integral"
2053	"case value %d already used"
2054	"expected '(' to follow '%Fs'"
2055	"expected formal parameter list, not a type list"
2056	"illegal expression"
2057	"expected constant expression"
2058	"constant expression is not integral"
2059	"syntax error : '%s'"
2060	"syntax error : EOF"
2061	"syntax error : identifier '%s'"
2062	"type '%s' unexpected"
2063	"'%s' : not a function"
2064	"term does not evaluate to a function"
2065	"'%s' : undefined"
2066	"cast to function returning . . . is illegal"
2067	"cast to array type is illegal"
2068	"illegal cast"
2069	"cast of 'void' term to non-void"
2070	"illegal sizeof operand"
2071	"'%Fs' : bad storage class"
2072	"'%Fs' : initialization of a function"
2073	"'%Fs' : cannot initialize array in function"
2074	"'%Fs' : cannot initialize struct/union in function"
2075	"'%Fs' : array initialization needs curly braces"
2076	"'%Fs' : struct/union initialization needs curly braces"
2077	"non-integral field initializer '%Fs'"
2078	"too many initializers"
2079	"'%Fs' uses undefined struct/union '%Fs'"
2082	"redefinition of formal parameter '%Fs'"
2083	"array '%Fs' already has a size"
2084	"function '%Fs' already has a body"
2085	"'%Fs' : not in formal parameter list"
2086	"'%Fs' : redefinition"
2087	"'%Fs' : missing subscript"
2088	"use of undefined enum/struct/union '%s'"
2089	"typedef specifies a near/far function"
2090	"function returns array"
2091	"function returns function"
2092	"array element type cannot be function"
2093	"cannot initialize a static or struct with address of automatic vars"
2094	"label '%Fs' was undefined"
2095	"'%Fs' : actual has type void : parameter %d"
2096	"struct/union comparison illegal"
2097	"illegal initialization"
2098	"non-address expression"
2099	"non-constant offset"
2100	"illegal indirection"
2101	"'&' on constant"
2102	"'&' requires lvalue"
2103	"'&' on register variable"
2104	"'&' on bit-field ignored"
2105	"'%s' needs lvalue"
2106	"'%s' : left operand must be lvalue"
2107	"illegal index, indirection not allowed"
2108	"non-integral index"
2109	"subscript on non-array"
2110	"'+' : 2 pointers"
2111	"pointer + non-integral value"
2112	"illegal pointer subtraction"
2113	"'-' : right operand pointer"
2114	"'%s' : pointer on left; needs integral right"
2115	"'%s' : incompatible types"
2116	"'%s' : bad %s operand"
2117	"'%s' : illegal for struct/union"
2118	"negative subscript"
2119	"'typedefs' both define indirection"
2120	"'void' illegal with all types"
2121	"typedef specifies different enum"
2122	"typedef specifies different struct"
2123	"typedef specifies different union"
2125	"%Fs : allocation exceeds 64K"		/* QC, c23 */
2126	"%Fs : auto allocation exceeds %s"	/* QC, c23 */
2127	"parameter allocation exceeds 32K"	/* QC, c23 */
2130	"#line expected a string containing the file name, found '%s'"
2131	"attributes specify more than one near/far/huge"
2132	"syntax error : unexpected identifier"
2133	"array '%Fs' : unknown size"
2134	"'%Fs' : struct/union too large"
2135	"missing ')' in macro expansion"
2137	"empty character constant"
2138	"unmatched close comment '*/'"
2139	"type following '%s' is illegal"
2140	"argument type cannot be function returning . . ."
2141	"value out of range for enum constant"
2142	"ellipsis requires three periods"
2143	"syntax error : missing '%s' before '%s'"
2144	"syntax error : missing '%s' before type '%Fs'"
2145	"syntax error : missing '%s' before identifier"
2146	"syntax error : missing '%s' before identifier '%s'"
2147	"unknown size"
2148	"array too large"
2149	"'%Fs' : named bit-field cannot have 0 width"
2150	"'%Fs' : bit-field must have type int, signed int, or unsigned int"
2151	"more than one cdecl/fortran/pascal attribute specified"
2152	"'%s' : pointers to functions with different attributes"
2153	"hex constants must have at least 1 hex digit"
2154	"'%s' : does not refer to a segment"
2155	"'%s' : already in a segment"
2156	"pragma must be at outer level"
2157	"'%s' : must be declared before use in pragma list"
2158	"'%s' : is a function"
2159	"more than one storage class specified"
2160	"## cannot occur at the beginning of a macro definition"
2161	"## cannot occur at the end of a macro definition"
2162	"expected macro formal parameter"
2163	"'%s' : not available as an intrinsic"
2164	"'%s' : intrinsic was not declared"
2165	"'%s' : cannot modify pointers to data"
2166	"lval specifies 'const' object"
2167	"'%Fs' : too many actual parameters for intrinsic"
2168	"'%Fs' : too few actual parameters for intrinsic"
2169	"'%Fs' : is an intrinsic, it cannot be defined"
2170	"'%s' : intrinsic not declared as a function"
2171	"'%s' : bad operand"
2172	"'%Fs' : actual is not a pointer : parameter %d"
2173	"'%Fs' : actual is not a pointer : parameter %d, parameter list %d"
2174	"'%Fs' : actual has type void : parameter %d, parameter list %d"
2175	"'%Fs' : unresolved external"	/* QC */
2176	"static far data not supported"	/* QC */
2177	"constant too big"
2178	"'%s' : storage class for same_seg variables must be 'extern'"
2179	"'%Fs' : was used in same_seg, but storage class is no longer 'extern'"
2180	"controlling expression has type 'void'"
2181	"pragma requires command line option '%s'"	/* QC */
2182	"'%Fs' : 'void' on variable"
2183	"'%Fs' : 'interrupt' function must be 'far'"
2184	"'%Fs' : '%s' function cannot be 'pascal/fortran'"
2186	"'%Fs' : 'saveregs/interrupt' modifiers mutually exclusive"
2187	"cast of near function pointer to far function pointer"
2188	"#error : %s"
2190	"'%s' : is a text segment"
2191	"'%s' : is a data segment"
2192	"'%s' : function has already been defined"
2000	"UNKNOWN ERROR\n\t\tContact Microsoft Technical Support"

						/* warnings */
	
4001	"macro '%s' requires parameters"
4002	"too many actual parameters for macro '%s'"
4003	"not enough actual parameters for macro '%s'"
4004	"missing close parenthesis after 'defined'"
4005	"'%s' : redefinition"
4006	"#undef expected an identifier"
4009	"string too big, trailing chars truncated"
4011	"identifier truncated to '%s'"
4012	"float constant in a cross compilation"
4013	"constant too big"
4014	"'%Fs' : bit-field type must be unsigned"
4015	"'%Fs' : bit-field type must be integral"
4016	"'%s' : no function return type, using 'int' as default"
4017	"cast of int expression to far pointer"
4020	"'%Fs' : too many actual parameters"
4021	"'%Fs' : too few actual parameters"
4022	"'%Fs' : pointer mismatch : parameter %d"
4024	"'%Fs' : different types : parameter %d"
4025	"function declaration specified variable argument list"
4026	"function was declared with formal argument list"
4027	"function was declared without formal argument list"
4028	"parameter %d declaration different"
4029	"declared parameter list different from definition"
4030	"first parameter list is longer than the second"
4031	"second parameter list is longer than the first"
4032	"unnamed struct/union as parameter"
4033	"function must return a value"
4034	"sizeof returns 0"
4035	"'%Fs' : no return value"
4036	"unexpected formal parameter list"
4037	"'%Fs' : formal parameters ignored"
4038	"'%Fs' : formal parameter has bad storage class"
4039	"'%Fs' : function used as an argument"
4040	"near/far/huge on '%Fs' ignored"
4041	"formal parameter '%s' is redefined"
4042	"'%Fs' : has bad storage class"
4044	"huge on '%Fs' ignored, must be an array"
4045	"'%s' : array bounds overflow"
4046	"'&' on function/array, ignored"
4047	"'%s' : different levels of indirection"
4048	"array's declared subscripts different"
4049	"'%s' : indirection to different types"
4051	"data conversion"
4052	"different enum types"
4053	"at least one void operand"
4060	"conversion of long address to short address"	/* QC, c23 */
4061	"long/short mismatch in argument : conversion supplied"	/* QC, c23 */
4062	"near/far mismatch in argument : conversion supplied"	/* QC, c23 */
4067	"unexpected characters following '%s' directive - newline expected"
4068	"unknown pragma"
4071	"'%Fs' : no function prototype given"
4074	"non standard extension used - '%s'"
4075	"size of switch expression or case constant too large - converted to int"
4076	"'%s' : may be used on integral types only"
4077	"unknown check_stack option"
4079	"unexpected token '%s'"
4080	"expected 'identifier' for segment name, found '%s'"
4081	"expected a comma, found '%s'"
4082	"expected an identifier, found '%s'"
4083	"expected '(', found '%s'"
4084	"expected a pragma keyword, found '%s'"
4085	"expected [on | off]"
4086	"expected [1 | 2 | 4]"
4087	"'%Fs' : declared with 'void' parameter list"
4088	"'%Fs' : pointer mismatch : parameter %d, parameter list %d"
4089	"'%Fs' : different types : parameter %d, parameter list %d"
4090	"different 'const' attributes"
4091	"no symbols were declared"
4092	"untagged enum/struct/union declared no symbols"
4093	"unescaped newline in character constant in non-active code"
4094	"unexpected newline"
4095	"expected ')', found '%s'"
4096	"huge treated as far"		/* QC */
4098	"void function returning a value"
4099	"expected ')', (too many arguments?)"
4100	"'%Fs' : unreferenced formal parameter"
4101	"'%Fs' : unreferenced local variable"
4102	"'%Fs' : unreferenced label"
4103	"'%Fs' : function definition used as prototype"
4104	"'%s' : near data in same_seg pragma, ignored"
4105	"'%Fs' : code modifiers only on function or pointer to function"
4106	"pragma requires integer between 1 and 127"
4107	"pragma requires integer between 15 and 255"
4108	"pragma requires integer between 79 and 132"
4109	"unexpected identifier '%s'"
4110	"unexpected token 'int constant'"
4111	"unexpected token 'string'"
4112	"macro name '%s' is reserved, %s ignored"
4113	"function parameter lists differed"
4000	"UNKNOWN WARNING\n\t\tContact Microsoft Technical Support"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\olethunk\thc\readme.txt ===
This tool is out of date!

This directory contains the stuff that generated some of the source files
found in olethk32.  It was originaly used to generate the thopping strings
and stubs and then abandon.

I found this source when I needed to make some systematic changes to
the thopping tables and stubs.  (first "const" and later "unalined").
I dusted it off and brought it mostly up to date.  But there are still
problems with "thopsint.cxx".

This directory is not part of the "build".  It is build by hand when
the tool is needed.  The build process is not automatic, please read
the instructions for each directory.  The original owner prefered the
old Cairo build process that is no longer supported.

thc\
    This contains the generator program itself.  It uses YACC and FLEX
    (which I have checked into that directory).  Run nmake -f makefil0
    before running "build" to process the yacc/flex part of the build.
    NT build doesn't support these tools.

thpp\
    This contains the OLE header files that the THC.EXE program processes
    into the Thunking tables. First all the headers are PreProcessed into
    on big "main.i".  Run nmake -f makefile0 to build "main.i"

thsplit\
    Obsolete.

To generate the source files for olethk32 run "thc main" and 17
output source files will be deposited in the current directory.
    -- Sept '95 (again Feb '96)
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\oleui\olecnfg.rtf ===
{\rtf1\ansi \deff4\deflang1033{\fonttbl{\f4\froman\fcharset0\fprq2 Times New Roman;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0; \red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar  \f4\fs20 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\s15\widctlpar \f4\fs20 \sbasedon0\snext15 footnote text;}{\*\cs16 \additive\super \sbasedon10 footnote reference;}}{\info{\author Bruce Mansfield}{\creatim\yr1996\mo5\dy8\hr10\min55} {\version1}{\edmins678}{\nofpages0}{\nofwords0}{\nofchars0}{\vern49221}}\widowctrl\ftnbj\aenddoc\formshade \fet0\sectd \linex0\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain  \widctlpar \f4\fs20 {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_PROPPAGE1}} This is the initial property page of the top property sheet. \par \pard \widctlpar \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_PROPERTIESBUTTON}} The Properties... button invokes the property sheet for the currently selected application.  The property sheet may also be invo ked by double clicking on the selected application. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_RUNASBROWSEBTN}} Rather than typing in the name of the user under whose identity this application is to run, this Browse...  button maybe used to browse for the approproate user.  It may be used to scan for users on this and all connected domains. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_ATBITSCHECK}} This check box determines whether the application  is to be run where the data for the object being invoked is located.  This is commonly known as AtBits activation, because the application is launched on the machine where the bits of the data file are located. \par \pard \widctlpar \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_RUNREMOTECK}} Use this check box to force the application to be run on a remote machine.  If this is checked then a valid m achine name must be entered into the associated edit box just below this check box.  This can be done either manually or via the browse button. \par \pard \widctlpar \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_EDITDEFAULTACCESSSECURITY}} Default Access Permissions defines those groups and users who are permitted to access COM/DCOM applications runnning  on this machine.  Using the Edit Default... button invokes the Access Control List Editor through which the user may add/remove/modify those users and groups who may access or are denied access to  COM/DCOM applications running on this machine. \par \pard \widctlpar \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_SERVERLISTBOX}} This lists the COM servers registered on this machine.  A list entry is the title for that server, or its AppID if the title is blank. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_RUNLOCALLYCK}} Check this if the application is to run locally. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_RUNREMOTEEDIT}} Enter the name of the remote machine where the application is to run. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_ENABLEDCOMCK}} In order for Distributed COM to be enabled on this machine this box must be checked.  If it is not checked then remote clients may not activate DCOM  servers on this machine. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_REFTRACKING}} Check this box if additional security for reference tracking in legacy applications is desired. .  This capability means DCOM will prevent malicous user s from releasing objects.  However, it is quite expensive.  The authentication level cannot be set to (None) if this is checked. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_DEFAULTAUTHLEVEL}} Use this combination box to select the default RPC authentication level for COM/DCOM calls. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_DEFAULTIMPERLEVEL}} Use this combination box to select the default RPC impersonation level for COM/DCOM calls. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_ACCESSPERMISSIONBTN}}  Use this button to edit the list of users and groups who are either granted access permission to this application or who are denied access permission. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_LAUNCHPERMISSIONBTN}} Use this button to edit the list of users and groups who are either granted launch permission to this application or who are denied launch  permission. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_CONFIGURATIONPERMISSIONBTN}} Use this button to edit the list of users and groups who are allowed to read/modify registry configuration information for this applcation.   The Security Descriptor built by this edit session will get written to the AppID key for this application as well as each CLSID key, as well as all of its subkeys, for this application. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_DEFAULTACCESSRADIO}} Check this radio button if the list of users/groups allowed to access this application should be determined via the Default Access Permissions .  If this radio button is not checked, then the user may use the edit button to the right to edit the list of users/groups permitted to access or are denied access to this application. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_DEFAULTLAUNCHRADIO}} Check this radio button if the list of users/groups allowed to launch this application should be determined via the Default Launch Permissions .  If this radio button is not checked, then the user may use the edit button to the right to edit the list of users/groups permitted to launch or are denied launch of this application. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_DEFAULTCONFIGURATIONRADIO}} Check this radio button if the list of users/groups allowed to read/modify registry information for this application  should be determined by the Default Configuraton Permissions.  If this radio button is not checked, then the user may use the edit button to the right to edit the list of users/groups permitted to read/modify registry information for this application. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_INTERACTIVEUSERRADIO}} Check this radio button if the application is to run as the interactive user. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_LAUNCHINGUSERRADIO}} Check this radio button if the application is to run with the identify of the client; that is,  with the security identity of the launching user. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_RUNASUSERRADIO}} Select this radio button if the application is to be launched with the identity of  the user specified below. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_SYSTEMACCOUNTRADIO}} Check this radio button if the application service is to be run as LocalSystem.  This is only meaningful for a DCOM application which is  to be run as a Windows NT service.  If the application is not a service, this radio button is disabled.  Note that the application must already be registered in the Service Control Manager database. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_RUNASUSEREDIT}} Enter the domain and account name of the user under whose identity this application is to run.  This should be entered in the form <domain>\\ <user>.  The domain may be any valid domain or the name of this machine.  If <domain> is absent then it defaults to this machine. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_RUNASPASSWORDEDIT}} Enter the password of the user under whose identity this application is to run.  It is permissible for the password to be blank; howeever, t his will work only if the domain account for the user also has a blank password. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_RUNASCONFIRMEDIT}} Re-enter the password of the user under whose identity this application is to run.  This edit box is used simply to confirm  the password.  It is a safety feature. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_EDITDEFAULTLAUNCHSECURITY}} Default Launch Permissions defines those groups and users who are permitted to launch  COM/DCOM applications supported on this machine.  Using the Edit Default... button invokes the Access Control List Editor through which the user may add/remove/modify those users and groups who may launch or are denied launch of  COM/DCOM applications on  this machine. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_EDITDEFAULTCONFIGURATIONSECURITY}} Default Configuration Permissions defines those groups and users who are permitted to read/modify registry configuraton  information for COM/DCM applications.  Using the Edit Default... button invokes the Access Control List Editor through which the user may define which users and groups have what access to COM/DCOM registry information.   The Security Descriptor returned by the ACL editor is written to HKEY_CLASSES_ROOT and all of its subkeys. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_TERMINATEBTN}} Use this button to terminate the selected application in the above list box. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_STARTBTN}} Use this button to (re)start the selected service in the above list box. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_PAUSEBTN}} Use this button to pause the selected service in the above list box. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_REMOTEMACHINE}} If the application is to be run on a remote machine, this is the name of that remote machine. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_SERVERNAME}} The name of this application.  This is the same as the unnamed value in the registry on the AppID key for this application. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_SERVERPATH}} This is the executable file path for this application. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_SERVERTYPE}} This is the type of this application.  This will be either \ldblquote local server, \ldblquote local service\rdblquote  or \ldblquote remote server \rdblquote . \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_RUNNINGINSTANCES}} This is a list of the instances of this application (server or service) currently running on this machine. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_EDITACCESSRADIO}} Enable this radio button in order to edit the access permissions for this application.  Otherwise the Default Access Permissions will be used. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_EDITLAUNCHRADIO}} Enable this radio button in order to edit the launch permissions for this application.  Otherwise the Default Launch Permissions will be used. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_EDITCONFIGURATIONRADIO}} Enable this radio button in order to edit the configuration permissions for this application.  Otherwise the Default Configuration P ermissions will be used. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_REMOTEBROWSEBTN}} You may use this button to browse for the name of the desired remote machine rather than typing it in. \par }
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\oleui\version.txt ===
#ifndef _MAC
/////////////////////////////////////////////////////////////////////////////
//
// Version
//

//VS_VERSION_INFO VERSIONINFO
// FILEVERSION 1,0,0,1
// PRODUCTVERSION 1,0,0,1
// FILEFLAGSMASK 0x3fL
//#ifdef _DEBUG
// FILEFLAGS 0x1L
//#else
// FILEFLAGS 0x0L
//#endif
// FILEOS 0x4L
// FILETYPE 0x1L
// FILESUBTYPE 0x0L
//BEGIN
//    BLOCK "StringFileInfo"
//    BEGIN
//        BLOCK "040904b0"
//        BEGIN
//            VALUE "CompanyName", "\0"
//            VALUE "FileDescription", "OLE Configuration UI\0"
//            VALUE "FileVersion", "1, 0, 0, 1\0"
//            VALUE "InternalName", "OLEUI\0"
//            VALUE "LegalCopyright", "Copyright (c) 1996\0"
//            VALUE "OriginalFilename", "OLEUI.EXE\0"
//            VALUE "ProductName", "OLE Configuration Application\0"
//            VALUE "ProductVersion", "1, 0, 0, 1\0"
//        END
//    END
//    BLOCK "VarFileInfo"
//    BEGIN
//        VALUE "Translation", 0x409, 1200
//    END
//END

// The following conforms to Windows NT version resources
#include <winver.h>
#include <ntverp.h>
#define VER_FILETYPE                VFT_APP
#define VER_FILESUBTYPE             VFT2_UNKNOWN
#define VER_FILEDESCRIPTION_STR     "Distributed COM Configuration"
#define VER_INTERNALNAME_STR        "dcomcnfg.exe"
#define VER_ORIGINALFILENAME_STR    "dcomcnfg.exe"
#include <common.ver>

#endif    // !_MAC
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\stg\async\layout\test\test.doc ===
Microsoft Word Document MSWordDoc Word.Document.6Microsoft Highlighter ToolHighlighter Tool Dean Hachamovitch Smarter than the average scrollbar Normal susia Microsoft Word for Windows 95Paintbrush Picture PBrush PBrush0 0 391 218Paintbrush Picture PBrush PBrush0 0 289 69Paintbrush Picture PBrush PBrush0 0 467 215 TITLE  Highlighter Tool Program Mgr  AUTHOR  Dean Hachamovitch Summary Word allows the user to  highlight  any selection in a document and quickly navigate between highlighted pieces of a document. This feature complements annotations, revision marking, and routing as a simple workgroup feature, and makes Word a nicer Mail editor as well.  EMBED PBrush   Word gets a highlighter Justification When a paper document is routed, marking parts of interest for other people is easy. People use a colored marker (highlighter) or something with the same effect (post-it notes pointing to text, folded page corners, etc.). When a document is shared electronically, marking interesting parts for recipients is much harder. Annotations and revision marking, while easy to navigate, are not friendly ways to mark a document s highlights. The callout tool requires Page Layout view and tedious, manual navigation.  Users will share more documents electronically with Word 95, especially if Word is their Mail editor. Rather than marking off important parts of forwarded email with *** and --->, users could just  highlight  parts of the message. A user could mark off parts of a document as  under construction  for quick navigation. Giving all users a quick, intuitive, and visually compelling way to mark important parts of a document and allowing readers a way to navigate quickly between marked off ranges is important. Description This feature is basically a nice UI onto Annotations that have no text and show no annoying annotation mark when viewed. Annotations already arbitrate nicely between multiple users so we get the workgroup aspect for free. (It also uses background shading of text already implemented in Word 6 for field shading and also used in Word 95 for spell checking.)  The user needs to be able to:  highlight and un-highlight text navigate from highlight to highlight adjust options (printing, color of highlight) Highlighting Text The command ToolsHighlight is a soft mode (like CopyFormat when it is double clicked; selection, scrolling and window manipulation are allowed, but other user actions exit the mode). When invoked, the menu command is checked and the toolbar button stays in the down state until the user exits the mode. While ToolsHighlight is active, the I-beam changes to show that selections will be highlighted:  EMBED PBrush   Note that all selection cursors should change, not just the I-beam (specifically, the NE-arrow that appears when the mouse pointer is in the selection bar on the left edge of the document.) We will work with a graphics designer on a real icon. Word s UI refers to this attribute as  highlighting. To un-highlight a selection, the user drags the highlighter tool over the selection again. We can change the I-beam over highlighted regions to imply this behavior, as well as phrase the tooltip as  Apply or remove highlighting.  (There s no terribly obvious way to un-highlight a selection. If this UI usability test poorly, an alternative might be to leave a small unnumbered annotation character in the main text that the user could delete in order to remove the highlight.)  By default, this command should appear on the Tools menu. (If we don t ship with this command on the toolbar or menu, no one will find it.) This command would be handy on the toolbar when Word is the Mail Editor (it could replace the two column text button, which will probably not be used frequently in email). We probably don t want to reopen default toolbar assignments for Office at this time.  Providing a simple UI for inserting an annotation along with the highlighting (e.g. double clicking the tool makes Word insert an annotation for each selection the user makes) is not difficult. Annotations are an underrated workgroup feature as it is; this marginal UI work could increase awareness so that users are more receptive to it in Office 96. This is not a high priority. An interesting case is multiple users highlighting the same text. Word should do whatever is cheapest (which is, based on preliminary discussions with development, letting the later highlighter win):   EMBED PBrush   If a reader wants to see only one user s highlighting, the reader would go to ViewAnnotations and choose to view only one reviewer s marks at a time. If the user has a black/white printer, different users  highlighting is indistinguishable. (We should do as much as revision marking does; on screen, the colors are different.)  Navigation Highlighted text is added to the Goto dialog; the details follow Annotations exactly. The preferred UI follows from the spec for Navigation Tools, specifically the Scroll by Object section. Basically, the page down/up controls that Word 6 places at the bottom of the scroll bar in Page Layout view are available in all views and can scroll the user to different  things  (e.g. headings) in the document. As soon as Word determines that a document has highlighting in it, this control would adjust to allow the user to move between Highlights. (The screen mock-up on the summary page shows this.)  Scenario: an executive gets a document in mail and is told that her minions have already highlighted it for her. The executive starts scrolling through to find the important pieces, notices the control on the scroll bar, and finds that Word has automatically adjusted its behavior for the task at hand. Downside: if the user prefers page scrolling, this behavior is annoying. At the very least, highlighted text, if it exists in a document, is another option in this navigation tool. Options ToolsOptionsRevisions would get another color dropdown representing the user s preference for the background (highlight) color. Because we treat highlighting as a special annotation, the print option already exists. (If it s important enough, we could add a separate checkbox for it.)  Issue Navigation fallback if  Scrolling by Object  is cut. Platform Other than scrollbars (see the Navigation Tools spec) there is nothing unique about Chicago v NT v Mac for this feature.  International Is highlighting a North American thing? Are there locales that would prefer some other formatting that could be suppressed as easily (e.g. a colored change bar by the paragraph, or a colored underline)?  Visual Basic ToolsHighlight looks like another action that can be applied to a selection (like Bold). For navigation, we should expose Highlighted text in the Goto dialog.   User Ed This belongs with workgroup, sharing documents, annotations, revision marking.  Q & A Why don t we just do character shading already if we do this?  The marginal development cost for implementing, testing, localizing, documenting, etc. a UI just isn t worth what it buys us with respect to our goals. Besides, highlighting is a more mainstream, user-focused application of the feature. Users who want character shading will work around this feature for it. Users who would take advantage of a highlighter would not invest in (probably) character shading to get it. Changes 24 Feb 94 First Spec dhach Word 7 Spec  SUBJECT   TITLE  Highlighter Tool M confidential  KEYWORDS   PAGE  Page  PAGE  ........()()() Normal Heading 1 Heading 2 Heading 3 Heading 4 Heading 5 Heading 6 Heading 7 Heading 8 Heading 9 Default Paragraph Font eraseme Page Number Body Text Picture Caption newpage ExecSummary answer Question Change Header Footer Footnote Reference Footnote Text bullet-spaced bullet-unspaced cross reference history instruct issue issueBody margin Normal Indent Wide Picture Annotation Reference Annotation Text Title Subtitle Message Header Body Text Indent Body Text 3 List 2 Pgm2" Dean Hachamovitch D:\DOCS\WORD\SPEC\HILIGHT.DOC Dean Hachamovitch D:\DOCS\WORD\SPEC\HILIGHT.DOC steve C:\PERF\HILIGHT.DOC Word Development C:\PERF\HILIGHT.DOC Word Development!\\STEVERA2\ROOTC\perf\hilight.doc Nat Brown'C:\perform\winword6\scripts\hilight.doc Markus Horstmann/C:\WINNT40\profiles\MarkusH\Desktop\hilight.doc Markus Horstmann1C:\WINNT40\profiles\MarkusH\Desktop\hilight95.doc Markus Horstmann1C:\WINNT40\profiles\MarkusH\Desktop\hilight95.doc susia7D:\nt\private\ole32\stg\async\layout\test\hilight95.doc @\\MSPRINT44\26N/3MC CORPG 157.55.80.246 Ne00: winspool \\MSPRINT44\26N/3MC CORPG 157.55.80.246 HP LaserJet 4Si/4Si MX PS Letter HP LaserJet 4Si/4Si MX PS Letter Times New Roman Symbol Arial Courier New Microsoft Logo Arial Rounded MT Bold BriemScript Highlighter Tool "Smarter than the average scrollbar Dean Hachamovitch susia
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\stg\props\issues.txt ===
Migration to new interface
o deal with missing stuff in prop.idl :
   #define STG_E_PROPSETMISMATCHED 0x800300F0

Specification changes to reflect implementation
o threading issues

Unresolved implementation/design issues
o Returing STG_E_INVALIDPOINTER ?
o threading issues -- two ref counts : one for enumerations and one for regular refs
o Enumerating properties of VT_STREAM etc type - do we check that the stream exists ?  Or document
  that just because it is enumerated doesn't mean you can open it ?  How is VT_STREAM enumerated anyway ?
  As a stream or as a string ?

Test cases to consider:
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\stg\props\utest\testdoc.doc ===
Microsoft Word 6.0 Document MSWordDoc Word.Document.6Normal.dot Title of the document. Subject of the document. Keywords of the document. Comments of the document. Author of the document. Bill Morel Microsoft Word 6.0Foo Bar sdfkjhsdfkjhsdf  s djksafdljsafd sdflkhjsfadlhsfad sdfhsdfoihsdf Normal Default Paragraph Font Bill Morel C:\users\default\testdoc.doc @\\MSPRINT35\1/1049 CORPA 141B97 Ne00: winspool HP LaserJet IIISi PostScript v52.3 \\MSPRINT35\1/1049 CORPA 141B97 Letter PRIV   N N N \\MSPRINT35\1/1049 CORPA 141B97 Letter PRIV   N N N Times New Roman Symbol Arial Title of the document. Subject of the document. Keywords of the document. Comments of the document. Author of the document. Bill Morel
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\stg\ref\readme.txt ===
-------------------------------------------------------------------------------                        
                        OLE STRUCTURED STORAGE

                      REFERERENCE IMPLEMENTATION

                            RELEASE NOTES

                            August 2, 1996



                          Microsoft Windows
               Copyright (C) 1992-1996, Microsoft Corporation.

-------------------------------------------------------------------------------

<add: license agreement?>

CONTENTS
--------
1) What is included in the distribution

2) Building the distribution

3) ANSI and Unicode API support

4) Documentation
 
5) Supported Interfaces and differences

6) Using the reference implementation

7) Reporting bugs

-------------------------------------------------------------------------------


1) What is included in the distribution

Included in the distribution are the source code for the interfaces IStorage,
ILockBytes, IStream, IEnumSTATSTG, IMalloc, IPropertySetStorage,
IPropertyStorage, IEnumSTATPROPSETSTG, and IEnumSTATPROPSTG. Note that not all
the functionality of these interfaces are supported, see (5) for more
information. 

Also, included are some test programs: 'stgdrt' and 'reftest' for the storage
interfaces, and 'proptest' for the property set interfaces. There is a
'readme.txt' in each of those directories that contains a short description of
the tests. For details, please read the source code files.


----------------------------
2) Building the distribution

The distributions comes with a "makefile" which includes the correct makefile
file:
        - makefile.<system>     the actual makefile
where <system> refers to the development system used to compile the
makefile. Therefore, to change the development system, edit the makefile to
include the correct files, or overwrite it with the correct one. Please note
that the files in the distribution are in the DOS format, and thus you will
need to use some utilities to remove the linefeeds before they can be compiled.

Files included in the distribution support these systems:
        -  "msc" which works with Microsoft Visual C++ compiler and 'nmake'.
           This has been tested on Windows.

        -  "gcc" which works with GNU C++ compiler aka 'gcc' and GNU's 'make',
           dependencies can be generated using 'makedepend'.
           Only tested on Solaris, HP-UX, and Linux (2.0.7). 
           However, using these files on other O.S. using the ported versions
           of the GNU tools should require minimum effort.

To compile the distribution, type 'make' or 'nmake' at the root of the src
tree. To do a clean build, do 'make clean' or 'nmake clean'. You might also
need to do a 'make depend' to update the dependencies since the standard
include paths tend to be different.

Note that in the common makefile, 'commk.<system>', in the main directory you
must specify the correct byte-order of the target machine. For Big Endian
machines, define the macro BIGENDIAN as 1. Otherwise, define LITTLEENDIAN as
1. These macros allow the byte-swapping code to work correctly.

The tests 'stgdrt', 'reftest' and 'proptest' can be built likewise.


----------------------------
3) ANSI and Unicode API support

For flexibility, the reference implementation can be compiled to support
either ANSI (i.e. char) or Unicode (i.e. WCHAR) API's. When the macro
'_UNICODE' is turned on, the APIs will be using Unicode, otherwise it uses
ANSI. 

Affected functions are those that contain 'STATSTG' parameters:
        - IEnumSTATSTG::Next
        - IStream::Stat
        - IStorage::Stat

those that contain "WCHAR" parameters:
        - StgCreateDocfile
        - StgOpenStorage
        - StgIsStorageFile
        - IStorage::OpenStream
        - IStorage::CreateStorage
        - IStorage::OpenStorage
        - IStorage::DestroyElement
        - IStorage::RenameElement
        - IStorage::MoveElementTo
        - IStorage::SetElementTimes

and those that contain the "SNB" parameters:
        - IStorage::CopyTo
        - StgOpenStorageOnILockBytes

For property set related functions, BSTR is single char based for ANSI
API's and wide character based for UNICODE API's. This affect the following
functions :
        - SysAllocString
        - SysFreeString

Also PROPSPEC's lpwstr function is defined with LPOLESTR, which means it will
be either a 'WCHAR' array or 'char' array. This affects the following
functions: 
        - IPropertyStorage::ReadMultiple
        - IPropertyStorage::WriteMultiple
        - IPropertyStorage::DeleteMultiple

The change of names of properties to LPOLESTR affects these functions:
        - IPropertyStorage::ReadPropertyNames
        - IPropertyStorage::WritePropertyNames
        - IPropertyStorage::DeletePropertyNames

Remember to recompile the tests using the same precompiler flags before using
them on the new library!

----------------------------
4) Documentation

The documentation for the API's can be found in the MSDN library and Win32
SDK. The property sets API's are new and their documentation can be found in
MSDN library July 96 (or later), or NT Beta 2 win32 SDK (or later). Another
source of documentation for the property set interfaces would be "Introducing
Distributed COM and the New OLE Features in Windows NT 4.0" in the May/96
Microsoft Systems Journal.

In addition, in the 'doc' sub-directory, there is a file stgfmt.doc which is a
Microsoft Word document describing the disk format of OLE docfiles.


----------------------------
5) Supported functions/Interfaces and differences

First of all, the reference implementation is not multi-thread safe, and it
has no marshaling support. Below are details of differences between the
reference implementation and that of the actual OLE API's.
o StgCreateDocFile
o StgCreateDocFileOnILockBytes
o StgOpenStorage
o StgOpenStorageOnILockBytes
o StgIsStorageFile
o StgIsStorageILockBytes

o IStorage        
o ILockBytes
o IStream
o IEnumSTATSTG

For the above interfaces and APIs,
- There is no transaction or simple mode in the storage interfaces, namely
  STGM_TRANSACTED/STGM_SIMPLE/STGM_PRIORITY/STGM_NOSCRATCH are not supported.
- IStorage::SetElementTime() with a NULL 'lpszName' is not supported also.
  For the same reason StgSetTimes() is not supported as well
- Access Times (part of STATSTG) for storage elements are not suported.
- ILockBytes::LockRegion(), ILockBytes::UnlockRegion(), IStream::LockRegion(),
  IStream::UnlockRegion() are not supported

o CoGetMalloc
o CoTaskMemAlloc
o CoTaskMemFree
o CoTaskRealloc

o IMalloc

These interfaces are mapped into the generic 'new' and 'delete' calls. They
are provided to ease conversion of existing code that might be dependent on
them to use the reference implementation.

o FreePropVariantArray
o PropVariantClear
o PropVariantCopy
o SysAllocString
o SysFreeString

o IPropertySetStorage
o IPropertyStorage
o IEnumSTATPROPSETSTG
o IEnumSTATPROPSTG

Code from these interfaces can be turned off by removing '-DNEWPROPS' from the
makefiles, or specifying 'nmake NOPROPS=1' when building. For these
interfaces, non-simple property sets are not supported. In fact, the reference
implementation of property sets treats non-simple propvariant types like
VT_STREAM as invalid types.


----------------------------
6) Using the reference implementation

On the Windows platform, the code will compile into a dynamic link library
(i.e. refstg.dll). To use the reference implementation, include 'storage.h'
(for the storage interfaces) and ('props.h') for the property set interfaces
to link up with the declarations. Note that only C++ headers are provided for
this distribution.

On UNIX, the code compiles into a library archive. i.e. "refstg.a". The
headers should be included as in the Windows Platform. Please note that on
certain UNIX machines, the standard headers declare 'wchar_t' as a 4-byte data
type, which is incompatible with OLE's 2-byte character type. The reference
implementation uses 'WCHAR' as the 2-byte character type, to avoid any
confusion. 

NOTE: We have experience some problems when the g++ library, namely the
fwrite() function on some versions of Linux overwrites memory in the wrong
places. This can be avoided by using 'gcc' instead of 'g++' as the compiler.

To turn off debugging code and do a 'retail' build, edit the makefiles (both
in the root and in props sub-directory) and specify the relevant flags and do 
a clean build (see the makefiles for details).



----------------------------
7) Bug reports

Please report any bugs found to :

        <insert name of contact person and procedure here>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\stg\ref\test\proptest\readme.txt ===
Proptest is a set of tests for the property sets Interfaces.
One interesting feature is that with the /d parameter, you
can dump any storage file with properties to look at it.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\stg\ref\test\reftest\readme.txt ===
REFTEST -- reference implementation test

This test is a small subset of stgdrt, it also contains an optional
feature for interoperability testing. With 'reftest c' it creates
a small docfile 'drt.dfl'. With 'reftest r' it reads in the file
and verifies the data written with the 'c' option. This test will
be useful for example, when you use reftest to create a file on
one platform and use another platform's reftest to verify the file.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\ole32\stg\ref\test\stgdrt\readme.txt ===
STGDRT - storage interfaces runtime test

This test calls some of the interfaces of storage and verifies some of the
functionalities. It is (obviously) non-exhaustive.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\oleutest\balls\coffbase.txt ===
;
; This file defines the base virtual address for Dynamic Link Libraries (DLL)
; that are part of the NT OS/2 System.  The first token on a line is the name
; of the DLL and the second token is the base virtual address, in hexidecimal.
; The third token is the maximum size of the DLL image file, including symbols.
;

usermode    0x00010000  0x60000000


;
; This section lists all the Cairo DLL's.  Until we merge with the NT
; group, limit yourself to the range 0x10000000 - 0x20000000.
;

cardf       0x10000000  0x00200000
eventsys    0x10200000  0x00200000
commnot     0x10400000  0x00200000
cryptdll    0x10600000  0x00200000
demoif      0x10800000  0x00200000
menuedt     0x10a00000  0x00200000
dfsm        0x10c00000  0x00200000
clockctl    0x10e00000  0x00200000
calendar    0x11000000  0x00200000
report      0x11200000  0x00200000
desk        0x11400000  0x00200000
filter      0x11600000  0x00200000
datetime    0x11800000  0x00200000
dtsrv       0x11a00000  0x00200000
iclass      0x11c00000  0x00200000
dfsinit     0x11e00000  0x00200000
cpshare     0x12000000  0x00200000
iprod       0x12200000  0x00200000
kerberos    0x12400000  0x00200000
kerbsupp    0x12600000  0x00200000
applet1     0x12800000  0x00200000
cairocpl    0x12a00000  0x00200000
cpo         0x12c00000  0x00200000
deskapp     0x12e00000  0x00200000
ntlm        0x13000000  0x00200000
objsrv      0x13200000  0x00200000
ole2        0x13400000  0x00200000
lnktrack    0x13600000  0x00200000
pocket      0x13800000  0x00200000
dsfsmsgs    0x13a00000  0x00200000
stemdll     0x13c00000  0x00200000
propset     0x13e00000  0x00200000
prsht       0x14000000  0x00200000
bmpctl      0x14200000  0x00200000
spintime    0x14400000  0x00200000
grpbox      0x14600000  0x00200000
security    0x14800000  0x00200000

; uofs needs two slots worth:
uofs        0x14a00000  0x00400000
;uofs       0x14c00000  0x00200000

; Query needs four slots worth:
query       0x14e00000  0x00800000
;query      0x15000000  0x00200000
;query      0x15200000  0x00200000
;query      0x15400000  0x00200000

;unused     0x15600000  0x00200000
dafs        0x15800000  0x00200000
dahard      0x15a00000  0x00200000
stdobj      0x15c00000  0x00200000
csumcat     0x15e00000  0x00200000
sysmgmt     0x16000000  0x00200000
cpdskadm    0x16200000  0x00200000
idfsvol     0x16400000  0x00200000
testdll     0x16600000  0x00400000
cap         0x16a00000  0x00200000
sysinf      0x16c00000  0x00200000
shtypes     0x16e00000  0x00200000
shexplor    0x17000000  0x00300000
popups      0x17300000  0x00100000
replsup     0x17400000  0x00200000
schema      0x17700000  0x00200000
useragnt    0x18000000  0x00200000
vpcont      0x18200000  0x00200000
uares       0x18400000  0x00200000
rndrevrp    0x18600000  0x00200000
pdfpage     0x18800000  0x00200000
pkgpage     0x18a00000  0x00200000
package     0x18e00000  0x00200000
pdf         0x19000000  0x00200000
dsys        0x19200000  0x00200000
dfssetup    0x19400000  0x00200000
dfsinstr    0x19600000  0x00200000
lprofile    0x19800000  0x00200000
ole232      0x19a00000  0x00400000
compob32    0x19e00000  0x00400000
docfile     0x1a200000  0x00400000
tlib34      0x1a600000  0x00200000
storage     0x1aa00000  0x00600000
ole2pr32    0x1b000000  0x00500000
piballs     0x1b500000  0x00100000
testext     0x1b600000  0x00200000
loghrs      0x1b800000  0x00100000
scstg       0x1b900000  0x00100000
smoke       0x1ba00000  0x00100000
shview      0x1bc00000  0x00200000
shtcmcli    0x1be00000  0x00200000
shdebug     0x1c000000  0x00200000
shell232    0x1c200000  0x00200000
shhdlr      0x1c400000  0x00200000
shprop      0x1c600000  0x00200000
shtcmsrv    0x1c800000  0x00200000
spincube    0x1ca00000  0x00200000

; Repl dlls
chglogdb    0x1cc00000  0x00100000
dumyrclr    0x1cd00000  0x00100000
flatrst     0x1ce00000  0x00100000
lastwins    0x1cf00000  0x00100000
ofsrs       0x1d000000  0x00100000
ora         0x1d100000  0x00100000
orarcnlr    0x1d200000  0x00100000
replui      0x1d300000  0x00100000
roschlog    0x1d400000  0x00100000
rsmgr       0x1d500000  0x00100000
dsobjs      0x1d600000  0x00200000
account     0x1d800000  0x00200000
rcon        0x1da00000  0x00100000
robj        0x1db00000  0x00100000
rset        0x1dc00000  0x00100000
chgp        0x1dd00000  0x00100000

; Old Forms DLLs

form        0x1e000000  0x00200000
formctls    0x1e200000  0x00200000
crstdctl    0x1e400000  0x00200000
formtoc     0x1e600000  0x00200000
proppage    0x1e800000  0x00100000
timing      0x1e900000  0x00100000

;RTO dlls
rtfdisp     0x1eA00000  0x00200000
rtfmle      0x1eC00000  0x00200000
webcore     0x1eE00000  0x00200000
rtfdoc      0x1f000000  0x00200000
ctlrto      0x1f200000  0x00200000

shctrls     0x1f400000  0x00600000
shfx        0x1fa00000  0x00100000
shcommon    0x1fb00000  0x00300000
shtaskhk    0x1fe00000  0x00100000

;
smss        0x20000000  0x40000000
dbgss       0x30000000  0x30000000
csrss       0x40000000  0x20000000
os2ss       0x40000000  0x20000000
psxss       0x40000000  0x20000000
cmd         0x50000000  0x10000000
ntdll       0x60100000  0x00100000
dbgdll      0x60200000  0x00100000
csr         0x60300000  0x00100000
csrrtl      0x60400000  0x00100000
csrsrv      0x60500000  0x00100000
kernel32    0x60600000  0x00100000
basertl     0x60700000  0x00100000
basesrv     0x60800000  0x00100000
consrv      0x60900000  0x00100000
console     0x60A00000  0x00100000
user32      0x60B00000  0x00200000
gdi32       0x60D00000  0x00100000
gdisrv      0x60E00000  0x00200000
jazz        0x61000000  0x00100000
gre         0x61100000  0x00200000
rasdd       0x61300000  0x00100000
sysmono     0x61400000  0x00100000
courier     0x61500000  0x00100000
helv        0x61600000  0x00100000
times       0x61700000  0x00100000
netapi32    0x61800000  0x00200000
winmgr      0x62100000  0x00100000
display     0x62200000  0x00100000
vga         0x62200000  0x00100000
bmfd        0x62300000  0x00100000
ttfd        0x62400000  0x00100000
vtfd        0x62500000  0x00100000
winspool    0x62600000  0x00100000
splsrv      0x62700000  0x00100000
ntprint     0x62800000  0x00100000
pscript     0x62900000  0x00100000
halftone    0x62A00000  0x00100000
lmspool     0x62B00000  0x00100000
os2dll      0x63000000  0x00100000
services    0x63100000  0x00100000
psxdll      0x63200000  0x00100000
userrtl     0x63300000  0x00100000
winnet      0x63400000  0x00100000
msv1_0      0x63500000  0x00100000
samlib      0x635A0000  0x00100000
lsaap       0x63600000  0x00100000
netrap      0x63700000  0x00100000
TEMPNAME2   0x63800000  0x00700000
usersrv     0x63f00000  0x00300000
media       0x65000000  0x00100000
mediasrv    0x66000000  0x00100000
canon330    0x66100000  0x00100000
cit24us     0x66200000  0x00100000
canon10e    0x66300000  0x00100000
canon130    0x66400000  0x00100000
qwiii       0x66500000  0x00100000
citoh       0x66600000  0x00100000
deskjet     0x66700000  0x00100000
epson24     0x66800000  0x00100000
epson9      0x66900000  0x00100000
fuji24      0x66A00000  0x00100000
fuji9       0x66B00000  0x00100000
fujimtrx    0x66C00000  0x00100000
hpdskjet    0x66D00000  0x00100000
hppcl       0x66E00000  0x00100000
ibmgrx      0x66F00000  0x00100000
lq2500      0x67000000  0x00100000
nec24pin    0x67100000  0x00100000
oki24       0x67200000  0x00100000
oki9        0x67300000  0x00100000
oki9ibm     0x67400000  0x00100000
paintjet    0x67500000  0x00100000
proprint    0x67600000  0x00100000
proprn24    0x67700000  0x00100000
thinkjet    0x67800000  0x00100000
ntsdexts    0x67900000  0x00100000
plotter     0x67A00000  0x00100000
rpcrt4      0x67B00000  0x00100000
winmm       0x67D00000  0x00100000
rpcssp      0x67E00000  0x00100000
mciwave     0x67F00000  0x00100000
rpclts1     0x68000000  0x00100000
rpcltc1     0x68100000  0x00100000
ldrdll      0x68200000  0x00100000
mcicda      0x68300000  0x00100000
plottrui    0x68400000  0x00100000
rasddui     0x68500000  0x00100000
pscrptui    0x68600000  0x00100000
mmio        0x68700000  0x00100000
rpcnts1     0x68800000  0x00100000
rpcntc1     0x68900000  0x00100000
nlsapi      0x68A00000  0x00100000
ibm5204     0x68B00000  0x00100000
ti850       0x68C00000  0x00100000
olesvr32    0x68D00000  0x00100000
olecli32    0x68E00000  0x00100000
diconix     0x68F00000  0x00100000
fscaler     0x69000000  0x00100000
sys003      0x69100000  0x00100000
cit9us      0x69200000  0x00100000
escp2       0x69300000  0x00100000
execjet     0x69400000  0x00100000
panson24    0x69500000  0x00100000
panson9     0x69600000  0x00100000
ps1         0x69700000  0x00100000
toshiba     0x69800000  0x00100000
thinkjet    0x69900000  0x00100000
svcctrl     0x69A00000  0x00100000
xactsrv     0x69B00000  0x00100000
winreg      0x69C00000  0x00100000
samsrv      0x69D00000  0x00100000
mmdrv       0x69F00000  0x00100000
dlcapi      0x6A000000  0x00100000
win32spl    0x6A100000  0x00100000
localspl    0x6A200000  0x00100000
rpclts5     0x6A300000  0x00100000
rpcltc5     0x6A400000  0x00100000
netlogon    0x6A500000  0x00200000
tmsre32     0x6A600000  0x00100000
lsaudll     0x6A700000  0x00100000
mciseq      0x6A800000  0x00100000
winprint    0x6A900000  0x00100000
localmon    0x6AA00000  0x00100000
msaudite    0x6AB00000  0x00100000
msauditt    0x6AC00000  0x00100000
hpmon       0x6AD00000  0x00100000
alrsvc      0x6AE00000  0x00100000
srvsvc      0x6AF00000  0x00100000
wkssvc      0x6B000000  0x00100000
xssvc       0x6B100000  0x00100000
rpclts3     0x6B200000  0x00100000
rpcltc3     0x6B300000  0x00100000
htui        0x6B400000  0x00100000
lsasrv      0x6B500000  0x00100000
mmsndsrv    0x6B600000  0x00100000
midi        0x6B700000  0x00100000
bowsvc      0x6B800000  0x00100000
drivers     0x6B900000  0x00100000
lmmon       0x6BA00000  0x00100000

; RTO Toolbar dlls

hyprgzmo    0x6BB00000  0x00100000
hyprbttn    0x6BC00000  0x00100000

;
; The following is an extension for NTSD which traces memory usage in the
; ULIB utilities...
;
memtrace        0x6BF00000      0x00100000

; shell

shamu       0x6C000000  0x00800000

; CD Forms

formkrnl    0x6C800000  0x00200000
cdform2c    0x6CA00000  0x00200000
cdproppg    0x6CC00000  0x00200000
basectrl    0x6CE00000  0x00200000
cdctrls     0x6D000000  0x00200000
cdbase      0x6D200000  0x00200000

; Win32 shell apps/dlls

control     0x70000000  0x00100000
color       0x70100000  0x00100000
sound       0x70200000  0x00100000
ports       0x70300000  0x00100000
intl        0x70400000  0x00100000
date        0x70500000  0x00100000
mouse       0x70600000  0x00100000
keybd       0x70700000  0x00100000
desktop     0x70800000  0x00100000
fonts       0x70900000  0x00100000
security    0x70A00000  0x00100000
main        0x70B00000  0x00100000
ups         0x70C00000  0x00100000

; Win32 National Keyboard Layers

kbdbe       0x72000000  0x00100000
kbdca       0x72100000  0x00100000
kbdda       0x72200000  0x00100000
kbddv       0x72300000  0x00100000
kbdes       0x72400000  0x00100000
kbdfc       0x72500000  0x00100000
kbdfr       0x72600000  0x00100000
kbdfs       0x72700000  0x00100000
kbdgr       0x72800000  0x00100000
kbdic       0x72900000  0x00100000
kbdit       0x72A00000  0x00100000
kbdla       0x72B00000  0x00100000
kbdne       0x72C00000  0x00100000
kbdno       0x72D00000  0x00100000
kbdpo       0x72E00000  0x00100000
kbdsf       0x72F00000  0x00100000
kbdsg       0x73000000  0x00100000
kbdsp       0x73100000  0x00100000
kbduk       0x73200000  0x00100000
kbdus       0x73300000  0x00100000
kbdusx      0x73400000  0x00100000

;
; The following is not currently used until we switch to the new image
; format with the new section headers.
;
executive   0xD0020000  0x18000000





;
;   The following are the Mep extensions
;
tglcase     0x09080000  0x00100000
pmatch      0x09090000  0x00100000
justify     0x090a0000  0x00100000
ulcase      0x090b0000  0x00100000
filter      0x090c0000  0x00100000
mhelp       0x090d0000  0x00100000
mepparty    0x090e0000  0x00100000
srmep       0x090f0000  0x00100000
mshelp      0x09100000  0x00100000
mbrowse     0x09110000  0x00100000



;
;  The following are for the utilities
;
ulib        0x09800000  0x00200000
uhpfs       0x09a10000  0x00100000
ufat        0x09b20000  0x00100000
untfs       0x09c30000  0x00100000
ifsutil     0x09d40000  0x00100000
cufat       0x09e50000  0x00100000
cuhpfs      0x09f60000  0x00100000
fmifs       0x0a070000  0x00100000
uspifs      0x0a180000  0x00100000

;
;  The following are for the net error messages
;
netmsg      0x09600000      0x00080000
neth        0x09680000      0x00080000
netevent    0x09700000      0x00080000

;
;  The following is the I/O error log messages.
;
iologmsg    0x09700000      0x00080000

;
; The following is for the 16-bit loader for the OS/2 subsystem
;
loader      0x20000000  0x01000000

;
; The following is for the Streams/Sockets dll's
;
winsock     0x75000000  0x00200000
winstrm     0x75200000  0x00100000
sockutil    0x75300000  0x00100000
resolver    0x75400000  0x00100000
inetmib1    0x75500000  0x00100000
lmmib2      0x75600000  0x00100000
tcpipsvc    0x75700000  0x00100000
nbtsvc      0x75800000  0x00100000

;
; The following are for the windowed debugger (windbg)
;

eecan       0x40000000  0x00200000
em          0x48000000  0x00200000
shcoff      0x50000000  0x00200000
shcv        0x58000000  0x00200000
tlloc       0x60000000  0x00200000

;
; The following are for the NetUI components.
;

acledit     0x76000000  0x00100000
mprmain     0x76100000  0x00100000
ntlanman    0x76200000  0x00100000
srvmgr      0x76300000  0x00100000
ncpa        0x76400000  0x00100000

;
; The following are for OFS Utilities (CONVERT and REPART)
;
ofsutil     0x76600000  0x00400000
fmtmnofs    0x77000000  0x00200000
cfrtulib    0x77200000  0x00100000

;
; User object property pages.
;

user_ui     0x73000000  0x00400000
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\oleutest\balls\tmarshal.ini ===
;
; Run All the Marshal Tests
;

[Marshal Test]
; these first few are not run due to test bugs
Aggregate		    = 0
CreateRemoteHandler	    = 0
StorageDiffMachine	    = 0
Rundown 		    = 0
Async			    = 0

; all the rest are run
GetStandardMarshal	    = 1
Format			    = 1
GetIIDFromMI		    = 1
MarshalSizeMax		    = 1
LocalInterfaceNormal	    = 1
UniqueQIPointer 	    = 1
LocalInterfaceTableStrong   = 1
LocalInterfaceTableWeak     = 1
UnmarshalGUIDNULL	    = 1
UnmarshalDifferentIID	    = 1
RemoteInterfaceNormal	    = 1
RemoteInterfaceTableStrong  = 1
CustomMarshalNormal	    = 1
CustomMarshalTable	    = 1
Echo			    = 1
MultiQINormal		    = 1
MultiQIHandler		    = 1
Handler 		    = 1
Loop			    = 1
LockObjectExternal	    = 1
DisconnectObject	    = 1
ReleaseMarshalData	    = 1
MiddleMan		    = 1
LocalDiffMachine	    = 1
RemoteDiffMachine	    = 1
ExpiredOXIDs		    = 1
NonNDRProxy		    = 1
MarshalStorage		    = 1
TIDAndLID		    = 1
CrossThread		    = 1
NoPing			    = 1
PSClsid 		    = 1
PSClsid2		    = 1


;
; Run Selected Marshal Tests
;

;[Marshal Test]
Aggregate		    = 0
CreateRemoteHandler	    = 0
StorageDiffMachine	    = 0
Rundown 		    = 0
Async			    = 0

GetStandardMarshal	    = 0
Format			    = 0
GetIIDFromMI		    = 0
MarshalSizeMax		    = 0
LocalInterfaceNormal	    = 0
UniqueQIPointer 	    = 0
LocalInterfaceTableStrong   = 0
LocalInterfaceTableWeak     = 0
UnmarshalGUIDNULL	    = 0
UnmarshalDifferentIID	    = 0
RemoteInterfaceNormal	    = 0
RemoteInterfaceTableStrong  = 0
CustomMarshalNormal	    = 0
CustomMarshalTable	    = 0
Echo			    = 0
MultiQINormal		    = 0
MultiQIHandler		    = 0
Handler			    = 0
Loop			    = 0
LockObjectExternal	    = 0
DisconnectObject	    = 0
ReleaseMarshalData	    = 0
MiddleMan		    = 0
LocalDiffMachine	    = 0
RemoteDiffMachine	    = 0
ExpiredOXIDs		    = 1
NonNDRProxy		    = 0
MarshalStorage		    = 0
TIDAndLID		    = 0
CrossThread		    = 0
NoPing			    = 0
PSClsid 		    = 0
PSClsid2		    = 0
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\oleutest\balls\win.ini ===
;;  debug info levels set by default when an app starts up.
;;  a good value for cairole is 0x4ff for debug outs.

[Cairo Infolevels]
    cairole = 0x03
    ol = 0x03


;;  tmarshal test options.
;;  = 1 means run the test
;;  = 0 means dont run the test
;;

[Marshal Test]
    LocalInterfaceNormal = 1
    LocalInterfaceTableStrong = 1
    LocalInterfaceTableWeak = 1
    RemoteInterfaceNormal = 1
    RemoteInterfaceTableStrong = 1
    RemoteInterfaceTableWeak = 1
    Echo = 1
    Loop = 1
    MiddleMan = 1
    LockObjectExternal = 1
    DisconnectObject = 1
    GetStandardMarshal = 1
    CreateRemoteHandler = 1
    CustomMarshalNormal = 1
    CustomMarshalTable = 1
    MarshalStorage = 1
    Aggregate = 0
    LocalDiffMachine = 0
    RemoteDiffMachine = 0
    StorageDiffMachine = 0


;;  threading modes for the OLE servers
;;  these are used by all OLE servers generated in the com\utest\balls
;;

[TestSrv]
    ThreadMode = SingleThreaded
;;    ThreadMode = MultiThreaded


[OleSrv]
    ThreadMode = SingleThreaded
;;    ThreadMode = MultiThreaded
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\oleutest\balls\client\tmarshal\tmarshal.ini ===
;
; Run All the Marshal Tests
;

[Marshal Test]
; these first few are not run due to test bugs
Aggregate		    = 0
CreateRemoteHandler	    = 0
StorageDiffMachine	    = 0
Rundown 		    = 0
Async			    = 0

; all the rest are run
GetStandardMarshal	    = 1
Format			    = 1
GetIIDFromMI		    = 1
MarshalSizeMax		    = 1
LocalInterfaceNormal	    = 1
UniqueQIPointer 	    = 1
LocalInterfaceTableStrong   = 1
LocalInterfaceTableWeak     = 1
UnmarshalGUIDNULL	    = 1
UnmarshalDifferentIID	    = 1
RemoteInterfaceNormal	    = 1
RemoteInterfaceTableStrong  = 1
CustomMarshalNormal	    = 1
CustomMarshalTable	    = 1
Echo			    = 1
MultiQINormal		    = 1
MultiQIHandler		    = 1
Handler 		    = 1
Loop			    = 1
LockObjectExternal	    = 1
DisconnectObject	    = 1
ReleaseMarshalData	    = 1
MiddleMan		    = 1
LocalDiffMachine	    = 1
RemoteDiffMachine	    = 1
ExpiredOXIDs		    = 1
NonNDRProxy		    = 1
MarshalStorage		    = 1
TIDAndLID		    = 1
CrossThread		    = 1
NoPing			    = 1
PSClsid 		    = 1
PSClsid2		    = 1


;
; Run Selected Marshal Tests
;

;[Marshal Test]
Aggregate		    = 0
CreateRemoteHandler	    = 0
StorageDiffMachine	    = 0
Rundown 		    = 0
Async			    = 0

GetStandardMarshal	    = 0
Format			    = 0
GetIIDFromMI		    = 0
MarshalSizeMax		    = 0
LocalInterfaceNormal	    = 0
UniqueQIPointer 	    = 0
LocalInterfaceTableStrong   = 0
LocalInterfaceTableWeak     = 0
UnmarshalGUIDNULL	    = 0
UnmarshalDifferentIID	    = 0
RemoteInterfaceNormal	    = 0
RemoteInterfaceTableStrong  = 0
CustomMarshalNormal	    = 0
CustomMarshalTable	    = 0
Echo			    = 0
MultiQINormal		    = 0
MultiQIHandler		    = 0
Handler			    = 0
Loop			    = 0
LockObjectExternal	    = 0
DisconnectObject	    = 0
ReleaseMarshalData	    = 0
MiddleMan		    = 1
LocalDiffMachine	    = 0
RemoteDiffMachine	    = 0
ExpiredOXIDs		    = 0
NonNDRProxy		    = 0
MarshalStorage		    = 0
TIDAndLID		    = 0
CrossThread		    = 0
NoPing			    = 0
PSClsid 		    = 0
PSClsid2		    = 0
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\oleutest\letest\readme.txt ===
Author: Kennethm
Date:   3-10-94

There are four applications made from this directory.  These four apps
are made from one common source base.  The master files are found in the
cntroutl subdirectory.  If you make any of the apps their source code
will be copied into the proper subdirectory.

Do not modify any source files other than those in the cntroutl directory!


=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\oleutest\letest\bttncur\changes.txt ===
NOTE:  This DLL is the same as that shipped with the OLE 2.0 SDK
but is updated from that shipped with "The Windows Interface" book
from Microsoft Press.  It is now compatible with Windows NT.


----------


Changes in BTTNCUR.DLL Source Code and Documentation from Version 1.00b
to Version 1.1.  See also below for 1.00 to 1.00b changes.

BTTNCUR.DLL version 1.1 is now fully compatible and tested under Windows
3.0.  Previously the demo application crashed under Windows 3.0
on calls to the non-existent MoveToEx (Win32 compatible).  Version 1.1 only
uses MoveToEx for builds where the symbol WINVER < 0x030a.

Windows NT changes are surrounded by #ifdef WIN32.  The largest change
is the DLL entry point:  LibMain.  Both Win3.1 and Win32 versions
call FInitialize now.

The images have been updated slightly and are now provided for 72dpi
(ega), 96dpi (vga), and 120dpi (super vga)

Version 1.1 completely handles system color changes unlike version 1.00x.
This new version will dynamically convert black, light gray, dark gray,
and white pixels in the image bitmap into system colors set for the
button text, button shadow, button face, and button highlight, respectively.
If you have blue, red, yellow, and green button colors, BTTNCUR.DLL will
now work perfectly with all of them.

BTTNCUR.DLL Version 1.1 also supports color images better by allowing
you to control which colors in the image bitmap are converted to system
colors.  By default, any black, gray, or white colors are converted
into system button colors as decribed in the last paragraph.  BTTNCUR.H
defines new PRESERVE_* flags for each of the four colors that are liable
to be converted.  By specifing one or more flags you prevent BTTNCUR
from changing that color to a system color.  For example, if you
want to preserve all black pixels in your image, specify PRESERVE_BLACK
when calling UIToolButtonDraw.

Applications should obtain configuration data for the current display
through UIToolConfigureForDisplay.  With this data the application can
configure itself for the correct toolbar size and button sizes and load
the appropriate application supplied bitmaps.

Applications using UIToolConfigureForDisplay should now use
UIToolButtonDrawTDD instead of UIToolButtonDraw, passing one extra
parameter, a pointer to the TOOLDISPLAYDATA.  Applications that
still call UIToolButtonDraw will always use 96dpi.


------------------------
BTTNCUR.H changes
    Added PRESERVE_ flags to allow application to control color conversions
    from black, dark gray, light gray, and white into the
    file compatible with C++.

    Added prototype for UIToolConfigureForDisplay, TOOLDISPLAYDATA structure,
    and definitions for button and image sizes on 72dpi, 96dpi, and 120dpi.

------------------------
BTTNCUR.RCV version changes
    FILEVERSION and PRODUCTVERSION changed from 1,0,0,2 to 1,0,1,0

    VALUE "FileVersion" and VALUE "ProductVersion" changed from
        "1.00b\0","\0" to "1.1\0","\0"


------------------------
BTTNCURI.H changes
    Defined STDCOLOR_* values as indices into an array in BTTNCUR.C
    that holds hard-coded default button color that never change
    regardless of the system colors.  Also defined SYSCOLOR_*
    flags that matched STDCOLOR_* flags for uniform array indices.

    Removed NEAR, FAR, and PASCAL from any function that didn't need it
    so we can port to Windows NT cleanly.

------------------------
BTTNCUR.C source code changes.  There are significant modifications.

Overall:
    Updated header comment

    Removed NEAR, FAR, and PASCAL from any function that didn't need it
    so we can port to Windows NT cleanly.

Globals:
    Eliminated the COLORREFs prefixed with RGB.  Only a few are needed
    statically and were moved to HBrushDitherCreate.

    Also added an array of standard colors used in the standard images:

    static const
    COLORREF crStandard[4]={ RGB(0, 0, 0)         //STDCOLOR_BLACK
                           , RGB(128, 128, 128)   //STDCOLOR_DKGRAY
                           , RGB(192, 192, 192)   //STDCOLOR_LTGRAY
                           , RGB(255, 255, 255)}; //STDCOLOR_WHITE

    Added an array of standard images instead of just 96dpi versions.

UIToolConfigureForDisplay:
    Added function to return the resolution of the display and
    size information about button and image sizes.


ToolButtonInit():
    Call to CreatePatternBrush moved into HBrushDitherCreate.
    Conditionally sets the highlight color for HDitherBrushCreate
    depending on Windows 3.x or Windows 3.0 (3.0 did not support
    COLOR_BTNHIGHLIGHT).


ToolButtonFree():
    Removed some old debug output no longer useful.


HDitherBitmapCreate()
    Renamed to HBrushDitherCreate.
    Moved CreatePatterBrush code from ToolButtonInit into this
    function.

    To support changing system colors, this function maintains
    static variables for the face and highlight colors that we
    use to create the brush.  If the function is called and the
    current colors in the global hBrushDither are different than
    the system colors, we recreate the brush and update the global
    hBrushDither, deleting the old brush.  Otherwise we just return
    hBrushDither.

    Note that if we fail to create the new brush we just maintain
    the old.  We'll paint something, albeit not in the right colors,
    but something nontheless.


UIToolButtonDraw():
    Calls UIToolButtonDrawTDD with default display configuration.

UIToolButtonDrawTDD():
    This is the function that was overhauled the most, specifically
    to handle variable colors.

    First, we added several local variables of which two are important.
    crSys is an array of system colors for the text, shadow, face,
    highlight, and frame, declared as static to keep references to
    it off DS instead of SS; if it's in SS things will crash.  The second
    important variable is uColor, which receives the color preservation
    flags passed in the hibyte of the uState parameter to UIToolButtonDraw.

    All the code to draw a blank button outline was moved into a separate
    function DrawBlankButton.  Since this procedure needs all the system
    colors to do it's thing, I've set it up to take an array of five
    COLORREFs (exactly crSys) in which it stores those color (it also
    uses it as its color variables).  This way we only have to call
    GetSysColor once for each system color.

    Anything dealing with the dithered brush is moved to the
    BUTTONGROUP_LIGHTFACE case where we just get the current brush
    by calling HBrushDitherCreate, passing it the current face
    and highlight colors.  Remember that is these colors match those
    used in the currently held global hBrushDither, this function just
    returns that global, so it's quite fast.  We have to be very careful
    not to delete this brush where we're done with it since it is global.

    The largest amount of new code is under the line:

    if ((uState & BUTTONGROUP_ACTIVE) && !(uState & BUTTONGROUP_BLANK))

    This has changed from a single BitBlt call to a much more complex
    operation to handle specific color conversions and preservations.
    A little optimization was done to detect when the system colors
    for buttons match the defaults, that is, black, dark gray, light gray,
    and white for text, shadow, face, and highlight.  If these colors
    all match, or if the caller requested preservation of all colors,
    the we just do the single BitBlt of old.

    Otherwise we loop through each of the black/white/gray colors
    that need possible conversion.  For each one we create a mask
    that contains 1's where the converting color exists in the image
    and 0's everywhere else.  For each color then we BitBlt the
    mask, a brush matching the system color we're converting to,
    and the destination bitmap (which we initialize with the unmodified
    image itself) using ROP_DSPDxax.  This leaves any color but the
    one under conversion alone and replaces the converted color with
    the system color.

    If the caller set a specific flag to preserve one or more specific
    colors, then we replace the standard color with the standard color,
    resulting in a no-op.

    Finally, to reduce flicker for this four Blt operation we create
    and build the final image in a temporary bitmap, making it 6 total
    Blts to handle the color changes.  But since we optimized for the
    99% case where the system colors are the standard colors, this isn't
    too much of a consideration.

    color conversions.


DrawBlankButton():
    New internal function.  Moved code from UIToolButtonDraw here.




------------------------
CURSORS.C
    Updated header comment

    Removed PASCAL on both internal functions.


    CursorsFree
        Eliminated all the code inside this function as it was unnecessary.

    UICursorLoad
        Eliminated code to revalidate a cursor in the array.  Unnecessary.


------------------------
BCDEMO.C

    Tested for running under Windows 3.0 and avoided MoveToEx calls,
    using MoveTo instead.  Calling MoveToEx in a Windows 3.1 app
    marked as 3.0 compatible under 3.0 causes an unknown GP fault.

    Uses UIToolButtonConfigureForDisplay and UIToolButtonDrawTDD.


------------------------------------------------------------------------------

Changes in BTTNCUR.DLL Source Code and Documentation from Version 1.00
to Version 1.00b

------------------------
BTTNCUR.H changes
    Added #ifdef __cplusplus to include extern "C" making the
    file compatible with C++.


------------------------
BTTNCURI.H changes
    Added #ifdef __cplusplus to include extern "C" making the
    file compatible with C++.

    Removed code contained between a #ifdef NEVER that is unused.


------------------------
BTTNCUR.RCV version changes
    FILEVERSION and PRODUCTVERSION changed from 1,0,0,0 to 1,0,0,2

    VALUE "FileVersion" and VALUE "ProductVersion" changed from
        "1.00\0","\0" to "1.00b\0","\0"


------------------------
BTTNCUR.C source code changes.

    Added a global for the frame color
    static COLORREF rgbFrame   =RGB(0, 0, 0);

WEP():
    Added comment about resource cleanup messages in DEBUG mode.


ToolButtonInit():
    Added the line below just before the assignment of hDCGlyphs:

        rgbFrame=GetSysColor(COLOR_WINDOWFRAME);

    This insures that the frame color is properly shown on plasma
    displays.


ToolButtonFree():
    Added the following lines just before return:

        if (NULL!=hBmpStandardImages)
            DeleteObject(hBmpStandardImages);
        hBmpStandardImages=NULL;


UIToolButtonDraw():
    The image centering is one too high.  The line 

        yOffsetGlyph=((dy-bmy) >> 1)-1;

    now reads:
   
        yOffsetGlyph=(dy-bmy) >> 1;


    The declaration HBITMAP hBmp; now read HBITMAP hBmp=NULL;

    The line hBmpT=SelectObject(hDCGlyphs, hBmp); is now two:

        if (NULL!=hBmp)
            SelectObject(hDCGlyphs, hBmp);

    The line SelectObject(hDCGlyphs, hBmpT); is now two:

        if (NULL!=hBmpT)
            SelectObject(hDCGlyphs, hBmpT);



------------------------
BTTNCUR.BMP
    Fixed the images to be 16*15 (the standard) instead of 16*16
    as they originally were.  Changed the label "16x16" to "16x15".

    Copied an image of the disabled state of Context-Sensitive Help
    to this bitmap as it was previously missing.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\oleutest\letest\ole2ui\defuimak.ini ===
#  This is the DEBUG UILibrary INI file
MSG=DEBUG Version ($(LANG))
DEBUG=1
LIBNAME=outlui
REL_DIR=c:\ole2samp\release
OLEREL_DIR=c:\ole2samp\release
OBJ=DEBUG
RESOURCE=RESOURCE
CFLAGS=-c -Od -Gw2cs -W3 -Zpei -AMw -D_DEBUG -D_WINDLL -Gi
AFLAGS=-mx -Zi -DDEBUG
RFLAGS=-D DEBUG
LFLAGS=/MAP /CO /L /NOD /NOE /SE:300
UILIBS=mdllcew libw ole2 storage shell commdlg toolhelp
CC=cl
AS=masm
RS=rc
LK=link
LANG=USA
DLLOBJS = $(UI_DLLOBJS:D^\=DEBUG^\)
LIBOBJS = $(UI_COBJS:D^\=DEBUG^\) $(UI_NOPCOBJS:D^\=DEBUG\NOPC^\)
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\oleutest\letest\ole2ui\uimake.ini ===
#  This is the DEBUG static .LIB UILibrary INI file
MSG=DEBUG Static LIB Version ($(LANG))
DEBUG=1
MODEL=M
# Make a static library called OLE2UI.LIB
LIBNAME=OLE2UI
REL_DIR=d:\cairo\cairole\h\export
OLEREL_DIR=d:\cairo\cairole\h\export
OBJ=DEBUGLIB
BUILD=LIB
RESOURCE=RESOURCE

# 16 bit CFLAGS=-c -Od -GA2s -W3 -Zpei -AM -D_DEBUG -DWIN32 -DUNICODE

CFLAGS=-c -Od -Gs -W3 -Zpei -D_DEBUG -DWIN32 -DUNICODE
RFLAGS=-D DEBUG
LFLAGS=/MAP:FULL /CO /LINE /NOD /NOE /SE:300 /NOPACKCODE
UILIBS=mlibcew libw ole2 storage shell commdlg toolhelp
CC=cl
AS=masm
RS=rc
LK=link
LANG=USA
LIBOBJS = $(UI_COBJS:D^\=DEBUGLIB^\) $(UI_NOPCOBJS:D^\=DEBUGLIB\NOPC^\)
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\oleutest\perform\driver\bm.ini ===
;
;                   CairOLE BenchMark Testing Parameter File
;


;   Parameters in this section are header info and global test parameters
;   such as the log file and results file.
;
[Driver]
    Tester=Unknown
    Report=bm.res
    Log=bm.log
    InitFlag=COINIT_APARTMENTTHREADED
    PauseBetweenTests=100


;   Some of the config specifications are checked automatically but can
;   be overridden with these entries
;
[Config]
;    Mfg=Gateway 486DX/33
;    CPU=i486/33
;    RAM=16 Meg.
;    OS=Free Nt755
;    DISK=FAT


;   Test for raw performance/timer accuracy
;
[Noise Test]
    Comment=Basic raw performance/timer accuracy tests


;   Test calling OleInitialize/OleUninitialize repeatedly
;
[OleInitialize]
    Comment=First case is pairs of calls.
    Iterations=8


;   Tests CoRegisterClassObject & CoRevokeClassObject
;
[ObjRegistration]
    Comment=Internal Class is used
    ClsId_InProc={99999999-0000-0008-C000-000000000052}
    ClsId_Local={99999999-0000-0008-C000-000000000051}
    Iterations=8


;   Test CoGetClassObject, CreateInstance
;
[ObjActivation]
    Comment= LocalServer = mdi.exe, InProcServer = dlltest.dll
    ClsId_InProc={99999999-0000-0008-C000-000000000052}
    ClsId_Local={99999999-0000-0008-C000-000000000051}
    Iterations=8


;   Tests FileMoniker BindToObject
;
[BindToObject]
    Comment= LocalServer = mdi.exe, InProcServer = dlltest.dll
    ClsId_InProc={99999999-0000-0008-C000-000000000052}
    ClsId_Local={99999999-0000-0008-C000-000000000051}
    Iterations=8


;   Tests FileMoniker BindToStorage
;
[BindToStorage]
    Comment= LocalServer = mdi.exe, InProcServer = dlltest.dll
    ClsId_InProc={99999999-0000-0008-C000-000000000052}
    ClsId_Local={99999999-0000-0008-C000-000000000051}
    Iterations=8


;   Test Running Object Table
;
[ROT]
    Comment= LocalServer = mdi.exe, InProcServer = dlltest.dll
    ClsId_InProc={99999999-0000-0008-C000-000000000052}
    ClsId_Local={99999999-0000-0008-C000-000000000051}
    Iterations=8


;   Not Yet Working
;
[Properties]
    Comment=TBD


;   Tests CoMarshalInterface & CoUnmarshalInterface
;
[Marshalling]
    Comment=Unmarshalled into same process. LocalServer = qisrv.exe
    ClsId={00000140-0000-0008-C000-000000000046}
    ClsCtx=InProc
    Iterations=8


;   Tests various marshaling APIs
;
[Marshalling2]
    Comment=Unmarshalled into same process. LocalServer = qisrv.exe
    ClsId={00000140-0000-0008-C000-000000000046}
    ClsCtx=InProc
    Iterations=8


;   Tests Ole Object Method Calls over Rpc
;
[RpcTest]
    Comment=Ole Object Method Calls over Rpc. LocalServer = rpctst.exe
    Clsid_Local={0000013d-0001-0008-C000-000000000046}
    Clsid_Inproc={00000140-0000-0008-C000-000000000046}
    Iterations=8
    Average=N


;   Tests Ole Object Method Calls over Rpc
;
[RpcTest2]
    Comment=Ole Object Method Calls over Rpc. LocalServer = rpctst.exe
    Clsid_Local={0000013d-0001-0008-C000-000000000046}
    Clsid_Inproc={00000140-0000-0008-C000-000000000046}
    Iterations=8
    Average=N


;   Tests function calls over Raw Rpc
;
[RawRpc]
    Comment=Function calls over Raw Rpc
    Iterations=8
    Server=rawrpc.exe
    Debug=N
    Protseq=ncalrpc
    Average=N


;   Tests nested calls over Rpc
;
[Nested]
    Comment=Nested Rpc calls. LocalServer = loopsrv.exe
    Clsid_Local={0000013c-0001-0008-C000-000000000046}
    Iterations=8


;   Tests Ole QueryInterface Calls
;
[QueryInterface]
    Comment=QueryInterface calls over Rpc. LocalServer = qisrv.exe
    Clsid_Local={00000140-0000-0008-C000-000000000046}
    Clsid_Inproc={00000140-0000-0008-C000-000000000046}
    Iterations=8


;   Tests calling IsEqualGUID api vs memcmp
;
[GuidCompare]
    Comment=Compare timings of memcmp vs IsEqualGUID
    Iterations=8


;   Tests calling CoGetPSClsid
;
[CoGetPSClsidTest]
    Comment=call CoGetPSClsid
    Iterations=8


;   Tests Miscellaneous COM Apis
;
[ApiTest]
    Comment=Miscellaneous COM Apis
    ClsId_Local={99999999-0000-0008-C000-000000000051}
    Iterations=8


;   Tests default OLE IMalloc implementation
;
[IMalloc]
    Comment=OLE2 IMalloc
    Iterations=8

;
; Win32 File IO Api test
; AccessMode is either NORMAL, MAPPED or ASYNC
; ReadMode is either RANDOM or SEQUENTIAL
;
[FileIOTest]
    Commet=File IO Test
    Iterations=8
    FileName=stgtest.bm
    AccessMode=MAPPED
    ReadMode=SEQUENTIAL
    WriteThrough=OFF
    Flush=ON
    StartSize=512
    EndSize=4096
    RepeatFactor=1


;
; Simple Storage Test
; FileMode is either DIRECT or TRANSACTED
; ReadMode is either RANDOM or SEQUENTIAL
;
[StorageTest]
    Comment=Storage Test
    Iterations=8
    FileName=stgtest.bm
    FileMode=DIRECT
    ReadMode=SEQUENTIAL
    SetSize=ON
    StartSize=512
    EndSize=4096
    RepeatFactor=1


;
; Nested Storage Test
;
[NestedStorageTest]
    Comment=Nested Storage Test
    Iterations=1
    FileName=stgtest.bm
    FileMode=DIRECT
    DataSize=4096
    Branching=2
    Nesting=3
    Delete=ON

;
; Generic Storage test
; Executes commands from <ScriptName> file
;
[StorageParserTest]
    Comment=Storage parser test
    Iterations=1
    ScriptName=storage.scp

[CreateTest]
        Comment=Testing Ole Create Api
        Iterations=8

[CreateLinkTest]
        Comment=Testing Ole CreateLink Api
        Iterations=8

[ClipbrdTest]
        Comment=Testing Ole Clipboard Apis
        Iterations=8

[LoadTest]
        Comment=Testing OleLoad And OleSave
        Iterations=8

[IOLTest]
        Comment=Testing IOleLink methods
        Iterations=8

[CacheTest]
        Comment=Testing IOleCache methods
        Iterations=8

;   This sections lists each test and whether to execute it or not.  Setting
;   the value to OFF or FALSE turns execution off.
;
[Tests]
    Properties=OFF
    FileIOTest=off
    StorageTest=OFF
    NestedStorageTest=OFF
    StorageParserTest=off
    CreateTest=off
    CreateLinkTest=off
    ClipbrdTest=off
    LoadTest=OFF
    IOLTest=off
    CacheTest=off
    RpcTest2=off


    Noise Test=on
    RawRpc=on
    OleInitialize=on
    ObjRegistration=on
    ObjActivation=on
    BindToObject=on
    BindToStorage=on
    ROT=on
    Nested=on
    QueryInterface=on
    ApiTest=on
    IMalloc=on
    GuidCompare=on
    Marshalling2=on
    RpcTest=on
    Marshalling=on
    CoGetPSClsidTest=on
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\oleutest\simpcntr\readme.txt ===
Simpcntr
--------
This sample is the simplest OLE 2.0 container that can be written and
still support the visual editing feature.  The sample has no native
file format, and can only support one OLE object at a time.  The
Insert Object command is used to create an object.

See the MAKEFILE for compilation instructions.


Simple Container Objects Overview :
-----------------------------------
Simple Container consists of three main objects. The top level is CSimpleApp,
under which is CSimpleDoc, and the innermost level is CSimpleSite. CSimpleApp
is used to hold the main window information. (eg. handle to the main window,
handle to the UI Active Object) CSimpleApp always exists as long as the
simple container application is alive. It demonstrates the implementation of
IOleInPlaceFrame, in its nested class COleInPlaceFrame.

The next level object is CSimpleDoc object. It is instantiated by CSimpleApp
when a new document is created. It is used to hold the handles to the main
menus and the submenus and manipulate changes to these menus.

The CSimpleDoc object instantiates CSimpleSite object as the user chooses to
insert a new object into the document. CSimpleSite demonstrates the
implementation of IAdviseSink, IOleInPlaceSite and IOleClientSite through
its nested classes. These interfaces are implemented as CAdviseSink,
COleInPlaceSite and COleClientSite accordingly. CSimpleSite acts as a client
site to communicate to a remote server.


=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\oleutest\simpdnd\readme.txt ===
Simple Drag and Drop Sample
---------------------------

This sample demonstrates an implementation of OLE 2 drag and drop. It allows
drag and drop operations between two instances of the sample application.
For information on compiling and building the sample, see the makefile in
this directory.


Simple Drag and Drop Objects Overview :
---------------------------------------
Simple Drag and Drop consists of three main objects. The top level is
CSimpleApp, under which is CSimpleDoc, and the innermost level is CSimpleSite.
CSimpleApp is used to hold all the main window information. (eg. handle to
the main window, handles to the main, edit, and help menus and the application
instance) CSimpleApp always exists as long as the simple drag and drop
application is alive.

The next level object is CSimpleDoc object. It is instantiated when a new
document is created. It enables and disables the menu items in the main menu.
Since simple drag and drop is a single document interface application, the
user is only allowed to insert one object into the document. It is
necessary to disable certain items from the main menu to avoid incorrect
selection. It also registers the window for drag and drop and manipulates
the clipboard operations, such as copy to the clipboard, flush the clipboard.
It demonstrates the implementates of two OLE interfaces in its nested classes,
IDropSource and IDropTarget. These two interfaces are implemented as
CDropSource and CDropTarget respectively.

The CSimpleDoc object instantiates two different objects based on the user
selection from the main menu. The CSimpleSite object is instantiated if the
user chooses to insert a new object into the document. CSimpleSite
demonstrates the implementation of IAdviseSink and IOleClientSite through its
nested classes. These two interfaces are implemented as CAdviseSink and
COleClientSite accordingly. CSimpleSite manipulates the storage handling and
acts as a client site to communicate to a remote server. Such server can be
an executable server or a dll server. The CDataXferObj object is instantiated
when the user chooses to copy the existing object from the current document.
it is required to copy an object to the clipboard. CDataXferObj demonstrates
the IDataObject interface implementation and performs data transfer
operations.






=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\oleutest\simpsvr\debug.log ===
NULL CLSID @ 135250 doesn't support debug dumping
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\oleutest\stgbvt\readme.txt ===
This directory contains a snapshot of directories needed to build stgbase
suite.  The enviornment variables needed to be set for the build are
CTCOMTOOLS=\nt\private\oleutest\stgbvt\comtools
CTOLERPC=\nt\private\oleutest\stgbvt\ctolerpc
CTOLESTG=\nt\private\oleutest\stgbvt\CTOLESTG
Build comtools dir, ctolerpc dir and ctolestg directory in that order, from
each directory.
stgbase.exe would be built in \nt\private\oleutest\stgbvt\CTOLESTG\bin\<daytona\chicago>\<i386\alpha> directory.
To run the entire suite, the batch file is in \nt\private\oleutest\stgbvt\CTOLES
TG\batch\basetsts.bat.  That can be run with differnt options for docfile/nss/cn
ss on different file systems. A part of this file would be run for bvt suite aft
er it is evaluated which tests need to be run for bvt suite.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\oleutest\simpsvr\readme.txt ===
Simpsvr
--------
This sample is the simplest OLE 2.0 object that can be written and
still support the visual editing feature.  The object that this server
supports is a colored square with a black border.

See the MAKEFILE for compilation instructions.


Simple Server Objects Overview
------------------------------
Simple server consists of three main objects. The top level is CSimpSvrApp,
under which is CSimpSvrDoc, and the innermost level is CSimpSvrObj.CSimpSvrApp
is used to hold all the main window information. (eg. handle to the main
window, handles to the main, color, and help menus and the application
instance) Therefore, CSimpSvrApp always exists as long as the simple server
application is alive. The CSimpSvrApp instantiates the Class Factory, if
simple server is started as embedding. (ie. started by OLE) The next level
object is CSimpSvrDoc object. It is instantiated by the time CSimpSvrApp is
created. It manipulates the document window and also the hatch window.
(See OLE2UI for detail on the hatch window) The CSimpSvrObj, the innermost
simple server object, shows six OLE interfaces implementations in its nested
classes. The six OLE interfaces demonstrated are IOleObject, IPersistStorage,
IDataObject,IOleInPlaceActiveObject,IOleInPlaceObject,and IExternalConnection.
These six interfaces are implemented as different classes namely: COleObject,
CPersistStorage, CDataObject, COleInPlaceActiveObject, COleInPlaceObject,
and CExternalConnection. The CSimpSvrObj handles the drawing of the object
and all the OLE connections between the container and the server.




=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\oleutest\stgbvt\ctolestg\tests\stgbase\readme.txt ===
StgBase.exe
-----------
This suite of tests does very basic testing of ole storage.
All binaries are in the bin subtree, all batchfiles and 
other scripts are in the batch subdirectory.

To run the basic suite locally, use the basetsts.bat file.

Due to added features in ole32 and ntfs for WinNT50, stgbase
will run in different modes to test the different features now
available for storage.

By default only basic docfiles are used in WindowsNT50. But you can
change the default behaviour on NTFS5 drives to use the new Ntfs 
Structured Storage format by changing some values in the registry.

For docfile format:
HKLM\Software\Microsoft\Ole 
    EnableNtfsStructuredStorage = "NN"

For Ntfs Structured Storage format 
HKLM\Software\Microsoft\Ole 
    EnableNtfsStructuredStorage = "YY"
    EnableCNSS = "Y"

1. Basic docfile. Run this on a FAT or NTFS4 volume (or with the
   above registry settings for docfile on NTFS5 drive) with 
   basetsts.bat
2. Ntfs Structured Storage (nssfile). Run this suite on a local NTFS5 
   volume with basetsts.bat with the Ntfs Structured Storage settings
3. Conversion between Ntfs Structured Storage and Basic Docfile.  
   There are two methods to invoke this test mechanism. 
	1. Local machine. Set the following values in the registry
	   under HKLM\Software\Microsoft\Ole 
	       EnableNtfsStructuredStorage = "YN"
               EnableCNSS = "Y"
	   Then run the suite on a local NTFS5 volume with
	   basetsts.bat
	2. Distributed method, requiring two machines.

Distributed Run
---------------

This requires two machines, one is  the server and the other the
client. The server will be  creating nssfiles, the client will be
accessing these test files as docfiles - thus invoking conversion
over the redirector. This method requires the use of rundrive and
stgchk utilitys.

For a distributed run of the base tests, you will need to use the
rundrive utility, and also have stgchk available. To run:

On the server, run 'dstginst.bat s' to register the rundrive utils,
share a directory and prepare the distributed scripts.

On the client, run 'dstginst.bat c <servername>' to register
rundrive utils,  connect to the server via net use, and finish
preparing the distributed scripts.

On the client, run dstgrun.bat to run the tests.
All the logs should end up on the server machine.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\oleutest\utests16\simpdnd\readme.txt ===
Simple Drag and Drop Sample

	This sample demonstrates an implementation of OLE 2 drag and drop.
For information on compiling and building the sample, see the makefile in
this directory.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\oleutest\utests16\simpsvr\readme.txt ===
Simpsvr
--------
This sample is the simplest OLE 2.0 object that can be written and
still support the visual editing feature.  The object that this server
supports is a colored square with a black border.

See the MAKEFILE for compilation instructions.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\published\mc\readme.txt ===
If you make a change to any of the MC files in this directory, then you
  need to rebuild allerror.mc.  This normally will be done automatically,
  but can also be done by invoking "nmake allerror.mc".  When you checkin
  your changes to the private .mc files, then you should also check in the
  updated allerror.mc.

  When allerror.mc is updated automatically, it will not be checked out.
  It will just be attrib -r'd.


  The whole reason for this messy requirement is that if _objects.mac does
  not exist, it will be generated incorrectly when allerror.mc is not
  present during the pass zero scan. This causes allerror.rc to not be built
  and breaks the types2\proxy\proxy build.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\rpc\locator\nsserver\inc\readme.txt ===
[TEXT: No readable text]
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\rpc\locator\nsserver\src\readme.txt ===
api.cxx       -- all the entry points
locator.cxx   -- locator class implementation
brodcast.cxx  -- only broadcast functionality
mailslot.cxx  --
nt4confg.cxx  --
objects.cxx   --
respond.cxx   --
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\rpc\midl\statistics\unioninfo.log ===
* 32 FileName: .\stub.h, Symbol: un_sl, Kind 2(Union_NonEncap_DCE), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: .\stub.h, Symbol: _sl, Kind 2(Union_NonEncap_DCE), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: .\stub.h, Symbol: _usl, Kind 2(Union_NonEncap_DCE), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: .\stub.h, Symbol: _cl, Kind 2(Union_NonEncap_DCE), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: .\stub.h, Symbol: _union_char, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 32 FileName: .\stub.h, Symbol: _union_boolean, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 32 FileName: .\stub.h, Symbol: _predef_union, Kind 2(Union_NonEncap_DCE), Arms: 20 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
15 
16 
17 
18 
19 
20 
DEFAULT
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0004, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0005, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0006, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 32 FileName: F:\nt\public\sdk\inc\objidl.h, Symbol: __MIDL_IAdviseSink_0002, Kind 1(Union_Encap), Arms: 2 
7 
5 
DEFAULT
+

* 32 FileName: F:\nt\public\sdk\inc\objidl.h, Symbol: __MIDL_IAdviseSink_0003, Kind 1(Union_Encap), Arms: 8 
0 
32 
64 
16 
1 
2 
4 
8 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0004, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0005, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0006, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 64 FileName: F:\nt\public\sdk\inc\objidl.h, Symbol: __MIDL_IAdviseSink_0002, Kind 1(Union_Encap), Arms: 2 
7 
5 
DEFAULT
+

* 64 FileName: F:\nt\public\sdk\inc\objidl.h, Symbol: __MIDL_IAdviseSink_0003, Kind 1(Union_Encap), Arms: 8 
0 
32 
64 
16 
1 
2 
4 
8 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: F:\nt\public\sdk\inc\propidl.h, Symbol: __MIDL___MIDL_itf_propidl_0000_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
0 
DEFAULT
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: F:\nt\public\sdk\inc\propidl.h, Symbol: __MIDL___MIDL_itf_propidl_0000_0001, Kind 2(Union_NonEncap_DCE), Arms: 97 
0 
1 
16 
17 
2 
18 
3 
19 
22 
23 
14 
20 
21 
4 
5 
11 
65535 
10 
6 
7 
64 
72 
71 
8 
4095 
65 
70 
30 
31 
13 
9 
66 
68 
67 
69 
73 
8208 
8209 
8194 
8210 
8195 
8211 
8214 
8215 
8196 
8197 
8198 
8199 
8200 
8203 
8206 
8201 
8205 
8202 
8204 
4112 
4113 
4098 
4114 
4099 
4115 
4116 
4117 
4100 
4101 
4107 
4106 
4102 
4103 
4160 
4168 
4167 
4104 
8191 
4126 
4127 
4108 
16400 
16401 
16386 
16402 
16387 
16403 
16406 
16407 
16388 
16389 
16395 
16398 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
+

* 64 FileName: F:\nt\public\sdk\inc\propidl.h, Symbol: __MIDL___MIDL_itf_propidl_0000_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
0 
DEFAULT
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: F:\nt\public\sdk\inc\propidl.h, Symbol: __MIDL___MIDL_itf_propidl_0000_0001, Kind 2(Union_NonEncap_DCE), Arms: 97 
0 
1 
16 
17 
2 
18 
3 
19 
22 
23 
14 
20 
21 
4 
5 
11 
65535 
10 
6 
7 
64 
72 
71 
8 
4095 
65 
70 
30 
31 
13 
9 
66 
68 
67 
69 
73 
8208 
8209 
8194 
8210 
8195 
8211 
8214 
8215 
8196 
8197 
8198 
8199 
8200 
8203 
8206 
8201 
8205 
8202 
8204 
4112 
4113 
4098 
4114 
4099 
4115 
4116 
4117 
4100 
4101 
4107 
4106 
4102 
4103 
4160 
4168 
4167 
4104 
8191 
4126 
4127 
4108 
16400 
16401 
16386 
16402 
16387 
16403 
16406 
16407 
16388 
16389 
16395 
16398 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: propidl.h, Symbol: __MIDL___MIDL_itf_pbagex_0001_0001, Kind 2(Union_NonEncap_DCE), Arms: 97 
0 
1 
16 
17 
2 
18 
3 
19 
22 
23 
14 
20 
21 
4 
5 
11 
65535 
10 
6 
7 
64 
72 
71 
8 
4095 
65 
70 
30 
31 
13 
9 
66 
68 
67 
69 
73 
8208 
8209 
8194 
8210 
8195 
8211 
8214 
8215 
8196 
8197 
8198 
8199 
8200 
8203 
8206 
8201 
8205 
8202 
8204 
4112 
4113 
4098 
4114 
4099 
4115 
4116 
4117 
4100 
4101 
4107 
4106 
4102 
4103 
4160 
4168 
4167 
4104 
8191 
4126 
4127 
4108 
16400 
16401 
16386 
16402 
16387 
16403 
16406 
16407 
16388 
16389 
16395 
16398 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: propidl.h, Symbol: __MIDL___MIDL_itf_pbagex_0001_0001, Kind 2(Union_NonEncap_DCE), Arms: 97 
0 
1 
16 
17 
2 
18 
3 
19 
22 
23 
14 
20 
21 
4 
5 
11 
65535 
10 
6 
7 
64 
72 
71 
8 
4095 
65 
70 
30 
31 
13 
9 
66 
68 
67 
69 
73 
8208 
8209 
8194 
8210 
8195 
8211 
8214 
8215 
8196 
8197 
8198 
8199 
8200 
8203 
8206 
8201 
8205 
8202 
8204 
4112 
4113 
4098 
4114 
4099 
4115 
4116 
4117 
4100 
4101 
4107 
4106 
4102 
4103 
4160 
4168 
4167 
4104 
8191 
4126 
4127 
4108 
16400 
16401 
16386 
16402 
16387 
16403 
16406 
16407 
16388 
16389 
16395 
16398 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0004, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0005, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0006, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 32 FileName: objidl.h, Symbol: __MIDL_IAdviseSink_0002, Kind 1(Union_Encap), Arms: 2 
7 
5 
DEFAULT
+

* 32 FileName: objidl.h, Symbol: __MIDL_IAdviseSink_0003, Kind 1(Union_Encap), Arms: 8 
0 
32 
64 
16 
1 
2 
4 
8 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0004, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0005, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0006, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 64 FileName: objidl.h, Symbol: __MIDL_IAdviseSink_0002, Kind 1(Union_Encap), Arms: 2 
7 
5 
DEFAULT
+

* 64 FileName: objidl.h, Symbol: __MIDL_IAdviseSink_0003, Kind 1(Union_Encap), Arms: 8 
0 
32 
64 
16 
1 
2 
4 
8 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: F:\nt\public\sdk\inc\oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: F:\nt\public\sdk\inc\oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: F:\nt\public\sdk\inc\oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0005, Kind 2(Union_NonEncap_DCE), Arms: 4 
26 
27 
28 
29 
DEFAULT
+

* 32 FileName: F:\nt\public\sdk\inc\oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0006, Kind 2(Union_NonEncap_DCE), Arms: 4 
0 
3 
1 
2 
+

* 64 FileName: F:\nt\public\sdk\inc\oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: F:\nt\public\sdk\inc\oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: F:\nt\public\sdk\inc\oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0005, Kind 2(Union_NonEncap_DCE), Arms: 4 
26 
27 
28 
29 
DEFAULT
+

* 64 FileName: F:\nt\public\sdk\inc\oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0006, Kind 2(Union_NonEncap_DCE), Arms: 4 
0 
3 
1 
2 
+

* 32 FileName: accctrl.h, Symbol: __MIDL___MIDL_itf_iaccess_0009_0002, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
0 
3 
4 
+

* 64 FileName: accctrl.h, Symbol: __MIDL___MIDL_itf_iaccess_0009_0002, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
0 
3 
4 
+

* 32 FileName: trksvr.h, Symbol: __MIDL___MIDL_itf_trkwks_0006_0016, Kind 2(Union_NonEncap_DCE), Arms: 6 
0 
1 
2 
3 
4 
6 
+

* 32 FileName: trksvr.h, Symbol: __MIDL___MIDL_itf_trkwks_0006_0019, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: trksvr.h, Symbol: __MIDL___MIDL_itf_trkwks_0006_0016, Kind 2(Union_NonEncap_DCE), Arms: 6 
0 
1 
2 
3 
4 
6 
+

* 64 FileName: trksvr.h, Symbol: __MIDL___MIDL_itf_trkwks_0006_0019, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
+

* 32 FileName: .\.\trksvr.h, Symbol: __MIDL___MIDL_itf_trksvr_0000_0019, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
+

* 64 FileName: .\.\trksvr.h, Symbol: __MIDL___MIDL_itf_trksvr_0000_0019, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0004, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0005, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0006, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 32 FileName: objidl.h, Symbol: __MIDL_IAdviseSink_0002, Kind 1(Union_Encap), Arms: 2 
7 
5 
DEFAULT
+

* 32 FileName: objidl.h, Symbol: __MIDL_IAdviseSink_0003, Kind 1(Union_Encap), Arms: 8 
0 
32 
64 
16 
1 
2 
4 
8 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0004, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0005, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0006, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 64 FileName: objidl.h, Symbol: __MIDL_IAdviseSink_0002, Kind 1(Union_Encap), Arms: 2 
7 
5 
DEFAULT
+

* 64 FileName: objidl.h, Symbol: __MIDL_IAdviseSink_0003, Kind 1(Union_Encap), Arms: 8 
0 
32 
64 
16 
1 
2 
4 
8 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: .\obj\dxtrans.h, Symbol: __MIDL___MIDL_itf_dxtrans_0251_0001, Kind 1(Union_Encap), Arms: 4 
0 
1 
2 
3 
+

* 32 FileName: .\obj\dxtrans.h, Symbol: __MIDL___MIDL_itf_dxtrans_0251_0002, Kind 1(Union_Encap), Arms: 4 
0 
1 
2 
3 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: .\obj\dxtrans.h, Symbol: __MIDL___MIDL_itf_dxtrans_0251_0001, Kind 1(Union_Encap), Arms: 4 
0 
1 
2 
3 
+

* 64 FileName: .\obj\dxtrans.h, Symbol: __MIDL___MIDL_itf_dxtrans_0251_0002, Kind 1(Union_Encap), Arms: 4 
0 
1 
2 
3 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: dxtrans.h, Symbol: __MIDL___MIDL_itf_dxtmsft_0254_0002, Kind 1(Union_Encap), Arms: 4 
0 
1 
2 
3 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: dxtrans.h, Symbol: __MIDL___MIDL_itf_dxtmsft_0254_0002, Kind 1(Union_Encap), Arms: 4 
0 
1 
2 
3 
+

* 32 FileName: .\.\strmif.h, Symbol: __MIDL___MIDL_itf_strmif_0104_0007, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
DEFAULT
+

* 64 FileName: .\.\strmif.h, Symbol: __MIDL___MIDL_itf_strmif_0104_0007, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
DEFAULT
+

* 32 FileName: .\dssetup_c.h, Symbol: _DSROLER_PRIMARY_DOMAIN_INFORMATION, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
3 
+

* 64 FileName: .\dssetup_c.h, Symbol: _DSROLER_PRIMARY_DOMAIN_INFORMATION, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
3 
+

* 32 FileName: .\dssetrpc.h, Symbol: _DSROLER_PRIMARY_DOMAIN_INFORMATION, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
3 
+

* 64 FileName: .\dssetrpc.h, Symbol: _DSROLER_PRIMARY_DOMAIN_INFORMATION, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
3 
+

* 32 FileName: ..\inc\NtmsSvc.h, Symbol: __MIDL___MIDL_itf_NtmsSvc_0000_0003, Kind 2(Union_NonEncap_DCE), Arms: 15 
5 
6 
9 
2 
3 
16 
7 
8 
15 
11 
14 
12 
13 
10 
17 
DEFAULT
+

* 32 FileName: ..\inc\NtmsSvc.h, Symbol: __MIDL___MIDL_itf_NtmsSvc_0000_0004, Kind 2(Union_NonEncap_DCE), Arms: 15 
5 
6 
9 
2 
3 
16 
7 
8 
15 
11 
14 
12 
13 
10 
17 
DEFAULT
+

* 32 FileName: ..\inc\NtmsSvc.h, Symbol: __MIDL___MIDL_itf_NtmsSvc_0000_0001, Kind 2(Union_NonEncap_DCE), Arms: 16 
5 
6 
9 
2 
3 
16 
7 
8 
15 
11 
14 
12 
13 
10 
17 
4 
DEFAULT
+

* 32 FileName: ..\inc\NtmsSvc.h, Symbol: __MIDL___MIDL_itf_NtmsSvc_0000_0002, Kind 2(Union_NonEncap_DCE), Arms: 16 
5 
6 
9 
2 
3 
16 
7 
8 
15 
11 
14 
12 
13 
10 
17 
4 
DEFAULT
+

* 64 FileName: ..\inc\NtmsSvc.h, Symbol: __MIDL___MIDL_itf_NtmsSvc_0000_0003, Kind 2(Union_NonEncap_DCE), Arms: 15 
5 
6 
9 
2 
3 
16 
7 
8 
15 
11 
14 
12 
13 
10 
17 
DEFAULT
+

* 64 FileName: ..\inc\NtmsSvc.h, Symbol: __MIDL___MIDL_itf_NtmsSvc_0000_0004, Kind 2(Union_NonEncap_DCE), Arms: 15 
5 
6 
9 
2 
3 
16 
7 
8 
15 
11 
14 
12 
13 
10 
17 
DEFAULT
+

* 64 FileName: ..\inc\NtmsSvc.h, Symbol: __MIDL___MIDL_itf_NtmsSvc_0000_0001, Kind 2(Union_NonEncap_DCE), Arms: 16 
5 
6 
9 
2 
3 
16 
7 
8 
15 
11 
14 
12 
13 
10 
17 
4 
DEFAULT
+

* 64 FileName: ..\inc\NtmsSvc.h, Symbol: __MIDL___MIDL_itf_NtmsSvc_0000_0002, Kind 2(Union_NonEncap_DCE), Arms: 16 
5 
6 
9 
2 
3 
16 
7 
8 
15 
11 
14 
12 
13 
10 
17 
4 
DEFAULT
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: .\svcctl.h, Symbol: __MIDL_svcctl_0001, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: .\svcctl.h, Symbol: __MIDL_svcctl_0002, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: .\svcctl.h, Symbol: __MIDL_svcctl_0001, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: .\svcctl.h, Symbol: __MIDL_svcctl_0002, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: .\svcctl.h, Symbol: __MIDL_svcctl_0001, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: .\svcctl.h, Symbol: __MIDL_svcctl_0002, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: .\svcctl.h, Symbol: __MIDL_svcctl_0001, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: .\svcctl.h, Symbol: __MIDL_svcctl_0002, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: app.h, Symbol: __MIDL_appmgmt_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
2 
3 
4 
+

* 64 FileName: app.h, Symbol: __MIDL_appmgmt_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
2 
3 
4 
+

* 32 FileName: wtypes.h, Symbol: __MIDL___MIDL_itf_cs_0005_0005, Kind 1(Union_Encap), Arms: 7 
0 
1 
2 
4 
3 
5 
6 
+

* 64 FileName: wtypes.h, Symbol: __MIDL___MIDL_itf_cs_0005_0005, Kind 1(Union_Encap), Arms: 7 
0 
1 
2 
4 
3 
5 
6 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0003, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0002, Kind 3(Union_NonEncap_MS), Arms: 10 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0004, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
6 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0005, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0006, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0007, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0008, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: winspl.h, Symbol: _RPC_V2_NOTIFY_INFO_DATA_DATA, Kind 3(Union_NonEncap_MS), Arms: 5 
2 
1 
4 
3 
5 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0001, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
-1 
+

* 32 FileName: winspl.h, Symbol: _RPC_V2_UREPLY_PRINTER, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0009, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0003, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0002, Kind 3(Union_NonEncap_MS), Arms: 10 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0004, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
6 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0005, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0006, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0007, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0008, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: winspl.h, Symbol: _RPC_V2_NOTIFY_INFO_DATA_DATA, Kind 3(Union_NonEncap_MS), Arms: 5 
2 
1 
4 
3 
5 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0001, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
-1 
+

* 64 FileName: winspl.h, Symbol: _RPC_V2_UREPLY_PRINTER, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0009, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0003, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0002, Kind 3(Union_NonEncap_MS), Arms: 10 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0004, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
6 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0005, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0006, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0007, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0008, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: winspl.h, Symbol: _RPC_V2_NOTIFY_INFO_DATA_DATA, Kind 3(Union_NonEncap_MS), Arms: 5 
2 
1 
4 
3 
5 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0001, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
-1 
+

* 32 FileName: winspl.h, Symbol: _RPC_V2_UREPLY_PRINTER, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0009, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0003, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0002, Kind 3(Union_NonEncap_MS), Arms: 10 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0004, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
6 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0005, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0006, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0007, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0008, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: winspl.h, Symbol: _RPC_V2_NOTIFY_INFO_DATA_DATA, Kind 3(Union_NonEncap_MS), Arms: 5 
2 
1 
4 
3 
5 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0001, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
-1 
+

* 64 FileName: winspl.h, Symbol: _RPC_V2_UREPLY_PRINTER, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0009, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0004, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0005, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0006, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 32 FileName: .\obj\mega.h, Symbol: __MIDL_IAdviseSink_0002, Kind 1(Union_Encap), Arms: 2 
7 
5 
DEFAULT
+

* 32 FileName: .\obj\mega.h, Symbol: __MIDL_IAdviseSink_0003, Kind 1(Union_Encap), Arms: 8 
0 
32 
64 
16 
1 
2 
4 
8 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0004, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0005, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0006, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 64 FileName: .\obj\mega.h, Symbol: __MIDL_IAdviseSink_0002, Kind 1(Union_Encap), Arms: 2 
7 
5 
DEFAULT
+

* 64 FileName: .\obj\mega.h, Symbol: __MIDL_IAdviseSink_0003, Kind 1(Union_Encap), Arms: 8 
0 
32 
64 
16 
1 
2 
4 
8 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: .\obj\prop.h, Symbol: __MIDL___MIDL_itf_prop_0000_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
0 
DEFAULT
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: .\obj\prop.h, Symbol: __MIDL___MIDL_itf_prop_0000_0001, Kind 2(Union_NonEncap_DCE), Arms: 97 
0 
1 
16 
17 
2 
18 
3 
19 
22 
23 
14 
20 
21 
4 
5 
11 
65535 
10 
6 
7 
64 
72 
71 
8 
4095 
65 
70 
30 
31 
13 
9 
66 
68 
67 
69 
73 
8208 
8209 
8194 
8210 
8195 
8211 
8214 
8215 
8196 
8197 
8198 
8199 
8200 
8203 
8206 
8201 
8205 
8202 
8204 
4112 
4113 
4098 
4114 
4099 
4115 
4116 
4117 
4100 
4101 
4107 
4106 
4102 
4103 
4160 
4168 
4167 
4104 
8191 
4126 
4127 
4108 
16400 
16401 
16386 
16402 
16387 
16403 
16406 
16407 
16388 
16389 
16395 
16398 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
+

* 64 FileName: .\obj\prop.h, Symbol: __MIDL___MIDL_itf_prop_0000_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
0 
DEFAULT
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: .\obj\prop.h, Symbol: __MIDL___MIDL_itf_prop_0000_0001, Kind 2(Union_NonEncap_DCE), Arms: 97 
0 
1 
16 
17 
2 
18 
3 
19 
22 
23 
14 
20 
21 
4 
5 
11 
65535 
10 
6 
7 
64 
72 
71 
8 
4095 
65 
70 
30 
31 
13 
9 
66 
68 
67 
69 
73 
8208 
8209 
8194 
8210 
8195 
8211 
8214 
8215 
8196 
8197 
8198 
8199 
8200 
8203 
8206 
8201 
8205 
8202 
8204 
4112 
4113 
4098 
4114 
4099 
4115 
4116 
4117 
4100 
4101 
4107 
4106 
4102 
4103 
4160 
4168 
4167 
4104 
8191 
4126 
4127 
4108 
16400 
16401 
16386 
16402 
16387 
16403 
16406 
16407 
16388 
16389 
16395 
16398 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: srvsvc.h, Symbol: _CHARDEV_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _CHARDEV_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _CHARDEVQ_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _CHARDEVQ_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
1002 
1003 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _CONNECT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _FILE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
2 
3 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _FILE_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
2 
3 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _SESSION_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
10 
502 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _SHARE_INFO, Kind 3(Union_NonEncap_MS), Arms: 9 
0 
1 
2 
502 
1004 
1006 
1501 
DEFAULT
1005 
501 
+

* 32 FileName: srvsvc.h, Symbol: _SHARE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
502 
DEFAULT
501 
+

* 32 FileName: srvsvc.h, Symbol: _SERVER_INFO, Kind 3(Union_NonEncap_MS), Arms: 59 
100 
101 
102 
402 
403 
502 
503 
599 
1005 
1107 
1010 
1016 
1017 
1018 
1501 
1502 
1503 
1506 
1509 
1510 
1511 
1512 
1513 
1514 
1515 
1516 
1518 
1520 
1521 
1522 
1523 
1524 
1525 
1528 
1529 
1530 
1533 
1534 
1535 
1536 
1537 
1538 
1539 
1540 
1541 
1542 
1543 
1544 
1545 
1546 
1547 
1548 
1549 
1550 
1552 
1553 
1554 
1555 
1556 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _SERVER_XPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _TRANSPORT_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CHARDEV_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CHARDEV_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CHARDEVQ_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CHARDEVQ_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
1002 
1003 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CONNECT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _FILE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
2 
3 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _FILE_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
2 
3 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _SESSION_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
10 
502 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _SHARE_INFO, Kind 3(Union_NonEncap_MS), Arms: 9 
0 
1 
2 
502 
1004 
1006 
1501 
DEFAULT
1005 
501 
+

* 64 FileName: srvsvc.h, Symbol: _SHARE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
502 
DEFAULT
501 
+

* 64 FileName: srvsvc.h, Symbol: _SERVER_INFO, Kind 3(Union_NonEncap_MS), Arms: 59 
100 
101 
102 
402 
403 
502 
503 
599 
1005 
1107 
1010 
1016 
1017 
1018 
1501 
1502 
1503 
1506 
1509 
1510 
1511 
1512 
1513 
1514 
1515 
1516 
1518 
1520 
1521 
1522 
1523 
1524 
1525 
1528 
1529 
1530 
1533 
1534 
1535 
1536 
1537 
1538 
1539 
1540 
1541 
1542 
1543 
1544 
1545 
1546 
1547 
1548 
1549 
1550 
1552 
1553 
1554 
1555 
1556 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _SERVER_XPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _TRANSPORT_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _CHARDEV_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _CHARDEV_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _CHARDEVQ_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _CHARDEVQ_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
1002 
1003 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _CONNECT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _FILE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
2 
3 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _FILE_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
2 
3 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _SESSION_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
10 
502 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _SHARE_INFO, Kind 3(Union_NonEncap_MS), Arms: 9 
0 
1 
2 
502 
1004 
1006 
1501 
DEFAULT
1005 
501 
+

* 32 FileName: srvsvc.h, Symbol: _SHARE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
502 
DEFAULT
501 
+

* 32 FileName: srvsvc.h, Symbol: _SERVER_INFO, Kind 3(Union_NonEncap_MS), Arms: 59 
100 
101 
102 
402 
403 
502 
503 
599 
1005 
1107 
1010 
1016 
1017 
1018 
1501 
1502 
1503 
1506 
1509 
1510 
1511 
1512 
1513 
1514 
1515 
1516 
1518 
1520 
1521 
1522 
1523 
1524 
1525 
1528 
1529 
1530 
1533 
1534 
1535 
1536 
1537 
1538 
1539 
1540 
1541 
1542 
1543 
1544 
1545 
1546 
1547 
1548 
1549 
1550 
1552 
1553 
1554 
1555 
1556 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _SERVER_XPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _TRANSPORT_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CHARDEV_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CHARDEV_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CHARDEVQ_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CHARDEVQ_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
1002 
1003 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CONNECT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _FILE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
2 
3 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _FILE_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
2 
3 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _SESSION_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
10 
502 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _SHARE_INFO, Kind 3(Union_NonEncap_MS), Arms: 9 
0 
1 
2 
502 
1004 
1006 
1501 
DEFAULT
1005 
501 
+

* 64 FileName: srvsvc.h, Symbol: _SHARE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
502 
DEFAULT
501 
+

* 64 FileName: srvsvc.h, Symbol: _SERVER_INFO, Kind 3(Union_NonEncap_MS), Arms: 59 
100 
101 
102 
402 
403 
502 
503 
599 
1005 
1107 
1010 
1016 
1017 
1018 
1501 
1502 
1503 
1506 
1509 
1510 
1511 
1512 
1513 
1514 
1515 
1516 
1518 
1520 
1521 
1522 
1523 
1524 
1525 
1528 
1529 
1530 
1533 
1534 
1535 
1536 
1537 
1538 
1539 
1540 
1541 
1542 
1543 
1544 
1545 
1546 
1547 
1548 
1549 
1550 
1552 
1553 
1554 
1555 
1556 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _SERVER_XPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _TRANSPORT_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _WKSTA_INFO, Kind 3(Union_NonEncap_MS), Arms: 33 
100 
101 
102 
1010 
1011 
1012 
1013 
1018 
1023 
1033 
1041 
1042 
1043 
1044 
1045 
1046 
1047 
1048 
1049 
1050 
1051 
1052 
1053 
1054 
1055 
1056 
1057 
1058 
1059 
1060 
1061 
1062 
502 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _WKSTA_USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _WKSTA_USER_INFO, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
1101 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _WKSTA_TRANSPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _USE_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _USE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _WKSTA_INFO, Kind 3(Union_NonEncap_MS), Arms: 33 
100 
101 
102 
1010 
1011 
1012 
1013 
1018 
1023 
1033 
1041 
1042 
1043 
1044 
1045 
1046 
1047 
1048 
1049 
1050 
1051 
1052 
1053 
1054 
1055 
1056 
1057 
1058 
1059 
1060 
1061 
1062 
502 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _WKSTA_USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _WKSTA_USER_INFO, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
1101 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _WKSTA_TRANSPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _USE_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _USE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _WKSTA_INFO, Kind 3(Union_NonEncap_MS), Arms: 33 
100 
101 
102 
1010 
1011 
1012 
1013 
1018 
1023 
1033 
1041 
1042 
1043 
1044 
1045 
1046 
1047 
1048 
1049 
1050 
1051 
1052 
1053 
1054 
1055 
1056 
1057 
1058 
1059 
1060 
1061 
1062 
502 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _WKSTA_USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _WKSTA_USER_INFO, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
1101 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _WKSTA_TRANSPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _USE_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _USE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _WKSTA_INFO, Kind 3(Union_NonEncap_MS), Arms: 33 
100 
101 
102 
1010 
1011 
1012 
1013 
1018 
1023 
1033 
1041 
1042 
1043 
1044 
1045 
1046 
1047 
1048 
1049 
1050 
1051 
1052 
1053 
1054 
1055 
1056 
1057 
1058 
1059 
1060 
1061 
1062 
502 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _WKSTA_USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _WKSTA_USER_INFO, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
1101 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _WKSTA_TRANSPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _USE_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _USE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: msgsvc.h, Symbol: _MSG_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: msgsvc.h, Symbol: _MSG_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: msgsvc.h, Symbol: _MSG_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: msgsvc.h, Symbol: _MSG_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: msgsvc.h, Symbol: _MSG_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: msgsvc.h, Symbol: _MSG_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: msgsvc.h, Symbol: _MSG_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: msgsvc.h, Symbol: _MSG_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\repl.h, Symbol: _CONFIG_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1000 
1001 
1002 
1003 
DEFAULT
+

* 32 FileName: .\repl.h, Symbol: _EXPORT_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
1000 
1001 
DEFAULT
+

* 32 FileName: .\repl.h, Symbol: _EXPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: .\repl.h, Symbol: _IMPORT_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\repl.h, Symbol: _IMPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _CONFIG_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1000 
1001 
1002 
1003 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _EXPORT_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
1000 
1001 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _EXPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _IMPORT_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _IMPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\repl.h, Symbol: _CONFIG_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1000 
1001 
1002 
1003 
DEFAULT
+

* 32 FileName: .\repl.h, Symbol: _EXPORT_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
1000 
1001 
DEFAULT
+

* 32 FileName: .\repl.h, Symbol: _EXPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: .\repl.h, Symbol: _IMPORT_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\repl.h, Symbol: _IMPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _CONFIG_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1000 
1001 
1002 
1003 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _EXPORT_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
1000 
1001 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _EXPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _IMPORT_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _IMPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\bowser.h, Symbol: _SERVER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
100 
101 
DEFAULT
+

* 32 FileName: .\bowser.h, Symbol: _BROWSER_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
100 
101 
DEFAULT
+

* 64 FileName: .\bowser.h, Symbol: _SERVER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
100 
101 
DEFAULT
+

* 64 FileName: .\bowser.h, Symbol: _BROWSER_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
100 
101 
DEFAULT
+

* 32 FileName: .\bowser.h, Symbol: _SERVER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
100 
101 
DEFAULT
+

* 32 FileName: .\bowser.h, Symbol: _BROWSER_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
100 
101 
DEFAULT
+

* 64 FileName: .\bowser.h, Symbol: _SERVER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
100 
101 
DEFAULT
+

* 64 FileName: .\bowser.h, Symbol: _BROWSER_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
100 
101 
DEFAULT
+

* 32 FileName: .\logon_c.h, Symbol: _NETLOGON_LEVEL, Kind 3(Union_NonEncap_MS), Arms: 7 
1 
5 
3 
7 
2 
6 
4 
DEFAULT
+

* 32 FileName: .\logon_c.h, Symbol: _NETLOGON_VALIDATION, Kind 3(Union_NonEncap_MS), Arms: 4 
2 
3 
4 
5 
DEFAULT
+

* 32 FileName: .\logon_c.h, Symbol: _NETLOGON_DELTA_ID_UNION, Kind 3(Union_NonEncap_MS), Arms: 21 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
20 
21 
13 
14 
15 
16 
17 
18 
19 
DEFAULT
+

* 32 FileName: .\logon_c.h, Symbol: _NETLOGON_DELTA_UNION, Kind 3(Union_NonEncap_MS), Arms: 16 
1 
2 
4 
5 
7 
8 
9 
11 
12 
13 
14 
16 
18 
20 
21 
22 
DEFAULT
+

* 32 FileName: .\logon_c.h, Symbol: _NETLOGON_CONTROL_QUERY_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: .\logon_c.h, Symbol: _NETLOGON_CONTROL_DATA_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 5 
5 
6 
9 
65534 
8 
DEFAULT
+

* 32 FileName: .\logon_c.h, Symbol: _NETLOGON_DUMMY1, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 32 FileName: .\logon_c.h, Symbol: _NETLOGON_WORKSTATION_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: .\logon_c.h, Symbol: _NETLOGON_DOMAIN_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: .\logon_c.h, Symbol: _NETLOGON_LEVEL, Kind 3(Union_NonEncap_MS), Arms: 7 
1 
5 
3 
7 
2 
6 
4 
DEFAULT
+

* 64 FileName: .\logon_c.h, Symbol: _NETLOGON_VALIDATION, Kind 3(Union_NonEncap_MS), Arms: 4 
2 
3 
4 
5 
DEFAULT
+

* 64 FileName: .\logon_c.h, Symbol: _NETLOGON_DELTA_ID_UNION, Kind 3(Union_NonEncap_MS), Arms: 21 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
20 
21 
13 
14 
15 
16 
17 
18 
19 
DEFAULT
+

* 64 FileName: .\logon_c.h, Symbol: _NETLOGON_DELTA_UNION, Kind 3(Union_NonEncap_MS), Arms: 16 
1 
2 
4 
5 
7 
8 
9 
11 
12 
13 
14 
16 
18 
20 
21 
22 
DEFAULT
+

* 64 FileName: .\logon_c.h, Symbol: _NETLOGON_CONTROL_QUERY_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: .\logon_c.h, Symbol: _NETLOGON_CONTROL_DATA_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 5 
5 
6 
9 
65534 
8 
DEFAULT
+

* 64 FileName: .\logon_c.h, Symbol: _NETLOGON_DUMMY1, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 64 FileName: .\logon_c.h, Symbol: _NETLOGON_WORKSTATION_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: .\logon_c.h, Symbol: _NETLOGON_DOMAIN_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: .\logon_s.h, Symbol: _NETLOGON_LEVEL, Kind 3(Union_NonEncap_MS), Arms: 7 
1 
5 
3 
7 
2 
6 
4 
DEFAULT
+

* 32 FileName: .\logon_s.h, Symbol: _NETLOGON_VALIDATION, Kind 3(Union_NonEncap_MS), Arms: 4 
2 
3 
4 
5 
DEFAULT
+

* 32 FileName: .\logon_s.h, Symbol: _NETLOGON_DELTA_ID_UNION, Kind 3(Union_NonEncap_MS), Arms: 21 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
20 
21 
13 
14 
15 
16 
17 
18 
19 
DEFAULT
+

* 32 FileName: .\logon_s.h, Symbol: _NETLOGON_DELTA_UNION, Kind 3(Union_NonEncap_MS), Arms: 16 
1 
2 
4 
5 
7 
8 
9 
11 
12 
13 
14 
16 
18 
20 
21 
22 
DEFAULT
+

* 32 FileName: .\logon_s.h, Symbol: _NETLOGON_CONTROL_QUERY_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: .\logon_s.h, Symbol: _NETLOGON_CONTROL_DATA_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 5 
5 
6 
9 
65534 
8 
DEFAULT
+

* 32 FileName: .\logon_s.h, Symbol: _NETLOGON_DUMMY1, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 32 FileName: .\logon_s.h, Symbol: _NETLOGON_WORKSTATION_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: .\logon_s.h, Symbol: _NETLOGON_DOMAIN_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: .\logon_s.h, Symbol: _NETLOGON_LEVEL, Kind 3(Union_NonEncap_MS), Arms: 7 
1 
5 
3 
7 
2 
6 
4 
DEFAULT
+

* 64 FileName: .\logon_s.h, Symbol: _NETLOGON_VALIDATION, Kind 3(Union_NonEncap_MS), Arms: 4 
2 
3 
4 
5 
DEFAULT
+

* 64 FileName: .\logon_s.h, Symbol: _NETLOGON_DELTA_ID_UNION, Kind 3(Union_NonEncap_MS), Arms: 21 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
20 
21 
13 
14 
15 
16 
17 
18 
19 
DEFAULT
+

* 64 FileName: .\logon_s.h, Symbol: _NETLOGON_DELTA_UNION, Kind 3(Union_NonEncap_MS), Arms: 16 
1 
2 
4 
5 
7 
8 
9 
11 
12 
13 
14 
16 
18 
20 
21 
22 
DEFAULT
+

* 64 FileName: .\logon_s.h, Symbol: _NETLOGON_CONTROL_QUERY_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: .\logon_s.h, Symbol: _NETLOGON_CONTROL_DATA_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 5 
5 
6 
9 
65534 
8 
DEFAULT
+

* 64 FileName: .\logon_s.h, Symbol: _NETLOGON_DUMMY1, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 64 FileName: .\logon_s.h, Symbol: _NETLOGON_WORKSTATION_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: .\logon_s.h, Symbol: _NETLOGON_DOMAIN_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_LICENSE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_LICENSE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0001, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0002, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_USER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_USER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_SERVER_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_SERVER_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_LICENSE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_LICENSE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_USER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_USER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0011, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0012, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_USER_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_USER_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_MAPPING_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_MAPPING_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0015, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0016, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_SERVER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_SERVER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0009, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0010, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0017, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0018, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_CERTIFICATE_CLAIM_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_CERTIFICATE_CLAIM_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0024, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0023, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0025, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0026, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0027, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_LOCAL_SERVICE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_LOCAL_SERVICE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0029, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0030, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_LICENSE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_LICENSE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0001, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0002, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_USER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_USER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_SERVER_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_SERVER_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_LICENSE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_LICENSE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_USER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_USER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0011, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0012, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_USER_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_USER_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_MAPPING_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_MAPPING_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0015, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0016, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_SERVER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_SERVER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0009, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0010, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0017, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0018, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_CERTIFICATE_CLAIM_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_CERTIFICATE_CLAIM_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0024, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0023, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0025, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0026, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0027, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_LOCAL_SERVICE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_LOCAL_SERVICE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0029, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0030, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_LICENSE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_LICENSE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0001, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0002, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_USER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_USER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_SERVER_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_SERVER_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_LICENSE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_LICENSE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_USER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_USER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0011, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0012, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_USER_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_USER_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_MAPPING_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_MAPPING_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0015, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0016, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_SERVER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_SERVER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0009, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0010, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0017, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0018, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_CERTIFICATE_CLAIM_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_CERTIFICATE_CLAIM_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0024, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0023, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0025, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0026, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0027, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_LOCAL_SERVICE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_LOCAL_SERVICE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0029, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0030, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_LICENSE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_LICENSE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0001, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0002, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_USER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_USER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_SERVER_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_SERVER_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_LICENSE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_LICENSE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_USER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_USER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0011, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0012, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_USER_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_USER_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_MAPPING_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_MAPPING_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0015, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0016, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_SERVER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_SERVER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0009, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0010, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0017, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0018, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_CERTIFICATE_CLAIM_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_CERTIFICATE_CLAIM_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0024, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0023, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0025, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0026, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0027, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_LOCAL_SERVICE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_LOCAL_SERVICE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0029, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0030, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: netdfs.h, Symbol: _DFS_INFO_STRUCT, Kind 3(Union_NonEncap_MS), Arms: 7 
1 
2 
3 
4 
100 
101 
102 
DEFAULT
+

* 32 FileName: netdfs.h, Symbol: __MIDL_netdfs_0001, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
200 
+

* 64 FileName: netdfs.h, Symbol: _DFS_INFO_STRUCT, Kind 3(Union_NonEncap_MS), Arms: 7 
1 
2 
3 
4 
100 
101 
102 
DEFAULT
+

* 64 FileName: netdfs.h, Symbol: __MIDL_netdfs_0001, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
200 
+

* 32 FileName: netdfs.h, Symbol: _DFS_INFO_STRUCT, Kind 3(Union_NonEncap_MS), Arms: 7 
1 
2 
3 
4 
100 
101 
102 
DEFAULT
+

* 32 FileName: netdfs.h, Symbol: __MIDL_netdfs_0001, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
200 
+

* 64 FileName: netdfs.h, Symbol: _DFS_INFO_STRUCT, Kind 3(Union_NonEncap_MS), Arms: 7 
1 
2 
3 
4 
100 
101 
102 
DEFAULT
+

* 64 FileName: netdfs.h, Symbol: __MIDL_netdfs_0001, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
200 
+

* 32 FileName: ncpsvc.h, Symbol: _VOLUME_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
DEFAULT
+

* 64 FileName: ncpsvc.h, Symbol: _VOLUME_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
DEFAULT
+

* 32 FileName: ncpsvc.h, Symbol: _VOLUME_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
DEFAULT
+

* 64 FileName: ncpsvc.h, Symbol: _VOLUME_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
DEFAULT
+

* 32 FileName: .\scerpc_c.h, Symbol: _SCEPR_UNION_OTHERINFO, Kind 3(Union_NonEncap_MS), Arms: 3 
300 
304 
301 
+

* 64 FileName: .\scerpc_c.h, Symbol: _SCEPR_UNION_OTHERINFO, Kind 3(Union_NonEncap_MS), Arms: 3 
300 
304 
301 
+

* 32 FileName: .\scerpc_s.h, Symbol: _SCEPR_UNION_OTHERINFO, Kind 3(Union_NonEncap_MS), Arms: 3 
300 
304 
301 
+

* 64 FileName: .\scerpc_s.h, Symbol: _SCEPR_UNION_OTHERINFO, Kind 3(Union_NonEncap_MS), Arms: 3 
300 
304 
301 
+

* 32 FileName: .\ftpsvc.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\ftpsvc.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\ftpsvc.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\ftpsvc.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: __MIDL_imports_0037, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V5, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: __MIDL_imports_0037, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V5, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: __MIDL_imports_0037, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V5, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: __MIDL_imports_0037, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V5, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DNS_RECORD_DATA_TYPES, Kind 2(Union_NonEncap_DCE), Arms: 18 
1 
6 
12 
2 
5 
7 
3 
4 
8 
9 
14 
17 
15 
18 
21 
28 
33 
34 
+

* 64 FileName: imports.h, Symbol: _DNS_RECORD_DATA_TYPES, Kind 2(Union_NonEncap_DCE), Arms: 18 
1 
6 
12 
2 
5 
7 
3 
4 
8 
9 
14 
17 
15 
18 
21 
28 
33 
34 
+

* 32 FileName: imports.h, Symbol: _DNS_RECORD_DATA_TYPES, Kind 2(Union_NonEncap_DCE), Arms: 18 
1 
6 
12 
2 
5 
7 
3 
4 
8 
9 
14 
17 
15 
18 
21 
28 
33 
34 
+

* 64 FileName: imports.h, Symbol: _DNS_RECORD_DATA_TYPES, Kind 2(Union_NonEncap_DCE), Arms: 18 
1 
6 
12 
2 
5 
7 
3 
4 
8 
9 
14 
17 
15 
18 
21 
28 
33 
34 
+

* 32 FileName: imports.h, Symbol: _DnssrvSrvRpcUnion, Kind 2(Union_NonEncap_DCE), Arms: 17 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
15 
16 
+

* 64 FileName: imports.h, Symbol: _DnssrvSrvRpcUnion, Kind 2(Union_NonEncap_DCE), Arms: 17 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
15 
16 
+

* 32 FileName: imports.h, Symbol: _DnssrvSrvRpcUnion, Kind 2(Union_NonEncap_DCE), Arms: 17 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
15 
16 
+

* 64 FileName: imports.h, Symbol: _DnssrvSrvRpcUnion, Kind 2(Union_NonEncap_DCE), Arms: 17 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
15 
16 
+

* 32 FileName: ..\..\include\Finder.h, Symbol: __MIDL___MIDL_itf_iremoteagent_0001_0001, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
DEFAULT
+

* 32 FileName: ..\..\include\Finder.h, Symbol: __MIDL___MIDL_itf_iremoteagent_0001_0003, Kind 2(Union_NonEncap_DCE), Arms: 1 
DEFAULT
10 
+

* 64 FileName: ..\..\include\Finder.h, Symbol: __MIDL___MIDL_itf_iremoteagent_0001_0001, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
DEFAULT
+

* 64 FileName: ..\..\include\Finder.h, Symbol: __MIDL___MIDL_itf_iremoteagent_0001_0003, Kind 2(Union_NonEncap_DCE), Arms: 1 
DEFAULT
10 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: propidl.h, Symbol: __MIDL___MIDL_itf_ptserver_0244_0001, Kind 2(Union_NonEncap_DCE), Arms: 97 
0 
1 
16 
17 
2 
18 
3 
19 
22 
23 
14 
20 
21 
4 
5 
11 
65535 
10 
6 
7 
64 
72 
71 
8 
4095 
65 
70 
30 
31 
13 
9 
66 
68 
67 
69 
73 
8208 
8209 
8194 
8210 
8195 
8211 
8214 
8215 
8196 
8197 
8198 
8199 
8200 
8203 
8206 
8201 
8205 
8202 
8204 
4112 
4113 
4098 
4114 
4099 
4115 
4116 
4117 
4100 
4101 
4107 
4106 
4102 
4103 
4160 
4168 
4167 
4104 
8191 
4126 
4127 
4108 
16400 
16401 
16386 
16402 
16387 
16403 
16406 
16407 
16388 
16389 
16395 
16398 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
+

* 32 FileName: propidl.h, Symbol: __MIDL___MIDL_itf_ptserver_0244_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
0 
DEFAULT
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: propidl.h, Symbol: __MIDL___MIDL_itf_ptserver_0244_0001, Kind 2(Union_NonEncap_DCE), Arms: 97 
0 
1 
16 
17 
2 
18 
3 
19 
22 
23 
14 
20 
21 
4 
5 
11 
65535 
10 
6 
7 
64 
72 
71 
8 
4095 
65 
70 
30 
31 
13 
9 
66 
68 
67 
69 
73 
8208 
8209 
8194 
8210 
8195 
8211 
8214 
8215 
8196 
8197 
8198 
8199 
8200 
8203 
8206 
8201 
8205 
8202 
8204 
4112 
4113 
4098 
4114 
4099 
4115 
4116 
4117 
4100 
4101 
4107 
4106 
4102 
4103 
4160 
4168 
4167 
4104 
8191 
4126 
4127 
4108 
16400 
16401 
16386 
16402 
16387 
16403 
16406 
16407 
16388 
16389 
16395 
16398 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
+

* 64 FileName: propidl.h, Symbol: __MIDL___MIDL_itf_ptserver_0244_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
0 
DEFAULT
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: .\..\w3\server\wam.h, Symbol: _WAM_STATISTICS_INFO, Kind 2(Union_NonEncap_DCE), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\..\w3\server\wam.h, Symbol: _WAM_STATISTICS_INFO, Kind 2(Union_NonEncap_DCE), Arms: 1 
0 
DEFAULT
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: .\client\info_cli.h, Symbol: _INET_INFO_STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\client\info_cli.h, Symbol: _W3_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\client\info_cli.h, Symbol: _FTP_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\client\info_cli.h, Symbol: _USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
DEFAULT
+

* 64 FileName: .\client\info_cli.h, Symbol: _INET_INFO_STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\client\info_cli.h, Symbol: _W3_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\client\info_cli.h, Symbol: _FTP_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\client\info_cli.h, Symbol: _USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
DEFAULT
+

* 32 FileName: .\server\info_srv.h, Symbol: _INET_INFO_STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\server\info_srv.h, Symbol: _W3_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\server\info_srv.h, Symbol: _FTP_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\server\info_srv.h, Symbol: _USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
DEFAULT
+

* 64 FileName: .\server\info_srv.h, Symbol: _INET_INFO_STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\server\info_srv.h, Symbol: _W3_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\server\info_srv.h, Symbol: _FTP_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\server\info_srv.h, Symbol: _USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
DEFAULT
+

* 32 FileName: .\client\info_cli.h, Symbol: _INET_INFO_STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\client\info_cli.h, Symbol: _W3_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\client\info_cli.h, Symbol: _FTP_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\client\info_cli.h, Symbol: _USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
DEFAULT
+

* 64 FileName: .\client\info_cli.h, Symbol: _INET_INFO_STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\client\info_cli.h, Symbol: _W3_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\client\info_cli.h, Symbol: _FTP_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\client\info_cli.h, Symbol: _USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
DEFAULT
+

* 32 FileName: .\server\info_srv.h, Symbol: _INET_INFO_STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\server\info_srv.h, Symbol: _W3_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\server\info_srv.h, Symbol: _FTP_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\server\info_srv.h, Symbol: _USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
DEFAULT
+

* 64 FileName: .\server\info_srv.h, Symbol: _INET_INFO_STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\server\info_srv.h, Symbol: _W3_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\server\info_srv.h, Symbol: _FTP_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\server\info_srv.h, Symbol: _USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
DEFAULT
+

* 32 FileName: .\client\w3svci_c.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\client\w3svci_c.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\server\w3svci_s.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\server\w3svci_s.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\ftpsvc.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\ftpsvc.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\ftpsvc.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\ftpsvc.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: .\obj\i386\smtpsvc.h, Symbol: _STAT_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\obj\i386\smtpsvc.h, Symbol: _STAT_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: .\obj\i386\smtpsvc.h, Symbol: _STAT_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\obj\i386\smtpsvc.h, Symbol: _STAT_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: .\obj\i386\smtpsvc.h, Symbol: _STAT_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\obj\i386\smtpsvc.h, Symbol: _STAT_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\.\ldapdb.h, Symbol: __MIDL_DBStructureDefinitions_0001, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
6 
3 
4 
+

* 32 FileName: .\.\ldapdb.h, Symbol: __MIDL_DBStructureDefinitions_0002, Kind 2(Union_NonEncap_DCE), Arms: 6 
0 
2 
3 
1 
4 
5 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: .\.\ldapdb.h, Symbol: __MIDL_DBStructureDefinitions_0001, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
6 
3 
4 
+

* 64 FileName: .\.\ldapdb.h, Symbol: __MIDL_DBStructureDefinitions_0002, Kind 2(Union_NonEncap_DCE), Arms: 6 
0 
2 
3 
1 
4 
5 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0003, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
3 
4 
5 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0004, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0005, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0006, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0007, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0008, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0009, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0011, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0012, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0013, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0014, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0017, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0018, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0015, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0016, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0019, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0020, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0021, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0022, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0023, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0024, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0025, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0026, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
-1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0027, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0028, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0029, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REQ, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REPLY, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
-2 
-4 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0030, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0031, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0003, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
3 
4 
5 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0004, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0005, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0006, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0007, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0008, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0009, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0011, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0012, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0013, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0014, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0017, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0018, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0015, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0016, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0019, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0020, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0021, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0022, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0023, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0024, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0025, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0026, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
-1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0027, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0028, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0029, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REQ, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REPLY, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
-2 
-4 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0030, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0031, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0003, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
3 
4 
5 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0004, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0005, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0006, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0007, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0008, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0009, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0011, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0012, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0013, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0014, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0017, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0018, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0015, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0016, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0019, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0020, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0021, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0022, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0023, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0024, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0025, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0026, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
-1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0027, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0028, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0029, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REQ, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REPLY, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
-2 
-4 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0030, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0031, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0003, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
3 
4 
5 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0004, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0005, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0006, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0007, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0008, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0009, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0011, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0012, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0013, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0014, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0017, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0018, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0015, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0016, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0019, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0020, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0021, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0022, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0023, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0024, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0025, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0026, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
-1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0027, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0028, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0029, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REQ, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REPLY, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
-2 
-4 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0030, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0031, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0003, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
3 
4 
5 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0004, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0005, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0006, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0007, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0008, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0009, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0011, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0012, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0013, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0014, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0017, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0018, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0015, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0016, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0019, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0020, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0021, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0022, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0023, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0024, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0025, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0026, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
-1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0027, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0028, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0029, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REQ, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REPLY, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
-2 
-4 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0030, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0031, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0003, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
3 
4 
5 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0004, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0005, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0006, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0007, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0008, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0009, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0011, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0012, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0013, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0014, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0017, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0018, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0015, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0016, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0019, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0020, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0021, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0022, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0023, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0024, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0025, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0026, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
-1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0027, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0028, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0029, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REQ, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REPLY, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
-2 
-4 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0030, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0031, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\nspi.h, Symbol: _PV_r, Kind 2(Union_NonEncap_DCE), Arms: 18 
2 
3 
11 
30 
258 
31 
72 
64 
10 
4098 
4099 
4126 
4354 
4168 
4127 
4160 
1 
13 
+

* 32 FileName: abaux.h, Symbol: _RES_UNION_r, Kind 2(Union_NonEncap_DCE), Arms: 10 
0 
1 
2 
3 
4 
5 
6 
9 
7 
8 
+

* 64 FileName: .\nspi.h, Symbol: _PV_r, Kind 2(Union_NonEncap_DCE), Arms: 18 
2 
3 
11 
30 
258 
31 
72 
64 
10 
4098 
4099 
4126 
4354 
4168 
4127 
4160 
1 
13 
+

* 64 FileName: abaux.h, Symbol: _RES_UNION_r, Kind 2(Union_NonEncap_DCE), Arms: 10 
0 
1 
2 
3 
4 
5 
6 
9 
7 
8 
+

* 32 FileName: .\nspi.h, Symbol: _PV_r, Kind 2(Union_NonEncap_DCE), Arms: 18 
2 
3 
11 
30 
258 
31 
72 
64 
10 
4098 
4099 
4126 
4354 
4168 
4127 
4160 
1 
13 
+

* 32 FileName: abaux.h, Symbol: _RES_UNION_r, Kind 2(Union_NonEncap_DCE), Arms: 10 
0 
1 
2 
3 
4 
5 
6 
9 
7 
8 
+

* 64 FileName: .\nspi.h, Symbol: _PV_r, Kind 2(Union_NonEncap_DCE), Arms: 18 
2 
3 
11 
30 
258 
31 
72 
64 
10 
4098 
4099 
4126 
4354 
4168 
4127 
4160 
1 
13 
+

* 64 FileName: abaux.h, Symbol: _RES_UNION_r, Kind 2(Union_NonEncap_DCE), Arms: 10 
0 
1 
2 
3 
4 
5 
6 
9 
7 
8 
+

* 32 FileName: .\rxds.h, Symbol: OMP_value_union, Kind 2(Union_NonEncap_DCE), Arms: 44 
1 
4097 
10 
4106 
2 
4098 
65 
4161 
127 
4223 
64 
4160 
3 
4099 
4 
4100 
6 
4102 
7 
4103 
8 
4104 
18 
4114 
19 
4115 
20 
4116 
21 
4117 
22 
4118 
23 
4119 
24 
4120 
25 
4121 
26 
4122 
27 
4123 
66 
4162 
DEFAULT
+

* 64 FileName: .\rxds.h, Symbol: OMP_value_union, Kind 2(Union_NonEncap_DCE), Arms: 44 
1 
4097 
10 
4106 
2 
4098 
65 
4161 
127 
4223 
64 
4160 
3 
4099 
4 
4100 
6 
4102 
7 
4103 
8 
4104 
18 
4114 
19 
4115 
20 
4116 
21 
4117 
22 
4118 
23 
4119 
24 
4120 
25 
4121 
26 
4122 
27 
4123 
66 
4162 
DEFAULT
+

* 32 FileName: .\ismip.h, Symbol: __MIDL_ismip_0001, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\ismip.h, Symbol: __MIDL_ismip_0001, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: mmc.h, Symbol: __MIDL___MIDL_itf_ndmgr_0133_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
4 
2 
3 
1 
DEFAULT
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: mmc.h, Symbol: __MIDL___MIDL_itf_ndmgr_0133_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
4 
2 
3 
1 
DEFAULT
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: iads.h, Symbol: __MIDL___MIDL_itf_dirsync_0105_0015, Kind 2(Union_NonEncap_DCE), Arms: 25 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
12 
11 
13 
14 
15 
16 
17 
18 
19 
20 
21 
22 
23 
24 
25 
+

* 64 FileName: iads.h, Symbol: __MIDL___MIDL_itf_dirsync_0105_0015, Kind 2(Union_NonEncap_DCE), Arms: 25 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
12 
11 
13 
14 
15 
16 
17 
18 
19 
20 
21 
22 
23 
24 
25 
+

* 32 FileName: ..\uclient\lsarpc_c.h, Symbol: _LSAPR_POLICY_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 12 
1 
2 
3 
5 
4 
6 
7 
8 
9 
10 
11 
12 
+

* 32 FileName: ..\uclient\lsarpc_c.h, Symbol: _LSAPR_TRUSTED_DOMAIN_INFO, Kind 3(Union_NonEncap_MS), Arms: 10 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
+

* 32 FileName: ..\uclient\lsarpc_c.h, Symbol: _LSAPR_POLICY_DOMAIN_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 64 FileName: ..\uclient\lsarpc_c.h, Symbol: _LSAPR_POLICY_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 12 
1 
2 
3 
5 
4 
6 
7 
8 
9 
10 
11 
12 
+

* 64 FileName: ..\uclient\lsarpc_c.h, Symbol: _LSAPR_TRUSTED_DOMAIN_INFO, Kind 3(Union_NonEncap_MS), Arms: 10 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
+

* 64 FileName: ..\uclient\lsarpc_c.h, Symbol: _LSAPR_POLICY_DOMAIN_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 32 FileName: ..\server\lsarpc.h, Symbol: _LSAPR_POLICY_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 12 
1 
2 
3 
5 
4 
6 
7 
8 
9 
10 
11 
12 
+

* 32 FileName: ..\server\lsarpc.h, Symbol: _LSAPR_TRUSTED_DOMAIN_INFO, Kind 3(Union_NonEncap_MS), Arms: 10 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
+

* 32 FileName: ..\server\lsarpc.h, Symbol: _LSAPR_POLICY_DOMAIN_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 64 FileName: ..\server\lsarpc.h, Symbol: _LSAPR_POLICY_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 12 
1 
2 
3 
5 
4 
6 
7 
8 
9 
10 
11 
12 
+

* 64 FileName: ..\server\lsarpc.h, Symbol: _LSAPR_TRUSTED_DOMAIN_INFO, Kind 3(Union_NonEncap_MS), Arms: 10 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
+

* 64 FileName: ..\server\lsarpc.h, Symbol: _LSAPR_POLICY_DOMAIN_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 32 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_DOMAIN_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 12 
1 
2 
3 
4 
5 
7 
6 
8 
9 
11 
12 
13 
+

* 32 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_GROUP_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
4 
+

* 32 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_ALIAS_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 32 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_USER_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 23 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
16 
17 
18 
19 
20 
21 
22 
23 
24 
+

* 32 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_DISPLAY_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
5 
+

* 64 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_DOMAIN_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 12 
1 
2 
3 
4 
5 
7 
6 
8 
9 
11 
12 
13 
+

* 64 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_GROUP_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
4 
+

* 64 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_ALIAS_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 64 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_USER_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 23 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
16 
17 
18 
19 
20 
21 
22 
23 
24 
+

* 64 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_DISPLAY_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
5 
+

* 32 FileName: ..\server\samrpc.h, Symbol: _SAMPR_DOMAIN_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 12 
1 
2 
3 
4 
5 
7 
6 
8 
9 
11 
12 
13 
+

* 32 FileName: ..\server\samrpc.h, Symbol: _SAMPR_GROUP_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
4 
+

* 32 FileName: ..\server\samrpc.h, Symbol: _SAMPR_ALIAS_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 32 FileName: ..\server\samrpc.h, Symbol: _SAMPR_USER_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 23 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
16 
17 
18 
19 
20 
21 
22 
23 
24 
+

* 32 FileName: ..\server\samrpc.h, Symbol: _SAMPR_DISPLAY_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
5 
+

* 64 FileName: ..\server\samrpc.h, Symbol: _SAMPR_DOMAIN_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 12 
1 
2 
3 
4 
5 
7 
6 
8 
9 
11 
12 
13 
+

* 64 FileName: ..\server\samrpc.h, Symbol: _SAMPR_GROUP_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
4 
+

* 64 FileName: ..\server\samrpc.h, Symbol: _SAMPR_ALIAS_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 64 FileName: ..\server\samrpc.h, Symbol: _SAMPR_USER_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 23 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
16 
17 
18 
19 
20 
21 
22 
23 
24 
+

* 64 FileName: ..\server\samrpc.h, Symbol: _SAMPR_DISPLAY_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
5 
+
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\rpc\ndrexts\placefil.txt ===
; This file is used to specify where every file built by the NT build lab is
; binplaced relative to the root of the distribution point.  If a file is not
; listed, it will end up in the dump directory.
;
; The format is like this:
;
; <imagename>    <class name>
;
; where <imagename> is the filename.ext and <class name> is the directory off
; the root of the distribution point (retail is a placeholder for the root).
; If there are multiple class names for a single image, use a colon to separate
; each.
;
; All bits that ship in the NT base product and are installed with winnt32,
; must have a class name of retail.
;
; If you add a new file to the list, please refrain from creating your own
; special section.  Doing so makes it difficult to detect duplicates.  If
; you're unable to add your image due to a collision with an existing name,
; work it out with the other developer.  Options include creating another
; placefil.txt for your project or using the ALT_PROJECT_TARGET macro in your
; sources file to change the base of the distribution point (doing so means
; your project will not install as part of base NT).
;
;     sort /+17 < placefil.txt > placefil.srt
;
; will generate a list sorted by class name if you want.
;
; IMPORTANT NOTE:
;
; If you add a file to the system, YOU MUST make sure layout.inf is updated
; before you start depending on it or else you will cause a BVT break. Do
; not attempt to modify layout.inf yourself, but follow instructions on:
;     http://ntbld/addtob.htm
;
;        PLEASE KEEP THIS LIST SORTED
;---------------------------------------------
;---------------------------------------------
ndrexts.dll      idw
jitdump.exe      idw
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\rpc\perf\readme.txt ===
rpcrt   - RPC runtime performance tests:
         Null Calls, Buffer I/O, Binding, Context Handles, Etc.
         bin\*\rpcsrv -h // The server controls which test(s) get run, read
                            the usage for info.
         bin\*\rpcclnt -t <protseq> [-e <endpoint>] [-s <server>]

workset - Rpc client and server applications used to measure working set.
         start bin\*\wssrv  [-t protseq] [-e endpoint]
         start bin\*\wsclnt [-t protseq] [-e endpoint]
         Client and server applications pause to allow working set measurement:
         Server: startup, after listen
         Client: startup, after first call, after flush and another call,
                 after flushing the server and making another call.

lpc    - Raw LPC client and server
         start bin\*\lpcsrv
         start bin\*\lpcclnt [-i iterations] -n case -n size
         Cases:
            1: Uses the message for data transfer, size limited to ~225b
            2: Uses Nt{Read,Write}RequestData to move data, unlimited size.
         In case 2, its behavior is different (faster) than LRPC.

context - Measures context switch time using a variety of mechanisms
          start bin\*\context [-n type] [-n case]
          Types:
            1: Both client and server, context switch between two threads
            2: Server of process-to-process context switches
            3: Client of process-to-process context switches
          Cases:
            1: Uses an NT eventpair
            2: User an NT eventpair, but client uses two steps (sethigh, waitlow)
            2: Uses two win32 events and WaitForSingleObject.
            3: Uses two win32 events and WaitForSingleObject w/ timeout.

          Note: Use lpc test to measure pp context switch via LPC.
          Note: Use pmsg test to measure pp and tt context switch via PostMessage()

postmsg - Measures time to do process-to-process (pp) and thread-to-thread
          PostMessage() calls.
          Note: The server is a windows app which doesn't display a window,
                it's running, really it is!
          start bin\*\pmsgsrv
          bin\*\pmsgclnt [-n case]
          Cases:
             1: PostMessage (thread-to-thread)
             2: PostMessage (procress-to-process)
             3: PostMessage and win32 event. (tt)
             4: PostMessage and win32 event. (pp)
          Note: The postmessage and win32 event version forces a context
          switch on every post message.  This is more OLE-like.  Otherwise,
          in cases 1 and 2, the messages get qued-up.

local   - A variety of system/machine/processor/memory measurements.
          bin\*\local -n case
          Cases:
            1: -n start -n end - memcpy calls (maximum cacheing)
            2: -n start -n end - strcpy calls (maximum cacheing)
            3: -n start -n end - strlen calls (maximum cacheing)
            4: -n size - allocate and free 'size' memory blocks.
            5: SetEvent and ResetEvent calls (kernel traps)
            6: GetTickCount calls
            7: Open and query a registry key
            8: Query a registry key
            9: Create and set a key  (* must run first, before 7, 8 and 10)
           10: Updating (setting) a key
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\rpc\perf\datatran\readme.txt ===
DTServer/DTClient
-----------------

Note:  "Server" denotes the machine that runs DTServer, and "client"
denotes the machine that runs DTClient.  They may be the same machine.

--------------------------------------------------------------------------
This app transfers data using different methods so one can compare their 
performances.

The methods supported are:
  Regular RPC,
  RPC Pipes,
  FTP,
  a different FTP, and
  HTTP.

Each method can be tested with or without actual File I/O.  When not using 
File I/O the data transferred is just a block of memory.

The Internet API provides two ways to use FTP.  The first way does 
everything for you: connection, authentication, the transfer, etc..  The 
other way is to do an "FtpOpenFile" and then doing an "InternetReadFile" 
or "InternetWriteFile", which gives you more control over the transfer.

To use the internet tests the server must have access to a directory that 
the client can access through an FTP or HTTP server.  These directories 
are passed in as the -d and -w parameters of the server.  Furthermore, the 
directory must appear as the root directory when it connects to the server 
machine.
        For example, if the FTP server is set up to expose "c:\foo\" as 
  the root directory (ie, if the server is called \\SERVER, then when you
  FTP to \\SERVER you will see the content of c:\foo\), then one must 
  use "-d c:\foo\" in the command line invoking DTServer.exe.  During the 
  test that tests the transfer of a file from the server to the client, 
  the client will get the server's name and the name of the file (using an 
  RPC) and either do a put or a get on it.  Similarly, for HTTP one would 
  use the -w switch.
With NT you'll probably use IIS so you should have that installed on the 
server.

There are two parameters that lets someone examine how the performance of 
the tested protocols relate to the amount of data transferred.  The Size
parameter ("-z") specifies the total amount of data you want to transfer.  
ChunkSize ("-c") specifies the size of the chunks you want to transfer 
the data in.  This latter parameter affects how much memory you will need 
- larger chunks could mean better performance but requires more memory.

--------------------------------------------------------------------------
Example command lines:
(For information on test cases, run DTServer /?)

DTServer -i 1 -c 7000 -c 64000 -z 9000 -z 500000 -d c:\ftproot -w c:\wwwroot

This runs one iteration of each test using chunks of sizes 7000 and 64000 
and total sizes of 9000 and 500000.  Note that this means for each test 
case, 4 (2 chunk sizes X 2 total sizes) tests will be run.  The FTP tests 
will use c:\ftproot and the HTTP tests will use c:\wwwroot.


DTServer -i 10 -n 1 -n 3 -n 1 -n 3 -n 5 -n 7 -d c:\foo -w c:\bar

This will run test cases 1, 3, 5 and 7 using c:\foo and c:\bar as the FTP 
and HTTP directories.  Here we're using the default chunk and total sizes, 
which can be found by running "DTServer /?".  Each test will run for 10 
iterations.

In summary, you can specify more than one -c, -z and -n parameters.  If 
none are specified then the default is used.  For ftp and http tests to 
work you have to specify their associated directories.

=======================================
There are other parameters, but since they're common to the other PERF 
tests they're not discussed here.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\rpc\runtime\exts\rpcdbg.doc ===
Microsoft Word 6.0 Document MSWordDoc Word.Document.6D:\WINWORD\TEMPLATE\NORMAL.DOT RPC NTSD Extensions Scott Holden Scott Holden Microsoft Word 6.0RPC Debugger Extensions Author: Scott Holden Modification Date:   SAVEDATE \@ "MMMM d, yyyy" \* MERGEFORMAT  August 15, 1994 Print Date:   PRINTDATE \@ "MMMM d, yyyy  h:mm:ss AM/PM" \* MERGEFORMAT  August 15, 1994  1:00:00 PM Using the RPCDBG Debugger Extensions To call a debugger extension, the DLL must be loaded into the debugger. A DLL (and function) is loaded into the debugger by: debugger command line>  !<dll name>.<function name> <options> i.e. > !rpcdbg.dump_osfbh 0x104506 The following functions are provided in the RPCDBG DLL extension. Function name  Options Type of  Structure symbol (<address> | <symbol name>) dump_osfbh <address> OSF_BINDING_HANDLE dump_osfca <address> OSF_CASSOCIATION dump_osfcc <address> OSF_CCONNECTION dump_osfaddr <address> OSF_ADDRESS dump_osfsc <address> OSF_SCONNECTION dump_osfassoc <address> OSF_ASSOCIATION dump_dcebinding <address> DCE_BINDING dump_rpcsvr <address> RPC_SERVER dump_dg_act <address> DG_ACTIVE_CALL_TABLE dump_dg_addr <address> DG_ADDRESS dump_dg_scall <address> DG_SCALL dump_dg_ccall <address> DG_CCALL dump_dg_epmgr <address> DG_ENDPOINT_MANAGER dump_dg_bh <address> DG_BINDING_HANDLE dump_dg_ca <address> DG_CASSOCIATION dump_dg_pkt <address> DG_PACKET dump_lpc_addr <address> LRPC_ADDRESS dump_lpc_assoc <address> LRPC_ASSOCIATION dump_lpc_scall <address> LRPC_SCALL dump_lpc_ccall <address> LRPC_CCALL dump_lpc_bh <address> LRPC_BINDING_HANDLE dump_lpc_ca <address> LRPC_CASSOCIATION dd_rpc [-a <address>] [-d <num display>] RPC_MEMORY_BLOCK Creating a Debugger Extension Whenever a debugger extension function is called, the debugger automatically passes a certain number of parameters to the function. Currently,  NTSD passes a handle to the current process, a handle to the current thread, the contents of the program counter, an argument string, and a pointer to a structure of function pointers. A debugger extension declaration  looks as follows: function_name( HANDLE               hCurrentProcess, HANDLE               hCurrentThread, DWORD                dwCurrentPC, PNTSD_EXTENSION_APIS lpExtensionApis, LPSTR                lpArgumentString ); The NTSD_EXTENSION_APIS is a structure of useful function pointers: typedef struct _NTSD_EXTENSION_APIS {      DWORD nSize;      // a printf-like function for outputting to the debugger      PNTSD_OUTPUT_ROUTINE lpOutputRoutine;      // given a symbol name, this routine returns the address of       // the symbol. given an address in string format, it will       // convert the string to a DWORD address      PNTSD_GET_EXPRESSION lpGetExpressionRoutine;      // given an address to a symbol, it will return the symbol      // name and offset      PNTSD_GET_SYMBOL lpGetSymbolRoutine;      PNTSD_DISASM lpDisasmRoutine;      PNTSD_CHECK_CONTROL_C lpCheckControlCRoutine; } NTSD_EXTENSION_APIS, *PNTSD_EXTENSION_APIS; If the debugger extension needs to access memory in the debuggee process, then the extension must copy the memory from the debuggee s memory space. (The debugger memory space is different from the debuggee s memory space). The debugger can copy the debuggee s memory using the Win32 API - ReadProcessMemory. Once the memory has been copied, all structure members, etc. can be accessed normally. (Remember that pointers are addresses in the debugee s address space and not the debugger s address space). Debugger Extension Example #include <sysinc.h> #define dprintf         (ExtensionApis.lpOutputRoutine) #define GetExpression   (ExtensionApis.lpGetExpressionRoutine) #define GetSymbol       (ExtensionApis.lpGetSymbolRoutine) #define Disasm          (ExtensionApis.lpGetDisasmRoutine) #define CheckControlC   (ExtensionApis.lpCheckControlCRoutine) #define DECLARE_API(s)                              \         VOID                                        \         s(                                          \             HANDLE               hCurrentProcess,   \             HANDLE               hCurrentThread,    \             DWORD                dwCurrentPc,       \             PNTSD_EXTENSION_APIS lpExtensionApis,   \             LPSTR                lpArgumentString   \             ) NTSD_EXTENSION_APIS ExtensionApis; // this function will take either a symbol name or the address // of a symbol as an argument // it prints the symbol name, the displacement and the address DECLARE_API( symbol )     DWORD dwAddr;     CHAR Symbol[64];     DWORD Displacement;     ExtensionApis = *lpExtensionApis;     dwAddr = GetExpression(lpArgumentString);     if ( !dwAddr ) {         return;     }     GetSymbol( (LPVOID)dwAddr, (unsigned char*)Symbol, &Displacement     dprintf("%s+%lx at %lx\n", Symbol, Displacement, dwAddr); The symbol extension accepts either a symbol name and outputs the address of the symbol, or accept Normal Default Paragraph Font Title (title page) title page info table text tabletext title A title s the address of a symbol and outputs the symbol name. The dd_rpc extension outputs the linked list of memory blocks. If no address is specified, then the extension automatically starts from the first block of memory in the linked list. Also, the   option can be used to specify how many blocks to output. This number is bi-directional. (i.e. a negative number specifies to display  x blocks previous to the current address). The function will stop when it gets to either the beginning or end of the linked list. All other function extensions require the address of the structure.dump_rpcmsgRPC_MESSAGEAugust15199433000PM Scott Holden D:\USERS\SKHOLDEN\RPCDBG.DOC @\\NTPRINT\pscript1 Ne01: winspool \\NTPRINT\pscript1 Letter PRIV   N N N \\NTPRINT\pscript1 Letter PRIV   N N N Times New Roman Symbol Arial Courier New RPC NTSD Extensions Scott Holden Scott Holden
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\svcdlls\trksvcs\regdef.ini ===
hkey_local_machine\System\CurrentControlSet\Services\TrkSvr\Parameters\Configuration
    TrkDebugFlags = DELETE
    DebugStoreFlags = DELETE
hkey_local_machine\System\CurrentControlSet\Services\TrkWks\Parameters\Configuration
    TrkDebugFlags = DELETE
    DebugStoreFlags = DELETE
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\svcdlls\trksvcs\regdebug.ini ===
hkey_local_machine\System\CurrentControlSet\Services\TrkSvr\Parameters\Configuration
    TrkDebugFlags = REG_DWORD 0xff7fffff
hkey_local_machine\System\CurrentControlSet\Services\TrkWks\Parameters\Configuration
    TrkDebugFlags = REG_DWORD 0xff7fffff
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\com\svcdlls\trksvcs\trksvr\schema.ini ===
/*
[FileLinks]
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;AU)S:(A;CI;RPWPCCDCLCSW;;;AU)
Object-Class = File-Link-Tracking

[File-Link-Tracking]
Common-Name=File-Link-Tracking
Admin-Display-Name=File-Link-Tracking
Admin-Description=File-Link-Tracking
Object-Class=Class-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
; Generated LDAP name: fileLinkTracking
Default-Security-Descriptor=D:(A;;GA;;;SY)(A;;GA;;;CO)(A;;GA;;;DA)(A;;GR;;;WD)
Governs-ID=\x2A864886F714010534
Instance-Type=4
Object-Class-Category=1
RDN-Att-ID=Common-Name
Schema-ID-GUID=\xdd71222910e411d0a05f00aa006c33ed
Sub-Class-Of=Container
System-Only=FALSE

System-Poss-Superiors=Domain-DNS
System-Poss-Superiors=Domain-Organization
System-Poss-Superiors=Domain-Country
System-Poss-Superiors=Domain-Locality
System-Poss-Superiors=Domain-Organizational-Unit

[File-Link-Tracking-Entry]
Common-Name=File-Link-Tracking-Entry
Admin-Display-Name=File-Link-Tracking-Entry
Admin-Description=File-Link-Tracking-Entry
Object-Class=Class-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
; Generated LDAP name: fileLinkTrackingEntry
Default-Security-Descriptor=D:(A;;GA;;;SY)(A;;GA;;;CO)(A;;GA;;;DA)(A;;GR;;;WD)
Governs-ID=\x2A864886F71401053B
Instance-Type=4
Object-Class-Category=1
RDN-Att-ID=Common-Name
Schema-ID-GUID=\x8e4eb2ed471211d0a1a000c04fd930c9
Sub-Class-Of=Top
System-Only=FALSE

System-Poss-Superiors=File-Link-Tracking

System-May-Contain=Birth-Machine-Id
System-May-Contain=Birth-Replset-Id
System-May-Contain=Curr-Domain-Id
System-May-Contain=Curr-Domain-Name
System-May-Contain=Curr-Machine-Id
System-May-Contain=Curr-Machine-Name
System-May-Contain=Curr-Replset-Id
System-May-Contain=Flags
System-May-Contain=Link-Track-Secret
System-May-Contain=Obj-Id


[Birth-Machine-Id]
Common-Name=Birth-Machine-Id
Admin-Display-Name=Birth-Machine-Id
Admin-Description=Birth-Machine-Id
Object-Class=Attribute-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
Attribute-ID=\x2A864886F7140104824C
OM-Syntax=4
Attribute-Syntax=\x55050A
; Generated LDAP Name: birthMachineId
Is-Single-Valued=TRUE
Instance-Type = 4
Search-Flags=1
System-Only=FALSE
Range-Lower= 16
Range-Upper= 16
Schema-ID-GUID=\x1f0075f97e4011d0afd600c04fd930c9

[Birth-Replset-Id]
Common-Name=Birth-Replset-Id
Admin-Display-Name=Birth-Replset-Id
Admin-Description=Birth-Replset-Id
Object-Class=Attribute-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
Attribute-ID=\x2A864886F7140104824D
OM-Syntax=4
Attribute-Syntax=\x55050A
; Generated LDAP Name: birthReplsetId
Is-Single-Valued=TRUE
Instance-Type = 4
Search-Flags=1
System-Only=FALSE
Range-Lower= 16
Range-Upper= 16
Schema-ID-GUID=\x1f0075fa7e4011d0afd600c04fd930c9

[Curr-Domain-Id]
Common-Name=Curr-Domain-Id
Admin-Display-Name=Curr-Domain-Id
Admin-Description=Curr-Domain-Id
Object-Class=Attribute-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
Attribute-ID=\x2A864886F71401048251
OM-Syntax=4
Attribute-Syntax=\x55050A
; Generated LDAP Name: currDomainId
Is-Single-Valued=TRUE
Instance-Type = 4
Search-Flags=0
System-Only=FALSE
Range-Lower= 16
Range-Upper= 16
Schema-ID-GUID=\x1f0075fe7e4011d0afd600c04fd930c9

[Curr-Domain-Name]
Common-Name=Curr-Domain-Name
Admin-Display-Name=Curr-Domain-Name
Admin-Description=Curr-Domain-Name
Object-Class=Attribute-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
Attribute-ID=\x2A864886F71401048252
OM-Syntax=64
Attribute-Syntax=\x55050C
; Generated LDAP Name: currDomainName
Is-Single-Valued=TRUE
Instance-Type = 4
Search-Flags=0
System-Only=FALSE
Schema-ID-GUID=\x1f0075ff7e4011d0afd600c04fd930c9

[Curr-Machine-Id]
Common-Name=Curr-Machine-Id
Admin-Display-Name=Curr-Machine-Id
Admin-Description=Curr-Machine-Id
Object-Class=Attribute-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
Attribute-ID=\x2A864886F7140104824F
OM-Syntax=4
Attribute-Syntax=\x55050A
; Generated LDAP Name: currMachineId
Is-Single-Valued=TRUE
Instance-Type = 4
Search-Flags=0
System-Only=FALSE
Range-Lower= 16
Range-Upper= 16
Schema-ID-GUID=\x1f0075fc7e4011d0afd600c04fd930c9

[Curr-Machine-Name]
Common-Name=Curr-Machine-Name
Admin-Display-Name=Curr-Machine-Name
Admin-Description=Curr-Machine-Name
Object-Class=Attribute-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
Attribute-ID=\x2A864886F7140104824E
OM-Syntax=64
Attribute-Syntax=\x55050C
; Generated LDAP Name: currMachineName
Is-Single-Valued=TRUE
Instance-Type = 4
Search-Flags=0
System-Only=FALSE
Schema-ID-GUID=\x1f0075fb7e4011d0afd600c04fd930c9

[Curr-Replset-Id]
Common-Name=Curr-Replset-Id
Admin-Display-Name=Curr-Replset-Id
Admin-Description=Curr-Replset-Id
Object-Class=Attribute-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
Attribute-ID=\x2A864886F71401048250
OM-Syntax=4
Attribute-Syntax=\x55050A
; Generated LDAP Name: currReplsetId
Is-Single-Valued=TRUE
Instance-Type = 4
Search-Flags=0
System-Only=FALSE
Range-Lower= 16
Range-Upper= 16
Schema-ID-GUID=\x1f0075fd7e4011d0afd600c04fd930c9

[Link-Track-Secret]
Common-Name=Link-Track-Secret
Admin-Display-Name=Link-Track-Secret
Admin-Description=Link-Track-Secret
Object-Class=Attribute-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
Attribute-ID=\x2A864886F7140104820D
OM-Syntax=4
Attribute-Syntax=\x55050A
; Generated LDAP Name: linkTrackSecret
Is-Single-Valued=TRUE
Instance-Type = 4
Search-Flags=0
System-Only=FALSE
Range-Lower= 0
Range-Upper= 8
Schema-ID-GUID=\x2ae80fe247b411d0a1a400c04fd930c9

[Obj-Id]
Common-Name=Obj-Id
Admin-Display-Name=Obj-Id
Admin-Description=Obj-Id
Object-Class=Attribute-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
Attribute-ID=\x2A864886F7140104824B
OM-Syntax=4
Attribute-Syntax=\x55050A
; Generated LDAP Name: objId
Is-Single-Valued=TRUE
Instance-Type = 4
Search-Flags=1
System-Only=FALSE
Range-Lower= 16
Range-Upper= 16
Schema-ID-GUID=\x1f0075f87e4011d0afd600c04fd930c9

*/
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\apm\ntapm\notes.txt ===
2 April 1998

1.  Q:  Why are there so many little include files?

    A:  Because they are defining various private entities
        that we don't want to redefine (build conflicts, etc),
        or because they are a copy of a symbol that really
        lives somewhere else but we cannot include due to some
        header ordering problem.
        (e.g. we can't have both ntddk.h and ntos.h, so ZwInitiatePowerAction
            has to be copied into a another header file...)

2.  Q:  Why doesn't the driver remote, unload, stop, or even fail init?

    A:  We call the hal with direct call vectors for use in response
        to the OS calling it (the hal) to go to S3 or S4.  Once we've
        set those vectors, we can't pull the code out from under the Hal.

        AND

        Without the PNP stuff batteries don't work, but other APM features do.

        Without the SuspendPoll thread machine initiated APM ops don't work,
        but UI initiated ops (the user did C-A-D, shutdown, Standby) WILL
        still work.

        So, we take what we can get.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\ddk\ifs_drivers.ini ===
[TEXT: No readable text]
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\ddk\ddk_drivers.ini ===
; FORMAT : SourceDir, SourceFile, DestDir, DestFile, OPERATION
; All fields are required
; [subname]* is allowed for source, in which case * required for destination

input\kbdclass                            , kbdclass.*  , src\input\kbdclass                                , *           , HSPLIT
input\kbdclass                            , kbdlog.mc   , src\input\kbdclass                                , *           , HSPLIT
input\kbdclass                            , makefile    , src\input\kbdclass                                , *           , HSPLIT
input\kbdclass                            , sources     , src\input\kbdclass                                , *           , HSPLIT
input\kbfiltr                             , *           , src\input\kbfiltr                                 , *           , HSPLIT
input\mouclass                            , makefile    , src\input\mouclass                                , *           , HSPLIT
input\mouclass                            , mouclass.*  , src\input\mouclass                                , *           , HSPLIT
input\mouclass                            , moulog.mc   , src\input\mouclass                                , *           , HSPLIT
input\mouclass                            , sources     , src\input\mouclass                                , *           , HSPLIT
input\moufiltr                            , *           , src\input\moufiltr                                , *           , HSPLIT
input\mouser                              , *           , src\input\mouser                                  , *           , HSPLIT
input\pnpi8042                            , *           , src\input\pnpi8042                                , *           , HSPLIT
input\pnpi8042\daytona                    , *           , src\input\pnpi8042\daytona                        , *           , HSPLIT

net\ms\e100bex                            , *           , src\network\ndis\e100bex                          , *           , COPY
net\ms\e100bex\50                         , *           , src\network\ndis\e100bex\50                       , *           , COPY
net\ms\e100bex\50                         , sources.ddk , src\network\ndis\e100bex\50                       , sources     , COPY
net\ms\e100bex\51                         , *           , src\network\ndis\e100bex\51                       , *           , COPY
net\ms\e100bex\51                         , sources.ddk , src\network\ndis\e100bex\51                       , sources     , COPY
net\ms\e100bex\kd                         , *           , src\network\ndis\e100bex\kd                       , *           , COPY
net\ms\e100bex\lib\i386                   , MP_PM.lib   , src\network\ndis\e100bex\private\i386             , *           , COPY
net\ms\e100bex\lib\ia64                   , MP_PM.lib   , src\network\ndis\e100bex\private\ia64             , *           , COPY
net\ms\e100bex\testwmi                    , *           , src\network\ndis\e100bex\testwmi                  , *           , COPY

net\netcard\toshiba\tbatm155\sys          , *           , src\network\ndis\tbatm155                         , *           , COPY

parallel\parport2                         , *           , src\kernel\parport                                , *           , HSPLIT
serial\serenum                            , *           , src\kernel\serenum                                , *           , HSPLIT
serial\serial                             , *           , src\kernel\serial                                 , *           , HSPLIT

smartcrd\bulltlp3                         , *           , src\smartcrd\bulltlp3                             , *           , HSPLIT      
smartcrd\inc                              , *.h         , src\smartcrd\inc                                  , *           , HSPLIT      
smartcrd\pscr                             , *           , src\smartcrd\pscr                                 , *           , HSPLIT      

storage\addfilter                         , *           , src\storage\filters\addfilter                     , *           , HSPLIT      
storage\cdaudio                           , *           , src\storage\filters\cdaudio                       , *           , HSPLIT      
storage\cdrom                             , *           , src\storage\class\cdrom                           , *           , HSPLIT      
storage\classpnp                          , *           , src\storage\class\classpnp                        , *           , HSPLIT      
storage\disk                              , *           , src\storage\class\disk                            , *           , HSPLIT      
storage\diskperf                          , *           , src\storage\filters\diskperf                      , *           , HSPLIT      
storage\fdc\fdc                           , *           , src\storage\fdc\fdc                               , *           , HSPLIT      
storage\fdc\flpydisk                      , *           , src\storage\fdc\flpydisk                          , *           , HSPLIT      
storage\fdc\inc                           , *.h         , src\storage\fdc\inc                               , *           , HSPLIT      
; RAID 438101 - 3mode floppy no longer supported in XP
; storage\fdc\mode3fdc\desk2fdc             , *           , src\storage\fdc\3mode\fdc.2                       , *           , HSPLIT      
; storage\fdc\mode3fdc\deskfdc              , *           , src\storage\fdc\3mode\fdc                         , *           , HSPLIT      
; storage\fdc\mode3fdc\flpydisk             , *           , src\storage\fdc\3mode\flpydisk                    , *           , HSPLIT      
; Removed per RAID 391497 - storage\fpfilter                          , *           , src\storage\filters\fpfilter                      , *           , HSPLIT
storage\ide\inc                           , ide.h       , src\storage\inc                                   , *           , HSPLIT      
storage\ide\inc                           , ideuser.h   , src\storage\inc                                   , *           , HSPLIT      
storage\ide\inc                           , msg.mc      , src\storage\miniide\pciide                        , *           , HSPLIT      
storage\ide\miniport\pciide               , *           , src\storage\miniide\pciide                        , *           , HSPLIT      
storage\inc                               , *.h         , src\storage\inc                                   , *           , HSPLIT
storage\mcd\class                         , *           , src\storage\changers\class                        , *           , HSPLIT      
storage\mcd\drivers\adicsc                , *           , src\storage\changers\drivers\adicsc               , *           , HSPLIT      
storage\mcd\drivers\ddsmc                 , *           , src\storage\changers\drivers\ddsmc                , *           , HSPLIT      
storage\mcd\drivers\elmsmc                , *           , src\storage\changers\drivers\elmsmc               , *           , HSPLIT      
storage\mcd\drivers\exabyte               , *           , src\storage\changers\drivers\exabyte              , *           , HSPLIT      
storage\mcd\drivers\hpmc                  , *           , src\storage\changers\drivers\hpmc                 , *           , HSPLIT      
storage\mcd\drivers\nsmmc                 , *           , src\storage\changers\drivers\nsmmc                , *           , HSPLIT      
storage\mcd\drivers\sonymc                , *           , src\storage\changers\drivers\sonymc               , *           , HSPLIT      
storage\mcd\inc                           , *.h         , src\storage\changers\inc                          , *           , HSPLIT      
storage\port\scsi\miniport\aha154x        , *           , src\storage\miniport\aha154x                      , *           , HSPLIT      
storage\port\scsi\miniport\initio         , *           , src\storage\miniport\initio                       , *           , HSPLIT      
storage\tools\spti                        , *           , src\storage\tools\spti                            , *           , HSPLIT
storage\tape\class                        , *           , src\storage\class\tape                            , *           , HSPLIT      
storage\tape\drivers\4mmdat               , *           , src\storage\tape\4mmdat                           , *           , HSPLIT      
storage\tape\drivers\dlttape              , *           , src\storage\tape\dlttape                          , *           , HSPLIT      
storage\tape\drivers\exabyte1             , *           , src\storage\tape\exabyte1                         , *           , HSPLIT      
storage\tape\drivers\exabyte2             , *           , src\storage\tape\exabyte2                         , *           , HSPLIT      
storage\tape\drivers\miniqic              , *           , src\storage\tape\miniqic                          , *           , HSPLIT      
storage\tape\drivers\qic157               , *           , src\storage\tape\qic157                           , *           , HSPLIT      
storage\tape\inc                          , physlogi.h  , src\storage\inc                                   , *           , HSPLIT      
video\ms\3dlabs\perm2\disp                , *           , src\video\displays\3dlabs\perm2\disp              , *           , HSPLIT
video\ms\3dlabs\perm2\mini                , *           , src\video\displays\3dlabs\perm2\mini              , *           , HSPLIT
video\ms\3dlabs\perm3\disp                , *           , src\video\displays\3dlabs\perm3\disp              , *           , HSPLIT
video\ms\3dlabs\perm3\disp\dx             , *           , src\video\displays\3dlabs\perm3\disp\dx           , *           , HSPLIT
video\ms\3dlabs\perm3\disp\gdi            , *           , src\video\displays\3dlabs\perm3\disp\gdi          , *           , HSPLIT
video\ms\3dlabs\perm3\disp\inc            , *           , src\video\displays\3dlabs\perm3\disp\inc          , *           , HSPLIT
video\ms\3dlabs\perm3\mini                , *           , src\video\displays\3dlabs\perm3\mini              , *           , HSPLIT
video\monitors\samplinf                   , monsamp.inf , src\video\monitors\inf                            , *           , COPY
video\ms\framebuf\disp                    , *           , src\video\displays\framebuf\disp                  , *           , HSPLIT
video\ms\mirror\disp                      , *           , src\video\displays\mirror\disp                    , *           , HSPLIT
video\ms\mirror\mini                      , *           , src\video\displays\mirror\mini                    , *           , HSPLIT
video\ms\mirror\app                       , *           , src\video\displays\mirror\app                     , *           , HSPLIT

wdm\1394\tools\test\driver\1394diag       , *           , src\wdm\1394\driver\1394diag                      , *           , HSPLIT      
wdm\1394\tools\test\driver\common         , *           , src\wdm\1394\driver\common                        , *           , HSPLIT      
wdm\1394\tools\test\driver\1394vdev       , *           , src\wdm\1394\driver\1394vdev                      , *           , HSPLIT      
wdm\1394\tools\test\inc                   , *.h         , src\wdm\1394\inc                                  , *           , HSPLIT
wdm\1394\tools\test\dll\1394api           , 1394.htm    , src\wdm\1394                                      , *           , HSPLIT      
wdm\1394\tools\test\dll\1394api           , 1394.htm    , src\wdm\1394\dll\1394api                          , *           , HSPLIT      
wdm\1394\tools\test\dll\1394api           , 1394api.c   , src\wdm\1394\dll\1394api                          , *           , HSPLIT      
wdm\1394\tools\test\dll\1394api           , 1394api.def , src\wdm\1394\dll\1394api                          , *           , HSPLIT      
wdm\1394\tools\test\dll\1394api           , 1394api.rc  , src\wdm\1394\dll\1394api                          , *           , HSPLIT      
wdm\1394\tools\test\dll\1394api           , 1394main.c  , src\wdm\1394\dll\1394api                          , *           , HSPLIT      
wdm\1394\tools\test\dll\1394api           , asyncapi.c  , src\wdm\1394\dll\1394api                          , *           , HSPLIT      
wdm\1394\tools\test\dll\1394api           , debug.c     , src\wdm\1394\dll\1394api                          , *           , HSPLIT      
wdm\1394\tools\test\dll\1394api           , debug.h     , src\wdm\1394\dll\1394api                          , *           , HSPLIT      
wdm\1394\tools\test\dll\1394api           , isochapi.c  , src\wdm\1394\dll\1394api                          , *           , HSPLIT      
wdm\1394\tools\test\dll\1394api           , local.h     , src\wdm\1394\dll\1394api                          , *           , HSPLIT      
wdm\1394\tools\test\dll\1394api           , makefile    , src\wdm\1394\dll\1394api                          , *           , HSPLIT      
wdm\1394\tools\test\dll\1394api           , pch.h       , src\wdm\1394\dll\1394api                          , *           , HSPLIT      
wdm\1394\tools\test\dll\1394api           , sources     , src\wdm\1394\dll\1394api                          , *           , HSPLIT      
wdm\1394\tools\test\dll\1394api           , util.c      , src\wdm\1394\dll\1394api                          , *           , HSPLIT      
wdm\1394\tools\test\dll\1394api           , util.h      , src\wdm\1394\dll\1394api                          , *           , HSPLIT      
wdm\1394\tools\test\ui\win1394            , *           , src\wdm\1394\ui\win1394                           , *           , HSPLIT      

ddk\wdmaudio 				, * , src\wdm\audio			, * , HSPLIT
ddk\wdmaudio\ac97			, * , src\wdm\audio\ac97		, * , HSPLIT
ddk\wdmaudio\ddksynth			, * , src\wdm\audio\ddksynth		, * , HSPLIT
ddk\wdmaudio\dmusuart			, * , src\wdm\audio\dmusuart		, * , HSPLIT
ddk\wdmaudio\fmsynth			, * , src\wdm\audio\fmsynth		, * , HSPLIT
ddk\wdmaudio\GFX			, * , src\wdm\audio\GFX			, * , HSPLIT
ddk\wdmaudio\mpu401			, * , src\wdm\audio\mpu401		, * , HSPLIT
ddk\wdmaudio\msvad			, * , src\wdm\audio\msvad		, * , HSPLIT
ddk\wdmaudio\sb16			, * , src\wdm\audio\sb16		, * , HSPLIT
ddk\wdmaudio\stdunk			, * , src\wdm\audio\stdunk		, * , HSPLIT
ddk\wdmaudio\ac97\cpl			, * , src\wdm\audio\ac97\cpl		, * , HSPLIT
ddk\wdmaudio\ac97\driver		, * , src\wdm\audio\ac97\driver		, * , HSPLIT
ddk\wdmaudio\ac97\INFViewer		, * , src\wdm\audio\ac97\INFViewer	, * , HSPLIT
ddk\wdmaudio\ac97\proppage		, * , src\wdm\audio\ac97\proppage	, * , HSPLIT
ddk\wdmaudio\ac97\INFViewer\HTML	, * , src\wdm\audio\ac97\INFViewer\HTML	, * , HSPLIT
ddk\wdmaudio\GFX\gfxswap 		, * , src\wdm\audio\GFX\gfxswap		, * , HSPLIT
ddk\wdmaudio\GFX\gfxswap\driver		, * , src\wdm\audio\GFX\gfxswap\driver	, * , HSPLIT
ddk\wdmaudio\GFX\gfxswap\GFXProp	, * , src\wdm\audio\GFX\gfxswap\GFXProp , * , HSPLIT
ddk\wdmaudio\GFX\gfxswap\inc		, * , src\wdm\audio\GFX\gfxswap\inc	, * , HSPLIT
ddk\wdmaudio\msvad\ac3			, * , src\wdm\audio\msvad\ac3		, * , HSPLIT
ddk\wdmaudio\msvad\drmmult		, * , src\wdm\audio\msvad\drmmult	, * , HSPLIT
ddk\wdmaudio\msvad\drmsimp		, * , src\wdm\audio\msvad\drmsimp	, * , HSPLIT
ddk\wdmaudio\msvad\ds2dhw		, * , src\wdm\audio\msvad\ds2dhw	, * , HSPLIT
ddk\wdmaudio\msvad\multstr		, * , src\wdm\audio\msvad\multstr	, * , HSPLIT
ddk\wdmaudio\msvad\pcmex		, * , src\wdm\audio\msvad\pcmex		, * , HSPLIT
ddk\wdmaudio\msvad\simple		, * , src\wdm\audio\msvad\simple	, * , HSPLIT

;wdm\audio\backpln\adapters\dmusic         , adapter.cpp , src\wdm\audio\ddksynth                            , *           , HSPLIT      
;wdm\audio\backpln\adapters\dmusic         , clist.cpp   , src\wdm\audio\ddksynth                            , *           , HSPLIT      
;wdm\audio\backpln\adapters\dmusic         , clist.h     , src\wdm\audio\ddksynth                            , *           , COPY        
;wdm\audio\backpln\adapters\dmusic         , common.h    , src\wdm\audio\ddksynth                            , *           , COPY        
;wdm\audio\backpln\adapters\dmusic         , control.cpp , src\wdm\audio\ddksynth                            , *           , HSPLIT      
;wdm\audio\backpln\adapters\dmusic         , csynth.cpp  , src\wdm\audio\ddksynth                            , *           , HSPLIT      
;wdm\audio\backpln\adapters\dmusic         , csynth.h    , src\wdm\audio\ddksynth                            , *           , HSPLIT      
;wdm\audio\backpln\adapters\dmusic         , ddksynth.htm, src\wdm\audio\ddksynth                            , *           , COPY        
;wdm\audio\backpln\adapters\dmusic         , ddksynth.inf, src\wdm\audio\ddksynth                            , *           , COPY        
;wdm\audio\backpln\adapters\dmusic         , dmusic.rc   , src\wdm\audio\ddksynth                            , ddksynth.rc , HSPLIT      
;wdm\audio\backpln\adapters\dmusic         , instr.cpp   , src\wdm\audio\ddksynth                            , *           , HSPLIT      
;wdm\audio\backpln\adapters\dmusic         , kernhelp.cpp, src\wdm\audio\ddksynth                            , *           , HSPLIT      
;wdm\audio\backpln\adapters\dmusic         , kernhelp.h  , src\wdm\audio\ddksynth                            , *           , COPY        
;wdm\audio\backpln\adapters\dmusic         , makefile.ddk, src\wdm\audio\ddksynth                            , makefile    , COPY        
;wdm\audio\backpln\adapters\dmusic         , midi.cpp    , src\wdm\audio\ddksynth                            , *           , HSPLIT      
;wdm\audio\backpln\adapters\dmusic         , miniport.cpp, src\wdm\audio\ddksynth                            , *           , HSPLIT      
;wdm\audio\backpln\adapters\dmusic         , mix.cpp     , src\wdm\audio\ddksynth                            , *           , HSPLIT      
;wdm\audio\backpln\adapters\dmusic         , mmx.cpp     , src\wdm\audio\ddksynth                            , *           , HSPLIT      
;wdm\audio\backpln\adapters\dmusic         , muldiv32.h  , src\wdm\audio\ddksynth                            , *           , COPY        
;wdm\audio\backpln\adapters\dmusic         , plclock.cpp , src\wdm\audio\ddksynth                            , *           , HSPLIT      
;wdm\audio\backpln\adapters\dmusic         , plclock.h   , src\wdm\audio\ddksynth                            , *           , COPY        
;wdm\audio\backpln\adapters\dmusic         , private.h   , src\wdm\audio\ddksynth                            , *           , HSPLIT      
;wdm\audio\backpln\adapters\dmusic         , sources.ddk , src\wdm\audio\ddksynth                            , sources     , COPY        
;wdm\audio\backpln\adapters\dmusic         , synth.h     , src\wdm\audio\ddksynth                            , *           , COPY        
;wdm\audio\backpln\adapters\dmusic         , syslink.cpp , src\wdm\audio\ddksynth                            , *           , HSPLIT      
;wdm\audio\backpln\adapters\dmusic         , voice.cpp   , src\wdm\audio\ddksynth                            , *           , HSPLIT      

;wdm\audio\backpln\adapters\intel\ichaud   , *.h         , src\wdm\audio\ac97\driver                         , *           , HSPLIT
;wdm\audio\backpln\adapters\intel\ichaud   , ac97smpl.inf, src\wdm\audio\ac97\driver                         , *           , HSPLIT
;wdm\audio\backpln\adapters\intel\ichaud   , ac97smpl.rc , src\wdm\audio\ac97\driver                         , *           , HSPLIT
;wdm\audio\backpln\adapters\intel\ichaud   , *.cpp       , src\wdm\audio\ac97\driver                         , *           , HSPLIT
;wdm\audio\backpln\adapters\intel\ichaud   , makefile    , src\wdm\audio\ac97\driver                         , *           , HSPLIT
;wdm\audio\backpln\adapters\intel\ichaud   , readme.htm  , src\wdm\audio\ac97\driver                         , *           , HSPLIT
;wdm\audio\backpln\adapters\intel\ichaud   , sources.ddk , src\wdm\audio\ac97\driver                         , sources     , HSPLIT
;wdm\audio\backpln\adapters\intel          , prvprop.h   , src\wdm\audio\ac97                                , *           , HSPLIT
;wdm\audio\backpln\adapters\intel\proppage , *           , src\wdm\audio\ac97\proppage                       , *           , HSPLIT
;wdm\audio\backpln\adapters\intel\cpl      , *           , src\wdm\audio\ac97\cpl                            , *           , HSPLIT
;wdm\audio\backpln\adapters\intel\INFViewer, *           , src\wdm\audio\ac97\INFViewer                      , *           , HSPLIT
;wdm\audio\backpln\adapters\intel\INFViewer\HTML, *      , src\wdm\audio\ac97\INFViewer\HTML                 , *           , HSPLIT

;wdm\audio\backpln\adapters\mpu401         , adapter.cpp , src\wdm\audio\mpu401                              , *           , COPY        
;wdm\audio\backpln\adapters\mpu401         , makefile    , src\wdm\audio\mpu401                              , *           , COPY        
;wdm\audio\backpln\adapters\mpu401         , mpu401.def  , src\wdm\audio\mpu401                              , *           , COPY        
;wdm\audio\backpln\adapters\mpu401         , mpu401.htm  , src\wdm\audio\mpu401                              , *           , COPY        
;wdm\audio\backpln\adapters\mpu401         , mpu401.rc   , src\wdm\audio\mpu401                              , *           , COPY        
;wdm\audio\backpln\adapters\mpu401         , sources.ddk , src\wdm\audio\mpu401                              , sources     , COPY        

;wdm\audio\backpln\adapters\msvad          , *.h         , src\wdm\audio\msvad                               , *           , HSPLIT        
;wdm\audio\backpln\adapters\msvad          , *.cpp       , src\wdm\audio\msvad                               , *           , HSPLIT        
;wdm\audio\backpln\adapters\msvad          , *.rc        , src\wdm\audio\msvad                               , *           , HSPLIT        
;wdm\audio\backpln\adapters\msvad          , *.inf       , src\wdm\audio\msvad                               , *           , HSPLIT        
;wdm\audio\backpln\adapters\msvad          , readme.htm  , src\wdm\audio\msvad                               , *           , COPY
;wdm\audio\backpln\adapters\msvad          , sources.inc.ddk , src\wdm\audio\msvad                           , sources.inc , COPY
;wdm\audio\backpln\adapters\msvad\ac3      , *.cpp       , src\wdm\audio\msvad\ac3                           , *           , HSPLIT        
;wdm\audio\backpln\adapters\msvad\ac3      , *.h         , src\wdm\audio\msvad\ac3                           , *           , HSPLIT        
;wdm\audio\backpln\adapters\msvad\ac3      , makefile    , src\wdm\audio\msvad\ac3                           , *           , COPY
;wdm\audio\backpln\adapters\msvad\ac3      , readme.htm  , src\wdm\audio\msvad\ac3                           , *           , COPY
;wdm\audio\backpln\adapters\msvad\ac3      , sources     , src\wdm\audio\msvad\ac3                           , *           , COPY
;wdm\audio\backpln\adapters\msvad\drmmult  , *.cpp       , src\wdm\audio\msvad\drmmult                       , *           , HSPLIT        
;wdm\audio\backpln\adapters\msvad\drmmult  , *.h         , src\wdm\audio\msvad\drmmult                       , *           , HSPLIT        
;wdm\audio\backpln\adapters\msvad\drmmult  , makefile    , src\wdm\audio\msvad\drmmult                       , *           , COPY
;wdm\audio\backpln\adapters\msvad\drmmult  , readme.htm  , src\wdm\audio\msvad\drmmult                       , *           , COPY
;wdm\audio\backpln\adapters\msvad\drmmult  , sources     , src\wdm\audio\msvad\drmmult                       , *           , COPY
;wdm\audio\backpln\adapters\msvad\drmsimp  , *.cpp       , src\wdm\audio\msvad\drmsimp                       , *           , HSPLIT        
;wdm\audio\backpln\adapters\msvad\drmsimp  , *.h         , src\wdm\audio\msvad\drmsimp                       , *           , HSPLIT        
;wdm\audio\backpln\adapters\msvad\drmsimp  , makefile    , src\wdm\audio\msvad\drmsimp                       , *           , COPY
;wdm\audio\backpln\adapters\msvad\drmsimp  , readme.htm  , src\wdm\audio\msvad\drmsimp                       , *           , COPY
;wdm\audio\backpln\adapters\msvad\drmsimp  , sources     , src\wdm\audio\msvad\drmsimp                       , *           , COPY
;wdm\audio\backpln\adapters\msvad\ds2dhw   , *.cpp       , src\wdm\audio\msvad\ds2dhw                        , *           , HSPLIT        
;wdm\audio\backpln\adapters\msvad\ds2dhw   , *.h         , src\wdm\audio\msvad\ds2dhw                        , *           , HSPLIT        
;wdm\audio\backpln\adapters\msvad\ds2dhw   , makefile    , src\wdm\audio\msvad\ds2dhw                        , *           , COPY
;wdm\audio\backpln\adapters\msvad\ds2dhw   , readme.htm  , src\wdm\audio\msvad\ds2dhw                        , *           , COPY
;wdm\audio\backpln\adapters\msvad\ds2dhw   , sources     , src\wdm\audio\msvad\ds2dhw                        , *           , COPY
;wdm\audio\backpln\adapters\msvad\multstr  , *.cpp       , src\wdm\audio\msvad\multstr                       , *           , HSPLIT        
;wdm\audio\backpln\adapters\msvad\multstr  , *.h         , src\wdm\audio\msvad\multstr                       , *           , HSPLIT        
;wdm\audio\backpln\adapters\msvad\multstr  , makefile    , src\wdm\audio\msvad\multstr                       , *           , COPY
;wdm\audio\backpln\adapters\msvad\multstr  , readme.htm  , src\wdm\audio\msvad\multstr                       , *           , COPY
;wdm\audio\backpln\adapters\msvad\multstr  , sources     , src\wdm\audio\msvad\multstr                       , *           , COPY
;wdm\audio\backpln\adapters\msvad\pcmex    , *.cpp       , src\wdm\audio\msvad\pcmex                         , *           , HSPLIT        
;wdm\audio\backpln\adapters\msvad\pcmex    , *.h         , src\wdm\audio\msvad\pcmex                         , *           , HSPLIT        
;wdm\audio\backpln\adapters\msvad\pcmex    , makefile    , src\wdm\audio\msvad\pcmex                         , *           , COPY
;wdm\audio\backpln\adapters\msvad\pcmex    , readme.htm  , src\wdm\audio\msvad\pcmex                         , *           , COPY
;wdm\audio\backpln\adapters\msvad\pcmex    , sources     , src\wdm\audio\msvad\pcmex                         , *           , COPY
;wdm\audio\backpln\adapters\msvad\simple   , *.cpp       , src\wdm\audio\msvad\simple                        , *           , HSPLIT        
;wdm\audio\backpln\adapters\msvad\simple   , *.h         , src\wdm\audio\msvad\simple                        , *           , HSPLIT        
;wdm\audio\backpln\adapters\msvad\simple   , makefile    , src\wdm\audio\msvad\simple                        , *           , COPY
;wdm\audio\backpln\adapters\msvad\simple   , readme.htm  , src\wdm\audio\msvad\simple                        , *           , COPY
;wdm\audio\backpln\adapters\msvad\simple   , sources     , src\wdm\audio\msvad\simple                        , *           , COPY


;wdm\audio\backpln\adapters\sb16           , adapter.cpp , src\wdm\audio\sb16                                , *           , COPY        
;wdm\audio\backpln\adapters\sb16           , common.cpp  , src\wdm\audio\sb16                                , *           , COPY        
;wdm\audio\backpln\adapters\sb16           , common.h    , src\wdm\audio\sb16                                , *           , COPY        
;wdm\audio\backpln\adapters\sb16           , makefile    , src\wdm\audio\sb16                                , *           , COPY        
;wdm\audio\backpln\adapters\sb16           , mintopo.cpp , src\wdm\audio\sb16                                , *           , COPY        
;wdm\audio\backpln\adapters\sb16           , mintopo.h   , src\wdm\audio\sb16                                , *           , COPY        
;wdm\audio\backpln\adapters\sb16           , minwave.cpp , src\wdm\audio\sb16                                , *           , COPY        
;wdm\audio\backpln\adapters\sb16           , minwave.h   , src\wdm\audio\sb16                                , *           , COPY        
;wdm\audio\backpln\adapters\sb16           , mssb16.inf  , src\wdm\audio\sb16                                , *           , COPY        
;wdm\audio\backpln\adapters\sb16           , readme.htm  , src\wdm\audio\sb16                                , *           , COPY        
;wdm\audio\backpln\adapters\sb16           , sb16.def    , src\wdm\audio\sb16                                , *           , COPY        
;wdm\audio\backpln\adapters\sb16           , sb16.rc     , src\wdm\audio\sb16                                , *           , COPY        
;wdm\audio\backpln\adapters\sb16           , sources.ddk , src\wdm\audio\sb16                                , sources     , COPY        
;wdm\audio\backpln\adapters\sb16           , tables.h    , src\wdm\audio\sb16                                , *           , COPY        

;wdm\audio\backpln\portcls\miniport\dmusuart,dmusuart.htm, src\wdm\audio\dmusuart                            , *           , HSPLIT      
;wdm\audio\backpln\portcls\miniport\dmusuart,makefile.ddk, src\wdm\audio\dmusuart                            , makefile    , HSPLIT      
;wdm\audio\backpln\portcls\miniport\dmusuart,miniport.cpp, src\wdm\audio\dmusuart                            , *           , HSPLIT      
;wdm\audio\backpln\portcls\miniport\dmusuart,mpu.cpp     , src\wdm\audio\dmusuart                            , *           , HSPLIT      
;wdm\audio\backpln\portcls\miniport\dmusuart,private.h   , src\wdm\audio\dmusuart                            , *           , HSPLIT      
;wdm\audio\backpln\portcls\miniport\dmusuart,sources.ddk , src\wdm\audio\dmusuart                            , sources     , HSPLIT      
;wdm\audio\backpln\portcls\miniport\fmsynth, fmsynth.htm , src\wdm\audio\fmsynth                             , *           , HSPLIT      
;wdm\audio\backpln\portcls\miniport\fmsynth, makefile.ddk, src\wdm\audio\fmsynth                             , makefile    , HSPLIT      
;wdm\audio\backpln\portcls\miniport\fmsynth, miniport.cpp, src\wdm\audio\fmsynth                             , *           , HSPLIT      
;wdm\audio\backpln\portcls\miniport\fmsynth, miniport.h  , src\wdm\audio\fmsynth                             , *           , HSPLIT      
;wdm\audio\backpln\portcls\miniport\fmsynth, patch.h     , src\wdm\audio\fmsynth                             , *           , HSPLIT      
;wdm\audio\backpln\portcls\miniport\fmsynth, private.h   , src\wdm\audio\fmsynth                             , *           , HSPLIT      
;wdm\audio\backpln\portcls\miniport\fmsynth, sources.ddk , src\wdm\audio\fmsynth                             , sources     , HSPLIT      

;wdm\audio\backpln\stdunk                  , makefile    , src\wdm\audio\stdunk                              , *           , HSPLIT      
;wdm\audio\backpln\stdunk                  , sources.ddk , src\wdm\audio\stdunk                              , sources     , HSPLIT      
;wdm\audio\backpln\stdunk                  , stdunk.cpp  , src\wdm\audio\stdunk                              , *           , HSPLIT      
;wdm\audio\backpln\stdunk                  , stdunk.htm  , src\wdm\audio\stdunk                              , *           , HSPLIT      

wdm\bda\Samples\MauiTune                  , sources.wddk, src\wdm\BDA\MauiTune                              , sources     , COPY
wdm\bda\Samples\MauiTune                  , bdaTune.htm, src\wdm\BDA\MauiTune                               , *           , COPY
wdm\bda\Samples\MauiTune                  , Antenna.cpp, src\wdm\BDA\MauiTune                               , *           , COPY
wdm\bda\Samples\MauiTune                  , DevCaps.cpp, src\wdm\BDA\MauiTune                               , *           , COPY
wdm\bda\Samples\MauiTune                  , Device.cpp, src\wdm\BDA\MauiTune                                , *           , COPY
wdm\bda\Samples\MauiTune                  , FiltProp.cpp, src\wdm\BDA\MauiTune                              , *           , COPY
wdm\bda\Samples\MauiTune                  , Filter.cpp, src\wdm\BDA\MauiTune                                , *           , COPY
wdm\bda\Samples\MauiTune                  , ObjDesc.cpp, src\wdm\BDA\MauiTune                               , *           , COPY
wdm\bda\Samples\MauiTune                  , PhilTune.h, src\wdm\BDA\MauiTune                                , *           , COPY
wdm\bda\Samples\MauiTune                  , PhilTune.rc, src\wdm\BDA\MauiTune                               , *           , COPY
wdm\bda\Samples\MauiTune                  , Trnsport.cpp, src\wdm\BDA\MauiTune                              , *           , COPY
wdm\bda\Samples\MauiTune                  , ari.cpp, src\wdm\BDA\MauiTune                                   , *           , COPY
wdm\bda\Samples\MauiTune                  , bdadebug.h, src\wdm\BDA\MauiTune                                , *           , COPY
wdm\bda\Samples\MauiTune                  , bdaguid.c, src\wdm\BDA\MauiTune                                 , *           , COPY
wdm\bda\Samples\MauiTune                  , common.h, src\wdm\BDA\MauiTune                                  , *           , COPY
wdm\bda\Samples\MauiTune                  , gpio.cpp, src\wdm\BDA\MauiTune                                  , *           , COPY
wdm\bda\Samples\MauiTune                  , gpio.h, src\wdm\BDA\MauiTune                                    , *           , COPY
wdm\bda\Samples\MauiTune                  , i2script.cpp, src\wdm\BDA\MauiTune                              , *           , COPY
wdm\bda\Samples\MauiTune                  , i2script.h, src\wdm\BDA\MauiTune                                , *           , COPY
wdm\bda\Samples\MauiTune                  , ksvsb.h, src\wdm\BDA\MauiTune                                   , *           , COPY
wdm\bda\Samples\MauiTune                  , makefile, src\wdm\BDA\MauiTune                                  , *           , COPY
wdm\bda\Samples\MauiTune                  , medguid.h, src\wdm\BDA\MauiTune                                 , *           , COPY
wdm\bda\Samples\MauiTune                  , mpoc.cpp, src\wdm\BDA\MauiTune                                  , *           , COPY
wdm\bda\Samples\MauiTune                  , mpoc.h, src\wdm\BDA\MauiTune                                    , *           , COPY
wdm\bda\Samples\MauiTune                  , philtune.inf, src\wdm\BDA\MauiTune                              , *           , COPY
wdm\bda\Samples\MauiTune                  , tuneprop.cpp, src\wdm\BDA\MauiTune                              , *           , COPY
wdm\bda\Samples\MauiTune                  , tuner.cpp, src\wdm\BDA\MauiTune                                 , *           , COPY
wdm\bda\Samples\MauiTune                  , tuner.h, src\wdm\BDA\MauiTune                                   , *           , COPY
wdm\bda\Samples\MauiTune                  , tunerdef.h, src\wdm\BDA\MauiTune                                , *           , COPY
wdm\bda\Samples\MauiTune                  , util.cpp, src\wdm\BDA\MauiTune                                  , *           , COPY
wdm\bda\Samples\MauiTune                  , util.h, src\wdm\BDA\MauiTune                                    , *           , COPY
wdm\bda\Samples\MauiTune                  , vsb.h, src\wdm\BDA\MauiTune                                     , *           , COPY
wdm\bda\Samples\MauiTune                  , vsb1.cpp, src\wdm\BDA\MauiTune                                  , *           , COPY
wdm\bda\Samples\MauiTune                  , vsb1.h, src\wdm\BDA\MauiTune                                    , *           , COPY
wdm\bda\Samples\MauiTune                  , vsb2.cpp, src\wdm\BDA\MauiTune                                  , *           , COPY
wdm\bda\Samples\MauiTune                  , vsb2.h, src\wdm\BDA\MauiTune                                    , *           , COPY
wdm\bda\Samples\MauiTune                  , vsbbase.cpp, src\wdm\BDA\MauiTune                               , *           , COPY
wdm\bda\Samples\MauiTune                  , vsbbase.h, src\wdm\BDA\MauiTune                                 , *           , COPY
wdm\bda\Samples\MauiTune                  , vsbdef.h, src\wdm\BDA\MauiTune                                  , *           , COPY
wdm\bda\Samples\MauiTune                  , vsbprop.cpp, src\wdm\BDA\MauiTune                               , *           , COPY
wdm\bda\Samples\MauiTune                  , wdmcommon.h, src\wdm\BDA\MauiTune                               , *           , COPY
wdm\bda\Samples\MauiTune                  , wdmdebug.h, src\wdm\BDA\MauiTune                                , *           , COPY
wdm\bda\Samples\MauiTune                  , wdmdrv.h, src\wdm\BDA\MauiTune                                  , *           , COPY
wdm\bda\Samples\bdaTuner                  , *,        src\wdm\BDA\GenericTuner                              , *           , COPY
wdm\bda\Samples\bdaCapture                , *,        src\wdm\BDA\CaptureSample                             , *           , COPY


wdm\capture\mini\1394dcam                 , *           , src\wdm\videocap\1394dcam                         , *           , HSPLIT      
wdm\capture\mini\atiwdm                   , atiwdm.htm  , src\wdm\videocap\atiwdm                           , *           , HSPLIT
wdm\capture\mini\atiwdm\inf               , *           , src\wdm\videocap\atiwdm\inf                       , *           , HSPLIT
wdm\capture\mini\atiwdm\atishare          , *           , src\wdm\videocap\atiwdm\atishare                  , *           , HSPLIT      
wdm\capture\mini\atiwdm\bt-829            , *           , src\wdm\videocap\atiwdm\bt-829                    , *           , HSPLIT      
wdm\capture\mini\atiwdm\bt-829\atibt      , *           , src\wdm\videocap\atiwdm\bt-829\atibt              , *           , HSPLIT      
wdm\capture\mini\atiwdm\crossbar          , *           , src\wdm\videocap\atiwdm\crossbar                  , *           , HSPLIT      
wdm\capture\mini\atiwdm\crossbar\atixbar  , *           , src\wdm\videocap\atiwdm\crossbar\atixbar          , *           , HSPLIT      
wdm\capture\mini\atiwdm\tuners            , *           , src\wdm\videocap\atiwdm\tuners                    , *           , HSPLIT      
wdm\capture\mini\atiwdm\tuners\1236       , *           , src\wdm\videocap\atiwdm\tuners\1236               , *           , HSPLIT      
wdm\capture\mini\atiwdm\tvaudio           , *           , src\wdm\videocap\atiwdm\tvaudio                   , *           , HSPLIT      
wdm\capture\mini\atiwdm\tvaudio\atitvsnd  , *           , src\wdm\videocap\atiwdm\tvaudio\atitvsnd          , *           , HSPLIT      
wdm\capture\mini\testcap                  , *           , src\wdm\videocap\testcap                          , *           , HSPLIT      
; REMOVED AT REQUEST OF TKBACK
; wdm\capture\mini\usbcamd\usbcamd          , *           , src\wdm\videocap\usbcamd                          , *           , HSPLIT      
wdm\capture\mini\usbcamd\usbintel\sys     , camqi.c     , src\wdm\videocap\usbintel\sys                     , camqi.c     , HSPLIT      
wdm\capture\mini\usbcamd\usbintel\sys     , intelcam.c  , src\wdm\videocap\usbintel\sys                     , intelcam.c  , HSPLIT      
wdm\capture\mini\usbcamd\usbintel\sys     , intelcam.h  , src\wdm\videocap\usbintel\sys                     , intelcam.h  , HSPLIT      
wdm\capture\mini\usbcamd\usbintel\sys     , makefile    , src\wdm\videocap\usbintel\sys                     , makefile    , HSPLIT      
wdm\capture\mini\usbcamd\usbintel\sys     , prpftn.h    , src\wdm\videocap\usbintel\sys                     , prpftn.h    , HSPLIT      
wdm\capture\mini\usbcamd\usbintel\sys     , prpget.c    , src\wdm\videocap\usbintel\sys                     , prpget.c    , HSPLIT      
wdm\capture\mini\usbcamd\usbintel\sys     , prpmanf.c   , src\wdm\videocap\usbintel\sys                     , prpmanf.c   , HSPLIT      
wdm\capture\mini\usbcamd\usbintel\sys     , prpobj.c    , src\wdm\videocap\usbintel\sys                     , prpobj.c    , HSPLIT      
wdm\capture\mini\usbcamd\usbintel\sys     , prpobj.h    , src\wdm\videocap\usbintel\sys                     , prpobj.h    , HSPLIT      
wdm\capture\mini\usbcamd\usbintel\sys     , prpset.c    , src\wdm\videocap\usbintel\sys                     , prpset.c    , HSPLIT      
wdm\capture\mini\usbcamd\usbintel\sys     , sources     , src\wdm\videocap\usbintel\sys                     , sources     , HSPLIT      
wdm\capture\mini\usbcamd\usbintel\sys     , usbintel.htm, src\wdm\videocap\usbintel\sys                     , usbintel.htm, HSPLIT      
wdm\capture\mini\usbcamd\usbintel\sys     , usbintel.inf, src\wdm\videocap\usbintel\sys                     , usbintel.inf, HSPLIT      
wdm\capture\mini\usbcamd\usbintel\sys     , usbintel.rc , src\wdm\videocap\usbintel\sys                     , usbintel.rc , HSPLIT      
wdm\capture\mini\usbcamd\usbintel\sys     , warn.h      , src\wdm\videocap\usbintel\sys                     , warn.h      , HSPLIT      

wdm\input\client\hclient                  , *           , src\wdm\hid\hclient                               , *           , HSPLIT      
wdm\input\inc                             , *.h         , src\wdm\hid\inc                                   , *           , HSPLIT
wdm\input\legacy\gameenum\sys             , *           , src\wdm\hid\gameenum                              , *           , HSPLIT      
wdm\input\legacy\hidgame                  ,analog.h     , src\wdm\hid\hidgame                               , *           , HSPLIT
wdm\input\legacy\hidgame                  ,debug.h      , src\wdm\hid\hidgame                               , *           , HSPLIT
wdm\input\legacy\hidgame                  ,hidgame.c    , src\wdm\hid\hidgame                               , *           , HSPLIT
wdm\input\legacy\hidgame                  ,hidgame.h    , src\wdm\hid\hidgame                               , *           , HSPLIT
wdm\input\legacy\hidgame                  ,hidgame.htm  , src\wdm\hid\hidgame                               , *           , HSPLIT
wdm\input\legacy\hidgame                  ,hidgame.rc   , src\wdm\hid\hidgame                               , *           , HSPLIT
wdm\input\legacy\hidgame                  ,hidjoy.c     , src\wdm\hid\hidgame                               , *           , HSPLIT
wdm\input\legacy\hidgame                  ,ioctl.c      , src\wdm\hid\hidgame                               , *           , HSPLIT
wdm\input\legacy\hidgame                  ,makefile     , src\wdm\hid\hidgame                               , *           , HSPLIT
wdm\input\legacy\hidgame                  ,oemsetup.inf , src\wdm\hid\hidgame                               , *           , HSPLIT
wdm\input\legacy\hidgame                  ,pnp.c        , src\wdm\hid\hidgame                               , *           , HSPLIT
wdm\input\legacy\hidgame                  ,poll.c       , src\wdm\hid\hidgame                               , *           , HSPLIT
wdm\input\legacy\hidgame                  ,sources      , src\wdm\hid\hidgame                               , *           , HSPLIT
wdm\input\legacy\hidgame\i386             , *           , src\wdm\hid\hidgame\i386                          , *           , HSPLIT
wdm\input\samples\monitor                 , *           , src\wdm\hid\monitor                               , *           , HSPLIT

tabletpc\system\drivers                   ,readme.htm   , src\wdm\hid\tablet                                , *           , COPY
tabletpc\system\drivers\inf               ,hiddigi.inf  , src\wdm\hid\tablet\inf                            , *           , COPY
tabletpc\system\drivers\inf               ,hidbtn.inf   , src\wdm\hid\tablet\inf                            , *           , COPY
tabletpc\system\drivers\hidbtn            , *           , src\wdm\hid\tablet\hidbtn                         , *           , COPY
tabletpc\system\drivers\hbtnkey           , *           , src\wdm\hid\tablet\hbtnkey                        , *           , COPY
tabletpc\system\drivers\mstabbtn          , *           , src\wdm\hid\tablet\mstabbtn                       , *           , COPY
tabletpc\system\drivers\hidpen            , *           , src\wdm\hid\tablet\hidpen                         , *           , COPY
tabletpc\system\drivers\mutohpen          , *           , src\wdm\hid\tablet\mutohpen                       , *           , COPY
tabletpc\system\drivers\wacompen          , *           , src\wdm\hid\tablet\wacompen                       , *           , COPY
tabletpc\system\drivers\util              , *           , src\wdm\hid\tablet\util                           , *           , COPY

wdm\usb\driver\bulkusb                    , *           , src\wdm\usb\bulkusb                               , *           , HSPLIT
wdm\usb\driver\bulkusb\exe                , *           , src\wdm\usb\bulkusb\exe                           , *           , HSPLIT
wdm\usb\driver\bulkusb\sys                , *           , src\wdm\usb\bulkusb\sys                           , *           , HSPLIT
wdm\usb\driver\selsusp                    , *           , src\wdm\usb\selsusp                               , *           , HSPLIT
wdm\usb\driver\selsusp\sys                , *           , src\wdm\usb\selsusp\sys                           , *           , HSPLIT
wdm\usb\driver\filter                     , *           , src\wdm\usb\filter                                , *           , HSPLIT
wdm\usb\driver\isousb                     , *           , src\wdm\usb\isousb                                , *           , HSPLIT
wdm\usb\driver\isousb\exe                 , *           , src\wdm\usb\isousb\exe                            , *           , HSPLIT
wdm\usb\driver\isousb\sys                 , *           , src\wdm\usb\isousb\sys                            , *           , HSPLIT
wdm\usb\tools\usbview                     , *           , src\wdm\usb\usbview                               , *           , HSPLIT

ksfilter\tests\avstest                    , *           , src\wdm\AVStream\avssamp                          , *           , HSPLIT
ksfilter\tests\avshws                     , *           , src\wdm\AVStream\avshws                           , *           , HSPLIT
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\drivers\ddk\ddk_drivers.ini ===
; FORMAT : SourceDir, SourceFile, DestDir, DestFile, OPERATION
; All fields are required
; [subname]* is allowed for source, in which case * required for destination

%_NTDRIVE%%_NTROOT%\drivers\input\inc                                 , *           , src\input\inc                                     , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\input\kbdclass                            , kbdclass.*  , src\input\kbdclass                                , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\input\kbdclass                            , kbdlog.mc   , src\input\kbdclass                                , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\input\kbdclass                            , makefile    , src\input\kbdclass                                , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\input\kbdclass                            , sources     , src\input\kbdclass                                , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\input\kbfiltr                             , *           , src\input\kbfiltr                                 , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\input\mouclass                            , makefile    , src\input\mouclass                                , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\input\mouclass                            , mouclass.*  , src\input\mouclass                                , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\input\mouclass                            , moulog.mc   , src\input\mouclass                                , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\input\mouclass                            , sources     , src\input\mouclass                                , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\input\moufiltr                            , *           , src\input\moufiltr                                , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\input\mouser                              , *           , src\input\mouser                                  , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\input\pnpi8042                            , *           , src\input\pnpi8042                                , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\input\pnpi8042\daytona                    , *           , src\input\pnpi8042\daytona                        , *           , HSPLIT      

%_NTDRIVE%%_NTROOT%\drivers\net\ms\ne2000                             , *           , src\network\ndis\ne2000                           , *           , HSPLIT      

%_NTDRIVE%%_NTROOT%\drivers\net\ms\e100bex                            , *           , src\network\ndis\e100bex                          , *           , COPY      
%_NTDRIVE%%_NTROOT%\drivers\net\ms\e100bex\50                         , *           , src\network\ndis\e100bex\50                       , *           , COPY      
%_NTDRIVE%%_NTROOT%\drivers\net\ms\e100bex\51                         , *           , src\network\ndis\e100bex\51                       , *           , COPY      
%_NTDRIVE%%_NTROOT%\drivers\net\ms\e100bex\kd                         , *           , src\network\ndis\e100bex\kd                       , *           , COPY      
%_NTDRIVE%%_NTROOT%\drivers\net\ms\e100bex\testwmi                    , *           , src\network\ndis\e100bex\testwmi                  , *           , COPY      

%_NTDRIVE%%_NTROOT%\drivers\net\netcard\toshiba\tbatm155\sys                           , *           , src\network\ndis\tbatm155                         , *           , COPY      

%_NTDRIVE%%_NTROOT%\drivers\parallel\parport2                         , *           , src\kernel\parport                                , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\serial\serenum                            , *           , src\kernel\serenum                                , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\serial\serial                             , *           , src\kernel\serial                                 , *           , HSPLIT      

%_NTDRIVE%%_NTROOT%\drivers\smartcrd\bulltlp3                         , *           , src\smartcrd\bulltlp3                             , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\smartcrd\inc                              , *           , src\smartcrd\inc                                  , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\smartcrd\pscr                             , *           , src\smartcrd\pscr                                 , *           , HSPLIT      

%_NTDRIVE%%_NTROOT%\drivers\storage\addfilter                         , *           , src\storage\filters\addfilter                     , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\cdaudio                           , *           , src\storage\filters\cdaudio                       , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\cdrom                             , *           , src\storage\class\cdrom                           , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\classpnp                          , *           , src\storage\class\classpnp                        , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\disk                              , *           , src\storage\class\disk                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\diskperf                          , *           , src\storage\filters\diskperf                      , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\fdc\fdc                           , *           , src\storage\fdc\fdc                               , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\fdc\flpydisk                      , *           , src\storage\fdc\flpydisk                          , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\fdc\inc                           , *           , src\storage\fdc\inc                               , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\fdc\mode3fdc\desk2fdc             , *           , src\storage\fdc\3mode\fdc.2                       , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\fdc\mode3fdc\deskfdc              , *           , src\storage\fdc\3mode\fdc                         , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\fdc\mode3fdc\flpydisk             , *           , src\storage\fdc\3mode\flpydisk                    , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\fpfilter                          , *           , src\storage\filters\fpfilter                      , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\ide\inc                           , ide.h       , src\storage\inc                                   , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\ide\inc                           , ideuser.h   , src\storage\inc                                   , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\ide\inc                           , msg.mc      , src\storage\miniide\pciide                        , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\ide\miniport\pciide               , *           , src\storage\miniide\pciide                        , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\inc                               , *           , src\storage\inc                                   , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\mcd\class                         , *           , src\storage\changers\class                        , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\mcd\drivers\adicsc                , *           , src\storage\changers\drivers\adicsc               , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\mcd\drivers\ddsmc                 , *           , src\storage\changers\drivers\ddsmc                , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\mcd\drivers\elmsmc                , *           , src\storage\changers\drivers\elmsmc               , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\mcd\drivers\exabyte               , *           , src\storage\changers\drivers\exabyte              , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\mcd\drivers\hpmc                  , *           , src\storage\changers\drivers\hpmc                 , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\mcd\drivers\nsmmc                 , *           , src\storage\changers\drivers\nsmmc                , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\mcd\drivers\sonymc                , *           , src\storage\changers\drivers\sonymc               , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\mcd\inc                           , *           , src\storage\changers\inc                          , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\port\scsi\miniport\aha154x        , *           , src\storage\miniport\aha154x                      , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\port\scsi\miniport\initio         , *           , src\storage\miniport\initio                       , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\tape\class                        , *           , src\storage\class\tape                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\tape\drivers\4mmdat               , *           , src\storage\tape\4mmdat                           , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\tape\drivers\dlttape              , *           , src\storage\tape\dlttape                          , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\tape\drivers\exabyte1             , *           , src\storage\tape\exabyte1                         , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\tape\drivers\exabyte2             , *           , src\storage\tape\exabyte2                         , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\tape\drivers\miniqic              , *           , src\storage\tape\miniqic                          , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\tape\drivers\qic157               , *           , src\storage\tape\qic157                           , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\storage\tape\inc                          , physlogi.h  , src\storage\inc                                   , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\video\ms\3dlabs\perm2\disp                , *           , src\video\displays\3dlabs\perm2\disp              , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\video\ms\3dlabs\perm2\mini                , *           , src\video\displays\3dlabs\perm2\mini              , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\video\ms\3dlabs\perm3\disp                , *           , src\video\displays\3dlabs\perm3\disp              , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\video\ms\3dlabs\perm3\disp\dx             , *           , src\video\displays\3dlabs\perm3\disp\dx           , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\video\ms\3dlabs\perm3\disp\gdi            , *           , src\video\displays\3dlabs\perm3\disp\gdi          , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\video\ms\3dlabs\perm3\disp\inc            , *           , src\video\displays\3dlabs\perm3\disp\inc          , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\video\ms\3dlabs\perm3\mini                , *           , src\video\displays\3dlabs\perm3\mini              , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\video\monitors\samplinf                   , monsamp.inf , src\video\monitors\inf                            , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\video\ms\framebuf\disp                    , *           , src\video\displays\framebuf\disp                  , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\video\ms\mirror\disp                      , *           , src\video\displays\mirror\disp                    , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\video\ms\mirror\mini                      , *           , src\video\displays\mirror\mini                    , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\video\ms\mirror\app                       , *           , src\video\displays\mirror\app                     , *           , HSPLIT

%_NTDRIVE%%_NTROOT%\drivers\wdm\1394\tools\test\driver\1394diag       , *           , src\wdm\1394\driver\1394diag                      , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\1394\tools\test\driver\common         , *           , src\wdm\1394\driver\common                        , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\1394\tools\test\driver\1394vdev       , *           , src\wdm\1394\driver\1394vdev                      , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\1394\tools\test\inc                   , *           , src\wdm\1394\inc                                  , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\1394\tools\test\dll\1394api           , *           , src\wdm\1394\dll\1394api                          , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\1394\tools\test\dll\1394api           , 1394.htm    , src\wdm\1394                                      , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\1394\tools\test\ui\win1394            , *           , src\wdm\1394\ui\win1394                           , *           , HSPLIT      

%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , adapter.cpp , src\wdm\audio\ddksynth                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , clist.cpp   , src\wdm\audio\ddksynth                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , clist.h     , src\wdm\audio\ddksynth                            , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , common.h    , src\wdm\audio\ddksynth                            , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , control.cpp , src\wdm\audio\ddksynth                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , csynth.cpp  , src\wdm\audio\ddksynth                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , csynth.h    , src\wdm\audio\ddksynth                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , ddksynth.htm, src\wdm\audio\ddksynth                            , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , ddksynth.inf, src\wdm\audio\ddksynth                            , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , dmusic.rc   , src\wdm\audio\ddksynth                            , ddksynth.rc , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , instr.cpp   , src\wdm\audio\ddksynth                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , kernhelp.cpp, src\wdm\audio\ddksynth                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , kernhelp.h  , src\wdm\audio\ddksynth                            , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , makefile.ddk, src\wdm\audio\ddksynth                            , makefile    , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , midi.cpp    , src\wdm\audio\ddksynth                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , miniport.cpp, src\wdm\audio\ddksynth                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , mix.cpp     , src\wdm\audio\ddksynth                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , mmx.cpp     , src\wdm\audio\ddksynth                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , muldiv32.h  , src\wdm\audio\ddksynth                            , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , plclock.cpp , src\wdm\audio\ddksynth                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , plclock.h   , src\wdm\audio\ddksynth                            , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , private.h   , src\wdm\audio\ddksynth                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , sources.ddk , src\wdm\audio\ddksynth                            , sources     , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , synth.h     , src\wdm\audio\ddksynth                            , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , syslink.cpp , src\wdm\audio\ddksynth                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\dmusic         , voice.cpp   , src\wdm\audio\ddksynth                            , *           , HSPLIT      

%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\intel\ichaud   , *.h         , src\wdm\audio\ac97\driver                         , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\intel\ichaud   , ac97smpl.inf, src\wdm\audio\ac97\driver                         , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\intel\ichaud   , ac97smpl.rc , src\wdm\audio\ac97\driver                         , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\intel\ichaud   , *.cpp       , src\wdm\audio\ac97\driver                         , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\intel\ichaud   , makefile    , src\wdm\audio\ac97\driver                         , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\intel\ichaud   , readme.htm  , src\wdm\audio\ac97\driver                         , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\intel\ichaud   , sources.ddk , src\wdm\audio\ac97\driver                         , sources     , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\intel          , prvprop.h   , src\wdm\audio\ac97                                , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\intel\proppage , *           , src\wdm\audio\ac97\proppage                       , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\intel\cpl      , *           , src\wdm\audio\ac97\cpl                            , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\intel\INFViewer, *           , src\wdm\audio\ac97\INFViewer                      , *           , HSPLIT
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\intel\INFViewer\HTML, *      , src\wdm\audio\ac97\INFViewer\HTML                 , *           , HSPLIT

%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\mpu401         , adapter.cpp , src\wdm\audio\mpu401                              , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\mpu401         , makefile    , src\wdm\audio\mpu401                              , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\mpu401         , mpu401.def  , src\wdm\audio\mpu401                              , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\mpu401         , mpu401.htm  , src\wdm\audio\mpu401                              , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\mpu401         , mpu401.rc   , src\wdm\audio\mpu401                              , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\mpu401         , sources.ddk , src\wdm\audio\mpu401                              , sources     , COPY        

%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad          , *.h         , src\wdm\audio\msvad                               , *           , HSPLIT        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad          , *.cpp       , src\wdm\audio\msvad                               , *           , HSPLIT        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad          , *.rc        , src\wdm\audio\msvad                               , *           , HSPLIT        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad          , *.inf       , src\wdm\audio\msvad                               , *           , HSPLIT        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad          , readme.htm  , src\wdm\audio\msvad                               , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad          , sources.inc.ddk , src\wdm\audio\msvad                           , sources.inc , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\ac3      , *.cpp       , src\wdm\audio\msvad\ac3                           , *           , HSPLIT        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\ac3      , *.h         , src\wdm\audio\msvad\ac3                           , *           , HSPLIT        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\ac3      , makefile    , src\wdm\audio\msvad\ac3                           , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\ac3      , readme.htm  , src\wdm\audio\msvad\ac3                           , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\ac3      , sources     , src\wdm\audio\msvad\ac3                           , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\drmmult  , *.cpp       , src\wdm\audio\msvad\drmmult                       , *           , HSPLIT        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\drmmult  , *.h         , src\wdm\audio\msvad\drmmult                       , *           , HSPLIT        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\drmmult  , makefile    , src\wdm\audio\msvad\drmmult                       , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\drmmult  , readme.htm  , src\wdm\audio\msvad\drmmult                       , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\drmmult  , sources     , src\wdm\audio\msvad\drmmult                       , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\drmsimp  , *.cpp       , src\wdm\audio\msvad\drmsimp                       , *           , HSPLIT        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\drmsimp  , *.h         , src\wdm\audio\msvad\drmsimp                       , *           , HSPLIT        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\drmsimp  , makefile    , src\wdm\audio\msvad\drmsimp                       , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\drmsimp  , readme.htm  , src\wdm\audio\msvad\drmsimp                       , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\drmsimp  , sources     , src\wdm\audio\msvad\drmsimp                       , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\ds2dhw   , *.cpp       , src\wdm\audio\msvad\ds2dhw                        , *           , HSPLIT        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\ds2dhw   , *.h         , src\wdm\audio\msvad\ds2dhw                        , *           , HSPLIT        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\ds2dhw   , makefile    , src\wdm\audio\msvad\ds2dhw                        , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\ds2dhw   , readme.htm  , src\wdm\audio\msvad\ds2dhw                        , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\ds2dhw   , sources     , src\wdm\audio\msvad\ds2dhw                        , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\multstr  , *.cpp       , src\wdm\audio\msvad\multstr                       , *           , HSPLIT        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\multstr  , *.h         , src\wdm\audio\msvad\multstr                       , *           , HSPLIT        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\multstr  , makefile    , src\wdm\audio\msvad\multstr                       , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\multstr  , readme.htm  , src\wdm\audio\msvad\multstr                       , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\multstr  , sources     , src\wdm\audio\msvad\multstr                       , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\pcmex    , *.cpp       , src\wdm\audio\msvad\pcmex                         , *           , HSPLIT        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\pcmex    , *.h         , src\wdm\audio\msvad\pcmex                         , *           , HSPLIT        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\pcmex    , makefile    , src\wdm\audio\msvad\pcmex                         , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\pcmex    , readme.htm  , src\wdm\audio\msvad\pcmex                         , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\pcmex    , sources     , src\wdm\audio\msvad\pcmex                         , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\simple   , *.cpp       , src\wdm\audio\msvad\simple                        , *           , HSPLIT        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\simple   , *.h         , src\wdm\audio\msvad\simple                        , *           , HSPLIT        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\simple   , makefile    , src\wdm\audio\msvad\simple                        , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\simple   , readme.htm  , src\wdm\audio\msvad\simple                        , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\msvad\simple   , sources     , src\wdm\audio\msvad\simple                        , *           , COPY


%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\sb16           , adapter.cpp , src\wdm\audio\sb16                                , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\sb16           , common.cpp  , src\wdm\audio\sb16                                , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\sb16           , common.h    , src\wdm\audio\sb16                                , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\sb16           , makefile    , src\wdm\audio\sb16                                , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\sb16           , mintopo.cpp , src\wdm\audio\sb16                                , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\sb16           , mintopo.h   , src\wdm\audio\sb16                                , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\sb16           , minwave.cpp , src\wdm\audio\sb16                                , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\sb16           , minwave.h   , src\wdm\audio\sb16                                , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\sb16           , mssb16.inf  , src\wdm\audio\sb16                                , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\sb16           , readme.htm  , src\wdm\audio\sb16                                , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\sb16           , sb16.def    , src\wdm\audio\sb16                                , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\sb16           , sb16.rc     , src\wdm\audio\sb16                                , *           , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\sb16           , sources.ddk , src\wdm\audio\sb16                                , sources     , COPY        
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\adapters\sb16           , tables.h    , src\wdm\audio\sb16                                , *           , COPY        

%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\portcls\miniport\dmusuart,dmusuart.htm, src\wdm\audio\dmusuart                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\portcls\miniport\dmusuart,makefile.ddk, src\wdm\audio\dmusuart                            , makefile    , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\portcls\miniport\dmusuart,miniport.cpp, src\wdm\audio\dmusuart                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\portcls\miniport\dmusuart,mpu.cpp     , src\wdm\audio\dmusuart                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\portcls\miniport\dmusuart,private.h   , src\wdm\audio\dmusuart                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\portcls\miniport\dmusuart,sources.ddk , src\wdm\audio\dmusuart                            , sources     , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\portcls\miniport\fmsynth, fmsynth.htm , src\wdm\audio\fmsynth                             , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\portcls\miniport\fmsynth, makefile.ddk, src\wdm\audio\fmsynth                             , makefile    , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\portcls\miniport\fmsynth, miniport.cpp, src\wdm\audio\fmsynth                             , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\portcls\miniport\fmsynth, miniport.h  , src\wdm\audio\fmsynth                             , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\portcls\miniport\fmsynth, patch.h     , src\wdm\audio\fmsynth                             , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\portcls\miniport\fmsynth, private.h   , src\wdm\audio\fmsynth                             , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\portcls\miniport\fmsynth, sources.ddk , src\wdm\audio\fmsynth                             , sources     , HSPLIT      

%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\stdunk                  , makefile    , src\wdm\audio\stdunk                              , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\stdunk                  , sources.ddk , src\wdm\audio\stdunk                              , sources     , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\stdunk                  , stdunk.cpp  , src\wdm\audio\stdunk                              , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\audio\backpln\stdunk                  , stdunk.htm  , src\wdm\audio\stdunk                              , *           , HSPLIT      

%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , sources.wddk, src\wdm\BDA\MauiTune                              , sources     , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , bdaTune.htm, src\wdm\BDA\MauiTune                               , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , Antenna.cpp, src\wdm\BDA\MauiTune                               , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , DevCaps.cpp, src\wdm\BDA\MauiTune                               , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , Device.cpp, src\wdm\BDA\MauiTune                                , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , FiltProp.cpp, src\wdm\BDA\MauiTune                              , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , Filter.cpp, src\wdm\BDA\MauiTune                                , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , ObjDesc.cpp, src\wdm\BDA\MauiTune                               , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , PhilTune.h, src\wdm\BDA\MauiTune                                , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , PhilTune.rc, src\wdm\BDA\MauiTune                               , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , Trnsport.cpp, src\wdm\BDA\MauiTune                              , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , ari.cpp, src\wdm\BDA\MauiTune                                   , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , bdadebug.h, src\wdm\BDA\MauiTune                                , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , bdaguid.c, src\wdm\BDA\MauiTune                                 , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , common.h, src\wdm\BDA\MauiTune                                  , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , gpio.cpp, src\wdm\BDA\MauiTune                                  , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , gpio.h, src\wdm\BDA\MauiTune                                    , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , i2script.cpp, src\wdm\BDA\MauiTune                              , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , i2script.h, src\wdm\BDA\MauiTune                                , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , ksvsb.h, src\wdm\BDA\MauiTune                                   , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , makefile, src\wdm\BDA\MauiTune                                  , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , medguid.h, src\wdm\BDA\MauiTune                                 , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , mpoc.cpp, src\wdm\BDA\MauiTune                                  , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , mpoc.h, src\wdm\BDA\MauiTune                                    , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , philtune.inf, src\wdm\BDA\MauiTune                              , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , tuneprop.cpp, src\wdm\BDA\MauiTune                              , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , tuner.cpp, src\wdm\BDA\MauiTune                                 , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , tuner.h, src\wdm\BDA\MauiTune                                   , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , tunerdef.h, src\wdm\BDA\MauiTune                                , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , util.cpp, src\wdm\BDA\MauiTune                                  , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , util.h, src\wdm\BDA\MauiTune                                    , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , vsb.h, src\wdm\BDA\MauiTune                                     , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , vsb1.cpp, src\wdm\BDA\MauiTune                                  , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , vsb1.h, src\wdm\BDA\MauiTune                                    , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , vsb2.cpp, src\wdm\BDA\MauiTune                                  , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , vsb2.h, src\wdm\BDA\MauiTune                                    , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , vsbbase.cpp, src\wdm\BDA\MauiTune                               , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , vsbbase.h, src\wdm\BDA\MauiTune                                 , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , vsbdef.h, src\wdm\BDA\MauiTune                                  , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , vsbprop.cpp, src\wdm\BDA\MauiTune                               , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , wdmcommon.h, src\wdm\BDA\MauiTune                               , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , wdmdebug.h, src\wdm\BDA\MauiTune                                , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\MauiTune                  , wdmdrv.h, src\wdm\BDA\MauiTune                                  , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\bdaTuner                  , *,        src\wdm\BDA\GenericTuner                              , *           , COPY
%_NTDRIVE%%_NTROOT%\drivers\wdm\bda\Samples\bdaCapture                , *,        src\wdm\BDA\CaptureSample                             , *           , COPY


%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\1394dcam                 , *           , src\wdm\videocap\1394dcam                         , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\atiwdm\atishare          , *           , src\wdm\videocap\atiwdm\atishare                  , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\atiwdm\bt-829            , *           , src\wdm\videocap\atiwdm\bt-829                    , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\atiwdm\bt-829\atibt      , *           , src\wdm\videocap\atiwdm\bt-829\atibt              , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\atiwdm\crossbar          , *           , src\wdm\videocap\atiwdm\crossbar                  , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\atiwdm\crossbar\atixbar  , *           , src\wdm\videocap\atiwdm\crossbar\atixbar          , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\atiwdm\tuners            , *           , src\wdm\videocap\atiwdm\tuners                    , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\atiwdm\tuners\1236       , *           , src\wdm\videocap\atiwdm\tuners\1236               , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\atiwdm\tvaudio           , *           , src\wdm\videocap\atiwdm\tvaudio                   , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\atiwdm\tvaudio\atitvsnd  , *           , src\wdm\videocap\atiwdm\tvaudio\atitvsnd          , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\testcap                  , *           , src\wdm\videocap\testcap                          , *           , HSPLIT      
; REMOVED AT REQUEST OF TKBACK
; %_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\usbcamd\usbcamd          , *           , src\wdm\videocap\usbcamd                          , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\usbcamd\usbintel\sys     , camqi.c     , src\wdm\videocap\usbintel\sys                     , camqi.c     , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\usbcamd\usbintel\sys     , intelcam.c  , src\wdm\videocap\usbintel\sys                     , intelcam.c  , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\usbcamd\usbintel\sys     , intelcam.h  , src\wdm\videocap\usbintel\sys                     , intelcam.h  , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\usbcamd\usbintel\sys     , makefile    , src\wdm\videocap\usbintel\sys                     , makefile    , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\usbcamd\usbintel\sys     , prpftn.h    , src\wdm\videocap\usbintel\sys                     , prpftn.h    , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\usbcamd\usbintel\sys     , prpget.c    , src\wdm\videocap\usbintel\sys                     , prpget.c    , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\usbcamd\usbintel\sys     , prpmanf.c   , src\wdm\videocap\usbintel\sys                     , prpmanf.c   , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\usbcamd\usbintel\sys     , prpobj.c    , src\wdm\videocap\usbintel\sys                     , prpobj.c    , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\usbcamd\usbintel\sys     , prpobj.h    , src\wdm\videocap\usbintel\sys                     , prpobj.h    , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\usbcamd\usbintel\sys     , prpset.c    , src\wdm\videocap\usbintel\sys                     , prpset.c    , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\usbcamd\usbintel\sys     , readme.txt  , src\wdm\videocap\usbintel\sys                     , readme.txt  , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\usbcamd\usbintel\sys     , sources     , src\wdm\videocap\usbintel\sys                     , sources     , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\usbcamd\usbintel\sys     , usbintel.htm, src\wdm\videocap\usbintel\sys                     , usbintel.htm, HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\usbcamd\usbintel\sys     , usbintel.inf, src\wdm\videocap\usbintel\sys                     , usbintel.inf, HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\usbcamd\usbintel\sys     , usbintel.rc , src\wdm\videocap\usbintel\sys                     , usbintel.rc , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\capture\mini\usbcamd\usbintel\sys     , warn.h      , src\wdm\videocap\usbintel\sys                     , warn.h      , HSPLIT      

%_NTDRIVE%%_NTROOT%\drivers\wdm\input\client\hclient                  , *           , src\wdm\hid\hclient                               , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\input\inc                             , *           , src\wdm\hid\inc                                   , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\input\legacy\gameenum                 , *           , src\wdm\hid\gameenum                              , *           , HSPLIT      
; RAID #36923 - SELECT.C should not be copied
%_NTDRIVE%%_NTROOT%\drivers\wdm\input\legacy\gameenum\exe             ,game.h       , src\wdm\hid\gameenum\exe                          , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\input\legacy\gameenum\exe             ,gameenum.rc  , src\wdm\hid\gameenum\exe                          , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\input\legacy\gameenum\exe             ,gameexe.htm  , src\wdm\hid\gameenum\exe                          , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\input\legacy\gameenum\exe             ,locate.c     , src\wdm\hid\gameenum\exe                          , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\input\legacy\gameenum\exe             ,makefile     , src\wdm\hid\gameenum\exe                          , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\input\legacy\gameenum\exe             ,sources      , src\wdm\hid\gameenum\exe                          , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\input\legacy\gameenum\sys             , *           , src\wdm\hid\gameenum\sys                          , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\input\legacy\hidgame                  , *           , src\wdm\hid\hidgame                               , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\input\legacy\hidgame\i386             , *           , src\wdm\hid\hidgame\i386                          , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\input\samples\monitor                 , *           , src\wdm\hid\monitor                               , *           , HSPLIT      

%_NTDRIVE%%_NTROOT%\drivers\wdm\usb\driver\bulkusb                    , *           , src\wdm\usb\bulkusb                               , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\usb\driver\bulkusb\exe                , *           , src\wdm\usb\bulkusb\exe                           , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\usb\driver\bulkusb\sys                , *           , src\wdm\usb\bulkusb\sys                           , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\usb\driver\filter                     , *           , src\wdm\usb\filter                                , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\usb\driver\isousb                     , *           , src\wdm\usb\isousb                                , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\usb\driver\isousb\exe                 , *           , src\wdm\usb\isousb\exe                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\usb\driver\isousb\sys                 , *           , src\wdm\usb\isousb\sys                            , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\usb\tools\usbview                     , *           , src\wdm\usb\usbview                               , *           , HSPLIT      
%_NTDRIVE%%_NTROOT%\drivers\wdm\usb\driver\selsusp                    , *           , src\wdm\usb\selsusp                               , *           , HSPLIT
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\filters\sgdma\readme.txt ===
This driver will only load on Monet/XP1000 when the
"special" monet_cid.rom AlphaBIOS firmware is installed.

This ACPI firmware uses a _CID (compatible ID) for the root
PCI busses, which allows the SGDMA filter driver to load.

To install this firmware, copy it to a floppy and rename
it monet.rom, then select Upgrade AlphaBIOS in Advanced
CMOS Setup.

By default, although Monet has S/G DMA HW, direct-mapped
DMA is used instead.  In this case there exists a Legacy
DMA window for ISA devices from 0 to 16MB logical/bus-relative,
(buffer copies are used to access physical memory > 16MB), and
there also exists a 2GB DMA window at 2GB logical for
PCI devices.

When the SGDMA filter driver loads, it allocates map registers,
initializes the S/G dma HW, and creates a 1GB DMA window at
2GB logical, and filters requests via IoGetDmaAdapter for
DMA resources.  SGDMA then gives out its interfaces to
PCI devices, and gives legacy devices the HAL interfaces
which control/manipulate the legacy DMA HW.

Enjoy!
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\input\busmouse\history.log ===
time			 user        op      path					fv	diff    comment

Log for ntos\dd\busmouse:

01-26-93@17:07:01 (Tue)  bobri1      addfile \\C:BOBRI4\NT\PRIVATE\NTOS\DD\busmouse     0               Bus mouse driver (from Logitech)    
01-26-93@17:07:12 (Tue)  bobri1      addfile \\C:BOBRI4\NT\PRIVATE\NTOS\DD\busmouse\busmlog.mc 1       I1      Bus mouse driver (from Logitech)    
01-26-93@17:07:14 (Tue)  bobri1      addfile \\C:BOBRI4\NT\PRIVATE\NTOS\DD\busmouse\busmouse.rc 1       I1      Bus mouse driver (from Logitech)    
01-26-93@17:07:16 (Tue)  bobri1      addfile \\C:BOBRI4\NT\PRIVATE\NTOS\DD\busmouse\i386 1               Bus mouse driver (from Logitech)    
01-26-93@17:07:17 (Tue)  bobri1      addfile \\C:BOBRI4\NT\PRIVATE\NTOS\DD\busmouse\makefile 1       I1      Bus mouse driver (from Logitech)    
01-26-93@17:07:29 (Tue)  bobri1      addfile \\C:BOBRI4\NT\PRIVATE\NTOS\DD\busmouse\sources 1       I1      Bus mouse driver (from Logitech)    
01-26-93@17:07:33 (Tue)  bobri1      addfile \\C:BOBRI4\NT\PRIVATE\NTOS\DD\busmouse\$window3.slk 1       I1      Bus mouse driver (from Logitech)    
01-26-93@17:08:55 (Tue)  bobri1      delfile \\C:BOBRI4\NT\PRIVATE\NTOS\DD\BUSMOUSE\$window3.slk 2       I2      Bob's bogus junk.    
04-30-93@12:20:16 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\busmlog.mc 2       I2      Log overflow less often    
04-30-93@12:20:23 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\sources 2       I2      Log overflow less often    
05-20-93@18:10:02 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\dd\busmouse\busmouse.rc 2       I2      Bug #322    
01-30-94@11:33:33 (Sun)  DAVEC3      in      \\F:hwlab_f\NT\PRIVATE\NTOS\DD\BUSMOUSE\sources 3       I3      make platform independent    
06-19-96@18:59:34 (Wed)  PETERWIE.R98addfile \\F:peterwie_r98\NT\PRIVATE\NTOS\DD\BUSMOUSE\devdesc.c 1       I1      pnp kludge 
06-19-96@18:59:37 (Wed)  PETERWIE.R98addfile \\F:peterwie_r98\NT\PRIVATE\NTOS\DD\BUSMOUSE\devdesc.h 1       I1      pnp kludge 
06-19-96@18:59:51 (Wed)  PETERWIE.R98in      \\F:peterwie_r98\NT\PRIVATE\NTOS\DD\BUSMOUSE\sources 4       I4      pnp identify
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\input\busmouse\i386\history.log ===
time			 user        op      path					fv	diff    comment

Log for ntos\dd\busmouse\i386:

01-26-93@17:07:16 (Tue)  bobri1      addfile \\C:BOBRI4\NT\PRIVATE\NTOS\DD\busmouse\i386 0               Bus mouse driver (from Logitech)    
01-26-93@17:07:46 (Tue)  bobri1      addfile \\C:BOBRI4\NT\PRIVATE\NTOS\DD\busmouse\i386\buscfg.h 1       I1      Bus mouse driver (from Logitech)    
01-26-93@17:07:51 (Tue)  bobri1      addfile \\C:BOBRI4\NT\PRIVATE\NTOS\DD\busmouse\i386\busmcmn.c 1       I1      Bus mouse driver (from Logitech)    
01-26-93@17:07:59 (Tue)  bobri1      addfile \\C:BOBRI4\NT\PRIVATE\NTOS\DD\busmouse\i386\busmdep.c 1       I1      Bus mouse driver (from Logitech)    
01-26-93@17:08:01 (Tue)  bobri1      addfile \\C:BOBRI4\NT\PRIVATE\NTOS\DD\busmouse\i386\busmouse.h 1       I1      Bus mouse driver (from Logitech)    
02-11-93@12:25:30 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\I386\busmcmn.c 2       I2      Fixes bug #10693    
02-11-93@12:25:38 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\I386\busmdep.c 2       I2      Fixes bug #10693    
02-11-93@12:25:43 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\I386\busmouse.h 2       I2      Fixes bug #10693    
02-15-93@16:14:36 (Mon)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\I386\busmdep.c 3       I3      Fix bug #11391    
04-01-93@12:44:10 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\I386\busmcmn.c 3       I3      ISR DPC queueing (be smarter -- performance!)    
04-01-93@12:44:15 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\I386\busmdep.c 4       I4      ISR DPC queueing (be smarter -- performance!)    
04-01-93@12:44:20 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\I386\busmouse.h 3       I3      ISR DPC queueing (be smarter -- performance!)    
04-30-93@12:21:05 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\i386\buscfg.h 2       I2      Log overflow less often    
04-30-93@12:21:23 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\i386\busmcmn.c 4       I4      Log overflow less often    
04-30-93@12:21:36 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\i386\busmdep.c 5       I5      Log overflow less often    
04-30-93@12:21:42 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\i386\busmouse.h 4       I4      Log overflow less often    
05-10-93@11:12:03 (Mon)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\I386\busmcmn.c 5       I5      Fixed accidental comma in ISR DPC    
05-26-93@16:20:06 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\i386\busmdep.c 6       I6      Bug #5512 - Check DataLength before using DataOffset    
06-17-93@11:04:28 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\i386\busmcmn.c 6       I6      Use one KDPC per IsrDpc queue site    
06-17-93@11:04:33 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\i386\busmdep.c 7       I7      Use one KDPC per IsrDpc queue site    
06-17-93@11:04:37 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\i386\busmouse.h 5       I5      Use one KDPC per IsrDpc queue site    
06-23-93@14:27:47 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\BUSMOUSE\i386\busmdep.c 8       I8      Bug #14365: Unreport resources correctly    
01-30-94@11:32:47 (Sun)  DAVEC3      addfile \\F:hwlab_f\NT\PRIVATE\NTOS\DD\BUSMOUSE\I386\sources 1       I1      make platform independent    
02-14-94@14:37:23 (Mon)  bobri_j     in      \\C:bobri_j\NT\PRIVATE\NTOS\DD\BUSMOUSE\I386\busmdep.c 9       I9      INIT section name    
03-09-95@01:31:54 (Thu)  bobri_i     in      \\C:BOBRI_P5\NT\PRIVATE\NTOS\DD\BUSMOUSE\I386\busmdep.c 10      I10     Remove warnings    
03-09-95@01:31:54 (Thu)  NORBERTK2   in      \\D:NTFSNORBERT\NT\PRIVATE\NTOS\DD\BUSMOUSE\I386\busmdep.c 11      I11     HalTranslateBusAddress    
06-19-96@18:59:53 (Wed)  PETERWIE.R98in      \\F:peterwie_r98\NT\PRIVATE\NTOS\DD\BUSMOUSE\i386\busmdep.c 12      I12     pnp identify 
06-19-96@18:59:54 (Wed)  PETERWIE.R98in      \\F:peterwie_r98\NT\PRIVATE\NTOS\DD\BUSMOUSE\i386\busmouse.h 6       I6      pnp identify 
06-19-96@18:59:55 (Wed)  PETERWIE.R98in      \\F:peterwie_r98\NT\PRIVATE\NTOS\DD\BUSMOUSE\i386\sources 2       I2      pnp identify
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\input\hidport\kbdhid\kbdhid.ini ===
\registry\machine\system\currentcontrolset\services\KbdHID
    DisplayName = REG_SZ "HID Keyboard Port Driver"
    ErrorControl = REG_DWORD 0x00000001
    Group = REG_SZ "Keyboard Port"
    ImagePath = REG_EXPAND_SZ "system32\drivers\kbdhid.sys"
    Start = REG_DWORD 0x00000001
    Tag = REG_DWORD 0x00000002
    Type = REG_DWORD 0x00000001

\registry\machine\system\currentcontrolset\services\KbdHID\Parameters
    KeyboardDeviceBaseName = REG_SZ "KeyboardPort"

\registry\machine\system\currentcontrolset\services\EventLog\System\KbdHID
    EventMessageFile = REG_EXPAND_SZ "%SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\drivers\kbdhid.sys"
    TypesSupported = REG_DWORD 0x7
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\input\hidport\mouhid\mouhid.ini ===
\registry\machine\system\currentcontrolset\services\MouHID
    DisplayName = REG_SZ "HID Mouse Port Driver"
    ErrorControl = REG_DWORD 0x00000001
    Group = REG_SZ "Keyboard Port"
    ImagePath = REG_EXPAND_SZ "system32\drivers\mouhid.sys"
    Start = REG_DWORD 0x00000001
    Tag = REG_DWORD 0x00000002
    Type = REG_DWORD 0x00000001

\registry\machine\system\currentcontrolset\services\MouHID\Parameters
    PointerDeviceBaseName = REG_SZ "PointerPort"
    TreatAbsoluteAsRelative = REG_DWORD 1

\registry\machine\system\currentcontrolset\services\EventLog\System\MouHID
    EventMessageFile = REG_EXPAND_SZ "%SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\drivers\mouhid.sys"
    TypesSupported = REG_DWORD 0x7
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\input\inport\history.log ===
91-07-28@23:25  lees         addfile ntos\dd\inport\                   New mouse\keyboard drivers.    
91-07-28@23:25  lees         addfile ntos\dd\inport\i386 v1            New mouse\keyboard drivers.    
91-07-28@23:25  lees         addfile ntos\dd\inport\makefile v1        New mouse\keyboard drivers.    
91-07-28@23:25  lees         addfile ntos\dd\inport\obj v1             New mouse\keyboard drivers.    
91-07-28@23:25  lees         addfile ntos\dd\inport\sources v1         New mouse\keyboard drivers.    
91-07-29@13:01  lees         delfile ntos\dd\inport\obj v2             Extraneous.    
92-10-17@14:35  lees         in      ntos\dd\inport\sources v2         Bug #9915 - Cleanup DDK source     
92-12-04@11:35  DAVEC1       in      ntos\dd\inport\sources v3         add alpha specific sources     
93-01-15@12:23  lees         in      ntos\dd\inport\sources v4         Add driver-specific error logging     
93-01-15@12:23  lees         addfile ntos\dd\inport\inport.rc v1       Add driver-specific error logging     
93-01-15@12:23  lees         addfile ntos\dd\inport\inplog.mc v1       Add driver-specific error logging     
93-04-30@12:22  lees         in      ntos\dd\inport\inplog.mc v2       Log overflow less often     
93-04-30@12:22  lees         in      ntos\dd\inport\sources v5         Log overflow less often     
93-05-20@18:12  lees         in      ntos\dd\inport\inport.rc v2       Bug #322     
94-01-30@11:39  DAVEC3       in      ntos\dd\inport\sources v6         mazke platform independent     
96-06-19@19:00  PETERWIE.R98 addfile ntos\dd\inport\devdesc.c v1       pnp identify 
96-06-19@19:00  PETERWIE.R98 addfile ntos\dd\inport\devdesc.h v1       pnp identify 
96-06-19@19:00  PETERWIE.R98 in      ntos\dd\inport\sources v7         pnp identify
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\input\inport\i386\history.log ===
91-07-28@23:25  lees         addfile ntos\dd\inport\i386\                   New mouse\keyboard drivers.    
91-07-28@23:25  lees         addfile ntos\dd\inport\i386\inpcfg.h v1        New mouse\keyboard drivers.    
91-07-28@23:25  lees         addfile ntos\dd\inport\i386\inport.c v1        New mouse\keyboard drivers.    
91-07-28@23:25  lees         addfile ntos\dd\inport\i386\inport.h v1        New mouse\keyboard drivers.    
91-08-12@15:26  NTBUILD4     in      ntos\dd\inport\i386\inport.h v2        Fixed Non-Debug define of DebugPrint3    
91-08-15@15:21  lees         in      ntos\dd\inport\i386\inport.c v2        Use status reg 0 to fix jerkiness problem.    
91-08-15@15:21  lees         in      ntos\dd\inport\i386\inport.h v3        Use status reg 0 to fix jerkiness problem.    
91-09-21@14:31  lees         in      ntos\dd\inport\i386\inport.c v3        Miscellaneous cleanup    
91-09-21@14:31  lees         in      ntos\dd\inport\i386\inport.h v4        Miscellaneous cleanup    
91-11-08@23:25  shielint     in      ntos\dd\inport\i386\inport.c v4        KeInitializeInterrupt change     
91-11-11@14:57  stevewo      in      ntos\dd\inport\i386\inport.c v5        Phase 2 of spinlock change     
91-11-11@14:57  stevewo      in      ntos\dd\inport\i386\inport.h v5        Phase 2 of spinlock change     
92-02-01@18:23  lees         in      ntos\dd\inport\i386\inpcfg.h v2        Miscellaneous cleanup.     
92-02-01@18:24  lees         in      ntos\dd\inport\i386\inport.c v6        Miscellaneous cleanup.     
92-02-01@18:25  lees         in      ntos\dd\inport\i386\inport.h v6        Miscellaneous cleanup.     
92-03-05@16:38  lees         in      ntos\dd\inport\i386\inport.c v7        Use HAL routines.     
92-03-05@16:38  lees         in      ntos\dd\inport\i386\inport.h v7        Use HAL routines.     
92-03-12@21:02  DARRYLH      in      ntos\dd\inport\i386\inport.c v8        Upgrade IoCreateDevice interface     
92-03-21@14:20  LOUP         in      ntos\dd\inport\i386\inport.c v9        change PhysicalAddress to 64 bits     
92-03-27@12:25  lees         in      ntos\dd\inport\i386\inport.c v10       Modified overrun handling.     
92-03-27@12:25  lees         in      ntos\dd\inport\i386\inport.h v8        Modified overrun handling.     
92-04-01@15:17  lees         in      ntos\dd\inport\i386\inpcfg.h v3        Dynamically alloc buffers     
92-04-01@15:17  lees         in      ntos\dd\inport\i386\inport.c v11       Dynamically alloc buffers     
92-04-01@15:17  lees         in      ntos\dd\inport\i386\inport.h v9        Dynamically alloc buffers     
92-04-02@16:22  lees         in      ntos\dd\inport\i386\inport.c v12       IsrDpc check for work to do first.     
92-04-10@12:28  lees         in      ntos\dd\inport\i386\inport.c v13       Added error logging.     
92-04-10@12:28  lees         in      ntos\dd\inport\i386\inport.h v10       Added error logging.     
92-04-17@09:05  KENRC        in      ntos\dd\inport\i386\inpcfg.h v4        MP update to HalGetInterruptVector     
92-04-17@09:05  KENRC        in      ntos\dd\inport\i386\inport.c v14       MP update to HalGetInterruptVector     
92-04-17@09:05  KENRC        in      ntos\dd\inport\i386\inport.h v11       MP update to HalGetInterruptVector     
92-05-07@18:11  lees         in      ntos\dd\inport\i386\inport.c v15       Registry usage; error logging; cleanup     
92-05-07@18:12  lees         in      ntos\dd\inport\i386\inport.h v12       Registry usage; error logging; cleanup     
92-05-07@18:12  lees         in      ntos\dd\inport\i386\inpcfg.h v5        Registry usage; error logging; cleanup     
92-05-12@20:00  lees         in      ntos\dd\inport\i386\inpcfg.h v6        Fix MCA dependency.     
92-05-12@20:00  lees         in      ntos\dd\inport\i386\inport.c v16       Fix MCA dependency.     
92-05-13@15:32  NTX86BLD     in      ntos\dd\inport\i386\inport.c v17       Cycle through registry for all bus types.     
92-05-15@15:37  lees         in      ntos\dd\inport\i386\inpcfg.h v7        Impacted by registry mods for Ianja's GetKeyboardType API     
92-05-15@15:37  lees         in      ntos\dd\inport\i386\inport.c v18       Impacted by registry mods for Ianja's GetKeyboardType API     
92-05-18@14:33  lees         in      ntos\dd\inport\i386\inport.c v19       Changed error status code, per bug #8471     
92-05-19@04:50  KENRC        in      ntos\dd\inport\i386\inport.c v20       hal spec update     
92-06-11@18:24  lees         in      ntos\dd\inport\i386\inport.c v21       Fix bug #11278 - Add registry info for Setup     
92-08-14@16:17  lees         in      ntos\dd\inport\i386\inport.c v22       Fixes #3513     
92-08-14@16:18  lees         in      ntos\dd\inport\i386\inport.h v13       Fixes #3513     
92-08-17@10:32  lees         in      ntos\dd\inport\i386\inport.c v23       Remove stdio prototypes     
92-08-29@16:20  lees         in      ntos\dd\inport\i386\inport.c v24       Null-term. unicode strings (#4650); misc. cleanup     
92-09-10@16:49  lees         in      ntos\dd\inport\i386\inpcfg.h v8        more flexible init; debug prints     
92-09-10@16:49  lees         in      ntos\dd\inport\i386\inport.c v25       more flexible init; debug prints     
92-10-17@14:36  lees         in      ntos\dd\inport\i386\inport.h v14       Bug #9915 - Cleanup DDK source     
92-10-17@14:36  lees         addfile ntos\dd\inport\i386\inpcmn.c v1        Split inport.c into inpcmn.c and inpdep.c     
92-10-17@14:37  lees         addfile ntos\dd\inport\i386\inpdep.c v1        Split inport.c into inpcmn.c and inpdep.c     
92-10-17@14:38  lees         delfile ntos\dd\inport\i386\inport.c v26       Split inport.c into inpcmn.c and inpdep.c     
92-10-31@13:51  DARRYLH      in      ntos\dd\inport\i386\inpcmn.c v2        Autogenerate new ntddk.h header file     
92-10-31@13:51  DARRYLH      in      ntos\dd\inport\i386\inpdep.c v2        Autogenerate new ntddk.h header file     
92-10-31@13:51  DARRYLH      in      ntos\dd\inport\i386\inport.h v15       Autogenerate new ntddk.h header file     
92-11-20@19:59  DARRYLH      in      ntos\dd\inport\i386\inpdep.c v3        Export buffered I\O characteristic     
92-11-27@09:57  DARRYLH      in      ntos\dd\inport\i386\inpdep.c v4        Back out new buffered I\O flag     
92-12-04@20:13  lees         in      ntos\dd\inport\i386\inpcmn.c v3        Multiple port connects; non-exclusive device objects     
92-12-04@20:13  lees         in      ntos\dd\inport\i386\inpdep.c v5        Multiple port connects; non-exclusive device objects     
92-12-04@20:14  lees         in      ntos\dd\inport\i386\inport.h v16       Multiple port connects; non-exclusive device objects     
92-12-17@11:22  lees         in      ntos\dd\inport\i386\inpcmn.c v4        Use UnitId now that USER sends it     
93-01-15@12:23  lees         in      ntos\dd\inport\i386\inpcmn.c v5        Fixes bugs 1446, 5961, 7303, and 7538     
93-01-15@12:24  lees         in      ntos\dd\inport\i386\inpdep.c v6        Fixes bugs 1446, 5961, 7303, and 7538     
93-01-15@12:24  lees         in      ntos\dd\inport\i386\inport.h v17       Fixes bugs 1446, 5961, 7303, and 7538     
93-02-11@12:22  lees         in      ntos\dd\inport\i386\inpcmn.c v6        Fixes bug #10693     
93-02-11@12:22  lees         in      ntos\dd\inport\i386\inpdep.c v7        Fixes bug #10693     
93-02-11@12:22  lees         in      ntos\dd\inport\i386\inport.h v18       Fixes bug #10693     
93-02-15@16:15  lees         in      ntos\dd\inport\i386\inpdep.c v8        Fix bug #11391     
93-04-01@11:43  lees         in      ntos\dd\inport\i386\inpcmn.c v7        ISR DPC queueing (be smarter -- performance!)     
93-04-01@11:43  lees         in      ntos\dd\inport\i386\inpdep.c v9        ISR DPC queueing (be smarter -- performance!)     
93-04-01@11:43  lees         in      ntos\dd\inport\i386\inport.h v19       ISR DPC queueing (be smarter -- performance!)     
93-04-30@12:22  lees         in      ntos\dd\inport\i386\inpcfg.h v9        Log overflow less often     
93-04-30@12:22  lees         in      ntos\dd\inport\i386\inpcmn.c v8        Log overflow less often     
93-04-30@12:22  lees         in      ntos\dd\inport\i386\inpdep.c v10       Log overflow less often     
93-04-30@12:22  lees         in      ntos\dd\inport\i386\inport.h v20       Log overflow less often     
93-05-10@11:11  lees         in      ntos\dd\inport\i386\inpcmn.c v9        Fixed accidental comma in ISR DPC     
93-05-26@16:20  lees         in      ntos\dd\inport\i386\inpdep.c v11       Bug #5512 - Check DataLength before using DataOffset     
93-06-17@11:05  lees         in      ntos\dd\inport\i386\inpcmn.c v10       Use one KDPC per IsrDpc queue site     
93-06-17@11:05  lees         in      ntos\dd\inport\i386\inpdep.c v12       Use one KDPC per IsrDpc queue site     
93-06-17@11:05  lees         in      ntos\dd\inport\i386\inport.h v21       Use one KDPC per IsrDpc queue site     
93-06-23@14:27  lees         in      ntos\dd\inport\i386\inpdep.c v13       Bug #14365: Unreport resources correctly     
94-01-30@11:38  DAVEC3       addfile ntos\dd\inport\i386\sources v1         x86 specific file     
94-02-14@14:46  bobri_j      in      ntos\dd\inport\i386\inpdep.c v14       INIT section name     
95-02-25@12:19  bobri_i      in      ntos\dd\inport\i386\inpdep.c v15       Remove warnings     
95-03-06@10:38  NORBERTK2    in      ntos\dd\inport\i386\inpdep.c v16       HalTranslateBusAddress     
96-06-19@19:00  PETERWIE.R98 in      ntos\dd\inport\i386\inpdep.c v17       pnp identify 
96-06-19@19:00  PETERWIE.R98 in      ntos\dd\inport\i386\inport.h v22       pnp identify 
96-06-19@19:00  PETERWIE.R98 in      ntos\dd\inport\i386\sources v2         pnp identify
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\input\joyport\history.log ===
96-07-18@11:09  noelc        addfile ntos\dd\joyport\                   Joystick port enabler 
96-07-18@11:09  noelc        addfile ntos\dd\joyport\init.c v1          Joystick port enabler 
96-07-18@11:09  noelc        addfile ntos\dd\joyport\makefile v1        Joystick port enabler 
96-07-18@11:09  noelc        addfile ntos\dd\joyport\joyport.rc v1      Joystick port enabler 
96-07-18@11:09  noelc        addfile ntos\dd\joyport\sources v1         Joystick port enabler
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\input\joystick\joyread\history.log ===
96-07-05@13:03  stevez       addfile ntos\dd\joystick\joyread\                    
96-07-05@13:21  stevez       addfile ntos\dd\joystick\joyread\joyread.c v1        
96-07-05@13:21  stevez       addfile ntos\dd\joystick\joyread\makefile v1         
96-07-05@13:21  stevez       addfile ntos\dd\joystick\joyread\sources v1          
96-07-08@13:55  stevez       in      ntos\dd\joystick\joyread\joyread.c v2
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\input\joystick\history.log ===
96-05-20@14:25  richj        addfile ntos\dd\joystick\                   DirectInput Joystick driver   
96-05-20@14:25  richj        addfile ntos\dd\joystick\joylog.mc v1       DirectInput Joystick driver   
96-05-20@14:25  richj        addfile ntos\dd\joystick\makefile v1        DirectInput Joystick driver   
96-05-20@14:25  richj        addfile ntos\dd\joystick\swndr3p.h v1       DirectInput Joystick driver   
96-05-20@14:25  richj        addfile ntos\dd\joystick\joylog.rcv v1      DirectInput Joystick driver   
96-05-20@14:25  richj        addfile ntos\dd\joystick\sources v1         DirectInput Joystick driver   
96-05-20@14:25  richj        addfile ntos\dd\joystick\makefile.inc v1    DirectInput Joystick driver   
96-05-20@14:25  richj        addfile ntos\dd\joystick\swndr3p.c v1       DirectInput Joystick driver   
96-05-21@11:00  richj        delfile ntos\dd\joystick\swndr3p.h v2       Moved to sdk\inc\ntddjoy.h   
96-05-21@11:01  richj        in      ntos\dd\joystick\swndr3p.c v2       build break: moved header to sdk\inc\ntddjoy.h   
96-06-06@11:37  richj        addfile ntos\dd\joystick\analog v1          Store for analog support 
96-06-06@14:44  richj        in      ntos\dd\joystick\swndr3p.c v3       #41529: latest joystick code 
96-06-13@13:20  richj        in      ntos\dd\joystick\swndr3p.c v4       #41529: latest joystick code 
96-06-14@16:34  richj        in      ntos\dd\joystick\swndr3p.c v5       fix emulationswitch, cleanup timings 
96-06-24@15:30  richj        in      ntos\dd\joystick\swndr3p.c v6       fix deadlock (yield during spinlock) 
96-07-05@12:56  stevez       addfile ntos\dd\joystick\anajoyst.c v1      This will eventually be sidewinder, for now a working version of the analog joystick driver 
96-07-05@13:03  stevez       addfile ntos\dd\joystick\joyread v1          
96-07-05@13:03  stevez       addfile ntos\dd\joystick\joystat v1          
96-07-08@13:55  stevez       in      ntos\dd\joystick\anajoyst.c v2      works 
96-07-08@15:02  richj        in      ntos\dd\joystick\anajoyst.c v3      fixed IOCTL_GET_JW_CONFIG 
96-07-08@15:35  richj        in      ntos\dd\joystick\sources v2         add latest analog joystick code 
96-07-08@15:37  richj        delfile ntos\dd\joystick\analog v2          No longer needed; analog code now built from here 
96-07-08@15:39  richj        in      ntos\dd\joystick\swndr3p.c v7       add latest analog joystick code 
96-07-11@17:38  richj        in      ntos\dd\joystick\anajoyst.c v4      Add 3-axis support
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\input\joystick\joystat\history.log ===
96-07-05@13:03  stevez       addfile ntos\dd\joystick\joystat\                    
96-07-05@13:26  stevez       addfile ntos\dd\joystick\joystat\joystat.c v1        
96-07-05@13:26  stevez       addfile ntos\dd\joystick\joystat\sources v1          
96-07-05@13:26  stevez       addfile ntos\dd\joystick\joystat\makefile v1         
96-07-08@13:55  stevez       in      ntos\dd\joystick\joystat\joystat.c v2
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\input\kbdclass\history.log ===
time			 user        op      path					fv	diff    comment

Log for ntos\dd\kbdclass:

07-28-91@23:24:14 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\kbdclass    0               New mouse\keyboard drivers.    
07-28-91@23:24:20 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\kbdclass\kbdclass.c 1       I1      New mouse\keyboard drivers.    
07-28-91@23:24:21 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\kbdclass\kbdclass.h 1       I1      New mouse\keyboard drivers.    
07-28-91@23:24:22 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\kbdclass\makefile 1       I1      New mouse\keyboard drivers.    
07-28-91@23:24:23 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\kbdclass\obj 1               New mouse\keyboard drivers.    
07-28-91@23:24:24 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\kbdclass\sources 1       I1      New mouse\keyboard drivers.    
07-28-91@23:24:27 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\kbdclass\testkbd.c 1       I1      New mouse\keyboard drivers.    
07-29-91@13:02:55 (Mon)  lees        delfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\obj 2               Extraneous.    
08-12-91@14:50:00 (Mon)  NTBUILD4    in      \\C:NTBUILD4\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.h 2       I2      Fixed Non-Debug define of DebugPrint3    
09-16-91@02:02:59 (Mon)  STEVEWO     in      \\D:STEVEWO\NT\PRIVATE\NTOS\dd\kbdclass\testkbd.c 2       I2      End of TIME and PTIME    
09-21-91@14:31:21 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 2       I2      Miscellaneous cleanup    
10-02-91@12:41:56 (Wed)  O-ALEXBR2   in      \\C:O-ALEXBR2\NT\PRIVATE\NTOS\DD\KBDCLASS\sources 2       I2      add DEC LK201 driver    
10-02-91@12:43:01 (Wed)  O-ALEXBR2   addfile \\C:O-ALEXBR2\NT\PRIVATE\NTOS\DD\KBDCLASS\d3kbddd.c 1       I1      add DEC LK201 driver    
10-02-91@12:44:59 (Wed)  O-ALEXBR2   in      \\C:O-ALEXBR2\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 3       I3      ifdef !DECSTATION to support LK201    
10-25-91@15:07:51 (Fri)  O-ALEXBR    in      \\C:O-ALEXBR\NT\PRIVATE\NTOS\DD\KBDCLASS\d3kbddd.c 2       I2      latest and best LK201-fake-PC keyboard    
11-05-91@17:35:20 (Tue)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 4       I4      Fixed MP synchronization problem (NCR).    
11-05-91@17:35:22 (Tue)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.h 3       I3      Fixed MP synchronization problem (NCR).    
11-08-91@17:14:06 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 5       I5           
11-11-91@14:57:49 (Mon)  stevewo     in      \\D:STEVEWO\NT\PRIVATE\NTOS\dd\kbdclass\kbdclass.c 6       I6      Phase 2 of spinlock change     
01-10-92@16:03:54 (Fri)  O-ALEXBR    in      \\C:O-ALEXBR\NT\PRIVATE\NTOS\DD\KBDCLASS\d3kbddd.c 3       I3      Added LK401 support     
01-20-92@20:09:42 (Mon)  O-ALEXBR    in      \\D:O-ALEXB3\NT\PRIVATE\NTOS\DD\KBDCLASS\d3kbddd.c 4       I4      Fix CAPS lock.     
01-23-92@02:28:18 (Thu)  STEVEWO     in      \\D:STEVEWO\NT\PRIVATE\NTOS\DD\KBDCLASS\d3kbddd.c 5       I5      Object Manager converted to Unicode only     
01-23-92@02:28:25 (Thu)  STEVEWO     in      \\D:STEVEWO\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 7       I7      Object Manager converted to Unicode only     
01-23-92@02:28:36 (Thu)  STEVEWO     in      \\D:STEVEWO\NT\PRIVATE\NTOS\DD\KBDCLASS\testkbd.c 3       I3      Object Manager converted to Unicode only     
02-01-92@18:32:32 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.h 4       I4      Miscellaneous cleanup.     
02-01-92@18:33:38 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 8       I8      Miscellaneous cleanup.     
03-05-92@16:47:43 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 9       I9      Don't change IRQL around IoCompleteRequest.     
03-12-92@21:02:35 (Thu)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\KBDCLASS\d3kbddd.c 6       I6      Upgrade IoCreateDevice interface     
03-12-92@21:02:39 (Thu)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 10      I10     Upgrade IoCreateDevice interface     
03-24-92@18:28:42 (Tue)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 11      I11     Remove unnecessary Raise\Lower Irql; don't check read byte offset     
03-27-92@12:30:07 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 12      I12     Changed overrun-handling comments.     
04-01-92@15:14:52 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 13      I13     Dynamically alloc buffers; add new ioctl     
04-01-92@15:15:01 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.h 5       I5      Dynamically alloc buffers; add new ioctl     
04-10-92@12:08:49 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 14      I14     Added error logging.     
04-10-92@12:11:03 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 15      I15     Removed test DATA_QUEUE_SIZE.     
04-10-92@12:26:20 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.h 6       I6      Added SequenceNumber to Extension.     
04-24-92@08:41:48 (Fri)  DECBLD01    in      \\D:R3000_CHK\NT\PRIVATE\NTOS\DD\KBDCLASS\d3kbddd.c 7       I7      Fix for ntddkbd.h changes     
04-30-92@17:58:54 (Thu)  DECBLD01    in      \\D:R3000_CHK\NT\PRIVATE\NTOS\DD\KBDCLASS\d3kbddd.c 8       I8      PC scan set 3 to 1     
05-01-92@11:03:03 (Fri)  DECBLD01    addfile \\D:R3000_CHK\NT\PRIVATE\NTOS\DD\KBDCLASS\d3keymap.c 1       I1      PC scan set 3 to 1     
05-01-92@11:03:14 (Fri)  DECBLD01    addfile \\D:R3000_CHK\NT\PRIVATE\NTOS\DD\KBDCLASS\d3kbd.h 1       I1      PC scan set 3 to 1     
05-07-92@18:13:39 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 16      I16     Registry usage; error logging; cleanup     
05-07-92@18:13:49 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.h 7       I7      Registry usage; error logging; cleanup     
05-15-92@15:26:29 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 17      I17     Impacted by registry mods for Ianja's GetKeyboardType API     
06-11-92@18:34:06 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 18      I18     Fix bug #11278 - Add registry info for Setup     
06-11-92@18:34:24 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.h 8       I8      Fix bug #11278 - Add registry info for Setup     
06-17-92@13:53:55 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 19      I19     Fixes bug #12734 - cancellation window     
07-17-92@10:18:11 (Fri)  stevewo     in      \\D:STEVEWO\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 20      I20     Fix bug 14723     
07-21-92@16:58:08 (Tue)  FLOYDRMIPS  addfile \\D:floydrntfs\NT\PRIVATE\NTOS\dd\kbdclass\kbdclass.rc 1       I1      ptr:14574 - version resources     
07-21-92@18:22:15 (Tue)  FLOYDRMIPS  in      \\D:floydrntfs\NT\PRIVATE\NTOS\DD\KBDCLASS\sources 3       I3      ptr:14574 - version resources     
07-22-92@12:43:12 (Wed)  FLOYDRMIPS  in      \\D:floydrntfs\NT\PRIVATE\NTOS\dd\kbdclass\sources 4       I4      ensure sources files match standard     
07-27-92@16:08:44 (Mon)  DECBLD01    in      \\E:R3000_CHK2\NT\PRIVATE\NTOS\DD\KBDCLASS\d3kbddd.c 9       I9      Keyboard Identifier Change     
08-14-92@16:15:13 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 21      I21     Fixes #3513     
08-17-92@10:35:26 (Mon)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 22      I22     Remove stdio prototypes     
08-29-92@16:17:33 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 23      I23     Null-term. unicode strings (#4650); misc. cleanup     
09-10-92@16:53:07 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 24      I24     more flexible init; debug prints     
09-10-92@16:53:56 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.h 9       I9      more flexible init; debug prints     
10-17-92@14:25:53 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 25      I25     Bug #9915 - Cleanup DDK source     
10-17-92@14:28:45 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.h 10      I10     Bug #9915 - Cleanup DDK source     
10-31-92@13:51:50 (Sat)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 26      I26     Autogenerate new ntddk.h header file     
10-31-92@13:52:01 (Sat)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\KBDCLASS\sources 5       I5      Autogenerate new ntddk.h header file     
11-16-92@09:04:27 (Mon)  DARRYLH     delfile \\D:DARRYLH\NT\PRIVATE\NTOS\DD\KBDCLASS\d3kbd.h 2       I2      No longer needed     
11-16-92@09:04:27 (Mon)  DARRYLH     delfile \\D:DARRYLH\NT\PRIVATE\NTOS\DD\KBDCLASS\d3kbddd.c 10      I10     No longer needed    
11-16-92@09:04:27 (Mon)  DARRYLH     delfile \\D:DARRYLH\NT\PRIVATE\NTOS\DD\KBDCLASS\d3keymap.c 2       I2      No longer needed    
11-20-92@19:59:33 (Fri)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 27      I27     Export buffered I\O characteristic     
11-27-92@09:58:11 (Fri)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 28      I28     Back out new buffered I\O flag     
11-28-92@12:52:32 (Sat)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\KBDCLASS\testkbd.c 4       I4      Declare I\O system APC w\3 parameters not 2     
12-04-92@11:40:16 (Fri)  DAVEC1      in      \\F:DAVEC1\NT\PRIVATE\NTOS\DD\KBDCLASS\sources 6       I6      add alpha specific files     
12-04-92@17:59:46 (Fri)  stevewo     in      \\D:STEVEWO\NT\PRIVATE\NTOS\DD\KBDCLASS\testkbd.c 5       I5      Z, C replaced by X     
12-04-92@20:14:42 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 29      I29     Multiple port connects; non-exclusive device objects     
12-04-92@20:15:27 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.h 11      I11     Multiple port connects; non-exclusive device objects     
12-17-92@11:30:56 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 30      I30     Use correct device name and use UnitId now that USER is synched up     
12-17-92@11:31:28 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.h 12      I12     Use correct device name and use UnitId now that USER is synched up     
12-17-92@11:32:06 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\sources 7       I7      testkbd is obsolete     
12-17-92@11:32:06 (Thu)  lees        delfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\testkbd.c 6       I6      obsolete    
01-15-93@12:24:37 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 31      I31     Fixes bugs 1446, 5961, 7303, and 7538     
01-15-93@12:25:08 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.rc 2       I2      Add driver-specific error logging     
01-15-93@12:25:24 (Fri)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdlog.mc 1       I1      Add driver-specific error logging     
02-11-93@12:23:16 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 32      I32     Fixes bug #10693     
02-15-93@16:16:36 (Mon)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 33      I33     Fix bug #11391     
04-30-93@12:13:34 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 34      I34     Log overflow less often     
04-30-93@12:13:58 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.h 13      I13     Log overflow less often     
04-30-93@12:14:06 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdlog.mc 2       I2      Log overflow less often     
04-30-93@12:14:11 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\sources 8       I8      Log overflow less often     
05-20-93@18:13:19 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\dd\kbdclass\kbdclass.rc 3       I3      Bug #322     
06-17-93@11:05:53 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 35      I35     Fix some comments      
01-30-94@11:39:54 (Sun)  DAVEC3      in      \\F:hwlab_f\NT\PRIVATE\NTOS\DD\KBDCLASS\sources 9       I9      make platform independent     
02-14-94@14:46:49 (Mon)  bobri_j     in      \\C:bobri_j\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 36      I36     INIT section name     
11-17-94@10:52:38 (Thu)  NORBERTK2   in      \\D:NTFSNORBERT\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 37      I37     RtlLargeInteger     
01-24-95@14:57:32 (Tue)  NORBERTK2   in      \\D:NTFSNORBERT\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 38      I38     one reader     
01-24-95@14:57:35 (Tue)  NORBERTK2   in      \\D:NTFSNORBERT\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.h 14      I14     one reader     
04-05-95@11:59:29 (Wed)  stevewo     in      \\D:STEVEWO\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 39      I39     Remove bogus chars from registry     
06-06-95@17:08:58 (Tue)  KENRC       in      \\D:kenr_dev\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 40      I40     po changes     
02-02-96@11:22:12 (Fri)  JVERT4      in      \\D:JVERT_SCSI\NT\PRIVATE\NTOS\DD\KBDCLASS\kbdclass.c 41      I41     LUID no longer LARGE_INTEGER
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\input\mouclass\history.log ===
time			 user        op      path					fv	diff    comment

Log for ntos\dd\mouclass:

07-28-91@23:22:42 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\mouclass    0                   
07-28-91@23:22:52 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\mouclass\makefile 1       I1      New mouse\keyboard drivers.    
07-28-91@23:22:57 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\mouclass\mouclass.c 1       I1      New mouse\keyboard drivers.    
07-28-91@23:22:59 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\mouclass\mouclass.h 1       I1      New mouse\keyboard drivers.    
07-28-91@23:23:02 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\mouclass\obj 1               New mouse\keyboard drivers.    
07-28-91@23:23:03 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\mouclass\sources 1       I1      New mouse\keyboard drivers.    
07-28-91@23:23:07 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\mouclass\testmou.c 1       I1      New mouse\keyboard drivers.    
07-29-91@13:02:32 (Mon)  lees        delfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\obj 2               Extraneous.    
08-12-91@14:51:39 (Mon)  NTBUILD4    in      \\C:NTBUILD4\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.h 2       I2      Fixed Non-Debug define of DebugPrint3    
08-15-91@15:53:00 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\testmou.c 2       I2      Removed CountsPerCentimeter and HardwareScaling.    
09-16-91@02:03:13 (Mon)  STEVEWO     in      \\D:STEVEWO\NT\PRIVATE\NTOS\dd\mouclass\testmou.c 3       I3      End of TIME and PTIME    
09-21-91@14:31:28 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 2       I2      Miscellaneous cleanup    
10-02-91@12:54:19 (Wed)  O-ALEXBR2   in      \\C:O-ALEXBR2\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 3       I3      ifdef !DECSTATION for DEC mouse support    
10-02-91@12:54:41 (Wed)  O-ALEXBR2   in      \\C:O-ALEXBR2\NT\PRIVATE\NTOS\DD\MOUCLASS\sources 2       I2      add DEC mouse support    
10-02-91@12:55:08 (Wed)  O-ALEXBR2   addfile \\C:O-ALEXBR2\NT\PRIVATE\NTOS\DD\MOUCLASS\d3moudd.c 1       I1      DEC mouse support    
10-25-91@15:08:36 (Fri)  O-ALEXBR    in      \\C:O-ALEXBR\NT\PRIVATE\NTOS\DD\MOUCLASS\d3moudd.c 2       I2      latest and best DEC Mouse     
11-05-91@17:34:43 (Tue)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 4       I4      Fixed MP synchronization problem (NCR).    
11-05-91@17:34:45 (Tue)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.h 3       I3      Fixed MP synchronization problem (NCR).    
11-08-91@17:12:57 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 5       I5           
11-11-91@14:58:33 (Mon)  stevewo     in      \\D:STEVEWO\NT\PRIVATE\NTOS\dd\mouclass\mouclass.c 6       I6      Phase 2 of spinlock change     
01-23-92@02:29:07 (Thu)  STEVEWO     in      \\D:STEVEWO\NT\PRIVATE\NTOS\DD\MOUCLASS\d3moudd.c 3       I3      Object Manager converted to Unicode only     
01-23-92@02:29:14 (Thu)  STEVEWO     in      \\D:STEVEWO\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 7       I7      Object Manager converted to Unicode only     
01-23-92@02:29:19 (Thu)  STEVEWO     in      \\D:STEVEWO\NT\PRIVATE\NTOS\DD\MOUCLASS\testmou.c 4       I4      Object Manager converted to Unicode only     
02-01-92@18:29:59 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.h 4       I4      Miscellaneous cleanup.     
02-01-92@18:31:09 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 8       I8      Miscellaneous cleanup.     
03-05-92@16:48:19 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 9       I9      Don't change IRQL around IoCompleteRequest.     
03-12-92@21:03:37 (Thu)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\MOUCLASS\d3moudd.c 4       I4      Upgrade IoCreateDevice interface     
03-12-92@21:03:42 (Thu)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 10      I10     Upgrade IoCreateDevice interface     
03-24-92@18:29:40 (Tue)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 11      I11     Remove unnecessary Raise\Lower Irql; don't check read byte offset     
03-27-92@12:29:07 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 12      I12     Changed overrun-handling comments.     
04-01-92@15:14:14 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 13      I13     Dynamically alloc buffers; add new ioctl     
04-01-92@15:14:22 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.h 5       I5      Dynamically alloc buffers; add new ioctl     
04-10-92@12:07:18 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 14      I14     Added error logging.     
04-10-92@12:24:52 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.h 6       I6      Added SequenceNumber to Extension.     
05-07-92@18:14:30 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 15      I15     Registry usage; error logging; cleanup     
05-07-92@18:14:45 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.h 7       I7      Registry usage; error logging; cleanup     
05-15-92@15:26:52 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 16      I16     Impacted by registry mods for Ianja's GetKeyboardType API     
06-11-92@18:36:45 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 17      I17     Fix bug #11278 - Add registry info for Setup     
06-11-92@18:37:23 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.h 8       I8      Fix bug #11278 - Add registry info for Setup     
06-17-92@13:54:27 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 18      I18     Fixes bug #12734 - cancellation window     
07-17-92@10:18:32 (Fri)  stevewo     in      \\D:STEVEWO\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 19      I19     Fix bug 14723     
07-21-92@16:58:21 (Tue)  FLOYDRMIPS  addfile \\D:floydrntfs\NT\PRIVATE\NTOS\dd\mouclass\mouclass.rc 1       I1      ptr:14574 - version resources     
07-21-92@18:22:34 (Tue)  FLOYDRMIPS  in      \\D:floydrntfs\NT\PRIVATE\NTOS\DD\MOUCLASS\sources 3       I3      ptr:14574 - version resources     
07-22-92@12:43:45 (Wed)  FLOYDRMIPS  in      \\D:floydrntfs\NT\PRIVATE\NTOS\dd\mouclass\sources 4       I4      ensure sources files match standard     
08-14-92@16:15:40 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 20      I20     Fixes #3513     
08-17-92@10:34:47 (Mon)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 21      I21     Remove stdio prototypes     
08-29-92@16:18:22 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 22      I22     Null-term. unicode strings (#4650); misc. cleanup     
09-10-92@16:54:43 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 23      I23     more flexible init; debug prints     
09-10-92@16:55:33 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.h 9       I9      more flexible init; debug prints     
10-17-92@14:19:20 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 24      I24     Bug #9915 - Cleanup DDK source     
10-17-92@14:22:19 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.h 10      I10     Bug #9915 - Cleanup DDK source     
10-31-92@13:52:19 (Sat)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 25      I25     Autogenerate new ntddk.h header file     
10-31-92@13:52:31 (Sat)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\MOUCLASS\sources 5       I5      Autogenerate new ntddk.h header file     
11-16-92@09:06:03 (Mon)  DARRYLH     delfile \\D:DARRYLH\NT\PRIVATE\NTOS\DD\MOUCLASS\d3moudd.c 5       I5      No longer needed     
11-20-92@20:00:22 (Fri)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 26      I26     Export buffered I\O characteristic     
11-27-92@09:59:21 (Fri)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 27      I27     Back out new buffered I\O flag     
11-28-92@12:53:08 (Sat)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\MOUCLASS\testmou.c 5       I5      Declare I\O system APC w\3 parameters not 2     
12-04-92@11:43:13 (Fri)  DAVEC1      in      \\F:DAVEC1\NT\PRIVATE\NTOS\DD\MOUCLASS\sources 6       I6      add alpha specific files     
12-04-92@18:00:08 (Fri)  stevewo     in      \\D:STEVEWO\NT\PRIVATE\NTOS\DD\MOUCLASS\testmou.c 6       I6      Z, C replaced by X     
12-04-92@20:16:01 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 28      I28     Multiple port connects; non-exclusive device objects     
12-04-92@20:16:49 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.h 11      I11     Multiple port connects; non-exclusive device objects     
12-17-92@11:28:28 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 29      I29     Use correct device name and use UnitId now that USER is synched up     
12-17-92@11:29:01 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.h 12      I12     Use correct device name and use UnitId now that USER is synched up     
12-17-92@11:30:09 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\sources 7       I7      testmou is obsolete     
12-17-92@11:30:09 (Thu)  lees        delfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\testmou.c 7       I7      obsolete    
01-15-93@12:25:38 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 30      I30     Fixes bugs 1446, 5961, 7303, and 7538     
01-15-93@12:26:09 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.rc 2       I2      Add driver-specific error logging     
01-15-93@12:26:24 (Fri)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\moulog.mc 1       I1      Add driver-specific error logging     
02-11-93@12:23:55 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 31      I31     Fixes bug #10693     
02-15-93@16:17:05 (Mon)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 32      I32     Fix bug #11391     
04-30-93@12:14:40 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 33      I33     Log overflow less often     
04-30-93@12:15:02 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.h 13      I13     Log overflow less often     
04-30-93@12:15:09 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\moulog.mc 2       I2      Log overflow less often     
04-30-93@12:15:14 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\sources 8       I8      Log overflow less often     
05-20-93@18:13:54 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\dd\mouclass\mouclass.rc 3       I3      Bug #322     
06-17-93@11:06:11 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 34      I34     Fix some comments      
01-30-94@11:42:30 (Sun)  DAVEC3      in      \\F:hwlab_f\NT\PRIVATE\NTOS\DD\MOUCLASS\sources 9       I9      make platform independent     
02-14-94@14:47:07 (Mon)  bobri_j     in      \\C:bobri_j\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 35      I35     INIT section name     
11-17-94@10:56:25 (Thu)  NORBERTK2   in      \\D:NTFSNORBERT\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 36      I36     RtlLargeInteger     
01-24-95@14:57:11 (Tue)  NORBERTK2   in      \\D:NTFSNORBERT\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 37      I37     one reader     
01-24-95@14:57:13 (Tue)  NORBERTK2   in      \\D:NTFSNORBERT\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.h 14      I14     one reader     
06-06-95@17:09:12 (Tue)  KENRC       in      \\D:kenr_dev\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 38      I38     po changes     
02-02-96@11:22:19 (Fri)  JVERT4      in      \\D:JVERT_SCSI\NT\PRIVATE\NTOS\DD\MOUCLASS\mouclass.c 39      I39     LUID no longer LARGE_INTEGER
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\input\sermouse\history.log ===
time			 user        op      path					fv	diff    comment

Log for ntos\dd\sermouse:

07-28-91@23:26:10 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\sermouse    0               New mouse\keyboard drivers.    
07-28-91@23:26:14 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\sermouse\i386 1               New mouse\keyboard drivers.    
07-28-91@23:26:15 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\sermouse\makefile 1       I1      New mouse\keyboard drivers.    
07-28-91@23:26:17 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\sermouse\obj 1               New mouse\keyboard drivers.    
07-28-91@23:26:18 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\sermouse\sources 1       I1      New mouse\keyboard drivers.    
07-29-91@13:02:01 (Mon)  lees        delfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\obj 2               Extraneous.    
08-10-91@17:36:55 (Sat)  TOMBO       addfile \\D:O-TOMBO\NT\PRIVATE\NTOS\DD\SERMOUSE\mips 1               added for compaq    
08-10-91@17:40:39 (Sat)  TOMBO       in      \\D:O-TOMBO\NT\PRIVATE\NTOS\DD\SERMOUSE\sources 2       I2      build MIPS directory    
08-19-91@14:43:04 (Mon)  TOMBO       in      \\D:O-TOMBO\NT\PRIVATE\NTOS\DD\SERMOUSE\sources 3       I3      build sermouse for JAZZ    
02-17-92@14:31:34 (Mon)  O-TOMB      in      \\C:O-TOMB\NT\PRIVATE\NTOS\DD\SERMOUSE\sources 4       I4      build compaq sources     
07-21-92@17:18:42 (Tue)  FLOYDRMIPS  addfile \\D:floydrntfs\NT\PRIVATE\NTOS\DD\sermouse\sermouse.rc 1       I1      ptr:14574 - version resources     
07-21-92@18:25:47 (Tue)  FLOYDRMIPS  in      \\D:floydrntfs\NT\PRIVATE\NTOS\DD\SERMOUSE\sources 5       I5      ptr:14574 - version resources     
10-17-92@14:29:29 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sources 6       I6      Bug #9915 - Cleanup DDK source     
12-04-92@11:57:58 (Fri)  DAVEC1      in      \\F:DAVEC1\NT\PRIVATE\NTOS\DD\SERMOUSE\sources 7       I7      add alpha specific files     
01-15-93@12:26:40 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sermouse.rc 2       I2      Add driver-specific error logging     
01-15-93@12:26:55 (Fri)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sermlog.mc 1       I1      Add driver-specific error logging     
03-25-93@11:41:27 (Thu)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\cseries.c 1       I1      Works on MIPS now, plus Logitech support     
03-25-93@11:41:40 (Thu)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\cseries.h 1       I1      Works on MIPS now, plus Logitech support     
03-25-93@11:41:49 (Thu)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\debug.c 1       I1      Works on MIPS now, plus Logitech support     
03-25-93@11:42:04 (Thu)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\debug.h 1       I1      Works on MIPS now, plus Logitech support     
03-25-93@11:42:11 (Thu)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\gate.c 1       I1      Works on MIPS now, plus Logitech support     
03-25-93@11:42:21 (Thu)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\gate.h 1       I1      Works on MIPS now, plus Logitech support     
03-25-93@11:42:51 (Thu)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\mseries.c 1       I1      Works on MIPS now, plus Logitech support     
03-25-93@11:43:00 (Thu)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\mseries.h 1       I1      Works on MIPS now, plus Logitech support     
03-25-93@11:43:15 (Thu)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sermcmn.c 1       I1      Works on MIPS now, plus Logitech support     
03-25-93@11:43:27 (Thu)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sermdep.c 1       I1      Works on MIPS now, plus Logitech support     
03-25-93@11:44:12 (Thu)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sermouse.h 1       I1      Works on MIPS now, plus Logitech support     
03-25-93@11:44:21 (Thu)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\uart.c 1       I1      Works on MIPS now, plus Logitech support     
03-25-93@11:44:30 (Thu)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\uart.h 1       I1      Works on MIPS now, plus Logitech support     
03-25-93@11:44:53 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\makefile 2       I2      Works on MIPS now, plus Logitech support     
03-25-93@11:44:57 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sources 8       I8      Works on MIPS now, plus Logitech support     
03-31-93@15:07:01 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\mseries.c 2       I2      Fixes #4801 - makes serial mouse detection work after Logitech broke it     
03-31-93@15:07:14 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sermcmn.c 2       I2      Fixes #4801 - makes serial mouse detection work after Logitech broke it     
03-31-93@15:07:22 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sermdep.c 2       I2      Fixes #4801 - makes serial mouse detection work after Logitech broke it     
03-31-93@15:07:28 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sermouse.h 2       I2      Fixes #4801 - makes serial mouse detection work after Logitech broke it     
04-21-93@11:32:37 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\cseries.c 2       I2      Showstopper #7175 plus error log and overflow reporting     
04-21-93@11:32:44 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\cseries.h 2       I2      Showstopper #7175 plus error log and overflow reporting     
04-21-93@11:32:52 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\debug.c 2       I2      Showstopper #7175 plus error log and overflow reporting     
04-21-93@11:33:00 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\debug.h 2       I2      Showstopper #7175 plus error log and overflow reporting     
04-21-93@11:33:08 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\mseries.c 3       I3      Showstopper #7175 plus error log and overflow reporting     
04-21-93@11:33:13 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\mseries.h 2       I2      Showstopper #7175 plus error log and overflow reporting     
04-21-93@11:33:20 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sermcmn.c 3       I3      Showstopper #7175 plus error log and overflow reporting     
04-21-93@11:33:28 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sermdep.c 3       I3      Showstopper #7175 plus error log and overflow reporting     
04-21-93@11:33:39 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sermlog.mc 2       I2      Showstopper #7175 plus error log and overflow reporting     
04-21-93@11:33:46 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sermouse.h 3       I3      Showstopper #7175 plus error log and overflow reporting     
04-21-93@11:33:55 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sources 9       I9      Showstopper #7175 plus error log and overflow reporting     
04-21-93@11:34:02 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\uart.c 2       I2      Showstopper #7175 plus error log and overflow reporting     
04-21-93@11:34:08 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\uart.h 2       I2      Showstopper #7175 plus error log and overflow reporting     
04-21-93@11:35:32 (Wed)  lees        delfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\gate.c 2       I2      Use KeStallExecutionProcessor (works on all platforms) v. perf ctrs     
04-21-93@11:35:32 (Wed)  lees        delfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\gate.h 2       I2      Use KeStallExecutionProcessor (works on all platforms) v. perf ctrs    
04-30-93@14:01:38 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\cseries.c 3       I3      Prototypes and ordering for MIPS -DALLOC_PRAGMA     
04-30-93@14:01:46 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\mseries.c 4       I4      Prototypes and ordering for MIPS -DALLOC_PRAGMA     
04-30-93@14:01:52 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\mseries.h 3       I3      Prototypes and ordering for MIPS -DALLOC_PRAGMA     
04-30-93@14:01:57 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\uart.c 3       I3      Prototypes and ordering for MIPS -DALLOC_PRAGMA     
05-04-93@11:00:59 (Tue)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\uart.c 4       I4      UARTIsReceiveBufferFull isn't just init code     
05-10-93@11:10:04 (Mon)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sermcmn.c 4       I4      Fixed accidental comma in ISR DPC     
05-20-93@18:22:34 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\dd\sermouse\sermouse.rc 3       I3      Bug #322     
05-26-93@16:19:06 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sermdep.c 4       I4      Bug #5512 - Check DataLength before using DataOffset     
06-17-93@11:06:33 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sermcmn.c 5       I5      Use one KDPC per IsrDpc queue site     
06-17-93@11:06:38 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sermdep.c 5       I5      Use one KDPC per IsrDpc queue site     
06-17-93@11:06:46 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sermouse.h 4       I4      Use one KDPC per IsrDpc queue site     
06-23-93@14:27:21 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\sermdep.c 6       I6      Bug #14365: Unreport resources correctly     
06-23-93@14:27:26 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\uart.c 5       I5      Bug #14365: Unreport resources correctly     
06-23-93@14:27:30 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\uart.h 3       I3      Bug #14365: Unreport resources correctly     
07-26-93@15:39:35 (Mon)  DAVEC1      in      \\F:DAVEC1\NT\PRIVATE\NTOS\DD\SERMOUSE\sources 10      I10     Alpha Merge     
08-28-93@13:40:26 (Sat)  JIMT2       in      \\D:JIMT_SCSI0\NT\PRIVATE\NTOS\DD\SERMOUSE\sources 11      I11     Alpha #3121     
08-28-93@13:40:26 (Sat)  JIMT2       addfile \\D:JIMT_SCSI0\NT\PRIVATE\NTOS\DD\SERMOUSE\alpha 1               Alpha #3121    
09-29-93@16:45:55 (Wed)  NORBERTK2   in      \\D:NTFSNORBERT\NT\PRIVATE\NTOS\DD\SERMOUSE\mseries.c 5       I5      DTR on for power down     
01-30-94@11:46:38 (Sun)  DAVEC3      in      \\F:hwlab_f\NT\PRIVATE\NTOS\DD\SERMOUSE\sources 12      I12     make platform independent     
01-31-94@10:16:03 (Mon)  NORBERTK2   in      \\D:NTFSNORBERT\NT\PRIVATE\NTOS\DD\SERMOUSE\cseries.c 4       I4      C series buttons detect     
01-31-94@10:16:06 (Mon)  NORBERTK2   in      \\D:NTFSNORBERT\NT\PRIVATE\NTOS\DD\SERMOUSE\cseries.h 3       I3      C series buttons detect     
01-31-94@10:16:07 (Mon)  NORBERTK2   in      \\D:NTFSNORBERT\NT\PRIVATE\NTOS\DD\SERMOUSE\sermdep.c 7       I7      C series buttons detect     
02-14-94@14:49:20 (Mon)  bobri_j     in      \\C:bobri_j\NT\PRIVATE\NTOS\DD\SERMOUSE\cseries.c 5       I5      INIT section name     
02-14-94@14:49:22 (Mon)  bobri_j     in      \\C:bobri_j\NT\PRIVATE\NTOS\DD\SERMOUSE\mseries.c 6       I6      INIT section name     
02-14-94@14:49:23 (Mon)  bobri_j     in      \\C:bobri_j\NT\PRIVATE\NTOS\DD\SERMOUSE\sermdep.c 8       I8      INIT section name     
02-14-94@14:49:27 (Mon)  bobri_j     in      \\C:bobri_j\NT\PRIVATE\NTOS\DD\SERMOUSE\uart.c 6       I6      INIT section name     
03-05-94@14:43:38 (Sat)  NORBERTK2   in      \\D:NTFSNORBERT\NT\PRIVATE\NTOS\DD\SERMOUSE\sermdep.c 9       I9      multiple serial mice support     
03-05-94@14:43:51 (Sat)  NORBERTK2   in      \\D:NTFSNORBERT\NT\PRIVATE\NTOS\DD\SERMOUSE\sermouse.h 5       I5      multiple serial mice support     
03-05-94@14:43:53 (Sat)  NORBERTK2   in      \\D:NTFSNORBERT\NT\PRIVATE\NTOS\DD\SERMOUSE\uart.c 7       I7      multiple serial mice support     
03-05-94@14:43:53 (Sat)  DAVEC3      addfile \\F:hwlab_f\NT\PRIVATE\NTOS\DD\SERMOUSE\ppc 1               power pc    
03-06-95@10:33:39 (Mon)  NORBERTK2   in      \\D:NTFSNORBERT\NT\PRIVATE\NTOS\DD\SERMOUSE\sermdep.c 10      I10     HalTranslateBusAddress     
06-30-95@10:59:40 (Fri)  NORBERTK2   in      \\D:NTFSNORBERT\NT\PRIVATE\NTOS\DD\SERMOUSE\sermdep.c 11      I11     zero extension for RISC     
05-23-96@08:38:08 (Thu)  PETERWIE.R98in      \\F:peterwie_r98\NT\PRIVATE\NTOS\DD\SERMOUSE\mseries.c 7       I7      wheel support   
05-23-96@08:38:09 (Thu)  PETERWIE.R98in      \\F:peterwie_r98\NT\PRIVATE\NTOS\DD\SERMOUSE\mseries.h 4       I4      wheel support   
05-23-96@08:38:09 (Thu)  PETERWIE.R98in      \\F:peterwie_r98\NT\PRIVATE\NTOS\DD\SERMOUSE\sermcmn.c 6       I6      wheel support   
05-23-96@08:38:10 (Thu)  PETERWIE.R98in      \\F:peterwie_r98\NT\PRIVATE\NTOS\DD\SERMOUSE\sermdep.c 12      I12     wheel support   
05-23-96@08:38:10 (Thu)  PETERWIE.R98in      \\F:peterwie_r98\NT\PRIVATE\NTOS\DD\SERMOUSE\sermouse.h 6       I6      wheel support   
06-19-96@19:01:10 (Wed)  PETERWIE.R98addfile \\F:peterwie_r98\NT\PRIVATE\NTOS\DD\SERMOUSE\devdesc.c 1       I1      pnp identify 
06-19-96@19:01:13 (Wed)  PETERWIE.R98addfile \\F:peterwie_r98\NT\PRIVATE\NTOS\DD\SERMOUSE\devdesc.h 1       I1      pnp identify 
06-19-96@19:01:23 (Wed)  PETERWIE.R98in      \\F:peterwie_r98\NT\PRIVATE\NTOS\DD\SERMOUSE\sermdep.c 13      I13     pnp identify 
06-19-96@19:01:24 (Wed)  PETERWIE.R98in      \\F:peterwie_r98\NT\PRIVATE\NTOS\DD\SERMOUSE\sources 13      I13     pnp identify 
06-25-96@10:17:54 (Tue)  PETERWIE.R98in      \\F:peterwie_r98\NT\PRIVATE\NTOS\DD\SERMOUSE\sermdep.c 14      I14     report wheel & ballpt in Configuration structure
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\input\sermouse\i386\history.log ===
time			 user        op      path					fv	diff    comment

Log for ntos\dd\sermouse\i386:

07-28-91@23:26:14 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\sermouse\i386 0               New mouse\keyboard drivers.    
07-28-91@23:26:21 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\sermouse\i386\sermcfg.h 1       I1      New mouse\keyboard drivers.    
07-28-91@23:26:25 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\sermouse\i386\sermouse.c 1       I1      New mouse\keyboard drivers.    
07-28-91@23:26:27 (Sun)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\sermouse\i386\sermouse.h 1       I1      New mouse\keyboard drivers.    
08-12-91@15:45:28 (Mon)  NTBUILD4    in      \\C:NTBUILD4\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.h 2       I2      Fixed Non-Debug define of DebugPrint3    
09-21-91@14:31:44 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 2       I2      Miscellaneous cleanup    
09-21-91@14:31:49 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.h 3       I3      Miscellaneous cleanup    
11-01-91@16:55:02 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 3       I3      Resync mouse packet so lost interrupt data is tolerated.    
11-06-91@17:23:46 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 4       I4      Support serial ballpoint in mouse emulation mode.    
11-08-91@17:56:17 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 5       I5      Support for extra ballpoint byte.     
11-08-91@17:56:29 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.h 4       I4      Support for extra ballpoint byte.     
11-08-91@23:34:15 (Fri)  shielint    in      \\D:REALBIG\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 6       I6      KeInitializeInterrupt change     
11-11-91@15:03:33 (Mon)  stevewo     in      \\D:STEVEWO\NT\PRIVATE\NTOS\dd\sermouse\i386\sermouse.c 7       I7      Phase 2 of spinlock change     
11-11-91@15:03:37 (Mon)  stevewo     in      \\D:STEVEWO\NT\PRIVATE\NTOS\dd\sermouse\i386\sermouse.h 5       I5      Phase 2 of spinlock change     
01-23-92@02:33:00 (Thu)  STEVEWO     in      \\D:STEVEWO\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 8       I8      Object Manager converted to Unicode only     
02-01-92@18:26:36 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermcfg.h 2       I2      Miscellaneous cleanup.     
02-01-92@18:28:06 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 9       I9      Miscellaneous cleanup.     
02-01-92@18:28:37 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.h 6       I6      Miscellaneous cleanup.     
03-05-92@16:36:15 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 10      I10     Use HAL routines.     
03-05-92@16:36:42 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.h 7       I7      Use HAL routines.     
03-12-92@21:10:29 (Thu)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 11      I11     Upgrade IoCreateDevice interface     
03-21-92@14:23:04 (Sat)  LOUP        in      \\D:LOUP\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 12      I12     change PhysicalAddress to 64 bits     
03-27-92@12:27:29 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 13      I13     Modified overrun handling.     
03-27-92@12:27:40 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.h 8       I8      Modified overrun handling.     
03-27-92@12:27:40 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermcfg.h 3       I1768709Dynamically alloc buffers    
04-01-92@15:16:35 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 14      I14     Dynamically alloc buffers     
04-01-92@15:16:46 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.h 9       I9      Dynamically alloc buffers     
04-02-92@16:25:45 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 15      I15     IsrDpc check for work to do first.     
04-10-92@12:26:17 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 16      I16     Added error logging.     
04-10-92@12:26:32 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.h 10      I10     Added error logging.     
04-10-92@12:26:32 (Fri)  KENRC       in      \\D:kenr_dev\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermcfg.h 4       I1768710MP update to HalGetInterruptVector    
04-17-92@09:08:03 (Fri)  KENRC       in      \\D:kenr_dev\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 17      I17     MP update to HalGetInterruptVector     
04-17-92@09:08:13 (Fri)  KENRC       in      \\D:kenr_dev\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.h 11      I11     MP update to HalGetInterruptVector     
04-21-92@11:35:27 (Tue)  NTX86BLD    in      \\D:NTX86BLD\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 18      I18     fixx     
04-21-92@11:35:27 (Tue)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermcfg.h 5       I1768711Registry usage; error logging; cleanup    
05-07-92@18:15:44 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 19      I19     Registry usage; error logging; cleanup     
05-07-92@18:16:32 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.h 12      I12     Registry usage; error logging; cleanup     
05-07-92@18:16:32 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermcfg.h 6       I1768712Fix MCA dependency.    
05-12-92@20:01:03 (Tue)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 20      I20     Fix MCA dependency.     
05-13-92@15:34:06 (Wed)  NTX86BLD    in      \\D:NTX86BLD\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 21      I21     Cycle through registry for all bus types.     
05-13-92@15:34:06 (Wed)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermcfg.h 7       I1768713Impacted by registry mods for Ianja's GetKeyboardType API    
05-15-92@15:35:46 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 22      I22     Impacted by registry mods for Ianja's GetKeyboardType API     
05-18-92@14:31:36 (Mon)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 23      I23     Changed error status code, per bug #8471     
05-19-92@04:51:16 (Tue)  KENRC       in      \\D:kenr_dev\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 24      I24     hal spec update     
06-11-92@18:27:06 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 25      I25     Fix bug #11278 - Add registry info for Setup     
08-14-92@16:16:11 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 26      I26     Fixes #3513     
08-14-92@16:16:54 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.h 13      I13     Fixes #3513     
08-15-92@16:05:53 (Sat)  DAVEC1      in      \\F:DAVEC1\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 27      I27     delete bogus prototypes     
08-29-92@16:19:18 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 28      I28     Null-term. unicode strings (#4650); misc. cleanup     
08-29-92@16:19:18 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermcfg.h 8       I1768714more flexible init; debug prints    
09-10-92@16:57:54 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 29      I29     more flexible init; debug prints     
10-17-92@14:30:34 (Sat)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.h 14      I14     Bug #9915 - Cleanup DDK source     
10-17-92@14:31:47 (Sat)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermcmn.c 1       I1      Split sermouse.c into sermcmn.c and sermdep.c     
10-17-92@14:32:15 (Sat)  lees        addfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermdep.c 1       I1      Split sermouse.c into sermcmn.c and sermdep.c     
10-17-92@14:33:57 (Sat)  lees        delfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.c 30      I30     Split sermouse.c into sermcmn.c and sermdep.c     
10-31-92@13:59:43 (Sat)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermcmn.c 2       I2      Autogenerate new ntddk.h header file     
10-31-92@13:59:49 (Sat)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermdep.c 2       I2      Autogenerate new ntddk.h header file     
10-31-92@13:59:59 (Sat)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.h 15      I15     Autogenerate new ntddk.h header file     
11-01-92@15:50:55 (Sun)  NTX86BLD    in      \\D:NTX86BLD\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermdep.c 3       I3      typo     
11-20-92@20:02:57 (Fri)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermdep.c 4       I4      Export buffered I\O characteristic     
11-27-92@10:02:08 (Fri)  DARRYLH     in      \\D:DARRYLH\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermdep.c 5       I5      Back out new buffered I\O flag     
12-04-92@20:17:24 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermcmn.c 3       I3      Multiple port connects; non-exclusive device objects     
12-04-92@20:17:38 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermdep.c 6       I6      Multiple port connects; non-exclusive device objects     
12-04-92@20:18:05 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.h 16      I16     Multiple port connects; non-exclusive device objects     
12-17-92@11:21:26 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermcmn.c 4       I4      Use UnitId now that USER sends it     
01-15-93@12:27:13 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermcmn.c 5       I5      Fixes bugs 1446, 5961, 7303, and 7538     
01-15-93@12:27:20 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermdep.c 7       I7      Fixes bugs 1446, 5961, 7303, and 7538     
01-15-93@12:27:44 (Fri)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.h 17      I17     Fixes bugs 1446, 5961, 7303, and 7538     
02-11-93@12:24:31 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermcmn.c 6       I6      Fixes bug #10693     
02-11-93@12:24:38 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermdep.c 8       I8      Fixes bug #10693     
02-11-93@12:24:46 (Thu)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.h 18      I18     Fixes bug #10693     
02-15-93@16:16:08 (Mon)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermdep.c 9       I9      Fix bug #11391     
02-15-93@16:16:08 (Mon)  lees        delfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermcmn.c 7       I7      Works on MIPS now, plus Logitech support    
02-15-93@16:16:08 (Mon)  lees        delfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermdep.c 10      I10     Works on MIPS now, plus Logitech support    
02-15-93@16:16:08 (Mon)  lees        delfile \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermouse.h 19      I19     Works on MIPS now, plus Logitech support    
02-15-93@16:16:08 (Mon)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\I386\sermcfg.h 9       I1768715Works on MIPS now, plus Logitech support    
02-15-93@16:16:08 (Mon)  lees        in      \\D:LEES2_D\NT\PRIVATE\NTOS\DD\SERMOUSE\i386\sermcfg.h 10      I1768716Showstopper #7175 plus error log and overflow reporting
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\kmpi\readme.txt ===
This directory contains early BlackComb code for Kernel Mode Printing and Imaging support.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\ksfilter\inf\usa\ksolay.txt ===
[strings]
;localizeable
Msft="Microsoft"
PlugIn_Olay="WDM Streaming IOverlay Property Set Interface Handler"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\ksfilter\inf\usa\trimedia.txt ===
[Strings]
;
; Non-localizeable macros
;
SERVICE_KERNEL_DRIVER=1
SERVICE_DEMAND_START=3
SERVICE_ERROR_NORMAL=1
REG_EXPAND_SZ=0x00020000
REG_DWORD=0x00010001

;
;Localizeable         
;

Msft="Microsoft"
PhilipsMfg="Philips Semiconductor"
MsftMfg="Microsoft"
TriMedia.DeviceDesc="Philips TriMedia TM1 Media Processor"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\ksfilter\inf\usa\ksfnspec.txt ===
[strings]
;localizeable
Msft="Microsoft"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\ksfilter\inf\usa\swenum.txt ===
[Strings]
; non-localizable
Msft="Microsoft"

SERVICE_KERNEL_DRIVER=1
SERVICE_DEMAND_START=3
SERVICE_ERROR_NORMAL=1

REG_SZ=0x00000000
REG_MULTI_SZ=0x00010000
REG_EXPAND_SZ=0x00020000
REG_BINARY=0x00000001
REG_DWORD=0x00010001

; localizeable
SWENUM.DeviceDesc="Plug and Play Software Device Enumerator"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\ksfilter\inf\usa\freedom.txt ===
[Strings]
;
; Non-localizeable macros
;
KSCATEGORY_AUDIO="{6994AD04-93EF-11D0-A3CC-00A0C9223196}"
KSCATEGORY_COMMUNICATIONS_RENDER="{65e8773e-8f56-11d0-a3b9-00a0c9223196}"
KSNAME_Filter="{9B365890-165F-11D0-A195-0020AFD156E4}"
Freedom.CLSID="{19088D40-A4AE-11d0-833B-0000F822FE8A}"
Proxy.CLSID="{17CCA71B-ECD7-11D0-B908-00A0C9223196}"

SERVICE_KERNEL_DRIVER=1
SERVICE_DEMAND_START=3
SERVICE_ERROR_NORMAL=1
REG_EXPAND_SZ=0x00020000
REG_DWORD=0x00010001

;
;Localizeable         
;

Msft="Microsoft"
DiamondMfg="Diamond Multimedia"
Freedom.DeviceDesc="Diamond Multimedia PCI Monster Sound"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\ksfilter\ks\ksshell.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Windows Driver Model Title _PID_GUIDWindows Driver Model Connection and Streaming Architecture Bryan Woodruff, Tom O'Rourke, and George Shaw Normal.dot Dale Sather Microsoft Word 8.0@\\msprint44\CORPE 26/2011 (MC2N) 172.31.224.246 Ne01: winspool \\msprint44\CORPE 26/2011 (MC2N) 172.31.224.246 \\msprint44\CORPE 26/2011 (MC2N Letter \\msprint44\CORPE 26/2011 (MC2N Letter TITLE  \* MERGEFORMAT  Windows Driver Model Kernel Streaming Filter Shell Functional Specification - Draft Authors:  Dale Sather Revision 0.0.00,   DATE \@ "d MMMM, yyyy" \* MERGEFORMAT  27 October, 1998  TOC \o "1-4"  Introduction  PAGEREF _Toc430575266 \h  Intended Audience  PAGEREF _Toc430575267 \h  Document Organization  PAGEREF _Toc430575268 \h  Filter Shell Overview  PAGEREF _Toc430575269 \h  Goals  PAGEREF _Toc430575270 \h  Concepts  PAGEREF _Toc430575271 \h  2.2.1 Transport:  Pins, Queues and Pipes  PAGEREF _Toc430575272 \h  2.2.2 Automation  PAGEREF _Toc430575273 \h  Organization  PAGEREF _Toc430575274 \h  2.3.1 Devices  PAGEREF _Toc430575275 \h  2.3.2 Filter Factories  PAGEREF _Toc430575276 \h  2.3.3 Filters  PAGEREF _Toc430575277 \h  2.3.4  PAGEREF _Toc430575278 \h  2.3.5 Nodes  PAGEREF _Toc430575279 \h  2.3.6 Allocators  PAGEREF _Toc430575280 \h  2.3.7 Clocks  PAGEREF _Toc430575281 \h  2.3.8 Queues  PAGEREF _Toc430575282 \h  2.3.9 Pipes  PAGEREF _Toc430575283 \h  Error! Bookmark not defined. Delivery  PAGEREF _Toc430575284 \h  Reference  PAGEREF _Toc430575285 \h  Descriptors  PAGEREF _Toc430575286 \h  3.1.1 Device Descriptor: KSSHELLDEVICE_DESCRIPTOR  PAGEREF _Toc430575287 \h  3.1.2 Filter Descriptor: KSSHELLFILTER_DESCRIPTOR  PAGEREF _Toc430575288 \h  3.1.3 Pin Descriptor: KSSHELLPIN_DESCRIPTOR  PAGEREF _Toc430575289 \h  3.1.4 Node Descriptor: KSSHELLNODE_DESCRIPTOR  PAGEREF _Toc430575290 \h  3.1.5 Allocator Descriptor: KSSHELLALLOCATOR_DESCRIPTOR  PAGEREF _Toc430575291 \h  3.1.6 Clock Descriptor: KSSHELLCLOCK_DESCRIPTOR  PAGEREF _Toc430575292 \h  3.1.7 Queue Descriptor: KSSHELLQUEUE_DESCRIPTOR  PAGEREF _Toc430575293 \h  Dispatch Tables  PAGEREF _Toc430575294 \h  3.2.1 Device Dispatch Table: KSSHELLDEVICE_DISPATCH  PAGEREF _Toc430575295 \h  3.2.1.1 Device Pre-Create  PAGEREF _Toc430575296 \h  3.2.1.2 Device Create  PAGEREF _Toc430575297 \h  3.2.1.3 Device PnP Start  PAGEREF _Toc430575298 \h  3.2.1.4 Device PnP Query Stop  PAGEREF _Toc430575299 \h  3.2.1.5 Device PnP Cancel Stop  PAGEREF _Toc430575300 \h  3.2.1.6 Device PnP Stop  PAGEREF _Toc430575301 \h  3.2.1.7 Device PnP Query Remove  PAGEREF _Toc430575302 \h  3.2.1.8 Device PnP Cancel Remove  PAGEREF _Toc430575303 \h  3.2.1.9 Device PnP Remove  PAGEREF _Toc430575304 \h  3.2.1.10 Device PnP Query Capabilities  PAGEREF _Toc430575305 \h  3.2.2 Filter Dispatch Table: KSSHELLFILTER_DISPATCH  PAGEREF _Toc430575306 \h  3.2.2.1 Filter Pre-Create  PAGEREF _Toc430575307 \h  3.2.2.2 Filter Create  PAGEREF _Toc430575308 \h  3.2.2.3 Filter Close  PAGEREF _Toc430575309 \h  3.2.2.4 Filter Power  PAGEREF _Toc430575310 \h  3.2.3 Pin Dispatch Table: KSSHELLPIN_DISPATCH  PAGEREF _Toc430575311 \h  3.2.3.1 Pin Pre-Create  PAGEREF _Toc430575312 \h  3.2.3.2 Pin Create  PAGEREF _Toc430575313 \h  3.2.3.3 Pin Close  PAGEREF _Toc430575314 \h  3.2.3.4 Pin Power  PAGEREF _Toc430575315 \h  3.2.3.5 Pin Set Device State  PAGEREF _Toc430575316 \h  3.2.3.6 Pin Set Reset State  PAGEREF _Toc430575317 \h  3.2.3.7 Pin Handshake  PAGEREF _Toc430575318 \h  3.2.4 Node Dispatch Table: KSSHELLNODE_DISPATCH  PAGEREF _Toc430575319 \h  3.2.4.1 Node Pre-Create  PAGEREF _Toc430575320 \h  3.2.4.2 Node Create  PAGEREF _Toc430575321 \h  3.2.4.3 Node Close  PAGEREF _Toc430575322 \h  3.2.4.4 Node Power  PAGEREF _Toc430575323 \h  3.2.5 Allocator Dispatch Table: KSSHELLALLOCATOR_DISPATCH  PAGEREF _Toc430575324 \h  3.2.5.1 Allocator Pre-Create  PAGEREF _Toc430575325 \h  3.2.5.2 Allocator Create  PAGEREF _Toc430575326 \h  3.2.5.3 Allocator Close  PAGEREF _Toc430575327 \h  3.2.5.4 Allocator Power  PAGEREF _Toc430575328 \h  3.2.6 Clock Dispatch Table: KSSHELLCLOCK_DISPATCH  PAGEREF _Toc430575329 \h  3.2.6.1 Clock Pre-Create  PAGEREF _Toc430575330 \h  3.2.6.2 Clock Create  PAGEREF _Toc430575331 \h  3.2.6.3 Clock Close  PAGEREF _Toc430575332 \h  3.2.6.4 Clock Power  PAGEREF _Toc430575333 \h  3.2.7 Queue Dispatch Table: KSSHELLQUEUE_DISPATCH  PAGEREF _Toc430575334 \h  3.2.7.1 Queue Construct  PAGEREF _Toc430575335 \h  3.2.7.2 Queue Destruct  PAGEREF _Toc430575336 \h  3.2.7.3 Queue Notify  PAGEREF _Toc430575337 \h  3.2.7.4 Queue Cancel  PAGEREF _Toc430575338 \h  Objects  PAGEREF _Toc430575339 \h  3.3.1 Device Object: KSSHELLDEVICE  PAGEREF _Toc430575340 \h  3.3.2 Filter Factory Object: KSSHELLFILTERFACTORY  PAGEREF _Toc430575341 \h  3.3.3 Filter Object: KSSHELLFILTER  PAGEREF _Toc430575342 \h  3.3.4 Pin Factory Object: KSSHELLPINFACTORY  PAGEREF _Toc430575343 \h  3.3.5 Pin Object: KSSHELLPIN  PAGEREF _Toc430575344 \h  3.3.6 Node Object: KSSHELLNODE  PAGEREF _Toc430575345 \h  3.3.7 Allocator Object: KSSHELLALLOCATOR  PAGEREF _Toc430575346 \h  3.3.8 Clock Object: KSSHELLCLOCK  PAGEREF _Toc430575347 \h  3.3.9 Queue Object: KSSHELLQUEUE  PAGEREF _Toc430575348 \h  3.3.10 Pipe Object: KSSHELLPIPE  PAGEREF _Toc430575349 \h  Functions  PAGEREF _Toc430575350 \h  3.4.1 KsShellAcquireControl  PAGEREF _Toc430575351 \h  3.4.2 KsShellReleaseControl  PAGEREF _Toc430575352 \h  3.4.3 KsShellAddEvent  PAGEREF _Toc430575353 \h  3.4.4 KsShellGenerateEvents  PAGEREF _Toc430575354 \h  3.4.5 KsMergeAutomationTables  PAGEREF _Toc430575355 \h  3.4.6 KsHandleAutomationIoControl  PAGEREF _Toc430575356 \h  3.4.7 KsReferenceAutomationTable  PAGEREF _Toc430575357 \h  3.4.8 KsReleaseAutomationTable  PAGEREF _Toc430575358 \h  3.4.9 KsShellInitializeDriver  PAGEREF _Toc430575359 \h  3.4.10 KsShellAddDevice  PAGEREF _Toc430575360 \h  3.4.11 KsShellCreateDevice  PAGEREF _Toc430575361 \h  3.4.12 KsShellInitializeDevice  PAGEREF _Toc430575362 \h  3.4.13 KsShellTerminateDevice  PAGEREF _Toc430575363 \h  3.4.14 KsShellAcquireDevice  PAGEREF _Toc430575364 \h  3.4.15 KsShellReleaseDevice  PAGEREF _Toc430575365 \h  3.4.16 KsShellIncrementExistingObjectCount  PAGEREF _Toc430575366 \h  3.4.17 KsShellDecrementExistingObjectCount  PAGEREF _Toc430575367 \h  3.4.18 KsShellCreateFilterFactory  PAGEREF _Toc430575368 \h  3.4.19 KsShellSetDeviceClassesState  PAGEREF _Toc430575369 \h  3.4.20 KsShellStandardConnect  PAGEREF _Toc430575370 \h  3.4.21 KsShellTransferKsIrp  PAGEREF _Toc430575371 \h  3.4.22 KsShellAcquireLeadingEdge  PAGEREF _Toc430575372 \h  3.4.23 KsShellAcquireTrailingEdge  PAGEREF _Toc430575373 \h  3.4.24 KsShellAdvanceTrailingEdgeBytePosition  PAGEREF _Toc430575374 \h  3.4.25 KsShellReleaseLeadingEdge  PAGEREF _Toc430575375 \h  3.4.26 KsShellReleaseTrailingEdge  PAGEREF _Toc430575376 \h  3.4.27 KsShellAdvanceBytePosition  PAGEREF _Toc430575377 \h  3.4.28 KsShellAdvanceMappings  PAGEREF _Toc430575378 \h  3.4.29 KsShellSetPacketIndex  PAGEREF _Toc430575379 \h  3.4.30 KsShellQueueSetByteOffset  PAGEREF _Toc430575380 \h  3.4.31 KsShellQueueSetMappingIndex  PAGEREF _Toc430575381 \h  3.4.32 KsShellHandshake  PAGEREF _Toc430575382 \h  Introduction The Kernel Streaming Filter Shell extends the services offered by the Kernel Streaming class driver (KS.SYS), providing much of the code required to implement a filter driver compliant with the Windows Driver Model  Connection and Streaming Architecture specification. Intended Audience This document describes the kernel streaming filter shell, which simplifies the development of drivers compliant with the Windows Driver Model  Connection and Streaming Architecture. The reader should have a basic understanding of the NT driver model and its operation as well as the Connection and Streaming Architecture. This document provides background regarding the organization of the filter shell and specific documentation of the functions, structures and interfaces shared between the filter shell and its clients. Document Organization Section 2 of this document describes the organization of the filter shell and the conventions used in its construction. Section 3 provides reference information regarding the structures used to communicate between the filter shell and its clients. Filter Shell Overview Comprehensive filter implementation starting with a function call in DriverEntry. Implementation hidden behind device headers and object headers leaving the rest of device extensions and file contexts free for use by other class drivers and clients. Goals <<filter ease-of-implementation>> <<filter quality and interoperability>> <<deployment of KS enhancements>> <<first-class implementation:  pipes, genderless pins, instrumentation>> <<data flow optimization>> Concepts Transport:  Pins, Queues and Pipes The Kernel Streaming shell implements the latest improvements to the Kernel Streaming protocol.  Specifically, recent changes involve the assignment of allocators to pins and the identification of portions of a graph that can be served by a single allocator (such a portion is called a pipe).  Although the Kernel Streaming specification explains the notion of a pipe, the shell provides a specific implementation that requires some explanation here. The simplest pipe is one consisting of a single connection.  The source pin in the connection is an allocator requestor; that is, it is assigned an allocator and uses that allocator to get new frames and free unneeded frames.  The sink pin in the connection processes frames sent to it (in a streaming IOCTL) by the source pin and returns them (by completing the IOCTL).  The connection is like a conveyor belt.  Frames travel in a circuit bearing payload in one direction and returning empty in the other direction. When the source pin is sending write IOCTLs, payload travels in the part of the circuit moving frames from the source to the sink.  When the source pin is sending read IOCTLs, payload travels in the part of the circuit moving frames from the sink to the source. The shell implements this circuit using three components: a pin, a queue and a requestor.  The pin component is responsible for the pin s external behavior: sourcing and dispatching streaming IOCTL IRPs.  The queue component supports access to the frames as they pass through a particular point in the circuit.  The requestor, a component not explicitly exposed in the shell/client interface, implements the requestor behavior of a source pin, allocating and deallocating frames.  For the purposes of this discussion, we will regard the requestor as part of the source pin. Combining the requestor with the source pin, the components are connected as shown: If data is travelling from the source pin to the sink pin, the queue associated with the source pin allows the filter on the left (the data source) to fill frames with payload.  Filled frames are passed to the pin component to be sent to the sink pin.  The queue associated with the sink pin allows the filter on the right (the data sink) to consume the payload in the frames after the frames arrive at the sink pin. This example seems to indicate that there is a one-to-one correspondence between pins and queues.  This is not true in general.  When connections share allocators, frames can, for example, arrive at a sink pin and emerge from a source pin on the same filter.  In this case, the two pins share a single queue.  This figure shows a pipe that passes through a transform filter: The filter on the left is the data source.  The filter on the right is the data sink.  Notice that in the transform filter (in the center), both the source and the sink pin share a single queue.  The filter accesses frames once as they pass from the sink pin to the source pin through the queue.  On the return trip, the empty frames bypass the queue because the filter has no need to access the frames. In general, there is one queue per filter per pipe.  When a pin is at the end of a pipe, it has its own queue.  When multiple pins in the same filter are in a single pipe, they share one queue. The shell acknowledges this relationship through the pipe object.  The shell pipe object represents the section of a pipe that passes through a particular filter.  It is bound explicitly to all the pins to which it is associated and to the queue that provides access to pipe s frames in that filter. Clients of the filter shell use the queue object to access frames: to fill frames with data, to read data from frames or to modify data in frames.  Clients of the filter shell use the pipe object to determine the relationship between queues and pins.  For examples, a one-in, one-out transform filter that can operate on data in-place, such as the one in the example above, needs to handle two queues when both pins are at the end of a pipe and one queue when a pipe passes through the filter.  If the client has a dispatch function for queue construction, it can check the pin count on the pipe associated with the queue to determine if the queue is associated with both pins or just one: QueueConstruct(     IN PKSSHELLQUEUE Queue     if (Queue->OwnerPipe->PinCount == 2) {         // In-place:  there is only one queue for two pins.     } else if (Queue->OwnerPipe->MasterPin->Id == 0) {         // Two queues.  This is the queue for pin 0.     } else {         // Two queues.  This is the queue for pin 1.     } Automation Automation is the term given to the consolidation of Kernel Streaming properties, methods and events.  The Kernel Streaming Shell enhances automation by defining a structure that combines tables for all three types of automation. <<table merges>> Organization The filter shell implements a number of objects on behalf of its clients: Device   Corresponds to the WDM device object. Filter factory   Corresponds to one type of filter that the device can instantiate.  There can be many filter factories associated with a single device.  When a filter is created, the reference string appended to the device name indicates which filter factory is to generate the filter instance. Filter   An instance of a kernel streaming filter, generated by a filter factory.  A filter factory can generate any number of filters. Pin factory   Corresponds to one type of pin that a filter can instantiate.  An instance of a pin generated by a pin factory.  Depending on the characteristics of the pin type, the number of instances of that pin type may or may not be limited.  Some types of pins cannot be instantiated at all, while others can be instantiated any number of times. Node   An instance of a topology node.  Node instances provides access to node properties, methods and events.  Any number of instances of a node my be created.  Nodes can be instantiated as child objects of a filter or of a pin. Allocator   An instance of an allocator, which exposes a filter s capability to manage the allocation of frames. Clock   An instance of a clock, which supplies timing information regarding the operation of a filter. Queue   A container for streaming IRPs providing access to the packet headers and frames in an IRP.  Queues provide a client s principle   of the data stream. To implement and expose these objects, the filter shell defines a number of structures.  These structures fall into three main categories: Descriptors   Static structures supplied by the client to indicate the specific characteristics of a type of object.  There are descriptors for devices, filters, pins, nodes, allocators, clocks and queues.  Descriptors are linked by pointers in a hierarchical fashion so that a single device descriptor can reference, directly or indirectly, every descriptor associated with a device. Dispatch tables   Static structures attached to descriptors that provide a table of callbacks to refine object behavior.  Dispatch tables and individual fields in a dispatch table are always optional.  Typical clients implement very few callbacks.  All descriptor structures reference corresponding dispatch tables. Objects   Dynamic structures that reflect the characteristics and state of an object.  Object structures contain a pointer to corresponding descriptors for the convenience of the client. ZIPI: A MIDI-like serial data format for musical instruments. Provides a more hierarchical method of addressing instruments, and extensible command set. Devices The KS shell implements device behavior on behalf of its clients.  The implementation addresses PnP and power management for both hardware and software as well as filter creation.  As with all shell objects, device behavior is specified statically with a descriptor and may be refined dynamically through callbacks to client dispatch functions. The client has a number of options regarding the way in which the shell device is created and initialized.  The easiest approach is to call KsShellInitializeDriver in the driver s DriverEntry routine: NTSTATUS DriverEntry(     IN PDRIVER_OBJECT DriverObject,     IN PUNICODE_STRING RegistryPathName     )     return KsShellInitializeDriver(DriverObject,RegistryPathName,&DeviceDescriptor); KsShellInitializeDriver associates a device descriptor with the driver object and installs the shell s IRP and AddDevice dispatch functions.  The shell handles AddDevice and all PnP IRPs, giving the client the opportunity to refine PnP behavior through dispatch functions supplied by the device descriptor.  If the device descriptor supplies filter descriptors, filter factories are created for each filter descriptor.  This single call, along with the static descriptor, is all the code required for generic filter behavior. Client drivers that need to dispatch AddDevice or IRPs themselves may replace shell dispatch functions by installing replacements after KsShellInitializeDriver is called and before DriverEntry returns.  A client may also decline to call KsShellInitializeDriver at all, installing dispatch functions as required.  The function KsShellSetMajorFunctionHandler installs IRP dispatch routines for any IRP, and KsShellDispatchIrp dispatches any IRP.  KsShellAddDevice normally handles AddDevice, but this function simply finds the device descriptor associated with the driver object and calls KsShellCreateDevice.  If the client supplies its own AddDevice function, it may call KsShellCreateDevice to create the device using the supplied descriptor: status = KsShellCreateDevice(DriverObject,PhysicalDeviceObject,&DeviceDescriptor); KsShellCreateDevice calls IoCreateDevice to create the functional device object.  Client drivers may create their own functional device objects and simply initialize the FDO using KsShellInitializeDevice. KsShellInitializeDevice assumes the device extension has a valid KS device header or has the value NULL where the device header would normally be (offset 0 in the extension).  KsShellTerminateDevice is the matching termination function for KsShellInitializeDevice.  If the shell dispatches the PnP remove IRP, this function will be called automatically. The shell device maintains a mutual exclusion mechanism to synchronize filter creation and closure with code that requires that the filter population remain stable for that device.  The device is acquired and released in this sense using KsShellAcquireDevice and KsShellReleaseDevice.  Most clients will not require the synchronization provided by these functions. The shell device also maintains a count of existing objects for use in implementing power management behavior.  This count is altered by calling KsShellIncrementExistingObjectCount and KsShellDecrementExistingObjectCount. Filter Factories Filters Nodes Allocators Clocks Queues Delivery The filter shell is part of KS.SYS.  Client source files should include KSSHELL.H, and client drivers must be linked with the import library KS.LIB.  Client code may be written in C or C++. Reference Descriptors Device Descriptor: KSSHELLDEVICE_DESCRIPTOR typedef struct {     const KSSHELLDEVICE_DISPATCH* Dispatch;     ULONG FilterDescriptorsCount;     const KSSHELLFILTER_DESCRIPTOR* FilterDescriptors;     ULONG ExtensionSize;     ULONG Flags; } KSSHELLDEVICE_DESCRIPTOR; Member Description Dispatch An optional pointer to the client dispatch table for the device.  A dispatch table must be attached to the descriptor if any client callbacks are to called by the device implementation. FilterDescriptorsCount The number of filter descriptors in the array of filter descriptors.  Zero is a legal value for this field.  Filter descriptors may be dynamically associated with the device using the function KsShellCreateFilterFactory. FilterDescriptors Points to the array of filter descriptors.  May be null. Filter descriptors may be dynamically associated with the device using the function KsShellCreateFilterFactory. ExtensionSize Optionally indicates the size in bytes of the device extension.  A value of zero indicates the client does not require any space of its own in the extension.  Any other value must include the space required for the KS device header. Flags Flags specifying the behavior of the device, as described in the following table. Flags Description KSSHELLDEVICE_FLAG_START_IN_WORKER Indicates that PnP start IRP processing should be performed in a work queue item.  If this flag is specified, the device responds to the PnP start IRP by queuing a work queue item and returning STATUS_PENDING.  The worker processes and completes the IRP when it runs.  This option is provided for clients that need to load other drivers while starting.  KoCreateInstance is an example of a function that will cause a driver to be loaded. KSSHELLDEVICE_FLAG_REGISTER_INTERFACES Indicates that filter categories supplied in filter descriptors should be registered as PnP device interfaces.  Most hardware drivers should supply this flag.  Software filters enumerated by SWENUM do not require it. Filter Descriptor: KSSHELLFILTER_DESCRIPTOR typedef struct {     const KSSHELLFILTER_DISPATCH* Dispatch;     const KSAUTOMATION_TABLE* AutomationTable;     const GUID* ReferenceGuid;     ULONG PinDescriptorsCount;     ULONG PinDescriptorSize;     const KSSHELLPIN_DESCRIPTOR* PinDescriptors;     ULONG CategoriesCount;     const GUID* Categories;     ULONG NodeDescriptorsCount;     ULONG NodeDescriptorSize;     const KSSHELLNODE_DESCRIPTOR* NodeDescriptors;     ULONG ConnectionsCount;     const KSTOPOLOGY_CONNECTION* Connections; } KSSHELLFILTER_DESCRIPTOR; Member Description Dispatch An optional pointer to the client dispatch table for the filter.  A dispatch table must be attached to the descriptor if any client callbacks are to called by the filter implementation. AutomationTable Optional pointer to an automation table indicating the properties, methods and events implemented by the client for this filter type.  This automation is merged with the automation table supplied by the filter shell for all filters.  If this table lists any properties, methods or events already implemented by the filter shell, the client s implementation supersedes the shell s implementation. ReferenceGuid An optional pointer to a GUID which is the binary representation of the Unicode reference string identifying this filter type.  Other methods of supplying a reference string require that the filter descriptor be registered using KsShellCreateFilterFactory. PinDescriptorsCount The number of pin descriptors in the pin descriptors array.  All filters expose at least two pins, so values smaller than two are illegal. PinDescriptorSize The size in bytes of the structures in the pin descriptor array.  This value must be a multiple of eight and at least sizeof(KSSHELLPIN_DESCRIPTOR).  Larger values allow client-specific descriptor information to be appended to the pin descriptors. PinDescriptors The array of pin descriptors.  All filters have pins, so this field is not optional. CategoriesCount The number of categories in the categories array.  Zero is a legal value for this field. Categories The array of categories.  The shell registers a device interface for each category.  This field may be null. NodeDescriptorsCount The number of node descriptors in the node descriptors array.  Because it is possible for a filter to contain no nodes, zero is a legal value for this field. NodeDescriptorSize The size in bytes of the structures in the node descriptor array.  This value must be a multiple of eight and at least sizeof(KSSHELLNODE_DESCRIPTOR).  Larger values allow client-specific descriptor information to be appended to the pin descriptors.  If there are no nodes in the array, this value is ignored. NodeDescriptors The array of node descriptors.  This field may be null. ConnectionsCount The number of connections in connections array.  All filters have connections, so this field may not be zero. Connections The array of connections.  This field is not optional. Pin Descriptor: KSSHELLPIN_DESCRIPTOR typedef struct {     const KSSHELLPIN_DISPATCH* Dispatch;     PKSAUTOMATION_TABLE AutomationTable;     KSPIN_DESCRIPTOR PinDescriptor;     ULONG InstancesPossible;     ULONG InstancesNecessary;     ULONG InstancesGlobal;     PFNKSINTERSECTHANDLEREX IntersectHandler;     PKSALLOCATOR_FRAMING_EX AllocatorFraming;     const KSSHELLQUEUE_DESCRIPTOR* QueueDescriptor;     const KSSHELLALLOCATOR_DESCRIPTOR* AllocatorDescriptor;     const KSSHELLCLOCK_DESCRIPTOR* ClockDescriptor; } KSSHELLPIN_DESCRIPTOR; Member Description Dispatch An optional pointer to the client dispatch table for the pin.  A dispatch table must be attached to the descriptor if any client callbacks are to called by the pin implementation. AutomationTable Optional pointer to an automation table indicating the properties, methods and events implemented by the client for this pin type.  This automation is merged with the automation table supplied by the filter shell for all pins.  If this table lists any properties, methods or events already implemented by the filter shell, the client s implementation supersedes the shell s implementation. PinDescriptor The pin descriptor defined in KS.SYS. InstancesPossible The number of instances of this pin that may exist on any given filter.  A value of KSINSTANCE_INDETERMINATE indicates that any number of instances may created.  This value will be zero for any pin with communication type KSPIN_COMMUNICATION_NONE. InstancesNecessary The number of instances of this pin that must exist on any given filter in order for the filter to function. InstancesGlobal The number of instances of this pin that may exist on all filters generated by the filter factory.  This is useful primarily for filters representing hardware resources.  All other filters should use the value KSINSTANCE_INDETERMINATE for all pins. IntersectHandler The data intersection handler function for the pin.  If this field is null, the pin will only handle data intersection queries for data ranges with the specifier KSDATAFORMAT_SPECIFIER_NONE.  The intersect handler function receives a single data range from the query and a single data range from the pins list of data ranges.  The type, subtype and specifier GUIDs of these ranges are guaranteed to match, though some may be wildcards.  The function either indicates the data ranges do not match, or it produces the best data format in the intersection of the two data ranges. AllocatorFraming The allocator framing for the pin.  If this field is null, the pin will report that it does not support the allocator framing property. QueueDescriptor A pointer to the descriptor for the queue associated with this pin.  Pins that support streaming have a queue descriptor unless the client supplies its own implementation of the queue. AllocatorDescriptor A pointer to the descriptor for the allocator that the pin will implement.  If the pin has no allocator descriptor, it will not implement an allocator. ClockDescriptor A pointer to the descriptor for the clock that the pin will implement.  If the pin has no clock descriptor, it will not implement a clock. Node Descriptor: KSSHELLNODE_DESCRIPTOR typedef struct {     const KSSHELLNODE_DISPATCH* Dispatch;     PKSAUTOMATION_TABLE AutomationTable;     const GUID * Type;     const GUID * Name; } KSSHELLNODE_DESCRIPTOR; Member Description Dispatch An optional pointer to the client dispatch table for the node.  A dispatch table must be attached to the descriptor if any client callbacks are to called by the node implementation. AutomationTable Optional pointer to an automation table indicating the properties, methods and events implemented by the client for this node. The type GUID for the node.  This is not an optional field. The name GUID for the node.  If this optional field is zero, the name will be the generic one assigned based on the node type. Allocator Descriptor: KSSHELLALLOCATOR_DESCRIPTOR typedef struct {     const KSSHELLALLOCATOR_DISPATCH* Dispatch;     PKSAUTOMATION_TABLE AutomationTable; } KSSHELLALLOCATOR_DESCRIPTOR; Member Description Dispatch An optional pointer to the client dispatch table for the allocator.  A dispatch table must be attached to the descriptor if any client callbacks are to called by the allocator implementation. AutomationTable Optional pointer to an automation table indicating the properties, methods and events implemented by the client for this allocator type.  This automation is merged with the automation table supplied by the filter shell for all allocators.  If this table lists any properties, methods or events already implemented by the filter shell, the client s implementation supersedes the shell s implementation. Clock Descriptor: KSSHELLCLOCK_DESCRIPTOR typedef struct {     const KSSHELLCLOCK_DISPATCH* Dispatch;     PKSAUTOMATION_TABLE AutomationTable; } KSSHELLCLOCK_DESCRIPTOR; Member Description Dispatch An optional pointer to the client dispatch table for the clock.  A dispatch table must be attached to the descriptor if any client callbacks are to called by the clock implementation. AutomationTable Optional pointer to an automation table indicating the properties, methods and events implemented by the client for this clock type.  This automation is merged with the automation table supplied by the filter shell for all clocks.  If this table lists any properties, methods or events already implemented by the filter shell, the client s implementation supersedes the shell s implementation. Queue Descriptor: KSSHELLQUEUE_DESCRIPTOR <<explain leading/trailing edge>> <<indicate (enforce?) flag dependencies>> typedef struct {     const KSSHELLQUEUE_DISPATCH* Dispatch;     ULONG Flags; #define KSSHELLQUEUE_FLAG_GENERATE_MAPPINGS 0x00000001 #define KSSHELLQUEUE_FLAG_DISTINCT_TRAILING_EDGE 0x00000002 #define KSSHELLQUEUE_FLAG_DISPATCH_LEVEL_NOTIFY 0x00000004 #define KSSHELLQUEUE_FLAG_USE_SPIN_LOCK 0x00000008     ULONG MaxMappingByteCount; } KSSHELLQUEUE_DESCRIPTOR; Member Description Dispatch An optional pointer to the client dispatch table for the queue.  A dispatch table must be attached to the descriptor if any client callbacks are to called by the queue implementation. Flags Flags specifying the queue s behavior. MaxMappingByteCount The maximum size in bytes of a mapping.  This value is ignored unless the flag field specifies KSSHELLQUEUE_FLAG_GENERATE_MAPPINGS. Flags Description KSSHELLQUEUE_FLAG_GENERATE_MAPPINGS Indicates that the queue should generate mappings for scatter/gather bus mastering. KSSHELLQUEUE_FLAG_DISTINCT_TRAILING_EDGE Indicates that the queue trailing edge should not be automatically updated to match the position of the leading edge. KSSHELLQUEUE_FLAG_DISPATCH_LEVEL_NOTIFY Indicates that the callback function notifying the client that an IRP has arrived may be called at dispatch level.  If this flag is not present, the notification callback will be called at passive level even if the IRP arrives at dispatch level. KSSHELLQUEUE_FLAG_USE_SPIN_LOCK Indicates that access to the queue should be synchronized with a spin lock.  This flag should be present if either edge is to be acquired by the client at dispatch level.  IRP arrival at dispatch level does not require the use of a synchronization spin lock. Dispatch Tables Device Dispatch Table: KSSHELLDEVICE_DISPATCH The device dispatch table allows the client supply handling functions for device-related processing.  All handling functions are optional as is the dispatch table itself.  Clients that do not need to supply any device dispatch functions may provide a null dispatch table pointer in the device descriptor. Most functions in the device dispatch table concern the processing of PnP IRPs.  The two create functions are the exceptions.  These are called during the AddDevice phase of device initialization. typedef struct {     PFNKSSHELLDEVICECREATE PreCreate;     PFNKSSHELLDEVICECREATE Create;     PFNKSSHELLDEVICEPNPSTART PnpStart;     PFNKSSHELLDEVICEIRP PnpQueryStop;     PFNKSSHELLDEVICEIRPVOID PnpCancelStop;     PFNKSSHELLDEVICEIRPVOID PnpStop;     PFNKSSHELLDEVICEIRP PnpQueryRemove;     PFNKSSHELLDEVICEIRPVOID PnpCancelRemove;     PFNKSSHELLDEVICEIRPVOID PnpRemove;     PFNKSSHELLDEVICEIRP PnpQueryCapabilities; } KSSHELLDEVICE_DISPATCH; Device Pre-Create This dispatch function is called during the initialization of the shell s device implementation at the AddDevice phase of device startup.  At the point where this function is called, the WDM device object has been created, the shell device object has been instantiated and initialized, but the KS device header has not been allocated.  If the client has a reason to create its own device header (for example, it wants to supply its own IRP dispatch table), it may do so in this function.  This is also an opportunity for the client to associate context information with the shell device object or initialize the device extension, though both of these things can be done during device create.   As with all KS devices, the first pointer in the extension is reserved for the KS device header.  If the client does not supply a device header, the shell will do so after this function returns successfully.  Unless there is some clear motivation for the client to create the header, this should be left up to the shell.  This callback is defined primarily for clients that want to create the header.  Other clients should use the device create callback for device initialization. If this function returns an unsuccessful status, the AddDevice will fail.  Pending status is not legal because no IRP is involved. This function is called at passive level only. NTSTATUS MyDevicePreCreate( IN PKSSHELLDEVICE ShellDevice Parameters: ShellDevice   Contains a pointer to the device being created. Return Values: Returns STATUS_SUCCESS, else some error. Device Create This dispatch function is called during the initialization of the shell s device implementation at the AddDevice phase of device startup.  At the point at which this function is called, the WDM device object has been created, the shell device object has been instantiated and initialized, and the KS device header has been allocated, possibly by the client in the device pre-create.  This is an opportunity for the client to associate context information with the shell device object or initialize the device extension.   If this function returns an unsuccessful status, the AddDevice will fail.  Pending status is not legal because no IRP is involved. This function is called at passive level only. NTSTATUS MyDeviceCreate( IN PKSSHELLDEVICE ShellDevice Parameters: ShellDevice   Contains a pointer to the device being created. Return Values: Returns STATUS_SUCCESS, else some error. Device PnP Start This dispatch function is called when a PnP start IRP (IRP_MN_START_DEVICE) is dispatched by the device.  This function is optional and will typically be provided by clients that need to evaluate assigned resources.  The start is guaranteed to succeed if this function succeeds.   Some clients require that processing of the start IRP occur in a worker thread rather than the thread that dispatches the IRP.  This is the case if the client wishes to load drivers (via KoCreateInstance, for example).  Such clients KSSHELLDEVICE_FLAG_START_IN_WORKER in the device descriptor flags field.  This flag causes the shell to return STATUS_PENDING in response to the start IRP and complete the processing of the IRP in a worker thread. Resource lists are extracted from the IRP for the convenience of the client. The device is acquired by the shell before this function is called and released after this function returns.  This function should not return STATUS_PENDING. This function is called at passive level only. NTSTATUS MyDevicePnpStart(     IN PKSSHELLDEVICE ShellDevice,     IN PIRP Irp,     IN PCM_RESOURCE_LIST TranslatedResourceList OPTIONAL,     IN PCM_RESOURCE_LIST UntranslatedResourceList OPTIONAL     ); Parameters: ShellDevice   Contains a pointer to the device being started.  Contains a pointer to the start IRP. TranslatedResourceList   Contains a pointer to the list of translated resources as obtained from the IRP.  If there are no resources assigned to the device, this parameter will be null. UntranslatedResourceList   Contains a pointer to the list of untranslated resources as obtained from the IRP.  If there are no resources assigned to the device, this parameter will be null. Return Values: Returns STATUS_SUCCESS, else some error. Device PnP Query Stop This dispatch function is called when a PnP query stop IRP (IRP_MN_QUERY_STOP_DEVICE) is dispatched by the device.  This function is optional and will be provided by clients that wish to prevent the stopping of the device for some reason and by clients that need to disallow activity that would otherwise prevent them from committing to a stop operation.  If this function is not provided, the shell will indicate that the stop operation may proceed. The device mutex is acquired by the shell before this function is called and released after this function returns.  This function should not return STATUS_PENDING.  This function is called at passive level only. NTSTATUS MyDevicePnpQueryStop(     IN PKSSHELLDEVICE ShellDevice,     IN PIRP Irp     );  Parameters: ShellDevice   Contains a pointer to the device receiving the IRP.  Contains a pointer to the query stop IRP. Return Values: Returns STATUS_SUCCESS, else some error. Device PnP Cancel Stop This dispatch function is called when a PnP cancel stop IRP (IRP_MN_CANCEL_STOP_DEVICE) is dispatched by the device.  This function is optional and will typically be provided by clients that, on query stop, need to disallow activity that would otherwise prevent them from committing to a stop operation.  A call to this function would indicate to such clients that such activity may be allowed.  This function is called at passive level only. MyDevicePnpCancelStop(     IN PKSSHELLDEVICE ShellDevice,     IN PIRP Irp     );  Parameters: ShellDevice   Contains a pointer to the device receiving the IRP.  Contains a pointer to the cancel stop IRP. Return Values: None. Device PnP Stop This dispatch function is called when a PnP stop IRP (IRP_MN_STOP_DEVICE) is dispatched by the device.  This function is optional and will typically be provided by clients that need to detach from resources previously assigned by the PnP start IRP.  This function is called at passive level only. MyDevicePnpStop(     IN PKSSHELLDEVICE ShellDevice,     IN PIRP Irp     );  Parameters: ShellDevice   Contains a pointer to the device being stopped.  Contains a pointer to the stop IRP. Return Values: None. Device PnP Query Remove This dispatch function is called when a PnP query remove IRP (IRP_MN_QUERY_REMOVE_DEVICE) is dispatched by the device.  This function is optional and will be provided by clients that wish to prevent the removal of the device for some reason and by clients that need to disallow activity that would otherwise prevent them from committing to a remove operation.  If this function is not provided, the shell will indicate that the remove operation may proceed. The device mutex is acquired by the shell before this function is called and released after this function returns.  This function should not return STATUS_PENDING.  This function is called at passive level only. NTSTATUS MyDevicePnpQueryRemove(     IN PKSSHELLDEVICE ShellDevice,     IN PIRP Irp     );  Parameters: ShellDevice   Contains a pointer to the device receiving the IRP.  Contains a pointer to the query remove IRP. Return Values: Returns STATUS_SUCCESS, else some error. Device PnP Cancel Remove This dispatch function is called when a PnP cancel remove IRP (IRP_MN_CANCEL_REMOVE_DEVICE) is dispatched by the device.  This function is optional and will typically be provided by clients that, on query remove, need to disallow activity that would otherwise prevent them from committing to a remove operation.  A call to this function would indicate to such clients that such activity may be allowed.  This function is called at passive level only. MyDevicePnpCancelRemove(     IN PKSSHELLDEVICE ShellDevice,     IN PIRP Irp     );  Parameters: ShellDevice   Contains a pointer to the device receiving the IRP.  Contains a pointer to the cancel remove IRP. Return Values: None. Device PnP Remove This dispatch function is called when a PnP remove IRP (IRP_MN_REMOVE_DEVICE) is dispatched by the device.  This function is optional and will typically be provided by clients that need to free device-associated resources.  This function is called at passive level only. MyDevicePnpRemove(     IN PKSSHELLDEVICE ShellDevice,     IN PIRP Irp     );  Parameters: ShellDevice   Contains a pointer to the device receiving the IRP.  Contains a pointer to the remove IRP. Return Values: None. Device PnP Query Capabilities This dispatch function is called when a PnP query capabilities IRP (IRP_MN_QUERY_CAPABILITIES) is dispatched by the device.  This function is optional and will typically be provided by clients that need to supply information regarding power management capabilities. This function should not return STATUS_PENDING. <<more here as power management matures>>  This function is called at passive level only. NTSTATUS MyDevicePnpQueryCapabilities(     IN PKSSHELLDEVICE ShellDevice,     IN PIRP Irp     );  Parameters: ShellDevice   Contains a pointer to the device receiving the IRP.  Contains a pointer to the query capabilities IRP. Return Values: Returns STATUS_SUCCESS, else some error. Filter Dispatch Table: KSSHELLFILTER_DISPATCH Filter dispatch tables allow the client supply handling functions for filter-related processing.  All handling functions are optional as is the dispatch table itself.  Clients that do not need to supply any filter dispatch functions may provide a null dispatch table pointer in the filter descriptor. Functions in this table deal with the lifespan of  a filter (create and close), power management and the processing of frames. typedef struct {     PFNKSSHELLFILTERIRP PreCreate;     PFNKSSHELLFILTERIRP Create;     PFNKSSHELLFILTERIRP Close;     PFNKSSHELLFILTERIRP Power;     PFNKSSHELLFILTERPROCESS Process; } KSSHELLFILTER_DISPATCH; Filter Pre-Create This dispatch function is called when a filter is created.  At the point at which this function is called, no context has been associated with the file object and no KS object header has been allocated.  This function is optional and will typically be provided by clients that want to create their own file object context or KS file header.  A file object context or file header allocated by this function can be freed in the close dispatch function for the filter, otherwise the shell will free them using ExFreePool and KsFreeObjectHeader, respectively. If this function is not supplied, the shell will allocate the file object context and KS file header itself. The device mutex is acquired before this function is called and is released after this function returns.  This function should not return STATUS_PENDING.  This function is called at passive level only. NTSTATUS MyFilterPreCreate(     IN PKSSHELLFILTER ShellFilter,     IN PIRP Irp     );  Parameters: ShellFilter   Contains a pointer to the filter being created.  Contains a pointer to the create IRP which requested the creation of the filter. Return Values: Returns STATUS_SUCCESS, else some error. Filter Create This dispatch function is called when a filter is created.  At the point at which this function is called, the file object has an associated context, and the KS file header has been allocated.  This function is optional and will typically be provided by clients that want to initialize context and resources associated with the filter. If this function succeeds, the create operation is guaranteed to succeed. This function may return STATUS_PENDING, in which case the shell will not complete the IRP immediately.  Prior to returning STATUS_PENDING, the function must mark the IRP pending by calling IoMarkIrpPending.  Once processing of the IRP is complete, the client must complete the IRP by calling KsShellCompletePendingRequest after having set the IRP s status. The device mutex is acquired before this function is called and is released after this function returns.   This function is called at passive level only. NTSTATUS MyFilterCreate(     IN PKSSHELLFILTER ShellFilter,     IN PIRP Irp     );  Parameters: ShellFilter   Contains a pointer to the filter being created.  Contains a pointer to the create IRP which requested the creation of the filter. Return Values: Returns STATUS_SUCCESS, STATUS_PENDING, else some error. Filter Close This dispatch function is called when a filter is closed.  At the point at which this function is called, any registered events on the filter have been freed, but the object is otherwise intact.  This function is optional and will typically be provided by clients that want to free context and resources associated with the filter.  Clients that provide a file object context or KS object header in the PreCreate dispatch function for the filter may free those items in this function. This function may return STATUS_PENDING, in which case the shell will not complete the IRP immediately.  Prior to returning STATUS_PENDING, the function must mark the IRP pending by calling IoMarkIrpPending.  Once processing of the IRP is complete, the client must complete the IRP by calling KsShellCompletePendingRequest after having set the IRP s status.  The device mutex is acquired before this function is called and is released after this function returns. This function is called at passive level only. NTSTATUS MyFilterClose(     IN PKSSHELLFILTER ShellFilter,     IN PIRP Irp     );  Parameters: ShellFilter   Contains a pointer to the filter being closed.  Contains a pointer to the create IRP which requested the closure of the filter. Return Values: Returns STATUS_SUCCESS, STATUS_PENDING, else some error. Filter Power This dispatch function is called when the device receives a power management IRP which device-associated objects have determined should be forwarded to other objects.  This function is optional, and will typically be provided by clients that must save or restore hardware context in response to power state changes. This function should not return STATUS_PENDING. <<more here as power management matures>>  This function is called at passive level only. NTSTATUS MyFilterPower     IN PKSSHELLFILTER ShellFilter,     IN PIRP Irp     );  Parameters: ShellFilter   Contains a pointer to the filter receiving the power management request.  Contains a pointer to the power management IRP. Return Values: Returns STATUS_SUCCESS, else some error. Filter Process This dispatch function is called when the filter is to process frames.  This function is optional, and will typically be provided by clients that implement a software transform.  The arguments to this function supply information on available frames on a per-pin basis, allowing some transforms to operate without regard to pipe configurations. This function may be called at passive level or dispatch level depending on the preference expressed in the filter descriptor <<how?>>. BOOLEAN MyFilterProcess     IN PKSSHELLFILTER ShellFilter,     IN PKSSHELLPROCESSPIN ProcessPins,     IN PKSSHELLPROCESSPIN_INDEXENTRY ProcessPinsIndex     );  Parameters: ShellFilter   Contains a pointer to the filter for which processing is to be performed. ProcessPins   Contains a pointer to an array of KSSHELLPROCESSPIN structures, one structure for each pin instance on the filter.  The structures are in pin ID order. ProcessPinsIndex   Contains a pinter to an array of KSSHELLPROCESSPIN_INDEX structures indexed by pin ID providing an index into the ProcessPins array. Return Values: Returns FALSE if no further processing is required even if there are frames left to process or another value if the function should be called again immediately if more frames are available.  Pin Dispatch Table: KSSHELLPIN_DISPATCH Pin dispatch tables allow the client supply handling functions for pin-related processing.  All handling functions are optional as is the dispatch table itself.  Clients that do not need to supply any pin dispatch functions may provide a null dispatch table pointer in the pin descriptor. Functions in this table deal with the lifespan of  a pin (create and close), power management and pin state.  In addition, there is a dispatch function (Handshake) used in the negotiation of private interfaces. typedef struct {     PFNKSSHELLPINIRP PreCreate;     PFNKSSHELLPINIRP Create;     PFNKSSHELLPINIRP Close;     PFNKSSHELLPINIRP Power;     PFNKSSHELLPINSETDEVICESTATE SetDeviceState;     PFNKSSHELLPINSETRESETSTATE SetResetState;     PFNKSSHELLPINHANDSHAKE Handshake; } KSSHELLPIN_DISPATCH; Pin Pre-Create This dispatch function is called when a pin is created.  At the point at which this function is called, no context has been associated with the file object and no KS object header has been allocated.  This function is optional and will typically be provided by clients that want to create their own file object context or KS file header.  A file object context or file header allocated by this function can be freed in the close dispatch function for the pin, otherwise the shell will free them using ExFreePool and KsFreeObjectHeader, respectively. If this function is not supplied, the shell will allocate the file object context and KS file header itself. The filter s control mutex is acquired before this function is called and is released after this function returns.  This function should not return STATUS_PENDING. NTSTATUS MyPinPreCreate(     IN PKSSHELLPIN ShellPin,     IN PIRP Irp     );  Parameters: ShellPin   Contains a pointer to the pin being created.  Contains a pointer to the create IRP which requested the creation of the pin. Return Values: Returns STATUS_SUCCESS, else some error. Pin Create This dispatch function is called when a pin is created.  At the point at which this function is called, the file object has an associated context, and the KS file header has been allocated.  This function is optional and will typically be provided by clients that want to initialize context and resources associated with the pin. If this function succeeds, the create operation is guaranteed to succeed. This function may return STATUS_PENDING, in which case the shell will not complete the IRP immediately.  Prior to returning STATUS_PENDING, the function must mark the IRP pending by calling IoMarkIrpPending.  Once processing of the IRP is complete, the client must complete the IRP by calling KsShellCompletePendingRequest after having set the IRP s status.  The filter s control mutex is acquired before this function is called and is released after this function returns.   This function is called at passive level only. NTSTATUS MyPinCreate(     IN PKSSHELLPIN ShellPin,     IN PIRP Irp     );  Parameters: ShellPin   Contains a pointer to the pin being created.  Contains a pointer to the create IRP which requested the creation of the pin. Return Values: Returns STATUS_SUCCESS, STATUS_PENDING, else some error. Pin Close This dispatch function is called when a pin is closed.  At the point at which this function is called, any registered events on the pin have been freed, but the object is otherwise intact.  This function is optional and will typically be provided by clients that want to free context and resources associated with the pin.  Clients that provide a file object context or KS object header in the PreCreate dispatch function for the pin may free those items in this function. This function may return STATUS_PENDING, in which case the shell will not complete the IRP immediately.  Prior to returning STATUS_PENDING, the function must mark the IRP pending by calling IoMarkIrpPending.  Once processing of the IRP is complete, the client must complete the IRP by calling KsShellCompletePendingRequest after having set the IRP s status. The filter s control mutex is acquired before this function is called and is released after this function returns. This function is called at passive level only. NTSTATUS MyPinClose(     IN PKSSHELLPIN ShellPin,     IN PIRP Irp     );  Parameters: ShellPin   Contains a pointer to the pin being closed.  Contains a pointer to the create IRP which requested the closure of the pin. Return Values: Returns STATUS_SUCCESS, STATUS_PENDING, else some error. Pin Power This dispatch function is called when the device receives a power management IRP which device-associated objects have determined should be forwarded to other objects.  This function is optional, and will typically be provided by clients that must save or restore hardware context in response to power state changes. This function should not return STATUS_PENDING. <<more here as power management matures>> This function is called at passive level only. NTSTATUS MyPinPower(     IN PKSSHELLPIN ShellPin,     IN PIRP Irp     );  Parameters: ShellPin   Contains a pointer to the pin receiving the power management request.  Contains a pointer to the power management IRP. Return Values: Returns STATUS_SUCCESS, else some error. Pin Set Device State This dispatch function is called when the pin s state is changed due to the arrival of a connection state property   IOCTL.  This function is optional, and will typically be provided by clients that must change the state of hardware.  Because this function receives unfiltered state change requests, indicated state changes may be null (from and to states are the same) or non-contiguous (to state is not an immediate predecessor or successor of the from state). The filter s control mutex is acquired before this function is called and is released after this function returns.  This function should not return STATUS_PENDING. NTSTATUS MyPinSetDeviceState(     IN PKSSHELLPIN ShellPin,     IN KSSTATE ToState,     IN KSSTATE FromState     );  Parameters: ShellPin   Contains a pointer to the pin.  The DeviceState member of this structure will be equal to the FromState parameter.  This function should not direction change the DeviceState member under any circumstances. ToState   The device state to which the pin is changing.  This may be the same as FromState and may not be the immediate successor or predecessor of FromState. FromState   The reset device state from which the pin is changing. Return Values: Returns STATUS_SUCCESS, else some error. Pin Set Reset State This dispatch function is called when the pin s reset state is changed due to the arrival of a IOCTL_KS_RESET_STATE device control.  This function is optional, and will typically be provided by clients that must flush hardware buffers. Because this function receives unfiltered reset state change requests, indicated state changes may be null (from and to states are the same). The filter s control mutex is acquired before this function is called and is released after this function returns. MyPinSetResetState(     IN PKSSHELLPIN ShellPin,     IN KSRESET ToState,     IN KSRESET FromState     );  Parameters: ShellPin   Contains a pointer to the pin.  The ResetState member of this structure will be equal to the FromState parameter.  This function should not direction change the ResetState member under any circumstances. ToState   The reset state to which the pin is changing.  This may be the same as FromState. FromState   The reset state from which the pin is changing. Return Values: None. Pin Handshake This dispatch function is called when the pin object receives a handshake request from the connected pin.  Shell clients initiate such requests by calling KsShellHandshake.  This function is optional, and will typically be provided by clients that implement private transport interfaces for the pin in question.  The function must validate the incoming handshake structure and either return an error or supply the appropriate output handshake structure and a successful status. This function should not return STATUS_PENDING. NTSTATUS MyPinHandshake(     IN PKSSHELLPIN ShellPin,     IN PKSHANDSHAKE In,     OUT PKSHANDSHAKE Out     );  Parameters: ShellPin   Contains a pointer to the pin.  Contains a pointer to the handshake information supplied by the connected pin.  Contains a pointer to the handshake structure that the function should fill if the handshake is to succeed. Return Values: Returns STATUS_SUCCESS, else some error. typedef struct {     GUID ProtocolId;     PVOID Argument1;     PVOID Argument2; } KSHANDSHAKE, *PKSHANDSHAKE; Member Description ProtocolId A GUID identifying the protocol to be established between the pins.  Parties defining protocols will generate a unique GUID for each protocol and specify the semantics of the arguments passed in the initiation and response handshake structures.  There is no requirement that the GUID be the same in both directions, and a unique GUID is only required for initiation. Argument1 Semantics of this member are protocol-dependent. Argument2 Semantics of this member are protocol-dependent. Node Dispatch Table: KSSHELLNODE_DISPATCH Node dispatch tables allow the client supply handling functions for node-related processing.  All handling functions are optional as is the dispatch table itself.  Clients that do not need to supply any node dispatch functions may provide a null dispatch table pointer in the node descriptor. Functions in this table deal with the lifespan of  a node (create and close) and power management. typedef struct {     PFNKSSHELLNODEIRP PreCreate;     PFNKSSHELLNODEIRP Create;     PFNKSSHELLNODEIRP Close;     PFNKSSHELLNODEIRP Power; } KSSHELLNODE_DISPATCH; Node Pre-Create This dispatch function is called when a node is created.  At the point at which this function is called, no context has been associated with the file object and no KS object header has been allocated.  This function is optional and will typically be provided by clients that want to create their own file object context or KS file header.  A file object context or file header allocated by this function can be freed in the close dispatch function for the node, otherwise the shell will free them using ExFreePool and KsFreeObjectHeader, respectively. If this function is not supplied, the shell will allocate the file object context and KS file header itself. The filter s control mutex is acquired before this function is called and is released after this function returns.  This function should not return STATUS_PENDING. This function is called at passive level only. NTSTATUS MyNodePreCreate(     IN PKSSHELLNODE ShellNode,     IN PIRP Irp     );  Parameters: ShellNode   Contains a pointer to the node being created.  Contains a pointer to the create IRP which requested the creation of the node. Return Values: Returns STATUS_SUCCESS, else some error. Node Create This dispatch function is called when a node is created.  At the point at which this function is called, the file object has an associated context, and the KS file header has been allocated.  This function is optional and will typically be provided by clients that want to initialize context and resources associated with the node. If this function succeeds, the create operation is guaranteed to succeed. This function may return STATUS_PENDING, in which case the shell will not complete the IRP immediately.  Prior to returning STATUS_PENDING, the function must mark the IRP pending by calling IoMarkIrpPending.  Once processing of the IRP is complete, the client must complete the IRP by calling KsShellCompletePendingRequest after having set the IRP s status. The filter s control mutex is acquired before this function is called and is released after this function returns.   This function is called at passive level only. NTSTATUS MyNodeCreate(     IN PKSSHELLNODE ShellNode,     IN PIRP Irp     );  Parameters: ShellNode   Contains a pointer to the node being created.  Contains a pointer to the create IRP which requested the creation of the node. Return Values: Returns STATUS_SUCCESS, STATUS_PENDING, else some error. Node Close This dispatch function is called when a node is closed.  At the point at which this function is called, any registered events on the pin have been freed, but the object is otherwise intact.  This function is optional and will typically be provided by clients that want to free context and resources associated with the node.  Clients that provide a file object context or KS object header in the PreCreate dispatch function for the node may free those items in this function. This function may return STATUS_PENDING, in which case the shell will not complete the IRP immediately.  Prior to returning STATUS_PENDING, the function must mark the IRP pending by calling IoMarkIrpPending.  Once processing of the IRP is complete, the client must complete the IRP by calling KsShellCompletePendingRequest after having set the IRP s status. The filter s control mutex is acquired before this function is called and is released after this function returns.   This function is called at passive level only. NTSTATUS MyNodeClose(     IN PKSSHELLNODE ShellNode,     IN PIRP Irp     );  Parameters: ShellNode   Contains a pointer to the node being closed.  Contains a pointer to the create IRP which requested the closure of the node. Return Values: Returns STATUS_SUCCESS, else some error. Node Power This dispatch function is called when the device receives a power management IRP which device-associated objects have determined should be forwarded to other objects.  This function is optional, and will typically be provided by clients that must save or restore hardware context in response to power state changes. This function should not return STATUS_PENDING. <<more here as power management matures>> This function is called at passive level only. NTSTATUS MyNodePower(     IN PKSSHELLNODE ShellNode,     IN PIRP Irp     );  Parameters: ShellNode   Contains a pointer to the node receiving the power management request.  Contains a pointer to the power management IRP. Return Values: Returns STATUS_SUCCESS, else some error. Allocator Dispatch Table: KSSHELLALLOCATOR_DISPATCH Allocator dispatch tables allow the client supply handling functions for allocator-related processing.  All handling functions are optional as is the dispatch table itself.  Clients that do not need to supply any allocator dispatch functions may provide a null dispatch table pointer in the allocator descriptor. Functions in this table deal with the lifespan of  an allocator (create and close) and power management. typedef struct {     PFNKSSHELLALLOCATORIRP PreCreate;     PFNKSSHELLALLOCATORIRP Create;     PFNKSSHELLALLOCATORIRP Close;     PFNKSSHELLALLOCATORIRP Power; } KSSHELLALLOCATOR_DISPATCH; Allocator Pre-Create This dispatch function is called when an allocator is created.  At the point at which this function is called, no context has been associated with the file object and no KS object header has been allocated.  This function is optional and will typically be provided by clients that want to create their own file object context or KS file header.  A file object context or file header allocated by this function can be freed in the close dispatch function for the allocator, otherwise the shell will free them using ExFreePool and KsFreeObjectHeader, respectively. If this function is not supplied, the shell will allocate the file object context and KS file header itself. The filter s control mutex is acquired before this function is called and is released after this function returns.  This function should not return STATUS_PENDING. This function is called at passive level only. NTSTATUS MyAllocatorPreCreate(     IN PKSSHELLALLOCATOR ShellAllocator,     IN PIRP Irp     );  Parameters: ShellAllocator   Contains a pointer to the allocator being created.  Contains a pointer to the create IRP which requested the creation of the allocator. Return Values: Returns STATUS_SUCCESS, else some error. Allocator Create This dispatch function is called when an allocator is created.  At the point at which this function is called, the file object has an associated context, and the KS file header has been allocated.  This function is optional and will typically be provided by clients that want to initialize context and resources associated with the allocator. If this function succeeds, the create operation is guaranteed to succeed. This function may return STATUS_PENDING, in which case the shell will not complete the IRP immediately.  Prior to returning STATUS_PENDING, the function must mark the IRP pending by calling IoMarkIrpPending.  Once processing of the IRP is complete, the client must complete the IRP by calling KsShellCompletePendingRequest after having set the IRP s status. The filter s control mutex is acquired before this function is called and is released after this function returns. This function is called at passive level only. NTSTATUS MyAllocatorCreate(     IN PKSSHELLALLOCATOR ShellAllocator,     IN PIRP Irp     );  Parameters: ShellAllocator   Contains a pointer to the allocator being created.  Contains a pointer to the create IRP which requested the creation of the allocator. Return Values: Returns STATUS_SUCCESS, STATUS_PENDING, else some error. Allocator Close This dispatch function is called when an allocator is closed.  At the point at which this function is called, any registered events on the pin have been freed, but the object is otherwise intact.  This function is optional and will typically be provided by clients that want to free context and resources associated with the allocator.  Clients that provide a file object context or KS object header in the PreCreate dispatch function for the allocator may free those items in this function. This function may return STATUS_PENDING, in which case the shell will not complete the IRP immediately.  Prior to returning STATUS_PENDING, the function must mark the IRP pending by calling IoMarkIrpPending.  Once processing of the IRP is complete, the client must complete the IRP by calling KsShellCompletePendingRequest after having set the IRP s status. The filter s control mutex is acquired before this function is called and is released after this function returns. This function is called at passive level only. NTSTATUS MyAllocatorClose(     IN PKSSHELLALLOCATOR ShellAllocator,     IN PIRP Irp     );  Parameters: ShellAllocator   Contains a pointer to the allocator being closed.  Contains a pointer to the create IRP which requested the closure of the allocator. Return Values: Returns STATUS_SUCCESS, STATUS_PENDING, else some error. Allocator Power This dispatch function is called when the device receives a power management IRP which device-associated objects have determined should be forwarded to other objects.  This function is optional, and will typically be provided by clients that must save or restore hardware context in response to power state changes. This function should not return STATUS_PENDING. <<more here as power management matures>> This function is called at passive level only. NTSTATUS MyAllocatorPower(     IN PKSSHELLALLOCATOR ShellAllocator,     IN PIRP Irp     );  Parameters: ShellAllocator   Contains a pointer to the allocator receiving the power management request.  Contains a pointer to the power management IRP. Return Values: Returns STATUS_SUCCESS, else some error. Clock Dispatch Table: KSSHELLCLOCK_DISPATCH Clock dispatch tables allow the client supply handling functions for clock-related processing.  All handling functions are optional as is the dispatch table itself.  Clients that do not need to supply any clock dispatch functions may provide a null dispatch table pointer in the clock descriptor. Functions in this table deal with the lifespan of  a clock (create and close) and power management. typedef struct {     PFNKSSHELLCLOCKIRP PreCreate;     PFNKSSHELLCLOCKIRP Create;     PFNKSSHELLCLOCKIRP Close;     PFNKSSHELLCLOCKIRP Power; } KSSHELLCLOCK_DISPATCH; Clock Pre-Create This dispatch function is called when a clock is created.  At the point at which this function is called, no context has been associated with the file object and no KS object header has been allocated.  This function is optional and will typically be provided by clients that want to create their own file object context or KS file header.  A file object context or file header allocated by this function can be freed in the close dispatch function for the clock, otherwise the shell will free them using ExFreePool and KsFreeObjectHeader, respectively. If this function is not supplied, the shell will allocate the file object context and KS file header itself. The filter s control mutex is acquired before this function is called and is released after this function returns.  This function should not return STATUS_PENDING. This function is called at passive level only. NTSTATUS MyClockPreCreate(     IN PKSSHELLCLOCK ShellClock,     IN PIRP Irp     );  Parameters: ShellClock   Contains a pointer to the clock being created.  Contains a pointer to the create IRP which requested the creation of the clock. Return Values: Returns STATUS_SUCCESS, else some error. Clock Create This dispatch function is called when a clock is created.  At the point at which this function is called, the file object has an associated context, and the KS file header has been allocated.  This function is optional and will typically be provided by clients that want to initialize context and resources associated with the clock. If this function succeeds, the create operation is guaranteed to succeed. This function may return STATUS_PENDING, in which case the shell will not complete the IRP immediately.  Prior to returning STATUS_PENDING, the function must mark the IRP pending by calling IoMarkIrpPending.  Once processing of the IRP is complete, the client must complete the IRP by calling KsShellCompletePendingRequest after having set the IRP s status. The filter s control mutex is acquired before this function is called and is released after this function returns. This function is called at passive level only. NTSTATUS MyClockCreate(     IN PKSSHELLCLOCK ShellClock,     IN PIRP Irp     );  Parameters: ShellClock   Contains a pointer to the clock being created.  Contains a pointer to the create IRP which requested the creation of the clock. Return Values: Returns STATUS_SUCCESS, STATUS_PENDING, else some error. Clock Close This dispatch function is called when a clock is closed.  At the point at which this function is called, any registered events on the pin have been freed, but the object is otherwise intact.  This function is optional and will typically be provided by clients that want to free context and resources associated with the clock.  Clients that provide a file object context or KS object header in the PreCreate dispatch function for the clock may free those items in this function. This function may return STATUS_PENDING, in which case the shell will not complete the IRP immediately.  Prior to returning STATUS_PENDING, the function must mark the IRP pending by calling IoMarkIrpPending.  Once processing of the IRP is complete, the client must complete the IRP by calling KsShellCompletePendingRequest after having set the IRP s status. The filter s control mutex is acquired before this function is called and is released after this function returns. This function is called at passive level only. NTSTATUS MyClockClose(     IN PKSSHELLCLOCK ShellClock,     IN PIRP Irp     );  Parameters: ShellClock   Contains a pointer to the clock being closed.  Contains a pointer to the create IRP which requested the closure of the clock. Return Values: Returns STATUS_SUCCESS, STATUS_PENDING, else some error. Clock Power This dispatch function is called when the device receives a power management IRP which device-associated objects have determined should be forwarded to other objects.  This function is optional, and will typically be provided by clients that must save or restore hardware context in response to power state changes. This function should not return STATUS_PENDING. <<more here as power management matures>> This function is called at passive level only. NTSTATUS MyClockPower(     IN PKSSHELLCLOCK ShellClock,     IN PIRP Irp     );  Parameters: ShellClock   Contains a pointer to the clock receiving the power management request.  Contains a pointer to the power management IRP. Return Values: Returns STATUS_SUCCESS, else some error. Queue Dispatch Table: KSSHELLQUEUE_DISPATCH Queue dispatch tables allow the client supply handling functions for queue-related processing.  All handling functions are optional as is the dispatch table itself, though all clients will probably need to supply at least one handling function.  Clients that do not need to supply any queue dispatch functions may provide a null dispatch table pointer in the queue descriptor. Functions in this table deal with the lifespan of  a queue (construct and destruct), notification of arriving frames (in streaming IRPs), and the cancellation of queued IRPs. typedef struct {     PFNKSSHELLQUEUE Construct;     PFNKSSHELLQUEUE Destruct;     PFNKSSHELLQUEUE Notify;     PFNKSSHELLQUEUECANCEL Cancel; } KSSHELLQUEUE_DISPATCH; Queue Construct This dispatch function is called when a queue is created.  This happens on a transition from KSSTATE_STOP to KSSTATE_ACQUIRE.  At the point at which this function is called, the queue has been fully initialized from the shell s perspective.  This function is optional and will typically be provided by clients that want to initialize context and resources associated with the queue. If this function returns an error status, the state transition (to KSSTATE_ACQUIRE) will fail.  If this function returns a successful status, the transition may fail for some other reason.  In this case, the client s queue destruct function will be called, if one is provided. The filter s control mutex is acquired before this function is called and is released after this function returns.  This function should not return STATUS_PENDING. This function is called at passive level only. NTSTATUS MyQueueConstruct(     IN PKSSHELLQUEUE ShellQueue     );  Parameters: ShellQueue   Contains a pointer to the queue being constructed. Return Values: Returns STATUS_SUCCESS, else some error. Queue Destruct This dispatch function is called when a queue is destroyed.  This happens on a transition from KSSTATE_ACQUIRE to KSSTATE_STOP.  At the point at which this function is called, the queue is still intact (including the OwnerPipe and OwnerPin references), but no frames (IRPs) are queued and no new frames (IRPs) will arrive.  This function is optional and will typically be provided by clients that want to free context and resources associated with the queue. The filter s control mutex is acquired before this function is called and is released after this function returns. This function is called at passive level only. MyQueueDestruct(     IN PKSSHELLQUEUE ShellQueue     );  Parameters: ShellQueue   Contains a pointer to the queue being destructed. Return Values: None. Queue Notify This dispatch function is called when a queue receives one or more new frames in the form of a streaming IRP.  This function is optional but will be provided by most clients.  With respect to queues that receive load-bearing frames, this function reflects the data-driven aspect of a filter.  With respect to queues that receive empty frames to be filled, this function reflects the demand-driven aspect of the filter.  Because almost all filters are in some sense both data- and demand-driven, almost all clients will need to supply this function. A typical implementation will examine the queue supplied in the ShellQueue argument and other queues involved in the transform to determine if the filter has work to perform on frames supplied by the queues.  In some cases, this determination or the work itself may be delegated to a DPC or work item. This function will be called at passive level unless the queue descriptor specifies the flag KSSHELLQUEUE_FLAG_DISPATCH_LEVEL_NOTIFY, in which case the function may be called at dispatch or passive level. MyQueueNotify(     IN PKSSHELLQUEUE ShellQueue     );  Parameters: ShellQueue   Contains a pointer to the queue which has received a new frame. Return Values: None. Queue Cancel This dispatch function is called when an IRP waiting in a queue is cancelled.  This function is optional but will typically be provided by clients doing scatter/gather bus mastering.  Such clients need to avoid accessing frames associated with IRPs that have been cancelled.  This function is called once for each frame in each IRP that is cancelled.  Generally speaking, the client s response to this function will be to examine the list of mappings for the frame and remove them from the hardware s queue of mappings. This function may be called at dispatch or passive level.  The cancel spin lock will is not acquired when the function is called, and there is no reason, in general, for the function to take the cancel spin lock. MyQueueCancel(     IN PKSSHELLQUEUE ShellQueue,     IN PKSSHELLQUEUEEDGE Edge     );  Parameters: ShellQueue   Contains a pointer to the queue for which an IRP has been cancelled. Edge   Contains a pointer to an edge structure which describes the frame being cancelled. Return Values: None. Objects Device Object: KSSHELLDEVICE The KS shell device object structure describes a WDM functional device that is managed by the shell.  Members of the structure include descriptor and client context members, device object pointers for the functional device object and its PnP relatives, and a few fields reflecting the current status of the device.   Clients typically use this structure if they must implement specific PnP or power management behavior that is not provided by the shell device implementation.  A pointer to the device object structure is the first parameter to all device dispatch functions, and the client is free to use the context member to attach its own context for these functions.  In addition, clients may obtain a pointer to the shell device object structure from a WDM device object pointer using the function KsShellGetDeviceForDeviceObject. For the purposes of synchronization, the lifetime of this object is defined as the interval between the time the client s device PreCreate dispatch function is (or would be) called and the time the client s device PnpRemove dispatch function is (or would be) called. typedef struct {     const KSSHELLDEVICE_DESCRIPTOR* Descriptor;     PVOID Context;     PDEVICE_OBJECT FunctionalDeviceObject;     PDEVICE_OBJECT PhysicalDeviceObject;     PDEVICE_OBJECT NextDeviceObject;     BOOLEAN Started;     BOOLEAN CreatesMayProceed;     ULONG ExistingObjectCount; } KSSHELLDEVICE; Member Description Descriptor A pointer to the descriptor for this object.  This member is stable throughout the lifetime of the device. Context A client-defined context pointer.  This member is null at the start of the device s lifetime, and the shell will not change its value throughout the lifetime of the device. FunctionalDeviceObject A pointer to the WDM functional device object for the device. This member is stable throughout the lifetime of the device. PhysicalDeviceObject A pointer to the WDM physical device object for the device. This member is stable throughout the lifetime of the device. NextDeviceObject A pointer to the next device in the PnP chain as determined by IoAttachDeviceToDeviceStack. This member is stable throughout the lifetime of the device. Started A flag indicating whether the device has been started.  This flag is set during the processing of the PnP start IRP and reset during the processing of the PnP stop IRP.  A device that is not started will return STATUS_DEVICE_NOT_READY in response to all requests to create a filter.  The shell sets this member to TRUE having first acquired the device mutex.  The transition to FALSE is not synchronized in this way.  Instead, the member CreatesMayProceed will be FALSE when this transition occurs, and creates that are queued due to a pending PnP stop are failed after the transition. CreatesMayProceed A flag indicating whether creates may proceed.  This flag is asserted when the device is started and creates are not blocked by a pending stop or remove. ExistingObjectCount A count of objects, including filters, pins, nodes, allocators and clocks, that currently exist on this device.  There is no general synchronization for this member, but changes due to the creation and closure of filters are synchronized by the device mutex.  This means that clients can be assured that this member will not change to or from the value zero as long as the client holds the device mutex. Filter Factory Object: KSSHELLFILTERFACTORY The KS shell filter factory object structure describes a filter factory.  A filter factory explicitly represents a device s ability to instantiate a given type of filter as described by a filter descriptor.  Filter factory structure members include a pointer to a filter descriptor and a client context. Clients implementing drivers for hardware typically use this structure to manage a particular function of the hardware that is exposed as a type of filter.  Clients implementing software filters generally do not need to manage the device at this level. Filter factory objects are created in two ways.  They can be created during the shell device s AddDevice processing as indicated by the device descriptor s list of filter descriptors.  They may also be created explicitly by the client in a call to KsShellCreateFilterFactory.  The client may create filter factories at any time, but this is typically done during the processing of the PnP start IRP when an evaluation of assigned resources indicates what types of filters must be exposed by the device. For the purposes of synchronization, the lifetime of filter factories created implicitly is defined as the interval starting when the client s device create dispatch function is (or would be) called and ending after the client s device PnP remove dispatch function is (or would be) called.  The lifetime of filter factories created explicitly by calling KsShellCreateFilterFactory starts immediately after that call returns. typedef struct {     const KSSHELLFILTER_DESCRIPTOR* FilterDescriptor;     PVOID Context; } KSSHELLFILTERFACTORY; Member Description FilterDescriptor A pointer to the descriptor for filters generated by this object.  This member is stable throughout the lifetime of the object. Context A client-defined context pointer.  This member is null at the start of the object s lifetime, and the shell will not change its value throughout the lifetime of the object. Filter Object: KSSHELLFILTER The KS shell filter object structure describes an instantiated filter.  Filter structure members include a pointer to a filter descriptor and a client context. Clients implementing software filters typically associate filter state with this structure.  Processing for software filters is usually done in the filter s Process dispatch function.  Clients implementing hardware filters typically do not use this structure because the focus of the hardware driver is the platform transition:  the movement of data between the host and the external hardware.  This transition is typically handled with code associated with a shell queue object. For the purposes of synchronization, the lifetime of this object is the interval starting when the client s PreCreate dispatch function is called (or would be called) and ending when the client s Close dispatch function returns, assuming the function does not return STATUS_PENDING.  If it does return STATUS_PENDING, the object s lifetime ends when the client indicates completion of the close request by calling KsShellCompletePendingRequest.   typedef struct {     const KSSHELLFILTER_DESCRIPTOR* Descriptor;     PVOID Context; } KSSHELLFILTER; Member Description Descriptor A pointer to the descriptor for this object. This member is stable throughout the lifetime of the object. Context A client-defined context pointer.  This member is null at the start of the object s lifetime, and the shell will not change its value throughout the lifetime of the object. Pin Object: KSSHELLPIN The KS shell pin object describes an instantiated pin.  Filter structure members include a pointer to a pin descriptor, a client context, connection parameters, assigned master clock and allocator, current state and pipe assignment. In many ways, pins are the focus of filter behavior.  This is reflected in the fact that the shell pin structure has a large number of members.  Many clients need to refine pin behavior and maintain additional pin-associated context.  For filters with fairly conventional pin behavior, no additional refinement or context will be required.  In many cases, default shell pin behavior is sufficient, but the pins are accessed as part of filter- or queue-associated processing. For the purposes of synchronization, the lifetime of this object is the interval starting when the client s PreCreate dispatch function is called (or would be called) and ending when the client s Close dispatch function returns, assuming the function does not return STATUS_PENDING.  If it does return STATUS_PENDING, the object s lifetime ends when the client indicates completion of the close request by calling KsShellCompletePendingRequest.   typedef struct {     const KSSHELLPIN_DESCRIPTOR* Descriptor;     PVOID Context;     ULONG Id;     KSPIN_INTERFACE ConnectionInterface;     KSPIN_MEDIUM ConnectionMedium;     HANDLE ConnectionHandle;     PFILE_OBJECT ConnectionFileObject;     PDEVICE_OBJECT ConnectionDeviceObject;     PKSSHELLPIN ConnectionPin;     KSPRIORITY ConnectionPriority;     PKSDATAFORMAT ConnectionFormat;     KSPIN_DATAFLOW DataFlow;     PKSALLOCATOR_FRAMING_EX AllocatorFramingGet;     PKSALLOCATOR_FRAMING_EX AllocatorFramingSet;     PFILE_OBJECT AllocatorFileObject;     PFILE_OBJECT MasterClockFileObject;     KSSTATE DeviceState;     KSRESET ResetState;     HANDLE PipeId; } KSSHELLPIN; Member Description Descriptor A pointer to the descriptor for this object. This member is stable throughout the lifetime of the object. Context A client-defined context pointer.  This member is null at the start of the object s lifetime, and the shell will not change its value throughout the lifetime of the object. The pin type identifier, an index into the array of pin descriptors for the filter. This member is stable throughout the lifetime of the object. ConnectionInterface The identifier for the connection interface.  This information is supplied by the graph builder when the pin is created. This member is stable throughout the lifetime of the object. ConnectionMedium The identifier for the connection medium.  This information is supplied by the graph builder when the pin is created. This member is stable throughout the lifetime of the object. ConnectionHandle For source pins, the handle of the connected sink pin.  For sink pins, this member is NULL.  This handle is supplied by the graph builder when the pin is created. This member is stable throughout the lifetime of the object. ConnectionFileObject For source pins, a pointer to the file object of the connected sink pin.  For sink pins, this member is NULL.  This information is based on the connection handle supplied by the graph builder when the pin is created. This member is stable throughout the lifetime of the object ConnectionDeviceObject For source pins, a pointer to the device object corresponding to the connected sink pin.  For sink pins, this member is NULL. This information is based on the connection handle supplied by the graph builder when the pin is created. This member is stable throughout the lifetime of the object. ConnectionPin For pins that are connected to pins also implemented by the KS shell, a pointer to the connected pin.  For pins that are not connected to other shell pins, this member is NULL This information is based on the connection handle supplied by the graph builder when the pin is created. This member is stable throughout the lifetime of the object. ConnectionPriority The priority of the connection.  This information is supplied by the graph builder when the pin is created. This member is stable throughout the lifetime of the object. ConnectionFormat The format of the connection.  This information is initially supplied by the graph builder when the pin is created and may be changed through property access or by format change messages inserted in the stream. Access to this member is synchronized by the control mutex for the filter.  The client should not change this member. DataFlow The direction of data flow for this pin (KSPIN_DATAFLOW_IN or KSPIN_DATAFLOW_OUT).  This information is a static attribute of the pin and appears in the pin descriptor.  It is cached here for access at >PASSIVE_LEVEL. This member is stable throughout the lifetime of the object. AllocatorFramingGet AllocatorFramingSet AllocatorFileObject A pointer to the file object of the allocator assigned to this pin.  If no allocator is assigned to the pin, this member is NULL.  This member is changed through property access.  Access to this member is synchronized by the control mutex for the filter.  The client should not change this member. MasterClockFileObject A pointer to the file object of the master clock assigned to this pin.  If no master clock is assigned to the pin, this member is NULL.  This member is changed through property access.  Access to this member is synchronized by the control mutex for the filter.  The client should not change this member. DeviceState The current device state of the pin.  This member is initially KSSTATE_STOP and is changed through property access. Access to this member is synchronized by the control mutex for the filter.  The client should not change this member. ResetState The current reset state of the pin.  This member is initially KSRESET_END and is changed through property access. Access to this member is synchronized by the control mutex for the filter.  The client should not change this member. PipeId The pipe identifier of the pipe assigned to this pin.  This member is initially set to NULL and is changed through property access according to pipe assignment decisions made by the graph builder. Access to this member is synchronized by the control mutex for the filter.  The client should not change this member. Node Object: KSSHELLNODE <<description>> typedef struct {     const KSSHELLNODE_DESCRIPTOR* Descriptor;     PVOID Context;     ULONG Id;     ULONG CreateFlags; } KSSHELLNODE; Member Description Descriptor A pointer to the descriptor for this object. This member is stable throughout the lifetime of the object. Context A client-defined context pointer.  This member is null at the start of the object s lifetime, and the shell will not change its value throughout the lifetime of the object. CreateFlags Allocator Object: KSSHELLALLOCATOR <<description>> typedef struct {     const KSSHELLALLOCATOR_DESCRIPTOR* Descriptor;     PVOID Context; } KSSHELLALLOCATOR; Member Description Descriptor A pointer to the descriptor for this object. This member is stable throughout the lifetime of the object. Context A client-defined context pointer.  This member is null at the start of the object s lifetime, and the shell will not change its value throughout the lifetime of the object. Clock Object: KSSHELLCLOCK <<description>> typedef struct {     const KSSHELLCLOCK_DESCRIPTOR* Descriptor;     PVOID Context;     ULONG CreateFlags; } KSSHELLCLOCK; Member Description Descriptor A pointer to the descriptor for this object. This member is stable throughout the lifetime of the object. Context A client-defined context pointer.  This member is null at the start of the object s lifetime, and the shell will not change its value throughout the lifetime of the object. CreateFlags The create flags specified in the create request the produced the clock.  This member is stable throughout the lifetime of the object. Queue Object: KSSHELLQUEUE <<description>> typedef struct {     const KSSHELLQUEUE_DESCRIPTOR* Descriptor;     PVOID Context;     PADAPTER_OBJECT AdapterObject;     ULONG HeaderSize;     ULONG IrpsReceived;     ULONG IrpsWaiting;     ULONG IrpsCancelled; } KSSHELLQUEUE; Member Description Descriptor A pointer to the descriptor for this object. This member is stable throughout the lifetime of the object. Context A client-defined context pointer.  This member is null at the start of the object s lifetime, and the shell will not change its value throughout the lifetime of the object. AdapterObject HeaderSize IrpsReceived IrpsWaiting IrpsCancelled <<description>> typedef struct {     PHYSICAL_ADDRESS PhysicalAddress;     PVOID VirtualAddress;     ULONG ByteCount;     PVOID Context; } KSSHELLMAPPING; Member Description PhysicalAddress VirtualAddress ByteCount Context <<description>> typedef struct {     PKSSHELLQUEUE ParentQueue;     PIRP Irp;     ULONG IrpPacketCount;     PKSSTREAM_HEADER IrpPacketHeaders;     ULONG PacketIndex;     PKSSTREAM_HEADER PacketHeader;     PMDL Mdl;     ULONG FrameExtent;     ULONG FrameDataUsed;     ULONG FrameByteCount;     PBYTE FrameVirtualAddress;     ULONG ByteOffset;     ULONG BytesRemaining;     PBYTE BytePosition;     ULONG FrameMappingsCount;     PKSSHELLMAPPING FrameMappings;     ULONG MappingIndex;     ULONG MappingsRemaining;     PKSSHELLMAPPING Mapping;     BOOLEAN EndOfIrp; } KSSHELLQUEUEEDGE; Member Description ParentQueue IrpPacketCount IrpPacketHeaders PacketIndex PacketHeader FrameExtent FrameDataUsed FrameByteCount FrameVirtualAddress ByteOffset BytesRemaining BytePosition FrameMappingsCount FrameMappings MappingIndex MappingsRemaining Mapping EndOfIrp Functions KsShellAcquireControl <<description>> KSDDKAPI NTAPI KsShellAcquireControl(     IN KSSHELLXXX ShellXxx     ); Parameters: ShellXxx   <<description>>. Return Values: Returns STATUS_SUCCESS, else some error. KsShellReleaseControl <<description>> KSDDKAPI NTAPI KsShellReleaseControl(     IN KSSHELLXXX ShellXxx     ); Parameters: ShellXxx   <<description>>. Return Values: Returns STATUS_SUCCESS, else some error. KsShellAddEvent <<description>> KSDDKAPI NTAPI KsShellAddEvent(     IN KSSHELLXXX ShellXxx,     IN KSEVENT_ENTRY EventEntry     ); Parameters: ShellXxx   <<description>>. EventEntry   <<description>>. Return Values: Returns STATUS_SUCCESS, else some error. KsShellGenerateEvents <<description>> KSDDKAPI NTSTATUS NTAPI KsShellGenerateEvents (     IN KSSHELLXXX ShellXxx,     IN const GUID* EventSet OPTIONAL,     IN ULONG EventId,     IN ULONG DataSize,     IN PVOID Data OPTIONAL,     IN PFNKSGENERATEEVENTCALLBACK CallBack OPTIONAL,     IN PVOID CallBackContext OPTIONAL Parameters: ShellXxx   <<description>>. EventSet   <<description>>. EventId   <<description>>. DataSize   <<description>>. Data   <<description>>. CallBack   <<description>>. CallBackContext   <<description>>. Return Values: Returns STATUS_SUCCESS, else some error. KsMergeAutomationTables <<description>> KSDDKAPI NTSTATUS NTAPI KsMergeAutomationTables(     OUT PKSAUTOMATION_TABLE* AutomationTableAB,     IN const KSAUTOMATION_TABLE* AutomationTableA,     IN const KSAUTOMATION_TABLE* AutomationTableB     );  Parameters: AutomationTableAB   <<description>>. AutomationTableA   <<description>>. AutomationTableB   <<description>>. Return Values: Returns STATUS_SUCCESS, else some error. KsHandleAutomationIoControl <<description>> KSDDKAPI NTSTATUS NTAPI KsHandleAutomationIoControl(     IN PIRP Irp,     IN const KSAUTOMATION_TABLE* AutomationTable OPTIONAL,     IN PINTERLOCKEDLIST_HEAD EventList OPTIONAL     );  Parameters:  <<description>>. AutomationTable   <<description>>. EventList   <<description>>. Return Values: Returns STATUS_SUCCESS, else some error. KsReferenceAutomationTable <<description>> KSDDKAPI NTAPI KsReferenceAutomationTable(     IN PKSAUTOMATION_TABLE AutomationTable     );  Parameters: AutomationTable   <<description>>. Return Values: None. KsReleaseAutomationTable <<description>> KSDDKAPI NTAPI KsReleaseAutomationTable(     IN PKSAUTOMATION_TABLE AutomationTable     );  Parameters: AutomationTable   <<description>>. Return Values: None. KsShellInitializeDriver <<description>> KSDDKAPI NTSTATUS NTAPI KsShellInitializeDriver(     IN PDRIVER_OBJECT DriverObject,     IN PUNICODE_STRING RegistryPathName,     IN const KSSHELLDEVICE_DESCRIPTOR* Descriptor OPTIONAL     );  Parameters: DriverObject   <<description>>. RegistryPathName   <<description>>. Descriptor   <<description>>. Return Values: Returns STATUS_SUCCESS, else some error. KsShellAddDevice <<description>> KSDDKAPI NTSTATUS NTAPI KsShellAddDevice(     IN PDRIVER_OBJECT DriverObject,     IN PDEVICE_OBJECT PhysicalDeviceObject     );  Parameters: DriverObject   <<description>>. PhysicalDeviceObject   <<description>>. Return Values: Returns STATUS_SUCCESS, else some error. KsShellCreateDevice <<description>> KSDDKAPI NTSTATUS NTAPI KsShellCreateDevice(     IN PDRIVER_OBJECT DriverObject,     IN PDEVICE_OBJECT PhysicalDeviceObject,     IN const KSSHELLDEVICE_DESCRIPTOR* Descriptor OPTIONAL     );  Parameters: DriverObject   <<description>>. PhysicalDeviceObject   <<description>>. Descriptor   <<description>>. Return Values: Returns STATUS_SUCCESS, else some error. KsShellInitializeDevice <<description>> KSDDKAPI NTSTATUS NTAPI KsShellInitializeDevice(     IN PDEVICE_OBJECT FunctionalDeviceObject,     IN PDEVICE_OBJECT PhysicalDeviceObject,     IN PDEVICE_OBJECT NextDeviceObject,     IN const KSSHELLDEVICE_DESCRIPTOR* Descriptor OPTIONAL     );  Parameters: FunctionalDeviceObject   <<description>>. PhysicalDeviceObject   <<description>>. NextDeviceObject   <<description>>. Descriptor   <<description>>. Return Values: Returns STATUS_SUCCESS, else some error. KsShellTerminateDevice <<description>> KSDDKAPI NTAPI KsShellTerminateDevice(     IN PDEVICE_OBJECT DeviceObject     );  Parameters: DeviceObject   <<description>>. Return Values: None. KsShellAcquireDevice <<description>> KSDDKAPI NTAPI KsShellAcquireDevice(     IN PKSSHELLDEVICE ShellDevice     );  Parameters: ShellDevice   <<description>>. Return Values: None. KsShellReleaseDevice <<description>> KSDDKAPI NTAPI KsShellReleaseDevice(     IN PKSSHELLDEVICE ShellDevice     );  Parameters: ShellDevice   <<description>>. Return Values: None. KsShellIncrementExistingObjectCount <<description>> KSDDKAPI NTAPI KsShellIncrementExistingObjectCount(     IN PKSSHELLDEVICE ShellDevice Parameters: ShellDevice   <<description>>. Return Values: None. KsShellDecrementExistingObjectCount <<description>> KSDDKAPI NTAPI KsShellDecrementExistingObjectCount(     IN PKSSHELLDEVICE ShellDevice     );  Parameters: ShellDevice   <<description>>. Return Values: None. KsShellCreateFilterFactory <<description>> KSDDKAPI NTSTATUS NTAPI KsShellCreateFilterFactory(     IN PDEVICE_OBJECT DeviceObject,     IN const KSSHELLFILTER_DESCRIPTOR* Descriptor,     IN PWCHAR RefString OPTIONAL,     IN PSECURITY_DESCRIPTOR SecurityDescriptor OPTIONAL,     IN ULONG CreateItemFlags,     OUT PKSSHELLFILTERFACTORY* FilterFactory OPTIONAL     );  Parameters: DeviceObject   <<description>>. Descriptor   <<description>>. RefString   <<description>>. SecurityDescriptor   <<description>>. CreateItemFlags   <<description>>. FilterFactory   <<description>>. Return Values: Returns STATUS_SUCCESS, else some error. KsShellSetDeviceClassesState <<description>> KSDDKAPI NTSTATUS NTAPI KsShellSetDeviceClassesState(     IN PKSSHELLFILTERFACTORY FilterFactory,     IN BOOLEAN NewState     );  Parameters: FilterFactory   <<description>>. NewState   <<description>>. Return Values: Returns STATUS_SUCCESS, else some error. KsShellStandardConnect <<description>> KSDDKAPI NTAPI KsShellStandardConnect(     IN PIKSSHELLTRANSPORT NewTransport OPTIONAL,     IN KSPIN_DATAFLOW DataFlow,     IN PIKSSHELLTRANSPORT ThisTransport,     IN PIKSSHELLTRANSPORT* SourceTransport,     IN PIKSSHELLTRANSPORT* SinkTransport     );  Parameters: NewTransport   <<description>>. DataFlow   <<description>>. ThisTransport   <<description>>. SourceTransport   <<description>>. SinkTransport   <<description>>. Return Values: None. KsShellTransferKsIrp <<description>> KSDDKAPI NTSTATUS NTAPI KsShellTransferKsIrp(     IN PIKSSHELLTRANSPORT NewTransport,     IN PIRP Irp     );  Parameters: NewTransport   <<description>>.  <<description>>. Return Values: Returns STATUS_SUCCESS, else some error. KsShellAcquireLeadingEdge <<description>> KSDDKAPI PKSSHELLQUEUEEDGE NTAPI KsShellAcquireLeadingEdge(     IN PKSSHELLQUEUE Queue     );  Parameters: Queue   <<description>>. Return Values: Returns STATUS_SUCCESS, else some error. KsShellAcquireTrailingEdge <<description>> KSDDKAPI PKSSHELLQUEUEEDGE NTAPI KsShellAcquireTrailingEdge(     IN PKSSHELLQUEUE Queue     );  Parameters: Queue   <<description>>. Return Values: Returns STATUS_SUCCESS, else some error. KsShellAdvanceTrailingEdgeBytePosition <<description>> KSDDKAPI NTAPI KsShellAdvanceTrailingEdgeBytePosition(     IN PKSSHELLQUEUE Queue,     IN ULONG ByteCount     );  Parameters: Queue   <<description>>. ByteCount   <<description>>. Return Values: None. KsShellReleaseLeadingEdge <<description>> KSDDKAPI NTAPI KsShellReleaseLeadingEdge(     IN PKSSHELLQUEUEEDGE Edge     );  Parameters: Edge   <<description>>. Return Values: None. KsShellReleaseTrailingEdge <<description>> KSDDKAPI NTAPI KsShellReleaseTrailingEdge(     IN PKSSHELLQUEUEEDGE Edge     );  Parameters: Edge   <<description>>. Return Values: None. KsShellAdvanceBytePosition <<description>> KSDDKAPI NTAPI KsShellAdvanceBytePosition(     IN PKSSHELLQUEUEEDGE Edge,     IN ULONG ByteCount     );  Parameters: Edge   <<description>>. ByteCount   <<description>>. Return Values: None. KsShellAdvanceMappings <<description>> KSDDKAPI NTAPI KsShellAdvanceMappings(     IN PKSSHELLQUEUEEDGE Edge,     IN ULONG MappingCount     );  Parameters: Edge   <<description>>. MappingCount   <<description>>. Return Values: None. KsShellSetPacketIndex <<description>> KSDDKAPI NTAPI KsShellSetPacketIndex(     IN PKSSHELLQUEUEEDGE Edge,     IN ULONG PacketIndex     );  Parameters: Edge   <<description>>. PacketIndex   <<description>>. Return Values: None. KsShellQueueSetByteOffset <<description>> KSDDKAPI NTAPI KsShellQueueSetByteOffset(     IN PKSSHELLQUEUEEDGE Edge,     IN ULONG ByteOffset     );  Parameters: Edge   <<description>>. ByteOffset   <<description>>. Return Values: None. KsShellQueueSetMappingIndex <<description>> KSDDKAPI NTAPI KsShellQueueSetMappingIndex(     IN PKSSHELLQUEUEEDGE Edge,     IN ULONG MappingIndex     );  Parameters: Edge   <<description>>. MappingIndex   <<description>>. Return Values: None. KsShellHandshake <<description>> KSDDKAPI NTSTATUS NTAPI KsShellHandshake(     IN PKSSHELLPIN ShellPin,     IN PKSHANDSHAKE In,     OUT PKSHANDSHAKE Out     );  Parameters: ShellDevice   <<description>>.  <<description>>.  <<description>>. Return Values: Returns STATUS_SUCCESS, else some error. Microsoft Corporation Company Confidential  DATE  10/27/98        Draft - Microsoft Corporation Company Confidential      TIME  2:51 PM Revision 0.207            WDM Connection and Streaming Architecture Revision 0.207          WDM Connection and Streaming Architecture  DATE  10/27/98            Microsoft Corporation Company Confidential            TIME  2:51 PM  DATE  10/27/98       Draft - Microsoft Corporation Company Confidential       TIME  2:51 PM Revision 0.207            WDM Connection and Streaming Architecture Revision 0.207            WDM Connection and Streaming Architecture  DATE  10/27/98       Draft - Microsoft Corporation Company Confidential       TIME  2:51 PM  DATE  10/27/98       Draft - Microsoft Corporation Company Confidential       TIME  2:51 PM PAGE \# "'Page: '#' Page: 2 PAGE \# "'Page: '#' Page: 2 F. Factory Object Allocator Source Pin Sink Pin KS Object Header File Context File Object KS Object Header File Context File Object Filter Descriptor Pin Descriptor KS Pin  Pin Factory Object KS Pin  Object Filter Object Device Object KS Device Header Device Context Device Object Allocator Queue Queue Queue Sink Pin Queue Source Pin Allocator }xsnkfa wtnf^[OLI ~pbTQI |xqjf_XTQ }xsnib[WP {wpie^WS {vqjc_XQ }vokd]YR zvohd^PK {wpie^WSM |uqle^ZS |wrmhc^YM |wrmhe` zupkfc^Y {vqnida\W zurmhcU spmjgb] }olifc^ {mjgb]X }zwrmhc^[ ~{xupkfa\ }zwrmhc^Y uroje`[V zvql^[XS |yvsnid_Z }zwrmhc^[ |ytolgb] |wtojgb] |wkheb_Z }xjgda^ {vheb]X {xspkfa {vqcWT ~wrngb^W |uplgYVS zupkfa\W yungc\UQ wojb[VO {tpib^VQM |xseb]XSN {vqle^Z ~{vqlgb]XQ }xsnid_ZU |uqjc_XQ }vokd]YR ~{vqlgb]ZU }xsnida\W |wrmhc^YV ~ytojeb]ZU |nkfa\W {vqlgYV }olgb]X {vqlgb_ZW roje` tqlgb]X zzzzzzzzxvvv tzzrrr
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\ksfilter\ksdsp\doc\ksdsp.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft DSP Platform Interface Definition Title _PID_GUID revnumDSP Platform Interface Definition Bryan A. Woodruff DSP, Kernel Streaming, KS This is a template for a Windows NT design document. nt5-new.dot Bryan A. Woodruff Microsoft Word 9.0@@@@@@ @@@@@@ Z(e8j ksdsp.docS`B:q G3_Pr o<n"! Fo>aL cZY?I K3L$G!3 <S+Cs> I>`lUZ Zale1 MuI?y Ils|g Tq"FJ5 'cbmh |nteQ bWW`= 4]qg) 0.;s7H 5 Yiek& T]TfO ucN[0 >7'$f{MM X;&FL1 E>A=>@> 37}'7 =l$zO D~0{` ;)m:k 4d7q_ f&}yc {MG_G ?'Nj* 5)o;kL Hc:HE[ "h=_= )_=SS +mZ1H pUU~? t!"3|I[ 1G7k& ixnwr jk_riG }4v60 .%}MS S5yn< y?jp-S 5Y_K) d)cA' *(/ig *(/ig _v{cp >]Oj?c B;gb-:F5 %J=xV {t&=_ iY{up u===l: S>X=<\ 7u,vY w15dE c%&fA m;UKm ._M4O_ +H><OIm )y>Bx iwyp3 UA1YE 7hyQp 7hyQp sZ@|| I4Ozsf]Z Pn+t>@ /jm]U?E C.qWB dz7't `}H5^x 4b?[O @ZN # sZo\; uXaV4 9mov/ \;A(n ]s+qk ke>A\ ky'q_  .NN#N k@\OQ [/>!u .=o7C 3Fz^q 4kz95 +cU$. f8UH]VISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Masters Page-1 3-D box Horizontal bar Down arrow Up arrow 2-D single, open 2-D single Right arrow, open Left / right arrow Square block Horizontal bar.12 _VPID_PREVIEWS _PID_LINKBASEbryanw C:\Program Files\Visio\Solutions\Block Diagram\Block Diagram.vstVisio (TM) Drawing  Arial) es New R oman) RWingd oPJG@ kb<u4 yJB t G?Y?k? O@qUd f`!WG,n54c aP!V? oJ~rT q4ijAd dHoZj  //A/c MC//A/S/e/w" winspo \\msp rint44\C ORPB 26/ 2011 (MC 2N) 172. 31.224.2 26cor 3-D bo x with v ariable  orientat se contr vertical  flips t rspectiv opyright  1997  Visio Co rporatio n.  All  s reser Shape. hlp!#150 odify De pth and ?Orient OsB2ODI ?iH.A 3-D ho rizontal  bar sha pe. Open  either  or both  ends & s~   to fr place a gainst  block pyright   1997 V isio Cor poration .  All  s reserv Shape.h lp!#1601  Left En d Only+" F=Bthe  lCAeH@ofsBb ar for p lacement  against  ot@r blo ck s4!s*  R=BBHP 0*eAK Q#P!s&_8_J_ @alone u |?2B@ Qps-8R -0v-0L18 3-D do wn arrow  shape.  Open tai l & send  to fron}t place against  other blwock `9Copyri 97 Visio  Corpora tion.  A served. pe.hlp!# 16000 ose Tail Owpen 2or c 0 of2Bar row f*@pl acement  against  o3@r bloc7k s s,)AIA stand al one use !>3FY6 BC=0>@ Q(-DT 3-D up  arrow s hape. Op en tail  & send t o front place ainst ot her bloc `9Cop yright   1997 Vi sio Corp oration.   All   reserve Shape.hl p!#16000 Close  Open2C e>Bor  c.Bthu@4@ o fvBarrow  fn@placem ent agai nst ow@r  block s Astan d alone  Q(?-DT Open o r closed  arrow.  Place o gains t edg another ing to F ront". `9Cop yright   1997 Vi sio Corp oration.   All f  reserve Shape.hl p!#15020 n Tail "end o f arrow. Q(-DT Open o r closed  arrow.  Place o gains t edg another ing to F ront". `9Cop yright   1997 Vi sio Corp oration.   All f  reserve Shape.hl p!#15020 Open Tai Close d of arr Q(-DT 3-D ri ght arro w shape.  Open ta il & sen d to fro place against  other b `9Copyri 97 Visio  Corpora tion.  A served. pe.hlp!# 16000 ose Tail Owpen 2or c 0 of2Bar row f*@pl acement  against  o3@r bloc7k s s,)AIA stand al one use !23FJM6 6C102@ -D arr ow shape  with ads at l eft and  right. opyright  1997  Visio Co rporatio n.  All  s reser Shape. hlp!#160 P/b/t/ $:0'.|6 @!H%, US-0&-0 0%4F>A6 *C%0&@ L9c0l -\F]3 #]173k1 Square  block s?hape. ape.hlp! #16025 `9Copy right  1997 Vis io Corpo ration.   All  reserved H/Z/u(w( w0zw0Ow0 B0p0=2 3-D ho rizontal  bar sha pe. Open  either  or both  ends & s~   to fr place a gainst  block pyright   1997 V isio Cor poration .  All  s reserv Shape.h lp!#1601  Left En d Only+" F=Bthe  lCAeH@ofsBb ar for p lacement  against  ot@r blo ck s4!s*  R=BBHP 0*eAK Q#P!s&_8_J_ @alone u %0L)8 i@0Mn C:\Pr ogram Fi les\Visi o\Soluti ons\Bloc k Dia  Raised ?H-=(P a0,O>Oe0SOeO ?m0zL _(_}0 d_v_@ [0G/a EdB5d65b 5d\5b q06aw" U9)`: pQ1`R `UY[0Pg0U{0V{` _E0`c`I x5 ]| *9KSPROXY /%*T  /4OFM User Mo Rd?v? ernel6U @@[63? P[1"  ?_Q_,c_u\if  Platfo rm Inter face Dri :?L0He .o@oRodo y?"lT Aud+io /?/Q/ C-3 Deco ?P(-DT $?@q a F/X/j*' 7xC?ontrol !?3?E?) @OROdO GoWd)K@+ ,yr6#NS (Sourc e FilterJc0.g:.u? /]DtqdQ1]OoN.( pG<&_~L foxo` 3N[[`j +.2{L 7@y6XV #qxMixer  / Audio  Stream _Proxy O[ba= O$O6OHOZOlO~O _ >oPobo$ 3C?ontrol DA0oC SP Kerne NB3O@OOJBy Y-KSPROXUY D5@F O3J%]3S%@ Q?c?u? O_h@h _b%L_b O.O@ORO@b Jo\V_ !0a0% ?oQocouo Contr #?54J '_9_K_ "?4?F?X?j? '(Control ./<+W @@Xt5A 2/D/V/h, ?)?;?E`P6 XOjO|K ?/Q/c/l Q?c?u1W@|4 WP(-?DT U,tTu% )WwGcg {K_]_ w_i{' DoVohozo 5_wOI ntrol /%/7'yR$zR$ {R/d.x{/ I?@[?Ao) B9\Sl PX&Ssg/y/U :?L?~_ #o5oGg bfcoum (<{'A7 "RyQ3d Tc>P? e/O/y No`o- D_FlG g@zE_ ` @~e AC-3  Decode P print44\ CORPB 26 /2011 (M /0/B/T/f/x/ Page-1 Black  _White Green Yellow 10% x Long d 1Gpxl Hairq rial ck e?red top left Stylt Depth)#Ro_uting$# ToW!Cle aranceX %vW/eYO+Nod`) iddG  lockSiz *Y)#Avenu #Contr olsAsInpwuts )#s!Jump $owOnDr< 3-D box mLu1D-s! 3Fr 0 Horiyz 0 Down  arrow  / ri 3.116 w0"O4B4 ormal Visio 1 y0sG le, o CShadFA 9.87v quaore b <50u_ _6,\13 &l<PD9` eo6t_ AplApUZApLAp>Ap%Ap }pUz}p^}pL}p8}p /:/L/ <?!?3?E8VISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Masters Page-1 Circle Square block Curved arrow Dot && arrow Dynamic connector _VPID_PREVIEWS _PID_LINKBASEbryanw C:\Program Files\Visio\Solutions\Block Diagram\Block Diagram.vstVisio (TM) Drawing  Arial) RWi7ngdQ xB=o' ;03@B paOsOZ o?O4f "_4_F_X_j] PJV1_n?? p=Z0U> $2'/9/ K/]/o/ A?S?e9 O3?-O?Oi5 ZO3S2 "_4_j4 oQOcNv@k_@1 winspo \\msp rint44\C ORPB 26/ 2011 (MC 2N) 172. 31.224.2 26cor 3-D ci rcle sha Shape .hlp!#16 9Copyrig 7 Visio  Corporat ion.  Al "s res?erved. Width Square  block s?hape. ape.hlp! #16025 `9Copy right  1997 Vis io Corpo ration.   All  reserved H/Z/u(w( w0zw0Ow0 B0p0=2 Arrow  with adj ustable  curvatur e and a head loc ation. behaves `Qps-8R opyright  1997  Visio Co rporatio n.  All  "s reser Shape. hlp!#150 G,A"G lu0Y@ T(D8A ! Arr?owhead ify Curv ature ;S$d+ ThetS0Iw 0*!\Q Dotted  arrow o f variab le direc tion. to oppo site sid `9Copyr ight  997 Visi o Corpor ation.   All ,Bs r eserved. ape.hlp! #17080 EB89UW OIYX!YR inU@R-A 9dLef rrow p:ct o thePC/l pqU(pb  hR~xs ontrols. size Dot  and `bhe Conn_ector[ This c onnector  automat ically r outes be tween th e shap to glu  ethod3 Copyrigh  1997  Visio C orporati on.  All  p2s rese rved. shape .hlp!#26 C:\Pr ogram Fi les\Visi o\Soluti ons\Bloc k Dia  Raised ?DH-=(P JOe0_OqO Black &  White 9oKon Color Sc hemes... t the c s docume3nt Jq")0:q*I0:q2 0z=0E !r<Ip Q(-DOT l#1Utp ad&CI D evice Fu nction ( PDO)9p"pW /pHa02 P Plat  Driver  w6`O6A U0"q? WhInt/erfa /++ukG ?c/lu)ul /8?J?\? ?UOgOyO o!a&@(mH ,%pe; ES1L_ i*$r04 7/I/[/m/d  DrivvsP(F io{o' DnN!Ef o!O;o Mo_oqoh/z/  Drivw print44\ CORPB 26 /2011 (M Letter /0/B/T/f/ ?,?>? Page-1 Square b Curved a Dot &&& Dynami c connec ineJumpF}aM acementS Routinmg ClearancOeX #Gridd !?*YQ #Contro lsAsInpu;ts %ResI Q isio 00  $1 Hig{hl $2 Shad* '3 Grad uated &50 Bkg+nd 0order %80 MWark Normal =PU}=Pl=P\=PJ=P uPU~uPzuPvuPruPUnuPjuPfuPbuPU^uPZuPVuPRuPU>uP*uP ?%?7? I?[?m? !6-fAJ/\# j!F!r-n! ocalizeB egin-Ra I` addon U ?,?>?P?b? OTa(O DOVO"OzO U$TTfmT* p3Q]Ad ^eQ]a n0#g0\R51 aqkcP o7o#m7 rtHd0 rUpd0 rUld0 rEhd0 q##9&  H pxo or Schem es... custUI .vsu= Tools m h_  8_!_  _ P_   UEV s 2is n ot avail Flowcha rt-T&QM  Diagram  Wizard lor Sche mes... N.exe'G ustUI.vs &Tools Localize Check  each w!B  first to  see whe ther it  can be f ound on  [P comput+er PiA_ddonCkPt Popul aterRarra Numb]P of menu_P emsPQgPadd FoXojfSA LVBua4LFV sAsEua b@bHuo 8Tif Do  place @@ckt ]Phas app lied a  om UIJPle nd/<@g specif Visio^ [Q4ahP s0cBuilt- sav0`o tPexistin <@sQdk GrabrP Dele/dnew ly cre.`d windowvPn text- (DKra sQActi; ,ka_Q 59424f3 O,O>OPObOtO (_:_L_^_p_~Z riant stdole ormsC Block_ Diagramo _Evalu AdkdM \1|Sep cs?\> Caption barWiza rdNameW strPath accrDq nbs|}qbDat abase FlowTQM abColor ON_DATAB F7LOW- COLORSCH EMESC aF7ILEc ST_UI_ NU_TOOLS aEXIT ERRORjj gInPl_ace7 ?Kill olear aAtID fbr0v `AtCwmeMw finiHel I}Vce Opened Le@Tb 0=7=0 1<?}1 *\G{$ 0430-;"` 6}#2.0 #C:\WIL \Syst 895C1 0C95EC #Micros Poft  brary 3D593 008A88 ?TEMP  \VBE\ SD@Vc _iE?W4 {0C4576C B-0D44-1 1D2-8A08 -006008A 88CA8}" Documen t=This me="Bloc k_Diagra HelpCo_ntext CMG="414 3EBE9EFu PB="F6F 45C2BA45 55856 C="ABA90 1E6B7E7 t Extend er Info] 1={38 32D640-C 11005A}; VBE;5 rkspace 563, 75: Add #  items i Set t he capti on an; in  of add~  to run 3!N8" separato r bar&1=!( if Tools <#exists) d M>&. d/v.0 &new cus tom UI f &"KAU Powerpo intize HB@\>B Attri 'P= "( 1PA21- $0046} |Creat edecla "@Expos lateD0er liwcit & Sub IC () bj As  @trPath onWSbC lorSch 'Loca liz eBeg iD!Co @rDDON_ COLORSCH CUST_UIB NAME! NU_TOO x0G@4  heck e h wbP Nex8t ' & ]a~y 'NuDm 2D! 5 Prray( t ava _ Ifb 0vcpy! OcHks  s aq0 spec`ifi Is No 'Delep @ly c  Kills $Iwi0ndo - (Dra0 "Act0 C OSOh  _oqm d_B_var}_ Color2 H/AOp !ThisD ocument !lock_D iagram C:\Pro  Files\ Common3 icrosoft  Shared\ s\Vis io\VISLI]B` T\System 32\StdOl?e2.tlb ?stdoleq Forms.TW TEMPW MenuIQ Ope7ned:@ AcustUI. &Tools ARunI ^ :Adocj ount  1 To i - 1() e captio n and m ni hel p 0text = var  RUN & L ardNa ) - Z ( @of  ols A  A\ i  Fal( new c I f@>a TPhisDD N_ERR OR:#B Private  (ByVal  As Vi sio.IV  Dim  owerp ntize" Ope<ne ?$?6?H?Z? p#@T#@ /Ab"h$q o'o9o Ko]ooo /-/?/Q/c/u/ ;?M?_?q? O%O7OIO _!_3_E_W_i_ o/oAoSoeowoVISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Masters Page-1 Square block Horizontal bar Curve connect1 Dot && arrow Dotted line Curve connect2 Directed line Right arrow, open Down arrow Bend callout Circle _VPID_PREVIEWS _PID_LINKBASEbryanw C:\Program Files\Visio\Solutions\Flowchart\Data Flow Diagram.vstVisio (TM) Drawing  Arial) es New R oman) RWingd i6;03|2 Ok?}?T ^OpOP &Sp'Y )s *e /%pU0} pX#PZ S/e/w/ SOeOwO N_0NI o-o?oQoco 5h/z/ ?#?>?$zN YAd9jq1 O)O;OMO_OzO EZ5S_e_w_ _'_9_@ Qocouog G?Y?[ 5@l/~/ Lk64i _/_A_ CW_i_ o%o7dD print\HP  4Si COR PK PS etter  /2/D/V/h/z/ winspo \\ntp rint\HP  4Si CORP corpk 17 2.31.240 Square  block s?hape. ape.hlp! #16025 `9Copy right  1997 Vis io Corpo ration.   All  reserved H/Z/u(w( w0zw0Ow0 B0p0=2 3-D ho rizontal  bar sha pe. Open  either  or both  ends & s~   to fr place a gainst  block pyright   1997 V isio Cor poration .  All  s reserv Shape.h lp!#1601  Left En d Only+" F=Bthe  lCAeH@ofsBb ar for p lacement  against  ot@r blo ck s4!s*  R=BBHP 0*eAK Q#P!s&_8_J_ @alone u %0L)8 i@0Mn Conneoctor Connec t two ob s with  a curve d line.  Height h andle ad atu?re. flowcha rt.hlp!# `9Copyri 97 Visio  Corpora tion.  A ll [2s re served. i4eQ! Dotted  arrow o f variab le direc tion. to oppo site sid `9Copyri 97 Visio  Corpora tion.  A ll ,Bs re served. pe.hlp!# 17080 EB89U OIYX!YR nU@R-A 9dLeft row p:ctoo thePC/lTa| pqU(pb  ntrols.x ize Dot  and `bheaCd Dotted  line wi th varia ble endp oints. rough: byo ; the   `9Copyri 97 Visio  Corpora tion.  A ll 0Bs re served. pe.hlp!# 17080 ,QZ 'R ObX\! ntrols.x ize Dot Sc>H@ch.b1  Endpoin )'A!L ine wia  on e{ Leftc 5[_<4 Conneoctor Connec t two ob s with  a curve d line.  Height h andle ad atu?re. flowcha rt.hlp!# `9Copyri 97 Visio  Corpora tion.  A ll [2s re served. nector Drag b etween s hapes to  indicat e a flow ation or  control ]rB<, Q(-DT Flowchar t.hlp!#5 9Copyrig 7 Visio  Corporat ion.  Al 2s res erved.l1 -42UYR F}nKA Move Ar row Head L85[HB Conneoctor Use th is objec t to con one st ep in yo ur flowc wchart.h lp!#5263 pyright   1997 V isio Cor poration .  All  s reserv 4B4[TS ,U3[D P3W[ N( t3[N' 3-D ri ght arro w shape.  Open ta il & sen d to fro place against  other b `9Copyri 97 Visio  Corpora tion.  A served. pe.hlp!# 16000 ose Tail Owpen 2or c 0 of2Bar row f*@pl acement  against  o3@r bloc7k s s,)AIA stand al one use !23FJM6 6C102@ 4?[MU 3-D do wn arrow  shape.  Open tai l & send  to fron}t place against  other blwock `9Copyri 97 Visio  Corpora tion.  A served. pe.hlp!# 16000 ose Tail Owpen 2or c 0 of2Bar row f*@pl acement  against  o3@r bloc7k s s,)AIA stand al one use !23FJM6 6C102@ Flowcohart Callou t with b end. Sid e handle  control s word-w?rap. C cation. Q(-DT wchart.h lp!#5228 pyright   1997 V isio Cor poration .  All +2 s reservwed.+ Drag t he side  handles wto  width of Rtext bl?ock. 0JAHV Adjust B end + x7[bo 3-D ci rcle sha Shape .hlp!#16 9Copyrig 7 Visio  Corporat ion.  Al "s res?erved. Width Q&h\' k9[wu dO=8[ =4[FG 5[!tL Flow -  Data  Copyr ight  993 Shap eware Co rporatio n.  All  s reser ISIO tem plate fo r cre- grams us s fro C:\Pr ogram Fi les\Visi o\Soluti ons\Bloc k Dia  Raised Flowch art\Conn ectors a nd Callo hape1%* chart !N/`$Con?nectorp/ `90a` %bY0 q0,O>Ou0SO eOy0zO 6_RH_ "Y0.ba* 9bZy0Rc#9bb :aBK0rc 0QzM08 o Ueu0Ny0S` TY0UVK0W c7`do`Yg %l?!UD' /`He0 DSP Fil ter Prox Des/crip _?M?%_ !_3_E_m? tVXv5 Y &0j %o7oIo_  Filter  Objec E/W/i+^s $_6Xc o(oT& !0P/h PLATFORM  In) face #shIK sDspIo a nela@x kogAR ?QA{< (?:?L?! _&_8_J_ Platform  Driver /&/5* 0OBOTO Ko]ooo [OEB5 Y_k_}_ cd'kh dc,kh <?3[s Page-1 k fill White Greeun Yellow  line sh7ort "ial   8pt ck +top l By0Times visContr olsAsInp utsCB`@P  ^BRouoting aranceX lockSiz CAvenuMe<S 9P Shad yPVisi Q|SNo Square b PHoriz yPc@nector~I urve c yPDot  a&& a c+e.18   caZ Tor Otext Aes=P AJump t0no6 Right , openI @n a&aw ?+?=?O?a?s? 5 _S_ !n%R! M  .!; !0T.!G R!H:!c  }u 3  0u 9u C prqpm Ps]pCJ MuPUc} plu V uRuqpl BqpsT @ u@p  6u n 0BApG]pHu@ pN%pT UTyPO pe}PP ?5?G? 4a3340 3(A`Q  "ak`9%TUa%T D!mDlE aqmDrq mber of  menu ite ms to be  added &Flowc hart Dat abase Wi T&QM Dia gram W FSF^= hA$E@ (Z04d Z0]2u `Z00d &To7ols< !0D?. lowchart  Databas e Wizard 6-T&QM  Diagram =.exem N/A.B custUI.v O!_3_PE_W_i_ Visio oject1 MSFormsC_ ThisDocu ment< valuate MenuItem tsObj Caption str?Pathl ?UIobj3 InPlaOce7 BuiltIn SaveToFi l7earD ?AtID Drawi iniHelp *\G{00 20430- #2.0#0# C:\WINNT 40\Syst m32\ST LE2.T 95C1F1- D897-11D @1-BC9E 0C95E 3.TWD #Microso brary 91C8- bryanw Temp\VB$ ,EX', Ss Pq02T? vID="{ 9E12D0E8 -4E0BO 885C-002 0AF84D58_2}" Conwtex CMG="4C4 @D151 APB="5 B59E417F "6A68D52 8E5296Q1A [Host  Extende r Info] F1={383 2D640-CF CF-8E 05A};VBE ICPWorks P598, 8/@h/@\e@7 P:0ME6 chart k -TQMq u Check  in p4 1B yc f usQP has a\  a cE te ?and/or b7een UI.wvsuR Dele# newly c B@Rk  TI`N@@ dow c , add RuKn   arat* aftQP lQpXm k2A@Pc "/4.G =Q JAS  oSo` Document Opened ar_LeftQ iAddo nCount GBhyB zAnP! owTQM szarr Names N_DATABA oFLOW FILE" CUST_U MENU_ TOOLS} ERROR UCasek5 dArgs publci Diagram C:\Pr  Files \Common Microsof t Shared \VISIO D EBUG\HAWwAIIM1LIB(  DLLeP sio9! NNT40\Sy stem32\S TDOLE2.T LBm1a@ eP BmD@eP Localiz eBegin T&QM  M.e+xe custUI.v Tools FEndC Check e ach w irst to  see whet her it c an be f! P com puterF Mn|_f Popul Pofu  Padde u0q<ubqHq  is a vailable in placzQ pplie d a VQom ;UI Ple " `and/uo specificx" QBuilt- xisting objec dnewly/ cre A@PGb Pntex t- (Dra QAcsti oQbar" Pdoes  .'b>-f"  Yb|A( .-bpa2 capti  mini h Qseparat  VB_Nam = "Thi Documen 021PA21- False Predecla "@Exp mplateD0 stomi  Sub  AddMenu tem() im vi SetsOb j As Vis Count Intege ariaDnt strP(ath I@?Tec NoTool szarr alize pDDON_ ATABAS hart  Diagram .exej @ST_UI_ U_TOOLS 0Run $ On Er r or G I E XIT_`2E RR<OR heck eac ther   can b Xd `h  comp Applica etmBR LT  0 To U &L) The  !fZ=  Nepxt Popua bQ`?of @ = A@rra  'nde s ava Place  and/ ecifi,c  newly  xt-  (Dr  from  Ac tive  & if i  does n Qt`,  tHhis N9$`+1n @End~@  i>nB{` ]iMnu Tmini  K  & L ) -\ 4 Fbws) e{afxter stdole C:\WINNT MSForms.7TWD rofiles\ bryanw\T \VBE\ ntOpene A332.DLL * . / /!/3/E/ W/i/{/ ?/?A?S?e? O+O=OOOaOsO '_9_K_]_o_ o#o5o GoYoko}o ;c0V- th4[_!VISIO 5 Drawing VISIO 5.0 Shapes Visio.Drawing.5Pages Masters Page-1 Square block 3-D box Horizontal bar Down arrow Object Curve connect3 1-D single, open _VPID_PREVIEWS _PID_LINKBASEbryanw C:\Program Files\Visio\Solutions\Block Diagram\Block Diagram.vstVisio (TM) Drawing  Arial) RWi7ngdQ xB=o' ;03@B paOsOZ o?O4f "_4_F_X_j] PJV1_n?? }BP@C /1/C$/K/]/o/ 03?E?W?i?{? O-O?OQOcOuO _'_9_K_]_ o/oAi ?~RpG winspo \\msp rint44\C ORPK 26/ 2557 (MC 2S) 172. 31.240* 26corp_ Square  block s?hape. ape.hlp! #16025 `9Copy right  1997 Vis io Corpo ration.   All  reserved H/Z/u(w( w0zw0Ow0 B0p0=2 3-D bo x with v ariable  orientat se contr vertical  flips t rspectiv opyright  1997  Visio Co rporatio n.  All  s reser Shape. hlp!#150 odify De pth and ?Orient OsB2ODI ?iH.A 3-D ho rizontal  bar sha pe. Open  either  or both  ends & s~   to fr place a gainst  block pyright   1997 V isio Cor poration .  All  s reserv Shape.h lp!#1601  Left En d Only+" F=Bthe  lCAeH@ofsBb ar for p lacement  against  ot@r blo ck s4!s*  R=BBHP 0*eAK Q#P!s&_8_J_ @alone u %0L)8 i@0Mn 3-D do wn arrow  shape.  Open tai l & send  to fron}t place against  other blwock `9Copyri 97 Visio  Corpora tion.  A served. pe.hlp!# 16000 ose Tail Owpen 2or c 0 of2Bar row f*@pl acement  against  o3@r bloc7k s s,)AIA stand al one use !23FJM6 6C102@ Generi c box wi th text  and conn ection p oints. C an be st retched  y dimwens `9Cop yright   1997 Vi sio Corp oration.   All |  reserve Shape.hl p!#15000 '@j'@6'@ Flowcohart Repres ents an  instance chart.hl p!#5252 `9Cop yright   1997 Vi sio Corp oration.   All   reserve;d. 3h lO~O` TYB*? AHJoZ TGBV$ g\d>Q tGBYk (RQ[<nQ4 ZdGBZ H>TGB 1?A?*g 3} pRQ 1,Enter  the c ssociate d with s proces sS0y  $###-,H D]u73 stKep6 sour2 peopleJ0oquir" tas%kS0n perti `0Set selec! sh7ape6 `~#7r Conneoctor Connec t two ob s with  a curve d line.  trol ha ndle adj flowch art.hlp! #5264 `9Copyr ight  997 Visi o Corpor ation.   eserved. ]1O%E ]0,XB +dSTB just Cur vature Open o r closed  arrow.  Place o gains t edg another ing to F ront". opyright  1997  Visio Co rporatio n.  All  R"s reser Shape. hlp!#150o15 Open T Close93 sc~j ch.c1 ~@V:#3 d of arr 6D0x0 Q(-DT C:\Pr ogram Fi les\Visi o\Soluti ons\Bloc k Dia  Raised wchart\B asic  Data " /t\Conne ctors an d Callou ?H-=(P 1)0EI0 0OBOe0WOiO ?m0~L _I0B1" Black &  White lor Sche mes... `'Set _the cZbs`b  f\`this  document :1G.92 aIRc0 Flowchacrt onnector `(/d< Ml#1U SP Filte r Proxy @DfDh @*IJA O'O9OKO]C Oyy_z IKsDspI f/x/* ?L?&?p? _(_:_ L_^_p_ O1/C/ nnel1P ?Q(-DT Gs`zU 5 o2o KS Proxy [Pa4b3 Pf?x4 User  a)ern a*DSP +O=OOO? atform D_river /!:(`# /wPL[! "J3*7 ?l/~/S ($O6OHOZO R_d_v_hozo c~}v}v @UMvv O9Xkv9Q ata Qu #A/S/ 6?H?Z? O/OAOSO _'_9_K_]_ o-o?oQo Contr i=]Rh/ ?A~T8 1?A*g u@Tu@^ _@z3@ lqgxl j3 o2o msOu> p(-DT /?@VU qz27{ IO[O+ 7_I_[_m_) o.o@o o>/TP/F :BOru print44\ CORPK 26 /2557 (M /0/B/T/f/x/ Page-1 Square  block 3-D bo rizontal Down a Hairli White  fill.  8pt c entered ources urve con ngle, op isPlacem> Style Depth ranceX ^1#BN Siz-!_*Y Avenueh# rolsAs?Inputs owOnD Visio 0 '1 HOighl $2 Shadd 73 Grad 82[9'5q2 !L4;82 50 Bkgnd 0order %80 Mar 83CI'53 FNorm 5Pi5PUU5P>5P)5P ePU|ePjePZeP>eP5"eP /:/L/^/ ?%?7? I?[?m? !6-fAJ/\# j!F!r-n! ocalizeB egin-Ra I` addon U ?,?>?P?b? OTa(O DOVO"OzO U$TTfmT* p3Q]Ad ^eQ]a n0#g0\R51 aqkcP o7o#m7 rtHd0 rUpd0 rUld0 rEhd0 q##9&  H pxo or Schem es... custUI .vsu= Tools m h_  8_!_  _ P_   UEV s 2is n ot avail Flowcha rt-T&QM  Diagram  Wizard lor Sche mes... N.exe'G ustUI.vs &Tools Localize Check  each w!B  first to  see whe ther it  can be f ound on  [P comput+er PiA_ddonCkPt Popul aterRarra Numb]P of menu_P emsPQgPadd FoXojfSA LVBua4LFV sAsEua b@bHuo 8Tif Do  place @@ckt ]Phas app lied a  om UIJPle nd/<@g specif Visio^ [Q4ahP s0cBuilt- sav0`o tPexistin <@sQdk GrabrP Dele/dnew ly cre.`d windowvPn text- (DKra sQActi; ,ka_Q 59424f3 O,O>OPObOtO (_:_L_^_p_~Z riant stdole ormsC Block_ Diagramo _Evalu AdkdM \1|Sep cs?\> Caption barWiza rdNameW strPath accrDq nbs|}qbDat abase FlowTQM abColor ON_DATAB F7LOW- COLORSCH EMESC aF7ILEc ST_UI_ NU_TOOLS aEXIT ERRORjj gInPl_ace7 ?Kill olear aAtID fbr0v `AtCwmeMw finiHel I}Vce Opened Le@Tb 0=7=0 1<?}1 *\G{$ 0430-;"` 6}#2.0 #C:\WIL \Syst 895C1 0C95EC #Micros Poft  brary 3D593 008A88 ?TEMP  \VBE\ SD@Vc _iE?W4 {0C4576C B-0D44-1 1D2-8A08 -006008A 88CA8}" Documen t=This me="Bloc k_Diagra HelpCo_ntext CMG="E3E 14943154 PB="A BA9019BC "7371D9D [Host E xtender  Info] 1={3832D 640-CF90 CF-8E43 A0C9110 05A};VBE Works , 563o, 758 u it?ems in<" Set the  caption  an; ini hrX f add 3!N8" arator b ar&1=!(if  Tools<#ex ists)  !0ed M d/v.0 w custom  UI fx0 werpointWize H'B@\>B Attribut? e VB_A 0046} Creatab False Prede Expose emplat eD0eriv licit Dim v j As Vi Count Karia ngJ3UI nWSbCo orSchem szarr qA@s() 'Localiz  eBegiD! ns@rD ORSCH 8...`t T_UIB_A NAME! mUI.vsu MENU_ E,nd# x0G@4 EX eck eac h wbP fi )'0see x8t ' 'Phop  A& ] 'NuDmb rray(A  not a Ex`N@ H =0vc h0as a ~ aHnd/ c`ific  Is Nothi @ly c Clear i0ndow xt@- ( YQ"Ac C OSOhI  _oqm Scheme B_var_ olor2F H/AOp ThisDocu ock_Diagwram :\Pro iles\Com osoft Sh ared\VBA 332.dllb s\Visio\ VISLIB` WINNT\S ystem32\ StdOle2. stdGoleq MSFor?ms.TWD TEMPW EKXDq !AddMen Created Opened stUI.vsu &_Tools ARun ^ :AdoCcj ount  1 To i - 1() e captio n and m ni hel p 0text = var  RUN & L ardNa ) - Z ( @of  ols A  A\ i  Fal( new c I f@>a TPhisDD N_ERR OR:#B Private  (ByVal  As Vi sio.IV  Dim  owerp ntize" Ope<ne ?$?6?H?Z? p#@T#@ /Ab"h$q o'o9o Ko]ooo /-/?/Q/c/u/ ;?M?_?q? O%O7OIO _!_3_E_W_i_ o/oAoSoeowoWindows 2000 WDM Connection and Streaming Architecture DSP Platform Interface Definition DSP Platform Interface Definition info filename \* lower ksdsp.doc Windows NT Design Team author  Bryan A. Woodruff Version 1. revnum  savedate \@ "MMMM d, yyyy" March 16, 1999 Distribution: Microsoft Internal Distribution  Copyright Microsoft Corporation, 1999. All Rights Reserved Microsoft Confidential Printed on  date \@ M/d/yy 3/16/99 time \@ "h:mm AM/PM" 8:56 AM Note: This documentation is an early release of the final product documentation. It is meant to accompany software that is still in development. Some of the information in this documentation may be inaccurate or may not be an accurate representation of the functionality of the final retail product. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these inaccuracies. Contents  TOC \o "1-3"  Contents  PAGEREF _Toc446226936 \h  Intended Audience  PAGEREF _Toc446226937 \h  Goals  PAGEREF _Toc446226938 \h  Document Organization  PAGEREF _Toc446226939 \h  Introduction  PAGEREF _Toc446226940 \h  DSP Filter Proxy  PAGEREF _Toc446226941 \h  Initialization  PAGEREF _Toc446226942 \h  Control Channel  PAGEREF _Toc446226943 \h  Properties, Methods and Events  PAGEREF _Toc446226944 \h  Data Channels  PAGEREF _Toc446226945 \h  Automation Extension Interface  PAGEREF _Toc446226946 \h  6.5.1 RegisterAutomationTable  PAGEREF _Toc446226947 \h  KSDSP Library Interfaces  PAGEREF _Toc446226948 \h  DSP I/O Interface  PAGEREF _Toc446226949 \h  7.1.1 Initialize  PAGEREF _Toc446226950 \h  7.1.2 CreateDspControlChannel  PAGEREF _Toc446226951 \h  7.1.3 AllocateMessageFrame  PAGEREF _Toc446226952 \h  7.1.4 PrepareChannelMessage  PAGEREF _Toc446226953 \h  7.1.5 PrepareMessage  PAGEREF _Toc446226954 \h  7.1.6 MapDataTransfer  PAGEREF _Toc446226955 \h  7.1.7 UnmapDataTransfer  PAGEREF _Toc446226956 \h  7.1.8 SendMessage  PAGEREF _Toc446226957 \h  7.1.9 GetMessageResult  PAGEREF _Toc446226958 \h  7.1.10 FreeMessageFrame  PAGEREF _Toc446226959 \h  7.1.11 LoadResource  PAGEREF _Toc446226960 \h  7.1.12 GetFilterDescriptor  PAGEREF _Toc446226961 \h  DSP Control Channel Interface  PAGEREF _Toc446226962 \h  7.2.1 SetGuidTranslationTable  PAGEREF _Toc446226963 \h  7.2.2 OpenDataChannel  PAGEREF _Toc446226964 \h  7.2.3 CloseDataChannel  PAGEREF _Toc446226965 \h  7.2.4 SendPropertyRequest  PAGEREF _Toc446226966 \h  7.2.5 SendMethodRequest  PAGEREF _Toc446226967 \h  7.2.6 SendEventRequest  PAGEREF _Toc446226968 \h  7.2.7 SetTargetChannel  PAGEREF _Toc446226969 \h  7.2.8 SetChannelState  PAGEREF _Toc446226970 \h  DSP Platform Driver Interfaces  PAGEREF _Toc446226971 \h  DSP Platform Bus Interface  PAGEREF _Toc446226972 \h  8.1.1 InterfaceReference  PAGEREF _Toc446226973 \h  8.1.2 InterfaceDereference  PAGEREF _Toc446226974 \h  8.1.3 MapModuleName  PAGEREF _Toc446226975 \h  8.1.4 PrepareChannelMessage  PAGEREF _Toc446226976 \h  8.1.5 PrepareMessage  PAGEREF _Toc446226977 \h  8.1.6 MapDataTransfer  PAGEREF _Toc446226978 \h  8.1.7 UnmapDataTransfer  PAGEREF _Toc446226979 \h  8.1.8 AllocateMessageFrame  PAGEREF _Toc446226980 \h  8.1.9 SendMessage  PAGEREF _Toc446226981 \h  8.1.10 GetMessageResult  PAGEREF _Toc446226982 \h  8.1.11 FreeMessageFrame  PAGEREF _Toc446226983 \h  8.1.12 GetControlChannel  PAGEREF _Toc446226984 \h  DSP Platform Messages  PAGEREF _Toc446226985 \h  KSDSP Message Defintions and Structures  PAGEREF _Toc446226986 \h  9.1.1 KSDSP_MSG_LOAD_TASK  PAGEREF _Toc446226987 \h  9.1.2 KSDSP_MSG_FREE_TASK  PAGEREF _Toc446226988 \h  9.1.3 KSDSP_MSG_OPEN_DATA_CHANNEL  PAGEREF _Toc446226989 \h  9.1.4 KSDSP_MSG_CLOSE_DATA_CHANNEL  PAGEREF _Toc446226990 \h  9.1.5 KSDSP_MSG_SET_CHANNEL_STATE  PAGEREF _Toc446226991 \h  9.1.6 KSDSP_MSG_PROPERTY  PAGEREF _Toc446226992 \h  9.1.7 KSDSP_MSG_METHOD  PAGEREF _Toc446226993 \h  9.1.8 KSDSP_MSG_EVENT  PAGEREF _Toc446226994 \h  9.1.9 KSDSP_MSG_SET_TARGET_CHANNEL  PAGEREF _Toc446226995 \h  9.1.10 KSDSP_MSG_WRITE_STREAM  PAGEREF _Toc446226996 \h  9.1.11 KSDSP_MSG_READ_STREAM  PAGEREF _Toc446226997 \h  KS Demand-load Device Driver Services  PAGEREF _Toc446226998 \h  Creating the Bus Enum Object  PAGEREF _Toc446226999 \h  Plug And Play IRP Handling  PAGEREF _Toc446227000 \h  Intended Audience The intended audience of this document are those engineers who are familiar with and have a working knowledge of the Windows Driver Model, Kernel Streaming (a.k.a. WDM-CSA) and are implementing device drivers for Digital Signal Processing (DSP) platforms. Goals Simplify the integration of DSP-based solutions with Windows 2000. Define a general purpose, extensible architecture for DSP-based stream acceleration solutions allowing a vendor to utilize the provided codebase with the flexibility to create value added extensions. Incorporate resource management for DSP resources (MIPS, memory and so on) using Windows 2000 resource management services. Document Organization This document is organized into two main topics: KSDSP interfaces and platform driver interfaces.  Sections 4 through 6 are of interest to software developers who are developing extensions to the DSP Filter Proxy for specific platform support. These sections discuss the KSDSP interfaces: how these interfaces are implemented, how these interfaces interact with the platform driver, and KS filter implementations using these interfaces.  Sections 7 through 9 are of interest to software developers who are developing DSP platform drivers.  These sections discuss the platform driver interfaces, platform driver messages and the demand-load driver services.   Introduction The Kernel Streaming DSP Platform Interface provides an abstraction layer of the Kernel Streaming Architecture for DSP vendors who are providing hardware acceleration of multimedia stream processing components.   The KSDSP reference design incorporates the Philips Tri-Media 1 Reference Design board, the Microsoft Talisman real-time OS and extends the Microsoft Escalante device driver interface.  Although the reference design incorporates Microsoft technologies for the DSP solution, the abstraction is intended to allow the vendor to select any operating system on the target hardware by providing the necessary DSP OS interface primitives.  REF _Ref435437194 \h  Figure 5  displays a typical hierarchy of device objects in the system.  DSP platform filters register with the system using KS demand-load services.  The services provided by the KS library configure the DSP platform device driver as a bus driver and respond to the necessary I/O requests to manage the Plug and Play functionality of demand-loaded devices (see the   REF _Ref435261267 \h   \* MERGEFORMAT  KS Demand-load Device Driver Services  section for more information).  When the filter is accessed by the device interface as registered with the Plug and Play system, the bus-driver extensions enumerate a physical device object.  As a result of the enumeration, the device installer is invoked by the system if the driver is not already installed.  Once a device is properly installed,  the associated kernel-mode driver loads and starts on demand.  EMBED Visio.Drawing.5   Figure   STYLEREF 1 \s   SEQ Figure \* ARABIC \s 1   Association of device objects (Plug and Play support)  REF _Ref435255775 \h  Figure 5  is a graphical representation of a filter graph incorporating a user-mode filter, an AC-3 decoder and audio driver with both the decoder and renderer running on the DSP platform.  In this example, the control path routes from user-mode to user-mode filter through KSPROXY and the controls are forwarded for each proxied filter through the device stack to the DSP filters.  The data path enters kernel-mode from KSPROXY to the DSP platform for the AC-3 decoder and continues on the DSP platform until it is rendered in hardware. The kernel-mode filter-proxies (AC-3 Decode Proxy and Mixer / Audio Stream Proxy in this example) register filter descriptors with KSDSP services.  The KSDSP layer builds a representative filter based on the descriptors and provides default translation services to the DSP platform interface for the KS related functionality.   EMBED Visio.Drawing.5   Figure   STYLEREF 1 \s   SEQ Figure \* ARABIC \s 1   Sample filter graph incorporating KSDSP components DSP Filter Proxy The DSP Filter Proxy (DFP) is a general purpose system component that serves as the interface between KS and the KSDSP interface library.  On the upper edge, the DFP interfaces to the system using KS objects, properties, methods, events, and so on.  On the lower edge, the DFP uses the interfaces of KSDSP to communicate with the DSP platform driver.   Initialization  EMBED Visio.Drawing.5   Figure   STYLEREF 1 \s   SEQ Figure \* ARABIC \s 1   DSP Filter Proxy Hierarchy When the associated device is started as a result of an open request, the DFP loads the KSDSP interface, obtains the filter descriptor resource and registers a filter factory with KS.  The filter descriptor resource is a binary image that describes the pin types, topology, and properties of the filter.  This resource is a flat image of the KSFILTER_DESCRIPTOR structure and subsequent structures where all pointers are converted into an offset from the base of the resource.     //     // DFP sample code to configure a filter descriptor and then attach to KS     //     Status =         KoCreateInstance(             __uuidof( CLSID_KsDsp ),             NULL,   // UnkOuter             CLSCTX_KERNEL_SERVER,             __uuidof( IID_IKsDspIo ),             reinterpret_cast<PVOID *>(&ProxyDeviceInstance->m_KsDspIo) );     if (!NT_SUCCESS( Status )) {         return Status;     }     //     // First thing before calling the KSDSP interface, prepare the     // interface with the Plug and Play objects: Physical Device Object and     // the Attached Device Object.     //     ProxyDeviceInstance->m_KsDspIo->Initialize(          Device->PhysicalDeviceObject,         Device->NextDeviceObject );     //     // Call KSDSP to retrieve the filter descriptor from binary/resource      // as specified in the registry.     //     Status =          ProxyDeviceInstance->m_KsDspIo->GetFilterDescriptor(              PagedPool,             (PKSFILTER_DISPATCH) &FilterDispatch,             (PKSPIN_DISPATCH) &PinDispatch,             &ProxyDeviceInstance->m_FilterDescriptor ); To build the filter descriptor, KSDSP queries the device registry key  (PLUGPLAY_REGKEY_DRIVER) for the Filter Descriptor value which specifies the module name of the binary resource used for the filter descriptor.  The GetFilterDescriptor method reads the resource into memory, and converts all offsets into pointers from the base of the structure in memory. All DSP resources, whether filter descriptors, kernel or task binaries are stored as resources in a Win32 portable executable (PE) format which allows for version stamping, digital signatures, and allows a vendor to store multiple images in a single binary.    KSDSP maps an arbitrary module name (such as ksaudio.cob or fd-audio.bin) to a image name, resource name or resource identifier pair.  See the   REF _Ref445628780  \* MERGEFORMAT  DSP Platform Driver Interfaces  section for more information on MapModuleName. ULONG                   i; PKSPIN_DESCRIPTOR_EX    PinDescriptor; // TBD:  //     Query the registry for list of data intersection handlers or //     use defaults from KS. for (i = 0;       i < ProxyDeviceInstance->m_FilterDescriptor->PinDescriptorsCount;       i++) {     PinDescriptor =                      (PKSPIN_DESCRIPTOR_EX)             &ProxyDeviceInstance->m_FilterDescriptor->PinDescriptors[ i ];     PinDescriptor->IntersectHandler = PinIntersectHandler; // If successful, create the filter factory. Status =     KsCreateFilterFactory(         Device->FunctionalDeviceObject,         ProxyDeviceInstance->m_FilterDescriptor,         NULL,         NULL,         0,         &ProxyDeviceInstance->m_FilterFactory ); A general set of data intersection handlers will be provided by Microsoft for data type selection of common data formats.  If a proprietary data format is used, the vendor is required to provide a data intersection handler for the specific data type.  Data handlers are obtained by querying for the IKsDataTypeHandler interface using KoCreateIntstance() where the CLSID is the Specifier identifier of the data format.  If unsuccessful, the SubFormat identifier is attempted and then finally the MajorFormat identifier.  EMBED Visio.Drawing.5   Control Channel When the KS filter object is instantiated, the DFP creates the DSP control channel via IKsDspIo::CreateDspControlChannel().  To create the DSP control channel, KSDSP calls loads the task using the module name obtained from Module subkey of the device registry key.  KSDSP sends the KSDSP_MSG_LOAD_TASK message to the the platform to perform the actual load operation.  When a platform successfully loads a task, the result is a  task context  object which is opaque to all layers except the platform driver.  A task context must always have an associated control channel.  KSDSP then queries the platform for the control channel via the GetControlChannel() method on the platform interface.  The resulting control channel is used to communicate with the task to perform general filter transactions such as setting and retrieving filter properties and creating data channels. Properties, Methods and Events Once the task is loaded and a control channel is obtained, the GUID translation table is configured by DFP using IKsDspControlChannel::SetGuidTranslationTable.  The GUID translation table provides a mapping of a set identifier into a 32-bit identifier for use with communicating with the DSP task.  The translation table, an array of KSGUIDTRANSLATION structures, is obtained from the GUID Translation subkey of the device registry key.   By default, KS services a number of of the standard pin, filter and topology properties on behalf of the DFP. Properties that are not handled by KS are sent to the DSP filter or pin via the KSDSP_MSG_PROPERTY, KSDSP_MSG_METHOD and KSDSP_MSG_EVENT messages.  The default handling of the automation table (properties, methods and events) can be extended by a dynamically loaded module.  This module is referenced by the KoCreateInstance() function using a module identifier (CLSID) in the Filter Automation subkey or the Pin %id% Automation (where %id% is the pin identifier) subkey of the device registry key.  When either a filter or pin is instantiated, the module associated with the CLSID is loaded and queried for the IKsDspAutomationExtension interface.  The automation table obtained from calling the GetAutomationTable method on this interface is merged with the default tables for the given filter or pin instance.  See the   REF _Ref446146299  \* MERGEFORMAT  Automation Extension Interface  section for more information on this interface.  Data Channels When the pin is instantiated, DFP creates a data channel using IKsDspControlChannel::OpenDataChannel and provides the pin ID of the type of pin being created.  KSDSP sends a message to the platform to complete this operation.  The following code snippet is a possible implementation of such a function.  The actual methods used to prepare the message and perform the transaction with the platform are discussed in   REF _Ref445628746  \* MERGEFORMAT  DSP Platform Driver Interfaces  section. STDMETHODIMP CKsDspControlChannel::OpenDataChannel(     IN ULONG32 PinId,     OUT PKSDSPCHANNEL DataChannel      )     KEVENT          Event;     IO_STATUS_BLOCK IoStatus;     NTSTATUS        Status;     PIRP            Irp;     PVOID           MessageFrame;     ULONG           MessageDataLength;     _DbgPrintF( DEBUGLVL_VERBOSE, ("CKsDspControlChannel::OpenDataChannel") );     //     // Calculate message data length     //     MessageDataLength = sizeof( ULONG32 );                  //     // Prepare the load task message      //                 Status =          m_KsDspIo->PrepareChannelMessage(              &Irp,              m_ControlChannel,             KSDSP_MSG_OPEN_DATA_CHANNEL,             &MessageFrame,              &MessageDataLength,             KSDSP_PREPAREMESSAGEF_ALLOCATE_IRP |                 KSDSP_PREPAREMESSAGEF_ALLOCATE_FRAME,             PinId );                  //     // Send the message and wait for the result.     //                              if (NT_SUCCESS( Status )) {         Status =              m_KsDspIo->SendMessage(                  Irp, &Event, &IoStatus,                  KSDSP_SENDMESSAGEF_KEVENT | KSDSP_SENDMESSAGEF_SYNCHRONOUS );                  if (NT_SUCCESS( Status )) {                      //             // If the open data channel message was successful,             // retrieve the data channel ID.             //                          Status = m_KsDspIo->GetMessageResult(                  MessageFrame, DataChannel );                          _DbgPrintF(                  DEBUGLVL_VERBOSE,                  ("OpenDataChannel() completed: channel id = %08x, status = %08x",                      *DataChannel, Status) );         }                  //         // Free the frame and return.         //                  m_KsDspIo->FreeMessageFrame( MessageFrame );     }              return Status; }     The DFP processes all streaming I/O requests and translates read and write requests into KSDSP_MSG_READ_STREAM and KSDSP_MSG_WRITE_STREAM messages.  The platform driver manages the DMA mapping of the stream address into physical memory addresses for the platform.  When the I/O is completed, the DFP completes the original I/O request and performs any additional processing necessary to manage the stream interface. When two filters are connected using the DSP streaming interface (e.g. the BUS identifier for the given platform), the processing stays on the platform and does not transition back into the DSP Filter Proxy until the data needs to return to the host.  The connection between the two data channels is established using the KSDSP_MSG_SET_TARGET_CHANNEL message. Automation Extension Interface This interface is supported by a module to extend automation support for particular instances of the DSP Filter Proxy.   typedef enum {     KSAUTOMATION_CONTEXT_FILTER,     KSAUTOMATION_CONTEXT_PIN,     KSAUTOMATION_CONTEXT_NODE_CONTROL } KSAUTOMATION_CONTEXT; typedef NTSTATUS (*PFNGETAUTOMATIONCONTEXT)( PIRP Irp, KSAUTOMATION_CONTEXT ContextType, PVOID *Context ); interface IKsAutomationExtension: public IUnknown     STDMETHODIMP RegisterAutomationTable(         IN PKSAUTOMATION_TABLE AutomationTable,         OUT PKSAUTOMATION_TABLE *MergedAutomationTable,        IN PFNGETAUTOMATIONCONTEXT GetAutomationContext     ); RegisterAutomationTable Registers Retrieves an automation table from the module.  STDMETHODIMP RegisterAutomationTable(     IN PKSAUTOMATION_TABLE AutomationTable,     OUT PKSAUTOMATION_TABLE *MergedAutomationTable,     KSOBJECT_BAG Bag OPTIONAL,     IN PFNGETAUTOMATIONCONTEXT GetAutomationContext Parameters: AutomationTable   Pointer to the automation table to merge with the table supported by this module.  MergedAutomationTable   Pointer to the receive the resultant merged table.  Optional pointer to a KSOBJECT_BAG to be used when merging automation tables.  GetAutomationContext   Pointer to client s function to obtain a private context pointer for a given handler. Value Description KSAUTOMATION_CONTEXT_FILTER Retrieve filter context pointer KSAUTOMATION_CONTEXT_PIN Retrieve pin context pointer KSAUTOMATION_CONTEXT_NODE_CONTROL Retrieve node context pointer Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code.  KSDSP Library Interfaces KSDSP defines interfaces which abstract the implementation of the KS filter from the device driver for the DSP filter and simplify the design requirements for any given DSP algorithm. A driver obtains KSDSP interfaces from the system using the KoCreateInstance  service as follows: Status =     KoCreateInstance(         __uuidof( CLSID_KsDsp ),         NULL,   // UnkOuter         CLSCTX_KERNEL_SERVER,         __uuidof( IID_IKsDspIo ),         reinterpret_cast<PVOID *>(&filter->KsDspIo) ); DSP I/O Interface The DSP I/O interface (IKsDspIo) is the base communication interface used by a client driver to establish an I/O path between the DSP platform and the host system.  CreateDspControlChannel establishes a control channel between the DSP task (or algorithms) and the filter. interface IKsDspIo: public IUnknown     STDMETHODIMP      Initialize(         IN PDEVICE_OBJECT PhysicalDeviceObject,         IN PDEVICE_OBJECT NextDeviceObject         );              STDMETHODIMP      CreateDspControlChannel(         OUT PIKSDSPCONTROLCHANNEL *ControlChannel,         IN PUNKNOWN UnkOuter OPTIONAL         );     STDMETHODIMP     AllocateMessageFrame(         IN KSDSP_MSG MessageId,         OUT PVOID *MessageFrame,         IN OUT PULONG MessageDataLength         );     STDMETHODIMPV     PrepareChannelMessage(         IN OUT PIRP *Irp,         IN KSDSPCHANNEL Channel,         IN KSDSP_MSG MessageId,         IN OUT PVOID *MessageFrame,         IN OUT PULONG MessageDataLength,         IN ULONG Flags,             ...         );              STDMETHODIMPV     PrepareMessage(         IN OUT PIRP *Irp,         IN KSDSP_MSG MessageId,         IN OUT PVOID *MessageFrame,         IN OUT PULONG MessageDataLength,         IN ULONG Flags,             ...         );     STDMETHODIMP     MapDataTransfer(         IN OUT PIRP *Irp,         IN KSDSPCHANNEL Channel,         IN KSDSP_MSG MessageId,         IN OUT PVOID *MessageFrame,         IN PVOID Buffer,         IN ULONG BufferLength,         IN ULONG Flags         );     STDMETHODIMP     UnmapDataTransfer(         IN PIRP Irp         );              STDMETHODIMP     SendMessage(         IN PIRP Irp,         IN PKEVENT Event,             IN PIO_STATUS_BLOCK IoStatus,         IN ULONG Flags             );              STDMETHODIMP     GetMessageResult(         IN PVOID MessageFrame,         IN OUT PVOID Result         );              STDMETHODIMP_(VOID)     FreeMessageFrame(         IN PVOID MessageFrame          );              STDMETHODMP     LoadResource(         IN POOL_TYPE PoolType,         IN PUNICODE_STRING FileName,         IN ULONG_PTR ResourceName,         IN ULONG ResourceType,         OUT PVOID *Resource,         OUT PULONG ResourceSize         );              STDMETHODIMP     GetFilterDescriptor(         IN POOL_TYPE PoolType,         IN PKSFILTER_DISPATCH FilterDispatch,         IN PKSPIN_DISPATCH PinDispatch,             OUT PKSFILTER_DESCRIPTOR *FilterDescriptor         ); Initialize Sets the I/O device object from the result of the attachment to the Physical Device Object.  Methods in this interface that require that the physical device object be set will return STATUS_INVALID_PARAMETER until this method is called. STDMETHODIMP  Initialize(     IN PDEVICE_OBJECT PhysicalDeviceObject,     IN PDEVICE_OBJECT NextDeviceObject     ); Parameters: PhysicalDeviceObject   The physical device object as supplied to the device driver by the Plug and Play system. NextDeviceObject   The result of the attachment of the functional device object to the physical device object supplied to the driver during the AddDevice callback from the Plug and Play system.  This is normally the same physical device object unless a filter is attached to the PDO. Remarks: The supplied NextDeviceObject (e.g. the attached device stack) must support the BUSID_KSDSPPlatform interface via the IRP_MJ_PNP/IRP_MN_QUERY_INTERFACE request. Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code. CreateDspControlChannel Creates a DSP control channel associated with the physical  device object.  To create a DSP control channel object, KSDSP calls the platform via IKsDspIo to load the task  as specified by the Module value in the device registry key.  On success, a pointer to the specific IKsDspControlChannel instance associated with the DSP task is returned. STDMETHODIMP  CreateDspControlChannel(     OUT PIKSDSPCONTROLCHANNEL *ControlChannel,     IN PUNKNOWN UnkOuter OPTIONAL     ); Parameters: ControlChannel   Pointer to a pointer to receive the resultant interface. UnkOuter   Pointer to a controlling unknown. Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code. AllocateMessageFrame Allocates memory for a message frame from the DSP platform that is appropriate for message transfers with the platform hardware.  For example, the reference design platform driver builds an I/O pool using HalAllocateCommonBuffer() to guarantee that messages that stride page boundaries are physically contiguous.  STDMETHODIMP  AllocateMessageFrame(     IN KSDSP_MSG MessageId,     IN ULONG MessageDataLength,     OUT PVOID *MessageFrame      ); Parameters: MessageId   Message identifier MessageFrame   Pointer to receive resultant message frame MessageDataLength   Specifies the length of the data element for the given message identifier.  The platform driver is expected to adjust the allocation length as necessary and then return a pointer to the client s usable portion of the actual physical message frame. Return Value: STATUS_SUCCESS if no error, otherwise STATUS_INSUFFICIENT_RESOURCES. PrepareChannelMessage Prepares a message for a transaction with the DSP platform.  Optionally, this method will allocate an I/O request packet and a message frame.  KSDSP calls the platform driver to fill in the actual message for the specific platform.  KSDSP abstracts communication with the DSP platform with a message set as described in the   REF _Ref445693541 \h   \* MERGEFORMAT  DSP Platform Messages  section. STDMETHODIMPV  PrepareChannelMessage(     IN OUT PIRP *Irp,     IN KSDSPCHANNEL Channel,     IN KSDSP_MSG MessageId,     IN OUT PVOID *MessageFrame,     IN OUT PULONG MessageDataLength,     IN ULONG Flags,         ...     );         Parameters:  If KSDSP_PREPAREMESSAGEF_ALLOCATE_IRP is specified, this is a pointer to receive the resultant IRP, otherwise this must point to an I/O request packet previous allocated using IoAllocateIrp(). Channel   Target channel to receive the message. MessageId   KSDSP message identifier. MessageFrame   If KSDSP_PREPAREMESSAGEF_ALLOCATE_FRAME is specified, this is a pointer to receive the resultant message frame, otherwise this must be a pointer to the message frame with sufficient storage for the message as allocated via AllocateMessageFrame(). MessageDataLength   Specifies the length of the data element for the given message identifier.  The platform driver is expected to adjust the allocation length as necessary and then return a pointer to the client s usable portion of the actual physical message frame. Flags   A combination of one or more of the following flags Value Description KSDSP_PREPAREMESSAGEF_ALLOCATE_IRP Allocate the I/O request packet for this message KSDSP_PREPAREMESSAGEF_ALLOCATE_FRAME Allocate the message frame for this message.  - Message specific parameters Return Value: STATUS_SUCCESS if no error, otherwise STATUS_INSUFFICIENT_RESOURCES. PrepareMessage Prepares a message for a transaction with the DSP platform.  The method performs the same actions as PrepareChannelMessage() but the message is directed to the platform instead of a specific control or data channel. STDMETHODIMPV  PrepareMessage(     IN OUT PIRP *Irp,     IN KSDSP_MSG MessageId,     IN OUT PVOID *MessageFrame,     IN OUT PULONG MessageDataLength,     IN ULONG Flags,         ...     ); Parameters: Same as PrepareMessageChannel(), except Channel is not specified. Return Value: STATUS_SUCCESS if no error, otherwise STATUS_INSUFFICIENT_RESOURCES. MapDataTransfer Prepares a message for a DMA transaction with the DSP platform.  Optionally, this method will allocate an I/O request packet and a message frame.  KSDSP calls the platform driver to fill in the actual message for the specific platform.   The platform driver prepares the message frame, any platform specific members is the message frame for communication with the platform and map the I/O buffer for scatter/gather DMA as required by the platform.   STDMETHODIMP MapDataTransfer(     IN OUT PIRP *Irp,     IN KSDSPCHANNEL Channel,     IN KSDSP_MSG MessageId,     IN OUT PVOID MessageFrame,     IN PVOID Buffer,     IN ULONG BufferLength,     IN ULONG Flags     ); Parameters:  If KSDSP_MAPDATATRANSFERF_ALLOCATE_IRP is specified, this is a pointer to receive the resultant IRP, otherwise this must point to an I/O request packet previous allocated using IoAllocateIrp(). Channel   Target data channel to receive the message. MessageId   KSDSP message identifier, either KSDSP_MSG_READ_STREAM or KSDSP_MSG_WRITE_STREAM. MessageFrame   If KSDSP_MAPDATATRAMSFERF_ALLOCATE_FRAME is specified, this is a pointer to receive the resultant message frame, otherwise this must be a pointer to the message frame with sufficient storage for the message as allocated via AllocateMessageFrame(). Buffer   Pointer to buffer to map for the read or write DMA transfer.. BufferLength   Size of the I/O buffer to map for the read or write DMA transfer. Flags   A combination of one or more of the following flags Value Description KSDSP_MAPDATATRANSFERF_ALLOCATE_IRP Allocate the I/O request packet for this message KSDSP_MAPDATATRANSFERF_ALLOCATE_FRAME Allocate the message frame for this message. Remarks: The platform driver is expected to prepare the buffer and build the appropriate message for a scatter/gather DMA transaction between the DSP and the host. Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code. UnmapDataTransfer Unmaps I/O buffers previously mapped using MapDataTransfer. STDMETHODIMP MapDataTransfer(     IN PIRP Irp,     ); Parameters:  I/O request packet associated with the message. Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code. SendMessage Sends a message to the DSP platform.  This is the general message communication interface between KSDSP and the DSP platform driver .  The I/O request packet for the message must be built using the PrepareChannelMessage(), PrepareMessage(), or MapDataTransfer()methods.   STDMETHODIMP SendMessage(     IN PIRP Irp,     IN PKEVENT Event,     IN PIO_STATUS_BLOCK IoStatus,     IN ULONG Flags     ); Parameters:  I/O request packet associated with this request.  Event   Optional event to associate with the I/O request packet. If KSDSP_SENDMESSAGEF_KEVENT is specified, the IRP is marked so that the I/O manager will not attempt to dereference this object on completion. If KSDSP_SENDMESSAGEF_SYNCHRONOUS is specified, this parameter is required. IoStatus   Optional status block to associate with the I/O request packet.  If KSDSP_SENDMESSAGEF_SYNCHRONOUS is specified, this parameter is required. Flags   A combination of one or more of the following flags Value Description KSDSP_SENDMESSAGEF_KEVENT The event parameter is a KEVENT, not allocated by the object manager. KSDSP_SENDMESSAGEF_SYNCHRONOUS Specifies that this is a synchronous SendMessage operation. KSDSP will wait on the the associated Event, which is signaled on I/O completion. Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code. GetMessageResult Retrieves the result from the message sent to the DSP platform.  This method translates the result codes and resultant data into standard structures as specified by the message result details in the   REF _Ref445693541 \h   \* MERGEFORMAT  DSP Platform Messages  section.  Note: Certain messages require that the memory for the resultant data be freed by the caller of GetMessageResult().   STDMETHODIMP GetMessageResult(     IN PVOID MessageFrame,     OUT PVOID Result OPTIONAL     ); Parameters: MessageFrame   Message frame sent to the platform. Result   Optional pointer to receive the resultant data from the platform. Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code. FreeMessageFrame Frees a message frame previous allocated with AllocateMessageFrame to the DSP platform. STDMETHODIMP_(VOID) FreeMessageFrame(     IN PVOID MessageFrame      ); Parameters: MessageFrame  Pointer to a memory frame previously allocated using AllocateMessageFrame. Return Value: None. LoadResource Loads a resource from the given file. STDMETHODIMP LoadResource(     IN POOL_TYPE PoolType,     IN PUNICODE_STRING FileName,     IN ULONG_PTR ResourceName,     IN ULONG ResourceType,     OUT PVOID *Resource,     OUT PULONG ResourceSize     ); Parameters: PoolType   Specifies the pool type to use when allocating memory for this resource. FileName   Pointer to a UNICODE string of the path to the image file.  This image file must be in the Win32 portable executable (PE) format which allows for version stamping, digital signatures and allows a vendor to store multiple task images in a single binary.  DSP images should be stored in binary resources of this file. ResourceName   Specifies the name of the resource.   See the remarks section for details. ResourceType   Specifies the type of the resource.   See the remarks section for details. For standard resource types, this parameter can be one of the following values: Value Description RT_RCDATA Raw data resource RT_VERSION Version resource Resource   Pointer to receive resultant resource. ResourceSize   Pointer to receive size of the resource Remarks: If the HIWORD of ResourceName or ResourceType is NULL, the LOWORD is an integer identifier of the resource or resource type.  Otherwise, this parameter is a pointer to a NULL terminated string of the name.  If successful, this method allocates memory using the given pool type and reads the specified resource from the image file into this memory. Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code. GetFilterDescriptor Retrieves the filter descriptor for the device.  This routine uses the Plug and Play device object to obtain registry keys from the associated registry path for the installed driver. STDMETHODIMP GetFilterDescriptor(     IN POOL_TYPE PoolType,     IN PKSFILTER_DISPATCH FilterDispatch,     IN PKSPIN_DISPATCH PinDispatch,         OUT PKSFILTER_DESCRIPTOR *FilterDescriptor     ); Parameters: PoolType   pool type to use when creating the filter descriptor FilterDispatch   pointer to the filter dispatch table PinDispatch   pointer to the pin dispatch table FilterDescriptor   resultant filter descriptor if successful Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code. DSP Control Channel Interface The DSP control channel inteface defines an interface for communications channels (both control and data) between the host and DSP platform. interface IKsDspControlChannel : public IUnknown     STDMETHODIMP SetGuidTranslationTable(         PKSGUIDTRANSLATION GuidTranslationTable,         ULONG TableEntryCount         );              STDMETHODIMP OpenDataChannel(         IN ULONG32 PinId,         OUT PKSDSPCHANNEL DataChannel          );              STDMETHODIMP CloseDataChannel(         IN KSDSPCHANNEL DataChannel         );               STDMETHODIMP SendPropertyRequest(         IN KSPROPERTY Property,         IN PVOID DataBuffer,         IN OUT PULONG DataLength         );              STDMETHODIMP SendMethodRequest(         IN KSMETHOD Method,         IN PVOID DataBuffer,         IN OUT PULONG DataLength         );              STDMETHODIMP SetTargetChannel(         IN KSDSPCHANNEL DataChannel,         IN KSDSPCHANNEL TargetChannel         );              STDMETHODIMP SetChannelState(         IN KSDSPCHANNEL DataChannel,         IN KSSTATE State         ); SetGuidTranslationTable To reduce the code and memory footprint on the DSP platform, GUID translation tables are registered for a given DSP channel using the SetGuidTranslationTable method. typedef struct tagKSGUIDTRANSLATION     GUID    Set;     ULONG   Base;     ULONG   TranslationBase; } KSGUIDTRANSLATIONENTRY, *PKSGUIDTRANSLATION; KSGUISDTRANSLATIONENTRY Member Description Specifies the GUID of the KS Identifier set to translate. Base value to subtract from KSIDENTIFIER.Id when performing the translation. TranslationBase The 32-bit identifier used as the translation base for the KS Identifier set.  All identifers for the class of identifiers specified by Set are translated using KSGUIDTRANSLATIONENTRY.TranslationBase + (KSIDENTIFIER.Id   KSGUIDTRANSLATIONENTRY.Base) This method sets the GUID translation table for the I/O interface.  The GUID translation table provides a mapping from a GUID value to a 32-bit base value for all sets in the corresponding KS interfaces.  This mapping is used for all KSIDENTIFIERs.  Because SetGuidTranslationTable must translate all identifier sets to a single 32-bit range, KSDSP makes a general assumption that a single KSIDENTIFIER set spans only a small portion of the 32-bit range and that no identifier set overlaps with any other identifier set when translated given a base value for each set. HRESULT SetGuidTranslationTable(         PKSGUIDTRANSLATION GuidTranslationTable,         ULONG TableEntryCount         ); Parameters: GuidTranslationTable   Pointer to a table of KSGUIDTRANSLATION elements specifying the translation for this I/O interface instance.  The table referenced by this pointer must remain valid for the table s usage life.  A new translation table can be assigned by calling this method a second time.  Specifying NULL revokes GUID translation entirely. TableEntryCount   Count of KSGUIDTRANSLATION elements in the provided table. OpenDataChannel Opens the specified data channel on this instance of the DSP Control Interface.  The resultant identifier can be used for transactions with the channel via SendMessage, ReadStream , and WriteStream. HRESULT OpenDataChannel(     IN ULONG32 PinId,     OUT PKSDSPCHANNEL DataChannel      ); Parameters: PinId  Task specific pin identifier for a given data channel. DataChannel  Pointer to receive the identifer for the data channel. Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code. CloseDataChannel Closes the specified data channel for this instance of the DSP Control Interface. HRESULT CloseDataChannel(     IN KSDSPCHANNEL DataChannel     ); Parameters: DataChannel   Data channel to close. Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code. SendPropertyRequest Sends a KSPROPERTY request to the DSP platform.  All property requests are processed by the control channel.  The DSP platform driver translates the KSPROPERTY structure into a suitable package for the DSP kernel. HRESULT SendPropertyRequest(     IN KSPROPERTY Property,     IN OUT PVOID DataBuffer,     IN OUT PULONG DataLength    ); Parameters: Property   Property identifier.  When translating a property request to the DSP platform, KSDSP translates the GUID and indentifier to the a 32-bit message identifier using the GUID mapping tables.  See the SetGuidTranslationTable documentation for further details.  DataBuffer  Pointer to the data buffer associated with the property. DataLength   This referenced value contains the size of the data buffer and on return must be filled with the returned data length. Return Value: STATUS_SUCCESS if no error and DataLength contains the size of the returned data, otherwise an appropriate error code. SendMethodRequest Sends a KSMETHOD request to the DSP platform.  All method requests are processed by the control channel.  The DSP platform driver translates the KSMETHOD structure into a suitable package for the DSP kernel. HRESULT SendMethodRequest(      IN KSMETHOD Method,     IN OUT PVOID DataBuffer,     IN OUT PULONG DataLength     ); Parameters: Method   Method identifier.  When translating a method request to the DSP platform, KSDSP translates the GUID and indentifier to the a 32-bit message identifier using the GUID mapping tables.  See the SetGuidTranslationTable documentation for further details.  DataBuffer  Pointer to the data buffer associated with the method. DataLength   This referenced value contains the size of the data buffer and on return must be filled with the returned data length. Return Value: STATUS_SUCCESS if no error and DataLength contains the size of the returned data, otherwise an appropriate error code. SendEventRequest To be determined. SetTargetChannel Sets the output of a streaming task on the DSP to an input pin of another.  This allows the DSP platform to connect the data paths of the stream between DSP tasks. HRESULT SetTargetChannel(     IN KSDSPCHANNEL DataChannel,     IN KSDSPCHANNEL TargetChannel     ); Parameters: DataChannel   Channel for the output-side of the connection.  This must be an  out flow  data channel. TargetChannel  Target channel to receive the data from DataChannel.  This must be an  in flow  data channel.  Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code. SetChannelState Sets the state of the data channel to the specified KSSTATE. HRESULT SetChannelState(     IN KSDSPCHANNEL DataChannel,     IN KSSTATE State     ); Parameters: DataChannel   Target channel of the state change request.  State  Requested operation state as specified according to KSSTATE definitions. Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code. DSP Platform Driver Interfaces KSDSP establishes a connection with the DSP platform device driver using the BUSID_KSDSPPlatform bus-interface obtained through the IRP_MJ_PNP/IRP_MN_QUERY_INTERFACE request.  All platform drivers supported by KSDSP are required to support this interface. DSP Platform Bus Interface typedef struct _BUS_INTERFACE_KSDSPPLATFORM{     //     // Standard interface header     //     USHORT                          Size;     USHORT                          Version;     PVOID                           Context;     PINTERFACE_REFERENCE            InterfaceReference;     PINTERFACE_DEREFERENCE          InterfaceDereference;     //     // KSDSP Platform bus interfaces     //     PFNKSDSPMAPMODULENAME           MapModuleName;     PFNKSDSPPREPARECHANNELMESSAGE   PrepareChannelMessage;     PFNKSDSPPREPAREMESSAGE          PrepareMessage;     PFNKSDSPMAPDATATRANSFER         MapDataTransfer;     PFNKSDSPUNMAPDATATRANSFER       UnmapDataTransfer;     PFNKSDSPALLOCATEMESSAGEFRAME    AllocateMessageFrame;     PFNKSDSPSENDMESSAGE             SendMessage;     PFNKSDSPGETMESSAGERESULT        GetMessageResult;     PFNKSDSPFREEMESSAGEFRAME        FreeMessageFrame;     PFNKSDSPGETCONTROLCHANNEL       GetControlChannel; } BUS_INTERFACE_KSDSPPLATFORM, *PBUS_INTERFACE_KSDSPPLATFORM; BUS_INTERFACE_KSDSPPLATFORM Member Description Size of this structure. Version Interface version identifier Context Context of this specific interface instance, this value is passed to all methods of the interface.. InterfaceReference Increments the reference count on the interface. InterfaceDereference Decrements the reference count on the interface. MapModuleName Maps a module name to a Win32 PE image and resource identifier PrepareChannelMessage Prepares a channel specific message PrepareMessage Prepares a control message MapDataTransfer Maps an I/O buffer for DMA to the platform UnmapDataTransfer Unmaps an I/O buffer previously mapped with MapDataTransfer AllocateMessageFrame Allocates a message frame. SendMessage Sends a message to the DSP platform GetMessageResult Retrieves the result for the specified message given the message frame FreeMessageFrame Frees a message frame GetControlChannel Returns a control channel identifier given a task context InterfaceReference Required method for the standard bus interface.  This method increments a reference count on the instance of the interface.  See the Plug-And-Play documentation for details on the usage of this method. VOID InterfaceReference(     PVOID Context     ); Parameters: Context   Context as provided in the result in the BUS_INTERFACE_KSDSPPLATFORM structure for the query of the BUSID_KSDSPPlatform interface. Return Value: Nothing. InterfaceDereference Required method for the standard bus interface.  This method decrements a reference count on the instance of the interface. See the Plug-And-Play documentation for details on the usage of this method. VOID InterfaceDereference(     PVOID Context     ); Parameters: Context   Context as provided in the result in the BUS_INTERFACE_KSDSPPLATFORM structure for the query of the BUSID_KSDSPPlatform interface. Return Value: Nothing. MapModuleName Maps the given module name to an image name and resource identifier.  The resultant image name is the file name of a Win32 portable executable image and the resource identifier is a specific RT_RCDATA resource identifier in the resources section of the image file. NTSTATUS MapModuleName(     IN PVOID Context,     IN PUNICODE_STRING ModuleName,     OUT PUNICODE_STRING ImageName,     OUT PULONG ResourceId,     OUT PULONG ValueType     ) ; Parameters: Context   Context as provided in the result in the BUS_INTERFACE_KSDSPPLATFORM structure for the query of the BUSID_KSDSPPlatform interface. ModuleName   pointer to Unicode string of module name to map. ImageName   pointer to a Unicode string for the resultant image name, note that the actual string buffer is allocated by this function. ResourceId   pointer to ULONG to receive resultant resource id Return Value: STATUS_SUCCESS , STATUS_INSUFFICIENT_RESOURCES or an appropriate error code.  On success, the ImageName string buffer is allocated.  When the client completes the transactions using this string, it is  required to call RtlFreeUnicodeString() to free the string buffer. PrepareChannelMessage Prepares a message for a transaction with the DSP platform.  The platform driver must prepare the message frame and any platform specific members is the message frame for communication with the platform.  It is expected that the platform driver will translate the standard KSDSP message into private equivalents, if required.  For specific message details and parameters, see the   REF _Ref445693541 \h   \* MERGEFORMAT  DSP Platform Messages  section. NTSTATUS PrepareChannelMessage(     IN PVOID Context,     IN PIRP Irp,     IN KSDSPCHANNEL Channel,     IN KSDSP_MSG MessageId,     IN OUT PVOID MessageFrame,     IN ULONG MessageDataLength,     IN va_list ArgList        );         Parameters: Context   Context as provided in the result in the BUS_INTERFACE_KSDSPPLATFORM structure for the query of the BUSID_KSDSPPlatform interface.  I/O request packet associated with the message. Channel   Target channel to receive the message. MessageId   KSDSP message identifier. MessageFrame  a pointer to the message frame with sufficient storage for the message as allocated via AllocateMessageFrame(). MessageDataLength   Specifies the length of the data element for the given message identifier.  This is the adjusted allocation length from the previous call to AllocateMessageFrame(). ArgList   The message specific variable argument.  The platform driver is expected to process the parameters per each message as per the detailed in the   REF _Ref445693541 \h   \* MERGEFORMAT  DSP Platform Messages  section. Remarks: Generally, the client will call this method as follows: NTSTATUS Client::PrepareMessage(     IN PIRP Irp,     IN KSDSPCHANNEL Channel,     IN KSDSP_MSG MessageId,     IN PVOID MessageFrame,     IN ULONG MessageDataLength,     IN ULONG Flags,         ...     )     NTSTATUS  Status;     va_list   ArgList;     va_start( ArgList, Flags );     Status =          m_PlatformInterface->PrepareChannelMessage(              m_PlatformInterface->Context,             Irp,             Channel,             MessageId,             MessageFrame,             MessageDataLength,             ArgList );     va_end( ArgList );             return Status; Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code. PrepareMessage Prepares a message for a transaction with the DSP platform.  Similar to PrepareChannelMessage(), except that the message is targeted to the platform instead of a specific control or data channel. NTSTATUS PrepareMessage(     IN PVOID Context,     IN PIRP Irp,     IN KSDSP_MSG MessageId,     IN OUT PVOID MessageFrame,     IN ULONG MessageDataLength,     IN va_list ArgList        ); Parameters: Same as PrepareMessageChannel(), except Channel is not specified. Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code. MapDataTransfer Prepares a message for a DMA transaction with the DSP platform.  The platform driver must prepare the message frame, any platform specific members is the message frame for communication with the platform and map the I/O buffer for scatter/gather DMA as required by the platform.  It is expected that the platform driver will translate the standard KSDSP message into private equivalents, if required.   NTSTATUS MapDataTransfer(     IN PVOID Context,     IN PIRP Irp,     IN KSDSPCHANNEL Channel,     IN KSDSP_MSG MessageId,     IN OUT PVOID MessageFrame,     IN PVOID Buffer,     IN ULONG BufferLength     ); Parameters: Context   Context as provided in the result in the BUS_INTERFACE_KSDSPPLATFORM structure for the query of the BUSID_KSDSPPlatform interface.  I/O request packet associated with the message. Channel   Target channel to receive the message. MessageId   KSDSP message identifier, either KSDSP_MSG_READ_STREAM or KSDSP_MSG_WRITE_STREAM. MessageFrame  a pointer to the message frame with sufficient storage for the message as allocated via AllocateMessageFrame(). Buffer   Pointer to buffer to map for the read or write DMA transfer.. BufferLength   Size of the I/O buffer to map for the read or write DMA transfer. Remarks: The platform driver is expected to prepare the buffer and build the appropriate message for a scatter/gather DMA transaction between the DSP and the host. Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code. UnmapDataTransfer Unmaps buffers previouslyt mapped with MapDataTransfer.  NTSTATUS UnmapDataTransfer(     IN PVOID Context,     IN PIRP Irp     ); Parameters: Context   Context as provided in the result in the BUS_INTERFACE_KSDSPPLATFORM structure for the query of the BUSID_KSDSPPlatform interface.  I/O request packet associated with the message. Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code. AllocateMessageFrame Allocates a message frame for the client s requested message size.  The memory is expected to meet the needs of the platform driver when such message is submitted to the device for I/O.  For example, if allocations spanning page boundaries must be physically contiguous, the driver is expected to have allocated the memory using HalAllocateCommonBuffer. NTSTATUS AllocateMessageFrame(     IN PVOID Context,     IN KSDSP_MSG MessageId,     OUT PVOID *MessageFrame,     IN OUT PULONG MessageDataLength     ); Parameters: Context   Context as provided in the result in the BUS_INTERFACE_KSDSPPLATFORM structure for the query of the BUSID_KSDSPPlatform interface. MessageId   Message identifier MessageFrame   Pointer to receive resultant message frame MessageDataLength   Specifies the length of the data element for the given message identifier.  Note that this does not include the size of any header required to support this message in the platform driver.  The platform driver is expected to adjust the allocation length as necessary and then return a pointer to the client s usable portion of the actual physical message frame. Return Value: STATUS_SUCCESS otherwise STATUS_INSUFFICIENT_RESOURCES SendMessage Sends a message to the DSP platform.  The I/O request packet must have been configured using either PrepareMessage(), PrepareChannel Message(), or MapDataTransfer(). NTSTATUS SendMessage(     IN PVOID Context,     IN PIRP Irp     ); Parameters: Context   Context as provided in the result in the BUS_INTERFACE_KSDSPPLATFORM structure for the query of the BUSID_KSDSPPlatform interface.  I/O request packet associated with this message.  The associated IRP is intended to be used for managing the tracking of message I/O in the system.  The IRP is formed as a device I/O control request for IOCTL_KSDSP_MESSAGE, and Irp->AssociatedIrp.SystemBuffer member is set to MessageFrame.  The IRP has also been prepared with the necessary information if a caller has specified a completion routine and a completion context.  The IRP has been queued to the caller s thread and if the thread is unexpectedly terminated, the I/O subsystem will cancel I/O associated with the thread.  It is the driver s responsibility to deal with this cancelable condition.  Remarks: The implementation of this interface member in the reference platform simply calls IoCallDriver() to the functional device object (FDO) associated with the given context. Return Value: STATUS_SUCCESS if no error and if the I/O was completed immediately, STATUS_PENDING if the I/O is pending, otherwise an appropriate error code. GetMessageResult Retrieves the result from the message and returns the data result, if any.   This method translates the result codes and resultant data into standard structures as specified by the message result details in the   REF _Ref445693541 \h   \* MERGEFORMAT  DSP Platform Messages  section.  The caller is expected to free any memory that is allocated on behalf of the client for resultant data structures. STDMETHODIMP GetMessageResult(     IN PVOID MessageFrame,     OUT PVOID Result OPTIONAL     ); Parameters: MessageFrame   Message frame sent to the platform. Result   Optional pointer to receive the resultant data from the platform. Remarks: The resultant data structure varies for each message. Please refer to the message reference section for the specific data structures. Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code. FreeMessageFrame Frees a message frame previously allocated using AllocateMessageFrame. VOID  FreeMessageFrame(     PVOID Context,     PVOID MessageFrame     ); Parameters: Context   Context as provided in the result in the BUS_INTERFACE_KSDSPPLATFORM structure for the query of the BUSID_KSDSPPlatform interface. MessageFrame   Pointer to a message frame previously allocated using AllocateMessageFrame. Return Value: Nothing. GetControlChannel Returns a control channel identifer given the task context.  The control channel identifier distinguishes messages sent to the task and general control of the filter as opposed to specific pin or stream control. NTSTATUS GetControlChannel(     PVOID Context,     IN PVOID TaskContext,     OUT PKSDSPCHANNEL ControlChannel     ); Parameters: Context   Context as provided in the result in the BUS_INTERFACE_KSDSPPLATFORM structure for the query of the BUSID_KSDSPPlatform interface. TaskContext   an opaque 32-bit value identifying the task on the platform ControlChannel   resultant channel identifier Return Value: STATUS_SUCCESS otherwise an appropriate error code. DSP Platform Messages KSDSP defines a set of standard messages to communicate with the DSP platform.  It is expected that the platform may define it own method and messages to communicate with the platform.  KSDSP provides a number of methods in the Platform Bus Interface to allow for the translation between a KSDSP message and the platform s private interface. PrepareMessage(), PrepareChannelMessage(), SendMessage(), and GetMessageResult() define the primary interface in which messages are prepared, sent and results obtained from the DSP platform and tasks.  See the   REF _Ref445692624 \h   \* MERGEFORMAT  DSP Platform Bus Interface  section for details on these methods. KSDSP Message Defintions and Structures The general message set is defined by the following enumeration.   These messages may be used directly by the platform or may be translated into platform specific messages in the PrepareMessage()and PrepareChannelMessage() methods of the platform interface.  The message parameters are defined in the following sections. typedef enum {     KSDSP_MSG_LOAD_TASK,     KSDSP_MSG_FREE_TASK,     KSDSP_MSG_OPEN_DATA_CHANNEL,     KSDSP_MSG_CLOSE_DATA_CHANNEL,     KSDSP_MSG_SET_CHANNEL_STATE,     KSDSP_MSG_PROPERTY,     KSDSP_MSG_METHOD,     KSDSP_MSG_EVENT,     KSDSP_MSG_SET_TARGET_CHANNEL,     KSDSP_MSG_WRITE_STREAM,     KSDSP_MSG_READ_STREAM } KSDSP_MSG, *PKSDSP_MSG; KSDSP_MSG_LOAD_TASK Loads the specified task and creates a task context (an opaque  32-bit value) to return to the host. MessageDataLength = (TaskName->Length >> 1) + sizeof( NULL ); Status =      PrepareMessage(          &Irp,          KSDSP_MSG_LOAD_TASK,          &MessageFrame,          &MessageDataLength,         KSDSP_PREPAREMESSAGEF_ALLOCATE_IRP |             KSDSP_PREPAREMESSAGEF_ALLOCATE_FRAME,         (PUNICODE_STRING) TaskName ); Status =      GetMessageResult( MessageFrame, TaskContext ); Parameters: PUNICODE_STRING TaskName   a Unicode string containing the task name to load Return Value: STATUS_SUCCESS and the result of the message is as described below, otherwise an appropriate error code. Value Description PVOID TaskContext An opaque 32-bit value identifying the task on the platform KSDSP_MSG_FREE_TASK Frees the task associated with the given TaskContext.  MessageDataLength = sizeof( TaskContext ); Status =      PrepareMessage(          &Irp,          KSDSP_MSG_FREE_TASK,          &MessageFrame,          &MessageDataLength,         KSDSP_PREPAREMESSAGEF_ALLOCATE_IRP |             KSDSP_PREPAREMESSAGEF_ALLOCATE_FRAME,         TaskContext ); // Send the message and wait for the result Status =      GetMessageResult( MessageFrame, NULL ); Parameters: TaskContext   a PVOID as returned by KSDSP_MSG_LOAD_TASK. Return Value: STATUS_SUCCESS if no error, otherwise an appropriate error code. KSDSP_MSG_OPEN_DATA_CHANNEL Opens a data channel  associated with the given pin identifier.  The PinId is an index into the array of pin types as specified in the filter descriptor.  For specific information on PinIds consult the Kernel Streaming documentation. MessageDataLength = sizeof( KSDSPCHANNEL );              Status =      m_KsDspIo->PrepareChannelMessage(          &Irp,          m_ControlChannel,         KSDSP_MSG_OPEN_DATA_CHANNEL,         &MessageFrame,          &MessageDataLength,         KSDSP_PREPAREMESSAGEF_ALLOCATE_IRP |             KSDSP_PREPAREMESSAGEF_ALLOCATE_FRAME,         PinId ); // Send the message and wait for the result     Status =          m_KsDspIo->GetMessageResult( MessageFrame, DataChannel ); Parameters: ULONG32 PinId   the pin identifier associated with the data channel. Return Value: STATUS_SUCCESS and the result of the message is as described below, otherwise an appropriate error code. Value Description KSDSPCHANNEL DataChannel An identifer uniquely identifying the resultant data channel for this instance of the pin. KSDSP_MSG_CLOSE_DATA_CHANNEL Closes a data channel previously opened using KSDSP_MSG_OPEN_DATA_CHANNEL. The message is targeted to the specific data channel and has no other parameters. MessageDataLength = 0;              Status =      m_KsDspIo->PrepareChannelMessage(          &Irp,          DataChannel,         KSDSP_MSG_CLOSE_DATA_CHANNEL,         &MessageFrame,          &MessageDataLength,         KSDSP_PREPAREMESSAGEF_ALLOCATE_IRP |             KSDSP_PREPAREMESSAGEF_ALLOCATE_FRAME ); // Send the message and wait for the result     Status =          m_KsDspIo->GetMessageResult( MessageFrame, NULL ); Parameters: None. Return Value: STATUS_SUCCESS, otherwise an appropriate error code. KSDSP_MSG_SET_CHANNEL_STATE Sets the state of a data channel channel.  This message is not valid on control channels. KSSTATE State; State = KSSTATE_RUN; MessageDataLength = sizeof( KSSTATE );              Status =      m_KsDspIo->PrepareChannelMessage(          &Irp,          DataChannel,         KSDSP_MSG_CLOSE_DATA_CHANNEL,         &MessageFrame,          &MessageDataLength,         KSDSP_PREPAREMESSAGEF_ALLOCATE_IRP |             KSDSP_PREPAREMESSAGEF_ALLOCATE_FRAME,         State ); // Send the message and wait for the result     Status =          m_KsDspIo->GetMessageResult( MessageFrame, NULL ); Parameters: KSSTATE State   state to set the specified data channel  Return Value: STATUS_SUCCESS, otherwise an appropriate error code. KSDSP_MSG_PROPERTY KSDSP_MSG_METHOD KSDSP_MSG_EVENT KSDSP_MSG_SET_TARGET_CHANNEL Sets the target of the output of the specified data channel to the target data channel.  This message is not valid on control channels. MessageDataLength = sizeof( KSDSPCHANNEL );              Status =      m_KsDspIo->PrepareChannelMessage(          &Irp,          DataChannel,         KSDSP_MSG_SET_TARGET_CHANNEL,         &MessageFrame,          &MessageDataLength,         KSDSP_PREPAREMESSAGEF_ALLOCATE_IRP |             KSDSP_PREPAREMESSAGEF_ALLOCATE_FRAME,         TargetDataChannel ); // Send the message and wait for the result     Status =          m_KsDspIo->GetMessageResult( MessageFrame, NULL ); Parameters: KSDSPCHANNEL TargetDataChannel   target data channel to receive output data Return Value: STATUS_SUCCESS, otherwise an appropriate error code. KSDSP_MSG_WRITE_STREAM Requests a write operation on the specified data channel for the given address and length.            Status =      m_KsDspIo->MapDataTransfer(          &Irp,          DataChannel,         KSDSP_MSG_WRITE_STREAM,         &MessageFrame,         OutputBuffer,         OutputBufferLength,         KSDSP_MAPDATATRANSFERF_ALLOCATE_IRP |             KSDSP_MAPDATATRANSFERF_ALLOCATE_FRAME ); // Send the message and wait for the result     Status =          m_KsDspIo->GetMessageResult( MessageFrame, NULL ); Parameters: PVOID OutputBuffer   pointer to buffer to write ULONG OutputBufferLength   size of output buffer  Return Value: STATUS_SUCCESS, otherwise an appropriate error code. KSDSP_MSG_READ_STREAM Requests a read operation on the specified data channel for the given address and length.            Status =      m_KsDspIo->MapDataTransfer(          &Irp,          DataChannel,         KSDSP_MSG_READ_STREAM,         &MessageFrame,          InputBuffer,         InputBufferLength,         KSDSP_MAPDATATRANSFERF_ALLOCATE_IRP |             KSDSP_MAPDATATRANSFERF_ALLOCATE_FRAME ); // Send the message and wait for the result     Status =          m_KsDspIo->GetMessageResult( MessageFrame, NULL ); Parameters: PVOID InputBuffer   pointer to buffer to read ULONG InputBufferLength   size of input buffer  Return Value: STATUS_SUCCESS, otherwise an appropriate error code. KS Demand-load Device Driver Services The KS library provides a number of services to extend a driver such that it can provide demand-load functionality of child devices. When a device driver uses these services, it effectively becomes a Plug-And-Play bus enumerator .  The services in KS provide all of the necessary support to handle the requests for Plug-And-Play support of the bus enumerator. Creating the Bus Enum Object To create a demand-load bus enumerator, the device driver calls KsCreateBusEnumObject in the AddDevice processing for its device: Status =        KsCreateBusEnumObject(            L"EPD-TM1",                  // Bus Identifier String            FunctionalDeviceObject,      // PnP Functional Device Object            PhysicalDeviceObject,        // PnP Physical Device Object            EpdBuffer->PnpDeviceObject,  // Attached device object                                          //   (result of attaching FDO to PDO), may be                                          //    different from PDO if filter drivers are                                         //    present)            &TM1BusInterfaceId,          // Interface Identifier, registered as a device                                          //     interface            L"Filters" );                // Relative path to store information about                                          //     demand-load interfaces The following I/O controls must be supported by the FDO:     case IOCTL_SWENUM_INSTALL_INTERFACE:         Status = KsInstallBusEnumInterface( Irp );         break;     case IOCTL_SWENUM_GET_BUS_ID:         Status = KsGetBusEnumIdentifier( Irp );         break; Plug And Play IRP Handling The Plug-And-Play IRP dispatch handler must be modified similar to the section of code below to properly forward requests to the KS bus-enumerator services. NTSTATUS  DispatchPnp(     IN PDEVICE_OBJECT DeviceObject,     IN PIRP Irp     ) Routine Description:     This is the main PnP dispatch handler.  We receive notifications     regarding our FDO here.  First, we must pass down the notifications     to the PDO so that it can perform the necessary operations for enabling     and disabling the resources via the bus driver. Arguments:     IN PDEVICE_OBJECT DeviceObject -         pointer to our FDO     IN PIRP Irp -         pointer to the I/O request packet Return:     BOOLEAN             ChildDevice;     NTSTATUS            Status;     PEPDBUFFER          EpdBuffer;     PIO_STACK_LOCATION  irpSp;     Status = KsIsBusEnumChildDevice( DeviceObject, &ChildDevice );     if (!NT_SUCCESS( Status )) {         Irp->IoStatus.Status = Status;         IoCompleteRequest( Irp, IO_NO_INCREMENT );         return Status;     }     //     // If this request is for a child PDO, let KS service the request.     //     if (ChildDevice) {         Status = KsServiceBusEnumPnpRequest( DeviceObject, Irp );         Irp->IoStatus.Status = Status;         IoCompleteRequest( Irp, IO_NO_INCREMENT );         return Status;     }     irpSp = IoGetCurrentIrpStackLocation( Irp );     EpdBuffer = (PEPDBUFFER) DeviceObject->DeviceExtension;     //     // This request is directed towards the FDO.  Take the control mutex     // and then perform the requested operation.     //         KeWaitForSingleObject(          &EpdBuffer->ControlMutex,         Executive,         KernelMode,         FALSE,                  // not alertable         NULL );     switch (irpSp->MinorFunction) {     case IRP_MN_START_DEVICE:         {         PCM_RESOURCE_LIST   AllocatedResources, TranslatedResources;                  _DbgPrintF(              DEBUGLVL_BLAB,              ("DispatchPnP: IRP_MN_START_DEVICE") );                  Status =              KsForwardAndCatchIrp(                  EpdBuffer->PnpDeviceObject,                  Irp,                  irpSp->FileObject,                 KsStackCopyToNewLocation );                  AllocatedResources =              irpSp->Parameters.StartDevice.AllocatedResources;         TranslatedResources =              irpSp->Parameters.StartDevice.AllocatedResourcesTranslated;                      _DbgPrintF(              DEBUGLVL_BLAB,             ("Resources: Allocated: %08x, Translated: %08x",                  AllocatedResources, TranslatedResources) );                      if (NT_SUCCESS( Status )) {             Status =                 EpdInitialize(                      EpdBuffer->PnpDeviceObject,                     DeviceObject,                      AllocatedResources,                     TranslatedResources );         }         //         // Call SWENUM to enable child interfaces         //         if (NT_SUCCESS( Status )) {             Status = KsServiceBusEnumPnpRequest( DeviceObject, Irp );             if (!NT_SUCCESS( Status)) {                 EpdTerminate( DeviceObject );             }          }                      }         break;     case IRP_MN_QUERY_STOP_DEVICE:     case IRP_MN_QUERY_REMOVE_DEVICE:         case IRP_MN_CANCEL_STOP_DEVICE:     case IRP_MN_CANCEL_REMOVE_DEVICE:         Status =              KsForwardAndCatchIrp(                  EpdBuffer->PnpDeviceObject,                  Irp,                  irpSp->FileObject,                 KsStackCopyToNewLocation );         if (NT_SUCCESS( Status )) {             Status = KsServiceBusEnumPnpRequest( DeviceObject, Irp );                 }         break;         case IRP_MN_REMOVE_DEVICE:     case IRP_MN_STOP_DEVICE:         {         //         // Release resources and then forward request to the bus.         //                              EpdTerminate( DeviceObject );         Status =              KsForwardAndCatchIrp(                  EpdBuffer->PnpDeviceObject,                  Irp,                  irpSp->FileObject,                 KsStackCopyToNewLocation );         ASSERT( Status == STATUS_SUCCESS );                  Status = KsServiceBusEnumPnpRequest( DeviceObject, Irp );                 }                break;     case IRP_MN_QUERY_DEVICE_RELATIONS:         {                 DEVICE_RELATION_TYPE relationType;                  //         // The TargetDeviceRelation for the FDO are handled by         // forwarding the request to the bus.         //                  relationType = irpSp->Parameters.QueryDeviceRelations.Type;         if (relationType == TargetDeviceRelation) {             PDEVICE_OBJECT PnpDeviceObject;                          //             // Forward this IRP to the bus reusing the current             // stack location.             //                          Status =                  KsGetBusEnumPnpDeviceObject(                      DeviceObject,                      &PnpDeviceObject );                          if (NT_SUCCESS( Status )) {                                 IoSkipCurrentIrpStackLocation(Irp);                 return IoCallDriver( PnpDeviceObject, Irp );             }             //             // On error, fall through and complete the IRP with             // the status.             //             } else {             Status = KsServiceBusEnumPnpRequest( DeviceObject, Irp );             }                  }                     break;              default:         Status = KsServiceBusEnumPnpRequest( DeviceObject, Irp );                      if ((Status == STATUS_NOT_SUPPORTED) || NT_SUCCESS( Status )) {             KeReleaseMutex( &EpdBuffer->ControlMutex, FALSE );             IoSkipCurrentIrpStackLocation(Irp);             return IoCallDriver( EpdBuffer->PnpDeviceObject, Irp );         }              }     KeReleaseMutex( &EpdBuffer->ControlMutex, FALSE );     Irp->IoStatus.Status = Status;     IoCompleteRequest( Irp, IO_NO_INCREMENT );              return Status;         ref ProjectName Windows 2000 title  DSP Platform Interface Definition Draft:  ref Version Version 1.2 3/16/99 SYMBOL 227 \f "Symbol"  Microsoft Corporation, 1999. All Rights Reserved. Contents -  Microsoft Confidential Microsoft Confidential ref ProjectName Windows 2000 title  DSP Platform Interface Definition Draft:  ref Version Version 1.2 3/16/99 SYMBOL 227 \f "Symbol"  Microsoft Corporation, 1998. All Rights Reserved. Contents -  Microsoft Confidential Microsoft Confidential ref ProjectName \* mergeformat Windows 2000 title  DSP Platform Interface Definition Draft,  ref Version \* mergeformat Version 1.2 savedate  3/16/99 8:54 AM nfidential (printed  date \@ "M/d/yy h:mm AM/PM" 3/16/99 8:56 AM Microsoft Confidential
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\net\irda\irsir\usa\netirsir.txt ===
[Strings]
Microsoft           = "(Standard Infrared Port)"
ACTiSYS		    = "ACTiSYS"
AMP		    = "AMP"
@n:NEC                 = "NEC"
ESI                 = "Extended Systems"
HP                  = "Hewlett Packard"
IBM                 = "IBM"
Parallax            = "Parallax"
Tekram              = "Tekram"
Puma                = "Puma Technologies"
Temic               = "Vishay Telefunken"
Girbil              = "Greenwich Instruments Ltd"

IRSIR.DevDesc       = "Microsoft Serial Infrared Driver"
DisplayClassName    = "Infrared devices"

Generic.DevDesc	    = "Built-in Infrared Device"
*PNP0510.DevDesc    = "Built-in Infrared Device"
*PNP0511.DevDesc    = "Built-in Infrared Device"
*IBM0002.DeviceDesc = "IBM Thinkpad Infrared Device"
*IBM0034.DeviceDesc = "IBM Thinkpad Infrared Device"
*IBM0020.DeviceDesc = "Infrared connector on the King ISA Plug and Play PCMCIA Controller"
HWPDEAD.DeviceDesc  = "HP Infrared Communication Port"
ACTiSYS_200L.DevDesc= "ACTiSYS IR-200L Serial Infrared Device"
ACTiSYS_220L.DevDesc= "ACTiSYS IR-220L Serial Infrared Device"
ACTiSYS_220LPlus.DevDesc= "ACTiSYS IR-220L+ Serial Infrared Device"
AMP.DevDesc         = "AMP PHASIR Serial Infrared Device"
@n:NEC98U03.DevDesc    = "NEC PC-9821-U03"
ESI_9680.DevDesc    = "ESI-9680 JetEye Serial Infrared Device"
Parallax.DevDesc    = "Parallax PRA9500A Serial Infrared Device"
Tekram.DevDesc      = "Tekram IRMate-210 Serial Infrared Device"
Puma.DevDesc        = "Puma Serial Infrared Device"
Temic.DevDesc       = "Vishay Telefunken TOIM3232 Serial Infrared Device"
Girbil.DevDesc       = "Greenwich Instruments GIrBIL Serial Infrared Device"
NullModem.DevDesc   = "Serial Cable using IrDA Protocol"
VLSI                = "VLSI"
VLSI.DevDesc        = "VLSI VL82C147 PCI IrDA Controller"
IrEnum.DisplayName = "IR Enumerator Service"

IRSIR.Help          = "An IrDA serial infrared device is a built-in COM port or external transceiver which transmits infrared pulses. This NDIS miniport driver installs as a network adapter and binds to the Fast IR protocol."
InfraredTransceiver = "Infrared Transceiver"
SerialPort          = "Serial Port"

;*******************************************
;Handy macro substitutions (non-localizable)
SPSVCINST_ASSOCSERVICE = 0x00000002
SERVICE_KERNEL_DRIVER  = 1
SERVICE_BOOT_START     = 0
SERVICE_DEMAND_START   = 3
SERVICE_ERROR_NORMAL   = 1
SERVICE_ERROR_CRITICAL = 3
REG_EXPAND_SZ          = 0x00020000
REG_DWORD              = 0x00010001
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\net\irda\mknet\inf\usa\irmk7w2k.txt ===
[Strings]
;
;  This section defines symbolic string constants for use in the rest
;  of the .inf script.  You should create and use symbols for all
;  translatable strings in order to make localization easier.
;  Also, spaces within strings elsewhere in the script confuse infedit.exe;
;  so use symbolic constants for any multi-word strings.
;
UpperInterface="ndisirda"
LowerInterface="nolower"
sierra.DevDesc="MKNet MK7100-based VFIR (16Mbps) Wireless PCI Adapter"
SIERRA_HELP="The IrDA 1.4 infrared adapter can be used to establish wireless and network links to other computers at 16Mbps."
V_CLASSNAME="Network adapters"
MKNET="MKNET"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\net\irda\sigmatel\inf\usa\irstusb.txt ===
[Strings]
ST="SigmaTel, Inc."
USB\VID_066F&PID_4200.DeviceDesc="SigmaTel USB-IrDA Dongle"
STIrUsb.SvcDesc="SigmaTel USB-IrDA Dongle"
STIrUsb.Help   = "The USB-IrDA is a fast IrDA infrared port. It can be used to establish wireless serial and network links to other computers."

strRXSEL="Infrared Transceiver Type"
strIRDATURNTIME="Min. Turn-Around Time"
strSPEEDENABLE="Speed Enable"
strRXWINDOW="Receive Window"

strDRIVERDISK=""
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\net\irda\nscirda\usa\irnsc.txt ===
[Strings]
;
;  This section defines symbolic string constants for use in the rest
;  of the .inf script.  You should create and use symbols for all
;  translatable strings in order to make localization easier.
;  Also, spaces within strings elsewhere in the script confuse infedit.exe;
;  so use symbolic constants for any multi-word strings.
;
IRMINI_HELP="The IrDA infrared port.  It can be used to establish wireless serial and network links to other computers."
NSCIRDA.ServiceDesc="NSC Infrared Device Driver"
PC87108.DeviceDesc="NSC PC87108 EB Fast Infrared Port"
PC87308.DeviceDesc="NSC PC87308 EB Fast Infrared Port"
PC87338.DeviceDesc="NSC PC87338 EB Fast Infrared Port"
PC87560.DeviceDesc="NSC PC87560 EB Fast Infrared Port"
OEM87338.DeviceDesc="IrDA Non-PNP Fast Infrared Port"
*NSC6001.DeviceDesc="IrDA Fast Infrared Port"
*SNY7001.DeviceDesc="IrDA Fast Infrared Port"
*IBM0071.DeviceDesc="IBM ThinkPad Fast Infrared Port"
*IBM37A0.DeviceDesc="IBM Fast Infrared Port"
*NEC90A1.DeviceDesc="NEC Fast Infrared Port"
*NEC90D1.DeviceDesc="NEC Versa Notebooks Fast Infrared Port"
*NEC9141.DeviceDesc="NEC Fast Infrared Port"
*AEI0205.DeviceDesc="PUMA Fast Infrared Port"
*CHE0002.DeviceDesc="Acer Laptop Fast Infrared Port"
*HWPC224.DeviceDesc="HP Fast Infrared Port"

V_CLASSNAME="Infrared adapters"

NSC=National Semiconductor
IBM=IBM
NEC=NEC
PUMA=Puma Technologies
ACER=Acer
SONY=Sony
HP=Hewlett-Packard

Dongle_A="Infrared Transceiver A"
Dongle_B="Infrared Transceiver B"

DongleType_0="SIR Transceiver"
DongleType_1="HP HSDL-1100/2100"
DongleType_2="HP HSDL-2300/3600"
DongleType_3="IBM 31T1100"
DongleType_4="Sharp RY5HD01/KD01"
DongleType_5="Sharp RY6FD11E"
DongleType_6="Vishay TFDS-6000"
DongleType_7="Vishay TFDS-6500"
DongleType_8="Siemens IRMS/T6400"
DongleType_9="TI TSLM1100"
DongleType_10="IBM SC-20H2987"
DongleType_11="Dell T-97"

MaxConnectRate="Maximum Connect Rate"
TurnaroundTime="Minimum Turn Around Time"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\net\ms\e100bex\private\notes.txt ===
Both the x86 and ia64 libraries(mp_pm.lib) produced by this 
directory have been manually copied to ..\lib location and 
are checked in as binary files. The DDK picks them up from 
that location. 

The ..\lib location contains the free version of mp_pm.lib 

Having both binaries present in the DDK allows developers 
to compile both x86 and Ia64 versions of the sample driver 
from a single version of the DDK.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\net\ms\e100bex\private\relnote1.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Intel Corp. Release Notes for version 1 Title _PID_GUIDRelease Notes for version 1 Jesse Brandeburg Normal.dot Jesse Brandeburg Microsoft Word 8.0veral new features available only with the NT 5 DDK and the Operating Systems that support NDIS 5.0 drivers. This driver also implements many features from the NDIS 4 specification. NDIS 4: NdisSendPackets(); multiple packets per send request are handled. (see send.c) NDIS 4: NdisMIndicateReceivePacket(); multiple packets per receive indication. (see interrup.c) NDIS 4: When the adapter driver begins to run out of receive memory, NdisMAllocateSharedMemory() is called to allocate more shared memory for receive buffers. (see interrup.c and others) NDIS 4: NdisMRegisterAdapterShutdownHandler() is called at initialization time to make sure the adapter has a function that stops generating interrupts and receiving packets into main memory. (see d100.c) NDIS 4: media disconnect/connect indications are supported. This allows the driver to tell NDIS when the adapter has lost or regained link. (see request.c and d100.c) NDIS 4: packet priority support is stubbed in comments in this driver. (see send.c) NDIS 5: This driver is a deserialized miniport, meaning it handles all its own spinlocking. This driver only implements a simple method of using spinlocks: it has a NdisAcquireSpinlock() at every entry point and a NdisReleaseSpinlock() at the return from those entry points. The locks could be done more efficiently in a retail driver by moving the locking closer to the resources in the driver that need to be accessed with atomic operations. NDIS 5: WMI: There are several examples of using GUIDs to advertise custom driver SETs and QUERIES. The e100b.mof file and request.c file implement the functionality, the makefile.inc file compiles the .mof file, and the d100.rc file includes the .mof data into the driver resource area. NDIS 5: TCP Checksum Offload is stubbed in comments. (see send.c and request.c) NDIS 5: Power management for ACPI adapters is stubbed and commented. (mostly see request.c) NT 5/Windows 98 compilant installation file (.INF)  To install and test this driver, place the e100bex.sys and net557ex.inf file on a floppy. Then rename the %systemroot%\inf\net557.inf and net557.pnf files, remove the adapter from device manager (if you have already installed a driver for it) and reboot. (Make sure you have a PCI adapter card of the type mentioned at the beginning of this file installed.) The hardware wizard should come up and ask to search for drivers for your new hardware. Put in the floppy with e100bex.sys and net557ex.inf and install the driver.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\net\nec\drivers\jpn\netnec98.txt ===
[Strings]
Msft    = "Microsoft"
V_NEC  = "NEC"

*NEC0831.DeviceDesc      =   "NEC PC-9801-83/84/103(]݊)/104(]݊)"
*NEC8051.DeviceDesc      =   "NEC PC-9801-103(PnP)"
*NEC8061.DeviceDesc      =   "NEC PC-9801-104(PnP)"
*NEC1071.DeviceDesc      =   "NEC PC-9801-107/108"
*NEC80C2.DeviceDesc      =   "NEC PC-9801-111(]݊)"
*NEC80C1.DeviceDesc      =   "NEC PC-9801-111(PnP)"
NECJ02.DeviceDesc        =   "NEC PC-9801N-J02/J02R"
NECJ09.DeviceDesc        =   "NEC PC-9801N-J09"

*NEC0831.Service.DispName  =   "NEC PC-9801-83/84/103(]݊)/104(]݊)"
*NEC8051.Service.DispName  =   "NEC PC-9801-103(PnP)"
*NEC8061.Service.DispName  =   "NEC PC-9801-104(PnP)"
*NEC1071.Service.DispName  =   "NEC PC-9801-107/108"
*NEC80C2.Service.DispName  =   "NEC PC-9801-111(]݊)"
*NEC80C1.Service.DispName  =   "NEC PC-9801-111(PnP)"
NECJ02.Service.DispName    =   "NEC PC-9801N-J02/J02R"
NECJ09.Service.DispName    =   "NEC PC-9801N-J09"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\net\nec\drivers\usa\netnec98.txt ===
[Strings]
Msft    = "Microsoft"
V_NEC  = "NEC"

*NEC0831.DeviceDesc      =   "NEC PC-9801-83/84/103(]݊)/104(]݊)"
*NEC8051.DeviceDesc      =   "NEC PC-9801-103(PnP)"
*NEC8061.DeviceDesc      =   "NEC PC-9801-104(PnP)"
*NEC1071.DeviceDesc      =   "NEC PC-9801-107/108"
*NEC80C2.DeviceDesc      =   "NEC PC-9801-111(]݊)"
*NEC80C1.DeviceDesc      =   "NEC PC-9801-111(PnP)"
NECJ02.DeviceDesc        =   "NEC PC-9801N-J02/J02R"
NECJ09.DeviceDesc        =   "NEC PC-9801N-J09"

*NEC0831.Service.DispName  =   "NEC PC-9801-83/84/103(]݊)/104(]݊)"
*NEC8051.Service.DispName  =   "NEC PC-9801-103(PnP)"
*NEC8061.Service.DispName  =   "NEC PC-9801-104(PnP)"
*NEC1071.Service.DispName  =   "NEC PC-9801-107/108"
*NEC80C2.Service.DispName  =   "NEC PC-9801-111(]݊)"
*NEC80C1.Service.DispName  =   "NEC PC-9801-111(PnP)"
NECJ02.Service.DispName    =   "NEC PC-9801N-J02/J02R"
NECJ09.Service.DispName    =   "NEC PC-9801N-J09"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\net\sna\ibmmg\usa\ibmsync.txt ===
[Strings]
Msft        = "Microsoft"
V_IBM       = "IBM"
V_MGATE     = "Microgate"

ibm_x25_sdlc380.DeviceDesc       =   "IBM X.25/SDLC Adapter Base 380"
ibm_x25_sdlcm380.DeviceDesc      =   "IBM X.25/SDLC MPCA Adapter Base 380"
ibm_x25_sdlcm3A0.DeviceDesc      =   "IBM X.25/SDLC MPCA Adapter Base 3A0"
ibm_x25_sdlcMPAAS1.DeviceDesc    =   "IBM X.25/SDLC MPA/A Adapter (Slot 1)"
ibm_x25_sdlcMPAAS2.DeviceDesc    =   "IBM X.25/SDLC MPA/A Adapter (Slot 2)"
ibm_x25_sdlcMPAAS3.DeviceDesc    =   "IBM X.25/SDLC MPA/A Adapter (Slot 3)"
ibm_x25_sdlcMPAAS4.DeviceDesc    =   "IBM X.25/SDLC MPA/A Adapter (Slot 4)"
ibm_x25_sdlcMPAAS5.DeviceDesc    =   "IBM X.25/SDLC MPA/A Adapter (Slot 5)"
ibm_x25_sdlcMPAAS6.DeviceDesc    =   "IBM X.25/SDLC MPA/A Adapter (Slot 6)"
ibm_x25_sdlcMPAAS7.DeviceDesc    =   "IBM X.25/SDLC MPA/A Adapter (Slot 7)"
ibm_x25_sdlcMPAAS8.DeviceDesc    =   "IBM X.25/SDLC MPA/A Adapter (Slot 8)"

mgate_x25_sdlc180.DeviceDesc     =   "Microgate X.25/SDLC Adapter Base 180"
mgate_x25_sdlc380.DeviceDesc     =   "Microgate X.25/SDLC Adapter Base 380"
mgate_x25_sdlc3A0.DeviceDesc     =   "Microgate X.25/SDLC Adapter Base 3A0"
mgate_x25_sdlcMPAAS1.DeviceDesc  =   "Microgate X.25/SDLC MPA/A Adapter (Slot 1)"
mgate_x25_sdlcMPAAS2.DeviceDesc  =   "Microgate X.25/SDLC MPA/A Adapter (Slot 2)"
mgate_x25_sdlcMPAAS3.DeviceDesc  =   "Microgate X.25/SDLC MPA/A Adapter (Slot 3)"
mgate_x25_sdlcMPAAS4.DeviceDesc  =   "Microgate X.25/SDLC MPA/A Adapter (Slot 4)"
mgate_x25_sdlcMPAAS5.DeviceDesc  =   "Microgate X.25/SDLC MPA/A Adapter (Slot 5)"
mgate_x25_sdlcMPAAS6.DeviceDesc  =   "Microgate X.25/SDLC MPA/A Adapter (Slot 6)"
mgate_x25_sdlcMPAAS7.DeviceDesc  =   "Microgate X.25/SDLC MPA/A Adapter (Slot 7)"
mgate_x25_sdlcMPAAS8.DeviceDesc  =   "Microgate X.25/SDLC MPA/A Adapter (Slot 8)"

ibmmg_x25_sdlc.Service.DispName  =   "IBM/Microgate X.25/SDLC Device Driver"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\net\sna\mgate\usa\mgsync.txt ===
[Strings]
Msft    = "Microsoft"
V_MGATE = "Microgate"

mgate_mgsl.DeviceDesc       = "Microgate SyncLink X.25/SDLC Adapter"
mgate_mgt1.DeviceDesc       = "Microgate MGT1 X.25/SDLC Adapter"
mgate_mgt1.Service.DispName = "Microgate MGT1/SyncLink X.25/SDLC Device Driver"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\net\sna\netmap\nmplcfil.txt ===
; ----------------------------------------------------------------------
; This file is used for binplacing netmap.inf file in this directory.
;
; We need to use this file because there are multiple files named netmap.inf
; and thus we cannot list this file in the main placefil.txt
; ----------------------------------------------------------------------

netmap.inf	winnt32\winntupg\ms\sna
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\net\sna\snaupgrd\snaupg40.ini ===
[SNA Upgrade Components]
;
; Supported Link Services
;
SNA Base=SNA Base Component
SNA DLC Link Service=SNA DLC Link Service Component
SNA IBM/MG Link Service=SNA IBM/Microgate Link Service Component
;
; Unsupported Link Services
;
Advanced Function Adapter for SDLC=Advanced Function Adapter for SDLC Component
ATM Adapter for SDLC=ATM Adapter for SDLC Component
ATM Adapter for X.25=ATM Adapter for X.25 Component
Barr Bus&Tag Channel Adapter=Barr Bus&Tag Channel Adapter Component
Barr T1-SYNC SDLC Adapter=Barr T1-SYNC SDLC Adapter Component
Barr T1-SYNC X.25 Adapter=Barr T1-SYNC X.25 Adapter Component
BTI Bus&Tag Channel Adapter=BTI Bus&Tag Channel Adapter Component
DCA Irma DFT Adapter=DCA Irma DFT Adapter Component
DCA ISCA SDLC Adapter=DCA ISCA SDLC Adapter Component
DCA ISCA X.25 Adapter=DCA ISCA X.25 Adapter Component
Eicon SDLC Adapters=Eicon SDLC Adapters Component
Eicon X.25 Adapters=Eicon X.25 Adapters Component
IBM 3278/9 Enh. Emulation DFT Adapter=IBM 3278/9 Enh. Emulation DFT Adapter Component
IBM 5250 Enh. Emulation Twinax Adapter=IBM 5250 Enh. Emulation Twinax Adapter Component
Microgate T1 SDLC Adapter=Microgate T1 SDLC Adapter Component
Microgate T1 X.25 Adapter=Microgate T1 X.25 Adapter Component
Polaris ESCON Channel Adapter=Polaris ESCON Channel Adapter Component
Polaris Bus & Tag Channel Adapter=Polaris Bus & Tag Channel Adapter Component
Andrew 3XTwin Twinax Adapter=Andrew 3XTwin Twinax Adapter Component
GSN Escon Link Service=GSN Escon Link Service Component
DIGI Sync/570i SDLC Link Service=DIGI Sync/570i SDLC Link Service Component
DIGI Sync/570i PCI SDLC Link Service=DIGI Sync/570i PCI SDLC Link Service Component
DIGI Sync/570i QLLC Link Service=DIGI Sync/570i QLLC Link Service Component
DIGI Sync/570i PCI QLLC Link Service=DIGI Sync/570i PCI QLLC Link Service Component
Cirel/NewLink/FPX SDLC Link Service=Cirel/NewLink/FPX SDLC Link Service Component
Cirel/Newlink/FPX X.25 link service=Cirel/Newlink/FPX X.25 link service Component
Atlantis/SAGEM SDLC Link Service=Atlantis/SAGEM SDLC Link Service Component
Atlantis/SAGEM X.25 Link Service=Atlantis/SAGEM X.25 Link Service Component
Emulex XP Series SDLC Link Service=Emulex XP Series SDLC Link Service Component
Emulex XP Series X.25 Link Service=Emulex XP Series X.25 Link Service Component
Interphase/Synaptel SDLC Link Service=Interphase/Synaptel SDLC Link Service Component
Interphase/Synaptel X.25 Link Service=Interphase/Synaptel X.25 Link Service Component

[SNA Services to Preserve]
AFTPD=AFTPD
DDM001=DDM001
DDM6DB=DDM6DB
MngAgent=MngAgent
NVAlert=NVAlert
NVRunCmd=NVRunCmd
PO005=PO005
sfgw=sfgw
sffsd=sffsd
SnaBase=SnaBase
SnaDdm=SnaDdm
SnaDemo=SnaDemo*
SnaDLC=SnaDLC*
SnaHostProcess=SnaHostProcess
SnaMG=SnaMG*
SnaNetMn=SnaNetMn
SnaPrint=SnaPrint
SnaRem=SnaRem*
SnaRpcService=SnaRpcService
SnaServr=SnaServr
TN3270=TN3270
TN5250=TN5250
UN2=UN2

[SNA Base Component]
FileSection=SNA Base Component File Section
RegistrySection=SNA Base Component Registry Section

[SNA Base Component File Section]

[SNA Base Component Registry Section]
Reg Key 1=clip,HKLM\SOFTWARE\Microsoft\ADVSDLCLS_1.0_*
Reg Key 2=clip,HKLM\SOFTWARE\Microsoft\ADVSYNCDD_1.0_*
Reg Key 3=clip,HKLM\SOFTWARE\Microsoft\ANDRWTDLCDD_2.0_*
Reg Key 4=clip,HKLM\SOFTWARE\Microsoft\ANDRWTDLCLS_2.0_*
Reg Key 5=clip,HKLM\SOFTWARE\Microsoft\ATMSDLCLS_1.0_*
Reg Key 6=clip,HKLM\SOFTWARE\Microsoft\ATMSYNCDD_1.0_*
Reg Key 7=clip,HKLM\SOFTWARE\Microsoft\ATMX25LS_1.0_*
Reg Key 8=clip,HKLM\SOFTWARE\Microsoft\BARRCDLCDD_1.0_*
Reg Key 9=clip,HKLM\SOFTWARE\Microsoft\BARRCDLCLS_1.0_*
Reg Key 10=clip,HKLM\SOFTWARE\Microsoft\BARREDLCDD_1.0_*
Reg Key 11=clip,HKLM\SOFTWARE\Microsoft\BARREDLCLS_1.0_*
Reg Key 12=clip,HKLM\SOFTWARE\Microsoft\BARRSDLCLS_1.0_*
Reg Key 13=clip,HKLM\SOFTWARE\Microsoft\BarrSyncDD_1.0_*
Reg Key 14=clip,HKLM\SOFTWARE\Microsoft\BARRX25LS_1.0_*
Reg Key 15=clip,HKLM\SOFTWARE\Microsoft\DCADFTDD_1.0_*
Reg Key 16=clip,HKLM\SOFTWARE\Microsoft\DCADFTLS_1.0_*
Reg Key 17=clip,HKLM\SOFTWARE\Microsoft\DCASDLCLS_1.0_*
Reg Key 18=clip,HKLM\SOFTWARE\Microsoft\DCASYNCDD_1.0_*
Reg Key 19=clip,HKLM\SOFTWARE\Microsoft\DCAX25LS_1.0_*
Reg Key 20=clip,HKLM\SOFTWARE\Microsoft\DGIPSDLCLS_3.1.1_*
Reg Key 21=clip,HKLM\SOFTWARE\Microsoft\DGIPSYNCDD_3.1.1_*
Reg Key 22=clip,HKLM\SOFTWARE\Microsoft\DGIPX25LS_3.1.1_*
Reg Key 23=clip,HKLM\SOFTWARE\Microsoft\DIGISDLCLS_3.1.1_*
Reg Key 24=clip,HKLM\SOFTWARE\Microsoft\DIGISYNCDD_3.1.1_*
Reg Key 25=clip,HKLM\SOFTWARE\Microsoft\DIGIX25LS_3.1.1_*
Reg Key 26=clip,HKLM\SOFTWARE\Microsoft\EMX25LS_1.0_*
Reg Key 27=clip,HKLM\SOFTWARE\Microsoft\EMXSDLCLS_1.0_*
Reg Key 28=clip,HKLM\SOFTWARE\Microsoft\EMXSYNCDD_1.0_*
Reg Key 29=clip,HKLM\SOFTWARE\Microsoft\FPXSDLCLS_1.0_*
Reg Key 30=clip,HKLM\SOFTWARE\Microsoft\FPXSYNCDD_1.0_*
Reg Key 31=clip,HKLM\SOFTWARE\Microsoft\FPXX25LS_1.0_*
Reg Key 32=clip,HKLM\SOFTWARE\Microsoft\GSNECADD_1.0_*
Reg Key 33=clip,HKLM\SOFTWARE\Microsoft\GSNECALS_1.0_*
Reg Key 34=clip,HKLM\SOFTWARE\Microsoft\IBMDFTDD_1.0_*
Reg Key 35=clip,HKLM\SOFTWARE\Microsoft\IBMDFTLS_1.0_*
Reg Key 36=clip,HKLM\SOFTWARE\Microsoft\IBMTDLCDD_2.0_*
Reg Key 37=clip,HKLM\SOFTWARE\Microsoft\IBMTDLCLS_2.0_*
Reg Key 38=clip,HKLM\SOFTWARE\Microsoft\MGSYNCDD_1.0_*
Reg Key 39=clip,HKLM\SOFTWARE\Microsoft\MGT1LS_1.0_*
Reg Key 40=clip,HKLM\SOFTWARE\Microsoft\MGT1XLS_1.0_*
Reg Key 41=clip,HKLM\SOFTWARE\Microsoft\POL3174E_1.0_*
Reg Key 42=clip,HKLM\SOFTWARE\Microsoft\POL3174ELS_1.0_*
Reg Key 43=clip,HKLM\SOFTWARE\Microsoft\POL3174P_1.0_*
Reg Key 44=clip,HKLM\SOFTWARE\Microsoft\POL3174PLS_1.0_*
Reg Key 45=clip,HKLM\SOFTWARE\Synaptel\SYNSDLC_1.0_*
Reg Key 46=clip,HKLM\SOFTWARE\Synaptel\SYNX25_1.0_*
Reg Key 47=clip,HKLM\SOFTWARE\Bus-Tech\BtiLink_xx_*

[SNA DLC Link Service Component]
OEMDll=snadlcug.dll

[SNA IBM/Microgate Link Service Component]
OEMDll=ibmmgug.dll

[Advanced Function Adapter for SDLC Component]
NotSupported=Advanced Function Adapter for SDLC@HKLM\SOFTWARE\Microsoft\ADVSDLCLS_1.0_*

[ATM Adapter for SDLC Component]
NotSupported=ATM Adapter for SDLC@HKLM\SOFTWARE\Microsoft\ATMSDLCLS_1.0_*

[ATM Adapter for X.25 Component]
NotSupported=ATM Adapter for X.25@HKLM\SOFTWARE\Microsoft\ATMX25LS_1.0_*

[Barr Bus&Tag Channel Adapter Component]
NotSupported=Barr Bus&Tag Channel Adapter@HKLM\SOFTWARE\Microsoft\BARRCDLCLS_1.0_*

[Barr T1-SYNC SDLC Adapter Component]
NotSupported=Barr T1-SYNC SDLC Adapter@HKLM\SYSTEM\CurrentControlSet\Services\BARRCDLCLS_1.0_*

[Barr T1-SYNC X.25 Adapter Component]
NotSupported=Barr T1-SYNC X.25 Adapter@HKLM\SYSTEM\CurrentControlSet\Services\BARRX25LS_1.0_*

[BTI Bus&Tag Channel Adapter Component]
NotSupported=BTI Bus&Tag Channel Adapter@HKLM\SOFTWARE\Bus-Tech\BtiLink_xx_*

[DCA Irma DFT Adapter Component]
NotSupported=DCA Irma DFT Adapter@HKLM\SOFTWARE\Microsoft\DCADFTLS_1.0_*

[DCA ISCA SDLC Adapter Component]
NotSupported=DCA ISCA SDLC Adapter@HKLM\SOFTWARE\Microsoft\DCASDLCLS_1.0_*

[DCA ISCA X.25 Adapter Component]
NotSupported=DCA ISCA X.25 Adapter@HKLM\SOFTWARE\Microsoft\DCAS25LS_1.0_*

[Eicon SDLC Adapters Component]
NotSupported=Eicon SDLC Adapters@HKLM\SOFTWARE\Microsoft\ECSDLCLS_1.0_*

[Eicon X.25 Adapters Component]
NotSupported=Eicon X.25 Adapters@HKLM\SOFTWARE\Microsoft\ECX25LS_1.0_*

[IBM 3278/9 Enh. Emulation DFT Adapter Component]
NotSupported=IBM 3278/9 Enh. Emulation DFT Adapter@HKLM\SOFTWARE\Microsoft\IBMDFTLS_1.0_*

[IBM 5250 Enh. Emulation Twinax Adapter Component]
NotSupported=IBM 5250 Enh. Emulation Twinax Adapter@HKLM\SOFTWARE\Microsoft\IBMTDLCLS_2.0_*

[Microgate T1 SDLC Adapter Component]
NotSupported=Microgate T1 SDLC Adapter@HKLM\SOFTWARE\Microsoft\MGT1LS_1.0_*

[Microgate T1 X.25 Adapter Component]
NotSupported=Microgate T1 X.25 Adapter@HKLM\SOFTWARE\Microsoft\MGT1XLS_1.0_*

[Polaris ESCON Channel Adapter Component]
NotSupported=Polaris ESCON Channel Adapter@HKLM\SOFTWARE\Microsoft\POL3174E_1.0_*

[Polaris Bus & Tag Channel Adapter Component]
NotSupported=Polaris Bus & Tag Channel Adapter@HKLM\SOFTWARE\Microsoft\POL3174PLS_1.0_*

[Andrew 3XTwin Twinax Adapter Component]
NotSupported=Andrew 3XTwin Twinax Adapter@HKLM\SOFTWARE\Microsoft\ANDRWTDLCLS_2.0_*

[GSN Escon Link Service Component]
NotSupported=GSN Escon Link Service@HKLM\SOFTWARE\Microsoft\GSNECALS_1.0_*

[DIGI Sync/570i SDLC Link Service Component]
NotSupported=DIGI Sync/570i SDLC Link Service@HKLM\SOFTWARE\Microsoft\DIGISDLCLS_3.1.1_*

[DIGI Sync/570i PCI SDLC Link Service Component]
NotSupported=DIGI Sync/570i PCI SDLC Link Service@HKLM\SOFTWARE\Microsoft\DGIPSDLCLS_3.1.1_*

[DIGI Sync/570i QLLC Link Service Component]
NotSupported=DIGI Sync/570i QLLC Link Service@HKLM\SOFTWARE\Microsoft\DIGIX25LS_3.1.1_*

[DIGI Sync/570i PCI QLLC Link Service Component]
NotSupported=DIGI Sync/570i PCI QLLC Link Service@HKLM\SOFTWARE\Microsoft\DGIPX25LS_3.1.1_*

[Cirel/NewLink/FPX SDLC Link Service Component]
NotSupported=Cirel/NewLink/FPX SDLC Link Service@HKLM\SOFTWARE\Microsoft\FPXSDLCLS_1.0_*

[Cirel/Newlink/FPX X.25 link service Component]
NotSupported=Cirel/Newlink/FPX X.25 link service@HKLM\SOFTWARE\Microsoft\FPXX25LS_1.0_*

[Atlantis/SAGEM SDLC Link Service Component]
NotSupported=Atlantis/SAGEM SDLC Link Service@HKLM\SOFTWARE\Microsoft\ATLSDLCLS_1.0_*

[Atlantis/SAGEM X.25 Link Service Component]
NotSupported=Atlantis/SAGEM X.25 Link Service@HKLM\SOFTWARE\Microsoft\ATLX25LS_1.0_*

[Emulex XP Series SDLC Link Service Component]
NotSupported=Emulex XP Series SDLC Link Service@HKLM\SOFTWARE\Microsoft\EMXSDLCLS_1.0_*

[Emulex XP Series X.25 Link Service Component]
NotSupported=Emulex XP Series X.25 Link Service@HKLM\SOFTWARE\Microsoft\EMX25LS_1.0_*

[Interphase/Synaptel SDLC Link Service Component]
NotSupported=Interphase/Synaptel SDLC Link Service@HKLM\SOFTWARE\Synaptel\SYNSDLC_1.0_*

[Interphase/Synaptel X.25 Link Service Component]
NotSupported=Interphase/Synaptel X.25 Link Service@HKLM\SOFTWARE\Synaptel\SYNX25_1.0_*
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\net\sna\snaupgrd\snaupg30.ini ===
[SNA Upgrade Components]
;
; Supported Link Services
;
SNA Base=SNA Base Component
SNA Warning=SNA Warning Component

[SNA Warning Component]
NotSupported=SNA Server version 3.0 and previous releases@HKLM\SOFTWARE\Microsoft\SNA Server

[SNA Services to Preserve]

[SNA Base Component]
FileSection=SNA Base Component File Section
RegistrySection=SNA Base Component Registry Section

[SNA Base Component File Section]

[SNA Base Component Registry Section]
Reg Key 1=clip,HKLM\SOFTWARE\Microsoft\ADVSDLCLS_1.0_*
Reg Key 2=clip,HKLM\SOFTWARE\Microsoft\ADVSYNCDD_1.0_*
Reg Key 3=clip,HKLM\SOFTWARE\Microsoft\ANDRWTDLCDD_2.0_*
Reg Key 4=clip,HKLM\SOFTWARE\Microsoft\ANDRWTDLCLS_2.0_*
Reg Key 5=clip,HKLM\SOFTWARE\Microsoft\ATMSDLCLS_1.0_*
Reg Key 6=clip,HKLM\SOFTWARE\Microsoft\ATMSYNCDD_1.0_*
Reg Key 7=clip,HKLM\SOFTWARE\Microsoft\ATMX25LS_1.0_*
Reg Key 8=clip,HKLM\SOFTWARE\Microsoft\BARRCDLCDD_1.0_*
Reg Key 9=clip,HKLM\SOFTWARE\Microsoft\BARRCDLCLS_1.0_*
Reg Key 10=clip,HKLM\SOFTWARE\Microsoft\BARREDLCDD_1.0_*
Reg Key 11=clip,HKLM\SOFTWARE\Microsoft\BARREDLCLS_1.0_*
Reg Key 12=clip,HKLM\SOFTWARE\Microsoft\BARRSDLCLS_1.0_*
Reg Key 13=clip,HKLM\SOFTWARE\Microsoft\BarrSyncDD_1.0_*
Reg Key 14=clip,HKLM\SOFTWARE\Microsoft\BARRX25LS_1.0_*
Reg Key 15=clip,HKLM\SOFTWARE\Microsoft\DCADFTDD_1.0_*
Reg Key 16=clip,HKLM\SOFTWARE\Microsoft\DCADFTLS_1.0_*
Reg Key 17=clip,HKLM\SOFTWARE\Microsoft\DCASDLCLS_1.0_*
Reg Key 18=clip,HKLM\SOFTWARE\Microsoft\DCASYNCDD_1.0_*
Reg Key 19=clip,HKLM\SOFTWARE\Microsoft\DCAX25LS_1.0_*
Reg Key 20=clip,HKLM\SOFTWARE\Microsoft\DGIPSDLCLS_3.1.1_*
Reg Key 21=clip,HKLM\SOFTWARE\Microsoft\DGIPSYNCDD_3.1.1_*
Reg Key 22=clip,HKLM\SOFTWARE\Microsoft\DGIPX25LS_3.1.1_*
Reg Key 23=clip,HKLM\SOFTWARE\Microsoft\DIGISDLCLS_3.1.1_*
Reg Key 24=clip,HKLM\SOFTWARE\Microsoft\DIGISYNCDD_3.1.1_*
Reg Key 25=clip,HKLM\SOFTWARE\Microsoft\DIGIX25LS_3.1.1_*
Reg Key 26=clip,HKLM\SOFTWARE\Microsoft\EMX25LS_1.0_*
Reg Key 27=clip,HKLM\SOFTWARE\Microsoft\EMXSDLCLS_1.0_*
Reg Key 28=clip,HKLM\SOFTWARE\Microsoft\EMXSYNCDD_1.0_*
Reg Key 29=clip,HKLM\SOFTWARE\Microsoft\FPXSDLCLS_1.0_*
Reg Key 30=clip,HKLM\SOFTWARE\Microsoft\FPXSYNCDD_1.0_*
Reg Key 31=clip,HKLM\SOFTWARE\Microsoft\FPXX25LS_1.0_*
Reg Key 32=clip,HKLM\SOFTWARE\Microsoft\GSNECADD_1.0_*
Reg Key 33=clip,HKLM\SOFTWARE\Microsoft\GSNECALS_1.0_*
Reg Key 34=clip,HKLM\SOFTWARE\Microsoft\IBMDFTDD_1.0_*
Reg Key 35=clip,HKLM\SOFTWARE\Microsoft\IBMDFTLS_1.0_*
Reg Key 36=clip,HKLM\SOFTWARE\Microsoft\IBMTDLCDD_2.0_*
Reg Key 37=clip,HKLM\SOFTWARE\Microsoft\IBMTDLCLS_2.0_*
Reg Key 38=clip,HKLM\SOFTWARE\Microsoft\MGSYNCDD_1.0_*
Reg Key 39=clip,HKLM\SOFTWARE\Microsoft\MGT1LS_1.0_*
Reg Key 40=clip,HKLM\SOFTWARE\Microsoft\MGT1XLS_1.0_*
Reg Key 41=clip,HKLM\SOFTWARE\Microsoft\NDIS_TokenRingLS_1.0_*
Reg Key 42=clip,HKLM\SOFTWARE\Microsoft\POL3174E_1.0_*
Reg Key 43=clip,HKLM\SOFTWARE\Microsoft\POL3174ELS_1.0_*
Reg Key 44=clip,HKLM\SOFTWARE\Microsoft\POL3174P_1.0_*
Reg Key 45=clip,HKLM\SOFTWARE\Microsoft\POL3174PLS_1.0_*
Reg Key 46=clip,HKLM\SOFTWARE\Microsoft\POL3174PLS_1.0_*
Reg Key 47=clip,HKLM\SOFTWARE\Microsoft\SNACLASPLS_2.1_*
Reg Key 48=clip,HKLM\SOFTWARE\Microsoft\SNAREMLSLS_1.0_*
Reg Key 49=clip,HKLM\SOFTWARE\Synaptel\SYNSDLC_1.0_*
Reg Key 50=clip,HKLM\SOFTWARE\Synaptel\SYNX25_1.0_*
Reg Key 51=clip,HKLM\SOFTWARE\Bus-Tech\BtiLink_xx_*
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\comtrol\rocket\driver\rk5\readme50.txt ===
RocketPort/RocketModem(R) Device Driver for Windows(TM) NT2000 Operating System
Part Number: V4.33(6-26-99) NT5.0 Driver Release

For NT2000 Operating System only, not for NT4.0 or NT3.51.

---------------------------------
INSTALLING THE BOARD

For detailed installation instructions, see the Manual and
Reference Card that came with the RocketPort/RocketModem Board.
The Setup program that you install for the RocketPort/RocketModem
board has complete installation information.  To access this
information prior to installing the board, you can
Run>"WINHELP ctmasetp.hlp", or double click on the ctmasetp.hlp file
from the Explorer.

---------------------------------
INSTALLING THE DEVICE DRIVER(PCI board)

Use the following procedure to install the device driver for
the first time with a RocketPort PCI board.

After the board is installed in the machine, when Windows NT5.0
powers up the Found New Hardware Wizard will see this new PCI
board as a PCI Simple Communications Controller.  Select
search for driver files and click next.  On the next sheet
select "Other Locations" to search for drivers.
You will then need to type in the path to the driver disk
or directory with the RocketPort drivers.

After the driver files are copied over, you can set the starting
com-port name by starting the Device Manager in the control panel,
select Multiport serial adapters and then
select the RocketPort card.  An options sheet is available
to adjust these options.

---------------------------------
INSTALLING THE DEVICE DRIVER(ISA board)

Use the following procedure to install the device driver for
the first time with a RocketPort ISA board.

After the board is installed in the machine, run the Add Hardware
Wizard from the Windows NT5.0 control panel.  Select Multiport serial
adapter to install.  Then select the <Have Disk> button.
You will need to type in the path to the driver disk or
directory with the RocketPort drivers.

The resources should be selected according to your switch
selection on the RocketPort board.  The RocketPort ISA board
switch setting default from the factory are 180H io-address.

After the driver is installed, you can set the starting
com-port name by starting the Device Manager in the control panel,
select Multiport serial adapters and then select the RocketPort card.
An options sheet should be available to adjust the options.

Reboot the machine after the installation.

---------------------------------
REGISTRY AND FILE DETAILS

You should not have to manually perform any registry of file
operations.  This information is included only for informational
purposes.

The following registry entries are made during the installation:

An entry for each board is made under the MultiPortSerial GUID:
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Class\{50906CB8-...}

An entry for each port is made under the Ports GUID:
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Class\{4D36E978-...}

Service entry is made as:
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\RocketPort

The Enum branch is hidden from the user, a special tool(pnpreg /U)
has been known to un-hide it, generally speaking you should not need
to go into this registry area.
For PCI RocketPort boards, a node(PCI Vendor ID: 11FE) is made under:
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Enum\Pci\xxxx

For ISA RocketPort boards, a node is made under:
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Enum\Root\MultiportSerial\xxxx

For all ports, nodes are made under:
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Enum\CtmPort\RkPort\

The rocket.sys file is copied to \WINNT\SYSTEM32\DRIVERS.
The ctmrclas.dll, ctmasetp.dll, ctmasetp.hlp files are copied
to \WINNT\SYSTEM32.
The netctmrk.inf, ctmaport.inf files are copied to \WINNT\INF,
  they may be renamed to oem#.inf.
The remaining files are copied to \WINNT\SYSTEM32\ROCKET.
---------------------------------
TECHNICAL SUPPORT

Run WINHELP rksetup.hlp or double click on the rksetup.hlp file from
the Explorer for installation and technical support information.

---------------------------------
ALPHA is a trademark of Digital Corporation.
Comtrol is a trademark of Comtrol Corporation.
RocketPort is a registered trademark of Comtrol Corporation.
Windows is a trademark of Microsoft Corporation.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\comtrol\rocket\infs\readme.txt ===
RocketPort/RocketModem(R) Device Driver for Windows(TM) NT Operating System
Part Number: ____ (V4.02) NT5.0 Driver Release(BETA TEST)

---------------------------------
INSTALLING THE BOARD

For detailed installation instructions, see the Manual and
Reference Card that came with the RocketPort/RocketModem Board.
The Setup program that you install for the RocketPort/RocketModem
board has complete installation information.  To access this
information prior to installing the board, you can
Run>"WINHELP rksetup.hlp", or double click on the rksetup.hlp file
from the Explorer.

---------------------------------
INSTALLING THE DEVICE DRIVER(PCI board)

Use the following procedure to install the device driver for
the first time with a RocketPort PCI board.

After the board is installed in the machine, when Windows NT5.0
powers up the Found New Hardware Wizard will see this new PCI
board as a PCI Simple Communications Controller.  Select
search for driver files and click next.  On the next sheet
select "Other Locations" to search for drivers.
You will then need to type in the path to the driver disk
or directory with the RocketPort drivers.

After the driver files are copied over, you can set the starting
com-port name by starting the Hardware Wizard in the control panel,
select change device properties, select network-adapters and then
select the RocketPort card.  An options sheet is available
to adjust these options.

---------------------------------
INSTALLING THE DEVICE DRIVER(ISA board)

Use the following procedure to install the device driver for
the first time with a RocketPort ISA board.

After the board is installed in the machine, run the Add Hardware
Wizard from the Windows NT5.0 control panel.  Select Network
Adapter to install.  Then select the <Have Disk> button.
You will need to type in the path to the driver disk or
directory with the RocketPort drivers.

The resources should be selected according to your switch
selection on the RocketPort board.  The RocketPort ISA board
switch setting default from the factory are 180H io-address.

After the driver is installed, you can set the starting
com-port name by starting the Hardware Wizard in the control panel,
select network-adapters and then select the RocketPort card.
An options sheet should be available to adjust the options.

Reboot the machine after the installation.

---------------------------------
INSTALLING ADDITIONAL ROCKETPORT ISA-BUS BOARDS

When installing additional RocketPort ISA-BUS boards, you
will need to change the "settings based on" field to adjust
the resource requirements.  This field can be found on the
"Resources" property sheet for the device.  For additional
ISA-BUS boards, the setting should be: "Basic Configuration 0001"
instead of "Basic Configuration 0000" as used for the first
RocketPort Board.

---------------------------------
REGISTRY AND FILE DETAILS

The following registry entries are made during the installation:

For PCI RocketPort boards, a node(PCI Vendor ID: 11FE) is made under:
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Enum\Pci\xxxx

For ISA RocketPort boards, a node is made under:
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Enum\Root\NET\xxxx

An entry for each board is made under the network adapter GUID:
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Class\{4D36E972-...}

Service entry is made as:
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\RocketPort

The rocket.sys file is copied to \WINNT\SYSTEM32\DRIVERS.
The rksetup.dll, rksetup.hlp files are copied to \WINNT\SYSTEM32.
The netctmrk.inf, mdmctm1.inf files are copied to \WINNT\INF.
The remaining files are copied to \WINNT\SYSTEM32\ROCKET.
---------------------------------
TECHNICAL SUPPORT

Run WINHELP rksetup.hlp or double click on the rksetup.hlp file from
the Explorer for installation and technical support information.

---------------------------------
ALPHA is a trademark of Digital Corporation.
Comtrol is a trademark of Comtrol Corporation.
RocketPort is a registered trademark of Comtrol Corporation.
Windows is a trademark of Microsoft Corporation.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\comtrol\rocket\infs\usa\ctmaport.txt ===
[Strings]
Comtrol_Corp="Comtrol Corporation"

Port_DeviceDesc0 = "Comtrol Port 0"
Port_DeviceDesc1 = "Comtrol Port 1"
Port_DeviceDesc2 = "Comtrol Port 2"
Port_DeviceDesc3 = "Comtrol Port 3"
Port_DeviceDesc4 = "Comtrol Port 4"
Port_DeviceDesc5 = "Comtrol Port 5"
Port_DeviceDesc6 = "Comtrol Port 6"
Port_DeviceDesc7 = "Comtrol Port 7"
Port_DeviceDesc8 = "Comtrol Port 8"
Port_DeviceDesc9 = "Comtrol Port 9"

Port_DeviceDesc10 = "Comtrol Port 10"
Port_DeviceDesc11 = "Comtrol Port 11"
Port_DeviceDesc12 = "Comtrol Port 12"
Port_DeviceDesc13 = "Comtrol Port 13"
Port_DeviceDesc14 = "Comtrol Port 14"
Port_DeviceDesc15 = "Comtrol Port 15"
Port_DeviceDesc16 = "Comtrol Port 16"
Port_DeviceDesc17 = "Comtrol Port 17"
Port_DeviceDesc18 = "Comtrol Port 18"
Port_DeviceDesc19 = "Comtrol Port 19"

Port_DeviceDesc20 = "Comtrol Port 20"
Port_DeviceDesc21 = "Comtrol Port 21"
Port_DeviceDesc22 = "Comtrol Port 22"
Port_DeviceDesc23 = "Comtrol Port 23"
Port_DeviceDesc24 = "Comtrol Port 24"
Port_DeviceDesc25 = "Comtrol Port 25"
Port_DeviceDesc26 = "Comtrol Port 26"
Port_DeviceDesc27 = "Comtrol Port 27"
Port_DeviceDesc28 = "Comtrol Port 28"
Port_DeviceDesc29 = "Comtrol Port 29"

Port_DeviceDesc30 = "Comtrol Port 30"
Port_DeviceDesc31 = "Comtrol Port 31"
Port_DeviceDesc32 = "Comtrol Port 32"
Port_DeviceDesc33 = "Comtrol Port 33"
Port_DeviceDesc34 = "Comtrol Port 34"
Port_DeviceDesc35 = "Comtrol Port 35"
Port_DeviceDesc36 = "Comtrol Port 36"
Port_DeviceDesc37 = "Comtrol Port 37"
Port_DeviceDesc38 = "Comtrol Port 38"
Port_DeviceDesc39 = "Comtrol Port 39"

Port_DeviceDesc40 = "Comtrol Port 40"
Port_DeviceDesc41 = "Comtrol Port 41"
Port_DeviceDesc42 = "Comtrol Port 42"
Port_DeviceDesc43 = "Comtrol Port 43"
Port_DeviceDesc44 = "Comtrol Port 44"
Port_DeviceDesc45 = "Comtrol Port 45"
Port_DeviceDesc46 = "Comtrol Port 46"
Port_DeviceDesc47 = "Comtrol Port 47"
Port_DeviceDesc48 = "Comtrol Port 48"
Port_DeviceDesc49 = "Comtrol Port 49"

Port_DeviceDesc50 = "Comtrol Port 50"
Port_DeviceDesc51 = "Comtrol Port 51"
Port_DeviceDesc52 = "Comtrol Port 52"
Port_DeviceDesc53 = "Comtrol Port 53"
Port_DeviceDesc54 = "Comtrol Port 54"
Port_DeviceDesc55 = "Comtrol Port 55"
Port_DeviceDesc56 = "Comtrol Port 56"
Port_DeviceDesc57 = "Comtrol Port 57"
Port_DeviceDesc58 = "Comtrol Port 58"
Port_DeviceDesc59 = "Comtrol Port 59"

Port_DeviceDesc60 = "Comtrol Port 60"
Port_DeviceDesc61 = "Comtrol Port 61"
Port_DeviceDesc62 = "Comtrol Port 62"
Port_DeviceDesc63 = "Comtrol Port 63"
Port_DeviceDesc64 = "Comtrol Port 64"
Port_DeviceDesc65 = "Comtrol Port 65"
Port_DeviceDesc66 = "Comtrol Port 66"
Port_DeviceDesc67 = "Comtrol Port 67"
Port_DeviceDesc68 = "Comtrol Port 68"
Port_DeviceDesc69 = "Comtrol Port 69"

RocketPort.Service.DispName  = "Comtrol RocketPort"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\comtrol\rocket\infs\usa\netctmrk.txt ===
[Strings]
;REG_EXPAND_SZ          = 0x00020000
REG_DWORD              = 0x00010001
;REG_MULTI_SZ           = 0x00010000

Comtrol_Corp="Comtrol Corporation"
Comtrol_Drv ="Comtrol Rocket Driver"

ROCKETPTPCI2.DeviceDesc = "RocketPort-PCI 2 Port, PCI-BUS"
ROCKETPTPCI4.DeviceDesc = "RocketPort-PCI 4 Port, PCI-BUS"
ROCKETPTPCI8.DeviceDesc = "RocketPort-PCI 8 Port, PCI-BUS"
ROCKETPTPCI16.DeviceDesc = "RocketPort-PCI 16 Port, PCI-BUS"
ROCKETPTPCI32.DeviceDesc = "RocketPort-PCI 32 Port, PCI-BUS"

ROCKETMDPCI6.DeviceDesc = "RocketModem II 6 Port, PCI-BUS"
ROCKETMDPCI4.DeviceDesc = "RocketModem II 4 Port, PCI-BUS"

RocketPort.Service.DispName  = "Comtrol RocketPort"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\comtrol\rocket\infs\usa\mdmctm1.txt ===
[Strings]
; See INF documentation for additional information on this section.
; This section lists strings that are used by the Modems control panel applet
; and the Install New Modem wizard.
; For example, Modem1 will appear as "Comtrol V.34 RocketModem".

Comtrol = "Comtrol"
Modem1 = "Comtrol RocketModem or VS2000, V.34"
Modem2 = "Comtrol RocketModem or VS2000, V.90"
Modem3 = "Rockwell 56000 External Modem PnP"
Modem3pnp = "Comtrol RocketModemII V.90"
Modem4 = "Comtrol RocketModem i V.90"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\cyclades\y\cyycoins\cshelp.txt ===
.topic IDH_CYYCOINS_NOHELP
No help

.topic IDH_CYYCOINS_NUM_PORTS
Number of Cyclom-Y Ports found in this Cyclom-Y adapter.

.topic IDH_CYYCOINS_START_COM
Changes the port numbers assigned to the Cyclom-Y ports. Start COM is assigned to Cyclom-Y Port 1, the next available port is assigned to Cyclom-Y Port 2, and so on.

.topic IDH_CYYCOINS_RESTORE_DEFAULTS
Restores the Start COM to the original value.

.topic IDH_CYYCOINS_BUS_TYPE
PCI or ISA.

.topic IDH_CYYCOINS_CONFIGURATION
Cyclom-Y PCI boards can be configured to use memory range above 1MB or below 1MB.

.topic IDH_CYYCOINS_MODEL
Cyclom-Y model.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\cyclades\z\cyzcoins\cshelp.txt ===
.topic IDH_CYZCOINS_NOHELP
No help

.topic IDH_CYZCOINS_NUM_PORTS
Number of Cyclades-Z Ports found in this Cyclades-Z adapter.

.topic IDH_CYZCOINS_START_COM
Changes the port numbers assigned to the Cyclades-Z ports. Start COM is assigned to Cyclades-Z Port 1, the next available port is assigned to Cyclades-Z Port 2, and so on.

.topic IDH_CYZCOINS_RESTORE_DEFAULTS
Restores the Start COM to the original value.

.topic IDH_CYZCOINS_PORTSET_ADV_NUMBER
Changes the port number that is assigned to the port. For example, if you have three modems connected to COM1, COM2 and COM3, and you want them all to use COM3, you can change this setting to COM3 for ports COM1 and COM2. This will force each modem to use COM3.

.topic IDH_CYZCOINS_PORTSET_ADV_DEFAULTS
Restores the advanced settings to the default settings.

.topic IDH_CYZCOINS_PORTSET_ADV_PPP_AWARE
Makes the driver aware of the PPP protocol, improving performance in RRAS.

.topic IDH_CYZCOINS_PORTSET_ADV_WRITE_COMPLETE
For better performance, this option is not enabled in the default configuration. Enable this option if you want the driver to complete the Write operation only after the firmware transmission buffer is empty.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\digi\async\usa\dgaport.txt ===
[Strings]
Digi_Int="Digi International"
port0="Digi Port 0"
port1="Digi Port 1"
port2="Digi Port 2"
port3="Digi Port 3"
port4="Digi Port 4"
port5="Digi Port 5"
port6="Digi Port 6"
port7="Digi Port 7"
port8="Digi Port 8"
port9="Digi Port 9"
port10="Digi Port 10"
port11="Digi Port 11"
port12="Digi Port 12"
port13="Digi Port 13"
port14="Digi Port 14"
port15="Digi Port 15"
port16="Digi Port 16"
port17="Digi Port 17"
port18="Digi Port 18"
port19="Digi Port 19"
port20="Digi Port 20"
port21="Digi Port 21"
port22="Digi Port 22"
port23="Digi Port 23"
port24="Digi Port 24"
port25="Digi Port 25"
port26="Digi Port 26"
port27="Digi Port 27"
port28="Digi Port 28"
port29="Digi Port 29"
port30="Digi Port 30"
port31="Digi Port 31"
port32="Digi Port 32"
port33="Digi Port 33"
port34="Digi Port 34"
port35="Digi Port 35"
port36="Digi Port 36"
port37="Digi Port 37"
port38="Digi Port 38"
port39="Digi Port 39"
port40="Digi Port 40"
port41="Digi Port 41"
port42="Digi Port 42"
port43="Digi Port 43"
port44="Digi Port 44"
port45="Digi Port 45"
port46="Digi Port 46"
port47="Digi Port 47"
port48="Digi Port 48"
port49="Digi Port 49"
port50="Digi Port 50"
port51="Digi Port 51"
port52="Digi Port 52"
port53="Digi Port 53"
port54="Digi Port 54"
port55="Digi Port 55"
port56="Digi Port 56"
port57="Digi Port 57"
port58="Digi Port 58"
port59="Digi Port 59"
port60="Digi Port 60"
port61="Digi Port 61"
port62="Digi Port 62"
port63="Digi Port 63"
port64="Digi Port 64"
port65="Digi Port 65"
port66="Digi Port 66"
port67="Digi Port 67"
port68="Digi Port 68"
port69="Digi Port 69"
port70="Digi Port 70"
port71="Digi Port 71"
port72="Digi Port 72"
port73="Digi Port 73"
port74="Digi Port 74"
port75="Digi Port 75"
port76="Digi Port 76"
port77="Digi Port 77"
port78="Digi Port 78"
port79="Digi Port 79"
port80="Digi Port 80"
port81="Digi Port 81"
port82="Digi Port 82"
port83="Digi Port 83"
port84="Digi Port 84"
port85="Digi Port 85"
port86="Digi Port 86"
port87="Digi Port 87"
port88="Digi Port 88"
port89="Digi Port 89"
port90="Digi Port 90"
port91="Digi Port 91"
port92="Digi Port 92"
port93="Digi Port 93"
port94="Digi Port 94"
port95="Digi Port 95"
port96="Digi Port 96"
port97="Digi Port 97"
port98="Digi Port 98"
port99="Digi Port 99"
port100="Digi Port 100"
port101="Digi Port 101"
port102="Digi Port 102"
port103="Digi Port 103"
port104="Digi Port 104"
port105="Digi Port 105"
port106="Digi Port 106"
port107="Digi Port 107"
port108="Digi Port 108"
port109="Digi Port 109"
port110="Digi Port 110"
port111="Digi Port 111"
port112="Digi Port 112"
port113="Digi Port 113"
port114="Digi Port 114"
port115="Digi Port 115"
port116="Digi Port 116"
port117="Digi Port 117"
port118="Digi Port 118"
port119="Digi Port 119"
port120="Digi Port 120"
port121="Digi Port 121"
port122="Digi Port 122"
port123="Digi Port 123"
port124="Digi Port 124"
port125="Digi Port 125"
port126="Digi Port 126"
port127="Digi Port 127"
port128="Digi Port 128"
port129="Digi Port 129"
port130="Digi Port 130"
port131="Digi Port 131"
port132="Digi Port 132"
port133="Digi Port 133"
port134="Digi Port 134"
port135="Digi Port 135"
port136="Digi Port 136"
port137="Digi Port 137"
port138="Digi Port 138"
port139="Digi Port 139"
port140="Digi Port 140"
port141="Digi Port 141"
port142="Digi Port 142"
port143="Digi Port 143"
port144="Digi Port 144"
port145="Digi Port 145"
port146="Digi Port 146"
port147="Digi Port 147"
port148="Digi Port 148"
port149="Digi Port 149"
port150="Digi Port 150"
port151="Digi Port 151"
port152="Digi Port 152"
port153="Digi Port 153"
port154="Digi Port 154"
port155="Digi Port 155"
port156="Digi Port 156"
port157="Digi Port 157"
port158="Digi Port 158"
port159="Digi Port 159"
port160="Digi Port 160"
port161="Digi Port 161"
port162="Digi Port 162"
port163="Digi Port 163"
port164="Digi Port 164"
port165="Digi Port 165"
port166="Digi Port 166"
port167="Digi Port 167"
port168="Digi Port 168"
port169="Digi Port 169"
port170="Digi Port 170"
port171="Digi Port 171"
port172="Digi Port 172"
port173="Digi Port 173"
port174="Digi Port 174"
port175="Digi Port 175"
port176="Digi Port 176"
port177="Digi Port 177"
port178="Digi Port 178"
port179="Digi Port 179"
port180="Digi Port 180"
port181="Digi Port 181"
port182="Digi Port 182"
port183="Digi Port 183"
port184="Digi Port 184"
port185="Digi Port 185"
port186="Digi Port 186"
port187="Digi Port 187"
port188="Digi Port 188"
port189="Digi Port 189"
port190="Digi Port 190"
port191="Digi Port 191"
port192="Digi Port 192"
port193="Digi Port 193"
port194="Digi Port 194"
port195="Digi Port 195"
port196="Digi Port 196"
port197="Digi Port 197"
port198="Digi Port 198"
port199="Digi Port 199"
port200="Digi Port 200"
port201="Digi Port 201"
port202="Digi Port 202"
port203="Digi Port 203"
port204="Digi Port 204"
port205="Digi Port 205"
port206="Digi Port 206"
port207="Digi Port 207"
port208="Digi Port 208"
port209="Digi Port 209"
port210="Digi Port 210"
port211="Digi Port 211"
port212="Digi Port 212"
port213="Digi Port 213"
port214="Digi Port 214"
port215="Digi Port 215"
port216="Digi Port 216"
port217="Digi Port 217"
port218="Digi Port 218"
port219="Digi Port 219"
port220="Digi Port 220"
port221="Digi Port 221"
port222="Digi Port 222"
port223="Digi Port 223"
Digifep5.ServiceDesc="Digi FEP 5 Driver"

;Handy macro substitutions (non-localizable)
SPSVCINST_ASSOCSERVICE = 0x00000002
;; Driver start code
SERVICE_DEMAND_START   = 3  ;; Driver started on demand by the Service Control Manager.

;; Error control level
SERVICE_ERROR_NORMAL   = 1

SERVICE_KERNEL_DRIVER       = 0x1

REG_EXPAND_SZ          = 0x00020000
REG_DWORD              = 0x00010001
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\digi\async-nm\nmplcfil.txt ===
; ----------------------------------------------------------------------
; This file is used for binplacing netmap.inf file in this directory.
;
; We need to use this file because there are multiple files named netmap.inf
; and thus we cannot list this file in the main placefil.txt
; ----------------------------------------------------------------------

netmap.inf	winnt32\winntupg\oem\digi\async
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\digi\async\usa\mdmdigi.txt ===
[Strings]
DIGI = "Digi International"
XemModem = "Digi Modem em"
T1Modem = "T1 modem module"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\digi\realport\usa\mdmdigi.txt ===
[Strings]
DIGI = "Digi International"
XemModem = "Digi Modem em"
T1Modem = "T1 modem module"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\digi\realport\usa\digirprt.txt ===
[Strings]
Digi_Int="Digi International"
port="Digi RealPort"
Digirps.ServiceDesc="Digi RealPort Driver"

;Handy macro substitutions (non-localizable)
;; Driver start code
SERVICE_BOOT_START     = 0  ;; Driver started by the operating system loader.
SERVICE_SYSTEM_START   = 1  ;; Driver started during OS initialization.
SERVICE_AUTO_START     = 2  ;; Driver started by the Service Control Manager during system startup.
SERVICE_DEMAND_START   = 3  ;; Driver started on demand by the Service Control Manager.
SERVICE_DISABLED       = 4  ;; Indicates a driver that cannot be started.

;; Error control level
SERVICE_ERROR_CRITICAL = 3
SERVICE_ERROR_SEVERE   = 2
SERVICE_ERROR_NORMAL   = 1
SERVICE_ERROR_IGNORE   = 0

SERVICE_KERNEL_DRIVER       = 0x1
SERVICE_FILE_SYSTEM_DRIVER  = 0x2
SERVICE_ADAPTER             = 0x4

SPSVCINST_ASSOCSERVICE = 0x00000002

REG_EXPAND_SZ          = 0x00020000
REG_DWORD              = 0x00010001
REG_MULTI_SZ           = 0x00010000
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\digi\async\usa\dgasync.txt ===
;****************************************************************************************************
; Localizable Strings
;****************************************************************************************************
[Strings]
Digi_Int="Digi International"
V_IBM="IBM"

Digifep5.ServiceDesc="Digi FEP 5 Driver"

Dgapci.ServiceDesc="Digi Dgapci Hardware Driver"

DigiPCI8r.DeviceDesc="Digi AccelePort 8r EIA-232 PCI"
DigiPCI4r.DeviceDesc="Digi AccelePort 4r EIA-232 PCI"
DigiPCI8r422.DeviceDesc="Digi AccelePort 8r EIA-422 PCI"
DigiPCI4r422.DeviceDesc="Digi AccelePort 4r EIA-422 PCI"

DigiPCI8r920.DeviceDesc="Digi AccelePort 8r 920 PCI"
DigiPCI4r920.DeviceDesc="Digi AccelePort 4r 920 PCI"
DigiPCI2r920.DeviceDesc="Digi AccelePort 2r 920 PCI"


DigiPCIXr.DeviceDesc="Digi AccelePort Xr EIA-232 PCI"
DigiPCIXr422.DeviceDesc="Digi AccelePort Xr EIA-422 PCI"

DigiPCIXem.DeviceDesc="Digi AccelePort Xem-PCI"
DigiPCICX.DeviceDesc="Digi AccelePort C/X-PCI"
DigiPCIEPC.DeviceDesc="Digi AccelePort EPC/X-PCI"

IBMPCI8r.DeviceDesc="IBM 8-Port EIA-232/RS-422A (PCI)"
IBMPCICX.DeviceDesc="IBM 128-Port Async (PCI)"
;*******************************************
;Handy macro substitutions (non-localizable)
SPSVCINST_ASSOCSERVICE = 0x00000002
;; Driver start code
;;SERVICE_BOOT_START     = 0  ;; Driver started by the operating system loader.
;;SERVICE_SYSTEM_START   = 1  ;; Driver started during OS initialization.
;;SERVICE_AUTO_START     = 2  ;; Driver started by the Service Control Manager during system startup.
SERVICE_DEMAND_START   = 3  ;; Driver started on demand by the Service Control Manager.
;;SERVICE_DISABLED       = 4  ;; Indicates a driver that cannot be started.

;; Error control level
;;SERVICE_ERROR_CRITICAL = 3
;;SERVICE_ERROR_SEVERE   = 2
SERVICE_ERROR_NORMAL   = 1
;;SERVICE_ERROR_IGNORE   = 0

SERVICE_KERNEL_DRIVER       = 0x1
;;SERVICE_FILE_SYSTEM_DRIVER  = 0x2
;;SERVICE_ADAPTER             = 0x4

REG_EXPAND_SZ          = 0x00020000
REG_DWORD              = 0x00010001
REG_MULTI_SZ           = 0x00010000

;;BUSTYPE_ISA            = 1
;;BUSTYPE_EISA           = 2
;;BUSTYPE_MCA            = 3
BUSTYPE_PCI            = 5

;;DIGI_PC8E              = 0
;;DIGI_PC8I              = 1
DIGI_PCXEM             = 2
DIGI_CX                = 3
;;DIGI_2PORT             = 4
;;DIGI_PC4E              = 5
;;DIGI_4PORT             = 6
;;DIGI_8PORT             = 7
;;DIGI_PC16E             = 8
;;DIGI_PC16I             = 9
;;DIGI_MC4I              = 10
DIGI_EPC               = 11
;;IBM_8PORT              = 13
DIGI_8R                = 14
DIGI_4R                = 15
DIGI_8R920             = 16
DIGI_4R920             = 17
DIGI_XR                = 18
;;DIGI_AVANSTAR          = 19
IBM_8PORT_232422           = 20
IBM_CX                             = 21
DIGI_2R920             = 22
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\digi\realport-nm\nmplcfil.txt ===
; ----------------------------------------------------------------------
; This file is used for binplacing netmap.inf file in this directory.
;
; We need to use this file because there are multiple files named netmap.inf
; and thus we cannot list this file in the main placefil.txt
; ----------------------------------------------------------------------

netmap.inf	winnt32\winntupg\oem\digi\realport
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\digi\realport\usa\digirp.txt ===
;****************************************************************************************************
; Localizable Strings
;****************************************************************************************************
[Strings]
MS  = "Microsoft"
MultiPortSerialClassName = "Multi-port Serial Adapters"
Digi_Int="Digi International"

DigiSourceName="Digi Installation Disk"
Digirps.ServiceDesc="Digi PortServer Driver"
DigiRP.DeviceDesc="Digi PortServer"

;*******************************************
;Handy macro substitutions (non-localizable)
;; Driver start code
;SERVICE_BOOT_START     = 0  ;; Driver started by the operating system loader.
;SERVICE_SYSTEM_START   = 1  ;; Driver started during OS initialization.
;SERVICE_AUTO_START     = 2  ;; Driver started by the Service Control Manager during system startup.
SERVICE_DEMAND_START   = 3  ;; Driver started on demand by the Service Control Manager.
;SERVICE_DISABLED       = 4  ;; Indicates a driver that cannot be started.
;; Error control level
;SERVICE_ERROR_CRITICAL = 3
;SERVICE_ERROR_SEVERE   = 2
SERVICE_ERROR_NORMAL   = 1
;SERVICE_ERROR_IGNORE   = 0
SERVICE_KERNEL_DRIVER       = 0x1
;SERVICE_FILE_SYSTEM_DRIVER  = 0x2
;SERVICE_ADAPTER             = 0x4
SPSVCINST_ASSOCSERVICE = 0x00000002
REG_EXPAND_SZ          = 0x00020000
REG_DWORD              = 0x00010001
;REG_MULTI_SZ           = 0x00010000
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\eqnupg\nmplcfil.txt ===
; ----------------------------------------------------------------------
; This file is used for binplacing netmap.inf file in this directory.
;
; We need to use this file because there are multiple files named netmap.inf
; and thus we cannot list this file in the main placefil.txt
; ----------------------------------------------------------------------

netmap.inf	winnt32\winntupg\oem\eqn
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\equinox\i386\equinox.txt ===
eqn.sys -      Equinox NT 5.0 Driver 9/23/98 3.35m.5.0.T7

EQNLOGR.EXE  - 	Diagnostic Utility, Equinox Logger is a windows based 
		application which captures messages 
		from the SST driver and writes them to a disk file.
		Controls are provided to archive or discard log files.

eqntrace.exe -  Diagnostic Utility, Equinox trace is a cmd based application
		which enables tracing on a SST port.

     Usage:  eqntrace n {/on | /off} [/mp |/all] 
     where   "n" is COMn for desired device
             /on  : turns on tracing
             /off : turns off tracing
             /mp:   turns on Modem Pool tracing
             /all : turns on All tracing, default for non Modem Pool Ports

EQNLOOP.EXE  - Diagnostic Utility, Equinox Loopback is a windows based 
	       application which exercises a COMPort.
	       It verifies correct operation of the SST driver and
	       hardware under  stress conditions.

EQNCLASS.DLL   - Equinox Co-installer

EVPNT50i.hlp   - Equinox help for Equinox Co-installer

ASYNCEQN.INF   - Equinox .inf file, might need to be changed before
		 added to build.


EQNdiag.exe    - Diagnostic Utility, Equinox Channel Diagnostic utility is 
		 a windows based application designed to provide additional
                 diagnostic information about Equinox ports.
		 "eqndiag" can be used while a comm application is using 
		 the port to report whether the port is open or closed,
		 control signal states, current mode settings,


MULTIPRT.inf     - Sample MULTIPRT.INF to add Equinox CoInstaller to 
         	 the MultiPortSerial class.

--------------- NT 4.0 to NT 5.0 UPGRADE FILES -----------------
     
     EQNUPGRD.DLL - Equinox NT 4.0 to NT 5.0 Upgrade DLL
                    For NT 5.0 CDROM I386\WINNTUPG\OEM\EQN directory
     
     NETMAP.INF   - Equinox NT 4.0 to NT 5.0 Upgrade INF
                    For NT 5.0 CDROM I386\WINNTUPG\OEM\EQN directory
     
     * NOTE:  A line for oem\eqn directory must be added to section 
              [OemNetUpgradeDirs] of file I386\WINNTUPG\NETUPG.INF. 
     
     
--------------- WIN9x to NT 5.0 UPGRADE FILES -----------------
     
     MIGRATE.DLL  - Equinox WIN9x to NT5.0 Migration DLL
                    For NT 5.0 CDROM I386\WIN9XMIG directory
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\spx\mps\bindrop\usa\spx.txt ===
;*******************************************************************************************
; Strings
;*******************************************************************************************

[Strings]
Specialix_Int		= "Specialix International Ltd."
Perle_Systems		= "Perle Systems Ltd."
Chase_Research		= "Chase Research Plc."

;-------------------------------------------------------------------------------------------
; SX+, SX, SI/XIO 
;
SXPLUS_PCI.DeviceDesc 	= "Specialix SX+ PCI Adapter"
SXPLUS_PCI_UINumDesc 	= "Port %1!u! on SX+ PCI Adapter"

SX_PCI.DeviceDesc	= "Specialix SX PCI Adapter"
SX_PCI_UINumDesc 	= "Port %1!u! on SX PCI Adapter"

SX.ServiceName		= "SX"
SX.Service.DispName 	= "Specialix SX Multi-port Serial Driver"

;-------------------------------------------------------------------------------------------
; I/O8+
;
IO8_PCI.DeviceDesc	= "Specialix I/O8+ PCI Adapter"
IO8_PCI_UINumDesc 	= "Port %1!u! on I/O8+ PCI Adapter"

IO8.ServiceName		= "IO8"
IO8.Service.DispName 	= "Specialix I/O8+ Multi-port Serial Driver"

;-------------------------------------------------------------------------------------------
; SPEED4, SPEED4+
;
SPD4_PCI.DeviceDesc	= "Specialix SPEED4 PCI Adapter"
SPD4LB_PCI.DeviceDesc	= "Specialix SPEED4 PCI Adapter Local Bus"

SPD4P_PCI.DeviceDesc 	= "Specialix SPEED4+ PCI Adapter"
SPD4PLB_PCI.DeviceDesc 	= "Specialix SPEED4+ PCI Adapter Local Bus"

SPEED_PCI_UINumDesc 	= "Port %1!u! on SPEED PCI Adapter"
SPEEDPLUS_PCI_UINumDesc = "Port %1!u! on SPEED+ PCI Adapter"

SPEED.ServiceName	= "SPEED"
SPEED.Service.DispName 	= "Specialix SPEED Multi-port Serial Driver"


;-------------------------------------------------------------------------------------------
; FAST
;
FAST4_PCI.DeviceDesc 		= "Chase PCI-Fast 4 Port Adapter"
FAST8_PCI.DeviceDesc 		= "Chase PCI-Fast 8 Port Adapter"
FAST16_PCI.DeviceDesc 		= "Chase PCI-Fast 16 Port Adapter"
FAST16FMC_PCI.DeviceDesc 	= "Chase PCI-Fast 16 FMC Port Adapter"
FAST_PCI_UINumDesc 		= "Port %1!u! on PCI-FAST Adapter"

;-------------------------------------------------------------------------------------------
; RAS
;
RAS4_PCI.DeviceDesc		= "Chase PCI-RAS 4 Multi-modem Adapter"
RAS8_PCI.DeviceDesc		= "Chase PCI-RAS 8 Multi-modem Adapter"
RAS_PCI_UINumDesc 		= "Port %1!u! on PCI-RAS Adapter"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\spx\mps\bindrop\usa\spxports.txt ===
;*******************************************************************************************
; Strings
;*******************************************************************************************
[Strings]
Perle_Systems  			= "Perle Systems Ltd."
Specialix_Int			= "Specialix International Ltd."
Chase_Research			= "Chase Research Plc."

;-------------------------------------------------------------------------------------------
; SX Ports
;
SX_SXDC8&DX.DeviceDesc 		= "Specialix SXDC8 Serial Port"	
SX_SXDC8&RJX.DeviceDesc 	= "Specialix SXDC8 Serial Port"	
SX_SXDC8&PXP.DeviceDesc 	= "Specialix SXDC8 Parallel Port"	
SX_SXDC8&PXR.DeviceDesc 	= "Specialix SXDC8 Serial Port"	
SX_SXDC8&PXS.DeviceDesc 	= "Specialix SXDC8 Serial Port"		
SX_SXDC8&MX.DeviceDesc 		= "Specialix SXDC8 Serial Port"		
SX_SXDC8&422DX.DeviceDesc 	= "Specialix SXDC8 Serial Port"
SX_SXDC8.DeviceDesc 		= "Specialix SXDC8 Generic Serial Port"		

SX_MTA8&DM.DeviceDesc 		= "Specialix MTA8 Serial Port"			
SX_MTA8&RJ.DeviceDesc 		= "Specialix MTA8 Serial Port"			
SX_MTA8&RJX.DeviceDesc 		= "Specialix MTA8 Serial Port"		
SX_MTA8&O.DeviceDesc 		= "Specialix MTA8 Serial Port"	
SX_MTA8&PP.DeviceDesc 		= "Specialix MTA8 Parallel Port"	 
SX_MTA8&PR.DeviceDesc 		= "Specialix MTA8 Serial Port" 
SX_MTA8&422.DeviceDesc 		= "Specialix MTA8 Serial  Port"		 
SX_MTA8.DeviceDesc 		= "Specialix MTA8 Generic Serial Port"	 

SX_TA8.DeviceDesc 		= "Specialix TA8 Serial Port" 
SX_TA4.DeviceDesc	 	= "Specialix TA4 Serial Port" 
SX_TA.DeviceDesc 		= "Specialix TA Generic Serial Port" 



;-------------------------------------------------------------------------------------------
; I/O8+ Ports
;
IO8_Port.DeviceDesc		= "Specialix I/O8+ Serial Port"

;-------------------------------------------------------------------------------------------
; SPEED Ports
;
SPEED4_Port.DeviceDesc		= "Specialix SPEED4 Serial Port"
SPEED4P_Port.DeviceDesc		= "Specialix SPEED4+ Serial Port"


;-------------------------------------------------------------------------------------------
; FAST Ports
;
FAST_Port.DeviceDesc		= "Chase Fast Serial Port"

;-------------------------------------------------------------------------------------------
; RAS Ports
;
RAS_Port.DeviceDesc		= "Chase RAS Port"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\serial\mps\spx\mps-upg\nmplcfil.txt ===
; ----------------------------------------------------------------------
; This file is used for binplacing netmap.inf file in this directory.
;
; We need to use this file because there are multiple files named netmap.inf
; and thus we cannot list this file in the main placefil.txt
; ----------------------------------------------------------------------

netmap.inf	winnt32\winntupg\oem\spx\mps
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\smartcrd\rnb3531\readme.txt ===
This driver was pulled from the active build because the hardware never shipped.
It should NOT be in the dirs file, but it will be kept for a short amount of
time in case there are any problems.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\class\filters\storagefilter\regini.ini ===
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\StorFilt
    Type = REG_DWORD 0x00000001
    Start = REG_DWORD 0x00000001
    ErrorControl = REG_DWORD 0x00000001
    Tag = REG_DWORD 0x00000002
    ImagePath = REG_EXPAND_SZ System32\DRIVERS\storfilt.sys
    DisplayName = Storage Filter Driver -- MICROSOFT INTERNAL USE ONLY
    Group = Pnp Filter
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\drivearb\readme.txt ===
Drive Arbiter
  -------------

  Arbitrates ownership of a serially shared drive
  Two functions:
      1.  arbitration CLIENT for the local machine
      2.  arbitration SERVICE for multiple applications on the same machine
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\doc\storage class architecture.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation Blackcomb TitleBlackcomb ervinp Normal ervinp Microsoft Word 10.0Blackcomb Storage Class Architecture Proposal ervinp Version 0.22 5/16/2001 Background Our current class-layer driver model is confusing and not well exposed to the vendor community.  ClassPnP implements PnP, power, configuration, and I/O; and it exposes interfaces by which class drivers (e.g. disk, cdrom, 4mmdat, sfloppy, third party) can tie in to all of the above.  Almost everyone agrees that the current model does not make a class driver s responsibilities clear.  Because it shares an exposed context with the class drivers and exposes so many interfaces, ClassPnP s maintenance and evolution is heavily stifled by legacy issues. We have not made any attempt to clear up the confusion in the DDK.  We have simply dropped in the source code for ClassPnP and our class drivers.  There is almost no documentation available. Goals This proposal attempts to deal with these problems so as to simplify the class layer generally, isolate our future class driver from legacy issues, and have a clear message for third party developers.  The goals are as follows: Two tier solution Simple minidriver model for most Full class driver for the rest (lower filter drivers still ok) Desynchronized, full duplex by default Optionally serializable Clean interfaces Small, simple set of interfaces No shared contexts Clear responsibilities for each component looping  calls Good samples and documentation Pausable I/O I/O pausable by either StorCls or minidriver Fully stateful Class layer maintains contextualized state for all outstanding I/O Debugability Cancelability No memory thrashing at runtime Helps to isolate storage from memory corruptions Isochronous capability Includes exclusive use of LUN by a process TBD:  How is this exposed? Portable storage stack Can mount storage stack on other driver stacks without undue perf hit Support for value-add Storage Class Minidriver Model Allow for a diverse set of simple solutions Simple prepass/postpass model for configuration, I/O, and query/control minidriver can also originate I/O independently Not a miniport model retain power/portability of IRPs Simple start/stop interface  no PnP/Power complexity no wake capability (e.g. on media insertion) Minidriver can expose device interface on class FDO optional  shingle  for exposing value-add to user level Minimal boilerplate simplest minidriver < 50 lines of code Publish clear interface document There are many storage devices with simple special needs that can be encapsulated in a minidriver.  Many vendors only need to override one or two requests to support their value-add.  However, those simple needs are quite varied.  Therefore, there will be no attempt to anticipate the classes of special needs of storage minidrivers and capture them in the interface.  We will simply allow the minidriver a prepass and postpass on all configuration and I/O requests.  The only restriction is that the device can have no special PnP or Power needs; if it does, the vendor must implement either a full blown class-layer driver or a filter driver. Other special needs (e.g. serialization, caching, hot-unplug) will be communicated via initialization parameters. For the purposes of this document, the new class layer minidriver wrapper will be called StorCls.  StorCls is a wrapper for class-layer storage minidrivers, roughly equivalent to the NDIS wrapper for network miniports.  However, it incorporates some lessons learned from the evolution of Remote NDIS, which was negatively impacted by NDIS  non-portable packet model.  So StorCls will not invent a new format for configuration data or I/O requests.  A minidriver will receive configuration data and override requests using the same prepass/postpass mechanism.  The minidriver will have to process the IRPs and SRBs for the requests that it overrides. StorCls  high-level behavior will be as follows: For configuration and I/O requests: implement default behavior and allow override by the minidriver allow minidriver configuration of that default behavior via initialization parameters (e.g. for serialization) For query/control IOCTLs (WMI, etc) and other requests that complete at the class layer Implement default behavior and allow override by the minidriver For PnP and Power requests: implement exclusively with no override possible by minidriver default handling may be configurable via initialization parameters expose only start/stop paradigm to minidriver When a minidriver receives a request, it does not know whether the IRP originated within StorCls or in a higher level driver.  Therefore, the minidriver does not complete IRPs.  It must have a completion routine for all downward IRPs and call StorCls  ClassRequestComplete interface to complete them from its level.  This should not be a significant perf hit because in reality it is only a few extra instructions per request.  (TBD:  something will be done to keep SL_PENDING from getting set unnecessarily). Although the minidriver does not see StorCls  FDO, it may create a device interface ( shingle ) on StorCls  FDO for exposing value-add features to the user level.  All it has to do is return a non-zero DeviceInterfaceGuid in its CLASS_MINIDRIVER_CONFIG_PARAMS.  The minidriver will then receive any IOCTLs sent to the shingle via the prepass filter. Partitioning Partitioning logic from disk.sys will be implemented within StorCls. StoreCls interfaces  NTSTATUS ClassRegisterMinidriver( IN PDRIVER_OBJECT DriverObject, IN PCLASS_MINIDRIVER_INTERFACE MinidriverInterface Called from minidriver s DriverEntry.   Minidriver hooks no functions in DriverObject. VOID ClassRequestComplete( IN PVOID ClassDeviceContext, IN PIRP Irp, IN PVOID ClassRequestContext, IN STORCLS_STATUS StorClsStatus Called by minidriver to complete a request for which it previously returned STORCLS_STATUS_PENDING in the ClassRequestPrepass call (see ClassRequestPrepass). ClassDeviceContext  - StorCls  context for the device instance  completed request ClassRequestContext   StorCls  context for the request StorClsStatus  One of the following (see ClassRequestPrepass for explanation): STORCLS_STATUS_COMPLETE STORCLS_STATUS_MODIFIED STORCLS_STATUS_NOT_HANDLED Minidriver interfaces NTSTATUS ClassStartDevice( IN PDEVICE_OBJECT TargetDevice, IN OUT PCLASS_MINIDRIVER_CONFIG_PARAMS ConfigParams, IN PVOID ClassDeviceContext ,  OUT PVOID *MinidriverDeviceContext Called from StorCls  IRP_MJ_START_DEVICE handler after the Start IRP has been sent down the stack and synchronized (so that minidriver can send requests to the started device stack within this call).  The minidriver never sees StorCls  FDO.  It also does not get a region of the FDO s device extension, like some other minidriver models (e.g. HID); the minidriver must allocate its own context. StorCls and the minidriver exchange contexts for the device instance.  They then use the other component s context in all subsequent calls. TargetDevice   top of stack to which the FDO was attached ConfigParams   minidriver returns initialization parameters (e.g. serialization) ClassDeviceContext    StorCls  context for the device instance MinidriverDeviceContext   returns the minidriver s context for the device instance VOID ClassStopDevice(IN PVOID MinidriverDeviceContext); Called by StorCls on a stop or remove.  The minidriver synchronously completes any outstanding minidriver-initiated requests and frees all resources.   Called only at passive IRQL. VOID ClassPauseDevice(IN PVOID MinidriverDeviceContext); Called by StorCls to pause the minidriver.   While paused, the minidriver must queue or complete all outstanding requests.  It does not have to free resources.   Called only at passive IRQL. VOID ClassResumeDevice(IN PVOID MinidriverDeviceContext); Called by StorCls to resume a paused device instance. STORCLS_STATUS ClassRequestPrepass( IN PVOID MinidriverDeviceContext, IN PIRP Irp, IN PVOID ClassRequestContext, OUT PVOID *MinidriverRequestContext MinidriverDeviceContext   minidriver s context for the device instance  the prepared configuration or I/O request ClassRequestContext   StorCls  context for the request MinidriverRequestContext   returns the minidriver s context for this request Return values: STORCLS_STATUS_COMPLETE minidriver has synchronously handled the request and set the result (may be used to block a downward request) STORCLS_ STATUS_MODIFIED The minidriver has modified the request StorCls will send or service the request StorCls will call ClassRequestPostpass when the request completes STORCLS_ STATUS_NOT_HANDLED The minidriver has not modified the request StorCls will send or service the request StorCls will call ClassRequestPostpass when the request completes STORCLS_ STATUS_PENDING minidriver will handle the request and then call ClassRequestComplete minidriver will not allow the IRP to complete above the class layer can also be used to pause I/O; the minidriver queues the request and later calls ClassRequestComplete with one of the preceding status values VOID ClassRequestPostpass( IN PVOID MinidriverDeviceContext, IN PIRP Irp, IN PVOID MinidriverRequestContext Called by StorCls to allow minidriver a postpass on a request for which it previously returned STATUS_NOT_IMPLEMENTED.  StorCls calls this interface before it uses the results within the request   this allows the minidriver to modify the results. MinidriverDeviceContext   minidriver s context for the device instance  the request IRP.  Minidriver may modify the results MinidriverRequestContext   minidriver s context for the request  (returned in ClassRequestPrepass) Header shared by StorCls and minidrivers typedef struct _CLASS_MINIDRIVER_CONFIG_PARAMS { ULONG ClassDriverVersion; // highest version supported by StorCls GUID WrapperInterfaceGuid; ULONG MaxOverlappedRequests; // set to 1 to serialize requests ULONG TestUnitReadyFrequency; // TUR frequency in millisec (or zero for none) GUID DeviceInterfaceGuid; // optional guid for device interface  shingle // TBD:  caching info; hot-unplug info, other } CLASS_MINIDRIVER_CONFIG_PARAMS, *PCLASS_MINIDRIVER_CONFIG_PARAMS; typedef struct _CLASS_MINIDRIVER_INTERFACE { ULONG MinidriverVersion; // highest version supported by minidriver GUID MinidriverInterfaceGuid; NTSTATUS (* ClassStartDevice)( IN PDEVICE_OBJECT TargetDevice, IN OUT PCLASS_MINIDRIVER_CONFIG_PARAMS ConfigParams, IN PVOID ClassDeviceContext ,  OUT PVOID *MinidriverDeviceContext VOID (* ClassStopDevice)(IN PVOID MinidriverDeviceContext); VOID ( *ClassPauseDevice)(IN PVOID MinidriverDeviceContext); VOID ( *ClassResumeDevice)(IN PVOID MinidriverDeviceContext); NTSTATUS ( *ClassRequestPrepass)( IN PVOID MinidriverDeviceContext, IN PIRP Irp, IN PVOID ClassRequestContext, OUT PVOID *MinidriverRequestContext VOID ( *ClassRequestPostpass)( IN PVOID MinidriverDeviceContext, IN PIRP Irp, IN PVOID MinidriverRequestContext } CLASS_MINIDRIVER_INTERFACE, *PCLASS_MINIDRIVER_INTERFACE; typedef enum _STORCLS_STATUS { STORCLS_STATUS_NONE = 0, STORCLS_STATUS_COMPLETE, // minidriver has handled the request STORCLS_STATUS_MODIFIED, // minidriver has modified the request; StorCls handles STORCLS_STATUS_NOT_HANDLED, // StorCls will handle the request STORCLS_STATUS_PENDING, // request is pending } STORCLS_STATUS; Storage Class Driver Model (Full) Based on boilerplate code plus samples Boilerplate is starting point for all Samples are working drivers derived from boilerplate Developers must compile WDM, but usually avoid writing much WDM Lower Filter Drivers No change Backward Compatibility  Keep ClassPnP in the build as legacy for third party class drivers Reimplement cdrom,4mmdat,sfloppy,scsiprnt as StorCls minidrivers much of disk.sys will be within StorCls; rest as minidriver Remove current classpnp,disk,cdrom,etc from the DDK samples Blackcomb Storage  Class Architecture  DATE \@ "M/d/yyyy"  5/16/2001 Microsoft Confidential  PAGE  gde93 gde93 gd7$Y gd7$Y gde93 gde93 gd7$Y gde93 gde93 gds5o gdB8@
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\drivearb\doc\shared storage in blackcomb.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Internal What we re doing for Shared Disks and Changers TitleWhat we re doing for Shared Disks and Changers Ervin Peretz Normal Microsoft Word 9.0b]e>~^2=}pTE )<"\z )NWT~ C[]6+ d@>A~' AeO>B APgAN\ Hwc:~&> >YpoX L#\zy4 =$:v% h^Umm nnk,L QnZ4r'h4 E&FOi< D4A[[Microsoft Visio Drawing VISIO 6.0 Shapes Visio.Drawing.6" WMFC  Arial "System  Arial DRIVEARB.DLL:  Host-level drive arbiter inter-node drive sharing clientd enforces same-node inter-app sharing/exclusionA "System  Arial App:  Acquire  Arial RSM App:T Mountpa  Arial RSM App:T Mountpa  Arial App:  Acquire  Arial RSM:  Acquire tape: inter-app exclusivec! formatted disk: inter-app shared!  Arial Management / Inclusion List / RSM Databasea  Arial User Mode  Arial Kernel Mode  Arial Arbitration/ Broker  Arial - Cluster Service ? - DLM ?:! - Master Agent ?! InfiniBand: wire protocol (TBD)=  Arial Masking:  Arial - SCSI 3: LUN Masking - Other: ClusDisk/ClusTape! - InfiniBand: TBDk!Pages Masters Page-1 Rounded rectangle Dynamic connector _VPID_ALTERNATENAMES _VPID_PREVIEWS _PID_LINKBASEervinpVisio (TM) Drawing HrEm< Arial Wingdz onotype  Symbo 7AOY@; 6Pu`k tKf*2| iW?i?{4 $YkU1 $q$qZ JrKq@obd 2oaoa /'/9/K/]/o/ aB?T?f?x? .e_OqO #_5_G_ Y_k_}_ AoSoeowo QN3L/^/p/ WOiO{O o&o8oJo d-prn-21 \CORP000 ?Letter /*/</N/`/r/ ?&?8?J4 winspo \\red -prn-21\ CORP0002 NPIEEC1?6F:RAW Rectan gle with  variab corner r ounding. s on  pyright  1999 Vis io Corpo ration.   All R"s  reservedo. _Sba.chm !#22433 #^o.:B\ <BC~6e ``rtR Adjust b!ner Rou nding onnector This c onnector  automat ically r outes be tween th e shap Vis_SE.c hm!#20)@ `7Cop yright 1 Corporat ion.  Al l ;Bs res erved. ?.g;2 ?F-;( Connecto "(G.#2 EARB.DLL :  Host- level dr ive arbi -node# haring c lient1 forces s /exclus euvvM&* quire M "#Mount _'_9_^  o2oDoVo G?Y?d Manageme nt / Inc lusion L baseG O0OBO _%_7_I_[_mZ^q gkycAcq : inter- app excl usive rmatted  disku '@z3< ,/>/P/b/t/ fuwA} O`_@OROdOvO _*_<_N_ o'o9o Ko]ooo %cOuO  Mode ///A/ S/e/w/ DvY?k?}? ?G_Y_k_1O [Kerne ?oOoao 49:1D9PN XArbi tration/ Broker  Clust ervice ?n Agent1 finiBand : wire p rotocol ?(TBD) ?t/,? I 3: LUN B- Othe Disk/ tEh57 Guide TheDoc Page-1 ure Form Visio 90 Connector Visio 00 Visio 01 Visio 02 Visio 03 Visio 10 Visio 11 Visio 12 Visio 13 Visio 20 Visio 21 Visio 22 Visio 23 Visio 50 Visio 51 Visio 52 Visio 53 Visio 70 Visio 80 Basic Basic Shadow ded rect?angle ded rect angle.3 ded rect angle.5 ded rect angle.6 mic conn?ector ded rect angle.2 ded rect angle.7 ded rect angle.4 mic conn ector.18 mic conn ector.19 TOrE: ,]WsE \`sE 9MEoS@ Windows  Shared Storage In Blackcomb Rev 0.51 (Proposal) Ervin Peretz Oct 26, 2000 Introduction This is a planning doc aimed at syncing up the various groups doing work for storage sharing on Blackcomb.  We have a number of dependencies on components whose feature set is as yet undetermined and architectural decisions that haven t been made yet.  This doc will walk through those contingencies and present our proposal. This proposal only covers block devices such as fixed disks, tapes, and disk/tape libraries.  SMB and other NAS devices are discussed briefly under Intelligent Storage but are otherwise not covered. Problem Whistler does not include support for shared storage, e.g. a SCSI disk or media library simultaneously enumerated as a peripheral by multiple machines, and used by multiple independent applications running on those multiple machines.  This is a hole in our current datacenter solution, as load-balanced configurations often require a single shared view of storage.  Also, RSM needs sharing support for media libraries, which are not replicatable. Goals Implement an arbiter service for Blackcomb which is: an arbitration client on behalf of the machine an arbitration service for applications on the same machine Integrate this service into RSM and Blackcomb fixed-disk sharing. Support:   SCSI  Fibre Channel InfiniBand 1394  ? Who/What/When The RSM team will deliver the arbiter by as a general service by Q1 2001.  Storage should consider using the arbiter for fixed-disk sharing.  Other groups may consider using the arbiter for other shared devices that require inter-node exclusion and inter-app sharing. Landscape There is a large landscape of solutions for sharing block storage devices amongst multiple hosts.  We need to thin down our targeted new feature set pretty quickly in our Blackcomb planning.  The variables include device type, bus, connection type, and system configuration. The devices themselves can first be bifurcated as fixed-disk vs. libraries.  Fixed disks may be formatted or (in some cases) unformatted or formatted with an application-specific FS.  Libraries may hold tape or disk media, and library disks may or may not be formatted with a supported FS.  Libraries are exposed as a changer device that controls a set of media; the changer may have one or more drives in which to mount selected media. The supported buses are, at a minimum:  SCSI, Fibre Channel (FC), and InfiniBand (IB).  SCSI is a special case because it does not support peer communication between nodes, thus requiring a separate communication channel for arbitration. A shared device may be connected to multiple nodes on a single fabric (e.g. FC, IB) or may enumerate on a separate bus connected to each host (e.g. SCSI).  The latter case is problematic because there is no common bus address for the device, requiring a serial id to identify it. Finally, the system configuration may or may not be a cluster.  A specific goal for RSM is to allow for library sharing in standard Server independent of clustering (clustering requires Advanced Server). Sharing Paradigms To start with, there is no plan to provide generic storage sharing in Blackcomb under the existing FS API.  Firstly, the local FS caches a great deal of disk state, which prevents a transparent disk arbitration scheme at the driver level.  Secondly, applications themselves may assume consistency of files under their control.  We are not implementing a clustering FS, and there will be no attempt to mask the  shared-ness  of general storage from apps (the only possible exception is shared fixed disks formatted as Read-Only NTFS). MSCS Clustering for Blackcomb provides resource group migration support.  Its purpose is to be a failover mechanism that re-assigns resources of a crashed node.  There was some consideration given to applying the underpinnings of resource group migration to runtime device sharing on a cluster bus.  Though this is possible, a brokering service does not exist and there are no clear plans in this direction from the MSCS group.  Any brokering/arbitration service that is added to their evolving Blackcomb plan may supplant components listed here. There is a provisional plan to create a Read-Only NTFS format for shared disks that would allow concurrent access by multiple file systems; but this is speculative.  Aside from that, there will be no concurrent access to a logical unit of storage by multiple nodes.  The devices that qualify for sharing are those that can be restored to a known or neutral state that does not confuse other nodes across a re-assignment of the device.  Tape/disk changers qualify because they have a neutral unmounted state.  Shared fixed disks qualify only by altering the usage pattern by apps; apps must explicitly acquire and release a shared fixed disk. Sharing Environments The high-end storage sharing configuration will be an MSCS cluster. Aside from well-funded enterprise datacenters, there are also a large number of midrange shops that may not have the resources or expertise to maintain a cluster, but may have extensive libraries of data that must be shared.  For these  extra-cluster  configurations, we will provide simple storage-sharing support, possibly with failover for the master agent, but without the other advantages of a cluster.  We wish this support to be included in standard Server, whereas clustering is supported only in the Advanced and DataCenter Servers. At the bottom end, homes and offices are well served by the existing support for hosted sharing, which is not addressed here. General Requirements There is a large matrix of device classes and bus types, each with a different set of features, covered here.  Essentially, what is required for storage sharing is a data bus connecting nodes to the shared device and a control channel among nodes to arbitrate for that device.  Some data busses (e.g. InfiniBand (IB), Fibre Channel (FC), 802.3, etc) may also act as the control channel.  The all-important exception is SCSI, for which there is no peer communication supported across all controllers and no plan to implement  target mode  communication in Blackcomb for those controllers that do.  So storage sharing on SCSI will require separate arbitration e.g. over a LAN.  For this reason, any successful Windows architecture for storage sharing must separate the data channel and control channel constructs at a high level. In addition, arbitration may be provided differently in the cluster and  extra-cluster  configurations.  This is further reason to separate the control channel architecturally. Component Services SCSI LUN masking SCSIPORT will implement LUN masking for Blackcomb.  Only persistent reservations on the device will be supported.  Only SCSI 3 devices support the SCSI Persistent Reserve command, but we may also build a weaker form of reservation persistency within the registry for SCSI 1 and 2 devices; this is undecided.  For now, let s assume that LUN masking does not apply to SCSI 1 and 2 devices. Due to some fault-handling requirements in the control channel, the SCSI Persistent Reserve command will be used only to enforce masking at the bus level, not to arbitrate.  So even in the SCSI 3 case we require a separate control channel for arbitration. The SCSI LUN masking services will be exposed to the system via an IOCTL or WMI interface.  My vote is for IOCTLs. ClusDisk ClusDisk is the existing component for masking shared disks on a node.  There is an impetus to eliminate ClusDisk from Blackcomb and replace it with LUN masking, but this is contingent on the breadth of functionality implemented in SCSIPORT (see above). If LUN masking does not cover all SCSI versions, then we will need ClusDisk to remain in the box and also a  ClusTape  driver to implement the corresponding functionality for SCSI 2 tape drivers and changers. ClusDisk is a filter driver that sits just below the FS.  Its masking services work by blocking irps from reaching disk.sys and scsiport.  The masking services are exposed to the system via an IOCTL interface.  The interface is exposed as a shingle (e.g. \\.\clusdiskn), not just to the device stack. Distributed Lock Manager (DLM) The DLM is a stand-alone project within the cluster group.  Using a TCP connection, it implements a distributed mutex oriented around a well-known name.  It is independent of a cluster, but still provides failover of the mutex management.  In this sense, it is a kind of  poor-man s cluster .  I have the DLM running btw 2 Whistler boxes right now, and am using it at least for prototyping.   An alternative to the DLM is some lightweight new protocol oriented around a master agent.  This would eliminate the need for a  membership  view in each node.  There would be failover for the master agent only within a cluster. Active Directory (AD) We should move any shared library information from the local RSM database to the Active Directory. Shared Libraries  RSM apps currently do an explicit Mount/Dismount around accesses to a library disk or tape.  In the shared configuration, we will make the AcquireDrive/ReleaseDrive implicit in the Mount/Dismount  *.  RSM will make the AcquireDrive/ReleaseDrive calls internally, allowing existing RSM apps to run unaltered in shared configurations.   A formatted disk may be concurrently shared with other apps on the same node.  A tape or unformatted disk cannot.  RSM will request the appropriate same-node inter-app sharing rights when calling the host-level sharing arbiter.  In no case will a drive be concurrently shared amongst multiple nodes. * RSM will also use the drive arbiter for sharing access to library media and changers. Shared Fixed Disks If implemented, a Read-Only NTFS  formatted disk will be concurrently shareable by multiple file systems on different nodes. Writeable disks will never be concurrently shared amongst multiple nodes.  A formatted disk may be concurrently shared with other apps on the same node; an unformatted disk cannot.  An app must explicitly call AcquireDrive/ReleaseDrive on a shared disk, requesting the appropriate same-node inter-app sharing rights. Although management and resource names vary greatly, the app-level semantics of acquiring a shared fixed disk are similar enough to RSM s semantics for acquiring a shared library drive to warrant shared architecture.  The host-level arbiter is a drive arbiter in either case. General Architecture  EMBED Visio.Drawing.6   Host-level Drive Arbiter The host-level arbiter will be a user-mode shared-data DLL that arbitrates on behalf of a host for exclusive control of a shared drive. It will also enforce sharing restrictions amongst multiple apps using the same medium on the same node (I have some reservation about allowing a user-mode component to enforce inter-app sharing, but the storage group has made it clear that they want new kernel-mode components kept to a minimum).  *  AcquireDrive flags #define DRIVEARB_REQUEST_READ           (1 << 0) #define DRIVEARB_REQUEST_WRITE          (1 << 1) #define DRIVEARB_INTRANODE_SHARE_READ   (1 << 2) #define DRIVEARB_INTRANODE_SHARE_WRITE  (1 << 3) #define DRIVEARB_NOWAIT                 (1 << 15) typedef VOID (CALLBACK* INVALIDATE_DRIVE_HANDLE_PROC)(HANDLE);  *  API for drive arbiter SERVICE HANDLE  __stdcall InitializeDriveArbitrator(); VOID    __stdcall ShutDownDriveArbitrator(HANDLE hDriveArb); HANDLE  __stdcall RegisterSharedDrive(LPSTR driveName); BOOL    __stdcall UnRegisterSharedDrive(HANDLE hDrive);  *  API for drive arbiter CLIENT HANDLE  __stdcall OpenDriveSession(LPSTR driveName, INVALIDATE_DRIVE_HANDLE_PROC invalidateHandleProc); VOID    __stdcall CloseDriveSession(HANDLE hDrive); BOOL    __stdcall AcquireDrive(HANDLE hDriveSession, DWORD flags); VOID    __stdcall ReleaseDrive(HANDLE hDriveSession); The SERVICE API is used by a perpetual service (e.g. RSM) to initialize the drive arbiter and register shared resources.   The CLIENT API is used by an app to gain control of a shared resource.   The client first opens a session handle for the resource.  The arbiter uses this opportunity to do all pre-allocation/initialization and to map the drive context into the app s address space.  The pre-configured session allows AcquireDrive/ReleaseDrive to be lightweight.   When opening the session, the app registers an invalidateHandleProc callback that the arbiter can use to forcibly invalidate the app s handle.  This is used only in error cases, e.g. bus reset. The application then calls AcquireDrive to synchronously gain control of the shared resource, specifying sharing parameters that apply to sharing rights with other clients on the same machine.  There is no asynchronous acquire API because this would complicate apps, especially ones that do wait-while-holding to acquire multiple resources.  The app should call AcquireDrive on a separate thread if it wants to do work while waiting for the drive.  It can also pass the DRIVEARB_NOWAIT flag to allow AcquireDrive to be failable.  To release the resource, the app calls ReleaseDrive.  The app may not overlap acquisitions of the same handle. Note that although it is called the  drive arbiter , this service can be used for any shared resource with a well-known name that requires inter-machine exclusion and inter-app sharing.  For example, RSM will use the drive arbiter not only for shared drive management, but also for the other components of a shared library: media and the changer robot. RSM Enhancements The host-level arbiter will be hidden from apps by RSM.  Existing RSM apps can run unchanged in shared-library configurations. For locally shareable media (i.e. formatted disks), the RSM Mount code will be enhanced to multiplex multiple apps on the same node to the formatted media.  For example, if multiple RSM apps on the same node mount the same formatted disk, RSM will issue only one AcquireDrive and keep a reference count for the number of local mounts; it will decrement the reference count for each app s Dismount and issue a ReleaseDrive when the reference count reaches zero. Intelligent Storage Besides block devices, there is also a category of intelligent storage devices that provide sharing by acting as their own hosts.  For instance, an SMB-compliant Network Attached Storage (NAS) device on Ethernet acts as its own host.  A NAS device s front-end logic is typically stateful; it accepts and processes FS accesses as requests from client nodes.   If a NAS device supports SMB, then no new work is required to support it because it is logically similar to a shared disk on a remote server.  However, there is one critical difference: the management logic within a NAS device is assumed to be HiAv; whereas a hosting server, like any other OS-driven machine, is not HiAv.  Therefore, a NAS device backed by a RAID set is HiAv, whereas a server that shares access to a RAID set is not HiAv. Epilogue:  Transaction Providers, e.g. SQL Server, IIS We have an opportunity to add value to our datacenter tools.  A transaction provider, such as IIS  ASP filter, is characterized by bursty database accesses, which maps to rapid open-read-close or open-write-close FS accesses by the database engine.  Some host scripts bypass the database and perform transactions directly via the FS or Tape APIs. ASP is the foremost host-side scripting language on the internet.  A typical ASP-driven transaction is a SQL command to read a record-set from a database or atomically update the database.  IIS  ASP filter guarantees atomicity of these accesses on a per-request basis. In a datacenter, the database may reside on shared storage.  We can provide transparency and legacy support in our transaction providers as web servers migrate to shared storage by simply wrapping the transaction with AcquireDrive/ReleaseDrive within our transaction provider.  This will require cross-group coordination with IIS and SQL Server.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\fdc\mode3fdc\desk2fdc\obsolete\readme.txt ===
Toshiba floppy controller driver

TOSDFDC2.SYS
DeskFdcB1.INF		
Toshiba EQUIUM 6230R1
Toshiba EQUIUM 6300R1
Toshiba EQUIUM 6260D1
Toshiba EQUIUM 6300D1

TOSDFDC2.SYS
DeskFdcB2.INF		
Toshiba EQUIUM 6260L1

TOSDFDC2.SYS
DeskFdcC.INF		
Toshiba EQUIUM 6260M2
Toshiba EQUIUM 6350M2
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\mcd\class\readme.txt ===
********************************************************************************

  Please read this if you are writing changer minidriver(s) for Windows 2000.

********************************************************************************


  mcdw2k.c is the the source file for Medium Changer Class driver that was
  shipped with Windows 2000 with the following change :

   * In mcdw2k.c ChangerClassSendSrbSynchronous routine is provided that 
     provides the same functionality as ClassSendSrbSynchronous.

     Changer minidriver writers should use ChangerClassSendSrbSynchronous 
     to send SRB to port driver.

  Function prototype for ChangerClassSendSrbSynchronous is given in mcdw2k.h

  To build mcd.lib, replace mcd.c with mcdw2k.c and mcd.h with mcdw2k.h


********************************************************************************
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\newft\apispec.doc ===
Microsoft Word Document MSWordDoc Word.Document.6Microsoft FT API and On Disk Structures SpecificationFT API and On Disk Structures Specification Norbert P. Kusters apispec2 Norbert P. Kusters Microsoft Word for Windows 95FT API and On Disk Structures Specification Norbert P. Kusters 7/8/96 Introduction The goal of this document is to specify a set of FT API that will define the functionality provided by an FT device driver.  Such a driver is layered above the hard disk drivers and below the file system drivers thus presenting a new view of the hard disks to the file systems.  Such a driver would then be able to construct one  logical  disk from many actual disk partitions. This document will then go on and define on disk structures for storing FT logical disk definitions persistently. FT Logical Disks This section describes the notion of an FT logical disk.  An FT logical disk is either a partition on a hard disk or it an ordered set of logical disks with a set of rules for transforming this set into one logical disk presented to the file systems.  Besides partitions, there are four types of logical disks currently supported by Windows NT:  Volume Sets, Stripes, Mirrors, and Stripes with Parity.  This list is expandable so as to accommodate new types of FT structures in the future.  The only constraint when inventing a new type of FT set is that the new logical disk supersede the member disks that compose it.  Therefore, once a logical disk is used in the construction of another logical disk then the logical disk used in the construction is no longer directly accessible. FT API Definition This section will enumerate and explain each the proposed FT API and new FT types.  All of the APIs listed return a BOOL to indicate success or failure. FT_LOGICAL_DISK_TYPE This will be an enumerated type that defines all of the known logical disk types.  This list is extensible and the current known types are: FtPartition FtVolumeSet FtStripeSet FtMirrorSet FtStripeSetWithParity FT_MEMBER_STATE This will be an enumerated type that defines three possible states for a member of a logical disk set.  These states are: FtMemberHealthy FtMemberRegenerating FtMemberOrphaned FT_LOGICAL_DISK_ID This 64-bit globally unique identifier is used to refer to a logical disk or one of its members.  If a logical disk is not a member of another logical disk then we say that this is a root logical disk and we will say the logical disk id for this logical disk is a root logical disk id.  Certain API will specify that only root logical disk ids may be used or returned in the arguments. FtCreateLogicalDisk This API creates a new logical disk.  These are the arguments for this API: IN FT_LOGICAL_DISK_TYPE FtType   This argument supplies the type of the logical disk being created. IN DWORD NumberOfMembers   This argument supplies the number of member logical disks in this new logical disk being created.  Each of the logical disks supplied to this call must be root logical disks at the time of calling this routine.  If this routine is successful in creating the new logical disk, then its members will no longer be root logical disks.  This argument is zero if and only if FtType is FtPartition. IN PFT_LOGICAL_DISK_ID RootLogicalDiskIds   This argument supplies the array of logical disks that will make up the new logical disk being created. IN DWORD ConfigurationInformationSize   This argument supplies the number of bytes in the configuration information for this new logical disk. IN PVOID ConfigurationInformation   This argument supplies FT type specific configuration information for the creation of the new logical disk. OUT PFT_LOGICAL_DISK_ID NewLogicalDiskId   This argument returns the logical disk id for the newly created logical disk. The configuration information is customized for every type of FT set.  The configuration information for the currently known FT types are: FtPartition: DWORD DiskNumber   This supplies the disk number of the given partition. DWORDLONG PartitionOffset   This supplies the byte offset of the partition. FtVolumeSet: No configuration information. FtStripeSet: DWORD StripeSize   This supplies the stripe width in bytes. FtMirrorSet: No configuration information. FtStripeSetWithParity: DWORD StripeSize   This supplies the stripe width in bytes. FtBreakLogicalDisk This API breaks up the given logical disk into its members so that the given logical disk no longer exists and its members become root logical disks which are directly accessible.  These are the arguments for this API: IN FT_LOGICAL_DISK_ID RootLogicalDiskId FtEnumerateLogicalDisks This API returns a list of all of the root logical disk ids in the system.  In other words, it returns a list of all of the directly accessible logical disks in the system.  These are the arguments for this API: IN OUT PDWORD NumberOfDiskIds   This argument supplies the size of the array of logical disk ids and returns the number of logical disk ids returned in the array.  This argument must be at least as large as the number of root logical disk ids in the system.  If the RootLogicalDiskIds argument below is passed in as NULL then this argument returns the number of root logical disks in the system without returning the array. OUT PFT_LOGICAL_DISK_ID RootLogicalDiskIds   This argument returns an array of all of the root logical disk ids in the system.  FtQueryLogicalDiskInformation This API returns information about a logical disk.  The logical disk id passed in as the first parameter does not need to be a root logical disk id.  Therefore, this API can be used to gather the complete topology for a logical disk.  These are the arguments for this API: IN PFT_LOGICAL_DISK_ID LogicalDiskId   This argument supplies the logical disk id that is being queried.  OUT PFT_LOGICAL_DISK_TYPE LogicalDiskType   This argument returns the logical disk type of the given logical disk. IN OUT PDWORD NumberOfMembers   This argument supplies the number of members in the array of members arguments and returns the actual number of members for this logical disk.  If the array of members argument is not supplied then this argument returns the number of members in the logical disk without returning their logical disk ids. OUT PFT_LOGICAL_DISK_ID ArrayOfMembers   This argument returns the array of members in the given logical disk.  If one of the members in the array cannot be found in the system then the FT_LOGICAL_DISK_ID for this member will be set to zero in the returned array to indicate this. IN OUT PDWORD ConfigurationInformationSize   This argument supplies the size of the ConfigurationInformation argument and returns the size of the configuration information.  If the ConfigurationInformation argument is not present then the ConfigurationInformationSize argument gets set to the size of the configuration information. OUT PVOID ConfigurationInformation   This argument returns the configuration information for the given logical disk. OUT PBOOLEAN IsDisabled   This argument returns whether or not the given logical disk is able to process I/O requests. IN OUT PDWORD StateSize   This argument supplies the size of the State argument below and returns the number of bytes in the logical disk state.  If the State argument below is not present then the StateSize argument returns the size of the State. OUT PVOID State   This argument returns the logical FT type dependent state information. The FT type dependent configuration information is the same as that described in the FtCreateLogicalDisk API.  The logical FT type dependent state information for the currently known FT types are: FtPartition: No state. FtVolumeSet: No state. FtStripeSet: No state. FtMirrorSet: FT_MEMBER_STATE StateOfMember0   This returns the state of the 0th member of the mirror set. FT_MEMBER_STATE StateOfMember1   This returns the state of the 1st member of the mirror set. BOOLEAN IsDirty   This returns whether or not the mirror is currently in a state where there may be differences between member 0 and member 1. FtStripeSetWithParity: BOOLEAN IsInitializing   This returns whether or not the stripe set with parity is initializing its parity. BOOLEAN IsDirty   This returns whether or not the stripe set with parity may currently have some out of date parity. DWORD UnhealthyMemberNumber   This returns the member number of an unhealthy member (if any).  That is, a member that is either orphaned or regenerating. FT_MEMBER_STATE UnhealthyMemberState   This returns the state of the unhealthy member in the stripe set with parity.  If the value returned is FtMemberHealthy then the stripe set with parity does not have any unhealthy members. FtOrphanLogicalDiskMember This API orphans the given member on the given logical disk.  These are the arguments for this API: IN FT_LOGICAL_DISK_ID LogicalDiskId   This argument supplies the logical disk id for the disk whose member we are about to orphan. IN DWORD MemberNumberToOrphan   This argument supplies the member number of the member to orphan. FtReplaceLogicalDiskMember This API replaces a given member in a logical disk with a new member.  This API will change the logical disk s id to prevent there ever being two members with the same member number belonging to the same logical disk set.  These are the arguments to this API: IN FT_LOGICAL_DISK_ID LogicalDiskId   This argument supplies the logical disk id for the disk whose member we are about to replace. IN DWORD MemberNumberToReplace   This arguments supplies the member number of the member to replace. IN FT_LOGICAL_DISK_ID NewMemberLogicalDiskId   This argument supplies the new member to be used. OUT PFT_LOGICAL_DISK_ID NewLogicalDiskId   This argument returns the new logical disk id for the given disk set. FtQueryLogicalDiskId This API returns the logical disk id for the given logical disk handle.  These are the arguments for this API: IN HANDLE LogicalDiskHandle   This argument supplies a handle to the logical disk. OUT PFT_LOGICAL_DISK_ID RootLogicalDiskId   This argument returns the logical disk id for the given logical disk handle. FtQueryNtDeviceNameForLogicalDisk This API returns the device name in the native NT name space for the given logical disk.  These are the arguments for this API: IN FT_LOGICAL_DISK_ID RootLogicalDiskId   This argument supplies the logical disk id for the logical disk whose name is being queried. IN OUT DWORD NumberOfCharactersInNtDeviceName   This argument supplies the number of characters supplied in the following name buffer and returns the actual number of characters in the name.  If the NtDeviceName parameter is not supplied then this argument receives the number of characters in the NT device name. OUT PWCHAR NtDeviceName   This argument returns the NT device name for the given logical disk. FtQueryLogicalDiskName FtSetLogicalDiskName FT On Disk Structures Definition This section will define the on disk structures for the description of logical FT sets.  The on disk structures will start at sector 1 after the MBR on a hard disk and the structures for a given hard disk will only refer to partitions on that hard disk. The preamble, which starts at the beginning of sector 1 will contain a special signature such as   or some such and an offset to the start of the logical disk descriptions.  The logical disk descriptions are the tool that will allow us to build up FT sets (and sets of FT sets).  For each logical disk type, the logical disk description will be slightly different but every type of logical disk description will start with the following: DWORD Length   This supplies the length in bytes of this logical disk description. FT_LOGICAL_DISK_ID NewLogicalDiskId  This assigns a new and unique logical disk id that will be used to refer to this logical disk unit. FT_LOGICAL_DISK_TYPE LogicalDiskType   This supplies the logical disk type for this logical disk unit. DWORD NumberOfMembers   This supplies the number of members contained in this FT logical disk.  NumberOfMembers is set to zero if and only if LogicalDiskType is set to FtPartition. DWORD MemberNumber   This supplies the member number for the given member logical disk id below.  This argument is not meaningful if NumberOfMembers is equal to zero. FT_LOGICAL_DISK_ID MemberLogicalDiskId   This supplies the logical disk id for this member.  This logical disk id must appear in a preceding logical disk description on the same disk.  This argument is not meaningful if NumberOfMembers is equal to zero. Following this information in the logical disk description is logical FT type specific information.  Here are the currently known logical FT types and their specialized on disk information: FtPartition: DWORDLONG PartitionOffset   This stores the partition offset in bytes on this hard drive that the above NewLogicalDiskId is going to represent. DWORDLONG PartitionLength   This stores the partition length in bytes. FtVolumeSet: No specialized on disk information. FtStripeSet: DWORD StripeSize   This stores the stripe width in bytes. FtMirrorSet: FT_MEMBER_STATE StateOfMember0   This stores the state of the 0th member of the mirror set. FT_MEMBER_STATE StateOfMember1   This stores the state of the 1st member of the mirror set. BOOLEAN IsDirty   This stores whether or not the mirror is currently in a state where there may be differences between member 0 and member 1.  FtStripeSetWithParity: DWORD StripeSize   This stores the stripe width in bytes. BOOLEAN IsInitializing   This stores whether or not the stripe set with parity is initializing its parity. BOOLEAN IsDirty   This stores whether or not the stripe set with parity may currently have some out of date parity. DWORD UnhealthyMemberNumber   This stores the member number of an unhealthy member (if any).  That is, a member that is either orphaned or regenerating. FT_MEMBER_STATE UnhealthyMemberState   This stores the state of the unhealthy member in the stripe set with parity.  If the value returned is FtMemberHealthy then the stripe set with parity does not have any unhealthy members. The logical disk descriptions on any given hard disk will terminate with a zero length description. Normal Heading 1 Heading 2 Heading 3 Default Paragraph Font Unknown VERITAS Software Norbert P. Kusters'D:\nt\private\ntos\dd\newft\apispec.doc Norbert P. Kusters(D:\nt\private\ntos\dd\newft\apispec2.doc Norbert P. Kusters(D:\nt\private\ntos\dd\newft\apispec2.doc                                                               @HP DeskJet 500 LPT1: winspool HP DeskJet 500 HP DeskJet 500 Letter HP DeskJet 500 Letter Times New Roman Symbol Arial +FT API and On Disk Structures Specification Norbert P. Kusters Norbert P. Kusters
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\port\scsi\miniport\agilent\afc\notes.txt ===
Copyright (c) 2000 Agilent Technologies.

Version Control Information:

   $Archive: /Drivers/Win2000/MSE/MSEmbed/Notes.txt $

  $Revision:: 6               $
      $Date:: 3/20/01 5:09p   $ (Last Check-In)
   $Modtime:: 3/20/01 5:08p   $ (Last Modified)

Purpose:

  This file lists internal notes (for DVT and Support) for the
  corresponding release which pertain to the NT OS layer.

=====================================================================

Version Label: MSE_07
Date: 03/20/01
Name: Kanna Rajagopal
Project: /DRIVERS/WIN2000/MSE
Release Purpose: Microsoft Embedding Program
Corresponding FC layer release: a14 from $/Drivers/common/AU00
Identification Information:
Notes: 
 - Changed fcResetAllDevs macro definition for IA-64 compilation

Version Label: MSE_06
Date: 12/07/00
Name: Leopold Purwadihardja
Project: /DRIVERS/WIN2000/MSE
Release Purpose: Microsoft Embedding Program
Corresponding FC layer release: a13 from $/Drivers/common/Trunk
Identification Information:
Notes: 
 - remove kernel linking from the checked driver
 - change TARGETTYPE from DRIVER to MINIPORT. This also fixed linking to Kernel _allshl when doing __int64 shifting
 - create the same driver name for IA64 and x386 drivers


Version Label: MSE_05
Date: 11/10/00
Name: Leopold Purwadihardja
Project: /DRIVERS/WIN2000/Trunk
Release Purpose: Augusta
Corresponding FC layer release: a13 from $/Drivers/common/Trunk
Identification Information:
Notes: 
 Fixed data alignment issue when compiling for IA64

Version Label: MSE_04
Date: 10/30/00
Name: Leopold Purwadihardja
Project: /DRIVERS/WIN2000/Trunk
Release Purpose: Augusta
Corresponding FC layer release: a13 from $/Drivers/common/Trunk
Identification Information:
Notes: 
 Use a13

Version Label: MSE_03
Date: 10/30/00
Name: Leopold Purwadihardja
Project: /DRIVERS/WIN2000/Trunk
Release Purpose: Augusta
Corresponding FC layer release: a12 from $/Drivers/common/Trunk
Identification Information:
Notes: 
 Use a12
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\scsiport\notes.txt ===
Configuring Power Paramters:
----------------------------

Scsiport allows adapters to configure some power settings.

NeedsSystemShutdownNotification: DWORD
If nonzero, this value tells scsiport that the adapter needs to
have its AdapterControl routine called when a system shutdown
occurs.  See the section on request sense parameters below for the
location of this key.


Configuring Tunable Performance Parameters:
-------------------------------------------

Scsiport supports the following configurable perfomance parameters:

RemainInReducedMaxQueueState: DWORD
If set, this value indicates the number of seconds a logical unit will
remain in a degraded performance state in which its MaxQueueDepth has
been reduced due to one or more requests failed with QUEUE FULL status.
This value is read from ScsiPort's DeviceParameters key in the registry.
See the section on request sense parameters below for the location of
this key.


Configuring Request Sense Parameters:
-------------------------------------

Scsiport supports configurable request sense parameters on a per-adapter
basis.  The following parameters may be configured under the HBA's device 
entry:

TotalSenseDataBytes: DWORD [18..255]
If set, this value designates the size of the buffer Scsiport will allocate
for request sense data.  If the value is not set, the default size of 18 (0x12)
bytes is used.

RequestSenseTimeout: DWORD
If set, this value designates the timeout period for REQUEST SENSE commands, in
seconds.  If the value is not set, the default timeout value of 2 seconds
is used. 

HKLM
  System
    CurrentControlSet
      Enum
        <bus>
          <DeviceId>
            <Device>
              DeviceParameters
                ScsiPort
                  DWORD TotalSenseDataBytes=<18..255>
                  DWORD RequestSenseTimeout=<timeout in seconds>
                  DWORD RemainInReducedMaxQueueState=<duration in seconds>
                  DWORD NeedsSystemShutdownNotification=<0|1>

Example:
HKLM
  System
    CurrentControlSet
      Enum
        PCI
          VEN_9004&DEV_6178&SUBSYS_78619004&REV_03
            3&1b3e6122&0&5070
              DeviceParameters
                ScsiPort
                  TotalSenseDataBytes=0xff
                  RequestSenseTimeout=0xa
                  RemainInMaxQueueState=0x1e
                  NeedsSystemShutdownNotification=1


Verifier:
--------

To enable the scsi verifier, add the following registry entry to the scsiport
control entry...

HKLM\system\currentcontrolset\control\scsiport
    Verifier
        VerifyLevel = <verifier level>

The following values control verifier behavior...
#define SP_DONT_CHK_HW_INITIALIZE_DURATION  0x80000000
#define SP_DONT_CHK_ACTIVE_UNTAGGED_REQUEST 0x40000000
#define SP_DONT_CHK_REQUESTS_ON_RESET       0x20000000

Also, from the debugger, setting SpVrfyLevel=0xffffffff will disable the 
verifier.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\specifications\nt51storage.rtf ===
{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;} {\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f34\froman\fcharset238\fprq2 Times New Roman CE;}{\f35\froman\fcharset204\fprq2 Times New Roman Cyr;} {\f37\froman\fcharset161\fprq2 Times New Roman Greek;}{\f38\froman\fcharset162\fprq2 Times New Roman Tur;}{\f39\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f40\froman\fcharset178\fprq2 Times New Roman (Arabic);} {\f41\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f42\fswiss\fcharset238\fprq2 Arial CE;}{\f43\fswiss\fcharset204\fprq2 Arial Cyr;}{\f45\fswiss\fcharset161\fprq2 Arial Greek;}{\f46\fswiss\fcharset162\fprq2 Arial Tur;} {\f47\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f48\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f49\fswiss\fcharset186\fprq2 Arial Baltic;}{\f50\fmodern\fcharset238\fprq1 Courier New CE;}{\f51\fmodern\fcharset204\fprq1 Courier New Cyr;} {\f53\fmodern\fcharset161\fprq1 Courier New Greek;}{\f54\fmodern\fcharset162\fprq1 Courier New Tur;}{\f55\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f56\fmodern\fcharset178\fprq1 Courier New (Arabic);} {\f57\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255; \red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{ \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\s1\ql \li0\ri0\sb200\sa80\sl-440\slmult0 \keepn\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs34\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext15 heading 1;}{\s2\ql \fi-360\li360\ri0\sb140\sa60\sl-380\slmult0 \keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin360\itap0 \fs30\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon1 \snext15 heading 2;}{\s3\ql \fi-360\li360\ri0\sb80\sa40\sl-280\slmult0 \keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin360\itap0 \fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon2 \snext15 heading 3;}{\s4\ql \fi-360\li360\ri0\sb60\sl-240\slmult0 \keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin360\itap0 \b\fs21\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon1 \snext15 heading 4;}{\s5\ql \fi-360\li360\ri0\sa40\sl-200\slmult0\keepn\widctlpar \tx1800\tx3600\tx5400\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin360\itap0 \i\f1\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon1 \snext15 heading 5;}{\s6\ql \fi-360\li360\ri0\sa40\sl-200\slmult0 \keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin360\itap0 \i\f1\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon1 \snext15 heading 6;}{\s7\ql \fi-360\li360\ri0\sa40\sl-200\slmult0 \keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel5\adjustright\rin0\lin360\itap0 \i\f1\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon6 \snext8 heading 7;}{\s8\ql \fi-360\li360\ri0\sa40\sl-200\slmult0 \keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel5\adjustright\rin0\lin360\itap0 \i\f1\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon6 \snext9 heading 8;}{\s9\ql \fi-360\li360\ri0\sa40\sl-200\slmult0\keepn\widctlpar \tx360\aspalpha\aspnum\faauto\outlinelevel7\adjustright\rin0\lin360\itap0 \i\f1\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon8 \snext0 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\s15\ql \li0\ri0\sa160\sl-240\slmult0 \nowidctlpar\faauto\rin0\lin0\itap0 \fs21\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext15 Normal1,n,body text,Blockquote,P;}{\s16\ql \fi-360\li360\ri0\sa80\sl-240\slmult0\nowidctlpar\tx280{\*\pn \pnlvlbody\ilvl11\ls2047\pnrnot0 \pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\faauto\ls2047\ilvl11\rin0\lin360\itap0 \fs21\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon15 \snext16 \sautoupd List Bullet;}{\s17\ql \fi-440\li280\ri0\sa80\sl-240\slmult0\nowidctlpar \tqr\tx160\tx280\faauto\rin0\lin280\itap0 \fs21\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon15 \snext17 List Number;}{\s18\ql \li0\ri0\sb20\sa60\sl-220\slmult0\keepn\nowidctlpar\faauto\rin0\lin0\itap0  \b\fs19\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext19 Tt,TT;}{\s19\qr \li0\ri0\sl-20\slmult0\keepn\nowidctlpar\brdrt\brdrs\brdrw15 \faauto\rin0\lin0\itap0 \fs8\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Tr;}{ \s20\ql \li240\ri0\sb20\sa60\sl-220\slmult0\keepn\nowidctlpar\faauto\rin0\lin240\itap0 \b\fs19\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon15 \snext20 Th;}{\s21\ql \li240\ri0\sb20\sa60\sl-220\slmult0\nowidctlpar \tx280\tx560\faauto\rin0\lin240\itap0 \fs19\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon15 \snext21 Tp;}{\s22\qr \li30\ri30\sb80\sa80\sl-180\slmult0\widctlpar\brdrt\brdrs\brdrw15\brsp20 \aspalpha\aspnum\faauto\adjustright\rin30\lin30\itap0  \fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 Te;}{\s23\qr \li0\ri0\sl-160\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs12\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 Le,e;}{ \s24\ql \li0\ri0\sb540\sa540\sl-540\slmult0\keepn\nowidctlpar\faauto\rin0\lin0\itap0 \fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Ch;}{\s25\ql \li0\ri0\sl-220\slmult0\nowidctlpar \tx390\tx780\tx1170\tx1560\tx1950\tx2340\tx2730\tx3120\tx3510\tx3900\tx4290\tx4680\tx5070\tx5460\tx5850\tx6240\tx6630\faauto\rin0\lin0\itap0 \f2\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext25 Ex,CODE,PRE,CITE;}{ \s26\ql \li280\ri0\sa80\sl-240\slmult0\nowidctlpar\faauto\rin0\lin280\itap0 \fs21\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon15 \snext26 Lp1;}{\s27\ql \li-1800\ri0\sa280\sl-240\slmult0\keepn\nowidctlpar\faauto\rin0\lin-1800\itap0  \caps\fs22\expnd24\expndtw120\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext24 Cn;}{\s28\ql \li0\ri0\sa240\sl-220\slmult0\nowidctlpar\tx280\tx560\faauto\rin0\lin0\itap0 \b\fs19\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Cap;}{ \s29\ql \li-1770\ri30\sb50\sl-80\slmult0\nowidctlpar\brdrt\brdrs\brdrw15\brdrcf2 \faauto\rin30\lin-1770\rtlgutter\itap0 \fs12\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 header rule;}{\s30\ql \li0\ri0\sl-240\slmult0 \keepn\nowidctlpar\faauto\rin0\lin0\itap0 \b\fs21\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext31 Term1,DT;}{\s31\ql \li200\ri0\sa160\nowidctlpar\faauto\rin0\lin200\itap0 \fs21\lang1033\langfe1033\cgrid\langnp1033\langfenp1033  \sbasedon15 \snext30 Def1,VAR,DL,DFN;}{\s32\ql \li-1800\ri0\sl-220\slmult0\widctlpar \tx-1410\tx-1020\tx-630\tx-240\tx150\tx540\tx930\tx1320\tx1710\tx2100\tx2490\tx2880\tx3270\tx3660\tx4050\tx4440\tx4830\tx5220\tx5610\tx6000\tx6390\tx6780\aspalpha\aspnum\faauto\adjustright\rin0\lin-1800\itap0  \f2\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext32 Exw,PRE WIDE;}{\s33\ql \li-1770\ri30\sb280\sa250\sl-120\slmult0\keepn\nowidctlpar\brdrb\brdrs\brdrw15\brdrcf2 \faauto\rin30\lin-1770\itap0  \fs8\cf8\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Rule,HR;}{\s34\ql \fi-280\li520\ri0\sb20\sa60\sl-220\slmult0\nowidctlpar\tx520\faauto\rin0\lin520\itap0 \fs19\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon21 \snext34 Tpi;}{ \s35\ql \fi-140\li140\ri0\sb20\sa40\sl-200\slmult0\nowidctlpar\tx280\faauto\rin0\lin140\itap0 \fs17\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon21 \snext35 Tf;}{\s36\ql \li0\ri0\sb20\sa60\sl-220\slmult0\nowidctlpar \tx280\tx560\faauto\rin0\lin0\itap0 \fs19\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon21 \snext36 Tpf;}{\s37\ql \li0\ri0\sa160\nowidctlpar\faauto\rin0\lin0\itap0 \fs21\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon15 \snext37  Art;}{\s38\ql \li0\ri0\sb20\sa60\sl-220\slmult0\keepn\nowidctlpar\faauto\rin0\lin0\itap0 \b\fs19\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon20 \snext20 Thf;}{\s39\ql \fi-280\li280\ri0\sb20\sa60\sl-220\slmult0\nowidctlpar \tx280\faauto\rin0\lin280\itap0 \fs19\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon34 \snext39 Tpif;}{\s40\ql \li560\ri0\sl-220\slmult0\widctlpar\tqr\tldot\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin560\itap0  \fs19\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon41 \snext40 \sautoupd toc 3;}{\s41\ql \li0\ri0\sl-220\slmult0\keepn\widctlpar\tqr\tldot\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0  \fs19\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext42 \sautoupd toc 1;}{\s42\ql \li280\ri0\sl-220\slmult0\widctlpar\tqr\tldot\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin280\itap0  \fs19\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon41 \snext42 \sautoupd toc 2;}{\s43\ql \li0\ri0\sl180\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \i\f1\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033  \sbasedon0 \snext43 footer;}{\s44\ql \li0\ri0\sl-210\slmult0\widctlpar\tqr\tx6960\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\f1\fs18\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext29 header;}{ \s45\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext45 footnote text;}{\*\cs46 \additive \fs20\super \sbasedon10 footnote reference;}{ \s47\ql \fi-360\li360\ri0\sa80\sl-240\slmult0\nowidctlpar\tqr\tx630\faauto\rin0\lin360\itap0 \fs21\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon17 \snext47 lp;}{\s48\ql \li600\ri0\widctlpar \tqr\tldot\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin600\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd toc 4;}{\s49\ql \li800\ri0\widctlpar \tqr\tldot\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin800\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd toc 5;}{\s50\ql \li1000\ri0\widctlpar \tqr\tldot\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin1000\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd toc 6;}{\s51\ql \li1200\ri0\widctlpar \tqr\tldot\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin1200\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd toc 7;}{\s52\ql \li1400\ri0\widctlpar \tqr\tldot\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin1400\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd toc 8;}{\s53\ql \li1600\ri0\widctlpar \tqr\tldot\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin1600\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd toc 9;}}{\*\listtable{\list\listtemplateid265746614\listsimple{\listlevel\levelnfc0\levelnfcn0 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid-120}{\list\listtemplateid-1521688672 \listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li360\jclisttab\tx360 } {\listname ;}\listid-119}{\list\listtemplateid234683598\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01*;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1  \chshdng0\chcfpat1\chcbpat1 }{\listname ;}\listid-2}{\list\listtemplateid532464910\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat2\levelspace0\levelindent0{\leveltext\leveltemplateid-122760436 \'02\'00.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-720\li720\jclisttab\tx720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li1080\jclisttab\tx1080 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li1800\jclisttab\tx1800 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li2520\jclisttab\tx2520 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li3240\jclisttab\tx3240 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li3960\jclisttab\tx3960 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li4680\jclisttab\tx4680 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li5400\jclisttab\tx5400 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext \leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li6120\jclisttab\tx6120 }{\listname ;}\listid1657879798}}{\*\listoverridetable{\listoverride\listid-119\listoverridecount0\ls1} {\listoverride\listid-120\listoverridecount0\ls2}{\listoverride\listid-119\listoverridecount0\ls3}{\listoverride\listid-120\listoverridecount0\ls4}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23 \leveljc0\leveljcn0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li360 }}\ls5}{\listoverride\listid1657879798 \listoverridecount0\ls6}}{\info{\title Windows NT 5.0 Storage Architecture}{\author Carol Buchmiller (v-carolb)}{\operator Henry Gabryjelski}{\creatim\yr2000\mo1\dy7\hr15\min54}{\revtim\yr2000\mo1\dy12\hr14\min43}{\printim\yr1997\mo3\dy28\hr15\min31} {\version5}{\edmins170}{\nofpages1}{\nofwords363}{\nofchars2070}{\*\company Microsoft}{\nofcharsws2542}{\vern8247}}\widowctrl\ftnbj\aenddoc\aftnnar\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\linkstyles\hyphcaps0\formshade\horzdoc\dghspace120 \dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale100\nolnhtadjtbl \fet0\sectd \linex0\headery709\footery709\colsx709\endnhere\titlepg\sectdefaultcl {\header \pard\plain \s44\qr \li0\ri0\sl-210\slmult0\widctlpar\brdrb \brdrs\brdrw15\brsp20 \tqr\tx6960\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\f1\fs18\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 { }{\field{\*\fldinst {styleref Ch \\* Mergeformat }}{\fldrslt {\lang1024\langfe1024\noproof  Windows NT 5.1 Storage Architecture}}}{ }{\expnd-7\expndtw-35  }{\emdash }{\expnd-7\expndtw-35  }{ }{\field{\*\fldinst {page }}{\fldrslt {\lang1024\langfe1024\noproof 2}}}{ \par }}{\footer \pard\plain \s43\ql \li0\ri0\sl180\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \i\f1\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\'a9 2000 Microsoft Corporation. All rights reserved. \par }}{\footerf \pard\plain \s43\ql \li0\ri0\sl180\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \i\f1\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\'a9 2000 Microsoft Corporation. All rights reserved. \par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta ?}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta ?}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta ?}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta ?}} {\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb ?}{\pntxta ?}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb ?}{\pntxta ?}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb ?}{\pntxta ?}}{\*\pnseclvl8 \pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb ?}{\pntxta ?}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb ?}{\pntxta ?}}\pard\plain \s1\ql \li0\ri0\sb200\sa80\sl-440\slmult0 \keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \fs34\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {{\*\bkmkstart _Toc383845773}{\*\bkmkstart _Toc384145942}{\*\bkmkstart _Toc384197790}1.\tab Introduction {\*\bkmkend _Toc383845773}{\*\bkmkend _Toc384145942}{\*\bkmkend _Toc384197790} \par }\pard\plain \s15\ql \li0\ri0\sa160\sl-240\slmult0\nowidctlpar\faauto\rin0\lin0\itap0 \fs21\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 { The NT 5.1 storage driver architecture includes support for writable media, as well as restricted-rewritable media.  Backwards-compatibility will existing drivers is of paramount importance.  Unfortunately, the current implementation of the  storage stack inextricably links media type with the driver.  This implementation will hope to break this connectrion by allowing devices which support MORPHING to change function pointers based upon the current media type inserted into the device. \par {\listtext\pard\plain\s1 \fs34 \hich\af0\dbch\af0\loch\f0 2.\tab}}\pard\plain \s1\ql \fi-720\li720\ri0\sb200\sa80\sl-440\slmult0\keepn\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls6\outlinelevel0\adjustright\rin0\lin720\itap0  \fs34\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Morphing \par }\pard\plain \s15\ql \li0\ri0\sa160\sl-240\slmult0\nowidctlpar\faauto\rin0\lin0\itap0 \fs21\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 { Morphing is the process of redirecting the interface keys that exist on the front panel of a storage device to messages to the operating system.  The first phase of this process simply disables the keys upon the front of the storage device, the second p hase is poll the unit (as is done currently with a TEST_UNIT_READY) to determine if the user has pressed a button, and react based upon that key press event.  There are also other possibilities allowed by morphing, such as power state changes, that may be  implemented in a future release.  In this document, the term morphing will refer to only that feature which deals with media change notifications. \par }\pard\plain \s1\ql \li0\ri0\sb200\sa80\sl-440\slmult0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \fs34\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {{\*\bkmkstart _Toc384145944}{\*\bkmkstart _Toc384197792}3. \tab Driver Initialization{\*\bkmkend _Toc384145944}{\*\bkmkend _Toc384197792} \par }\pard\plain \s15\ql \li0\ri0\sa160\sl-240\slmult0\nowidctlpar\faauto\rin0\lin0\itap0 \fs21\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {When the driver\rquote s DriverEntry routine is called, a default set of function pointers  is passed to the classpnp library\rquote  s ClassInitialize() routine.  This structure will be expanded to allow an array of function pointers to be passed that describe the preferred routine for a given type of medium.  All fields will be identical to those requi red in ClassInitialize(), and follow the same rules for non-existent entry points (class driver default behavior or failure to load).  In this way, if the device does not support morphing, the device will get default (legacy) behavior. \par }\pard\plain \s1\ql \li0\ri0\sb200\sa80\sl-440\slmult0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \fs34\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {4.\tab Media Change Handling \par }\pard\plain \s15\ql \li0\ri0\sa160\sl-240\slmult0\nowidctlpar\faauto\rin0\lin0\itap0 \fs21\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {During a media chang e notification from the morphing-capable polling, the driver will stop all current i/o on the device, query for the current  profile / media type, and modify the function pointers according to the data passed in during the initialization phase.  At this t ime, stopping all IO is guaranteed simply by being within the StartIo() routine.  When all existing IO is stopped/paused, the MediaChangeNotification event will be signaled, and IO shall resume to the new media type using the new function pointers. \par }{Unsupported or unknown profiles will use the default function pointers.  Therefore it is highly suggested that the default function pointers provide only READ access to the storage device (legacy cdrom behavior). \par  \par  \par }}
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\volsnap\scripts\readme.txt ===
---------------------------------------------
         Microsoft Volume Snapshot API Readme File
                       February 2000
       ---------------------------------------------
   (c) Microsoft Corporation, 2000. All rights reserved.

This document provides late-breaking or other information that
supplements the Microsoft Volume Snapshot API documentation.

-------------------------
How to Use This Document
-------------------------
To view the Readme file on-screen in Windows Notepad,
maximize the Notepad window. On the Format menu, click Word
Wrap. To print the Readme file, open it in Notepad or 
another word processor, and then use the Print command on
the File menu.
---------
CONTENTS
---------

Installing the SDK binaries

To install the SDK binaries, run the install.cmd script in 
the bin\i386 directory. To un-install the SDK run uninst.cmd 
in the same directory.

Creating a snapshot using the command-line utility

Using this SDK you can create snapshots only on FAT volumes.
Before creating the snapshot on a volume you must first 
configure the diff area for that volume. See the "Moving a 
Diff Area... " section below for details. After configuring 
the diff area you can create a snapshot on that volume 
by running vss_demo.exe. You should choose the default 
values for vss_demo prompts excepting maybe for the 
Volume Name prompt where you must put the mount point path 
(terminated with backslash) for that volume, for example "F:\".
Beware that the created snapshots are lost after a reboot.

Example:

Z:\nt\drivers\storage\volsnap\vss\bin\i386>vss_demo
Snapshot Set creation succeeded. 
GUID = {932ae8c4-1b97-4032-8062-0ab93fce92fc}
Add a volume to the snapshot set? [Y/n]
  Attributes [0]:
  Initial allocated size (Mb):  [10]:
  Volume name:  ["G:\"]: F:\
  Snapshot details:  [""]:
A Volume Snapshot was succesfully added to the snapshot set.
The Volume Snapshot was succesfully configured.
Add a volume to the snapshot set? [Y/n] n
Commiting the snapshot(s)..
  Allow partial commit? [Y/n]
  Allow writers cancel? [y/N]
  Ignore writer vetoes? [Y/n]
The snapshot(s) were succesfully created.
The properties of the snapshot #0 : 
Id = {00000000-0000-0000-0000-000000000000}, 
SnapshotSetId = {00000000-0000-0000-0000-000000000000}
Volume = (null), DevObj = (null)
OriginalVolumeId = {00000000-0000-0000-0000-000000000000}
OriginalVolumeName = (null)
ProviderId = {00000000-0000-0000-0000-000000000000}
Details = NULL
Attributes = 0x00000000
Timestamp = 0x0000000000000000
Status = 0,0,0, Inc. No = 0x0000000000000000
Data Length = 0x00000000, Opaque Data = NULL
The name of snapshot #0 : \Device\HarddiskVolumeSnapshot3

Moving a Diff Area from the Default Location

To move a diff area from the default location to another
drive, execute the following commands from the command 
line after each boot. Note that "F:" is the name of the 
target drive for the snapshot and "G:" is the name of the 
drive the diff area will be moved to. Also, the "F:" drive 
must be FAT and the "G:" drive must be NTFS. Beware that 
the diff area settings are lost after a reboot.

Example:
	vsclrda F:
	vsda F: G:

Using the sample writers

A writer is by definition an ordinary application that 
can listen for snapshot-related events. For running the 
command-line sample writer in this SDK you need only 
to run tsub.exe in a command window. Then, in a separate 
command window you must create a snapshot using vss_demo.
You will notice that the running tsub.exe gets notified 
before and after a snapshot gets created.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\volsnap\scripts\readme_whistler.txt ===
---------------------------------------------
         Microsoft Volume Snapshot API Readme File
                       February 2000
       ---------------------------------------------
   (c) Microsoft Corporation, 2000. All rights reserved.

This document provides late-breaking or other information that
supplements the Microsoft Volume Snapshot API documentation.

-------------------------
How to Use This Document
-------------------------
To view the Readme file on-screen in Windows Notepad,
maximize the Notepad window. On the Format menu, click Word
Wrap. To print the Readme file, open it in Notepad or 
another word processor, and then use the Print command on
the File menu.
---------
CONTENTS
---------

Creating a snapshot using the command-line utility

You can create a snapshot on a certain set of  volumes by 
running vss_demo.exe. You should choose the default values 
for vss_demo prompts excepting maybe for the Volume Name 
prompt where you must put the mount point path (terminated 
with backslash) for that volume, for example "F:\". Beware 
that the created snapshots are lost after a reboot.

Before creating the snapshot on a FAT volume you must first 
configure the diff area for that volume. See the "Moving a 
Diff Area... " section below for details. You do not need 
to configure the diff area for an NTFS volume before 
creating a snapshot.


Example:

Z:\nt\drivers\storage\volsnap\vss\bin\i386>vss_demo
Snapshot Set creation succeeded. 
GUID = {932ae8c4-1b97-4032-8062-0ab93fce92fc}
Add a volume to the snapshot set? [Y/n]
  Attributes [0]:
  Initial allocated size (Mb):  [20]:
  Volume name:  ["G:\"]: F:\
  Snapshot details:  [""]:
A Volume Snapshot was succesfully added to the snapshot set.
The Volume Snapshot was succesfully configured.
Add a volume to the snapshot set? [Y/n] n
Commiting the snapshot(s)..
  Allow partial commit? [Y/n]
  Allow writers cancel? [y/N]
  Ignore writer vetoes? [Y/n]
The snapshot(s) were succesfully created.
The properties of the snapshot #0 : 
Id = {00000000-0000-0000-0000-000000000000}, 
SnapshotSetId = {00000000-0000-0000-0000-000000000000}
Volume = (null), DevObj = (null)
OriginalVolumeId = {00000000-0000-0000-0000-000000000000}
OriginalVolumeName = (null)
ProviderId = {00000000-0000-0000-0000-000000000000}
Details = NULL
Attributes = 0x00000000
Timestamp = 0x0000000000000000
Status = 0,0,0, Inc. No = 0x0000000000000000
Data Length = 0x00000000, Opaque Data = NULL
The name of snapshot #0 : \Device\HarddiskVolumeSnapshot3

Moving a Diff Area from the Default Location

To move a diff area from the default location to another
drive, execute the following commands from the command 
line after each boot. Note that "F:" is the name of the 
target drive for the snapshot and "G:" is the name of the 
drive the diff area will be moved to. Also, the "F:" drive 
must be FAT and the "G:" drive must be NTFS. Beware that 
the diff area settings are lost after a reboot.

Example:
	vsclrda F:
	vsda F: G:

Using the sample writers

A writer is by definition an ordinary application that 
can listen for snapshot-related events. For running the 
command-line sample writer in this SDK you need only 
to run tsub.exe in a command window. Then, in a separate 
command window you must create a snapshot using vss_demo.
You will notice that the running tsub.exe gets notified 
before and after a snapshot gets created.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\volsnap\vss\modules\backupext\comp.xml ===
<BACKUP_COMPONENTS xmlns="x-schema:componentmetadata.xml" version="1.0"
                   backupType="full">
   <WRITER_COMPONENTS instanceId="E04DA480-65B9-11D1-A29F-00AA00C14882"
	  	      writerId="F04DA480-65B9-11D1-A29F-00AA00C14882">
      <COMPONENT componentType="database" componentName="NTDSDatabase">
         <BACKUP_METADATA metadata="0a0a0b0b0c0c0d0d0e0e0f" />
      </COMPONENT>
   </WRITER_COMPONENTS>
</BACKUP_COMPONENTS>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\volsnap\vss\modules\backupext\exchange.xml ===
<WRITER_METADATA xmlns="x-schema:writermetadata.xml" version="1.0">
   <IDENTIFICATION
      friendlyName="Exchange Platinum"
      writerId="F04DA480-65B9-11D1-A29E-00AA00C14883"
      instanceId="E04DA480-65B9-11D1-A29E-00AA00C14883"
      usage="OTHER"
      dataSource="TRANSACTION_DB" />
   <BACKUP_LOCATIONS>
      <DATABASE logicalPath = "Sit\Department1" componentName="AthruI-USER_FOLDERS">
          <DATABASE_FILES path="%systemroot%\EXCHANGE\DEPT1" filespec="AThruI.mdb" />
	  <DATABASE_LOGFILES path="%systemroot%\EXCHANGE\DEPT1" filespec="*.log" />
      </DATABASE>
   </BACKUP_LOCATIONS>
   <RESTORE_METHOD method="RESTORE_TO_ALTERNATE_LOCATION"
                   writerRestore="always">
      <ALTERNATE_LOCATION_MAPPING
         path="%systemroot%\EXCHANGE\DEPT1"
         filespec="*.*"
         alternatePath="%systemroot%\EXCHANGE\RESTORE" />
      </RESTORE_METHOD>
</WRITER_METADATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\volsnap\vss\modules\backupext\componentmetadata.xml ===
<Schema name="VssComponentMetadata"
        xmlns="urn:schemas-microsoft-com:xml-data"
	xmlns:dt="urn:schemas-microsoft-com:datatypes">


<AttributeType name="filespec" dt:type="string" required="yes">
   <description>
   File specification.  Can include wildcard characters ? and *
   </description>
</AttributeType>

<AttributeType name="path" dt:type="string" required="yes">
   <description>
   Path to a file.  The path can include environment variables or
   values extracted from registry keys.
   </description>
</AttributeType>


<AttributeType name="recursive" dt:type="enumeration"
               dt:values="yes no" default="no">
   <description>
   Is path specified recursive or limited to the directory that is specified.
   </description>
</AttributeType>

<AttributeType name="alternatePath" dt:type="string" required="no">
   <description>
   Alternate path in which to find the file.  Files in a file group may
   have been copied to an alternative location by the writer.  Backup should
   pick up the files from the alternative location instead of the original
   location but should restore the files to their original location
   </description>
</AttributeType>

<AttributeType name="logicalPath" dt:type="string" required="no">
   <description>
   Logical path for a database or file group.  This logical name uses backslash
   as separators to form a logical namespace hierarchy
   </description>
</AttributeType>

<AttributeType name="componentName" dt:type="string" required="yes">
   <description>
   Name used to identify a database or file group.  May be qualified by a
   logical path.
   </description>
</AttributeType>


<AttributeType name="version" dt:type="enumeration" dt:values="1.0" required="yes">
   <description>
   Version of a specific document
   </description>
</AttributeType>

<AttributeType name="writerId" dt:type="uuid" required="yes">
   <description>
   Unique id to identify the writer.  Note that this identifies the
   writer class rather than a specific instance of the writer.
   </description>
</AttributeType>

<AttributeType name="instanceId" dt:type="uuid" required="no">
   <description>
   Unique id identifying the instance of a writer during backup.  It
   has no meaning during restore.
   </description>
</AttributeType>


<ElementType name="BACKUP_COMPONENTS" content="eltOnly" model="closed" order="many">
   <description>
   Components that are backed up or restored.
   Used to communicate between the writer and the backup application during
   backup and restore.
   </description>

   <AttributeType name="selectComponents" dt:type="enumeration"
                       dt:values="yes no" default="no">
      <description>
      Does the backup application select individual components or
      does it backup entire volumes
      </description>
   </AttributeType>

   <AttributeType name="bootableSystemStateBackup" dt:type="enumeration"
		  dt:values = "yes no" default="no" >
      <description>
      Is backup saving the bootable state of the system.
      </description>
   </AttributeType>

   <AttributeType name="backupType" dt:type="enumeration"
                  dt:values="full differential incremental other"
		  required="yes">
      <description>
      Type of backup being performed.
      </description>
   </AttributeType>

   <attribute type="version" />
   <attribute type="selectComponents" />
   <attribute type="bootableSystemStateBackup" />
   <attribute type="backupType" />

   <element type= "WRITER_COMPONENTS" />
</ElementType>

<ElementType name="WRITER_COMPONENTS" content="eltOnly" model="closed"
             order="many">
   <description>
   Components that are backed up and restored that are associated with a
   specific writer instance
   </description>

   <attribute type="writerId" />
   <attribute type="instanceId" />

   <element type="COMPONENT" />
</ElementType>

<ElementType name="COMPONENT" content="eltOnly" model="open" order="many">
   <AttributeType name="backupSucceeded" dt:type="enumeration"
                  dt:values="yes no" default="no">
      <description>
      Indication of whether the component was backed up successfully
      or not.  This should be set during the BackupComplete notification
      </description>
   </AttributeType>

   <AttributeType name="componentType" dt:type="enumeration"
                  dt:values="database filegroup">
       <description>
       Indication of whether component is database or file group
       </description>
   </AttributeType>

   <attribute type="componentType" />
   <attribute type="logicalPath" />
   <attribute type="componentName" />
   <attribute type="backupSucceeded" />

   <element type="BACKUP_METADATA" minOccurs="0" maxOccurs="1" />
   <element type="ALTERNATE_LOCATION_MAPPING" minOccurs="0" maxOccurs="*" />

</ElementType>

<ElementType name="ALTERNATE_LOCATION_MAPPING" content="empty" model="closed">
  <description>
     Mapping from a location that was backed up to a location to restore to.
  </description>
   <attribute type="path" />
   <attribute type="filespec" />
   <attribute type="recursive" />
   <attribute type="alternatePath" />
</ElementType>


<ElementType name="BACKUP_METADATA" content="empty" model="closed">
   <description>
   Default metadata element for backup.  Content is a binary hex string.
   Note that the writer can store whatever he wants in the component.  This
   is just a simple default mechanism.
   </description>

   <AttributeType name="metadata" dt:type="string" required="yes">
      <description>
      Metadata to be passed on restore
      </description>
   </AttributeType>

   <attribute type="metadata" />
</ElementType>


</Schema>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\volsnap\vss\modules\backupext\ad.xml ===
<?xml version="1.0"?>
<WRITER_METADATA xmlns="x-schema:writermetadata.xml" version="1.0">
   <IDENTIFICATION
      friendlyName="Active Directory"
      writerId="F04DA480-65B9-11D1-A29F-00AA00C14882"
      instanceId="E04DA480-65B9-11D1-A29F-00AA00C14882"
      usage="BOOTABLE_STATE"
      dataSource="TRANSACTION_DB" />
   <BACKUP_LOCATIONS>
      <DATABASE componentName="NTDSDatabase" selectable="no">
          <DATABASE_FILES path="%reg:HKLM\System\CurrentControlSet\Services\NTDS\Parameters\DSA Working Directory"
	                      filespec="ntds.dit" />
          <DATABASE_LOGFILES path="%reg:HKLM\System\CurrentControlSet\Services\NTDS\Parameters\Database log files"
			      filespec="*.log" />
      </DATABASE>
      <FILE_GROUP componentName="SYSVOL" selectable="no">
          <FILE_LIST path="%systemroot%\system32\sysvol"
		     filespec="*.*" recursive="yes" />
      </FILE_GROUP>
      <EXCLUDE_FILES path="%reg:HKLM\System\CurrentControlSet\Services\NTDS\Parameters\DSA Working Directory"
                     filespec="*.bak" />

   </BACKUP_LOCATIONS>
   <RESTORE_METHOD
      method="RESTORE_IF_CAN_BE_REPLACED"
      userProcedure="http://msdn.mirosoft.com/ActiveDirectory/restore_ad.htm"
      rebootRequired="yes"/>
</WRITER_METADATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\volsnap\vss\modules\backupext\writermetadata.xml ===
<Schema name="VssWriterMetadataInfo"
        xmlns="urn:schemas-microsoft-com:xml-data"
	xmlns:dt="urn:schemas-microsoft-com:datatypes">


<AttributeType name="filespec" dt:type="string" required="yes">
   <description>
   File specification.  Can include wildcard characters ? and *
   </description>
</AttributeType>

<AttributeType name="path" dt:type="string" required="yes">
   <description>
   Path to a file.  The path can include environment variables or
   values extracted from registry keys.
   </description>
</AttributeType>


<AttributeType name="recursive" dt:type="enumeration"
               dt:values="yes no" default="no">
   <description>
   Is path specified recursive or limited to the directory that is specified.
   </description>
</AttributeType>

<AttributeType name="alternatePath" dt:type="string" required="no">
   <description>
   Alternate path in which to find the file.  Files in a file group may
   have been copied to an alternative location by the writer.  Backup should
   pick up the files from the alternative location instead of the original
   location but should restore the files to their original location
   </description>
</AttributeType>

<AttributeType name="logicalPath" dt:type="string" required="no">
   <description>
   Logical path for a database or file group.  This logical name uses backslash
   as separators to form a logical namespace hierarchy
   </description>
</AttributeType>

<AttributeType name="componentName" dt:type="string" required="yes">
   <description>
   Name used to identify a database or file group.  May be qualified by a
   logical path.
   </description>
</AttributeType>


<AttributeType name="restoreMetadata" dt:type="enumeration"
               dt:values="yes no" default="no">
   <description>
   Restore metadata exists for this database or file group.  Backup
   application should capture the restore metadata and pass it to the
   writer on restore.
   </description>
</AttributeType>

<AttributeType name="notifyOnBackupComplete" dt:type="enumeration"
               dt:values="yes no" default="no">
   <description>
   Writer should be notified when backup is complete whether this
   database or file group was successfully backed up or not.
   </description>
</AttributeType>


<AttributeType name="caption" dt:type="string" required="no">
   <description>
   Textual Description of database or file group
   </description>
</AttributeType>

<AttributeType name="icon" dt:type="string" required="no">
   <description>
   Icon associated with database or file group
   </description>
</AttributeType>

<AttributeType name="selectable" dt:type="enumeration"
               dt:values="yes no" default="yes">
   <description>
   Is this component selectable for backup or is it always backed up.
   If no, then the component is always backed up if any other components of
   the application/service are backed up.  If yes, then the
   component may be selectively backed up.
   </description>
</AttributeType>


<AttributeType name="version" dt:type="enumeration" dt:values="1.0" required="yes">
   <description>
   Version of a specific document
   </description>
</AttributeType>

<AttributeType name="writerId" dt:type="uuid" required="yes">
   <description>
   Unique id to identify the writer.  Note that this identifies the
   writer class rather than a specific instance of the writer.
   </description>
</AttributeType>

<AttributeType name="instanceId" dt:type="uuid" required="no">
   <description>
   Unique id identifying the instance of a writer during backup.  It
   has no meaning during restore.
   </description>
</AttributeType>




<ElementType name="WRITER_METADATA" content="eltOnly" model="open" order="one">
   <description>
      Information used by Backup application to backup/restore data
   </description>
   <attribute type="version" />
   <element type="IDENTIFICATION" />
   <element type="BACKUP_LOCATIONS" minOccurs="0" />
   <element type="RESTORE_METHOD" minOccurs="0" />
</ElementType>

<ElementType name="IDENTIFICATION" content="empty" model="closed">
   <description>
      Identification of a service/application backing up data
   </description>

   <AttributeType name="friendlyName" dt:type="string" required="yes">
      <description>
      Friendly name used to describe the service or application.
      </description>
   </AttributeType>

   <AttributeType name="usage" dt:type="enumeration"
	       dt:values="USER_DATA BOOTABLE_SYSTEM_STATE SYSTEM_SERVICE OTHER"
	       default="OTHER">
      <description>
      How the data associated with the writer is used.  For now we
      distinguish user data and system state.
      </description>
   </AttributeType>

   <AttributeType name="dataSource" dt:type="enumeration"
               dt:values="TRANSACTION_DB NONTRANSACTIONAL_DB OTHER"
	       default="OTHER">
      <description>
      Description of the nature of the data manager.  Currently only
      databases are identified
      </description>
   </AttributeType>

   <attribute type="instanceId" required="yes" />
   <attribute type="writerId" />
   <attribute type="friendlyName" />
   <attribute type="usage" />
   <attribute type="dataSource" />
</ElementType>

<ElementType name="BACKUP_LOCATIONS" content="eltOnly" model="closed" order="many">
   <description>
      Files to include and exclude from the backup
   </description>

   <element type="INCLUDE_FILES" minOccurs="0" />
   <element type="EXCLUDE_FILES" minOccurs="0" />
   <element type="DATABASE" minOccurs="0"/>
   <element type="FILE_GROUP" minOccurs="0" />
</ElementType>

<ElementType name="INCLUDE_FILES" content="empty">
   <description>
      Files to include in the backup, essentially files to backup if you want
      to backup this application/service
   </description>

   <attribute type="path" />
   <attribute type="filespec" />
   <attribute type="recursive" />
   <attribute type="alternatePath" />
</ElementType>

<ElementType name="EXCLUDE_FILES" content="empty">
   <description>
      Files that should always be excluded from the backup
   </description>

   <attribute type="path" />
   <attribute type="filespec" />
   <attribute type="recursive" />
</ElementType>

<ElementType name="DATABASE" content="eltOnly" model="closed" order="many">
   <description>
      List of databases of interest.  This is used to allow selective
      backup and restore of specific databases.
   </description>


   <attribute type= "logicalPath" />
   <attribute type="componentName" />
   <attribute type="caption" />
   <attribute type="icon" />
   <attribute type="restoreMetadata" />
   <attribute type="notifyOnBackupComplete" />
   <attribute type="selectable" />

   <element type="DATABASE_FILES" minOccurs="1" />
   <element type="DATABASE_LOGFILES" />
</ElementType>

<ElementType name="DATABASE_FILES" content="empty" model="closed">
   <description>
      Location of a set of database files.  Filespec can include wildcards
   </description>
   <attribute type="path" />
   <attribute type="filespec" />
</ElementType>


<ElementType name="DATABASE_LOGFILES" content="empty" model="closed">
   <description>
      Location of a set of database log files.  Filespec can include
      wildcards.  Indication of whether database log files are truncated.
   </description>

   <attribute type="path" />
   <attribute type="filespec" />
</ElementType>

<ElementType name="FILE_GROUP" content="eltOnly" model="closed" order="many">
   <description>
      A named group of files.  Used to group sets of files into a group
      that are backed up together
   </description>

   <attribute type="logicalPath" />
   <attribute type="componentName" />
   <attribute type="caption" />
   <attribute type="icon" />
   <attribute type="restoreMetadata" />
   <attribute type="notifyOnBackupComplete" />
   <attribute type="selectable" />

   <element type="FILE_LIST" />
</ElementType>

<ElementType name="FILE_LIST" content="empty" model="closed">
   <description>
      Location of a set of files in a FILE_GROUP.  Filespec can include
      wildcards.
   </description>

   <attribute type="path" />
   <attribute type="filespec" />
   <attribute type="recursive" />
   <attribute type="alternatePath" />
</ElementType>


<ElementType name="RESTORE_METHOD" content="eltOnly" model="open" order="many">
  <description>
  How restore should be performed.  Includes specification of how files
  should be restored as well as special steps that should occur in order
  to complete the restore.
  </description>

  <AttributeType name="method" dt:type="enumeration"
	         required="yes"
	         dt:values="RESTORE_IF_NONE_THERE
	                    RESTORE_IF_CAN_BE_REPLACED
	                    STOP_RESTART_SERVICE
	                    REPLACE_AT_REBOOT
	                    RESTORE_TO_ALTERNATE_LOCATION
			    CUSTOM">
      <description>
       RESTORE_IF_NONE_THERE: i.e., can restore data if it is not at the
          location where it was backed up from.  This essentially allows
	  data to be restored to a clean system
       RESTORE_IF_CAN_BE_REPLACED: Restore data if all of the files can
          be replaced in the orgiginal backup location.  Fails if any of
	  the files are open.  If an alternate location is provided, files
	  will be placed there if they cannot be restored to their original
	  location.
       STOP_RESTART_SERVICE: stop service (service attribute must be
          specified). Restore files to original backup location.
	  Restart service.  Fails if any of the files are open after the
	  service is stopped.
       REPLACE_AT_REBOOT: Restore files to a temporary location.  Use
          MoveFileEx to replace the files at reboot.
       RESTORE_TO_ALTERNATIVE_LOCATION: Restore files to an alternate
          location.  Typically writerRestore will indicate that the writer
	  will participate in the restore process
       CUSTOM: restore process cannot be expressed using this specification
       </description>
   </AttributeType>

   <AttributeType name="service" dt:type="string" required="no">
      <description>
      Must be specified if method="STOP_RESTART_SERVICE", indicates
      service to be stopped before restoring files.
      </description>
   </AttributeType>

   <AttributeType name="writerRestore" dt:type="enumeration"
                  dt:values="always never ifReplaceFails" default="never">
      <description>
      Whether writer should be invoked after files are restored to
      disk.  Options are always, never, and ifReplaceFails.  The latter means
      that the files will be restored to their original location.  If one
      or more of the files cannot be replaced, then the files will be
      restored to an alternate location (must be specified via
      ALTERNATE_LOCATION_MAPPING.  After the files are restored, the writer
      is invoked.
      </description>
   </AttributeType>

  <AttributeType name="userProcedure" dt:type="uri" required="no">
     <description>
     Description of actions that the user should perform to restore the files.
     The format of this string has yet to be determined.
     </description>
  </AttributeType>

  <AttributeType name="rebootRequired" dt:type="enumeration"
                 dt:values="yes no" default="no" >
     <description>
     Should a reboot be performed after restoring the data for this
     writer
     </description>
  </AttributeType>

  <attribute type="method" />
  <attribute type="service" />
  <attribute type="writerRestore" />
  <attribute type="userProcedure" />
  <attribute type="rebootRequired" />

  <element type="ALTERNATE_LOCATION_MAPPING" minOccurs="0" maxOccurs="*" />
</ElementType>

<ElementType name="ALTERNATE_LOCATION_MAPPING" content="empty" model="closed">
  <description>
     Mapping from a location that was backed up to a location to restore to.
  </description>
   <attribute type="path" />
   <attribute type="filespec" />
   <attribute type="recursive" />
   <attribute type="alternatePath" />
</ElementType>



</Schema>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\volsnap\vss\server\modules\backupext\componentmetadata.xml ===
<Schema name="VssComponentMetadata"
        xmlns="urn:schemas-microsoft-com:xml-data"
	xmlns:dt="urn:schemas-microsoft-com:datatypes">


<AttributeType name="filespec" dt:type="string" required="yes">
   <description>
   File specification.  Can include wildcard characters ? and *
   </description>
</AttributeType>

<AttributeType name="path" dt:type="string" required="yes">
   <description>
   Path to a file.  The path can include environment variables or
   values extracted from registry keys.
   </description>
</AttributeType>


<AttributeType name="recursive" dt:type="enumeration"
               dt:values="yes no" default="no">
   <description>
   Is path specified recursive or limited to the directory that is specified.
   </description>
</AttributeType>

<AttributeType name="alternatePath" dt:type="string" required="no">
   <description>
   Alternate path in which to find the file.  Files in a file group may
   have been copied to an alternative location by the writer.  Backup should
   pick up the files from the alternative location instead of the original
   location but should restore the files to their original location
   </description>
</AttributeType>

<AttributeType name="logicalPath" dt:type="string" required="no">
   <description>
   Logical path for a database or file group.  This logical name uses backslash
   as separators to form a logical namespace hierarchy
   </description>
</AttributeType>

<AttributeType name="componentName" dt:type="string" required="yes">
   <description>
   Name used to identify a database or file group.  May be qualified by a
   logical path.
   </description>
</AttributeType>


<AttributeType name="version" dt:type="enumeration" dt:values="1.0" required="yes">
   <description>
   Version of a specific document
   </description>
</AttributeType>

<AttributeType name="writerId" dt:type="uuid" required="yes">
   <description>
   Unique id to identify the writer.  Note that this identifies the
   writer class rather than a specific instance of the writer.
   </description>
</AttributeType>

<AttributeType name="instanceId" dt:type="uuid" required="no">
   <description>
   Unique id identifying the instance of a writer during backup.  It
   has no meaning during restore.
   </description>
</AttributeType>


<ElementType name="BACKUP_COMPONENTS" content="eltOnly" model="closed" order="many">
   <description>
   Components that are backed up or restored.
   Used to communicate between the writer and the backup application during
   backup and restore.
   </description>

   <AttributeType name="selectComponents" dt:type="enumeration"
                       dt:values="yes no" default="no">
      <description>
      Does the backup application select individual components or
      does it backup entire volumes
      </description>
   </AttributeType>

   <AttributeType name="bootableSystemStateBackup" dt:type="enumeration"
		  dt:values = "yes no" default="no" >
      <description>
      Is backup saving the bootable state of the system.
      </description>
   </AttributeType>

   <AttributeType name="backupType" dt:type="enumeration"
                  dt:values="full differential incremental log other"
		  required="yes">
      <description>
      Type of backup being performed.
      </description>
   </AttributeType>

   <AttributeType name="partialFileSupport" dt:type="enumeration"
		  dt:values= "yes no" default="no" >
       <description>
       Indicates whether the requestor is capable of backing up and restoring
       portions of files.  If no, then the writer should never generate
       PARTIAL_FILE or DIRECTED_RESTORE elements.
       Only entire files can be backed up or restored.
       </description>
   </AttributeType>


   <attribute type="version" />
   <attribute type="selectComponents" />
   <attribute type="bootableSystemStateBackup" />
   <attribute type="backupType" />
   <attribute type="partialFileSupport" />

   <element type= "WRITER_COMPONENTS" />
   <element type= "SNAPSHOT_SET_DESCRIPTION" minOccurs="0" maxOccurs="1" />
</ElementType>

<ElementType name="WRITER_COMPONENTS" content="eltOnly" model="closed"
             order="many">
   <description>
   Components that are backed up and restored that are associated with a
   specific writer instance
   </description>

   <attribute type="writerId" />
   <attribute type="instanceId" />

   <element type="COMPONENT" />
</ElementType>

<ElementType name="COMPONENT" content="eltOnly" model="open" order="many">
   <AttributeType name="backupSucceeded" dt:type="enumeration"
                  dt:values="yes no" default="no">
      <description>
      Indication of whether the component was backed up successfully
      or not.  This should be set during the BackupComplete notification
      </description>
   </AttributeType>

   <AttributeType name="componentType" dt:type="enumeration"
                  dt:values="database filegroup">
       <description>
       Indication of whether component is database or file group
       </description>
   </AttributeType>

   <AttributeType name="backupStamp" dt:type="string" required="no">
       <description>
       This string attribute contains the identifier assigned to the
       backup by the writer.  The attribute is set by the writer either
       during the PrepareBackup or PostSnapshot event.
       </description>
    </AttributeType>

   <AttributeType name="previousBackupStamp" dt:type="string" required="no">
       <description>
       In the case of an incremental or differential backup, this identifies
       the backup from which differences are compouted.  This attribute is
       set by the requestor prior to the PrepareBackup event.
       </description>
   </AttributeType>


   <AttributeType name="selectedForRestore" dt:type="enumeration"
                  dt:values="yes no"  default="no" >
       <description>
       This yes/no attribute is set by the request prior to calling
       PreRestore and indicates whether the component is being restored
       or not.
       </description>
   </AttributeType>

   <AttributeType name="additionalRestores" dt:type="enumeration"
                  dt:values="yes no" default="no" >
       <description>
       This yes/no attribute is set by the requestor prior to calling
       PreRestore and indicates whether additional restores of the
       component will follow (i.e., ull restore followed by log restores
       </description>
   </AttributeType>

   <AttributeType name="restoreTarget" dt:type="enumeration"
		  dt:values="original alternate new directed"
		  default="original" >
       <description>
       This enumerated attribute is set by the writer during PreRestore
       and indicates whether the files for the component should be restored
       to their original location, alternate location (as expressed by
       ALTERNATE_LOCATION_MAPPING elements in the metadata), new location
       (as expressed by RESTORE_TARGET elements created by the writer) or
       should be partially restored (as expressed by the DIRECTED_TARGET
       element created by the writer.
       </description>

   </AttributeType>

   <AttributeType name="preRestoreFailureMsg" dt:type="string" required="no">
       <description>
       This attirbute is set by the writer during the PreRestore event if
       the preRestore operation failed for some reason.  It gives a textual
       description of why the preRestore failed.
       </description>
   </AttributeType>


   <AttributeType name="filesRestored" dt:type="enumeration"
		  dt:values= "none all failed" default="all" >
       <description>
       This attribute is set by the requestor after restoring files
       for the component (i.e., between the PreRestore and PostRestore
       events).  Yes indicates that the files were restored successfully;
       no indicates that the files were not restored and the original files
       are intact; failed indicates that the original files were partially
       overwritten and are therefore corrupt.  Note that the failed status
       can only occur in the situation of a restore of a file where only
       part of the data is restored (DIRECTED_RESTORE) or where only part
       of a file is backed up and restored (e.g., as part of a differential
       backup).  In these cases a failed restore occurs if some of the data
       to be restored is written to the file but not all.  In this case,
       the original copy of the file no long exists and the copy on tape is
       not complete and therefore cannot be used to create a consistent
       copy.  The only option is to use a previous full backup to restore
       the data.  Note that the "failed" indication can be used to indicate
       that some, but no all of the files of a component were restored.  The
       requestore is required to either restore all the files of a component
       or none of the files.  However, there are situations where this is
       not possible, and the restoration of a component has failed, but
       cannot be completely undone.
       </description>
   </AttributeType>

   <AttributeType name="postRestoreFailureMsg" dt:type="string" required="no">
       <description>
       This string attribute is set by the writer during the PostRestore
       event.  It is a text message indicating why the restore failed.
       </description>
   </AttributeType>

   <AttributeType name="backupOptions" dt:type="string" required="no">
       <description>
       This is a private string passed between the requestor and the writer
       to control the backup of the component.  It should be set by the
       requestor prior to the PrepareBackup event.
       </description>

   </AttributeType>

   <AttributeType name="restoreOptions" dt:type="string" required = "no">
       <description>
       This is a private string passsed between to requestor and the writer
       to control the restore of a component.  It should be set by the
       requestor prior to the PreRestore event.
       </description>
   </AttributeType>





   <attribute type="componentType" />
   <attribute type="logicalPath" />
   <attribute type="componentName" />
   <attribute type="backupSucceeded" />
   <attribute type="backupOptions" />
   <attribute type="restoreOptions" />
   <attribute type="backupStamp" />
   <attribute type="previousBackupStamp" />
   <attribute type="selectedForRestore" />
   <attribute type="additionalRestores" />
   <attribute type="restoreTarget" />
   <attribute type="preRestoreFailureMsg" />
   <attribute type="filesRestored" />
   <attribute type="postRestoreFailureMsg" />


   <element type="ALTERNATE_LOCATION_MAPPING" minOccurs="0" maxOccurs="*" />
   <element type="BACKUP_METADATA" minOccurs="0" maxOccurs="1" />
   <element type="RESTORE_METADATA" minOccurs="0" maxOccurs="1" />
   <element type="RESTORE_TARGET" minOccurs="0" maxOccurs="*" />
   <element type="DIRECTED_TARGET" minOccurs="0" maxOccurs="*" />
   <element type="PARTIAL_FILE" minOccurs="0" maxOccurs="*" />
   <element type="RESTORE_SUBCOMPONENT" minOccurs="0" maxOccurs="*" />

</ElementType>

<ElementType name="ALTERNATE_LOCATION_MAPPING" content="empty" model="closed">
  <description>
     Mapping from a location that was backed up to a location to restore to.
  </description>
   <attribute type="path" />
   <attribute type="filespec" />
   <attribute type="recursive" />
   <attribute type="alternatePath" />
</ElementType>


<ElementType name="BACKUP_METADATA" content="empty" model="closed">
   <description>
   Default metadata element for backup.  Content is a binary hex string.
   Note that the writer can store whatever he wants in the component.  This
   is just a simple default mechanism.
   </description>

   <AttributeType name="metadata" dt:type="string" required="yes">
      <description>
      Metadata to be passed on restore
      </description>
   </AttributeType>

   <attribute type="metadata" />
</ElementType>


<ElementType name="RESTORE_METADATA" content="empty" model="closed">
   <description>
   Default metadata element for passing information from the writer's
   PreRestore event to the writer's PostRestore event.  The data is
   opaque to the requestor.
   </description>

   <AttributeType name="metadata" dt:type="string" required="yes">
      <description>
      Metadata to be passed from PreRestore to PostRestore.
      </description>
   </AttributeType>

   <attribute type="metadata" />
</ElementType>


<ElementType name="RESTORE_TARGET" content="empty" model="closed">
   <description>
   This element in a COMPONENT should be supplied if the value of the
   restoreTarget attribute of the COMPONENT is "new".  It supplies a
   mapping from a the original location of the file to the location where
   the file should be restored.  There may be multiple RESTORE_TARGET
   elements within a component.
   </description>

   <attribute type="path" />
   <attribute type="filespec" />
   <attribute type="recursive" />
   <attribute type="alternatePath" />
</ElementType>

<ElementType name="DIRECTED_TARGET" content="empty" model="closed">
   <description>
   This element in a COMPONENT should be should be supplied if the value
   of the restoreTarget attribute of the COMPONENT is "directed".  It
   is intended to support partial restoration of files or potentially
   how files should be reorganized upon restore.  There may be multiple
   DIRECTED_TARGET elements within a component.
   </description>

   <AttributeType name="targetPath" dt:type="string" required="no">
       <description>
       This is the target location of the file that is to be written
       by the requestor.  If this attribute is not specified then
       the targetPath is assumed to be the same as the original path.
       </description>
   </AttributeType>

   <AttributeType name="targetFilespec" dt:type="string" required="no">
       <description>
       This is the name of the file that is to be written
       by the requestor.  If this is not specified then the target filename
       is assumed to be the same as the original file name.  Note that if
       both the targetPath and targetFilespec are not specified then the
       original file is overwritten.
       </description>
   </AttributeType>


   <AttributeType name="sourceRanges" dt:type="string" required ="yes">
       <description>
       This is a string of the form (offset:cb ...) where each offset
       is the byte offset to start reading data and cb is the length
       of the data to be read (each is a 64 bit integer).  The ranges
       may not overlap and must be monotonically increasing.
       </description>
   </AttributeType>

   <AttributeType name="targetRanges" dt:type="string" required="yes">
       <description>
       This is a string of the form (offset:cb ...) where each offset
       is the byte offset to start wrting data and cb is the length of
       the data to be written (each is a 64 bit integer).  The ranges
       may not overlap and must be monotonically increasing.
       </description>
   </AttributeType>


   <attribute type="path" />
   <attribute type="filespec" />
   <attribute type="targetPath" />
   <attribute type="targetFilespec" />
   <attribute type="sourceRanges" />
   <attribute type="targetRanges" />

</ElementType>

<ElementType name="PARTIAL_FILE" content="empty" model="closed">
   <description>
   This element in a COMPONENT is supplied by the writer during the
   PostRestore event.  It indicates that only a portion of the file
   should be backed up.  There may be multiple PARTIAL_FILE elements
   within a single COMPONENT.
   </description>

   <AttributeType name="ranges" dt:type="string" required="no">
       <description>
       This range list has the form (offset:length ...) where offset is
       the byte offset in the file to be backed up and length is the length
       of the data to be backed up.  Both are 64 bit integers.  The ranges
       must be monotonically increasing and must not overlap.  If the
       rangelist is not specified then the entire file should be backed up.
       </description>
   </AttributeType>

   <AttributeType name="metadata" dt:type="string" required="no">
       <description>
       This is metadata used by the writer for restoring the partial
       backup.  It might for example, include the total size of the
       file to be restored.
       </description>
   </AttributeType>

   <attribute type="path" />
   <attribute type="filespec" />
   <attribute type="ranges" />
   <attribute type="metadata" />


</ElementType>


<ElementType name="RESTORE_SUBCOMPONENT" content="empty" model="closed">
   <description>
   This element in a COMPONENT is added by the requestore prior to the
   PreRestore event.  It allows a subcomponent of a backed up component to
   be restored.
   </description>

   <AttributeType name="repair" dt:type="enumeration"
	     	  dt:values="yes no" default="no">
       <description>
       This indicates that the purpose of the restore is to repair one or more files
       of the component.  The writer is responsible for identifying what
       is to be restored using a DIRECTED_TARGET element.
       </description>

   </AttributeType>

   <attribute type="logicalPath" />
   <attribute type="componentName" />
   <attribute type="repair" />

</ElementType>



<ElementType name="SNAPSHOT_SET_DESCRIPTION" content="eltOnly" model="closed">
   <description>
   This describes a snapshot, including the snapshot set id as well as
   the volume information for the snapshotted volumes
   </description>

   <AttributeType name="snapshotSetId" dt:type="uuid" required="yes">
       <description>
       this is the unique identifier for the snapshot
       </description>
   </AttributeType>

   <AttributeType name="context" dt:type="ui4" required="yes">
       <description>
       this is the context used to create the snapshot
       </description>
   </AttributeType>

   <AttributeType name="metadata" dt:type="string" required="no">
       <description>
       this is private metadata about the snapshot set
       </description>
   </AttributeType>

   <AttributeType name="description" dt:type="string" required="no">
       <description>
       this is a user description of the snapshot
       </description>
   </AttributeType>


   <attribute type="snapshotSetId" />
   <attribute type="context" />
   <attribute type="description" />
   <attribute type="metadata" />
   <element type="SNAPSHOT_DESCRIPTION" minOccurs="0" maxOccurs="*" />
</ElementType>


<ElementType name="SNAPSHOT_DESCRIPTION" content="eltOnly" model="closed">
   <description>
   This is the description of a snapshotted volume
   </description>

   <AttributeType name="snapshotId" dt:type="uuid" required="yes" >
       <description>
       This is the unique id of the snapshotted volume
       </description>
   </AttributeType>

   <AttributeType name="originatingMachine" dt:type="string" required="yes" >
       <description>
       This is the machine where the original volume was snapshotted
       </description>
   </AttributeType>

   <AttributeType name="serviceMachine" dt:type="string" required="yes" >
       <description>
       This is the Application Server machine (i.e. where the writers were notified)
       </description>
   </AttributeType>

   <AttributeType name="originalVolumeName" dt:type="string" required ="yes">
       <description>
       This is the original name of the volume.
       </description>
   </AttributeType>

   <AttributeType name="snapshotAttributes" dt:type="ui4" required="yes">
       <description>
       this describes the actual snapshot attributes (as defined in
       VSS_VOLUME_SNAPSHOT_ATTRIBUTES)
       </description>
   </AttributeType>

   <AttributeType name="deviceName" dt:type="string" required="no" >
	<description>
	This is the internal device name for the snapshotted volume.  This
	can be used if the snapshot is not exposed.
	</description>
   </AttributeType>

   <AttributeType name="exposedName" dt:type="string" required="no" >
       <description>
       This is the exposed name of the snapshot volume
       </description>
   </AttributeType>

   <AttributeType name="exposedPath" dt:type="string" required="no">
       <description>
       If only a subdirectory is exposed, this is the path to that
       subdirectory.
       </description>
   </AttributeType>

   <AttributeType name="providerId" dt:type="uuid" required="yes">
       <description>
       This is the provider that surfaced the snapshot
       </description>
   </AttributeType>

   <AttributeType name="timestamp" dt:type="ui8" required="yes">
       <description>
       this is when the snapshot set was created.
       </description>
   </AttributeType>



   <attribute type="snapshotId" />
   <attribute type="providerId" />
   <attribute type="snapshotAttributes" />
   <attribute type="originatingMachine" />
   <attribute type="serviceMachine" />
   <attribute type="originalVolumeName" />
   <attribute type="timestamp" />
   <attribute type="deviceName" />
   <attribute type="exposedPath" />
   <attribute type="exposedName" />
   <element type="LUN_MAPPING" minOccurs="0" maxOccurs="*"/>
</ElementType>

<ElementType name="LUN_MAPPING" content="eltOnly" model="closed">
    <description>
    Actual mapping of source lun to a destination lun
    </description>

    <element type="SOURCE_LUN" minOccurs="1" maxOccurs="1" />
    <element type="DESTINATION_LUN" minOccurs="1" maxOccurs="1" />
    <element type="DISK_EXTENT" minOccurs="1" maxOccurs="*" />
</ElementType>

<ElementType name="DISK_EXTENT" content="empty" model="closed">
    <description>
    A particular disk extent on a LUN
    </description>

    <AttributeType name="startingOffset" dt:type="ui8" required="yes">
        <description>
        starting offset of the extent in sectors
	</description>
    </AttributeType>

    <AttributeType name="extentLength" dt:type="ui8" required="yes">
        <description>
	length of the extent in sectors
	</description>
    </AttributeType>

    <attribute type="startingOffset" />
    <attribute type="extentLength" />
</ElementType>

<ElementType name="SOURCE_LUN" content="eltOnly" model="closed">
   <description>
   The information for the lun on the originating volume
   </description>

   <element type="LUN_INFORMATION" />
</ElementType>

<ElementType name="DESTINATION_LUN" content="eltOnly" model="closed">
   <description>
   The information for the lun on the snapshotted volume
   </description>

   <element type="LUN_INFORMATION" />
</ElementType>

<ElementType name="INTERCONNECT_DESCRIPTION" content="empty" model="closed">
   <description>
   An interconnect address including the address type
   </description>

   <AttributeType name="interconnectAddressType" dt:type="enumeration"
	     	  dt:values="FCFS FCPH FCPH3 MAC" required="yes" >
       <description>
       interconnect address type.  Describes type of the interconnect
       address stored in the interconnectAddress attribute
       </description>
   </AttributeType>

   <AttributeType name="port" dt:type="string" required="no">
      <description>
      Port through which the interconnect address is referred to.  Note
      that the same device may have different interconnect addresses through
      different ports.
      </description>
   </AttributeType>

   <AttributeType name="interconnectAddress" dt:type="string" required="yes">
       <description>
       World Wide name or other interconnect address of the device
       </description>
   </AttributeType>

   <attribute type="interconnectAddressType" />
   <attribute type="port" />
   <attribute type="interconnectAddress" />

</ElementType>

<ElementType name="LUN_INFORMATION" content="eltOnly" model="closed">
    <description>
    enough of the location and name of the lun to transport it. TBD
    </description>

   <AttributeType name="busType" dt:type="enumeration"
	      dt:values="Scsi Atapi Ata 1394 Ssa Fibre Usb RAID"
	      required="yes" >
       <description>
       Type of bus that the LUN is attached to
       </description>
   </AttributeType>

   <AttributeType name="deviceType" dt:type="ui1" required="yes" >
       <description>
       SCSI-2 device type
       </description>
   </AttributeType>

   <AttributeType name="deviceTypeModifier" dt:type="ui1" required="yes">
       <description>
       SCSI-2 device type modifier (if any) - this may be 0
       </description>
   </AttributeType>

   <AttributeType name="commandQueueing" dt:type="enumeration"
                  dt:values="yes no" default="no" >

       <description>
       Flag indicating whether the device can support mulitple outstanding
       commands.  The actual synchronization in this case is the
       responsibility of the port driver.
       </description>
   </AttributeType>

   <AttributeType name="vendorId" dt:type="string" required="no" >
       <description>
       Optional string identifying the vendor
       </description>
   </AttributeType>

   <AttributeType name="productId" dt:type="string" required="no" >
       <description>
       Optional string identifying the product
       </description>
   </AttributeType>

   <AttributeType name="productRevision" dt:type="string" required="no" >
       <description>
       Optional product revision information
       </description>
   </AttributeType>

   <AttributeType name="serialNumber" dt:type="string" required="no" >
       <description>
       Optional serial number of the device
       </description>
   </AttributeType>

   <AttributeType name="diskSignature" dt:type="uuid" required="yes">
       <description>
       Disk signature or GUID.  If a signature than all but the lower
       32 bits of the GUID are 0.
       </description>
   </AttributeType>


   <AttributeType name="deviceIdentification" dt:type="string" required="yes" >
       <description>
       UUENCODED binary for the device identification page as
       defined by the STORAGE_DEVICE_ID_DESCRIPTOR structure.  This contains
       the vendor id, EUI-64 id, FC-PH name, and vendor specific data.
       </description>
   </AttributeType>

   <element type="INTERCONNECT_DESCRIPTION" minOccurs="0" maxOccurs="*"/>

   <attribute type="deviceType" />
   <attribute type="deviceTypeModifier" />
   <attribute type="commandQueueing" />
   <attribute type="busType" />
   <attribute type="vendorId" />
   <attribute type="productId" />
   <attribute type="productRevision" />
   <attribute type="serialNumber" />
   <attribute type="diskSignature" />
   <attribute type="deviceIdentification" />

</ElementType>







</Schema>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\storage\volsnap\vss\server\modules\backupext\writermetadata.xml ===
<Schema name="VssWriterMetadataInfo"
        xmlns="urn:schemas-microsoft-com:xml-data"
	xmlns:dt="urn:schemas-microsoft-com:datatypes">


<AttributeType name="filespec" dt:type="string" required="yes">
   <description>
   File specification.  Can include wildcard characters ? and *
   </description>
</AttributeType>

<AttributeType name="path" dt:type="string" required="yes">
   <description>
   Path to a file.  The path can include environment variables or
   values extracted from registry keys.
   </description>
</AttributeType>


<AttributeType name="recursive" dt:type="enumeration"
               dt:values="yes no" default="no">
   <description>
   Is path specified recursive or limited to the directory that is specified.
   </description>
</AttributeType>

<AttributeType name="alternatePath" dt:type="string" required="no">
   <description>
   Alternate path in which to find the file.  Files in a file group may
   have been copied to an alternative location by the writer.  Backup should
   pick up the files from the alternative location instead of the original
   location but should restore the files to their original location
   </description>
</AttributeType>

<AttributeType name="logicalPath" dt:type="string" required="no">
   <description>
   Logical path for a database or file group.  This logical name uses backslash
   as separators to form a logical namespace hierarchy
   </description>
</AttributeType>

<AttributeType name="componentName" dt:type="string" required="yes">
   <description>
   Name used to identify a database or file group.  May be qualified by a
   logical path.
   </description>
</AttributeType>


<AttributeType name="restoreMetadata" dt:type="enumeration"
               dt:values="yes no" default="no">
   <description>
   Restore metadata exists for this database or file group.  Backup
   application should capture the restore metadata and pass it to the
   writer on restore.
   </description>
</AttributeType>

<AttributeType name="notifyOnBackupComplete" dt:type="enumeration"
               dt:values="yes no" default="no">
   <description>
   Writer should be notified when backup is complete whether this
   database or file group was successfully backed up or not.
   </description>
</AttributeType>


<AttributeType name="caption" dt:type="string" required="no">
   <description>
   Textual Description of database or file group
   </description>
</AttributeType>

<AttributeType name="icon" dt:type="string" required="no">
   <description>
   Icon associated with database or file group
   </description>
</AttributeType>

<AttributeType name="selectable" dt:type="enumeration"
               dt:values="yes no" default="yes">
   <description>
   Is this component selectable for backup or is it always backed up.
   If no, then the component is always backed up if any other components of
   the application/service are backed up.  If yes, then the
   component may be selectively backed up.
   </description>
</AttributeType>


<AttributeType name="version" dt:type="enumeration" dt:values="1.0" required="yes">
   <description>
   Version of a specific document
   </description>
</AttributeType>

<AttributeType name="writerId" dt:type="uuid" required="yes">
   <description>
   Unique id to identify the writer.  Note that this identifies the
   writer class rather than a specific instance of the writer.
   </description>
</AttributeType>

<AttributeType name="instanceId" dt:type="uuid" required="no">
   <description>
   Unique id identifying the instance of a writer during backup.  It
   has no meaning during restore.
   </description>
</AttributeType>




<ElementType name="WRITER_METADATA" content="eltOnly" model="open" order="one">
   <description>
      Information used by Backup application to backup/restore data
   </description>
   <attribute type="version" />
   <element type="IDENTIFICATION" />
   <element type="BACKUP_LOCATIONS" minOccurs="0" />
   <element type="RESTORE_METHOD" minOccurs="0" />
</ElementType>

<ElementType name="IDENTIFICATION" content="empty" model="closed">
   <description>
      Identification of a service/application backing up data
   </description>

   <AttributeType name="friendlyName" dt:type="string" required="yes">
      <description>
      Friendly name used to describe the service or application.
      </description>
   </AttributeType>

   <AttributeType name="usage" dt:type="enumeration"
	       dt:values="USER_DATA BOOTABLE_SYSTEM_STATE SYSTEM_SERVICE OTHER"
	       default="OTHER">
      <description>
      How the data associated with the writer is used.  For now we
      distinguish user data and system state.
      </description>
   </AttributeType>

   <AttributeType name="dataSource" dt:type="enumeration"
               dt:values="TRANSACTION_DB NONTRANSACTIONAL_DB OTHER"
	       default="OTHER">
      <description>
      Description of the nature of the data manager.  Currently only
      databases are identified
      </description>
   </AttributeType>

   <attribute type="instanceId" required="yes" />
   <attribute type="writerId" />
   <attribute type="friendlyName" />
   <attribute type="usage" />
   <attribute type="dataSource" />
</ElementType>

<ElementType name="BACKUP_LOCATIONS" content="eltOnly" model="closed" order="many">
   <description>
      Files to include and exclude from the backup
   </description>

   <element type="INCLUDE_FILES" minOccurs="0" />
   <element type="EXCLUDE_FILES" minOccurs="0" />
   <element type="DATABASE" minOccurs="0"/>
   <element type="FILE_GROUP" minOccurs="0" />
</ElementType>

<ElementType name="INCLUDE_FILES" content="empty">
   <description>
      Files to include in the backup, essentially files to backup if you want
      to backup this application/service
   </description>

   <attribute type="path" />
   <attribute type="filespec" />
   <attribute type="recursive" />
   <attribute type="alternatePath" />
</ElementType>

<ElementType name="EXCLUDE_FILES" content="empty">
   <description>
      Files that should always be excluded from the backup
   </description>

   <attribute type="path" />
   <attribute type="filespec" />
   <attribute type="recursive" />
</ElementType>

<ElementType name="DATABASE" content="eltOnly" model="closed" order="many">
   <description>
      List of databases of interest.  This is used to allow selective
      backup and restore of specific databases.
   </description>


   <attribute type= "logicalPath" />
   <attribute type="componentName" />
   <attribute type="caption" />
   <attribute type="icon" />
   <attribute type="restoreMetadata" />
   <attribute type="notifyOnBackupComplete" />
   <attribute type="selectable" />

   <element type="DATABASE_FILES" minOccurs="1" />
   <element type="DATABASE_LOGFILES" />
</ElementType>

<ElementType name="DATABASE_FILES" content="empty" model="closed">
   <description>
      Location of a set of database files.  Filespec can include wildcards
   </description>
   <attribute type="path" />
   <attribute type="filespec" />
</ElementType>


<ElementType name="DATABASE_LOGFILES" content="empty" model="closed">
   <description>
      Location of a set of database log files.  Filespec can include
      wildcards.  Indication of whether database log files are truncated.
   </description>

   <attribute type="path" />
   <attribute type="filespec" />
</ElementType>

<ElementType name="FILE_GROUP" content="eltOnly" model="closed" order="many">
   <description>
      A named group of files.  Used to group sets of files into a group
      that are backed up together
   </description>

   <attribute type="logicalPath" />
   <attribute type="componentName" />
   <attribute type="caption" />
   <attribute type="icon" />
   <attribute type="restoreMetadata" />
   <attribute type="notifyOnBackupComplete" />
   <attribute type="selectable" />

   <element type="FILE_LIST" />
</ElementType>

<ElementType name="FILE_LIST" content="empty" model="closed">
   <description>
      Location of a set of files in a FILE_GROUP.  Filespec can include
      wildcards.
   </description>

   <attribute type="path" />
   <attribute type="filespec" />
   <attribute type="recursive" />
   <attribute type="alternatePath" />
</ElementType>


<ElementType name="RESTORE_METHOD" content="eltOnly" model="open" order="many">
  <description>
  How restore should be performed.  Includes specification of how files
  should be restored as well as special steps that should occur in order
  to complete the restore.
  </description>

  <AttributeType name="method" dt:type="enumeration"
	         required="yes"
	         dt:values="RESTORE_IF_NONE_THERE
	                    RESTORE_IF_CAN_BE_REPLACED
	                    STOP_RESTART_SERVICE
	                    REPLACE_AT_REBOOT
	                    RESTORE_TO_ALTERNATE_LOCATION
			    CUSTOM">
      <description>
       RESTORE_IF_NONE_THERE: i.e., can restore data if it is not at the
          location where it was backed up from.  This essentially allows
	  data to be restored to a clean system
       RESTORE_IF_CAN_BE_REPLACED: Restore data if all of the files can
          be replaced in the orgiginal backup location.  Fails if any of
	  the files are open.  If an alternate location is provided, files
	  will be placed there if they cannot be restored to their original
	  location.
       STOP_RESTART_SERVICE: stop service (service attribute must be
          specified). Restore files to original backup location.
	  Restart service.  Fails if any of the files are open after the
	  service is stopped.
       REPLACE_AT_REBOOT: Restore files to a temporary location.  Use
          MoveFileEx to replace the files at reboot.
       RESTORE_TO_ALTERNATIVE_LOCATION: Restore files to an alternate
          location.  Typically writerRestore will indicate that the writer
	  will participate in the restore process
       CUSTOM: restore process cannot be expressed using this specification
       </description>
   </AttributeType>

   <AttributeType name="service" dt:type="string" required="no">
      <description>
      Must be specified if method="STOP_RESTART_SERVICE", indicates
      service to be stopped before restoring files.
      </description>
   </AttributeType>

   <AttributeType name="writerRestore" dt:type="enumeration"
                  dt:values="always never ifReplaceFails" default="never">
      <description>
      Whether writer should be invoked after files are restored to
      disk.  Options are always, never, and ifReplaceFails.  The latter means
      that the files will be restored to their original location.  If one
      or more of the files cannot be replaced, then the files will be
      restored to an alternate location (must be specified via
      ALTERNATE_LOCATION_MAPPING.  After the files are restored, the writer
      is invoked.
      </description>
   </AttributeType>

  <AttributeType name="userProcedure" dt:type="uri" required="no">
     <description>
     Description of actions that the user should perform to restore the files.
     The format of this string has yet to be determined.
     </description>
  </AttributeType>

  <AttributeType name="rebootRequired" dt:type="enumeration"
                 dt:values="yes no" default="no" >
     <description>
     Should a reboot be performed after restoring the data for this
     writer
     </description>
  </AttributeType>

  <attribute type="method" />
  <attribute type="service" />
  <attribute type="writerRestore" />
  <attribute type="userProcedure" />
  <attribute type="rebootRequired" />

  <element type="ALTERNATE_LOCATION_MAPPING" minOccurs="0" maxOccurs="*" />
</ElementType>

<ElementType name="ALTERNATE_LOCATION_MAPPING" content="empty" model="closed">
  <description>
     Mapping from a location that was backed up to a location to restore to.
  </description>
   <attribute type="path" />
   <attribute type="filespec" />
   <attribute type="recursive" />
   <attribute type="alternatePath" />
</ElementType>



</Schema>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\tpg\hwx\inferno\src\export.txt ===
Under the Hood
Matt Pietrek
Microsoft Systems Journal. Copyright  1995 

As it turns out, nearly all Win32" functions are defined as __stdcall functions. Aside from dictating a parameter-passing convention, 
the names of __stdcall functions are modified by Visual C++ in a fashion that neither Delphi nor Borland C++ recognize. Specifically, 
Visual C++ adds "_" onto the beginning and "@xxx" onto the end of the __stdcall function. The xxx is actually the size of the stack 
arguments passed to the function. Thus, MessageBeep(UINT uType) becomes _MessageBeep@4. Likewise, GetMessageA, which takes 4 parameters, 
becomes _GetMessageA@16. Some programmers refer to this renaming as __stdcall mangling, but it's definitely different from C++ name mangling.

Visual C++ expects the names of __stdcall functions to be mangled, while Borland compilers don't. Thus, the Delphi-produced OBJ has an 
external reference to just MessageBeep. MessageBeep isn't in the USER32.LIB import library that Visual C++ uses, but the public symbol 
_MessageBeep@4 is. The Microsoft" linker can't match up these two names, so there's your linker error. For what it's worth, the same 
problem appears if you try to mix Borland C++ code with Microsoft Visual C++ code.

To make matters just a bit more confusing, Microsoft's mangling of __stdcall function names is undone when the symbol name appears in 
the export table of a DLL. That is, while the MessageBeep function is mangled to _MessageBeep@4 internally by Visual C++ in your OBJ 
files, the exported name in USER32.DLL (where MessageBeep's code resides) is just MessageBeep. This allows Borland-compiled code (which 
doesn't mangle __stdcall function names) to link properly with functions exported by the Win32 DLLs. Visual C++, on the other hand, 
effectively strips the preceding "_" and following "@xxx" when it puts the symbol name into a DLL's export table.



From CPP to COM
Markus Horstmann
OLE Program Manager, Microsoft Corporation
RPC Programmer's Guide and Reference.

One simple way to export functions is by using the __declspec(dllexport) modifier (since Visual C++ 2.0), which can be applied to any 
function, including member functions. This instructs the compiler to place an entry into the exports table, just like declaring an 
export in the module definition file (.DEF) for the linker. [In the 16-bit world, _export did the same thing; in addition, the compiler 
provided additional code to change to the data segment of the DLL before entering the function, and then switch back to the caller's 
data segment before leaving the function (prologue/epilogue).]

For C++ this is the only practical way to export big numbers of functions, because C++ provides function overloading (that is, using 
one function name for many functions that differ only in the kind of parameter declared). Thus, the C++ compiler combines all the 
information it has about a member function (return type, class, parameter types, public/private) into one big name. (See the technical
 article Exporting with Class" in the MSDN Library Archive for more details.)

By simply applying the _declspec(dllexport) modifier to all the functions in the CDB class, we make the class exportable in a DLL. 
We then just have to provide a make file to create the binary.

Due to the name mangling, it is very difficult for the client to use dynamic loading: We would have to pass all the decorated names 
to GetProcAddress and save the returned pointer somewhere. Then we would have to set up a simulation class that calls each of these 
functions. Therefore, it's definitely better to use implicit linking (using the DB.LIB file generated by the linker).




Article 2. Libraries Made Too Easy
Bruce McKinney

Here the mangling follows the Win32 stdcall mangling convention. The names always have an underscore prefix and a suffix of the 
"at" sign (@) followed by the number of bytes of parameters in hexadecimal.

...But the easier solution (to get rid of mangling) is to specify the export name in the .DEF file. 

A .DEF file is optional for Win32 DLLs. Most of the options you set in a .DEF file have acceptable defaults. 
You can define your functions like this: 

void __stdcall DoNothing(void); 

Add a .DEF file entry in the EXPORTS section for each function:

EXPORTS
    DoNothing
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\tpg\hwx\inferno\src\langmod.txt ===
dict = SYSDICT | USERDICT;
hdict = dict (HYPHEN dict)*;
target = [LPUNC] (hdict | WEB | NUMBER) [TPUNC];
target = PUNC;
target = ONECHAR;
= target;

6 rules
3 nonterminals
24 nodes in parse tree.
14 positions
9 alphabets
6 states in initial DFA
6 states in minimal DFA
6 states
state 0
valid=0 cTrans=7
{FACTOID_SYSDICT, 1}, {FACTOID_USERDICT, 1}, {FACTOID_WEB, 2}, {FACTOID_NUMBER, 2}, {FACTOID_LPUNC, 3}, {FACTOID_PUNC, 4}, {FACTOID_ONECHAR, 4}
state 1
valid=1 cTrans=2
{FACTOID_TPUNC, 4}, {FACTOID_HYPHEN, 5}
state 2
valid=1 cTrans=1
{FACTOID_TPUNC, 4}
state 3
valid=0 cTrans=4
{FACTOID_SYSDICT, 1}, {FACTOID_USERDICT, 1}, {FACTOID_WEB, 2}, {FACTOID_NUMBER, 2}
state 4
valid=1 cTrans=0
state 5
valid=0 cTrans=2
{FACTOID_SYSDICT, 1}, {FACTOID_USERDICT, 1}
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\tpg\hwx\inferno\src\deu\train\readme.txt ===
Started April 2002

V1 Check ins

Bin Desc	Date		Description
Ver 1.0		April 2002 	From \\hwx80\c\mrevow\deu\baseline\annTcl\baseline1\
				Uses 1-1-183 Output units from V1 spec save_109.wgt stats.sta - never checked in

ver 1.1		April 2002	From \\hwx80\c\mrevow\deu\baseline\annTcl\addCurrency\fiddle
				Small tweak of Ver 1.0 by training with  some new currecny data freezing
				all weights except the Hid-> output of the 4 currency symbols
				Used same desc and stat file as ver 1.0
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\drivers\tpg\hwx\inferno\src\deu\train\log.log ===
Start on Sat Jan 26 00:11:32 Pacific Standard Time 2002
Building Net from net description file ../../../net-desc_37_150_1_1_183.txt
Net built from ../../../net-desc_37_150_1_1_183.txt
Independant Weights 100535 Shared Weights 33300
German Charmap Last updated 19 Oct 2001 - matches LM spec of 10/11/2001
CheckPoint Weights every 40000 Segments
Batch size 30000
Loading weights from ../baseline/save_219.wgt
Randomizing 451 Output Space Weights
Randomizing 451 Accent Layer Weights
Randomizing 82533 Output Layer Weights
Start sampling from 14 files. Starting at Sat Jan 26 00:11:42 Pacific Standard Time 2002
Sample ../../strictc.nni into 15  components with fraction 1
36799 samples, 37 features, 3 targettypes
Reading 36799 samples, writing with prob 1.000000...
36799 samples out of 36799 chosen. 346946 Segments out of 346946
Generated   2432 samples   22922 segments into file c:tmpFile00
Generated   2362 samples   22031 segments into file c:tmpFile01
Generated   2502 samples   23795 segments into file c:tmpFile02
Generated   2484 samples   23436 segments into file c:tmpFile03
Generated   2499 samples   24107 segments into file c:tmpFile04
Generated   2472 samples   23093 segments into file c:tmpFile05
Generated   2400 samples   22720 segments into file c:tmpFile06
Generated   2356 samples   21860 segments into file c:tmpFile07
Generated   2463 samples   23877 segments into file c:tmpFile08
Generated   2420 samples   22602 segments into file c:tmpFile09
Generated   2467 samples   23193 segments into file c:tmpFile10
Generated   2445 samples   22551 segments into file c:tmpFile11
Generated   2500 samples   23985 segments into file c:tmpFile12
Generated   2429 samples   22801 segments into file c:tmpFile13
Generated   2568 samples   23973 segments into file c:tmpFile14
Sample ../../strictp.nni into 15  components with fraction 1
122708 samples, 37 features, 3 targettypes
Reading 2568 samples, writing with prob 1.000000...
122708 samples out of 122708 chosen. 1137967 Segments out of 1137967
Generated  10509 samples   74541 segments into file c:tmpFile00
Generated  10589 samples   76431 segments into file c:tmpFile01
Generated  10768 samples   76863 segments into file c:tmpFile02
Generated  10634 samples   75064 segments into file c:tmpFile03
Generated  10798 samples   76778 segments into file c:tmpFile04
Generated  10648 samples   76242 segments into file c:tmpFile05
Generated  10605 samples   76169 segments into file c:tmpFile06
Generated  10533 samples   76278 segments into file c:tmpFile07
Generated  10670 samples   76518 segments into file c:tmpFile08
Generated  10536 samples   73818 segments into file c:tmpFile09
Generated  10639 samples   76065 segments into file c:tmpFile10
Generated  10559 samples   75223 segments into file c:tmpFile11
Generated  10790 samples   77118 segments into file c:tmpFile12
Generated  10594 samples   75797 segments into file c:tmpFile13
Generated  10635 samples   75062 segments into file c:tmpFile14
Sample ../../singlec.nni into 15  components with fraction 1
389 samples, 37 features, 3 targettypes
Reading 10635 samples, writing with prob 1.000000...
389 samples out of 389 chosen. 1205 Segments out of 1205
Generated  10538 samples      92 segments into file c:tmpFile00
Generated  10616 samples      81 segments into file c:tmpFile01
Generated  10796 samples      84 segments into file c:tmpFile02
Generated  10660 samples      79 segments into file c:tmpFile03
Generated  10831 samples     111 segments into file c:tmpFile04
Generated  10668 samples      61 segments into file c:tmpFile05
Generated  10625 samples      61 segments into file c:tmpFile06
Generated  10557 samples      74 segments into file c:tmpFile07
Generated  10691 samples      64 segments into file c:tmpFile08
Generated  10561 samples      78 segments into file c:tmpFile09
Generated  10668 samples      90 segments into file c:tmpFile10
Generated  10583 samples      72 segments into file c:tmpFile11
Generated  10825 samples     107 segments into file c:tmpFile12
Generated  10619 samples      81 segments into file c:tmpFile13
Generated  10658 samples      70 segments into file c:tmpFile14
Sample ../../singlep.nni into 15  components with fraction 1
13226 samples, 37 features, 3 targettypes
Reading 10658 samples, writing with prob 1.000000...
13226 samples out of 13226 chosen. 23503 Segments out of 23503
Generated  11435 samples    1563 segments into file c:tmpFile00
Generated  11467 samples    1507 segments into file c:tmpFile01
Generated  11701 samples    1572 segments into file c:tmpFile02
Generated  11546 samples    1591 segments into file c:tmpFile03
Generated  11746 samples    1653 segments into file c:tmpFile04
Generated  11579 samples    1620 segments into file c:tmpFile05
Generated  11471 samples    1492 segments into file c:tmpFile06
Generated  11467 samples    1609 segments into file c:tmpFile07
Generated  11531 samples    1501 segments into file c:tmpFile08
Generated  11450 samples    1587 segments into file c:tmpFile09
Generated  11569 samples    1589 segments into file c:tmpFile10
Generated  11476 samples    1581 segments into file c:tmpFile11
Generated  11678 samples    1526 segments into file c:tmpFile12
Generated  11505 samples    1602 segments into file c:tmpFile13
Generated  11501 samples    1510 segments into file c:tmpFile14
Sample ../../restc.nni into 15  components with fraction 0.5
225990 samples, 37 features, 3 targettypes
Reading 11501 samples, writing with prob 0.500000...
112870 samples out of 225990 chosen. 1072458 Segments out of 2144224
Generated  18861 samples   70323 segments into file c:tmpFile00
Generated  19123 samples   73216 segments into file c:tmpFile01
Generated  19273 samples   72222 segments into file c:tmpFile02
Generated  19114 samples   70623 segments into file c:tmpFile03
Generated  19226 samples   71275 segments into file c:tmpFile04
Generated  18991 samples   70778 segments into file c:tmpFile05
Generated  18962 samples   70852 segments into file c:tmpFile06
Generated  18990 samples   70737 segments into file c:tmpFile07
Generated  19066 samples   71382 segments into file c:tmpFile08
Generated  18974 samples   71361 segments into file c:tmpFile09
Generated  19070 samples   71958 segments into file c:tmpFile10
Generated  19019 samples   71946 segments into file c:tmpFile11
Generated  19170 samples   71659 segments into file c:tmpFile12
Generated  19053 samples   71823 segments into file c:tmpFile13
Generated  19100 samples   72303 segments into file c:tmpFile14
Sample ../../restp.nni into 15  components with fraction 0.5
874009 samples, 37 features, 3 targettypes
Reading 19100 samples, writing with prob 0.500000...
436992 samples out of 874009 chosen. 4192760 Segments out of 8388106
Generated  48085 samples  281832 segments into file c:tmpFile00
Generated  47960 samples  276666 segments into file c:tmpFile01
Generated  48388 samples  278682 segments into file c:tmpFile02
Generated  48328 samples  278327 segments into file c:tmpFile03
Generated  48469 samples  281946 segments into file c:tmpFile04
Generated  48194 samples  277930 segments into file c:tmpFile05
Generated  47831 samples  277329 segments into file c:tmpFile06
Generated  48263 samples  279643 segments into file c:tmpFile07
Generated  48232 samples  278969 segments into file c:tmpFile08
Generated  48211 samples  282789 segments into file c:tmpFile09
Generated  48393 samples  281951 segments into file c:tmpFile10
Generated  48491 samples  283730 segments into file c:tmpFile11
Generated  48151 samples  279780 segments into file c:tmpFile12
Generated  48011 samples  276833 segments into file c:tmpFile13
Generated  47977 samples  276353 segments into file c:tmpFile14
Sample ../../Jan_02/addrGoodWordc.nni into 15  components with fraction 1
49407 samples, 37 features, 3 targettypes
Reading 47977 samples, writing with prob 1.000000...
49407 samples out of 49407 chosen. 564569 Segments out of 564569
Generated  51432 samples   38284 segments into file c:tmpFile00
Generated  51245 samples   37387 segments into file c:tmpFile01
Generated  51650 samples   37782 segments into file c:tmpFile02
Generated  51659 samples   37686 segments into file c:tmpFile03
Generated  51715 samples   36939 segments into file c:tmpFile04
Generated  51554 samples   38313 segments into file c:tmpFile05
Generated  51086 samples   37819 segments into file c:tmpFile06
Generated  51520 samples   36956 segments into file c:tmpFile07
Generated  51564 samples   37759 segments into file c:tmpFile08
Generated  51530 samples   37507 segments into file c:tmpFile09
Generated  51577 samples   36775 segments into file c:tmpFile10
Generated  51842 samples   38195 segments into file c:tmpFile11
Generated  51413 samples   37116 segments into file c:tmpFile12
Generated  51293 samples   37905 segments into file c:tmpFile13
Generated  51311 samples   38146 segments into file c:tmpFile14
Sample ../../Jan_02/addrGoodWordp.nni into 15  components with fraction 1
305542 samples, 37 features, 3 targettypes
Reading 51311 samples, writing with prob 1.000000...
305542 samples out of 305542 chosen. 2318188 Segments out of 2318188
Generated  71717 samples  153287 segments into file c:tmpFile00
Generated  71606 samples  153957 segments into file c:tmpFile01
Generated  72211 samples  155602 segments into file c:tmpFile02
Generated  72063 samples  155127 segments into file c:tmpFile03
Generated  71986 samples  154636 segments into file c:tmpFile04
Generated  71908 samples  153890 segments into file c:tmpFile05
Generated  71422 samples  153212 segments into file c:tmpFile06
Generated  71937 samples  154921 segments into file c:tmpFile07
Generated  71804 samples  155193 segments into file c:tmpFile08
Generated  71764 samples  153737 segments into file c:tmpFile09
Generated  72037 samples  155537 segments into file c:tmpFile10
Generated  72327 samples  154903 segments into file c:tmpFile11
Generated  71752 samples  155159 segments into file c:tmpFile12
Generated  71521 samples  153577 segments into file c:tmpFile13
Generated  71878 samples  155450 segments into file c:tmpFile14
Sample ../../Jan_02/NatGoodWordc.nni.nni into 15  components with fraction 0.5
could not open Input File
Sample ../../Jan_02/NatGoodWordp.nni.nni into 15  components with fraction 0.5
could not open Input File
Sample ../../Jan_02/WebGoodWordc.nni into 15  components with fraction 1
8260 samples, 37 features, 3 targettypes
Reading 71878 samples, writing with prob 1.000000...
8260 samples out of 8260 chosen. 251377 Segments out of 251377
Generated  72254 samples   16264 segments into file c:tmpFile00
Generated  72176 samples   16757 segments into file c:tmpFile01
Generated  72765 samples   16675 segments into file c:tmpFile02
Generated  72654 samples   18043 segments into file c:tmpFile03
Generated  72579 samples   18252 segments into file c:tmpFile04
Generated  72441 samples   16612 segments into file c:tmpFile05
Generated  71986 samples   17498 segments into file c:tmpFile06
Generated  72486 samples   17054 segments into file c:tmpFile07
Generated  72339 samples   16348 segments into file c:tmpFile08
Generated  72282 samples   15586 segments into file c:tmpFile09
Generated  72586 samples   16753 segments into file c:tmpFile10
Generated  72896 samples   16822 segments into file c:tmpFile11
Generated  72287 samples   16050 segments into file c:tmpFile12
Generated  72023 samples   15292 segments into file c:tmpFile13
Generated  72439 samples   17371 segments into file c:tmpFile14
Sample ../../Jan_02/WebGoodWordp.nni into 15  components with fraction 1
29042 samples, 37 features, 3 targettypes
Reading 72439 samples, writing with prob 1.000000...
29042 samples out of 29042 chosen. 916319 Segments out of 916319
Generated  74129 samples   59823 segments into file c:tmpFile00
Generated  74182 samples   63023 segments into file c:tmpFile01
Generated  74732 samples   61896 segments into file c:tmpFile02
Generated  74555 samples   59977 segments into file c:tmpFile03
Generated  74570 samples   62659 segments into file c:tmpFile04
Generated  74334 samples   59201 segments into file c:tmpFile05
Generated  73844 samples   58212 segments into file c:tmpFile06
Generated  74452 samples   62719 segments into file c:tmpFile07
Generated  74266 samples   60648 segments into file c:tmpFile08
Generated  74214 samples   60462 segments into file c:tmpFile09
Generated  74560 samples   62904 segments into file c:tmpFile10
Generated  74865 samples   61408 segments into file c:tmpFile11
Generated  74301 samples   64018 segments into file c:tmpFile12
Generated  73924 samples   60181 segments into file c:tmpFile13
Generated  74307 samples   59188 segments into file c:tmpFile14
Sample ../../Jan_02/SingGoodc.nni into 15  components with fraction 1
625 samples, 37 features, 3 targettypes
Reading 74307 samples, writing with prob 1.000000...
625 samples out of 625 chosen. 1931 Segments out of 1931
Generated  74168 samples     117 segments into file c:tmpFile00
Generated  74234 samples     158 segments into file c:tmpFile01
Generated  74781 samples     150 segments into file c:tmpFile02
Generated  74586 samples      96 segments into file c:tmpFile03
Generated  74620 samples     151 segments into file c:tmpFile04
Generated  74376 samples     129 segments into file c:tmpFile05
Generated  73884 samples     123 segments into file c:tmpFile06
Generated  74481 samples      88 segments into file c:tmpFile07
Generated  74313 samples     148 segments into file c:tmpFile08
Generated  74246 samples     100 segments into file c:tmpFile09
Generated  74591 samples      94 segments into file c:tmpFile10
Generated  74913 samples     144 segments into file c:tmpFile11
Generated  74350 samples     163 segments into file c:tmpFile12
Generated  73965 samples     125 segments into file c:tmpFile13
Generated  74352 samples     145 segments into file c:tmpFile14
Sample ../../Jan_02/SingGoodc.nni into 15  components with fraction 1
625 samples, 37 features, 3 targettypes
Reading 74352 samples, writing with prob 1.000000...
625 samples out of 625 chosen. 1931 Segments out of 1931
Generated  74203 samples     108 segments into file c:tmpFile00
Generated  74277 samples     131 segments into file c:tmpFile01
Generated  74820 samples     125 segments into file c:tmpFile02
Generated  74633 samples     147 segments into file c:tmpFile03
Generated  74666 samples     147 segments into file c:tmpFile04
Generated  74429 samples     165 segments into file c:tmpFile05
Generated  73932 samples     145 segments into file c:tmpFile06
Generated  74525 samples     138 segments into file c:tmpFile07
Generated  74349 samples     108 segments into file c:tmpFile08
Generated  74284 samples     116 segments into file c:tmpFile09
Generated  74627 samples     113 segments into file c:tmpFile10
Generated  74955 samples     128 segments into file c:tmpFile11
Generated  74389 samples     121 segments into file c:tmpFile12
Generated  73999 samples     104 segments into file c:tmpFile13
Generated  74397 samples     135 segments into file c:tmpFile14
Data sampling complete at Sat Jan 26 00:30:17 Pacific Standard Time 2002
Loading from c:tmpFile00.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile00.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 719156 in 74203 Words. Total 719156 in 74203 words
Good+Bad: 719156 in 74203 words.
Total 719156 in 74203 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 719156 in 74203 Words. Total 719156 in 74203 words
Good+Bad: 719156 in 74203 words.
Tot Mem 115658 (kB)]
Data loading complete at Sat Jan 26 00:31:25 Pacific Standard Time 2002
m_bUseBadWords = 1
10 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30005   0.000   1.998  -1.000  47.1% 0.004000  14128  59937.19 ({   0.00 0   0.0%} {   0.00 238   0.8%} {   1.99 13890  46.3%} ) 0 3142   0.0
0 60006   1.998   1.602   0.247  38.9% 0.004400  23345  96158.66 ({   0.00 0   0.0%} {   0.00 609   1.0%} {   1.60 22736  37.9%} ) 0 6351   0.0
0 90033   1.602   1.404   0.141  34.5% 0.004840  31104 126423.56 ({   0.00 0   0.0%} {   0.00 972   1.1%} {   1.40 30132  33.5%} ) 0 9496   0.0
0 120033   1.404   1.279   0.098  31.9% 0.005324  38264 153572.79 ({   0.00 0   0.0%} {   0.00 1316   1.1%} {   1.27 36948  30.8%} ) 0 12669   0.0
0 150037   1.279   1.198   0.068  30.1% 0.005856  45175 179763.45 ({   0.00 0   0.0%} {   0.00 1632   1.1%} {   1.19 43543  29.0%} ) 0 15830   0.0
0 180038   1.198   1.133   0.058  28.7% 0.006442  51664 203923.74 ({   0.00 0   0.0%} {   0.00 1888   1.0%} {   1.13 49776  27.6%} ) 0 18933   0.0
0 210040   1.133   1.083   0.046  27.6% 0.007086  58021 227458.76 ({   0.00 0   0.0%} {   0.00 2136   1.0%} {   1.08 55885  26.6%} ) 0 22095   0.0
0 240104   1.083   1.040   0.041  26.7% 0.007795  64037 249730.25 ({   0.00 0   0.0%} {   0.00 2414   1.0%} {   1.04 61623  25.7%} ) 0 25248   0.0
0 270115   1.040   1.007   0.033  26.0% 0.008574  70122 271888.32 ({   0.00 0   0.0%} {   0.00 2676   1.0%} {   1.00 67446  25.0%} ) 0 28315   0.0
0 300118   1.007   0.979   0.028  25.4% 0.008574  76144 293862.38 ({   0.00 0   0.0%} {   0.00 2907   1.0%} {   0.98 73237  24.4%} ) 0 31374   0.0
0 330125   0.979   0.954   0.026  24.8% 0.008574  81962 315031.07 ({   0.00 0   0.0%} {   0.00 3107   0.9%} {   0.95 78855  23.9%} ) 0 34510   0.0
0 360128   0.954   0.932   0.024  24.4% 0.008574  87751 335669.94 ({   0.00 0   0.0%} {   0.00 3356   0.9%} {   0.93 84395  23.4%} ) 0 37629   0.0
0 390134   0.932   0.913   0.021  24.0% 0.008574  93457 356314.56 ({   0.00 0   0.0%} {   0.00 3556   0.9%} {   0.91 89901  23.0%} ) 0 40666   0.0
0 420140   0.913   0.895   0.020  23.6% 0.008574  99018 376091.72 ({   0.00 0   0.0%} {   0.00 3759   0.9%} {   0.89 95259  22.7%} ) 0 43705   0.0
0 450143   0.895   0.881   0.016  23.3% 0.008574  104664 396521.97 ({   0.00 0   0.0%} {   0.00 3939   0.9%} {   0.88 100725  22.4%} ) 0 46830   0.0
0 480159   0.881   0.868   0.015  23.0% 0.008574  110284 416649.89 ({   0.00 0   0.0%} {   0.00 4140   0.9%} {   0.86 106144  22.1%} ) 0 49934   0.0
0 510159   0.868   0.855   0.014  22.7% 0.008574  115755 436359.60 ({   0.00 0   0.0%} {   0.00 4375   0.9%} {   0.85 111380  21.8%} ) 0 53067   0.0
0 540166   0.855   0.844   0.014  22.4% 0.008574  121216 455824.52 ({   0.00 0   0.0%} {   0.00 4561   0.8%} {   0.84 116655  21.6%} ) 0 56211   0.0
0 570168   0.844   0.833   0.013  22.2% 0.008574  126584 475120.15 ({   0.00 0   0.0%} {   0.00 4758   0.8%} {   0.83 121826  21.4%} ) 0 59233   0.0
0 600172   0.833   0.824   0.012  22.0% 0.008574  131930 494353.17 ({   0.00 0   0.0%} {   0.00 4948   0.8%} {   0.82 126982  21.2%} ) 0 62193   0.0
0 630181   0.824   0.815   0.011  21.8% 0.008574  137238 513524.52 ({   0.00 0   0.0%} {   0.00 5118   0.8%} {   0.81 132120  21.0%} ) 0 65260   0.0
0 660181   0.815   0.808   0.009  21.6% 0.008574  142676 533174.76 ({   0.00 0   0.0%} {   0.00 5323   0.8%} {   0.80 137353  20.8%} ) 0 68264   0.0
0 690183   0.808   0.799   0.011  21.4% 0.008574  147852 551506.48 ({   0.00 0   0.0%} {   0.00 5486   0.8%} {   0.80 142366  20.6%} ) 0 71246   0.0
0 718960   0.799   0.792   0.009  21.3% 0.008574  152856 569279.35 ({   0.00 0   0.0%} {   0.00 5694   0.8%} {   0.79 147162  20.5%} ) 0 74124   0.0
Finished on Sat Jan 26 03:39:55 Pacific Standard Time 2002
NN_saveWeights save_10.wgt
Loading from c:tmpFile01.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile01.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 721345 in 74277 Words. Total 721345 in 74277 words
Good+Bad: 721345 in 74277 words.
Total 721345 in 74277 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 721345 in 74277 Words. Total 721345 in 74277 words
Good+Bad: 721345 in 74277 words.
Tot Mem 116009 (kB)]
Data loading complete at Sat Jan 26 03:41:12 Pacific Standard Time 2002
m_bUseBadWords = 1
11 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30018   0.000   0.634  -1.000  17.9% 0.006859  5382  19044.34 ({   0.00 0   0.0%} {   0.00 172   0.6%} {   0.63 5210  17.4%} ) 0 3138   0.0
0 60020   0.634   0.627   0.012  17.6% 0.006859  10579  37640.42 ({   0.00 0   0.0%} {   0.00 363   0.6%} {   0.62 10216  17.0%} ) 0 6348   0.0
0 90064   0.627   0.614   0.022  17.3% 0.006859  15572  55292.22 ({   0.00 0   0.0%} {   0.00 591   0.7%} {   0.61 14981  16.6%} ) 0 9471   0.0
0 120067   0.614   0.601   0.022  17.0% 0.006859  20388  72146.09 ({   0.00 0   0.0%} {   0.00 782   0.7%} {   0.60 19606  16.3%} ) 0 12589   0.0
0 150079   0.601   0.596   0.008  16.8% 0.006859  25274  89438.91 ({   0.00 0   0.0%} {   0.00 966   0.6%} {   0.59 24308  16.2%} ) 0 15724   0.0
0 180080   0.596   0.588   0.014  16.6% 0.006859  29929 105847.25 ({   0.00 0   0.0%} {   0.00 1154   0.6%} {   0.59 28775  16.0%} ) 0 18809   0.0
0 210084   0.588   0.584   0.006  16.5% 0.006859  34718 122733.49 ({   0.00 0   0.0%} {   0.00 1341   0.6%} {   0.58 33377  15.9%} ) 0 21868   0.0
0 240087   0.584   0.581   0.005  16.4% 0.006859  39486 139587.76 ({   0.00 0   0.0%} {   0.00 1537   0.6%} {   0.58 37949  15.8%} ) 0 24977   0.0
0 270089   0.581   0.579   0.004  16.4% 0.006859  44386 156416.19 ({   0.00 0   0.0%} {   0.00 1738   0.6%} {   0.58 42648  15.8%} ) 0 28115   0.0
0 300106   0.579   0.577   0.003  16.4% 0.006859  49274 173257.15 ({   0.00 0   0.0%} {   0.00 1936   0.6%} {   0.57 47338  15.8%} ) 0 31157   0.0
0 330109   0.577   0.574   0.005  16.3% 0.006859  53968 189565.49 ({   0.00 0   0.0%} {   0.00 2171   0.7%} {   0.57 51797  15.7%} ) 0 34223   0.0
0 360118   0.574   0.572   0.004  16.3% 0.006859  58682 205944.13 ({   0.00 0   0.0%} {   0.00 2344   0.7%} {   0.57 56338  15.6%} ) 0 37309   0.0
0 390122   0.572   0.569   0.005  16.2% 0.006859  63237 221977.20 ({   0.00 0   0.0%} {   0.00 2513   0.6%} {   0.57 60724  15.6%} ) 0 40406   0.0
0 420127   0.569   0.568   0.002  16.2% 0.006859  67938 238636.11 ({   0.00 0   0.0%} {   0.00 2711   0.6%} {   0.57 65227  15.5%} ) 0 43445   0.0
0 450132   0.568   0.567   0.001  16.1% 0.006859  72653 255314.43 ({   0.00 0   0.0%} {   0.00 2914   0.6%} {   0.56 69739  15.5%} ) 0 46495   0.0
0 480140   0.567   0.565   0.003  16.1% 0.006859  77218 271399.92 ({   0.00 0   0.0%} {   0.00 3054   0.6%} {   0.56 74164  15.4%} ) 0 49637   0.0
0 510153   0.565   0.564   0.003  16.0% 0.006859  81827 287503.72 ({   0.00 0   0.0%} {   0.00 3226   0.6%} {   0.56 78601  15.4%} ) 0 52721   0.0
0 540156   0.564   0.563   0.002  16.0% 0.006859  86468 303937.86 ({   0.00 0   0.0%} {   0.00 3356   0.6%} {   0.56 83112  15.4%} ) 0 55757   0.0
0 570160   0.563   0.561   0.003  16.0% 0.006859  91047 319969.46 ({   0.00 0   0.0%} {   0.00 3517   0.6%} {   0.56 87530  15.4%} ) 0 58864   0.0
0 600166   0.561   0.560   0.003  15.9% 0.006859  95649 335967.00 ({   0.00 0   0.0%} {   0.00 3695   0.6%} {   0.56 91954  15.3%} ) 0 61893   0.0
0 630176   0.560   0.558   0.004  15.9% 0.006859  100000 351414.77 ({   0.00 0   0.0%} {   0.00 3869   0.6%} {   0.56 96131  15.3%} ) 0 64948   0.0
0 660182   0.558   0.558  -0.000  15.9% 0.006585  104711 368162.39 ({   0.00 0   0.0%} {   0.00 4035   0.6%} {   0.56 100676  15.2%} ) 0 67990   0.0
0 690209   0.558   0.557   0.000  15.8% 0.006585  109310 384759.59 ({   0.00 0   0.0%} {   0.00 4179   0.6%} {   0.56 105131  15.2%} ) 0 71000   0.0
0 720215   0.557   0.556   0.002  15.8% 0.006585  113898 400797.50 ({   0.00 0   0.0%} {   0.00 4342   0.6%} {   0.55 109556  15.2%} ) 0 74105   0.0
0 721180   0.556   0.557  -0.000  15.8% 0.006322  114067 401366.49 ({   0.00 0   0.0%} {   0.00 4350   0.6%} {   0.55 109717  15.2%} ) 0 74207   0.0
Finished on Sat Jan 26 06:50:12 Pacific Standard Time 2002
NN_saveWeights save_11.wgt
Loading from c:tmpFile02.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile02.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 725448 in 74820 Words. Total 725448 in 74820 words
Good+Bad: 725448 in 74820 words.
Total 725448 in 74820 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 725448 in 74820 Words. Total 725448 in 74820 words
Good+Bad: 725448 in 74820 words.
Tot Mem 116670 (kB)]
Data loading complete at Sat Jan 26 06:51:29 Pacific Standard Time 2002
m_bUseBadWords = 1
12 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30011   0.000   0.551  -1.000  15.6% 0.005057  4685  16548.25 ({   0.00 0   0.0%} {   0.00 162   0.5%} {   0.55 4523  15.1%} ) 0 3132   0.0
0 60011   0.551   0.534   0.032  15.2% 0.005563  9128  32062.97 ({   0.00 0   0.0%} {   0.00 325   0.5%} {   0.53 8803  14.7%} ) 0 6196   0.0
0 90025   0.534   0.534   0.001  15.2% 0.005563  13692  48046.52 ({   0.00 0   0.0%} {   0.00 488   0.5%} {   0.53 13204  14.7%} ) 0 9255   0.0
0 120032   0.534   0.535  -0.003  15.2% 0.005341  18304  64250.30 ({   0.00 0   0.0%} {   0.00 675   0.6%} {   0.53 17629  14.7%} ) 0 12383   0.0
0 150039   0.535   0.533   0.005  15.2% 0.005341  22777  79950.13 ({   0.00 0   0.0%} {   0.00 838   0.6%} {   0.53 21939  14.6%} ) 0 15444   0.0
0 180046   0.533   0.531   0.003  15.1% 0.005341  27265  95675.58 ({   0.00 0   0.0%} {   0.00 1031   0.6%} {   0.53 26234  14.6%} ) 0 18573   0.0
0 210046   0.531   0.532  -0.001  15.1% 0.005127  31745 111727.32 ({   0.00 0   0.0%} {   0.00 1176   0.6%} {   0.53 30569  14.6%} ) 0 21662   0.0
0 240062   0.532   0.530   0.003  15.1% 0.005127  36182 127349.32 ({   0.00 0   0.0%} {   0.00 1353   0.6%} {   0.53 34829  14.5%} ) 0 24770   0.0
0 270073   0.530   0.532  -0.004  15.2% 0.004922  40956 143781.40 ({   0.00 0   0.0%} {   0.00 1568   0.6%} {   0.53 39388  14.6%} ) 0 27867   0.0
0 300079   0.532   0.530   0.005  15.1% 0.004922  45387 159009.67 ({   0.00 0   0.0%} {   0.00 1713   0.6%} {   0.53 43674  14.6%} ) 0 30930   0.0
0 330079   0.530   0.526   0.007  15.0% 0.004922  49606 173663.44 ({   0.00 0   0.0%} {   0.00 1870   0.6%} {   0.52 47736  14.5%} ) 0 34016   0.0
0 360080   0.526   0.524   0.003  15.0% 0.004922  53958 188842.71 ({   0.00 0   0.0%} {   0.00 2045   0.6%} {   0.52 51913  14.4%} ) 0 37104   0.0
0 390082   0.524   0.523   0.004  14.9% 0.004922  58271 203832.28 ({   0.00 0   0.0%} {   0.00 2239   0.6%} {   0.52 56032  14.4%} ) 0 40264   0.0
0 420090   0.523   0.520   0.005  14.9% 0.004922  62502 218380.62 ({   0.00 0   0.0%} {   0.00 2407   0.6%} {   0.52 60095  14.3%} ) 0 43351   0.0
0 450090   0.520   0.518   0.003  14.8% 0.004922  66761 233272.20 ({   0.00 0   0.0%} {   0.00 2574   0.6%} {   0.52 64187  14.3%} ) 0 46402   0.0
0 480093   0.518   0.517   0.003  14.8% 0.004922  70953 248134.35 ({   0.00 0   0.0%} {   0.00 2752   0.6%} {   0.51 68201  14.2%} ) 0 49479   0.0
0 510096   0.517   0.515   0.004  14.7% 0.004922  75152 262650.87 ({   0.00 0   0.0%} {   0.00 2921   0.6%} {   0.51 72231  14.2%} ) 0 52517   0.0
0 540100   0.515   0.515   0.000  14.7% 0.004922  79497 277967.99 ({   0.00 0   0.0%} {   0.00 3069   0.6%} {   0.51 76428  14.2%} ) 0 55547   0.0
0 570103   0.515   0.515  -0.000  14.7% 0.004725  83847 293413.76 ({   0.00 0   0.0%} {   0.00 3238   0.6%} {   0.51 80609  14.1%} ) 0 58703   0.0
0 600104   0.515   0.514   0.001  14.7% 0.004725  88140 308408.79 ({   0.00 0   0.0%} {   0.00 3396   0.6%} {   0.51 84744  14.1%} ) 0 61799   0.0
0 630110   0.514   0.514   0.000  14.7% 0.004725  92435 323756.65 ({   0.00 0   0.0%} {   0.00 3554   0.6%} {   0.51 88881  14.1%} ) 0 64910   0.0
0 660114   0.514   0.512   0.003  14.6% 0.004725  96559 338146.86 ({   0.00 0   0.0%} {   0.00 3713   0.6%} {   0.51 92846  14.1%} ) 0 68064   0.0
0 690151   0.512   0.512   0.001  14.6% 0.004725  100795 353123.94 ({   0.00 0   0.0%} {   0.00 3875   0.6%} {   0.51 96920  14.0%} ) 0 71152   0.0
0 720153   0.512   0.511   0.002  14.6% 0.004725  104901 367759.68 ({   0.00 0   0.0%} {   0.00 3996   0.6%} {   0.51 100905  14.0%} ) 0 74219   0.0
0 725268   0.511   0.510   0.001  14.6% 0.004725  105581 370104.08 ({   0.00 0   0.0%} {   0.00 4020   0.6%} {   0.51 101561  14.0%} ) 0 74751   0.0
Finished on Sat Jan 26 10:01:33 Pacific Standard Time 2002
NN_saveWeights save_12.wgt
Loading from c:tmpFile03.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile03.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 720196 in 74633 Words. Total 720196 in 74633 words
Good+Bad: 720196 in 74633 words.
Total 720196 in 74633 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 720196 in 74633 Words. Total 720196 in 74633 words
Good+Bad: 720196 in 74633 words.
Tot Mem 115828 (kB)]
Data loading complete at Sat Jan 26 10:02:51 Pacific Standard Time 2002
m_bUseBadWords = 1
13 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30009   0.000   0.495  -1.000  14.4% 0.003780  4328  14846.90 ({   0.00 0   0.0%} {   0.00 201   0.7%} {   0.49 4127  13.8%} ) 0 3128   0.0
0 60011   0.495   0.507  -0.024  14.4% 0.003024  8671  30415.89 ({   0.00 0   0.0%} {   0.00 327   0.5%} {   0.50 8344  13.9%} ) 0 6270   0.0
0 90023   0.507   0.505   0.003  14.5% 0.003024  13014  45476.83 ({   0.00 0   0.0%} {   0.00 538   0.6%} {   0.50 12476  13.9%} ) 0 9380   0.0
0 120024   0.505   0.498   0.014  14.3% 0.003024  17132  59800.89 ({   0.00 0   0.0%} {   0.00 711   0.6%} {   0.50 16421  13.7%} ) 0 12500   0.0
0 150025   0.498   0.495   0.007  14.3% 0.003024  21397  74251.03 ({   0.00 0   0.0%} {   0.00 907   0.6%} {   0.49 20490  13.7%} ) 0 15667   0.0
0 180037   0.495   0.492   0.007  14.1% 0.003024  25433  88529.02 ({   0.00 0   0.0%} {   0.00 1096   0.6%} {   0.49 24337  13.5%} ) 0 18747   0.0
0 210047   0.492   0.490   0.004  14.1% 0.003024  29536 102856.11 ({   0.00 0   0.0%} {   0.00 1256   0.6%} {   0.49 28280  13.5%} ) 0 21838   0.0
0 240048   0.490   0.490   0.000  14.0% 0.003024  33683 117529.91 ({   0.00 0   0.0%} {   0.00 1424   0.6%} {   0.49 32259  13.4%} ) 0 25018   0.0
0 270068   0.490   0.488   0.003  14.0% 0.003024  37712 131806.65 ({   0.00 0   0.0%} {   0.00 1570   0.6%} {   0.49 36142  13.4%} ) 0 28107   0.0
0 300071   0.488   0.486   0.005  13.9% 0.003024  41762 145764.80 ({   0.00 0   0.0%} {   0.00 1745   0.6%} {   0.48 40017  13.3%} ) 0 31217   0.0
0 330079   0.486   0.484   0.004  13.9% 0.003024  45785 159689.84 ({   0.00 0   0.0%} {   0.00 1907   0.6%} {   0.48 43878  13.3%} ) 0 34321   0.0
0 360088   0.484   0.482   0.003  13.8% 0.003024  49744 173737.14 ({   0.00 0   0.0%} {   0.00 2046   0.6%} {   0.48 47698  13.2%} ) 0 37424   0.0
0 390092   0.482   0.482   0.002  13.8% 0.003024  53878 187913.02 ({   0.00 0   0.0%} {   0.00 2210   0.6%} {   0.48 51668  13.2%} ) 0 40572   0.0
0 420118   0.482   0.480   0.004  13.8% 0.003024  57834 201569.43 ({   0.00 0   0.0%} {   0.00 2370   0.6%} {   0.48 55464  13.2%} ) 0 43716   0.0
0 450136   0.480   0.479   0.001  13.7% 0.003024  61879 215715.18 ({   0.00 0   0.0%} {   0.00 2542   0.6%} {   0.48 59337  13.2%} ) 0 46840   0.0
0 480144   0.479   0.480  -0.001  13.7% 0.002903  65955 230274.68 ({   0.00 0   0.0%} {   0.00 2698   0.6%} {   0.48 63257  13.2%} ) 0 49957   0.0
0 510162   0.480   0.479   0.002  13.7% 0.002903  69973 244176.17 ({   0.00 0   0.0%} {   0.00 2880   0.6%} {   0.48 67093  13.2%} ) 0 53061   0.0
0 540176   0.479   0.479  -0.000  13.7% 0.002787  73985 258544.37 ({   0.00 0   0.0%} {   0.00 3026   0.6%} {   0.48 70959  13.1%} ) 0 56221   0.0
0 570177   0.479   0.479   0.000  13.7% 0.002787  78012 272863.76 ({   0.00 0   0.0%} {   0.00 3176   0.6%} {   0.48 74836  13.1%} ) 0 59274   0.0
0 600184   0.479   0.479  -0.000  13.7% 0.002675  82111 287300.94 ({   0.00 0   0.0%} {   0.00 3345   0.6%} {   0.48 78766  13.1%} ) 0 62409   0.0
0 630189   0.479   0.478   0.001  13.7% 0.002675  86200 301386.32 ({   0.00 0   0.0%} {   0.00 3526   0.6%} {   0.48 82674  13.1%} ) 0 65529   0.0
0 660199   0.478   0.478  -0.001  13.7% 0.002568  90288 315903.72 ({   0.00 0   0.0%} {   0.00 3676   0.6%} {   0.48 86612  13.1%} ) 0 68552   0.0
0 690203   0.478   0.478   0.001  13.7% 0.002568  94302 329940.59 ({   0.00 0   0.0%} {   0.00 3832   0.6%} {   0.48 90470  13.1%} ) 0 71552   0.0
0 720031   0.478   0.478   0.000  13.7% 0.002568  98321 344038.32 ({   0.00 0   0.0%} {   0.00 3973   0.6%} {   0.48 94348  13.1%} ) 0 74565   0.0
Finished on Sat Jan 26 13:11:39 Pacific Standard Time 2002
NN_saveWeights save_13.wgt
Loading from c:tmpFile04.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile04.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 728654 in 74666 Words. Total 728654 in 74666 words
Good+Bad: 728654 in 74666 words.
Total 728654 in 74666 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 728654 in 74666 Words. Total 728654 in 74666 words
Good+Bad: 728654 in 74666 words.
Tot Mem 117181 (kB)]
Data loading complete at Sat Jan 26 13:12:59 Pacific Standard Time 2002
m_bUseBadWords = 1
14 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30001   0.000   0.483  -1.000  13.9% 0.002055  4156  14500.70 ({   0.00 0   0.0%} {   0.00 189   0.6%} {   0.48 3967  13.2%} ) 0 3074   0.0
0 60006   0.483   0.470   0.029  13.5% 0.002055  8071  28197.16 ({   0.00 0   0.0%} {   0.00 408   0.7%} {   0.47 7663  12.8%} ) 0 6188   0.0
0 90014   0.470   0.472  -0.005  13.5% 0.001973  12114  42489.32 ({   0.00 0   0.0%} {   0.00 558   0.6%} {   0.47 11556  12.8%} ) 0 9335   0.0
0 120023   0.472   0.471   0.003  13.5% 0.001973  16200  56479.51 ({   0.00 0   0.0%} {   0.00 761   0.6%} {   0.47 15439  12.9%} ) 0 12417   0.0
0 150025   0.471   0.467   0.007  13.4% 0.001973  20133  70106.65 ({   0.00 0   0.0%} {   0.00 900   0.6%} {   0.46 19233  12.8%} ) 0 15532   0.0
0 180034   0.467   0.466   0.004  13.4% 0.001973  24111  83834.80 ({   0.00 0   0.0%} {   0.00 1083   0.6%} {   0.46 23028  12.8%} ) 0 18649   0.0
0 210034   0.466   0.464   0.004  13.3% 0.001973  28003  97452.31 ({   0.00 0   0.0%} {   0.00 1249   0.6%} {   0.46 26754  12.7%} ) 0 21828   0.0
0 240034   0.464   0.466  -0.003  13.3% 0.001894  32022 111751.85 ({   0.00 0   0.0%} {   0.00 1386   0.6%} {   0.46 30636  12.8%} ) 0 24879   0.0
0 270037   0.466   0.464   0.003  13.3% 0.001894  35955 125309.62 ({   0.00 0   0.0%} {   0.00 1557   0.6%} {   0.46 34398  12.7%} ) 0 27978   0.0
0 300041   0.464   0.464  -0.000  13.3% 0.001818  39991 139260.65 ({   0.00 0   0.0%} {   0.00 1727   0.6%} {   0.46 38264  12.8%} ) 0 31036   0.0
0 330046   0.464   0.463   0.003  13.3% 0.001818  43895 152776.89 ({   0.00 0   0.0%} {   0.00 1908   0.6%} {   0.46 41987  12.7%} ) 0 34123   0.0
0 360063   0.463   0.463  -0.001  13.3% 0.001745  47949 166765.37 ({   0.00 0   0.0%} {   0.00 2113   0.6%} {   0.46 45836  12.7%} ) 0 37162   0.0
0 390071   0.463   0.463   0.001  13.3% 0.001745  51870 180509.59 ({   0.00 0   0.0%} {   0.00 2267   0.6%} {   0.46 49603  12.7%} ) 0 40182   0.0
0 420074   0.463   0.463  -0.000  13.3% 0.001675  55851 194462.29 ({   0.00 0   0.0%} {   0.00 2388   0.6%} {   0.46 53463  12.7%} ) 0 43276   0.0
0 450074   0.463   0.462   0.002  13.3% 0.001675  59665 207869.53 ({   0.00 0   0.0%} {   0.00 2551   0.6%} {   0.46 57114  12.7%} ) 0 46393   0.0
0 480078   0.462   0.462   0.000  13.3% 0.001675  63683 221629.22 ({   0.00 0   0.0%} {   0.00 2725   0.6%} {   0.46 60958  12.7%} ) 0 49464   0.0
0 510083   0.462   0.460   0.004  13.2% 0.001675  67443 234626.10 ({   0.00 0   0.0%} {   0.00 2871   0.6%} {   0.46 64572  12.7%} ) 0 52518   0.0
0 540098   0.460   0.459   0.002  13.2% 0.001675  71249 247859.69 ({   0.00 0   0.0%} {   0.00 3017   0.6%} {   0.46 68232  12.6%} ) 0 55599   0.0
0 570099   0.459   0.459   0.001  13.2% 0.001675  75203 261428.67 ({   0.00 0   0.0%} {   0.00 3190   0.6%} {   0.46 72013  12.6%} ) 0 58636   0.0
0 600102   0.459   0.458   0.000  13.2% 0.001675  79098 275091.52 ({   0.00 0   0.0%} {   0.00 3352   0.6%} {   0.46 75746  12.6%} ) 0 61670   0.0
0 630102   0.458   0.458   0.001  13.2% 0.001675  82987 288572.61 ({   0.00 0   0.0%} {   0.00 3517   0.6%} {   0.46 79470  12.6%} ) 0 64707   0.0
0 660107   0.458   0.457   0.002  13.1% 0.001675  86701 301736.98 ({   0.00 0   0.0%} {   0.00 3649   0.6%} {   0.45 83052  12.6%} ) 0 67738   0.0
0 690116   0.457   0.457   0.000  13.1% 0.001675  90578 315327.75 ({   0.00 0   0.0%} {   0.00 3789   0.5%} {   0.45 86789  12.6%} ) 0 70746   0.0
0 720119   0.457   0.457   0.000  13.1% 0.001675  94494 328989.47 ({   0.00 0   0.0%} {   0.00 3914   0.5%} {   0.45 90580  12.6%} ) 0 73742   0.0
0 728483   0.457   0.457   0.000  13.1% 0.001675  95545 332688.32 ({   0.00 0   0.0%} {   0.00 3967   0.5%} {   0.45 91578  12.6%} ) 0 74604   0.0
Finished on Sat Jan 26 16:23:53 Pacific Standard Time 2002
NN_saveWeights save_14.wgt
Loading from c:tmpFile05.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile05.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 718034 in 74429 Words. Total 718034 in 74429 words
Good+Bad: 718034 in 74429 words.
Total 718034 in 74429 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 718034 in 74429 Words. Total 718034 in 74429 words
Good+Bad: 718034 in 74429 words.
Tot Mem 115480 (kB)]
Data loading complete at Sat Jan 26 16:25:13 Pacific Standard Time 2002
m_bUseBadWords = 1
15 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30008   0.000   0.462  -1.000  13.3% 0.001340  3986  13859.29 ({   0.00 0   0.0%} {   0.00 139   0.5%} {   0.46 3847  12.8%} ) 0 3085   0.0
0 60013   0.462   0.459   0.007  13.2% 0.001340  7932  27516.82 ({   0.00 0   0.0%} {   0.00 336   0.6%} {   0.46 7596  12.7%} ) 0 6199   0.0
0 90013   0.459   0.464  -0.011  13.3% 0.001072  11983  41746.67 ({   0.00 0   0.0%} {   0.00 501   0.6%} {   0.46 11482  12.8%} ) 0 9325   0.0
0 120020   0.464   0.460   0.007  13.2% 0.001072  15867  55249.24 ({   0.00 0   0.0%} {   0.00 650   0.5%} {   0.46 15217  12.7%} ) 0 12531   0.0
0 150026   0.460   0.458   0.005  13.2% 0.001072  19863  68720.90 ({   0.00 0   0.0%} {   0.00 855   0.6%} {   0.46 19008  12.7%} ) 0 15680   0.0
0 180030   0.458   0.452   0.012  13.1% 0.001072  23524  81457.58 ({   0.00 0   0.0%} {   0.00 1023   0.6%} {   0.45 22501  12.5%} ) 0 18806   0.0
0 210031   0.452   0.449   0.007  13.0% 0.001072  27326  94406.70 ({   0.00 0   0.0%} {   0.00 1177   0.6%} {   0.45 26149  12.5%} ) 0 21940   0.0
0 240033   0.449   0.453  -0.009  13.0% 0.001029  31317 108823.44 ({   0.00 0   0.0%} {   0.00 1353   0.6%} {   0.45 29964  12.5%} ) 0 25036   0.0
0 270041   0.453   0.453   0.000  13.0% 0.001029  35210 122394.67 ({   0.00 0   0.0%} {   0.00 1495   0.6%} {   0.45 33715  12.5%} ) 0 28175   0.0
0 300056   0.453   0.453  -0.000  13.0% 0.000988  39102 136053.80 ({   0.00 0   0.0%} {   0.00 1679   0.6%} {   0.45 37423  12.5%} ) 0 31304   0.0
0 330057   0.453   0.452   0.003  13.0% 0.000988  42826 149242.22 ({   0.00 0   0.0%} {   0.00 1820   0.6%} {   0.45 41006  12.4%} ) 0 34459   0.0
0 360058   0.452   0.449   0.006  12.9% 0.000988  46427 161789.54 ({   0.00 0   0.0%} {   0.00 1977   0.5%} {   0.45 44450  12.3%} ) 0 37555   0.0
0 390089   0.449   0.449   0.002  12.9% 0.000988  50270 174992.31 ({   0.00 0   0.0%} {   0.00 2127   0.5%} {   0.45 48143  12.3%} ) 0 40634   0.0
0 420105   0.449   0.448   0.001  12.9% 0.000988  54025 188196.14 ({   0.00 0   0.0%} {   0.00 2280   0.5%} {   0.45 51745  12.3%} ) 0 43697   0.0
0 450114   0.448   0.447   0.003  12.8% 0.000988  57683 201121.07 ({   0.00 0   0.0%} {   0.00 2420   0.5%} {   0.44 55263  12.3%} ) 0 46843   0.0
0 480125   0.447   0.447   0.000  12.8% 0.000988  61505 214480.91 ({   0.00 0   0.0%} {   0.00 2571   0.5%} {   0.44 58934  12.3%} ) 0 49988   0.0
0 510131   0.447   0.447  -0.001  12.8% 0.000949  65458 228005.30 ({   0.00 0   0.0%} {   0.00 2759   0.5%} {   0.44 62699  12.3%} ) 0 53021   0.0
0 540131   0.447   0.447   0.001  12.8% 0.000949  69311 241252.97 ({   0.00 0   0.0%} {   0.00 2908   0.5%} {   0.44 66403  12.3%} ) 0 56195   0.0
0 570131   0.447   0.446   0.001  12.8% 0.000949  73173 254393.47 ({   0.00 0   0.0%} {   0.00 3090   0.5%} {   0.44 70083  12.3%} ) 0 59256   0.0
0 600136   0.446   0.447  -0.001  12.8% 0.000911  76964 268059.28 ({   0.00 0   0.0%} {   0.00 3242   0.5%} {   0.44 73722  12.3%} ) 0 62355   0.0
0 630136   0.447   0.446   0.001  12.8% 0.000911  80768 281047.87 ({   0.00 0   0.0%} {   0.00 3384   0.5%} {   0.44 77384  12.3%} ) 0 65463   0.0
0 660145   0.446   0.446   0.001  12.8% 0.000911  84486 294228.62 ({   0.00 0   0.0%} {   0.00 3529   0.5%} {   0.44 80957  12.3%} ) 0 68514   0.0
0 690149   0.446   0.446  -0.000  12.8% 0.000874  88298 307654.95 ({   0.00 0   0.0%} {   0.00 3698   0.5%} {   0.44 84600  12.3%} ) 0 71557   0.0
0 717873   0.446   0.445   0.002  12.8% 0.000874  91687 319531.39 ({   0.00 0   0.0%} {   0.00 3869   0.5%} {   0.44 87818  12.2%} ) 0 74363   0.0
Finished on Sat Jan 26 19:33:17 Pacific Standard Time 2002
NN_saveWeights save_15.wgt
Loading from c:tmpFile06.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile06.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 715632 in 73932 Words. Total 715632 in 73932 words
Good+Bad: 715632 in 73932 words.
Total 715632 in 73932 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 715632 in 73932 Words. Total 715632 in 73932 words
Good+Bad: 715632 in 73932 words.
Tot Mem 115092 (kB)]
Data loading complete at Sat Jan 26 19:34:36 Pacific Standard Time 2002
m_bUseBadWords = 1
16 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30010   0.000   0.451  -1.000  12.8% 0.000699  3845  13526.59 ({   0.00 0   0.0%} {   0.00 165   0.5%} {   0.45 3680  12.3%} ) 0 3108   0.0
0 60016   0.451   0.444   0.014  12.6% 0.000699  7587  26675.59 ({   0.00 0   0.0%} {   0.00 331   0.6%} {   0.44 7256  12.1%} ) 0 6194   0.0
0 90028   0.444   0.447  -0.005  12.8% 0.000671  11510  40216.31 ({   0.00 0   0.0%} {   0.00 486   0.5%} {   0.44 11024  12.2%} ) 0 9343   0.0
0 120032   0.447   0.446   0.003  12.7% 0.000671  15228  53478.52 ({   0.00 0   0.0%} {   0.00 630   0.5%} {   0.44 14598  12.2%} ) 0 12466   0.0
0 150040   0.446   0.449  -0.008  12.8% 0.000645  19210  67358.78 ({   0.00 0   0.0%} {   0.00 808   0.5%} {   0.45 18402  12.3%} ) 0 15475   0.0
0 180046   0.449   0.449   0.001  12.8% 0.000645  23127  80756.80 ({   0.00 0   0.0%} {   0.00 967   0.5%} {   0.45 22160  12.3%} ) 0 18587   0.0
0 210061   0.449   0.446   0.006  12.8% 0.000645  26795  93696.52 ({   0.00 0   0.0%} {   0.00 1103   0.5%} {   0.44 25692  12.2%} ) 0 21677   0.0
0 240062   0.446   0.446   0.000  12.8% 0.000645  30654 107060.08 ({   0.00 0   0.0%} {   0.00 1265   0.5%} {   0.44 29389  12.2%} ) 0 24828   0.0
0 270064   0.446   0.445   0.002  12.8% 0.000645  34493 120214.91 ({   0.00 0   0.0%} {   0.00 1422   0.5%} {   0.44 33071  12.2%} ) 0 27927   0.0
0 300079   0.445   0.445   0.001  12.8% 0.000645  38287 133494.55 ({   0.00 0   0.0%} {   0.00 1563   0.5%} {   0.44 36724  12.2%} ) 0 31020   0.0
0 330101   0.445   0.444   0.003  12.7% 0.000645  42003 146425.39 ({   0.00 0   0.0%} {   0.00 1690   0.5%} {   0.44 40313  12.2%} ) 0 34073   0.0
0 360101   0.444   0.442   0.004  12.7% 0.000645  45636 159129.41 ({   0.00 0   0.0%} {   0.00 1847   0.5%} {   0.44 43789  12.2%} ) 0 37230   0.0
0 390108   0.442   0.441   0.001  12.6% 0.000645  49328 172139.27 ({   0.00 0   0.0%} {   0.00 2004   0.5%} {   0.44 47324  12.1%} ) 0 40358   0.0
0 420109   0.441   0.441   0.000  12.7% 0.000645  53167 185302.33 ({   0.00 0   0.0%} {   0.00 2175   0.5%} {   0.44 50992  12.1%} ) 0 43522   0.0
0 450110   0.441   0.440   0.002  12.6% 0.000645  56871 198157.44 ({   0.00 0   0.0%} {   0.00 2347   0.5%} {   0.44 54524  12.1%} ) 0 46554   0.0
0 480111   0.440   0.439   0.002  12.6% 0.000645  60599 211000.59 ({   0.00 0   0.0%} {   0.00 2493   0.5%} {   0.44 58106  12.1%} ) 0 49634   0.0
0 510114   0.439   0.439   0.000  12.6% 0.000645  64367 224148.15 ({   0.00 0   0.0%} {   0.00 2628   0.5%} {   0.44 61739  12.1%} ) 0 52793   0.0
0 540128   0.439   0.441  -0.003  12.7% 0.000619  68334 237940.83 ({   0.00 0   0.0%} {   0.00 2816   0.5%} {   0.44 65518  12.1%} ) 0 55872   0.0
0 570137   0.441   0.440   0.000  12.6% 0.000619  72077 251076.52 ({   0.00 0   0.0%} {   0.00 2972   0.5%} {   0.44 69105  12.1%} ) 0 58944   0.0
0 600137   0.440   0.440   0.001  12.6% 0.000619  75727 263935.44 ({   0.00 0   0.0%} {   0.00 3112   0.5%} {   0.44 72615  12.1%} ) 0 62057   0.0
0 630149   0.440   0.440  -0.001  12.6% 0.000594  79579 277351.93 ({   0.00 0   0.0%} {   0.00 3258   0.5%} {   0.44 76321  12.1%} ) 0 65100   0.0
0 660151   0.440   0.440   0.001  12.6% 0.000594  83311 290276.18 ({   0.00 0   0.0%} {   0.00 3407   0.5%} {   0.44 79904  12.1%} ) 0 68168   0.0
0 690166   0.440   0.439   0.001  12.6% 0.000594  87009 303287.78 ({   0.00 0   0.0%} {   0.00 3572   0.5%} {   0.44 83437  12.1%} ) 0 71256   0.0
0 715474   0.439   0.439   0.001  12.6% 0.000594  90176 314218.36 ({   0.00 0   0.0%} {   0.00 3684   0.5%} {   0.44 86492  12.1%} ) 0 73870   0.0
Finished on Sat Jan 26 22:41:59 Pacific Standard Time 2002
NN_saveWeights save_16.wgt
Loading from c:tmpFile07.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile07.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 722077 in 74525 Words. Total 722077 in 74525 words
Good+Bad: 722077 in 74525 words.
Total 722077 in 74525 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 722077 in 74525 Words. Total 722077 in 74525 words
Good+Bad: 722077 in 74525 words.
Tot Mem 116128 (kB)]
Data loading complete at Sat Jan 26 22:43:18 Pacific Standard Time 2002
m_bUseBadWords = 1
17 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30002   0.000   0.431  -1.000  12.4% 0.000475  3710  12936.24 ({   0.00 0   0.0%} {   0.00 158   0.5%} {   0.43 3552  11.8%} ) 0 3168   0.0
0 60007   0.431   0.438  -0.016  12.5% 0.000475  7527  26283.24 ({   0.00 0   0.0%} {   0.00 373   0.6%} {   0.44 7154  11.9%} ) 0 6353   0.0
0 90034   0.438   0.442  -0.009  12.6% 0.000475  11356  39803.01 ({   0.00 0   0.0%} {   0.00 510   0.6%} {   0.44 10846  12.0%} ) 0 9508   0.0
0 120045   0.442   0.441   0.002  12.6% 0.000475  15114  52978.28 ({   0.00 0   0.0%} {   0.00 703   0.6%} {   0.44 14411  12.0%} ) 0 12627   0.0
0 150046   0.441   0.440   0.002  12.5% 0.000475  18829  66095.01 ({   0.00 0   0.0%} {   0.00 884   0.6%} {   0.44 17945  12.0%} ) 0 15600   0.0
0 180051   0.440   0.440   0.000  12.6% 0.000475  22626  79283.25 ({   0.00 0   0.0%} {   0.00 1051   0.6%} {   0.44 21575  12.0%} ) 0 18660   0.0
0 210055   0.440   0.439   0.002  12.6% 0.000475  26453  92267.63 ({   0.00 0   0.0%} {   0.00 1223   0.6%} {   0.44 25230  12.0%} ) 0 21763   0.0
0 240077   0.439   0.436   0.007  12.6% 0.000475  30131 104694.35 ({   0.00 0   0.0%} {   0.00 1391   0.6%} {   0.43 28740  12.0%} ) 0 24831   0.0
0 270081   0.436   0.435   0.003  12.5% 0.000475  33769 117468.38 ({   0.00 0   0.0%} {   0.00 1550   0.6%} {   0.43 32219  11.9%} ) 0 27919   0.0
0 300084   0.435   0.436  -0.002  12.5% 0.000475  37554 130724.25 ({   0.00 0   0.0%} {   0.00 1685   0.6%} {   0.43 35869  12.0%} ) 0 30974   0.0
0 330088   0.436   0.438  -0.006  12.6% 0.000475  41461 144667.44 ({   0.00 0   0.0%} {   0.00 1874   0.6%} {   0.44 39587  12.0%} ) 0 34038   0.0
0 360103   0.438   0.438  -0.000  12.5% 0.000475  45164 157823.63 ({   0.00 0   0.0%} {   0.00 2018   0.6%} {   0.44 43146  12.0%} ) 0 37195   0.0
0 390113   0.438   0.437   0.002  12.5% 0.000475  48830 170595.75 ({   0.00 0   0.0%} {   0.00 2169   0.6%} {   0.44 46661  12.0%} ) 0 40308   0.0
0 420127   0.437   0.437  -0.000  12.5% 0.000475  52490 183748.47 ({   0.00 0   0.0%} {   0.00 2304   0.5%} {   0.44 50186  11.9%} ) 0 43444   0.0
0 450133   0.437   0.437   0.001  12.5% 0.000475  56249 196663.20 ({   0.00 0   0.0%} {   0.00 2453   0.5%} {   0.43 53796  12.0%} ) 0 46522   0.0
0 480133   0.437   0.437  -0.001  12.5% 0.000475  60047 209979.50 ({   0.00 0   0.0%} {   0.00 2614   0.5%} {   0.44 57433  12.0%} ) 0 49552   0.0
0 510145   0.437   0.438  -0.001  12.5% 0.000475  63873 223245.89 ({   0.00 0   0.0%} {   0.00 2763   0.5%} {   0.44 61110  12.0%} ) 0 52607   0.0
0 540145   0.438   0.438  -0.002  12.5% 0.000475  67709 236730.82 ({   0.00 0   0.0%} {   0.00 2915   0.5%} {   0.44 64794  12.0%} ) 0 55710   0.0
0 570153   0.438   0.438   0.001  12.5% 0.000475  71431 249538.89 ({   0.00 0   0.0%} {   0.00 3088   0.5%} {   0.44 68343  12.0%} ) 0 58916   0.0
0 600156   0.438   0.437   0.001  12.5% 0.000475  75104 262514.90 ({   0.00 0   0.0%} {   0.00 3230   0.5%} {   0.44 71874  12.0%} ) 0 62033   0.0
0 630161   0.437   0.438  -0.001  12.5% 0.000475  78924 275800.29 ({   0.00 0   0.0%} {   0.00 3426   0.5%} {   0.44 75498  12.0%} ) 0 65126   0.0
0 660169   0.438   0.438  -0.000  12.5% 0.000475  82690 288974.37 ({   0.00 0   0.0%} {   0.00 3564   0.5%} {   0.44 79126  12.0%} ) 0 68126   0.0
0 690181   0.438   0.438  -0.001  12.5% 0.000475  86595 302487.39 ({   0.00 0   0.0%} {   0.00 3718   0.5%} {   0.44 82877  12.0%} ) 0 71212   0.0
0 720191   0.438   0.439  -0.001  12.6% 0.000475  90407 315960.00 ({   0.00 0   0.0%} {   0.00 3872   0.5%} {   0.44 86535  12.0%} ) 0 74285   0.0
0 721915   0.439   0.439   0.000  12.5% 0.000475  90585 316585.99 ({   0.00 0   0.0%} {   0.00 3881   0.5%} {   0.44 86704  12.0%} ) 0 74459   0.0
Finished on Sun Jan 27 01:52:23 Pacific Standard Time 2002
NN_saveWeights save_17.wgt
Loading from c:tmpFile08.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile08.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 722515 in 74349 Words. Total 722515 in 74349 words
Good+Bad: 722515 in 74349 words.
Total 722515 in 74349 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 722515 in 74349 Words. Total 722515 in 74349 words
Good+Bad: 722515 in 74349 words.
Tot Mem 116197 (kB)]
Data loading complete at Sun Jan 27 01:53:42 Pacific Standard Time 2002
m_bUseBadWords = 1
18 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30012   0.000   0.452  -1.000  13.2% 0.000500  3968  13551.63 ({   0.00 0   0.0%} {   0.00 205   0.7%} {   0.45 3763  12.5%} ) 0 3092   0.0
0 60015   0.452   0.457  -0.013  13.0% 0.000500  7806  27453.40 ({   0.00 0   0.0%} {   0.00 353   0.6%} {   0.46 7453  12.4%} ) 0 6139   0.0
0 90024   0.457   0.457   0.002  13.0% 0.000500  11726  41107.38 ({   0.00 0   0.0%} {   0.00 532   0.6%} {   0.45 11194  12.4%} ) 0 9225   0.0
0 120033   0.457   0.452   0.010  12.9% 0.000500  15523  54288.83 ({   0.00 0   0.0%} {   0.00 714   0.6%} {   0.45 14809  12.3%} ) 0 12303   0.0
0 150042   0.452   0.451   0.003  12.9% 0.000500  19408  67663.88 ({   0.00 0   0.0%} {   0.00 900   0.6%} {   0.45 18508  12.3%} ) 0 15454   0.0
0 180047   0.451   0.450   0.003  12.9% 0.000500  23254  80939.51 ({   0.00 0   0.0%} {   0.00 1075   0.6%} {   0.45 22179  12.3%} ) 0 18550   0.0
0 210056   0.450   0.446   0.008  12.8% 0.000500  26929  93637.69 ({   0.00 0   0.0%} {   0.00 1195   0.6%} {   0.44 25734  12.3%} ) 0 21605   0.0
0 240056   0.446   0.446   0.000  12.8% 0.000500  30756 107001.06 ({   0.00 0   0.0%} {   0.00 1344   0.6%} {   0.44 29412  12.3%} ) 0 24720   0.0
0 270063   0.446   0.445   0.001  12.8% 0.000500  34607 120298.86 ({   0.00 0   0.0%} {   0.00 1534   0.6%} {   0.44 33073  12.2%} ) 0 27831   0.0
0 300068   0.445   0.445   0.000  12.8% 0.000500  38344 133656.34 ({   0.00 0   0.0%} {   0.00 1660   0.6%} {   0.44 36684  12.2%} ) 0 30938   0.0
0 330073   0.445   0.445   0.000  12.8% 0.000500  42197 146983.16 ({   0.00 0   0.0%} {   0.00 1852   0.6%} {   0.44 40345  12.2%} ) 0 33995   0.0
0 360077   0.445   0.443   0.005  12.7% 0.000500  45794 159586.89 ({   0.00 0   0.0%} {   0.00 2009   0.6%} {   0.44 43785  12.2%} ) 0 37132   0.0
0 390078   0.443   0.442   0.002  12.7% 0.000500  49511 172551.41 ({   0.00 0   0.0%} {   0.00 2189   0.6%} {   0.44 47322  12.1%} ) 0 40289   0.0
0 420081   0.442   0.440   0.004  12.6% 0.000500  52973 184991.38 ({   0.00 0   0.0%} {   0.00 2321   0.6%} {   0.44 50652  12.1%} ) 0 43300   0.0
0 450098   0.440   0.440   0.002  12.6% 0.000500  56685 197868.76 ({   0.00 0   0.0%} {   0.00 2465   0.5%} {   0.44 54220  12.0%} ) 0 46412   0.0
0 480103   0.440   0.440  -0.001  12.6% 0.000500  60550 211248.88 ({   0.00 0   0.0%} {   0.00 2620   0.5%} {   0.44 57930  12.1%} ) 0 49496   0.0
0 510104   0.440   0.439   0.002  12.6% 0.000500  64219 223942.20 ({   0.00 0   0.0%} {   0.00 2792   0.5%} {   0.44 61427  12.0%} ) 0 52553   0.0
0 540106   0.439   0.439  -0.001  12.6% 0.000500  67957 237328.71 ({   0.00 0   0.0%} {   0.00 2944   0.5%} {   0.44 65013  12.0%} ) 0 55713   0.0
0 570112   0.439   0.440  -0.000  12.6% 0.000500  71747 250572.36 ({   0.00 0   0.0%} {   0.00 3095   0.5%} {   0.44 68652  12.0%} ) 0 58807   0.0
0 600115   0.440   0.439   0.001  12.6% 0.000500  75483 263469.11 ({   0.00 0   0.0%} {   0.00 3264   0.5%} {   0.44 72219  12.0%} ) 0 61885   0.0
0 630119   0.439   0.440  -0.002  12.6% 0.000500  79442 277081.24 ({   0.00 0   0.0%} {   0.00 3453   0.5%} {   0.44 75989  12.1%} ) 0 64871   0.0
0 660127   0.440   0.439   0.003  12.6% 0.000500  82938 289528.89 ({   0.00 0   0.0%} {   0.00 3606   0.5%} {   0.44 79332  12.0%} ) 0 67922   0.0
0 690130   0.439   0.439   0.000  12.6% 0.000500  86709 302630.23 ({   0.00 0   0.0%} {   0.00 3752   0.5%} {   0.44 82957  12.0%} ) 0 70969   0.0
0 720140   0.439   0.438   0.000  12.6% 0.000500  90496 315670.38 ({   0.00 0   0.0%} {   0.00 3930   0.5%} {   0.44 86566  12.0%} ) 0 74076   0.0
0 722356   0.438   0.439  -0.001  12.6% 0.000500  90814 316871.06 ({   0.00 0   0.0%} {   0.00 3941   0.5%} {   0.44 86873  12.0%} ) 0 74288   0.0
Finished on Sun Jan 27 05:02:53 Pacific Standard Time 2002
NN_saveWeights save_18.wgt
Loading from c:tmpFile09.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile09.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 719743 in 74284 Words. Total 719743 in 74284 words
Good+Bad: 719743 in 74284 words.
Total 719743 in 74284 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 719743 in 74284 Words. Total 719743 in 74284 words
Good+Bad: 719743 in 74284 words.
Tot Mem 115753 (kB)]
Data loading complete at Sun Jan 27 05:04:11 Pacific Standard Time 2002
m_bUseBadWords = 1
19 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30008   0.000   0.420  -1.000  11.9% 0.000500  3562  12602.41 ({   0.00 0   0.0%} {   0.00 152   0.5%} {   0.42 3410  11.4%} ) 0 3149   0.0
0 60015   0.420   0.424  -0.009  12.2% 0.000500  7328  25422.91 ({   0.00 0   0.0%} {   0.00 352   0.6%} {   0.42 6976  11.6%} ) 0 6236   0.0
0 90017   0.424   0.432  -0.018  12.4% 0.000500  11176  38849.53 ({   0.00 0   0.0%} {   0.00 523   0.6%} {   0.43 10653  11.8%} ) 0 9320   0.0
0 120022   0.432   0.429   0.006  12.4% 0.000500  14871  51486.25 ({   0.00 0   0.0%} {   0.00 701   0.6%} {   0.43 14170  11.8%} ) 0 12481   0.0
0 150027   0.429   0.430  -0.003  12.4% 0.000500  18563  64537.70 ({   0.00 0   0.0%} {   0.00 844   0.6%} {   0.43 17719  11.8%} ) 0 15570   0.0
0 180036   0.430   0.431  -0.001  12.4% 0.000500  22273  77516.39 ({   0.00 0   0.0%} {   0.00 998   0.6%} {   0.43 21275  11.8%} ) 0 18657   0.0
0 210036   0.431   0.433  -0.006  12.5% 0.000500  26214  90975.87 ({   0.00 0   0.0%} {   0.00 1176   0.6%} {   0.43 25038  11.9%} ) 0 21727   0.0
0 240037   0.433   0.433   0.001  12.5% 0.000500  29907 103827.44 ({   0.00 0   0.0%} {   0.00 1336   0.6%} {   0.43 28571  11.9%} ) 0 24894   0.0
0 270037   0.433   0.434  -0.003  12.4% 0.000500  33587 117102.21 ({   0.00 0   0.0%} {   0.00 1455   0.5%} {   0.43 32132  11.9%} ) 0 27939   0.0
0 300037   0.434   0.434  -0.002  12.5% 0.000500  37381 130345.46 ({   0.00 0   0.0%} {   0.00 1618   0.5%} {   0.43 35763  11.9%} ) 0 31035   0.0
0 330039   0.434   0.433   0.003  12.4% 0.000500  40963 142916.65 ({   0.00 0   0.0%} {   0.00 1756   0.5%} {   0.43 39207  11.9%} ) 0 34144   0.0
0 360045   0.433   0.433  -0.001  12.4% 0.000500  44746 156033.04 ({   0.00 0   0.0%} {   0.00 1916   0.5%} {   0.43 42830  11.9%} ) 0 37187   0.0
0 390048   0.433   0.432   0.002  12.4% 0.000500  48417 168646.01 ({   0.00 0   0.0%} {   0.00 2075   0.5%} {   0.43 46342  11.9%} ) 0 40344   0.0
0 420050   0.432   0.432  -0.000  12.4% 0.000500  52063 181653.26 ({   0.00 0   0.0%} {   0.00 2237   0.5%} {   0.43 49826  11.9%} ) 0 43389   0.0
0 450060   0.432   0.432   0.001  12.4% 0.000500  55715 194420.92 ({   0.00 0   0.0%} {   0.00 2373   0.5%} {   0.43 53342  11.9%} ) 0 46508   0.0
0 480063   0.432   0.432  -0.001  12.4% 0.000500  59469 207524.20 ({   0.00 0   0.0%} {   0.00 2554   0.5%} {   0.43 56915  11.9%} ) 0 49579   0.0
0 510069   0.432   0.432   0.001  12.4% 0.000500  63155 220239.28 ({   0.00 0   0.0%} {   0.00 2731   0.5%} {   0.43 60424  11.8%} ) 0 52668   0.0
0 540070   0.432   0.431   0.001  12.4% 0.000500  66851 233024.78 ({   0.00 0   0.0%} {   0.00 2885   0.5%} {   0.43 63966  11.8%} ) 0 55831   0.0
0 570070   0.431   0.432  -0.001  12.4% 0.000500  70576 246109.66 ({   0.00 0   0.0%} {   0.00 3063   0.5%} {   0.43 67513  11.8%} ) 0 58923   0.0
0 600077   0.432   0.431   0.001  12.4% 0.000500  74236 258876.80 ({   0.00 0   0.0%} {   0.00 3227   0.5%} {   0.43 71009  11.8%} ) 0 62028   0.0
0 630105   0.431   0.432  -0.000  12.3% 0.000500  77811 271913.27 ({   0.00 0   0.0%} {   0.00 3350   0.5%} {   0.43 74461  11.8%} ) 0 65122   0.0
0 660107   0.432   0.432  -0.002  12.4% 0.000500  81598 285332.19 ({   0.00 0   0.0%} {   0.00 3512   0.5%} {   0.43 78086  11.8%} ) 0 68171   0.0
0 690120   0.432   0.432  -0.000  12.4% 0.000500  85343 298401.74 ({   0.00 0   0.0%} {   0.00 3650   0.5%} {   0.43 81693  11.8%} ) 0 71195   0.0
0 719593   0.432   0.433  -0.002  12.4% 0.000500  89211 311714.02 ({   0.00 0   0.0%} {   0.00 3833   0.5%} {   0.43 85378  11.9%} ) 0 74222   0.0
Finished on Sun Jan 27 08:12:40 Pacific Standard Time 2002
NN_saveWeights save_19.wgt
Loading from c:tmpFile10.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile10.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 727022 in 74627 Words. Total 727022 in 74627 words
Good+Bad: 727022 in 74627 words.
Total 727022 in 74627 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 727022 in 74627 Words. Total 727022 in 74627 words
Good+Bad: 727022 in 74627 words.
Tot Mem 116920 (kB)]
Data loading complete at Sun Jan 27 08:13:59 Pacific Standard Time 2002
m_bUseBadWords = 1
20 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30004   0.000   0.432  -1.000  12.6% 0.000500  3789  12964.22 ({   0.00 0   0.0%} {   0.00 188   0.6%} {   0.43 3601  12.0%} ) 0 3085   0.0
0 60004   0.432   0.444  -0.026  12.7% 0.000500  7641  26630.22 ({   0.00 0   0.0%} {   0.00 352   0.6%} {   0.44 7289  12.1%} ) 0 6146   0.0
0 90005   0.444   0.443   0.002  12.7% 0.000500  11445  39871.04 ({   0.00 0   0.0%} {   0.00 525   0.6%} {   0.44 10920  12.1%} ) 0 9235   0.0
0 120006   0.443   0.438   0.012  12.6% 0.000500  15167  52553.55 ({   0.00 0   0.0%} {   0.00 693   0.6%} {   0.44 14474  12.1%} ) 0 12378   0.0
0 150011   0.438   0.437   0.001  12.6% 0.000500  18880  65614.41 ({   0.00 0   0.0%} {   0.00 861   0.6%} {   0.44 18019  12.0%} ) 0 15429   0.0
0 180011   0.437   0.436   0.004  12.5% 0.000500  22465  78459.61 ({   0.00 0   0.0%} {   0.00 1010   0.6%} {   0.43 21455  11.9%} ) 0 18568   0.0
0 210016   0.436   0.436  -0.000  12.5% 0.000500  26190  91542.44 ({   0.00 0   0.0%} {   0.00 1156   0.6%} {   0.43 25034  11.9%} ) 0 21722   0.0
0 240018   0.436   0.435   0.002  12.5% 0.000500  29905 104364.58 ({   0.00 0   0.0%} {   0.00 1322   0.6%} {   0.43 28583  11.9%} ) 0 24847   0.0
0 270027   0.435   0.435  -0.000  12.5% 0.000500  33632 117451.07 ({   0.00 0   0.0%} {   0.00 1508   0.6%} {   0.43 32124  11.9%} ) 0 27913   0.0
0 300039   0.435   0.435  -0.000  12.5% 0.000500  37365 130566.15 ({   0.00 0   0.0%} {   0.00 1664   0.6%} {   0.43 35701  11.9%} ) 0 31015   0.0
0 330042   0.435   0.434   0.002  12.4% 0.000500  40929 143336.15 ({   0.00 0   0.0%} {   0.00 1795   0.5%} {   0.43 39134  11.9%} ) 0 34085   0.0
0 360056   0.434   0.435  -0.003  12.4% 0.000500  44694 156766.81 ({   0.00 0   0.0%} {   0.00 1956   0.5%} {   0.43 42738  11.9%} ) 0 37147   0.0
0 390087   0.435   0.436  -0.002  12.5% 0.000500  48609 170263.65 ({   0.00 0   0.0%} {   0.00 2151   0.6%} {   0.43 46458  11.9%} ) 0 40231   0.0
0 420089   0.436   0.436   0.001  12.5% 0.000500  52324 183240.30 ({   0.00 0   0.0%} {   0.00 2297   0.5%} {   0.43 50027  11.9%} ) 0 43290   0.0
0 450093   0.436   0.435   0.002  12.4% 0.000500  55969 195989.13 ({   0.00 0   0.0%} {   0.00 2470   0.5%} {   0.43 53499  11.9%} ) 0 46352   0.0
0 480095   0.435   0.437  -0.003  12.5% 0.000500  59855 209693.52 ({   0.00 0   0.0%} {   0.00 2610   0.5%} {   0.43 57245  11.9%} ) 0 49432   0.0
0 510102   0.437   0.437   0.000  12.5% 0.000500  63577 222726.92 ({   0.00 0   0.0%} {   0.00 2764   0.5%} {   0.43 60813  11.9%} ) 0 52479   0.0
0 540108   0.437   0.437  -0.000  12.5% 0.000500  67337 235934.33 ({   0.00 0   0.0%} {   0.00 2916   0.5%} {   0.43 64421  11.9%} ) 0 55600   0.0
0 570126   0.437   0.437  -0.001  12.5% 0.000500  71047 249187.78 ({   0.00 0   0.0%} {   0.00 3042   0.5%} {   0.43 68005  11.9%} ) 0 58627   0.0
0 600130   0.437   0.437   0.001  12.5% 0.000500  74726 262068.04 ({   0.00 0   0.0%} {   0.00 3225   0.5%} {   0.43 71501  11.9%} ) 0 61714   0.0
0 630144   0.437   0.437   0.000  12.5% 0.000500  78483 275171.07 ({   0.00 0   0.0%} {   0.00 3386   0.5%} {   0.43 75097  11.9%} ) 0 64742   0.0
0 660149   0.437   0.436   0.001  12.5% 0.000500  82201 288121.39 ({   0.00 0   0.0%} {   0.00 3564   0.5%} {   0.43 78637  11.9%} ) 0 67787   0.0
0 690160   0.436   0.436   0.001  12.4% 0.000500  85841 301067.69 ({   0.00 0   0.0%} {   0.00 3711   0.5%} {   0.43 82130  11.9%} ) 0 70862   0.0
0 720161   0.436   0.436   0.001  12.4% 0.000500  89529 313849.54 ({   0.00 0   0.0%} {   0.00 3877   0.5%} {   0.43 85652  11.9%} ) 0 73870   0.0
0 726841   0.436   0.436  -0.000  12.4% 0.000500  90430 316904.03 ({   0.00 0   0.0%} {   0.00 3917   0.5%} {   0.43 86513  11.9%} ) 0 74554   0.0
Finished on Sun Jan 27 11:24:23 Pacific Standard Time 2002
NN_saveWeights save_20.wgt
Loading from c:tmpFile11.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile11.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 726703 in 74955 Words. Total 726703 in 74955 words
Good+Bad: 726703 in 74955 words.
Total 726703 in 74955 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 726703 in 74955 Words. Total 726703 in 74955 words
Good+Bad: 726703 in 74955 words.
Tot Mem 116872 (kB)]
Data loading complete at Sun Jan 27 11:25:43 Pacific Standard Time 2002
m_bUseBadWords = 1
21 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30006   0.000   0.442  -1.000  12.8% 0.000500  3853  13272.40 ({   0.00 0   0.0%} {   0.00 161   0.5%} {   0.44 3692  12.3%} ) 0 3119   0.0
0 60008   0.442   0.435   0.016  12.6% 0.000500  7567  26117.82 ({   0.00 0   0.0%} {   0.00 312   0.5%} {   0.43 7255  12.1%} ) 0 6248   0.0
0 90014   0.435   0.439  -0.008  12.6% 0.000500  11325  39498.25 ({   0.00 0   0.0%} {   0.00 457   0.5%} {   0.44 10868  12.1%} ) 0 9365   0.0
0 120015   0.439   0.440  -0.002  12.6% 0.000500  15177  52765.60 ({   0.00 0   0.0%} {   0.00 630   0.5%} {   0.44 14547  12.1%} ) 0 12496   0.0
0 150016   0.440   0.440  -0.001  12.6% 0.000500  18919  66044.73 ({   0.00 0   0.0%} {   0.00 790   0.5%} {   0.44 18129  12.1%} ) 0 15609   0.0
0 180020   0.440   0.438   0.005  12.6% 0.000500  22626  78864.22 ({   0.00 0   0.0%} {   0.00 950   0.5%} {   0.44 21676  12.0%} ) 0 18587   0.0
0 210023   0.438   0.436   0.004  12.5% 0.000500  26274  91665.51 ({   0.00 0   0.0%} {   0.00 1115   0.5%} {   0.43 25159  12.0%} ) 0 21666   0.0
0 240026   0.436   0.437  -0.002  12.5% 0.000500  30033 104973.61 ({   0.00 0   0.0%} {   0.00 1272   0.5%} {   0.44 28761  12.0%} ) 0 24700   0.0
0 270057   0.437   0.437   0.001  12.5% 0.000500  33739 117946.00 ({   0.00 0   0.0%} {   0.00 1444   0.5%} {   0.43 32295  12.0%} ) 0 27788   0.0
0 300061   0.437   0.437  -0.001  12.5% 0.000500  37544 131147.12 ({   0.00 0   0.0%} {   0.00 1645   0.5%} {   0.43 35899  12.0%} ) 0 30994   0.0
0 330065   0.437   0.436   0.001  12.5% 0.000500  41219 144065.80 ({   0.00 0   0.0%} {   0.00 1800   0.5%} {   0.43 39419  11.9%} ) 0 34090   0.0
0 360066   0.436   0.436   0.001  12.5% 0.000500  44870 156962.07 ({   0.00 0   0.0%} {   0.00 1923   0.5%} {   0.43 42947  11.9%} ) 0 37165   0.0
0 390075   0.436   0.438  -0.004  12.5% 0.000500  48764 170706.00 ({   0.00 0   0.0%} {   0.00 2074   0.5%} {   0.44 46690  12.0%} ) 0 40298   0.0
0 420075   0.438   0.437   0.002  12.5% 0.000500  52468 183444.10 ({   0.00 0   0.0%} {   0.00 2246   0.5%} {   0.43 50222  12.0%} ) 0 43391   0.0
0 450076   0.437   0.437  -0.000  12.5% 0.000500  56195 196552.83 ({   0.00 0   0.0%} {   0.00 2389   0.5%} {   0.43 53806  12.0%} ) 0 46503   0.0
0 480077   0.437   0.436   0.002  12.5% 0.000500  59862 209303.23 ({   0.00 0   0.0%} {   0.00 2534   0.5%} {   0.43 57328  11.9%} ) 0 49626   0.0
0 510079   0.436   0.436  -0.001  12.5% 0.000500  63629 222623.82 ({   0.00 0   0.0%} {   0.00 2681   0.5%} {   0.43 60948  11.9%} ) 0 52667   0.0
0 540079   0.436   0.436   0.000  12.5% 0.000500  67332 235621.46 ({   0.00 0   0.0%} {   0.00 2823   0.5%} {   0.43 64509  11.9%} ) 0 55743   0.0
0 570084   0.436   0.436   0.001  12.5% 0.000500  71020 248582.78 ({   0.00 0   0.0%} {   0.00 2955   0.5%} {   0.43 68065  11.9%} ) 0 58795   0.0
0 600087   0.436   0.436  -0.001  12.5% 0.000500  74842 261871.58 ({   0.00 0   0.0%} {   0.00 3117   0.5%} {   0.43 71725  12.0%} ) 0 61860   0.0
0 630087   0.436   0.437  -0.000  12.5% 0.000500  78587 275048.68 ({   0.00 0   0.0%} {   0.00 3265   0.5%} {   0.43 75322  12.0%} ) 0 64937   0.0
0 660096   0.437   0.436   0.001  12.5% 0.000500  82220 287903.74 ({   0.00 0   0.0%} {   0.00 3441   0.5%} {   0.43 78779  11.9%} ) 0 68044   0.0
0 690099   0.436   0.436  -0.000  12.5% 0.000500  85974 301128.49 ({   0.00 0   0.0%} {   0.00 3573   0.5%} {   0.43 82401  11.9%} ) 0 71092   0.0
0 720107   0.436   0.436   0.000  12.5% 0.000500  89668 314105.92 ({   0.00 0   0.0%} {   0.00 3714   0.5%} {   0.43 85954  11.9%} ) 0 74200   0.0
0 726519   0.436   0.436  -0.000  12.5% 0.000500  90461 316912.05 ({   0.00 0   0.0%} {   0.00 3749   0.5%} {   0.43 86712  11.9%} ) 0 74878   0.0
Finished on Sun Jan 27 14:36:00 Pacific Standard Time 2002
NN_saveWeights save_21.wgt
Loading from c:tmpFile12.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile12.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 726802 in 74389 Words. Total 726802 in 74389 words
Good+Bad: 726802 in 74389 words.
Total 726802 in 74389 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 726802 in 74389 Words. Total 726802 in 74389 words
Good+Bad: 726802 in 74389 words.
Tot Mem 116883 (kB)]
Data loading complete at Sun Jan 27 14:37:18 Pacific Standard Time 2002
m_bUseBadWords = 1
22 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30004   0.000   0.431  -1.000  12.2% 0.000500  3658  12934.48 ({   0.00 0   0.0%} {   0.00 145   0.5%} {   0.43 3513  11.7%} ) 0 3100   0.0
0 60009   0.431   0.436  -0.011  12.5% 0.000500  7486  26159.04 ({   0.00 0   0.0%} {   0.00 286   0.5%} {   0.43 7200  12.0%} ) 0 6161   0.0
0 90009   0.436   0.442  -0.013  12.6% 0.000500  11371  39770.75 ({   0.00 0   0.0%} {   0.00 435   0.5%} {   0.44 10936  12.1%} ) 0 9300   0.0
0 120010   0.442   0.444  -0.006  12.7% 0.000500  15218  53331.71 ({   0.00 0   0.0%} {   0.00 610   0.5%} {   0.44 14608  12.2%} ) 0 12420   0.0
0 150020   0.444   0.442   0.005  12.6% 0.000500  18920  66357.94 ({   0.00 0   0.0%} {   0.00 760   0.5%} {   0.44 18160  12.1%} ) 0 15541   0.0
0 180021   0.442   0.438   0.009  12.5% 0.000500  22581  78915.66 ({   0.00 0   0.0%} {   0.00 928   0.5%} {   0.44 21653  12.0%} ) 0 18680   0.0
0 210031   0.438   0.439  -0.001  12.6% 0.000500  26362  92134.08 ({   0.00 0   0.0%} {   0.00 1106   0.5%} {   0.44 25256  12.0%} ) 0 21762   0.0
0 240031   0.439   0.438   0.001  12.5% 0.000500  30069 105183.91 ({   0.00 0   0.0%} {   0.00 1233   0.5%} {   0.44 28836  12.0%} ) 0 24811   0.0
0 270035   0.438   0.439  -0.001  12.5% 0.000500  33809 118473.74 ({   0.00 0   0.0%} {   0.00 1401   0.5%} {   0.44 32408  12.0%} ) 0 27899   0.0
0 300035   0.439   0.439   0.000  12.5% 0.000500  37492 131593.95 ({   0.00 0   0.0%} {   0.00 1538   0.5%} {   0.44 35954  12.0%} ) 0 30979   0.0
0 330043   0.439   0.437   0.004  12.4% 0.000500  41041 144231.22 ({   0.00 0   0.0%} {   0.00 1693   0.5%} {   0.43 39348  11.9%} ) 0 34088   0.0
0 360045   0.437   0.440  -0.006  12.5% 0.000500  45066 158256.47 ({   0.00 0   0.0%} {   0.00 1831   0.5%} {   0.44 43235  12.0%} ) 0 37178   0.0
0 390056   0.440   0.438   0.003  12.5% 0.000500  48666 170967.51 ({   0.00 0   0.0%} {   0.00 1982   0.5%} {   0.44 46684  12.0%} ) 0 40218   0.0
0 420060   0.438   0.438   0.001  12.5% 0.000500  52415 183928.01 ({   0.00 0   0.0%} {   0.00 2117   0.5%} {   0.44 50298  12.0%} ) 0 43248   0.0
0 450062   0.438   0.437   0.001  12.4% 0.000500  56030 196855.37 ({   0.00 0   0.0%} {   0.00 2283   0.5%} {   0.44 53747  11.9%} ) 0 46335   0.0
0 480073   0.437   0.437   0.000  12.4% 0.000500  59743 209965.87 ({   0.00 0   0.0%} {   0.00 2461   0.5%} {   0.44 57282  11.9%} ) 0 49370   0.0
0 510078   0.437   0.436   0.003  12.4% 0.000500  63315 222417.57 ({   0.00 0   0.0%} {   0.00 2593   0.5%} {   0.43 60722  11.9%} ) 0 52404   0.0
0 540078   0.436   0.435   0.002  12.4% 0.000500  66920 235129.50 ({   0.00 0   0.0%} {   0.00 2716   0.5%} {   0.43 64204  11.9%} ) 0 55443   0.0
0 570096   0.435   0.435  -0.000  12.4% 0.000500  70616 248262.18 ({   0.00 0   0.0%} {   0.00 2854   0.5%} {   0.43 67762  11.9%} ) 0 58523   0.0
0 600102   0.435   0.436  -0.001  12.4% 0.000500  74346 261462.48 ({   0.00 0   0.0%} {   0.00 2998   0.5%} {   0.43 71348  11.9%} ) 0 61577   0.0
0 630103   0.436   0.435   0.002  12.4% 0.000500  77953 273886.47 ({   0.00 0   0.0%} {   0.00 3134   0.5%} {   0.43 74819  11.9%} ) 0 64646   0.0
0 660107   0.435   0.435   0.000  12.4% 0.000500  81669 286836.41 ({   0.00 0   0.0%} {   0.00 3297   0.5%} {   0.43 78372  11.9%} ) 0 67607   0.0
0 690107   0.435   0.434   0.001  12.4% 0.000500  85356 299717.88 ({   0.00 0   0.0%} {   0.00 3459   0.5%} {   0.43 81897  11.9%} ) 0 70599   0.0
0 720108   0.434   0.435  -0.001  12.4% 0.000500  89257 313186.48 ({   0.00 0   0.0%} {   0.00 3627   0.5%} {   0.43 85630  11.9%} ) 0 73615   0.0
0 726586   0.435   0.435   0.000  12.4% 0.000500  90056 315909.56 ({   0.00 0   0.0%} {   0.00 3663   0.5%} {   0.43 86393  11.9%} ) 0 74303   0.0
Finished on Sun Jan 27 17:47:28 Pacific Standard Time 2002
NN_saveWeights save_22.wgt
Loading from c:tmpFile13.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile13.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 716121 in 73999 Words. Total 716121 in 73999 words
Good+Bad: 716121 in 73999 words.
Total 716121 in 73999 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 716121 in 73999 Words. Total 716121 in 73999 words
Good+Bad: 716121 in 73999 words.
Tot Mem 115171 (kB)]
Data loading complete at Sun Jan 27 17:48:46 Pacific Standard Time 2002
m_bUseBadWords = 1
23 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30008   0.000   0.425  -1.000  12.2% 0.000500  3660  12746.85 ({   0.00 0   0.0%} {   0.00 156   0.5%} {   0.42 3504  11.7%} ) 0 3129   0.0
0 60016   0.425   0.430  -0.012  12.2% 0.000500  7329  25794.23 ({   0.00 0   0.0%} {   0.00 315   0.5%} {   0.43 7014  11.7%} ) 0 6254   0.0
0 90020   0.430   0.437  -0.017  12.5% 0.000500  11264  39341.95 ({   0.00 0   0.0%} {   0.00 484   0.5%} {   0.43 10780  12.0%} ) 0 9347   0.0
0 120022   0.437   0.438  -0.002  12.6% 0.000500  15082  52577.39 ({   0.00 0   0.0%} {   0.00 654   0.5%} {   0.44 14428  12.0%} ) 0 12571   0.0
0 150025   0.438   0.436   0.004  12.5% 0.000500  18718  65468.80 ({   0.00 0   0.0%} {   0.00 798   0.5%} {   0.43 17920  11.9%} ) 0 15667   0.0
0 180028   0.436   0.435   0.002  12.5% 0.000500  22445  78398.46 ({   0.00 0   0.0%} {   0.00 979   0.5%} {   0.43 21466  11.9%} ) 0 18812   0.0
0 210032   0.435   0.438  -0.006  12.5% 0.000500  26263  92008.89 ({   0.00 0   0.0%} {   0.00 1136   0.5%} {   0.44 25127  12.0%} ) 0 21861   0.0
0 240036   0.438   0.434   0.009  12.4% 0.000500  29820 104254.21 ({   0.00 0   0.0%} {   0.00 1312   0.5%} {   0.43 28508  11.9%} ) 0 24978   0.0
0 270059   0.434   0.433   0.004  12.4% 0.000500  33399 116851.83 ({   0.00 0   0.0%} {   0.00 1477   0.5%} {   0.43 31922  11.8%} ) 0 28057   0.0
0 300062   0.433   0.431   0.004  12.3% 0.000500  36955 129289.87 ({   0.00 0   0.0%} {   0.00 1621   0.5%} {   0.43 35334  11.8%} ) 0 31155   0.0
0 330071   0.431   0.430   0.002  12.3% 0.000500  40547 141915.31 ({   0.00 0   0.0%} {   0.00 1807   0.5%} {   0.43 38740  11.7%} ) 0 34280   0.0
0 360071   0.430   0.430  -0.001  12.3% 0.000500  44231 155002.06 ({   0.00 0   0.0%} {   0.00 1979   0.5%} {   0.43 42252  11.7%} ) 0 37405   0.0
0 390071   0.430   0.429   0.003  12.3% 0.000500  47859 167395.21 ({   0.00 0   0.0%} {   0.00 2168   0.6%} {   0.43 45691  11.7%} ) 0 40498   0.0
0 420076   0.429   0.429  -0.000  12.3% 0.000500  51603 180322.80 ({   0.00 0   0.0%} {   0.00 2331   0.6%} {   0.43 49272  11.7%} ) 0 43517   0.0
0 450080   0.429   0.430  -0.001  12.3% 0.000500  55411 193482.79 ({   0.00 0   0.0%} {   0.00 2482   0.6%} {   0.43 52929  11.8%} ) 0 46611   0.0
0 480084   0.430   0.430   0.001  12.3% 0.000500  59105 206214.29 ({   0.00 0   0.0%} {   0.00 2634   0.5%} {   0.43 56471  11.8%} ) 0 49757   0.0
0 510098   0.430   0.430   0.000  12.3% 0.000500  62836 219090.44 ({   0.00 0   0.0%} {   0.00 2816   0.6%} {   0.43 60020  11.8%} ) 0 52890   0.0
0 540109   0.430   0.431  -0.003  12.3% 0.000500  66639 232712.71 ({   0.00 0   0.0%} {   0.00 2961   0.5%} {   0.43 63678  11.8%} ) 0 55954   0.0
0 570112   0.431   0.431  -0.000  12.3% 0.000500  70400 245737.54 ({   0.00 0   0.0%} {   0.00 3098   0.5%} {   0.43 67302  11.8%} ) 0 59083   0.0
0 600122   0.431   0.431  -0.001  12.4% 0.000500  74174 258866.93 ({   0.00 0   0.0%} {   0.00 3265   0.5%} {   0.43 70909  11.8%} ) 0 62192   0.0
0 630147   0.431   0.431   0.001  12.3% 0.000500  77823 271562.51 ({   0.00 0   0.0%} {   0.00 3431   0.5%} {   0.43 74392  11.8%} ) 0 65254   0.0
0 660154   0.431   0.431   0.000  12.3% 0.000500  81488 284423.14 ({   0.00 0   0.0%} {   0.00 3584   0.5%} {   0.43 77904  11.8%} ) 0 68257   0.0
0 690154   0.431   0.431  -0.001  12.4% 0.000500  85274 297650.86 ({   0.00 0   0.0%} {   0.00 3749   0.5%} {   0.43 81525  11.8%} ) 0 71216   0.0
0 715954   0.431   0.432  -0.001  12.4% 0.000500  88590 309207.80 ({   0.00 0   0.0%} {   0.00 3891   0.5%} {   0.43 84699  11.8%} ) 0 73931   0.0
Finished on Sun Jan 27 20:56:25 Pacific Standard Time 2002
NN_saveWeights save_23.wgt
Loading from c:tmpFile14.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile14.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 719706 in 74397 Words. Total 719706 in 74397 words
Good+Bad: 719706 in 74397 words.
Total 719706 in 74397 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 719706 in 74397 Words. Total 719706 in 74397 words
Good+Bad: 719706 in 74397 words.
Tot Mem 115748 (kB)]
Data loading complete at Sun Jan 27 20:57:44 Pacific Standard Time 2002
m_bUseBadWords = 1
24 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30003   0.000   0.429  -1.000  12.4% 0.000500  3708  12861.92 ({   0.00 0   0.0%} {   0.00 163   0.5%} {   0.43 3545  11.8%} ) 0 3142   0.0
0 60007   0.429   0.446  -0.038  12.7% 0.000500  7595  26752.95 ({   0.00 0   0.0%} {   0.00 333   0.6%} {   0.44 7262  12.1%} ) 0 6243   0.0
0 90020   0.446   0.443   0.006  12.6% 0.000500  11368  39906.36 ({   0.00 0   0.0%} {   0.00 495   0.5%} {   0.44 10873  12.1%} ) 0 9384   0.0
0 120027   0.443   0.441   0.005  12.6% 0.000500  15114  52917.77 ({   0.00 0   0.0%} {   0.00 656   0.5%} {   0.44 14458  12.0%} ) 0 12480   0.0
0 150031   0.441   0.443  -0.005  12.7% 0.000500  19076  66445.15 ({   0.00 0   0.0%} {   0.00 860   0.6%} {   0.44 18216  12.1%} ) 0 15609   0.0
0 180033   0.443   0.441   0.004  12.7% 0.000500  22801  79410.39 ({   0.00 0   0.0%} {   0.00 1046   0.6%} {   0.44 21755  12.1%} ) 0 18781   0.0
0 210043   0.441   0.439   0.005  12.6% 0.000500  26480  92147.54 ({   0.00 0   0.0%} {   0.00 1187   0.6%} {   0.44 25293  12.0%} ) 0 21934   0.0
0 240051   0.439   0.439   0.000  12.6% 0.000500  30188 105283.88 ({   0.00 0   0.0%} {   0.00 1374   0.6%} {   0.44 28814  12.0%} ) 0 25020   0.0
0 270055   0.439   0.438   0.002  12.5% 0.000500  33879 118201.36 ({   0.00 0   0.0%} {   0.00 1532   0.6%} {   0.44 32347  12.0%} ) 0 28193   0.0
0 300079   0.438   0.438  -0.001  12.5% 0.000500  37631 131499.07 ({   0.00 0   0.0%} {   0.00 1706   0.6%} {   0.44 35925  12.0%} ) 0 31305   0.0
0 330097   0.438   0.438   0.001  12.6% 0.000500  41439 144573.18 ({   0.00 0   0.0%} {   0.00 1863   0.6%} {   0.44 39576  12.0%} ) 0 34396   0.0
0 360098   0.438   0.436   0.006  12.5% 0.000500  44980 156828.74 ({   0.00 0   0.0%} {   0.00 2026   0.6%} {   0.43 42954  11.9%} ) 0 37476   0.0
0 390117   0.436   0.435   0.000  12.5% 0.000500  48672 169843.25 ({   0.00 0   0.0%} {   0.00 2173   0.6%} {   0.43 46499  11.9%} ) 0 40574   0.0
0 420121   0.435   0.434   0.002  12.4% 0.000500  52285 182492.41 ({   0.00 0   0.0%} {   0.00 2317   0.6%} {   0.43 49968  11.9%} ) 0 43638   0.0
0 450121   0.434   0.434   0.002  12.4% 0.000500  55928 195217.15 ({   0.00 0   0.0%} {   0.00 2474   0.5%} {   0.43 53454  11.9%} ) 0 46694   0.0
0 480121   0.434   0.433   0.001  12.4% 0.000500  59727 208095.61 ({   0.00 0   0.0%} {   0.00 2649   0.6%} {   0.43 57078  11.9%} ) 0 49769   0.0
0 510126   0.433   0.433   0.002  12.4% 0.000500  63381 220718.74 ({   0.00 0   0.0%} {   0.00 2815   0.6%} {   0.43 60566  11.9%} ) 0 52865   0.0
0 540134   0.433   0.433  -0.001  12.4% 0.000500  67091 234001.50 ({   0.00 0   0.0%} {   0.00 2967   0.5%} {   0.43 64124  11.9%} ) 0 56013   0.0
0 570139   0.433   0.432   0.002  12.4% 0.000500  70665 246471.33 ({   0.00 0   0.0%} {   0.00 3122   0.5%} {   0.43 67543  11.8%} ) 0 59160   0.0
0 600143   0.432   0.432   0.001  12.4% 0.000500  74371 259306.85 ({   0.00 0   0.0%} {   0.00 3279   0.5%} {   0.43 71092  11.8%} ) 0 62188   0.0
0 630148   0.432   0.432   0.001  12.4% 0.000500  77975 272050.11 ({   0.00 0   0.0%} {   0.00 3407   0.5%} {   0.43 74568  11.8%} ) 0 65225   0.0
0 660155   0.432   0.430   0.003  12.4% 0.000500  81544 284092.98 ({   0.00 0   0.0%} {   0.00 3565   0.5%} {   0.43 77979  11.8%} ) 0 68279   0.0
0 690160   0.430   0.431  -0.001  12.4% 0.000500  85309 297216.07 ({   0.00 0   0.0%} {   0.00 3725   0.5%} {   0.43 81584  11.8%} ) 0 71355   0.0
0 719541   0.431   0.431  -0.001  12.4% 0.000500  88950 310235.55 ({   0.00 0   0.0%} {   0.00 3863   0.5%} {   0.43 85087  11.8%} ) 0 74333   0.0
Finished on Mon Jan 28 00:06:15 Pacific Standard Time 2002
NN_saveWeights save_24.wgt
Start sampling from 14 files. Starting at Mon Jan 28 00:06:17 Pacific Standard Time 2002
Sample ../../strictc.nni into 15  components with fraction 1
36799 samples, 37 features, 3 targettypes
Reading 36799 samples, writing with prob 1.000000...
36799 samples out of 36799 chosen. 346946 Segments out of 346946
Generated   2405 samples   22739 segments into file c:tmpFile00
Generated   2507 samples   23524 segments into file c:tmpFile01
Generated   2446 samples   23049 segments into file c:tmpFile02
Generated   2526 samples   23545 segments into file c:tmpFile03
Generated   2409 samples   22772 segments into file c:tmpFile04
Generated   2481 samples   23398 segments into file c:tmpFile05
Generated   2436 samples   22925 segments into file c:tmpFile06
Generated   2480 samples   23747 segments into file c:tmpFile07
Generated   2371 samples   22351 segments into file c:tmpFile08
Generated   2453 samples   23114 segments into file c:tmpFile09
Generated   2535 samples   23593 segments into file c:tmpFile10
Generated   2469 samples   22758 segments into file c:tmpFile11
Generated   2354 samples   21851 segments into file c:tmpFile12
Generated   2470 samples   23975 segments into file c:tmpFile13
Generated   2457 samples   23605 segments into file c:tmpFile14
Sample ../../strictp.nni into 15  components with fraction 1
122708 samples, 37 features, 3 targettypes
Reading 2457 samples, writing with prob 1.000000...
122708 samples out of 122708 chosen. 1137967 Segments out of 1137967
Generated  10485 samples   74683 segments into file c:tmpFile00
Generated  10631 samples   75886 segments into file c:tmpFile01
Generated  10691 samples   76860 segments into file c:tmpFile02
Generated  10707 samples   75749 segments into file c:tmpFile03
Generated  10446 samples   74183 segments into file c:tmpFile04
Generated  10644 samples   75890 segments into file c:tmpFile05
Generated  10651 samples   75755 segments into file c:tmpFile06
Generated  10686 samples   76662 segments into file c:tmpFile07
Generated  10428 samples   74649 segments into file c:tmpFile08
Generated  10627 samples   75610 segments into file c:tmpFile09
Generated  10770 samples   76929 segments into file c:tmpFile10
Generated  10620 samples   74733 segments into file c:tmpFile11
Generated  10556 samples   76556 segments into file c:tmpFile12
Generated  10870 samples   77553 segments into file c:tmpFile13
Generated  10695 samples   76269 segments into file c:tmpFile14
Sample ../../singlec.nni into 15  components with fraction 1
389 samples, 37 features, 3 targettypes
Reading 10695 samples, writing with prob 1.000000...
389 samples out of 389 chosen. 1205 Segments out of 1205
Generated  10509 samples      73 segments into file c:tmpFile00
Generated  10662 samples      95 segments into file c:tmpFile01
Generated  10717 samples      78 segments into file c:tmpFile02
Generated  10729 samples      67 segments into file c:tmpFile03
Generated  10479 samples      99 segments into file c:tmpFile04
Generated  10661 samples      54 segments into file c:tmpFile05
Generated  10674 samples      70 segments into file c:tmpFile06
Generated  10720 samples     104 segments into file c:tmpFile07
Generated  10461 samples     106 segments into file c:tmpFile08
Generated  10650 samples      69 segments into file c:tmpFile09
Generated  10793 samples      75 segments into file c:tmpFile10
Generated  10644 samples      79 segments into file c:tmpFile11
Generated  10593 samples     113 segments into file c:tmpFile12
Generated  10888 samples      56 segments into file c:tmpFile13
Generated  10716 samples      67 segments into file c:tmpFile14
Sample ../../singlep.nni into 15  components with fraction 1
13226 samples, 37 features, 3 targettypes
Reading 10716 samples, writing with prob 1.000000...
13226 samples out of 13226 chosen. 23503 Segments out of 23503
Generated  11391 samples    1573 segments into file c:tmpFile00
Generated  11574 samples    1588 segments into file c:tmpFile01
Generated  11631 samples    1614 segments into file c:tmpFile02
Generated  11578 samples    1504 segments into file c:tmpFile03
Generated  11332 samples    1479 segments into file c:tmpFile04
Generated  11509 samples    1491 segments into file c:tmpFile05
Generated  11539 samples    1559 segments into file c:tmpFile06
Generated  11637 samples    1610 segments into file c:tmpFile07
Generated  11299 samples    1543 segments into file c:tmpFile08
Generated  11503 samples    1501 segments into file c:tmpFile09
Generated  11715 samples    1650 segments into file c:tmpFile10
Generated  11538 samples    1636 segments into file c:tmpFile11
Generated  11460 samples    1575 segments into file c:tmpFile12
Generated  11798 samples    1586 segments into file c:tmpFile13
Generated  11618 samples    1594 segments into file c:tmpFile14
Sample ../../restc.nni into 15  components with fraction 0.5
225990 samples, 37 features, 3 targettypes
Reading 11618 samples, writing with prob 0.500000...
112775 samples out of 225990 chosen. 1069480 Segments out of 2144224
Generated  18978 samples   72369 segments into file c:tmpFile00
Generated  19100 samples   71501 segments into file c:tmpFile01
Generated  19063 samples   70554 segments into file c:tmpFile02
Generated  19033 samples   70792 segments into file c:tmpFile03
Generated  18910 samples   72424 segments into file c:tmpFile04
Generated  18968 samples   70795 segments into file c:tmpFile05
Generated  19183 samples   72492 segments into file c:tmpFile06
Generated  19248 samples   71081 segments into file c:tmpFile07
Generated  18784 samples   71125 segments into file c:tmpFile08
Generated  18989 samples   71175 segments into file c:tmpFile09
Generated  19349 samples   72153 segments into file c:tmpFile10
Generated  19104 samples   71921 segments into file c:tmpFile11
Generated  18756 samples   68405 segments into file c:tmpFile12
Generated  19295 samples   71161 segments into file c:tmpFile13
Generated  19137 samples   71532 segments into file c:tmpFile14
Sample ../../restp.nni into 15  components with fraction 0.5
874009 samples, 37 features, 3 targettypes
Reading 19137 samples, writing with prob 0.500000...
437112 samples out of 874009 chosen. 4198551 Segments out of 8388106
Generated  48216 samples  281578 segments into file c:tmpFile00
Generated  48334 samples  280286 segments into file c:tmpFile01
Generated  48140 samples  278017 segments into file c:tmpFile02
Generated  48390 samples  281951 segments into file c:tmpFile03
Generated  47827 samples  277495 segments into file c:tmpFile04
Generated  48501 samples  284040 segments into file c:tmpFile05
Generated  48190 samples  279157 segments into file c:tmpFile06
Generated  48498 samples  281896 segments into file c:tmpFile07
Generated  47530 samples  276862 segments into file c:tmpFile08
Generated  48122 samples  280592 segments into file c:tmpFile09
Generated  48444 samples  280870 segments into file c:tmpFile10
Generated  48080 samples  278352 segments into file c:tmpFile11
Generated  47968 samples  279891 segments into file c:tmpFile12
Generated  48346 samples  277204 segments into file c:tmpFile13
Generated  48423 samples  280360 segments into file c:tmpFile14
Sample ../../Jan_02/addrGoodWordc.nni into 15  components with fraction 1
49407 samples, 37 features, 3 targettypes
Reading 48423 samples, writing with prob 1.000000...
49407 samples out of 49407 chosen. 564569 Segments out of 564569
Generated  51547 samples   37742 segments into file c:tmpFile00
Generated  51693 samples   38376 segments into file c:tmpFile01
Generated  51397 samples   37343 segments into file c:tmpFile02
Generated  51729 samples   37768 segments into file c:tmpFile03
Generated  51121 samples   37360 segments into file c:tmpFile04
Generated  51833 samples   38054 segments into file c:tmpFile05
Generated  51481 samples   37433 segments into file c:tmpFile06
Generated  51842 samples   37972 segments into file c:tmpFile07
Generated  50783 samples   37876 segments into file c:tmpFile08
Generated  51395 samples   37759 segments into file c:tmpFile09
Generated  51673 samples   37013 segments into file c:tmpFile10
Generated  51367 samples   37584 segments into file c:tmpFile11
Generated  51230 samples   37531 segments into file c:tmpFile12
Generated  51689 samples   38328 segments into file c:tmpFile13
Generated  51636 samples   36430 segments into file c:tmpFile14
Sample ../../Jan_02/addrGoodWordp.nni into 15  components with fraction 1
305542 samples, 37 features, 3 targettypes
Reading 51636 samples, writing with prob 1.000000...
305542 samples out of 305542 chosen. 2318188 Segments out of 2318188
Generated  72089 samples  155168 segments into file c:tmpFile00
Generated  72242 samples  156824 segments into file c:tmpFile01
Generated  71690 samples  154114 segments into file c:tmpFile02
Generated  72295 samples  157548 segments into file c:tmpFile03
Generated  71425 samples  154049 segments into file c:tmpFile04
Generated  72395 samples  156645 segments into file c:tmpFile05
Generated  71772 samples  154656 segments into file c:tmpFile06
Generated  72308 samples  154711 segments into file c:tmpFile07
Generated  71203 samples  154050 segments into file c:tmpFile08
Generated  71606 samples  154295 segments into file c:tmpFile09
Generated  71994 samples  154265 segments into file c:tmpFile10
Generated  71606 samples  153497 segments into file c:tmpFile11
Generated  71269 samples  150590 segments into file c:tmpFile12
Generated  72236 samples  155580 segments into file c:tmpFile13
Generated  71828 samples  152196 segments into file c:tmpFile14
Sample ../../Jan_02/NatGoodWordc.nni.nni into 15  components with fraction 0.5
could not open Input File
Sample ../../Jan_02/NatGoodWordp.nni.nni into 15  components with fraction 0.5
could not open Input File
Sample ../../Jan_02/WebGoodWordc.nni into 15  components with fraction 1
8260 samples, 37 features, 3 targettypes
Reading 71828 samples, writing with prob 1.000000...
8260 samples out of 8260 chosen. 251377 Segments out of 251377
Generated  72668 samples   17454 segments into file c:tmpFile00
Generated  72790 samples   16588 segments into file c:tmpFile01
Generated  72188 samples   15252 segments into file c:tmpFile02
Generated  72860 samples   17369 segments into file c:tmpFile03
Generated  71963 samples   16647 segments into file c:tmpFile04
Generated  72965 samples   17478 segments into file c:tmpFile05
Generated  72352 samples   17718 segments into file c:tmpFile06
Generated  72845 samples   16259 segments into file c:tmpFile07
Generated  71731 samples   16031 segments into file c:tmpFile08
Generated  72171 samples   17327 segments into file c:tmpFile09
Generated  72573 samples   17138 segments into file c:tmpFile10
Generated  72156 samples   16820 segments into file c:tmpFile11
Generated  71790 samples   15713 segments into file c:tmpFile12
Generated  72777 samples   16425 segments into file c:tmpFile13
Generated  72389 samples   17158 segments into file c:tmpFile14
Sample ../../Jan_02/WebGoodWordp.nni into 15  components with fraction 1
29042 samples, 37 features, 3 targettypes
Reading 72389 samples, writing with prob 1.000000...
29042 samples out of 29042 chosen. 916319 Segments out of 916319
Generated  74621 samples   61405 segments into file c:tmpFile00
Generated  74758 samples   62873 segments into file c:tmpFile01
Generated  74123 samples   60644 segments into file c:tmpFile02
Generated  74801 samples   61132 segments into file c:tmpFile03
Generated  73890 samples   61176 segments into file c:tmpFile04
Generated  74857 samples   59149 segments into file c:tmpFile05
Generated  74286 samples   61421 segments into file c:tmpFile06
Generated  74809 samples   62363 segments into file c:tmpFile07
Generated  73714 samples   63038 segments into file c:tmpFile08
Generated  74117 samples   61096 segments into file c:tmpFile09
Generated  74506 samples   60720 segments into file c:tmpFile10
Generated  74027 samples   59273 segments into file c:tmpFile11
Generated  73699 samples   60041 segments into file c:tmpFile12
Generated  74733 samples   61587 segments into file c:tmpFile13
Generated  74319 samples   60401 segments into file c:tmpFile14
Sample ../../Jan_02/SingGoodc.nni into 15  components with fraction 1
625 samples, 37 features, 3 targettypes
Reading 74319 samples, writing with prob 1.000000...
625 samples out of 625 chosen. 1931 Segments out of 1931
Generated  74664 samples     133 segments into file c:tmpFile00
Generated  74796 samples     114 segments into file c:tmpFile01
Generated  74173 samples     151 segments into file c:tmpFile02
Generated  74843 samples     132 segments into file c:tmpFile03
Generated  73937 samples     143 segments into file c:tmpFile04
Generated  74893 samples     116 segments into file c:tmpFile05
Generated  74320 samples     105 segments into file c:tmpFile06
Generated  74854 samples     136 segments into file c:tmpFile07
Generated  73754 samples     121 segments into file c:tmpFile08
Generated  74155 samples     117 segments into file c:tmpFile09
Generated  74546 samples     120 segments into file c:tmpFile10
Generated  74061 samples     110 segments into file c:tmpFile11
Generated  73745 samples     141 segments into file c:tmpFile12
Generated  74774 samples     133 segments into file c:tmpFile13
Generated  74370 samples     159 segments into file c:tmpFile14
Sample ../../Jan_02/SingGoodc.nni into 15  components with fraction 1
625 samples, 37 features, 3 targettypes
Reading 74370 samples, writing with prob 1.000000...
625 samples out of 625 chosen. 1931 Segments out of 1931
Generated  74706 samples     128 segments into file c:tmpFile00
Generated  74844 samples     144 segments into file c:tmpFile01
Generated  74209 samples     108 segments into file c:tmpFile02
Generated  74877 samples     104 segments into file c:tmpFile03
Generated  73979 samples     133 segments into file c:tmpFile04
Generated  74938 samples     137 segments into file c:tmpFile05
Generated  74366 samples     146 segments into file c:tmpFile06
Generated  74896 samples     137 segments into file c:tmpFile07
Generated  73790 samples     119 segments into file c:tmpFile08
Generated  74205 samples     152 segments into file c:tmpFile09
Generated  74588 samples     127 segments into file c:tmpFile10
Generated  74104 samples     132 segments into file c:tmpFile11
Generated  73784 samples     122 segments into file c:tmpFile12
Generated  74816 samples     128 segments into file c:tmpFile13
Generated  74408 samples     114 segments into file c:tmpFile14
Data sampling complete at Mon Jan 28 00:23:04 Pacific Standard Time 2002
Loading from c:tmpFile00.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile00.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 725045 in 74706 Words. Total 725045 in 74706 words
Good+Bad: 725045 in 74706 words.
Total 725045 in 74706 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 725045 in 74706 Words. Total 725045 in 74706 words
Good+Bad: 725045 in 74706 words.
Tot Mem 116604 (kB)]
Data loading complete at Mon Jan 28 00:24:10 Pacific Standard Time 2002
m_bUseBadWords = 1
25 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30006   0.000   0.432  -1.000  12.5% 0.000500  3737  12964.70 ({   0.00 0   0.0%} {   0.00 160   0.5%} {   0.43 3577  11.9%} ) 0 3153   0.0
0 60022   0.432   0.436  -0.008  12.4% 0.000500  7468  26145.04 ({   0.00 0   0.0%} {   0.00 292   0.5%} {   0.43 7176  12.0%} ) 0 6271   0.0
0 90023   0.436   0.433   0.007  12.3% 0.000500  11066  38943.36 ({   0.00 0   0.0%} {   0.00 442   0.5%} {   0.43 10624  11.8%} ) 0 9414   0.0
0 120046   0.433   0.430   0.006  12.3% 0.000500  14728  51608.69 ({   0.00 0   0.0%} {   0.00 617   0.5%} {   0.43 14111  11.8%} ) 0 12441   0.0
0 150049   0.430   0.432  -0.004  12.4% 0.000500  18558  64757.70 ({   0.00 0   0.0%} {   0.00 791   0.5%} {   0.43 17767  11.8%} ) 0 15530   0.0
0 180081   0.432   0.430   0.003  12.3% 0.000500  22193  77456.23 ({   0.00 0   0.0%} {   0.00 958   0.5%} {   0.43 21235  11.8%} ) 0 18595   0.0
0 210089   0.430   0.428   0.004  12.3% 0.000500  25832  90005.92 ({   0.00 0   0.0%} {   0.00 1115   0.5%} {   0.43 24717  11.8%} ) 0 21729   0.0
0 240098   0.428   0.427   0.002  12.2% 0.000500  29396 102614.65 ({   0.00 0   0.0%} {   0.00 1293   0.5%} {   0.43 28103  11.7%} ) 0 24815   0.0
0 270103   0.427   0.425   0.006  12.2% 0.000500  32932 114785.50 ({   0.00 0   0.0%} {   0.00 1420   0.5%} {   0.42 31512  11.7%} ) 0 27939   0.0
0 300105   0.425   0.427  -0.004  12.3% 0.000500  36796 128051.24 ({   0.00 0   0.0%} {   0.00 1597   0.5%} {   0.42 35199  11.7%} ) 0 31093   0.0
0 330105   0.427   0.426   0.002  12.2% 0.000500  40384 140558.56 ({   0.00 0   0.0%} {   0.00 1739   0.5%} {   0.42 38645  11.7%} ) 0 34164   0.0
0 360125   0.426   0.425   0.001  12.2% 0.000500  43997 153141.18 ({   0.00 0   0.0%} {   0.00 1886   0.5%} {   0.42 42111  11.7%} ) 0 37286   0.0
0 390138   0.425   0.426  -0.002  12.2% 0.000500  47757 166284.27 ({   0.00 0   0.0%} {   0.00 2046   0.5%} {   0.42 45711  11.7%} ) 0 40401   0.0
0 420157   0.426   0.426   0.001  12.2% 0.000500  51427 178963.88 ({   0.00 0   0.0%} {   0.00 2204   0.5%} {   0.42 49223  11.7%} ) 0 43538   0.0
0 450157   0.426   0.426  -0.000  12.2% 0.000500  55069 191835.78 ({   0.00 0   0.0%} {   0.00 2348   0.5%} {   0.42 52721  11.7%} ) 0 46630   0.0
0 480177   0.426   0.427  -0.001  12.3% 0.000500  58827 204812.61 ({   0.00 0   0.0%} {   0.00 2524   0.5%} {   0.42 56303  11.7%} ) 0 49710   0.0
0 510194   0.427   0.426   0.001  12.2% 0.000500  62394 217450.94 ({   0.00 0   0.0%} {   0.00 2667   0.5%} {   0.42 59727  11.7%} ) 0 52753   0.0
0 540197   0.426   0.426   0.000  12.2% 0.000500  66043 230137.05 ({   0.00 0   0.0%} {   0.00 2819   0.5%} {   0.42 63224  11.7%} ) 0 55869   0.0
0 570213   0.426   0.426  -0.000  12.2% 0.000500  69693 242987.56 ({   0.00 0   0.0%} {   0.00 2966   0.5%} {   0.42 66727  11.7%} ) 0 58859   0.0
0 600225   0.426   0.427  -0.002  12.2% 0.000500  73432 256409.83 ({   0.00 0   0.0%} {   0.00 3107   0.5%} {   0.43 70325  11.7%} ) 0 62031   0.0
0 630225   0.427   0.427   0.001  12.2% 0.000500  76989 268958.11 ({   0.00 0   0.0%} {   0.00 3253   0.5%} {   0.42 73736  11.7%} ) 0 65091   0.0
0 660230   0.427   0.427   0.000  12.2% 0.000500  80652 281636.17 ({   0.00 0   0.0%} {   0.00 3431   0.5%} {   0.42 77221  11.7%} ) 0 68081   0.0
0 690233   0.427   0.426   0.001  12.2% 0.000500  84201 294029.26 ({   0.00 0   0.0%} {   0.00 3580   0.5%} {   0.42 80621  11.7%} ) 0 71093   0.0
0 720235   0.426   0.426  -0.000  12.2% 0.000500  87910 306895.63 ({   0.00 0   0.0%} {   0.00 3726   0.5%} {   0.42 84184  11.7%} ) 0 74165   0.0
0 724875   0.426   0.426  -0.001  12.2% 0.000500  88519 309027.34 ({   0.00 0   0.0%} {   0.00 3746   0.5%} {   0.42 84773  11.7%} ) 0 74636   0.0
Finished on Mon Jan 28 03:33:57 Pacific Standard Time 2002
NN_saveWeights save_25.wgt
Loading from c:tmpFile01.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile01.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 727799 in 74844 Words. Total 727799 in 74844 words
Good+Bad: 727799 in 74844 words.
Total 727799 in 74844 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 727799 in 74844 Words. Total 727799 in 74844 words
Good+Bad: 727799 in 74844 words.
Tot Mem 117046 (kB)]
Data loading complete at Mon Jan 28 03:35:07 Pacific Standard Time 2002
m_bUseBadWords = 1
26 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30009   0.000   0.428  -1.000  12.3% 0.000500  3689  12854.63 ({   0.00 0   0.0%} {   0.00 147   0.5%} {   0.43 3542  11.8%} ) 0 3117   0.0
0 60020   0.428   0.423   0.014  12.2% 0.000500  7296  25361.13 ({   0.00 0   0.0%} {   0.00 342   0.6%} {   0.42 6954  11.6%} ) 0 6270   0.0
0 90023   0.423   0.424  -0.003  12.1% 0.000500  10930  38160.93 ({   0.00 0   0.0%} {   0.00 499   0.6%} {   0.42 10431  11.6%} ) 0 9374   0.0
0 120034   0.424   0.425  -0.004  12.2% 0.000500  14597  51073.27 ({   0.00 0   0.0%} {   0.00 655   0.5%} {   0.42 13942  11.6%} ) 0 12452   0.0
0 150067   0.425   0.426  -0.001  12.2% 0.000500  18323  63917.40 ({   0.00 0   0.0%} {   0.00 825   0.5%} {   0.42 17498  11.7%} ) 0 15578   0.0
0 180075   0.426   0.428  -0.005  12.3% 0.000500  22129  77052.37 ({   0.00 0   0.0%} {   0.00 984   0.5%} {   0.43 21145  11.7%} ) 0 18648   0.0
0 210078   0.428   0.430  -0.004  12.3% 0.000500  25875  90293.20 ({   0.00 0   0.0%} {   0.00 1145   0.5%} {   0.43 24730  11.8%} ) 0 21701   0.0
0 240086   0.430   0.430  -0.001  12.3% 0.000500  29613 103316.32 ({   0.00 0   0.0%} {   0.00 1292   0.5%} {   0.43 28321  11.8%} ) 0 24776   0.0
0 270090   0.430   0.431  -0.002  12.3% 0.000500  33310 116427.91 ({   0.00 0   0.0%} {   0.00 1433   0.5%} {   0.43 31877  11.8%} ) 0 27889   0.0
0 300113   0.431   0.429   0.004  12.3% 0.000500  36885 128877.24 ({   0.00 0   0.0%} {   0.00 1546   0.5%} {   0.43 35339  11.8%} ) 0 30968   0.0
0 330128   0.429   0.431  -0.005  12.3% 0.000500  40698 142419.92 ({   0.00 0   0.0%} {   0.00 1706   0.5%} {   0.43 38992  11.8%} ) 0 34079   0.0
0 360131   0.431   0.429   0.005  12.3% 0.000500  44167 154544.28 ({   0.00 0   0.0%} {   0.00 1856   0.5%} {   0.43 42311  11.7%} ) 0 37147   0.0
0 390149   0.429   0.428   0.002  12.2% 0.000500  47741 167080.84 ({   0.00 0   0.0%} {   0.00 2028   0.5%} {   0.43 45713  11.7%} ) 0 40178   0.0
0 420160   0.428   0.428  -0.000  12.2% 0.000500  51456 180007.49 ({   0.00 0   0.0%} {   0.00 2179   0.5%} {   0.43 49277  11.7%} ) 0 43225   0.0
0 450167   0.428   0.428   0.001  12.2% 0.000500  55062 192716.86 ({   0.00 0   0.0%} {   0.00 2315   0.5%} {   0.43 52747  11.7%} ) 0 46304   0.0
0 480175   0.428   0.427   0.002  12.2% 0.000500  58568 205053.15 ({   0.00 0   0.0%} {   0.00 2475   0.5%} {   0.42 56093  11.7%} ) 0 49366   0.0
0 510184   0.427   0.426   0.001  12.2% 0.000500  62211 217559.56 ({   0.00 0   0.0%} {   0.00 2645   0.5%} {   0.42 59566  11.7%} ) 0 52454   0.0
0 540189   0.426   0.427  -0.002  12.2% 0.000500  65912 230714.93 ({   0.00 0   0.0%} {   0.00 2801   0.5%} {   0.43 63111  11.7%} ) 0 55515   0.0
0 570197   0.427   0.426   0.002  12.2% 0.000500  69469 243140.61 ({   0.00 0   0.0%} {   0.00 2943   0.5%} {   0.42 66526  11.7%} ) 0 58599   0.0
0 600204   0.426   0.426   0.001  12.2% 0.000500  73067 255573.92 ({   0.00 0   0.0%} {   0.00 3098   0.5%} {   0.42 69969  11.7%} ) 0 61570   0.0
0 630218   0.426   0.426   0.001  12.2% 0.000500  76724 268191.59 ({   0.00 0   0.0%} {   0.00 3242   0.5%} {   0.42 73482  11.7%} ) 0 64702   0.0
0 660226   0.426   0.425   0.001  12.2% 0.000500  80314 280784.47 ({   0.00 0   0.0%} {   0.00 3414   0.5%} {   0.42 76900  11.6%} ) 0 67831   0.0
0 690228   0.425   0.425   0.000  12.1% 0.000500  83828 293410.19 ({   0.00 0   0.0%} {   0.00 3520   0.5%} {   0.42 80308  11.6%} ) 0 70940   0.0
0 720247   0.425   0.426  -0.002  12.1% 0.000500  87480 306654.23 ({   0.00 0   0.0%} {   0.00 3672   0.5%} {   0.42 83808  11.6%} ) 0 74024   0.0
0 727665   0.426   0.426   0.000  12.1% 0.000500  88398 309723.94 ({   0.00 0   0.0%} {   0.00 3723   0.5%} {   0.42 84675  11.6%} ) 0 74788   0.0
Finished on Mon Jan 28 06:45:39 Pacific Standard Time 2002
NN_saveWeights save_26.wgt
Loading from c:tmpFile02.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile02.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 717784 in 74209 Words. Total 717784 in 74209 words
Good+Bad: 717784 in 74209 words.
Total 717784 in 74209 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 717784 in 74209 Words. Total 717784 in 74209 words
Good+Bad: 717784 in 74209 words.
Tot Mem 115439 (kB)]
Data loading complete at Mon Jan 28 06:46:49 Pacific Standard Time 2002
m_bUseBadWords = 1
27 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30005   0.000   0.428  -1.000  12.2% 0.000500  3653  12834.44 ({   0.00 0   0.0%} {   0.00 133   0.4%} {   0.43 3520  11.7%} ) 0 3169   0.0
0 60006   0.428   0.424   0.008  12.1% 0.000500  7243  25459.53 ({   0.00 0   0.0%} {   0.00 291   0.5%} {   0.42 6952  11.6%} ) 0 6303   0.0
0 90010   0.424   0.429  -0.011  12.3% 0.000500  11077  38626.46 ({   0.00 0   0.0%} {   0.00 484   0.5%} {   0.43 10593  11.8%} ) 0 9381   0.0
0 120030   0.429   0.428   0.002  12.2% 0.000500  14691  51410.69 ({   0.00 0   0.0%} {   0.00 639   0.5%} {   0.43 14052  11.7%} ) 0 12488   0.0
0 150036   0.428   0.428   0.002  12.3% 0.000500  18380  64162.80 ({   0.00 0   0.0%} {   0.00 799   0.5%} {   0.43 17581  11.7%} ) 0 15574   0.0
0 180050   0.428   0.427   0.002  12.2% 0.000500  22018  76857.11 ({   0.00 0   0.0%} {   0.00 1016   0.6%} {   0.42 21002  11.7%} ) 0 18755   0.0
0 210064   0.427   0.427  -0.000  12.2% 0.000500  25667  89671.52 ({   0.00 0   0.0%} {   0.00 1152   0.5%} {   0.42 24515  11.7%} ) 0 21880   0.0
0 240067   0.427   0.427  -0.001  12.2% 0.000500  29401 102590.28 ({   0.00 0   0.0%} {   0.00 1279   0.5%} {   0.43 28122  11.7%} ) 0 25012   0.0
0 270068   0.427   0.426   0.003  12.2% 0.000500  32922 115083.57 ({   0.00 0   0.0%} {   0.00 1415   0.5%} {   0.42 31507  11.7%} ) 0 28140   0.0
0 300070   0.426   0.425   0.002  12.2% 0.000500  36515 127617.69 ({   0.00 0   0.0%} {   0.00 1578   0.5%} {   0.42 34937  11.6%} ) 0 31226   0.0
0 330071   0.425   0.424   0.003  12.2% 0.000500  40110 139894.99 ({   0.00 0   0.0%} {   0.00 1742   0.5%} {   0.42 38368  11.6%} ) 0 34324   0.0
0 360077   0.424   0.424  -0.000  12.1% 0.000500  43700 152667.53 ({   0.00 0   0.0%} {   0.00 1891   0.5%} {   0.42 41809  11.6%} ) 0 37446   0.0
0 390080   0.424   0.424   0.001  12.1% 0.000500  47330 165228.94 ({   0.00 0   0.0%} {   0.00 2033   0.5%} {   0.42 45297  11.6%} ) 0 40569   0.0
0 420085   0.424   0.424  -0.001  12.1% 0.000500  50975 178048.53 ({   0.00 0   0.0%} {   0.00 2177   0.5%} {   0.42 48798  11.6%} ) 0 43672   0.0
0 450093   0.424   0.424  -0.001  12.1% 0.000500  54648 190964.54 ({   0.00 0   0.0%} {   0.00 2332   0.5%} {   0.42 52316  11.6%} ) 0 46792   0.0
0 480110   0.424   0.424   0.002  12.1% 0.000500  58188 203359.11 ({   0.00 0   0.0%} {   0.00 2486   0.5%} {   0.42 55702  11.6%} ) 0 49884   0.0
0 510112   0.424   0.424  -0.001  12.1% 0.000500  61951 216391.24 ({   0.00 0   0.0%} {   0.00 2623   0.5%} {   0.42 59328  11.6%} ) 0 52976   0.0
0 540119   0.424   0.424   0.001  12.1% 0.000500  65530 228808.09 ({   0.00 0   0.0%} {   0.00 2767   0.5%} {   0.42 62763  11.6%} ) 0 56031   0.0
0 570133   0.424   0.424  -0.001  12.2% 0.000500  69312 241842.03 ({   0.00 0   0.0%} {   0.00 2920   0.5%} {   0.42 66392  11.6%} ) 0 59068   0.0
0 600135   0.424   0.425  -0.002  12.2% 0.000500  73069 254994.59 ({   0.00 0   0.0%} {   0.00 3091   0.5%} {   0.42 69978  11.7%} ) 0 62184   0.0
0 630145   0.425   0.426  -0.002  12.2% 0.000500  76846 268198.60 ({   0.00 0   0.0%} {   0.00 3226   0.5%} {   0.42 73620  11.7%} ) 0 65235   0.0
0 660149   0.426   0.426  -0.001  12.2% 0.000500  80509 281271.15 ({   0.00 0   0.0%} {   0.00 3387   0.5%} {   0.42 77122  11.7%} ) 0 68339   0.0
0 690158   0.426   0.426   0.000  12.2% 0.000500  84132 293917.21 ({   0.00 0   0.0%} {   0.00 3569   0.5%} {   0.42 80563  11.7%} ) 0 71358   0.0
0 717628   0.426   0.426   0.000  12.2% 0.000500  87473 305607.20 ({   0.00 0   0.0%} {   0.00 3708   0.5%} {   0.42 83765  11.7%} ) 0 74144   0.0
Finished on Mon Jan 28 09:54:49 Pacific Standard Time 2002
NN_saveWeights save_27.wgt
Loading from c:tmpFile03.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile03.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 727661 in 74877 Words. Total 727661 in 74877 words
Good+Bad: 727661 in 74877 words.
Total 727661 in 74877 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 727661 in 74877 Words. Total 727661 in 74877 words
Good+Bad: 727661 in 74877 words.
Tot Mem 117024 (kB)]
Data loading complete at Mon Jan 28 09:55:57 Pacific Standard Time 2002
m_bUseBadWords = 1
28 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30008   0.000   0.427  -1.000  12.4% 0.000500  3711  12807.56 ({   0.00 0   0.0%} {   0.00 187   0.6%} {   0.42 3524  11.7%} ) 0 3107   0.0
0 60010   0.427   0.424   0.008  12.2% 0.000500  7317  25416.61 ({   0.00 0   0.0%} {   0.00 336   0.6%} {   0.42 6981  11.6%} ) 0 6292   0.0
0 90010   0.424   0.429  -0.012  12.4% 0.000500  11199  38582.06 ({   0.00 0   0.0%} {   0.00 517   0.6%} {   0.43 10682  11.9%} ) 0 9352   0.0
0 120031   0.429   0.429  -0.001  12.5% 0.000500  15014  51523.65 ({   0.00 0   0.0%} {   0.00 694   0.6%} {   0.43 14320  11.9%} ) 0 12434   0.0
0 150033   0.429   0.431  -0.003  12.5% 0.000500  18748  64592.20 ({   0.00 0   0.0%} {   0.00 850   0.6%} {   0.43 17898  11.9%} ) 0 15561   0.0
0 180035   0.431   0.431  -0.002  12.5% 0.000500  22482  77630.81 ({   0.00 0   0.0%} {   0.00 1014   0.6%} {   0.43 21468  11.9%} ) 0 18697   0.0
0 210045   0.431   0.430   0.002  12.4% 0.000500  26097  90380.81 ({   0.00 0   0.0%} {   0.00 1194   0.6%} {   0.43 24903  11.9%} ) 0 21774   0.0
0 240049   0.430   0.428   0.005  12.4% 0.000500  29755 102729.64 ({   0.00 0   0.0%} {   0.00 1376   0.6%} {   0.43 28379  11.8%} ) 0 24825   0.0
0 270051   0.428   0.428   0.001  12.3% 0.000500  33338 115504.81 ({   0.00 0   0.0%} {   0.00 1518   0.6%} {   0.43 31820  11.8%} ) 0 27984   0.0
0 300054   0.428   0.427   0.001  12.3% 0.000500  36955 128235.31 ({   0.00 0   0.0%} {   0.00 1659   0.6%} {   0.43 35296  11.8%} ) 0 31049   0.0
0 330056   0.427   0.427   0.000  12.3% 0.000500  40551 141041.43 ({   0.00 0   0.0%} {   0.00 1788   0.5%} {   0.43 38763  11.7%} ) 0 34097   0.0
0 360089   0.427   0.426   0.002  12.3% 0.000500  44111 153524.95 ({   0.00 0   0.0%} {   0.00 1928   0.5%} {   0.42 42183  11.7%} ) 0 37136   0.0
0 390089   0.426   0.426  -0.000  12.2% 0.000500  47767 166349.40 ({   0.00 0   0.0%} {   0.00 2088   0.5%} {   0.42 45679  11.7%} ) 0 40245   0.0
0 420090   0.426   0.427  -0.002  12.2% 0.000500  51446 179476.20 ({   0.00 0   0.0%} {   0.00 2248   0.5%} {   0.43 49198  11.7%} ) 0 43322   0.0
0 450094   0.427   0.427   0.001  12.2% 0.000500  55080 192017.76 ({   0.00 0   0.0%} {   0.00 2406   0.5%} {   0.42 52674  11.7%} ) 0 46385   0.0
0 480097   0.427   0.426   0.001  12.2% 0.000500  58646 204603.49 ({   0.00 0   0.0%} {   0.00 2538   0.5%} {   0.42 56108  11.7%} ) 0 49441   0.0
0 510101   0.426   0.427  -0.001  12.2% 0.000500  62321 217678.20 ({   0.00 0   0.0%} {   0.00 2672   0.5%} {   0.42 59649  11.7%} ) 0 52505   0.0
0 540109   0.427   0.427   0.000  12.2% 0.000500  65904 230415.23 ({   0.00 0   0.0%} {   0.00 2813   0.5%} {   0.42 63091  11.7%} ) 0 55609   0.0
0 570117   0.427   0.427  -0.000  12.2% 0.000500  69536 243222.93 ({   0.00 0   0.0%} {   0.00 2963   0.5%} {   0.42 66573  11.7%} ) 0 58647   0.0
0 600122   0.427   0.426   0.002  12.2% 0.000500  73112 255544.93 ({   0.00 0   0.0%} {   0.00 3156   0.5%} {   0.42 69956  11.7%} ) 0 61764   0.0
0 630127   0.426   0.425   0.002  12.2% 0.000500  76752 267885.55 ({   0.00 0   0.0%} {   0.00 3308   0.5%} {   0.42 73444  11.7%} ) 0 64810   0.0
0 660150   0.425   0.426  -0.001  12.2% 0.000500  80445 280927.14 ({   0.00 0   0.0%} {   0.00 3446   0.5%} {   0.42 76999  11.7%} ) 0 67901   0.0
0 690165   0.426   0.426  -0.001  12.2% 0.000500  84094 293878.79 ({   0.00 0   0.0%} {   0.00 3587   0.5%} {   0.42 80507  11.7%} ) 0 70946   0.0
0 720170   0.426   0.426   0.001  12.2% 0.000500  87815 306435.81 ({   0.00 0   0.0%} {   0.00 3771   0.5%} {   0.42 84044  11.7%} ) 0 74040   0.0
0 727481   0.426   0.426  -0.000  12.2% 0.000500  88739 309645.59 ({   0.00 0   0.0%} {   0.00 3820   0.5%} {   0.42 84919  11.7%} ) 0 74803   0.0
Finished on Mon Jan 28 13:06:33 Pacific Standard Time 2002
NN_saveWeights save_28.wgt
Loading from c:tmpFile04.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile04.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 717960 in 73979 Words. Total 717960 in 73979 words
Good+Bad: 717960 in 73979 words.
Total 717960 in 73979 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 717960 in 73979 Words. Total 717960 in 73979 words
Good+Bad: 717960 in 73979 words.
Tot Mem 115465 (kB)]
Data loading complete at Mon Jan 28 13:07:40 Pacific Standard Time 2002
m_bUseBadWords = 1
29 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 0
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30002   0.000   0.431  -1.000  12.4% 0.000500  3713  12934.13 ({   0.00 0   0.0%} {   0.00 145   0.5%} {   0.43 3568  11.9%} ) 0 3051   0.0
0 60004   0.431   0.424   0.016  12.3% 0.000500  7374  25464.60 ({   0.00 0   0.0%} {   0.00 320   0.5%} {   0.42 7054  11.8%} ) 0 6142   0.0
0 90004   0.424   0.420   0.010  12.2% 0.000500  10989  37816.79 ({   0.00 0   0.0%} {   0.00 465   0.5%} {   0.42 10524  11.7%} ) 0 9316   0.0
0 120005   0.420   0.421  -0.003  12.2% 0.000500  14684  50571.55 ({   0.00 0   0.0%} {   0.00 654   0.5%} {   0.42 14030  11.7%} ) 0 12431   0.0
0 150013   0.421   0.422  -0.002  12.2% 0.000500  18268  63315.54 ({   0.00 0   0.0%} {   0.00 784   0.5%} {   0.42 17484  11.7%} ) 0 15606   0.0
0 180013   0.422   0.427  -0.011  12.3% 0.000500  22163  76820.45 ({   0.00 0   0.0%} {   0.00 975   0.5%} {   0.42 21188  11.8%} ) 0 18729   0.0
0 210014   0.427   0.427   0.000  12.3% 0.000500  25865  89616.21 ({   0.00 0   0.0%} {   0.00 1117   0.5%} {   0.42 24748  11.8%} ) 0 21838   0.0
0 240015   0.427   0.425   0.003  12.3% 0.000500  29412 102070.50 ({   0.00 0   0.0%} {   0.00 1246   0.5%} {   0.42 28166  11.7%} ) 0 24920   0.0
0 270018   0.425   0.426  -0.001  12.3% 0.000500  33123 114910.97 ({   0.00 0   0.0%} {   0.00 1379   0.5%} {   0.42 31744  11.8%} ) 0 28033   0.0
0 300018   0.426   0.425   0.001  12.2% 0.000500  36704 127596.29 ({   0.00 0   0.0%} {   0.00 1521   0.5%} {   0.42 35183  11.7%} ) 0 31090   0.0
0 330021   0.425   0.425  -0.000  12.2% 0.000500  40357 140418.54 ({   0.00 0   0.0%} {   0.00 1682   0.5%} {   0.42 38675  11.7%} ) 0 34256   0.0
0 360021   0.425   0.425   0.000  12.2% 0.000500  43949 153148.86 ({   0.00 0   0.0%} {   0.00 1828   0.5%} {   0.42 42121  11.7%} ) 0 37359   0.0
0 390040   0.425   0.426  -0.001  12.2% 0.000500  47689 166067.56 ({   0.00 0   0.0%} {   0.00 1970   0.5%} {   0.42 45719  11.7%} ) 0 40434   0.0
0 420047   0.426   0.425   0.001  12.2% 0.000500  51300 178692.99 ({   0.00 0   0.0%} {   0.00 2123   0.5%} {   0.42 49177  11.7%} ) 0 43597   0.0
0 450050   0.425   0.426  -0.001  12.2% 0.000500  55018 191672.12 ({   0.00 0   0.0%} {   0.00 2274   0.5%} {   0.42 52744  11.7%} ) 0 46611   0.0
0 480067   0.426   0.427  -0.002  12.2% 0.000500  58738 204826.67 ({   0.00 0   0.0%} {   0.00 2418   0.5%} {   0.42 56320  11.7%} ) 0 49761   0.0
0 510071   0.427   0.426   0.003  12.2% 0.000500  62274 217072.35 ({   0.00 0   0.0%} {   0.00 2547   0.5%} {   0.42 59727  11.7%} ) 0 52847   0.0
0 540082   0.426   0.425   0.001  12.2% 0.000500  65892 229567.28 ({   0.00 0   0.0%} {   0.00 2716   0.5%} {   0.42 63176  11.7%} ) 0 55909   0.0
0 570083   0.425   0.425  -0.001  12.2% 0.000500  69576 242459.27 ({   0.00 0   0.0%} {   0.00 2869   0.5%} {   0.42 66707  11.7%} ) 0 59016   0.0
0 600095   0.425   0.425   0.002  12.2% 0.000500  73116 254778.45 ({   0.00 0   0.0%} {   0.00 3013   0.5%} {   0.42 70103  11.7%} ) 0 62001   0.0
0 630095   0.425   0.425  -0.000  12.2% 0.000500  76818 267642.06 ({   0.00 0   0.0%} {   0.00 3160   0.5%} {   0.42 73658  11.7%} ) 0 65070   0.0
0 660097   0.425   0.424   0.001  12.2% 0.000500  80351 280059.77 ({   0.00 0   0.0%} {   0.00 3297   0.5%} {   0.42 77054  11.7%} ) 0 68063   0.0
0 690098   0.424   0.425  -0.002  12.2% 0.000500  84127 293281.47 ({   0.00 0   0.0%} {   0.00 3459   0.5%} {   0.42 80668  11.7%} ) 0 71057   0.0
0 717791   0.425   0.425  -0.001  12.2% 0.000500  87492 305209.66 ({   0.00 0   0.0%} {   0.00 3608   0.5%} {   0.42 83884  11.7%} ) 0 73910   0.0
Finished on Mon Jan 28 16:15:43 Pacific Standard Time 2002
NN_saveWeights save_29.wgt
Randomizing 451 Output Space Weights
Loading from c:tmpFile05.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile05.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 727247 in 74938 Words. Total 727247 in 74938 words
Good+Bad: 727247 in 74938 words.
Total 727247 in 74938 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 727247 in 74938 Words. Total 727247 in 74938 words
Good+Bad: 727247 in 74938 words.
Tot Mem 116959 (kB)]
Data loading complete at Mon Jan 28 16:16:52 Pacific Standard Time 2002
m_bUseBadWords = 1
30 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30000   0.000   0.490  -1.000  14.1% 0.004000  4224  14685.48 ({   0.00 0   0.0%} {   0.00 162   0.5%} {   0.49 4062  13.5%} ) 0 3095   0.0
0 60000   0.490   0.477   0.026  13.7% 0.004000  8218  28618.68 ({   0.00 0   0.0%} {   0.00 328   0.5%} {   0.47 7890  13.2%} ) 0 6254   0.0
0 90009   0.477   0.470   0.014  13.7% 0.004000  12314  42328.49 ({   0.00 0   0.0%} {   0.00 512   0.6%} {   0.47 11802  13.1%} ) 0 9462   0.0
0 120010   0.470   0.472  -0.003  13.7% 0.003840  16481  56623.09 ({   0.00 0   0.0%} {   0.00 715   0.6%} {   0.47 15766  13.1%} ) 0 12587   0.0
0 150017   0.472   0.471   0.002  13.7% 0.003840  20517  70625.22 ({   0.00 0   0.0%} {   0.00 882   0.6%} {   0.47 19635  13.1%} ) 0 15711   0.0
0 180026   0.471   0.470   0.003  13.6% 0.003840  24513  84526.93 ({   0.00 0   0.0%} {   0.00 1036   0.6%} {   0.47 23477  13.0%} ) 0 18792   0.0
0 210028   0.470   0.468   0.004  13.5% 0.003840  28433  98263.79 ({   0.00 0   0.0%} {   0.00 1165   0.6%} {   0.47 27268  13.0%} ) 0 21828   0.0
0 240029   0.468   0.466   0.004  13.5% 0.003840  32425 111882.96 ({   0.00 0   0.0%} {   0.00 1320   0.5%} {   0.46 31105  13.0%} ) 0 24919   0.0
0 270033   0.466   0.465   0.003  13.5% 0.003840  36445 125431.20 ({   0.00 0   0.0%} {   0.00 1480   0.5%} {   0.46 34965  12.9%} ) 0 27997   0.0
0 300038   0.465   0.463   0.003  13.4% 0.003840  40339 138931.15 ({   0.00 0   0.0%} {   0.00 1627   0.5%} {   0.46 38712  12.9%} ) 0 31135   0.0
0 330043   0.463   0.463   0.001  13.4% 0.003840  44339 152680.80 ({   0.00 0   0.0%} {   0.00 1783   0.5%} {   0.46 42556  12.9%} ) 0 34213   0.0
0 360057   0.463   0.461   0.004  13.4% 0.003840  48184 165821.92 ({   0.00 0   0.0%} {   0.00 1954   0.5%} {   0.46 46230  12.8%} ) 0 37323   0.0
0 390062   0.461   0.461   0.000  13.4% 0.003840  52191 179623.65 ({   0.00 0   0.0%} {   0.00 2137   0.5%} {   0.46 50054  12.8%} ) 0 40425   0.0
0 420062   0.461   0.462  -0.004  13.4% 0.003686  56323 194132.25 ({   0.00 0   0.0%} {   0.00 2293   0.5%} {   0.46 54030  12.9%} ) 0 43508   0.0
0 450065   0.462   0.463  -0.003  13.4% 0.003539  60421 208538.29 ({   0.00 0   0.0%} {   0.00 2461   0.5%} {   0.46 57960  12.9%} ) 0 46565   0.0
0 480072   0.463   0.464  -0.001  13.4% 0.003397  64505 222590.49 ({   0.00 0   0.0%} {   0.00 2645   0.6%} {   0.46 61860  12.9%} ) 0 49533   0.0
0 510073   0.464   0.463   0.001  13.4% 0.003397  68389 236221.57 ({   0.00 0   0.0%} {   0.00 2787   0.5%} {   0.46 65602  12.9%} ) 0 52659   0.0
0 540081   0.463   0.462   0.001  13.4% 0.003397  72305 249757.71 ({   0.00 0   0.0%} {   0.00 2926   0.5%} {   0.46 69379  12.8%} ) 0 55760   0.0
0 570095   0.462   0.462   0.002  13.4% 0.003397  76192 263111.82 ({   0.00 0   0.0%} {   0.00 3088   0.5%} {   0.46 73104  12.8%} ) 0 58847   0.0
0 600096   0.462   0.461   0.001  13.3% 0.003397  80051 276573.88 ({   0.00 0   0.0%} {   0.00 3211   0.5%} {   0.46 76840  12.8%} ) 0 61934   0.0
0 630119   0.461   0.461  -0.001  13.4% 0.003261  84199 290766.00 ({   0.00 0   0.0%} {   0.00 3365   0.5%} {   0.46 80834  12.8%} ) 0 65071   0.0
0 660124   0.461   0.462  -0.001  13.4% 0.003131  88207 304909.30 ({   0.00 0   0.0%} {   0.00 3498   0.5%} {   0.46 84709  12.8%} ) 0 68158   0.0
0 690139   0.462   0.462   0.000  13.4% 0.003131  92211 318707.32 ({   0.00 0   0.0%} {   0.00 3662   0.5%} {   0.46 88549  12.8%} ) 0 71177   0.0
0 720141   0.462   0.460   0.004  13.3% 0.003131  95966 331387.95 ({   0.00 0   0.0%} {   0.00 3813   0.5%} {   0.46 92153  12.8%} ) 0 74167   0.0
0 727050   0.460   0.460   0.001  13.3% 0.003131  96855 334392.16 ({   0.00 0   0.0%} {   0.00 3851   0.5%} {   0.46 93004  12.8%} ) 0 74859   0.0
Finished on Mon Jan 28 19:27:19 Pacific Standard Time 2002
NN_saveWeights save_30.wgt
Loading from c:tmpFile06.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile06.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 723437 in 74366 Words. Total 723437 in 74366 words
Good+Bad: 723437 in 74366 words.
Total 723437 in 74366 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 723437 in 74366 Words. Total 723437 in 74366 words
Good+Bad: 723437 in 74366 words.
Tot Mem 116344 (kB)]
Data loading complete at Mon Jan 28 19:28:29 Pacific Standard Time 2002
m_bUseBadWords = 1
31 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30012   0.000   0.458  -1.000  13.4% 0.002505  4020  13732.58 ({   0.00 0   0.0%} {   0.00 196   0.7%} {   0.46 3824  12.7%} ) 0 3091   0.0
0 60018   0.458   0.453   0.011  13.1% 0.002505  7882  27162.85 ({   0.00 0   0.0%} {   0.00 352   0.6%} {   0.45 7530  12.5%} ) 0 6111   0.0
0 90025   0.453   0.453  -0.002  13.0% 0.002405  11742  40807.42 ({   0.00 0   0.0%} {   0.00 512   0.6%} {   0.45 11230  12.5%} ) 0 9174   0.0
0 120026   0.453   0.454  -0.003  13.1% 0.002308  15736  54547.50 ({   0.00 0   0.0%} {   0.00 698   0.6%} {   0.45 15038  12.5%} ) 0 12326   0.0
0 150031   0.454   0.453   0.004  13.0% 0.002308  19574  67900.97 ({   0.00 0   0.0%} {   0.00 870   0.6%} {   0.45 18704  12.5%} ) 0 15523   0.0
0 180036   0.453   0.451   0.003  13.0% 0.002308  23459  81220.54 ({   0.00 0   0.0%} {   0.00 1028   0.6%} {   0.45 22431  12.5%} ) 0 18659   0.0
0 210044   0.451   0.450   0.002  13.0% 0.002308  27306  94582.36 ({   0.00 0   0.0%} {   0.00 1189   0.6%} {   0.45 26117  12.4%} ) 0 21741   0.0
0 240052   0.450   0.450   0.000  13.0% 0.002308  31167 108066.65 ({   0.00 0   0.0%} {   0.00 1363   0.6%} {   0.45 29804  12.4%} ) 0 24762   0.0
0 270053   0.450   0.450  -0.000  13.0% 0.002216  35095 121593.54 ({   0.00 0   0.0%} {   0.00 1515   0.6%} {   0.45 33580  12.4%} ) 0 27832   0.0
0 300058   0.450   0.448   0.005  12.9% 0.002216  38791 134382.21 ({   0.00 0   0.0%} {   0.00 1691   0.6%} {   0.45 37100  12.4%} ) 0 30922   0.0
0 330062   0.448   0.447   0.002  12.9% 0.002216  42579 147590.77 ({   0.00 0   0.0%} {   0.00 1827   0.6%} {   0.44 40752  12.3%} ) 0 34003   0.0
0 360072   0.447   0.446   0.003  12.8% 0.002216  46247 160502.83 ({   0.00 0   0.0%} {   0.00 1972   0.5%} {   0.44 44275  12.3%} ) 0 37042   0.0
0 390073   0.446   0.444   0.003  12.8% 0.002216  50095 173320.24 ({   0.00 0   0.0%} {   0.00 2144   0.5%} {   0.44 47951  12.3%} ) 0 40165   0.0
0 420092   0.444   0.444   0.000  12.8% 0.002216  53963 186626.87 ({   0.00 0   0.0%} {   0.00 2289   0.5%} {   0.44 51674  12.3%} ) 0 43243   0.0
0 450103   0.444   0.444   0.001  12.8% 0.002216  57733 199854.23 ({   0.00 0   0.0%} {   0.00 2445   0.5%} {   0.44 55288  12.3%} ) 0 46371   0.0
0 480108   0.444   0.445  -0.002  12.9% 0.002127  61737 213602.29 ({   0.00 0   0.0%} {   0.00 2599   0.5%} {   0.44 59138  12.3%} ) 0 49510   0.0
0 510121   0.445   0.444   0.002  12.8% 0.002127  65394 226393.06 ({   0.00 0   0.0%} {   0.00 2705   0.5%} {   0.44 62689  12.3%} ) 0 52568   0.0
0 540125   0.444   0.442   0.003  12.8% 0.002127  69051 238974.29 ({   0.00 0   0.0%} {   0.00 2849   0.5%} {   0.44 66202  12.3%} ) 0 55604   0.0
0 570132   0.442   0.442   0.001  12.8% 0.002127  72738 251955.22 ({   0.00 0   0.0%} {   0.00 2995   0.5%} {   0.44 69743  12.2%} ) 0 58652   0.0
0 600145   0.442   0.441   0.001  12.7% 0.002127  76434 264848.76 ({   0.00 0   0.0%} {   0.00 3143   0.5%} {   0.44 73291  12.2%} ) 0 61743   0.0
0 630153   0.441   0.440   0.002  12.7% 0.002127  80071 277434.27 ({   0.00 0   0.0%} {   0.00 3305   0.5%} {   0.44 76766  12.2%} ) 0 64823   0.0
0 660158   0.440   0.440   0.000  12.7% 0.002127  83888 290623.73 ({   0.00 0   0.0%} {   0.00 3462   0.5%} {   0.44 80426  12.2%} ) 0 67853   0.0
0 690158   0.440   0.440  -0.000  12.7% 0.002042  87670 303844.38 ({   0.00 0   0.0%} {   0.00 3603   0.5%} {   0.44 84067  12.2%} ) 0 70934   0.0
0 720166   0.440   0.440   0.001  12.7% 0.002042  91484 316853.86 ({   0.00 0   0.0%} {   0.00 3760   0.5%} {   0.44 87724  12.2%} ) 0 73995   0.0
0 723291   0.440   0.440  -0.000  12.7% 0.001961  91920 318316.85 ({   0.00 0   0.0%} {   0.00 3774   0.5%} {   0.44 88146  12.2%} ) 0 74310   0.0
Finished on Mon Jan 28 22:37:58 Pacific Standard Time 2002
NN_saveWeights save_31.wgt
Loading from c:tmpFile07.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile07.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 726678 in 74896 Words. Total 726678 in 74896 words
Good+Bad: 726678 in 74896 words.
Total 726678 in 74896 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 726678 in 74896 Words. Total 726678 in 74896 words
Good+Bad: 726678 in 74896 words.
Tot Mem 116867 (kB)]
Data loading complete at Mon Jan 28 22:39:05 Pacific Standard Time 2002
m_bUseBadWords = 1
32 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30003   0.000   0.444  -1.000  12.7% 0.001569  3807  13306.89 ({   0.00 0   0.0%} {   0.00 160   0.5%} {   0.44 3647  12.2%} ) 0 3066   0.0
0 60010   0.444   0.445  -0.004  12.7% 0.001506  7632  26710.29 ({   0.00 0   0.0%} {   0.00 303   0.5%} {   0.44 7329  12.2%} ) 0 6165   0.0
0 90023   0.445   0.442   0.007  12.7% 0.001506  11405  39802.84 ({   0.00 0   0.0%} {   0.00 482   0.5%} {   0.44 10923  12.1%} ) 0 9373   0.0
0 120040   0.442   0.441   0.004  12.7% 0.001506  15270  52888.23 ({   0.00 0   0.0%} {   0.00 668   0.6%} {   0.44 14602  12.2%} ) 0 12519   0.0
0 150052   0.441   0.436   0.010  12.6% 0.001506  18958  65485.03 ({   0.00 0   0.0%} {   0.00 832   0.6%} {   0.43 18126  12.1%} ) 0 15653   0.0
0 180054   0.436   0.440  -0.009  12.7% 0.001446  22848  79286.87 ({   0.00 0   0.0%} {   0.00 965   0.5%} {   0.44 21883  12.2%} ) 0 18728   0.0
0 210057   0.440   0.439   0.004  12.6% 0.001446  26489  92125.69 ({   0.00 0   0.0%} {   0.00 1089   0.5%} {   0.44 25400  12.1%} ) 0 21842   0.0
0 240059   0.439   0.438   0.001  12.6% 0.001446  30277 105185.53 ({   0.00 0   0.0%} {   0.00 1286   0.5%} {   0.44 28991  12.1%} ) 0 24935   0.0
0 270061   0.438   0.439  -0.001  12.6% 0.001388  34098 118472.25 ({   0.00 0   0.0%} {   0.00 1451   0.5%} {   0.44 32647  12.1%} ) 0 28076   0.0
0 300062   0.439   0.438   0.002  12.6% 0.001388  37895 131435.56 ({   0.00 0   0.0%} {   0.00 1620   0.5%} {   0.44 36275  12.1%} ) 0 31106   0.0
0 330062   0.438   0.436   0.004  12.6% 0.001388  41525 144017.52 ({   0.00 0   0.0%} {   0.00 1763   0.5%} {   0.43 39762  12.0%} ) 0 34187   0.0
0 360065   0.436   0.435   0.003  12.6% 0.001388  45260 156714.01 ({   0.00 0   0.0%} {   0.00 1905   0.5%} {   0.43 43355  12.0%} ) 0 37222   0.0
0 390074   0.435   0.435   0.001  12.6% 0.001388  49046 169641.73 ({   0.00 0   0.0%} {   0.00 2050   0.5%} {   0.43 46996  12.0%} ) 0 40319   0.0
0 420080   0.435   0.435  -0.000  12.6% 0.001332  52814 182718.94 ({   0.00 0   0.0%} {   0.00 2209   0.5%} {   0.43 50605  12.0%} ) 0 43399   0.0
0 450087   0.435   0.433   0.004  12.5% 0.001332  56407 195049.44 ({   0.00 0   0.0%} {   0.00 2357   0.5%} {   0.43 54050  12.0%} ) 0 46472   0.0
0 480097   0.433   0.433   0.002  12.5% 0.001332  60063 207690.48 ({   0.00 0   0.0%} {   0.00 2517   0.5%} {   0.43 57546  12.0%} ) 0 49550   0.0
0 510100   0.433   0.432   0.002  12.5% 0.001332  63687 220229.44 ({   0.00 0   0.0%} {   0.00 2647   0.5%} {   0.43 61040  12.0%} ) 0 52631   0.0
0 540103   0.432   0.432   0.000  12.5% 0.001332  67401 233146.36 ({   0.00 0   0.0%} {   0.00 2830   0.5%} {   0.43 64571  12.0%} ) 0 55722   0.0
0 570103   0.432   0.432  -0.000  12.5% 0.001279  71167 246109.81 ({   0.00 0   0.0%} {   0.00 2999   0.5%} {   0.43 68168  12.0%} ) 0 58799   0.0
0 600105   0.432   0.431   0.001  12.5% 0.001279  74882 258803.47 ({   0.00 0   0.0%} {   0.00 3173   0.5%} {   0.43 71709  11.9%} ) 0 61909   0.0
0 630120   0.431   0.432  -0.001  12.5% 0.001228  78617 271906.16 ({   0.00 0   0.0%} {   0.00 3323   0.5%} {   0.43 75294  11.9%} ) 0 64980   0.0
0 660131   0.432   0.432  -0.001  12.5% 0.001179  82430 285143.21 ({   0.00 0   0.0%} {   0.00 3462   0.5%} {   0.43 78968  12.0%} ) 0 68010   0.0
0 690134   0.432   0.431   0.002  12.5% 0.001179  85947 297417.01 ({   0.00 0   0.0%} {   0.00 3588   0.5%} {   0.43 82359  11.9%} ) 0 71085   0.0
0 720134   0.431   0.431   0.001  12.5% 0.001179  89660 310154.53 ({   0.00 0   0.0%} {   0.00 3745   0.5%} {   0.43 85915  11.9%} ) 0 74160   0.0
0 726470   0.431   0.431  -0.000  12.5% 0.001132  90451 312908.63 ({   0.00 0   0.0%} {   0.00 3776   0.5%} {   0.43 86675  11.9%} ) 0 74814   0.0
Finished on Tue Jan 29 01:49:20 Pacific Standard Time 2002
NN_saveWeights save_32.wgt
Loading from c:tmpFile08.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile08.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 717871 in 73790 Words. Total 717871 in 73790 words
Good+Bad: 717871 in 73790 words.
Total 717871 in 73790 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 717871 in 73790 Words. Total 717871 in 73790 words
Good+Bad: 717871 in 73790 words.
Tot Mem 115449 (kB)]
Data loading complete at Tue Jan 29 01:50:27 Pacific Standard Time 2002
m_bUseBadWords = 1
33 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30002   0.000   0.432  -1.000  12.5% 0.000905  3748  12961.76 ({   0.00 0   0.0%} {   0.00 136   0.5%} {   0.43 3612  12.0%} ) 0 3131   0.0
0 60009   0.432   0.428   0.009  12.5% 0.000905  7473  25691.19 ({   0.00 0   0.0%} {   0.00 284   0.5%} {   0.43 7189  12.0%} ) 0 6150   0.0
0 90011   0.428   0.432  -0.010  12.5% 0.000869  11236  38923.19 ({   0.00 0   0.0%} {   0.00 449   0.5%} {   0.43 10787  12.0%} ) 0 9266   0.0
0 120027   0.432   0.435  -0.006  12.5% 0.000834  15016  52226.29 ({   0.00 0   0.0%} {   0.00 624   0.5%} {   0.43 14392  12.0%} ) 0 12370   0.0
0 150051   0.435   0.433   0.005  12.4% 0.000834  18647  64961.70 ({   0.00 0   0.0%} {   0.00 775   0.5%} {   0.43 17872  11.9%} ) 0 15521   0.0
0 180059   0.433   0.433   0.000  12.4% 0.000834  22380  77947.22 ({   0.00 0   0.0%} {   0.00 942   0.5%} {   0.43 21438  11.9%} ) 0 18613   0.0
0 210059   0.433   0.433   0.000  12.4% 0.000834  26084  90913.35 ({   0.00 0   0.0%} {   0.00 1133   0.5%} {   0.43 24951  11.9%} ) 0 21660   0.0
0 240060   0.433   0.431   0.004  12.4% 0.000834  29661 103497.96 ({   0.00 0   0.0%} {   0.00 1287   0.5%} {   0.43 28374  11.8%} ) 0 24772   0.0
0 270083   0.431   0.429   0.004  12.3% 0.000834  33242 115955.35 ({   0.00 0   0.0%} {   0.00 1440   0.5%} {   0.43 31802  11.8%} ) 0 27857   0.0
0 300088   0.429   0.429   0.002  12.3% 0.000834  36917 128644.44 ({   0.00 0   0.0%} {   0.00 1608   0.5%} {   0.43 35309  11.8%} ) 0 30905   0.0
0 330105   0.429   0.430  -0.003  12.3% 0.000801  40728 141937.25 ({   0.00 0   0.0%} {   0.00 1774   0.5%} {   0.43 38954  11.8%} ) 0 33994   0.0
0 360114   0.430   0.430  -0.000  12.3% 0.000769  44417 154875.64 ({   0.00 0   0.0%} {   0.00 1949   0.5%} {   0.43 42468  11.8%} ) 0 37068   0.0
0 390114   0.430   0.430   0.000  12.3% 0.000769  48086 167712.25 ({   0.00 0   0.0%} {   0.00 2107   0.5%} {   0.43 45979  11.8%} ) 0 40163   0.0
0 420116   0.430   0.430  -0.001  12.3% 0.000738  51842 180729.15 ({   0.00 0   0.0%} {   0.00 2237   0.5%} {   0.43 49605  11.8%} ) 0 43197   0.0
0 450129   0.430   0.430   0.001  12.3% 0.000738  55504 193471.51 ({   0.00 0   0.0%} {   0.00 2380   0.5%} {   0.43 53124  11.8%} ) 0 46275   0.0
0 480134   0.430   0.429   0.002  12.3% 0.000738  59055 206050.62 ({   0.00 0   0.0%} {   0.00 2530   0.5%} {   0.43 56525  11.8%} ) 0 49388   0.0
0 510142   0.429   0.428   0.002  12.3% 0.000738  62666 218516.23 ({   0.00 0   0.0%} {   0.00 2694   0.5%} {   0.43 59972  11.8%} ) 0 52479   0.0
0 540142   0.428   0.428   0.001  12.3% 0.000738  66340 231148.06 ({   0.00 0   0.0%} {   0.00 2874   0.5%} {   0.43 63466  11.7%} ) 0 55527   0.0
0 570143   0.428   0.428   0.001  12.3% 0.000738  69998 243755.64 ({   0.00 0   0.0%} {   0.00 3037   0.5%} {   0.43 66961  11.7%} ) 0 58578   0.0
0 600147   0.428   0.427   0.000  12.3% 0.000738  73637 256496.71 ({   0.00 0   0.0%} {   0.00 3171   0.5%} {   0.43 70466  11.7%} ) 0 61656   0.0
0 630149   0.427   0.427   0.002  12.3% 0.000738  77238 268855.20 ({   0.00 0   0.0%} {   0.00 3296   0.5%} {   0.42 73942  11.7%} ) 0 64751   0.0
0 660149   0.427   0.427  -0.001  12.3% 0.000709  81040 281902.28 ({   0.00 0   0.0%} {   0.00 3481   0.5%} {   0.42 77559  11.7%} ) 0 67838   0.0
0 690159   0.427   0.426   0.001  12.3% 0.000709  84624 294338.83 ({   0.00 0   0.0%} {   0.00 3619   0.5%} {   0.42 81005  11.7%} ) 0 70901   0.0
0 717691   0.426   0.427  -0.001  12.3% 0.000680  88028 306312.97 ({   0.00 0   0.0%} {   0.00 3729   0.5%} {   0.42 84299  11.7%} ) 0 73723   0.0
Finished on Tue Jan 29 04:58:26 Pacific Standard Time 2002
NN_saveWeights save_33.wgt
Loading from c:tmpFile09.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile09.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 722807 in 74205 Words. Total 722807 in 74205 words
Good+Bad: 722807 in 74205 words.
Total 722807 in 74205 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 722807 in 74205 Words. Total 722807 in 74205 words
Good+Bad: 722807 in 74205 words.
Tot Mem 116242 (kB)]
Data loading complete at Tue Jan 29 04:59:33 Pacific Standard Time 2002
m_bUseBadWords = 1
34 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30010   0.000   0.420  -1.000  12.2% 0.000544  3664  12590.07 ({   0.00 0   0.0%} {   0.00 185   0.6%} {   0.42 3479  11.6%} ) 0 3111   0.0
0 60016   0.420   0.420  -0.001  12.1% 0.000522  7258  25204.08 ({   0.00 0   0.0%} {   0.00 332   0.6%} {   0.42 6926  11.5%} ) 0 6236   0.0
0 90016   0.420   0.425  -0.012  12.2% 0.000418  11005  38257.23 ({   0.00 0   0.0%} {   0.00 527   0.6%} {   0.42 10478  11.6%} ) 0 9252   0.0
0 120021   0.425   0.422   0.007  12.2% 0.000418  14642  50679.41 ({   0.00 0   0.0%} {   0.00 695   0.6%} {   0.42 13947  11.6%} ) 0 12405   0.0
0 150027   0.422   0.423  -0.001  12.2% 0.000418  18346  63387.08 ({   0.00 0   0.0%} {   0.00 850   0.6%} {   0.42 17496  11.7%} ) 0 15513   0.0
0 180036   0.423   0.422   0.001  12.3% 0.000418  22063  76001.44 ({   0.00 0   0.0%} {   0.00 1053   0.6%} {   0.42 21010  11.7%} ) 0 18589   0.0
0 210044   0.422   0.422   0.000  12.2% 0.000418  25684  88665.89 ({   0.00 0   0.0%} {   0.00 1246   0.6%} {   0.42 24438  11.6%} ) 0 21688   0.0
0 240046   0.422   0.425  -0.006  12.3% 0.000418  29504 101933.11 ({   0.00 0   0.0%} {   0.00 1384   0.6%} {   0.42 28120  11.7%} ) 0 24753   0.0
0 270047   0.425   0.424   0.000  12.3% 0.000418  33135 114627.75 ({   0.00 0   0.0%} {   0.00 1552   0.6%} {   0.42 31583  11.7%} ) 0 27786   0.0
0 300049   0.424   0.422   0.007  12.2% 0.000418  36600 126500.44 ({   0.00 0   0.0%} {   0.00 1703   0.6%} {   0.42 34897  11.6%} ) 0 30831   0.0
0 330071   0.422   0.422  -0.001  12.2% 0.000418  40302 139280.22 ({   0.00 0   0.0%} {   0.00 1850   0.6%} {   0.42 38452  11.6%} ) 0 33943   0.0
0 360084   0.422   0.422   0.000  12.2% 0.000418  43879 151897.14 ({   0.00 0   0.0%} {   0.00 2010   0.6%} {   0.42 41869  11.6%} ) 0 36997   0.0
0 390093   0.422   0.421   0.002  12.2% 0.000418  47415 164287.80 ({   0.00 0   0.0%} {   0.00 2159   0.6%} {   0.42 45256  11.6%} ) 0 40066   0.0
0 420099   0.421   0.421   0.000  12.2% 0.000418  51047 176911.21 ({   0.00 0   0.0%} {   0.00 2295   0.5%} {   0.42 48752  11.6%} ) 0 43110   0.0
0 450101   0.421   0.421   0.001  12.1% 0.000418  54577 189391.41 ({   0.00 0   0.0%} {   0.00 2445   0.5%} {   0.42 52132  11.6%} ) 0 46112   0.0
0 480101   0.421   0.420   0.002  12.1% 0.000418  58055 201614.50 ({   0.00 0   0.0%} {   0.00 2609   0.5%} {   0.42 55446  11.5%} ) 0 49185   0.0
0 510112   0.420   0.420  -0.000  12.1% 0.000418  61807 214310.79 ({   0.00 0   0.0%} {   0.00 2781   0.5%} {   0.42 59026  11.6%} ) 0 52306   0.0
0 540115   0.420   0.420  -0.000  12.1% 0.000418  65487 227002.23 ({   0.00 0   0.0%} {   0.00 2946   0.5%} {   0.42 62541  11.6%} ) 0 55450   0.0
0 570118   0.420   0.421  -0.001  12.1% 0.000418  69142 239779.37 ({   0.00 0   0.0%} {   0.00 3097   0.5%} {   0.42 66045  11.6%} ) 0 58521   0.0
0 600119   0.421   0.420   0.000  12.1% 0.000418  72747 252275.29 ({   0.00 0   0.0%} {   0.00 3247   0.5%} {   0.42 69500  11.6%} ) 0 61562   0.0
0 630127   0.420   0.420  -0.000  12.1% 0.000418  76338 264897.22 ({   0.00 0   0.0%} {   0.00 3366   0.5%} {   0.42 72972  11.6%} ) 0 64643   0.0
0 660135   0.420   0.420   0.001  12.1% 0.000418  79825 277357.10 ({   0.00 0   0.0%} {   0.00 3488   0.5%} {   0.42 76337  11.6%} ) 0 67671   0.0
0 690136   0.420   0.420   0.001  12.1% 0.000418  83458 289813.59 ({   0.00 0   0.0%} {   0.00 3622   0.5%} {   0.42 79836  11.6%} ) 0 70776   0.0
0 720142   0.420   0.420  -0.001  12.1% 0.000418  87091 302595.84 ({   0.00 0   0.0%} {   0.00 3784   0.5%} {   0.42 83307  11.6%} ) 0 73874   0.0
0 722645   0.420   0.420   0.000  12.1% 0.000418  87365 303543.27 ({   0.00 0   0.0%} {   0.00 3797   0.5%} {   0.42 83568  11.6%} ) 0 74140   0.0
Finished on Tue Jan 29 08:08:51 Pacific Standard Time 2002
NN_saveWeights save_34.wgt
Loading from c:tmpFile10.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile10.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 724653 in 74588 Words. Total 724653 in 74588 words
Good+Bad: 724653 in 74588 words.
Total 724653 in 74588 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 724653 in 74588 Words. Total 724653 in 74588 words
Good+Bad: 724653 in 74588 words.
Tot Mem 116541 (kB)]
Data loading complete at Tue Jan 29 08:10:00 Pacific Standard Time 2002
m_bUseBadWords = 1
35 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30003   0.000   0.422  -1.000  12.3% 0.000500  3676  12663.79 ({   0.00 0   0.0%} {   0.00 158   0.5%} {   0.42 3518  11.7%} ) 0 3099   0.0
0 60003   0.422   0.417   0.011  12.1% 0.000500  7259  25050.45 ({   0.00 0   0.0%} {   0.00 333   0.6%} {   0.42 6926  11.5%} ) 0 6335   0.0
0 90005   0.417   0.423  -0.013  12.2% 0.000500  11021  38054.43 ({   0.00 0   0.0%} {   0.00 516   0.6%} {   0.42 10505  11.7%} ) 0 9436   0.0
0 120011   0.423   0.422   0.002  12.2% 0.000500  14631  50654.34 ({   0.00 0   0.0%} {   0.00 669   0.6%} {   0.42 13962  11.6%} ) 0 12472   0.0
0 150034   0.422   0.418   0.009  12.1% 0.000500  18179  62780.99 ({   0.00 0   0.0%} {   0.00 825   0.5%} {   0.42 17354  11.6%} ) 0 15579   0.0
0 180036   0.418   0.416   0.006  12.0% 0.000500  21677  74915.29 ({   0.00 0   0.0%} {   0.00 975   0.5%} {   0.41 20702  11.5%} ) 0 18655   0.0
0 210050   0.416   0.420  -0.009  12.1% 0.000500  25426  88156.88 ({   0.00 0   0.0%} {   0.00 1140   0.5%} {   0.42 24286  11.6%} ) 0 21704   0.0
0 240053   0.420   0.420  -0.001  12.1% 0.000500  29079 100865.30 ({   0.00 0   0.0%} {   0.00 1310   0.5%} {   0.42 27769  11.6%} ) 0 24786   0.0
0 270057   0.420   0.420   0.000  12.1% 0.000500  32776 113451.96 ({   0.00 0   0.0%} {   0.00 1465   0.5%} {   0.42 31311  11.6%} ) 0 27910   0.0
0 300058   0.420   0.421  -0.002  12.1% 0.000500  36428 126265.25 ({   0.00 0   0.0%} {   0.00 1615   0.5%} {   0.42 34813  11.6%} ) 0 31033   0.0
0 330059   0.421   0.421   0.000  12.1% 0.000500  40067 138821.66 ({   0.00 0   0.0%} {   0.00 1739   0.5%} {   0.42 38328  11.6%} ) 0 34076   0.0
0 360065   0.421   0.421  -0.001  12.1% 0.000500  43657 151576.82 ({   0.00 0   0.0%} {   0.00 1863   0.5%} {   0.42 41794  11.6%} ) 0 37139   0.0
0 390107   0.421   0.420   0.002  12.1% 0.000500  47172 163950.10 ({   0.00 0   0.0%} {   0.00 1986   0.5%} {   0.42 45186  11.6%} ) 0 40246   0.0
0 420107   0.420   0.420   0.001  12.1% 0.000500  50730 176421.84 ({   0.00 0   0.0%} {   0.00 2134   0.5%} {   0.42 48596  11.6%} ) 0 43247   0.0
0 450116   0.420   0.421  -0.001  12.1% 0.000500  54349 189284.13 ({   0.00 0   0.0%} {   0.00 2274   0.5%} {   0.42 52075  11.6%} ) 0 46322   0.0
0 480155   0.421   0.421  -0.001  12.1% 0.000500  58010 202172.08 ({   0.00 0   0.0%} {   0.00 2413   0.5%} {   0.42 55597  11.6%} ) 0 49404   0.0
0 510162   0.421   0.420   0.003  12.1% 0.000500  61559 214183.07 ({   0.00 0   0.0%} {   0.00 2560   0.5%} {   0.42 58999  11.6%} ) 0 52469   0.0
0 540179   0.420   0.419   0.003  12.0% 0.000500  65061 226137.45 ({   0.00 0   0.0%} {   0.00 2698   0.5%} {   0.42 62363  11.5%} ) 0 55545   0.0
0 570182   0.419   0.418   0.002  12.0% 0.000500  68556 238324.14 ({   0.00 0   0.0%} {   0.00 2838   0.5%} {   0.42 65718  11.5%} ) 0 58665   0.0
0 600192   0.418   0.418  -0.001  12.0% 0.000500  72148 251153.01 ({   0.00 0   0.0%} {   0.00 2966   0.5%} {   0.42 69182  11.5%} ) 0 61725   0.0
0 630192   0.418   0.418  -0.000  12.0% 0.000500  75812 263718.35 ({   0.00 0   0.0%} {   0.00 3107   0.5%} {   0.42 72705  11.5%} ) 0 64828   0.0
0 660195   0.418   0.418   0.001  12.0% 0.000500  79323 275992.46 ({   0.00 0   0.0%} {   0.00 3231   0.5%} {   0.42 76092  11.5%} ) 0 67885   0.0
0 690205   0.418   0.418   0.000  12.0% 0.000500  82908 288425.05 ({   0.00 0   0.0%} {   0.00 3341   0.5%} {   0.42 79567  11.5%} ) 0 70985   0.0
0 720213   0.418   0.418  -0.001  12.0% 0.000500  86526 301147.14 ({   0.00 0   0.0%} {   0.00 3479   0.5%} {   0.42 83047  11.5%} ) 0 74073   0.0
0 724485   0.418   0.418  -0.001  12.0% 0.000500  87086 303122.83 ({   0.00 0   0.0%} {   0.00 3503   0.5%} {   0.42 83583  11.5%} ) 0 74515   0.0
Finished on Tue Jan 29 11:19:53 Pacific Standard Time 2002
NN_saveWeights save_35.wgt
Loading from c:tmpFile11.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile11.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 716895 in 74104 Words. Total 716895 in 74104 words
Good+Bad: 716895 in 74104 words.
Total 716895 in 74104 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 716895 in 74104 Words. Total 716895 in 74104 words
Good+Bad: 716895 in 74104 words.
Tot Mem 115296 (kB)]
Data loading complete at Tue Jan 29 11:21:01 Pacific Standard Time 2002
m_bUseBadWords = 1
36 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30000   0.000   0.430  -1.000  12.4% 0.000500  3722  12906.06 ({   0.00 0   0.0%} {   0.00 161   0.5%} {   0.43 3561  11.9%} ) 0 3125   0.0
0 60002   0.430   0.415   0.036  12.2% 0.000500  7304  24909.39 ({   0.00 0   0.0%} {   0.00 326   0.5%} {   0.41 6978  11.6%} ) 0 6245   0.0
0 90002   0.415   0.413   0.005  12.1% 0.000500  10857  37166.58 ({   0.00 0   0.0%} {   0.00 475   0.5%} {   0.41 10382  11.5%} ) 0 9305   0.0
0 120004   0.413   0.413   0.000  12.0% 0.000500  14433  49547.48 ({   0.00 0   0.0%} {   0.00 633   0.5%} {   0.41 13800  11.5%} ) 0 12477   0.0
0 150009   0.413   0.414  -0.002  12.0% 0.000500  17983  62084.05 ({   0.00 0   0.0%} {   0.00 779   0.5%} {   0.41 17204  11.5%} ) 0 15695   0.0
0 180029   0.414   0.414  -0.000  12.0% 0.000500  21524  74535.30 ({   0.00 0   0.0%} {   0.00 932   0.5%} {   0.41 20592  11.4%} ) 0 18765   0.0
0 210034   0.414   0.417  -0.007  12.0% 0.000500  25306  87565.56 ({   0.00 0   0.0%} {   0.00 1091   0.5%} {   0.41 24215  11.5%} ) 0 21924   0.0
0 240035   0.417   0.419  -0.005  12.1% 0.000500  28960 100526.38 ({   0.00 0   0.0%} {   0.00 1266   0.5%} {   0.42 27694  11.5%} ) 0 25052   0.0
0 270035   0.419   0.419  -0.001  12.1% 0.000500  32620 113210.31 ({   0.00 0   0.0%} {   0.00 1410   0.5%} {   0.42 31210  11.6%} ) 0 28181   0.0
0 300048   0.419   0.417   0.005  12.0% 0.000500  36068 125124.93 ({   0.00 0   0.0%} {   0.00 1585   0.5%} {   0.41 34483  11.5%} ) 0 31255   0.0
0 330050   0.417   0.417   0.001  12.0% 0.000500  39653 137564.32 ({   0.00 0   0.0%} {   0.00 1719   0.5%} {   0.41 37934  11.5%} ) 0 34433   0.0
0 360059   0.417   0.416   0.001  12.0% 0.000500  43249 149902.09 ({   0.00 0   0.0%} {   0.00 1887   0.5%} {   0.41 41362  11.5%} ) 0 37556   0.0
0 390059   0.416   0.418  -0.004  12.1% 0.000500  47012 163049.21 ({   0.00 0   0.0%} {   0.00 2032   0.5%} {   0.42 44980  11.5%} ) 0 40647   0.0
0 420064   0.418   0.419  -0.003  12.1% 0.000500  50772 176129.75 ({   0.00 0   0.0%} {   0.00 2162   0.5%} {   0.42 48610  11.6%} ) 0 43675   0.0
0 450070   0.419   0.419  -0.000  12.1% 0.000500  54329 188796.46 ({   0.00 0   0.0%} {   0.00 2324   0.5%} {   0.42 52005  11.6%} ) 0 46784   0.0
0 480083   0.419   0.419   0.000  12.1% 0.000500  57970 201363.42 ({   0.00 0   0.0%} {   0.00 2464   0.5%} {   0.42 55506  11.6%} ) 0 49813   0.0
0 510087   0.419   0.419   0.000  12.1% 0.000500  61594 213899.92 ({   0.00 0   0.0%} {   0.00 2629   0.5%} {   0.42 58965  11.6%} ) 0 52840   0.0
0 540093   0.419   0.419  -0.000  12.1% 0.000500  65211 226560.66 ({   0.00 0   0.0%} {   0.00 2770   0.5%} {   0.42 62441  11.6%} ) 0 55953   0.0
0 570093   0.419   0.418   0.003  12.1% 0.000500  68722 238532.58 ({   0.00 0   0.0%} {   0.00 2914   0.5%} {   0.42 65808  11.5%} ) 0 59032   0.0
0 600098   0.418   0.417   0.003  12.0% 0.000500  72138 250447.86 ({   0.00 0   0.0%} {   0.00 3035   0.5%} {   0.42 69103  11.5%} ) 0 62096   0.0
0 630099   0.417   0.418  -0.001  12.0% 0.000500  75821 263131.06 ({   0.00 0   0.0%} {   0.00 3164   0.5%} {   0.42 72657  11.5%} ) 0 65185   0.0
0 660115   0.418   0.417   0.001  12.0% 0.000500  79336 275328.18 ({   0.00 0   0.0%} {   0.00 3316   0.5%} {   0.42 76020  11.5%} ) 0 68237   0.0
0 690119   0.417   0.417   0.001  12.0% 0.000500  82846 287608.49 ({   0.00 0   0.0%} {   0.00 3450   0.5%} {   0.41 79396  11.5%} ) 0 71276   0.0
0 716752   0.417   0.417   0.000  12.0% 0.000500  85989 298571.18 ({   0.00 0   0.0%} {   0.00 3574   0.5%} {   0.41 82415  11.5%} ) 0 74048   0.0
Finished on Tue Jan 29 14:28:48 Pacific Standard Time 2002
NN_saveWeights save_36.wgt
Loading from c:tmpFile12.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile12.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 712529 in 73784 Words. Total 712529 in 73784 words
Good+Bad: 712529 in 73784 words.
Total 712529 in 73784 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 712529 in 73784 Words. Total 712529 in 73784 words
Good+Bad: 712529 in 73784 words.
Tot Mem 114594 (kB)]
Data loading complete at Tue Jan 29 14:29:56 Pacific Standard Time 2002
m_bUseBadWords = 1
37 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30021   0.000   0.412  -1.000  12.0% 0.000500  3599  12374.72 ({   0.00 0   0.0%} {   0.00 183   0.6%} {   0.41 3416  11.4%} ) 0 3114   0.0
0 60021   0.412   0.413  -0.002  12.0% 0.000500  7218  24799.68 ({   0.00 0   0.0%} {   0.00 379   0.6%} {   0.41 6839  11.4%} ) 0 6286   0.0
0 90023   0.413   0.410   0.008  11.8% 0.000500  10650  36886.64 ({   0.00 0   0.0%} {   0.00 525   0.6%} {   0.41 10125  11.2%} ) 0 9401   0.0
0 120026   0.410   0.407   0.006  11.7% 0.000500  14068  48910.48 ({   0.00 0   0.0%} {   0.00 643   0.5%} {   0.41 13425  11.2%} ) 0 12439   0.0
0 150029   0.407   0.407   0.000  11.8% 0.000500  17637  61134.75 ({   0.00 0   0.0%} {   0.00 820   0.5%} {   0.41 16817  11.2%} ) 0 15560   0.0
0 180038   0.407   0.409  -0.002  11.8% 0.000500  21230  73546.18 ({   0.00 0   0.0%} {   0.00 956   0.5%} {   0.41 20274  11.3%} ) 0 18688   0.0
0 210038   0.409   0.412  -0.009  11.9% 0.000500  24999  86567.21 ({   0.00 0   0.0%} {   0.00 1125   0.5%} {   0.41 23874  11.4%} ) 0 21777   0.0
0 240052   0.412   0.413  -0.001  11.9% 0.000500  28599  99059.71 ({   0.00 0   0.0%} {   0.00 1279   0.5%} {   0.41 27320  11.4%} ) 0 24885   0.0
0 270056   0.413   0.414  -0.003  12.0% 0.000500  32301 111814.01 ({   0.00 0   0.0%} {   0.00 1446   0.5%} {   0.41 30855  11.4%} ) 0 28017   0.0
0 300059   0.414   0.413   0.002  11.9% 0.000500  35804 124011.74 ({   0.00 0   0.0%} {   0.00 1566   0.5%} {   0.41 34238  11.4%} ) 0 31083   0.0
0 330059   0.413   0.414  -0.002  12.0% 0.000500  39492 136627.29 ({   0.00 0   0.0%} {   0.00 1736   0.5%} {   0.41 37756  11.4%} ) 0 34233   0.0
0 360068   0.414   0.414   0.001  12.0% 0.000500  43120 148948.84 ({   0.00 0   0.0%} {   0.00 1905   0.5%} {   0.41 41215  11.4%} ) 0 37305   0.0
0 390076   0.414   0.414  -0.001  12.0% 0.000500  46807 161570.82 ({   0.00 0   0.0%} {   0.00 2032   0.5%} {   0.41 44775  11.5%} ) 0 40399   0.0
0 420079   0.414   0.414   0.001  12.0% 0.000500  50338 173909.16 ({   0.00 0   0.0%} {   0.00 2206   0.5%} {   0.41 48132  11.5%} ) 0 43487   0.0
0 450080   0.414   0.413   0.003  11.9% 0.000500  53775 185854.84 ({   0.00 0   0.0%} {   0.00 2339   0.5%} {   0.41 51436  11.4%} ) 0 46583   0.0
0 480082   0.413   0.413   0.001  11.9% 0.000500  57343 198035.44 ({   0.00 0   0.0%} {   0.00 2479   0.5%} {   0.41 54864  11.4%} ) 0 49668   0.0
0 510091   0.413   0.413  -0.001  12.0% 0.000500  61023 210596.47 ({   0.00 0   0.0%} {   0.00 2670   0.5%} {   0.41 58353  11.4%} ) 0 52800   0.0
0 540101   0.413   0.413  -0.001  12.0% 0.000500  64638 223247.78 ({   0.00 0   0.0%} {   0.00 2802   0.5%} {   0.41 61836  11.4%} ) 0 55952   0.0
0 570105   0.413   0.413  -0.000  12.0% 0.000500  68244 235654.87 ({   0.00 0   0.0%} {   0.00 2928   0.5%} {   0.41 65316  11.5%} ) 0 59054   0.0
0 600114   0.413   0.414  -0.001  12.0% 0.000500  71850 248298.69 ({   0.00 0   0.0%} {   0.00 3062   0.5%} {   0.41 68788  11.5%} ) 0 62067   0.0
0 630119   0.414   0.414   0.001  12.0% 0.000500  75325 260566.29 ({   0.00 0   0.0%} {   0.00 3205   0.5%} {   0.41 72120  11.4%} ) 0 65180   0.0
0 660120   0.414   0.414  -0.001  12.0% 0.000500  78992 273144.13 ({   0.00 0   0.0%} {   0.00 3380   0.5%} {   0.41 75612  11.5%} ) 0 68343   0.0
0 690122   0.414   0.414   0.000  12.0% 0.000500  82595 285519.10 ({   0.00 0   0.0%} {   0.00 3513   0.5%} {   0.41 79082  11.5%} ) 0 71462   0.0
0 712338   0.414   0.414   0.000  12.0% 0.000500  85182 294603.67 ({   0.00 0   0.0%} {   0.00 3594   0.5%} {   0.41 81588  11.5%} ) 0 73708   0.0
Finished on Tue Jan 29 17:36:32 Pacific Standard Time 2002
NN_saveWeights save_37.wgt
Loading from c:tmpFile13.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile13.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 723716 in 74816 Words. Total 723716 in 74816 words
Good+Bad: 723716 in 74816 words.
Total 723716 in 74816 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 723716 in 74816 Words. Total 723716 in 74816 words
Good+Bad: 723716 in 74816 words.
Tot Mem 116393 (kB)]
Data loading complete at Tue Jan 29 17:37:38 Pacific Standard Time 2002
m_bUseBadWords = 1
38 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30000   0.000   0.422  -1.000  12.3% 0.000500  3689  12653.11 ({   0.00 0   0.0%} {   0.00 167   0.6%} {   0.42 3522  11.7%} ) 0 3061   0.0
0 60004   0.422   0.428  -0.016  12.5% 0.000500  7513  25709.72 ({   0.00 0   0.0%} {   0.00 352   0.6%} {   0.43 7161  11.9%} ) 0 6147   0.0
0 90006   0.428   0.420   0.021  12.3% 0.000500  11058  37765.25 ({   0.00 0   0.0%} {   0.00 515   0.6%} {   0.42 10543  11.7%} ) 0 9288   0.0
0 120011   0.420   0.424  -0.010  12.4% 0.000500  14837  50845.64 ({   0.00 0   0.0%} {   0.00 645   0.5%} {   0.42 14192  11.8%} ) 0 12330   0.0
0 150011   0.424   0.421   0.005  12.2% 0.000500  18367  63214.48 ({   0.00 0   0.0%} {   0.00 787   0.5%} {   0.42 17580  11.7%} ) 0 15488   0.0
0 180018   0.421   0.420   0.004  12.2% 0.000500  21888  75556.66 ({   0.00 0   0.0%} {   0.00 942   0.5%} {   0.42 20946  11.6%} ) 0 18585   0.0
0 210023   0.420   0.420  -0.001  12.1% 0.000500  25455  88233.10 ({   0.00 0   0.0%} {   0.00 1069   0.5%} {   0.42 24386  11.6%} ) 0 21722   0.0
0 240028   0.420   0.420  -0.000  12.1% 0.000500  29161 100868.66 ({   0.00 0   0.0%} {   0.00 1261   0.5%} {   0.42 27900  11.6%} ) 0 24826   0.0
0 270039   0.420   0.421  -0.001  12.1% 0.000500  32747 113602.64 ({   0.00 0   0.0%} {   0.00 1412   0.5%} {   0.42 31335  11.6%} ) 0 27914   0.0
0 300039   0.421   0.419   0.004  12.1% 0.000500  36295 125762.80 ({   0.00 0   0.0%} {   0.00 1545   0.5%} {   0.42 34750  11.6%} ) 0 31024   0.0
0 330051   0.419   0.419   0.001  12.1% 0.000500  39857 138179.62 ({   0.00 0   0.0%} {   0.00 1716   0.5%} {   0.42 38141  11.6%} ) 0 34113   0.0
0 360053   0.419   0.418   0.002  12.0% 0.000500  43385 150427.46 ({   0.00 0   0.0%} {   0.00 1877   0.5%} {   0.42 41508  11.5%} ) 0 37290   0.0
0 390057   0.418   0.418  -0.000  12.0% 0.000500  46981 162990.77 ({   0.00 0   0.0%} {   0.00 2049   0.5%} {   0.42 44932  11.5%} ) 0 40457   0.0
0 420063   0.418   0.416   0.004  12.0% 0.000500  50418 174860.74 ({   0.00 0   0.0%} {   0.00 2188   0.5%} {   0.41 48230  11.5%} ) 0 43587   0.0
0 450064   0.416   0.416  -0.000  12.0% 0.000500  54001 187366.81 ({   0.00 0   0.0%} {   0.00 2347   0.5%} {   0.41 51654  11.5%} ) 0 46755   0.0
0 480069   0.416   0.416   0.001  12.0% 0.000500  57520 199564.11 ({   0.00 0   0.0%} {   0.00 2487   0.5%} {   0.41 55033  11.5%} ) 0 49801   0.0
0 510074   0.416   0.414   0.003  11.9% 0.000500  60943 211393.76 ({   0.00 0   0.0%} {   0.00 2647   0.5%} {   0.41 58296  11.4%} ) 0 52838   0.0
0 540090   0.414   0.414   0.001  11.9% 0.000500  64427 223690.42 ({   0.00 0   0.0%} {   0.00 2773   0.5%} {   0.41 61654  11.4%} ) 0 55970   0.0
0 570093   0.414   0.414  -0.001  11.9% 0.000500  68103 236259.43 ({   0.00 0   0.0%} {   0.00 2925   0.5%} {   0.41 65178  11.4%} ) 0 59105   0.0
0 600097   0.414   0.414   0.000  11.9% 0.000500  71630 248584.51 ({   0.00 0   0.0%} {   0.00 3062   0.5%} {   0.41 68568  11.4%} ) 0 62216   0.0
0 630102   0.414   0.415  -0.001  11.9% 0.000500  75151 261249.55 ({   0.00 0   0.0%} {   0.00 3178   0.5%} {   0.41 71973  11.4%} ) 0 65265   0.0
0 660108   0.415   0.415  -0.001  11.9% 0.000500  78745 273903.23 ({   0.00 0   0.0%} {   0.00 3324   0.5%} {   0.41 75421  11.4%} ) 0 68317   0.0
0 690111   0.415   0.415   0.000  11.9% 0.000500  82312 286219.00 ({   0.00 0   0.0%} {   0.00 3458   0.5%} {   0.41 78854  11.4%} ) 0 71392   0.0
0 720111   0.415   0.414   0.001  11.9% 0.000500  85764 298289.89 ({   0.00 0   0.0%} {   0.00 3588   0.5%} {   0.41 82176  11.4%} ) 0 74398   0.0
0 723553   0.414   0.414   0.000  11.9% 0.000500  86145 299668.20 ({   0.00 0   0.0%} {   0.00 3608   0.5%} {   0.41 82537  11.4%} ) 0 74750   0.0
Finished on Tue Jan 29 20:47:13 Pacific Standard Time 2002
NN_saveWeights save_38.wgt
Loading from c:tmpFile14.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile14.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 719885 in 74408 Words. Total 719885 in 74408 words
Good+Bad: 719885 in 74408 words.
Total 719885 in 74408 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 719885 in 74408 Words. Total 719885 in 74408 words
Good+Bad: 719885 in 74408 words.
Tot Mem 115776 (kB)]
Data loading complete at Tue Jan 29 20:48:21 Pacific Standard Time 2002
m_bUseBadWords = 1
39 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30022   0.000   0.427  -1.000  12.2% 0.000500  3652  12817.28 ({   0.00 0   0.0%} {   0.00 197   0.7%} {   0.42 3455  11.5%} ) 0 3076   0.0
0 60033   0.427   0.424   0.007  12.1% 0.000500  7276  25458.05 ({   0.00 0   0.0%} {   0.00 351   0.6%} {   0.42 6925  11.5%} ) 0 6189   0.0
0 90048   0.424   0.423   0.003  12.2% 0.000500  10978  38066.86 ({   0.00 0   0.0%} {   0.00 529   0.6%} {   0.42 10449  11.6%} ) 0 9326   0.0
0 120049   0.423   0.426  -0.008  12.2% 0.000500  14648  51158.10 ({   0.00 0   0.0%} {   0.00 692   0.6%} {   0.42 13956  11.6%} ) 0 12417   0.0
0 150053   0.426   0.424   0.004  12.2% 0.000500  18244  63665.40 ({   0.00 0   0.0%} {   0.00 860   0.6%} {   0.42 17384  11.6%} ) 0 15495   0.0
0 180054   0.424   0.422   0.005  12.1% 0.000500  21840  76050.80 ({   0.00 0   0.0%} {   0.00 1040   0.6%} {   0.42 20800  11.6%} ) 0 18661   0.0
0 210054   0.422   0.420   0.005  12.1% 0.000500  25314  88244.00 ({   0.00 0   0.0%} {   0.00 1180   0.6%} {   0.42 24134  11.5%} ) 0 21839   0.0
0 240070   0.420   0.417   0.008  12.0% 0.000500  28778 100084.60 ({   0.00 0   0.0%} {   0.00 1339   0.6%} {   0.41 27439  11.4%} ) 0 24939   0.0
0 270070   0.417   0.416   0.001  12.0% 0.000500  32307 112460.37 ({   0.00 0   0.0%} {   0.00 1477   0.5%} {   0.41 30830  11.4%} ) 0 28061   0.0
0 300081   0.416   0.417  -0.001  12.0% 0.000500  35993 125058.07 ({   0.00 0   0.0%} {   0.00 1620   0.5%} {   0.41 34373  11.5%} ) 0 31165   0.0
0 330090   0.417   0.417   0.000  12.0% 0.000500  39613 137523.86 ({   0.00 0   0.0%} {   0.00 1792   0.5%} {   0.41 37821  11.5%} ) 0 34238   0.0
0 360095   0.417   0.416   0.002  12.0% 0.000500  43080 149689.76 ({   0.00 0   0.0%} {   0.00 1990   0.6%} {   0.41 41090  11.4%} ) 0 37382   0.0
0 390102   0.416   0.418  -0.005  12.0% 0.000500  46820 162927.90 ({   0.00 0   0.0%} {   0.00 2171   0.6%} {   0.42 44649  11.4%} ) 0 40476   0.0
0 420110   0.418   0.420  -0.005  12.0% 0.000500  50549 176294.69 ({   0.00 0   0.0%} {   0.00 2319   0.6%} {   0.42 48230  11.5%} ) 0 43647   0.0
0 450116   0.420   0.421  -0.002  12.0% 0.000500  54229 189282.22 ({   0.00 0   0.0%} {   0.00 2487   0.6%} {   0.42 51742  11.5%} ) 0 46756   0.0
0 480118   0.421   0.421  -0.000  12.1% 0.000500  57916 201912.30 ({   0.00 0   0.0%} {   0.00 2638   0.5%} {   0.42 55278  11.5%} ) 0 49831   0.0
0 510127   0.421   0.420   0.002  12.1% 0.000500  61522 214187.54 ({   0.00 0   0.0%} {   0.00 2794   0.5%} {   0.42 58728  11.5%} ) 0 52900   0.0
0 540134   0.420   0.419   0.002  12.0% 0.000500  64932 226326.86 ({   0.00 0   0.0%} {   0.00 2927   0.5%} {   0.42 62005  11.5%} ) 0 56015   0.0
0 570145   0.419   0.420  -0.002  12.0% 0.000500  68626 239284.69 ({   0.00 0   0.0%} {   0.00 3068   0.5%} {   0.42 65558  11.5%} ) 0 59144   0.0
0 600149   0.420   0.419   0.001  12.0% 0.000500  72200 251744.62 ({   0.00 0   0.0%} {   0.00 3201   0.5%} {   0.42 68999  11.5%} ) 0 62197   0.0
0 630157   0.419   0.419   0.000  12.0% 0.000500  75816 264266.05 ({   0.00 0   0.0%} {   0.00 3359   0.5%} {   0.42 72457  11.5%} ) 0 65251   0.0
0 660157   0.419   0.419   0.001  12.0% 0.000500  79278 276663.39 ({   0.00 0   0.0%} {   0.00 3514   0.5%} {   0.42 75764  11.5%} ) 0 68325   0.0
0 690164   0.419   0.418   0.003  12.0% 0.000500  82795 288505.49 ({   0.00 0   0.0%} {   0.00 3686   0.5%} {   0.42 79109  11.5%} ) 0 71349   0.0
0 719679   0.418   0.417   0.001  12.0% 0.000500  86261 300435.86 ({   0.00 0   0.0%} {   0.00 3830   0.5%} {   0.42 82431  11.5%} ) 0 74327   0.0
Finished on Tue Jan 29 23:56:49 Pacific Standard Time 2002
NN_saveWeights save_39.wgt
Start sampling from 22 files. Starting at Tue Jan 29 23:56:50 Pacific Standard Time 2002
Sample ../../strictc.nni into 25  components with fraction 1
36799 samples, 37 features, 3 targettypes
Reading 36799 samples, writing with prob 1.000000...
36799 samples out of 36799 chosen. 346946 Segments out of 346946
Generated   1428 samples   13506 segments into file c:tmpFile00
Generated   1495 samples   14503 segments into file c:tmpFile01
Generated   1507 samples   14242 segments into file c:tmpFile02
Generated   1533 samples   14736 segments into file c:tmpFile03
Generated   1473 samples   13827 segments into file c:tmpFile04
Generated   1480 samples   13562 segments into file c:tmpFile05
Generated   1469 samples   13980 segments into file c:tmpFile06
Generated   1527 samples   14425 segments into file c:tmpFile07
Generated   1578 samples   14659 segments into file c:tmpFile08
Generated   1473 samples   13869 segments into file c:tmpFile09
Generated   1463 samples   13418 segments into file c:tmpFile10
Generated   1390 samples   13262 segments into file c:tmpFile11
Generated   1446 samples   13814 segments into file c:tmpFile12
Generated   1446 samples   13542 segments into file c:tmpFile13
Generated   1421 samples   13085 segments into file c:tmpFile14
Generated   1470 samples   13872 segments into file c:tmpFile15
Generated   1462 samples   13522 segments into file c:tmpFile16
Generated   1453 samples   13499 segments into file c:tmpFile17
Generated   1450 samples   13429 segments into file c:tmpFile18
Generated   1422 samples   13852 segments into file c:tmpFile19
Generated   1550 samples   14668 segments into file c:tmpFile20
Generated   1529 samples   14667 segments into file c:tmpFile21
Generated   1439 samples   13366 segments into file c:tmpFile22
Generated   1426 samples   13584 segments into file c:tmpFile23
Generated   1469 samples   14057 segments into file c:tmpFile24
Sample ../../strictp.nni into 25  components with fraction 1
122708 samples, 37 features, 3 targettypes
Reading 1469 samples, writing with prob 1.000000...
122708 samples out of 122708 chosen. 1137967 Segments out of 1137967
Generated   6272 samples   45238 segments into file c:tmpFile00
Generated   6415 samples   45476 segments into file c:tmpFile01
Generated   6395 samples   44874 segments into file c:tmpFile02
Generated   6456 samples   44925 segments into file c:tmpFile03
Generated   6389 samples   45749 segments into file c:tmpFile04
Generated   6404 samples   46626 segments into file c:tmpFile05
Generated   6396 samples   45619 segments into file c:tmpFile06
Generated   6380 samples   45177 segments into file c:tmpFile07
Generated   6647 samples   46748 segments into file c:tmpFile08
Generated   6303 samples   45059 segments into file c:tmpFile09
Generated   6388 samples   45410 segments into file c:tmpFile10
Generated   6259 samples   46805 segments into file c:tmpFile11
Generated   6325 samples   45305 segments into file c:tmpFile12
Generated   6348 samples   45548 segments into file c:tmpFile13
Generated   6400 samples   45902 segments into file c:tmpFile14
Generated   6350 samples   45743 segments into file c:tmpFile15
Generated   6302 samples   44777 segments into file c:tmpFile16
Generated   6269 samples   44934 segments into file c:tmpFile17
Generated   6332 samples   45147 segments into file c:tmpFile18
Generated   6326 samples   45506 segments into file c:tmpFile19
Generated   6460 samples   45527 segments into file c:tmpFile20
Generated   6518 samples   45273 segments into file c:tmpFile21
Generated   6362 samples   44851 segments into file c:tmpFile22
Generated   6431 samples   46425 segments into file c:tmpFile23
Generated   6380 samples   45323 segments into file c:tmpFile24
Sample ../../restc.nni into 25  components with fraction 0.25
225990 samples, 37 features, 3 targettypes
Reading 6380 samples, writing with prob 0.250000...
56436 samples out of 225990 chosen. 535732 Segments out of 2144224
Generated   8578 samples   21672 segments into file c:tmpFile00
Generated   8661 samples   21127 segments into file c:tmpFile01
Generated   8737 samples   22893 segments into file c:tmpFile02
Generated   8730 samples   21452 segments into file c:tmpFile03
Generated   8751 samples   22694 segments into file c:tmpFile04
Generated   8567 samples   20716 segments into file c:tmpFile05
Generated   8611 samples   20704 segments into file c:tmpFile06
Generated   8710 samples   21833 segments into file c:tmpFile07
Generated   8875 samples   21239 segments into file c:tmpFile08
Generated   8548 samples   21016 segments into file c:tmpFile09
Generated   8712 samples   22194 segments into file c:tmpFile10
Generated   8531 samples   21566 segments into file c:tmpFile11
Generated   8559 samples   21407 segments into file c:tmpFile12
Generated   8585 samples   21222 segments into file c:tmpFile13
Generated   8668 samples   21445 segments into file c:tmpFile14
Generated   8619 samples   21976 segments into file c:tmpFile15
Generated   8560 samples   21194 segments into file c:tmpFile16
Generated   8511 samples   21181 segments into file c:tmpFile17
Generated   8570 samples   21449 segments into file c:tmpFile18
Generated   8616 samples   21886 segments into file c:tmpFile19
Generated   8656 samples   21219 segments into file c:tmpFile20
Generated   8740 samples   21258 segments into file c:tmpFile21
Generated   8582 samples   20886 segments into file c:tmpFile22
Generated   8648 samples   20405 segments into file c:tmpFile23
Generated   8618 samples   21098 segments into file c:tmpFile24
Sample ../../restp.nni into 25  components with fraction 0.25
874009 samples, 37 features, 3 targettypes
Reading 8618 samples, writing with prob 0.250000...
218576 samples out of 874009 chosen. 2097459 Segments out of 8388106
Generated  17198 samples   81982 segments into file c:tmpFile00
Generated  17360 samples   84750 segments into file c:tmpFile01
Generated  17420 samples   83069 segments into file c:tmpFile02
Generated  17434 samples   83409 segments into file c:tmpFile03
Generated  17412 samples   83533 segments into file c:tmpFile04
Generated  17374 samples   84681 segments into file c:tmpFile05
Generated  17332 samples   83346 segments into file c:tmpFile06
Generated  17509 samples   84174 segments into file c:tmpFile07
Generated  17754 samples   85669 segments into file c:tmpFile08
Generated  17452 samples   84710 segments into file c:tmpFile09
Generated  17319 samples   82754 segments into file c:tmpFile10
Generated  17282 samples   84983 segments into file c:tmpFile11
Generated  17368 samples   84828 segments into file c:tmpFile12
Generated  17255 samples   84427 segments into file c:tmpFile13
Generated  17542 samples   85052 segments into file c:tmpFile14
Generated  17266 samples   83289 segments into file c:tmpFile15
Generated  17363 samples   85007 segments into file c:tmpFile16
Generated  17202 samples   83344 segments into file c:tmpFile17
Generated  17311 samples   83066 segments into file c:tmpFile18
Generated  17375 samples   83543 segments into file c:tmpFile19
Generated  17544 samples   85758 segments into file c:tmpFile20
Generated  17409 samples   82660 segments into file c:tmpFile21
Generated  17223 samples   82319 segments into file c:tmpFile22
Generated  17394 samples   83557 segments into file c:tmpFile23
Generated  17421 samples   83549 segments into file c:tmpFile24
Sample ../../singlec.nni into 25  components with fraction 1
389 samples, 37 features, 3 targettypes
Reading 17421 samples, writing with prob 1.000000...
389 samples out of 389 chosen. 1205 Segments out of 1205
Generated  17215 samples      51 segments into file c:tmpFile00
Generated  17378 samples      60 segments into file c:tmpFile01
Generated  17434 samples      42 segments into file c:tmpFile02
Generated  17446 samples      37 segments into file c:tmpFile03
Generated  17433 samples      66 segments into file c:tmpFile04
Generated  17379 samples      15 segments into file c:tmpFile05
Generated  17348 samples      48 segments into file c:tmpFile06
Generated  17527 samples      55 segments into file c:tmpFile07
Generated  17770 samples      48 segments into file c:tmpFile08
Generated  17469 samples      55 segments into file c:tmpFile09
Generated  17333 samples      43 segments into file c:tmpFile10
Generated  17293 samples      33 segments into file c:tmpFile11
Generated  17381 samples      39 segments into file c:tmpFile12
Generated  17265 samples      32 segments into file c:tmpFile13
Generated  17563 samples      65 segments into file c:tmpFile14
Generated  17284 samples      57 segments into file c:tmpFile15
Generated  17380 samples      51 segments into file c:tmpFile16
Generated  17221 samples      57 segments into file c:tmpFile17
Generated  17326 samples      50 segments into file c:tmpFile18
Generated  17394 samples      60 segments into file c:tmpFile19
Generated  17555 samples      33 segments into file c:tmpFile20
Generated  17425 samples      52 segments into file c:tmpFile21
Generated  17239 samples      48 segments into file c:tmpFile22
Generated  17412 samples      57 segments into file c:tmpFile23
Generated  17438 samples      51 segments into file c:tmpFile24
Sample ../../singlep.nni into 25  components with fraction 1
13226 samples, 37 features, 3 targettypes
Reading 17438 samples, writing with prob 1.000000...
13226 samples out of 13226 chosen. 23503 Segments out of 23503
Generated  17790 samples    1027 segments into file c:tmpFile00
Generated  17924 samples     935 segments into file c:tmpFile01
Generated  17911 samples     857 segments into file c:tmpFile02
Generated  18020 samples    1018 segments into file c:tmpFile03
Generated  17973 samples     947 segments into file c:tmpFile04
Generated  17879 samples     885 segments into file c:tmpFile05
Generated  17889 samples     985 segments into file c:tmpFile06
Generated  17997 samples     798 segments into file c:tmpFile07
Generated  18277 samples     878 segments into file c:tmpFile08
Generated  17989 samples     932 segments into file c:tmpFile09
Generated  17827 samples     887 segments into file c:tmpFile10
Generated  17829 samples     953 segments into file c:tmpFile11
Generated  17926 samples     958 segments into file c:tmpFile12
Generated  17789 samples     932 segments into file c:tmpFile13
Generated  18124 samples    1023 segments into file c:tmpFile14
Generated  17833 samples     973 segments into file c:tmpFile15
Generated  17871 samples     875 segments into file c:tmpFile16
Generated  17753 samples     927 segments into file c:tmpFile17
Generated  17853 samples     929 segments into file c:tmpFile18
Generated  17962 samples    1010 segments into file c:tmpFile19
Generated  18059 samples     935 segments into file c:tmpFile20
Generated  17980 samples     992 segments into file c:tmpFile21
Generated  17805 samples    1014 segments into file c:tmpFile22
Generated  17921 samples     930 segments into file c:tmpFile23
Generated  17953 samples     903 segments into file c:tmpFile24
Sample ../../strictPanelc.nni into 25  components with fraction 1
3668 samples, 37 features, 3 targettypes
Reading 17953 samples, writing with prob 1.000000...
3668 samples out of 3668 chosen. 142167 Segments out of 142167
Generated  17938 samples    5870 segments into file c:tmpFile00
Generated  18076 samples    5738 segments into file c:tmpFile01
Generated  18089 samples    6706 segments into file c:tmpFile02
Generated  18175 samples    5863 segments into file c:tmpFile03
Generated  18131 samples    6130 segments into file c:tmpFile04
Generated  18035 samples    6071 segments into file c:tmpFile05
Generated  18037 samples    5650 segments into file c:tmpFile06
Generated  18151 samples    5986 segments into file c:tmpFile07
Generated  18403 samples    4882 segments into file c:tmpFile08
Generated  18124 samples    5222 segments into file c:tmpFile09
Generated  17974 samples    5447 segments into file c:tmpFile10
Generated  17962 samples    5262 segments into file c:tmpFile11
Generated  18043 samples    4426 segments into file c:tmpFile12
Generated  17935 samples    5896 segments into file c:tmpFile13
Generated  18276 samples    6006 segments into file c:tmpFile14
Generated  17988 samples    6165 segments into file c:tmpFile15
Generated  18017 samples    5572 segments into file c:tmpFile16
Generated  17928 samples    6755 segments into file c:tmpFile17
Generated  18001 samples    5731 segments into file c:tmpFile18
Generated  18115 samples    5956 segments into file c:tmpFile19
Generated  18222 samples    6541 segments into file c:tmpFile20
Generated  18102 samples    4865 segments into file c:tmpFile21
Generated  17948 samples    5563 segments into file c:tmpFile22
Generated  18065 samples    5537 segments into file c:tmpFile23
Generated  18067 samples    4327 segments into file c:tmpFile24
Sample ../../strictPanelp.nni into 25  components with fraction 1
13415 samples, 37 features, 3 targettypes
Reading 18067 samples, writing with prob 1.000000...
13415 samples out of 13415 chosen. 617371 Segments out of 617371
Generated  18440 samples   22720 segments into file c:tmpFile00
Generated  18594 samples   24065 segments into file c:tmpFile01
Generated  18647 samples   25326 segments into file c:tmpFile02
Generated  18697 samples   23958 segments into file c:tmpFile03
Generated  18665 samples   24808 segments into file c:tmpFile04
Generated  18572 samples   24873 segments into file c:tmpFile05
Generated  18585 samples   25055 segments into file c:tmpFile06
Generated  18669 samples   23788 segments into file c:tmpFile07
Generated  18971 samples   26155 segments into file c:tmpFile08
Generated  18640 samples   23918 segments into file c:tmpFile09
Generated  18531 samples   25043 segments into file c:tmpFile10
Generated  18516 samples   25500 segments into file c:tmpFile11
Generated  18605 samples   25942 segments into file c:tmpFile12
Generated  18464 samples   24367 segments into file c:tmpFile13
Generated  18805 samples   23857 segments into file c:tmpFile14
Generated  18570 samples   26896 segments into file c:tmpFile15
Generated  18503 samples   22643 segments into file c:tmpFile16
Generated  18424 samples   23154 segments into file c:tmpFile17
Generated  18511 samples   23464 segments into file c:tmpFile18
Generated  18621 samples   23214 segments into file c:tmpFile19
Generated  18778 samples   25694 segments into file c:tmpFile20
Generated  18656 samples   25855 segments into file c:tmpFile21
Generated  18527 samples   26377 segments into file c:tmpFile22
Generated  18631 samples   26268 segments into file c:tmpFile23
Generated  18595 samples   24431 segments into file c:tmpFile24
Sample ../../restPanelc.nni into 25  components with fraction 0.5
17631 samples, 37 features, 3 targettypes
Reading 18595 samples, writing with prob 0.500000...
8765 samples out of 17631 chosen. 483354 Segments out of 972305
Generated  18768 samples   17506 segments into file c:tmpFile00
Generated  18913 samples   17495 segments into file c:tmpFile01
Generated  19011 samples   19660 segments into file c:tmpFile02
Generated  19053 samples   19653 segments into file c:tmpFile03
Generated  19029 samples   20127 segments into file c:tmpFile04
Generated  18933 samples   20364 segments into file c:tmpFile05
Generated  18923 samples   19134 segments into file c:tmpFile06
Generated  19019 samples   19455 segments into file c:tmpFile07
Generated  19341 samples   20396 segments into file c:tmpFile08
Generated  18987 samples   18972 segments into file c:tmpFile09
Generated  18863 samples   18275 segments into file c:tmpFile10
Generated  18852 samples   18521 segments into file c:tmpFile11
Generated  18965 samples   19841 segments into file c:tmpFile12
Generated  18829 samples   20133 segments into file c:tmpFile13
Generated  19140 samples   18425 segments into file c:tmpFile14
Generated  18912 samples   19207 segments into file c:tmpFile15
Generated  18868 samples   20274 segments into file c:tmpFile16
Generated  18784 samples   20244 segments into file c:tmpFile17
Generated  18844 samples   18296 segments into file c:tmpFile18
Generated  18997 samples   20782 segments into file c:tmpFile19
Generated  19129 samples   19025 segments into file c:tmpFile20
Generated  18987 samples   18172 segments into file c:tmpFile21
Generated  18903 samples   20786 segments into file c:tmpFile22
Generated  19013 samples   21266 segments into file c:tmpFile23
Generated  18919 samples   17345 segments into file c:tmpFile24
Sample ../../restPanelp.nni into 25  components with fraction 0.5
96783 samples, 37 features, 3 targettypes
Reading 18919 samples, writing with prob 0.500000...
48632 samples out of 96783 chosen. 2486532 Segments out of 4944354
Generated  20707 samples   99006 segments into file c:tmpFile00
Generated  20829 samples   98248 segments into file c:tmpFile01
Generated  20970 samples   99291 segments into file c:tmpFile02
Generated  21056 samples  102516 segments into file c:tmpFile03
Generated  20882 samples   96684 segments into file c:tmpFile04
Generated  20921 samples  101456 segments into file c:tmpFile05
Generated  20942 samples  100561 segments into file c:tmpFile06
Generated  20987 samples   98789 segments into file c:tmpFile07
Generated  21312 samples  102741 segments into file c:tmpFile08
Generated  20936 samples   99271 segments into file c:tmpFile09
Generated  20835 samples  101424 segments into file c:tmpFile10
Generated  20837 samples  100818 segments into file c:tmpFile11
Generated  20825 samples   95367 segments into file c:tmpFile12
Generated  20816 samples  103472 segments into file c:tmpFile13
Generated  21119 samples  101753 segments into file c:tmpFile14
Generated  20806 samples   95997 segments into file c:tmpFile15
Generated  20758 samples   96186 segments into file c:tmpFile16
Generated  20710 samples   98912 segments into file c:tmpFile17
Generated  20791 samples   98855 segments into file c:tmpFile18
Generated  20989 samples  101090 segments into file c:tmpFile19
Generated  21033 samples   97324 segments into file c:tmpFile20
Generated  20924 samples   99277 segments into file c:tmpFile21
Generated  20787 samples   95807 segments into file c:tmpFile22
Generated  20977 samples  101508 segments into file c:tmpFile23
Generated  20865 samples  100179 segments into file c:tmpFile24
Sample ../../Jan_02/addrGoodWordc.nni into 25  components with fraction 1
49407 samples, 37 features, 3 targettypes
Reading 20865 samples, writing with prob 1.000000...
49407 samples out of 49407 chosen. 564569 Segments out of 564569
Generated  22744 samples   23208 segments into file c:tmpFile00
Generated  22732 samples   21918 segments into file c:tmpFile01
Generated  22925 samples   22514 segments into file c:tmpFile02
Generated  23027 samples   22407 segments into file c:tmpFile03
Generated  22897 samples   23193 segments into file c:tmpFile04
Generated  22893 samples   22123 segments into file c:tmpFile05
Generated  22978 samples   22776 segments into file c:tmpFile06
Generated  22958 samples   22731 segments into file c:tmpFile07
Generated  23284 samples   22217 segments into file c:tmpFile08
Generated  22923 samples   22696 segments into file c:tmpFile09
Generated  22805 samples   22315 segments into file c:tmpFile10
Generated  22895 samples   23592 segments into file c:tmpFile11
Generated  22844 samples   22810 segments into file c:tmpFile12
Generated  22814 samples   22754 segments into file c:tmpFile13
Generated  23027 samples   21710 segments into file c:tmpFile14
Generated  22767 samples   22174 segments into file c:tmpFile15
Generated  22739 samples   22742 segments into file c:tmpFile16
Generated  22695 samples   22823 segments into file c:tmpFile17
Generated  22766 samples   22738 segments into file c:tmpFile18
Generated  22922 samples   22520 segments into file c:tmpFile19
Generated  22971 samples   22341 segments into file c:tmpFile20
Generated  22917 samples   22590 segments into file c:tmpFile21
Generated  22748 samples   23117 segments into file c:tmpFile22
Generated  22976 samples   22978 segments into file c:tmpFile23
Generated  22774 samples   21582 segments into file c:tmpFile24
Sample ../../Jan_02/addrGoodWordp.nni into 25  components with fraction 1
305542 samples, 37 features, 3 targettypes
Reading 22774 samples, writing with prob 1.000000...
305542 samples out of 305542 chosen. 2318188 Segments out of 2318188
Generated  35109 samples   94020 segments into file c:tmpFile00
Generated  35016 samples   93242 segments into file c:tmpFile01
Generated  35377 samples   94519 segments into file c:tmpFile02
Generated  35203 samples   92316 segments into file c:tmpFile03
Generated  35130 samples   94234 segments into file c:tmpFile04
Generated  35210 samples   93431 segments into file c:tmpFile05
Generated  34987 samples   91662 segments into file c:tmpFile06
Generated  35173 samples   92373 segments into file c:tmpFile07
Generated  35408 samples   92418 segments into file c:tmpFile08
Generated  35147 samples   92495 segments into file c:tmpFile09
Generated  34909 samples   91098 segments into file c:tmpFile10
Generated  34972 samples   91882 segments into file c:tmpFile11
Generated  35026 samples   92439 segments into file c:tmpFile12
Generated  35151 samples   93319 segments into file c:tmpFile13
Generated  35352 samples   92448 segments into file c:tmpFile14
Generated  34925 samples   92380 segments into file c:tmpFile15
Generated  34998 samples   92342 segments into file c:tmpFile16
Generated  34989 samples   94101 segments into file c:tmpFile17
Generated  34954 samples   92694 segments into file c:tmpFile18
Generated  34997 samples   90533 segments into file c:tmpFile19
Generated  35358 samples   94135 segments into file c:tmpFile20
Generated  34978 samples   92596 segments into file c:tmpFile21
Generated  35127 samples   94486 segments into file c:tmpFile22
Generated  35199 samples   91655 segments into file c:tmpFile23
Generated  34868 samples   91370 segments into file c:tmpFile24
Sample ../../Jan_02/addrGoodPanelc.nni into 25  components with fraction 1
3471 samples, 37 features, 3 targettypes
Reading 34868 samples, writing with prob 1.000000...
3471 samples out of 3471 chosen. 145629 Segments out of 145629
Generated  35255 samples    6187 segments into file c:tmpFile00
Generated  35156 samples    5719 segments into file c:tmpFile01
Generated  35520 samples    6050 segments into file c:tmpFile02
Generated  35361 samples    6575 segments into file c:tmpFile03
Generated  35267 samples    5711 segments into file c:tmpFile04
Generated  35335 samples    5139 segments into file c:tmpFile05
Generated  35111 samples    5162 segments into file c:tmpFile06
Generated  35310 samples    6078 segments into file c:tmpFile07
Generated  35544 samples    5769 segments into file c:tmpFile08
Generated  35287 samples    5952 segments into file c:tmpFile09
Generated  35057 samples    6258 segments into file c:tmpFile10
Generated  35120 samples    6114 segments into file c:tmpFile11
Generated  35149 samples    5186 segments into file c:tmpFile12
Generated  35277 samples    5577 segments into file c:tmpFile13
Generated  35492 samples    5815 segments into file c:tmpFile14
Generated  35050 samples    5202 segments into file c:tmpFile15
Generated  35144 samples    6305 segments into file c:tmpFile16
Generated  35150 samples    6616 segments into file c:tmpFile17
Generated  35083 samples    5424 segments into file c:tmpFile18
Generated  35133 samples    5816 segments into file c:tmpFile19
Generated  35488 samples    5279 segments into file c:tmpFile20
Generated  35130 samples    5984 segments into file c:tmpFile21
Generated  35284 samples    6491 segments into file c:tmpFile22
Generated  35319 samples    5200 segments into file c:tmpFile23
Generated  35012 samples    6020 segments into file c:tmpFile24
Sample ../../Jan_02/addrGoodPanelp.nni into 25  components with fraction 1
37906 samples, 37 features, 3 targettypes
Reading 35012 samples, writing with prob 1.000000...
37906 samples out of 37906 chosen. 1364088 Segments out of 1364088
Generated  36804 samples   56220 segments into file c:tmpFile00
Generated  36636 samples   53291 segments into file c:tmpFile01
Generated  36980 samples   52698 segments into file c:tmpFile02
Generated  36870 samples   53976 segments into file c:tmpFile03
Generated  36882 samples   58579 segments into file c:tmpFile04
Generated  36849 samples   54419 segments into file c:tmpFile05
Generated  36596 samples   52284 segments into file c:tmpFile06
Generated  36802 samples   53717 segments into file c:tmpFile07
Generated  37084 samples   55943 segments into file c:tmpFile08
Generated  36818 samples   55785 segments into file c:tmpFile09
Generated  36643 samples   56408 segments into file c:tmpFile10
Generated  36629 samples   53916 segments into file c:tmpFile11
Generated  36627 samples   53744 segments into file c:tmpFile12
Generated  36814 samples   55689 segments into file c:tmpFile13
Generated  37066 samples   56293 segments into file c:tmpFile14
Generated  36587 samples   55855 segments into file c:tmpFile15
Generated  36689 samples   55778 segments into file c:tmpFile16
Generated  36648 samples   53743 segments into file c:tmpFile17
Generated  36634 samples   55764 segments into file c:tmpFile18
Generated  36629 samples   53770 segments into file c:tmpFile19
Generated  36959 samples   52467 segments into file c:tmpFile20
Generated  36604 samples   52189 segments into file c:tmpFile21
Generated  36778 samples   54375 segments into file c:tmpFile22
Generated  36826 samples   54642 segments into file c:tmpFile23
Generated  36486 samples   52543 segments into file c:tmpFile24
Sample ../../Jan_02/NatGoodWordc.nni into 25  components with fraction 0.5
253146 samples, 37 features, 3 targettypes
Reading 36486 samples, writing with prob 0.500000...
126682 samples out of 253146 chosen. 1154930 Segments out of 2307833
Generated  41910 samples   45862 segments into file c:tmpFile00
Generated  41723 samples   46553 segments into file c:tmpFile01
Generated  42078 samples   46896 segments into file c:tmpFile02
Generated  42017 samples   47283 segments into file c:tmpFile03
Generated  41858 samples   45518 segments into file c:tmpFile04
Generated  41954 samples   46601 segments into file c:tmpFile05
Generated  41632 samples   45485 segments into file c:tmpFile06
Generated  41732 samples   44768 segments into file c:tmpFile07
Generated  42122 samples   46228 segments into file c:tmpFile08
Generated  42000 samples   46656 segments into file c:tmpFile09
Generated  41591 samples   45071 segments into file c:tmpFile10
Generated  41722 samples   46357 segments into file c:tmpFile11
Generated  41754 samples   46289 segments into file c:tmpFile12
Generated  41893 samples   46602 segments into file c:tmpFile13
Generated  42001 samples   45003 segments into file c:tmpFile14
Generated  41637 samples   45772 segments into file c:tmpFile15
Generated  41835 samples   46686 segments into file c:tmpFile16
Generated  41705 samples   46900 segments into file c:tmpFile17
Generated  41689 samples   46501 segments into file c:tmpFile18
Generated  41730 samples   46745 segments into file c:tmpFile19
Generated  41982 samples   45901 segments into file c:tmpFile20
Generated  41765 samples   47027 segments into file c:tmpFile21
Generated  41837 samples   46394 segments into file c:tmpFile22
Generated  41930 samples   46312 segments into file c:tmpFile23
Generated  41525 samples   45520 segments into file c:tmpFile24
Sample ../../Jan_02/NatGoodWordp.nni into 25  components with fraction 0.5
495244 samples, 37 features, 3 targettypes
Reading 41525 samples, writing with prob 0.500000...
247751 samples out of 495244 chosen. 2329631 Segments out of 4665299
Generated  51842 samples   94068 segments into file c:tmpFile00
Generated  51902 samples   95746 segments into file c:tmpFile01
Generated  51942 samples   92191 segments into file c:tmpFile02
Generated  51894 samples   91953 segments into file c:tmpFile03
Generated  51618 samples   91805 segments into file c:tmpFile04
Generated  51883 samples   93846 segments into file c:tmpFile05
Generated  51490 samples   91996 segments into file c:tmpFile06
Generated  51781 samples   94433 segments into file c:tmpFile07
Generated  51928 samples   92300 segments into file c:tmpFile08
Generated  51820 samples   92268 segments into file c:tmpFile09
Generated  51523 samples   92969 segments into file c:tmpFile10
Generated  51713 samples   93477 segments into file c:tmpFile11
Generated  51728 samples   93395 segments into file c:tmpFile12
Generated  51739 samples   91920 segments into file c:tmpFile13
Generated  51925 samples   93748 segments into file c:tmpFile14
Generated  51365 samples   91841 segments into file c:tmpFile15
Generated  51911 samples   94786 segments into file c:tmpFile16
Generated  51559 samples   91892 segments into file c:tmpFile17
Generated  51635 samples   93187 segments into file c:tmpFile18
Generated  51689 samples   93863 segments into file c:tmpFile19
Generated  51855 samples   93310 segments into file c:tmpFile20
Generated  51579 samples   92940 segments into file c:tmpFile21
Generated  51613 samples   92565 segments into file c:tmpFile22
Generated  51970 samples   94921 segments into file c:tmpFile23
Generated  51469 samples   94211 segments into file c:tmpFile24
Sample ../../Jan_02/NatGoodPanelc.nni into 25  components with fraction 1
29114 samples, 37 features, 3 targettypes
Reading 51469 samples, writing with prob 1.000000...
29114 samples out of 29114 chosen. 1107447 Segments out of 1107447
Generated  53004 samples   44514 segments into file c:tmpFile00
Generated  53044 samples   43715 segments into file c:tmpFile01
Generated  53090 samples   43883 segments into file c:tmpFile02
Generated  53036 samples   43623 segments into file c:tmpFile03
Generated  52798 samples   45166 segments into file c:tmpFile04
Generated  53037 samples   43800 segments into file c:tmpFile05
Generated  52665 samples   44973 segments into file c:tmpFile06
Generated  53021 samples   47278 segments into file c:tmpFile07
Generated  53099 samples   44318 segments into file c:tmpFile08
Generated  52942 samples   42152 segments into file c:tmpFile09
Generated  52661 samples   43423 segments into file c:tmpFile10
Generated  52855 samples   43452 segments into file c:tmpFile11
Generated  52844 samples   42586 segments into file c:tmpFile12
Generated  52940 samples   45892 segments into file c:tmpFile13
Generated  53056 samples   43336 segments into file c:tmpFile14
Generated  52512 samples   43184 segments into file c:tmpFile15
Generated  53091 samples   44497 segments into file c:tmpFile16
Generated  52719 samples   44437 segments into file c:tmpFile17
Generated  52800 samples   44522 segments into file c:tmpFile18
Generated  52831 samples   43778 segments into file c:tmpFile19
Generated  53081 samples   46319 segments into file c:tmpFile20
Generated  52757 samples   44268 segments into file c:tmpFile21
Generated  52822 samples   45664 segments into file c:tmpFile22
Generated  53140 samples   43777 segments into file c:tmpFile23
Generated  52642 samples   44890 segments into file c:tmpFile24
Sample ../../Jan_02/NatGoodPanelp.nni into 25  components with fraction 1
59361 samples, 37 features, 3 targettypes
Reading 52642 samples, writing with prob 1.000000...
59361 samples out of 59361 chosen. 2623320 Segments out of 2623320
Generated  55383 samples  104968 segments into file c:tmpFile00
Generated  55538 samples  109602 segments into file c:tmpFile01
Generated  55452 samples  104502 segments into file c:tmpFile02
Generated  55452 samples  106816 segments into file c:tmpFile03
Generated  55259 samples  109016 segments into file c:tmpFile04
Generated  55374 samples  103154 segments into file c:tmpFile05
Generated  55070 samples  105380 segments into file c:tmpFile06
Generated  55336 samples  101588 segments into file c:tmpFile07
Generated  55378 samples  100772 segments into file c:tmpFile08
Generated  55413 samples  109704 segments into file c:tmpFile09
Generated  55090 samples  106408 segments into file c:tmpFile10
Generated  55266 samples  107427 segments into file c:tmpFile11
Generated  55233 samples  105423 segments into file c:tmpFile12
Generated  55279 samples  103805 segments into file c:tmpFile13
Generated  55500 samples  108247 segments into file c:tmpFile14
Generated  54842 samples  103447 segments into file c:tmpFile15
Generated  55452 samples  105108 segments into file c:tmpFile16
Generated  55130 samples  106648 segments into file c:tmpFile17
Generated  55105 samples  101840 segments into file c:tmpFile18
Generated  55195 samples  103628 segments into file c:tmpFile19
Generated  55430 samples  104602 segments into file c:tmpFile20
Generated  55067 samples  102547 segments into file c:tmpFile21
Generated  55185 samples  103497 segments into file c:tmpFile22
Generated  55354 samples   97837 segments into file c:tmpFile23
Generated  55065 samples  107354 segments into file c:tmpFile24
Sample ../../Jan_02/WebGoodPanelc.nni into 25  components with fraction 1
4702 samples, 37 features, 3 targettypes
Reading 55065 samples, writing with prob 1.000000...
4702 samples out of 4702 chosen. 201995 Segments out of 201995
Generated  55575 samples    8239 segments into file c:tmpFile00
Generated  55700 samples    6756 segments into file c:tmpFile01
Generated  55651 samples    8571 segments into file c:tmpFile02
Generated  55638 samples    7748 segments into file c:tmpFile03
Generated  55455 samples    8408 segments into file c:tmpFile04
Generated  55576 samples    8585 segments into file c:tmpFile05
Generated  55273 samples    8481 segments into file c:tmpFile06
Generated  55542 samples    9039 segments into file c:tmpFile07
Generated  55570 samples    8352 segments into file c:tmpFile08
Generated  55593 samples    7834 segments into file c:tmpFile09
Generated  55282 samples    8572 segments into file c:tmpFile10
Generated  55473 samples    8796 segments into file c:tmpFile11
Generated  55403 samples    7242 segments into file c:tmpFile12
Generated  55454 samples    7386 segments into file c:tmpFile13
Generated  55686 samples    8036 segments into file c:tmpFile14
Generated  55027 samples    8093 segments into file c:tmpFile15
Generated  55648 samples    8348 segments into file c:tmpFile16
Generated  55318 samples    8018 segments into file c:tmpFile17
Generated  55292 samples    8207 segments into file c:tmpFile18
Generated  55386 samples    8518 segments into file c:tmpFile19
Generated  55617 samples    8058 segments into file c:tmpFile20
Generated  55235 samples    7125 segments into file c:tmpFile21
Generated  55384 samples    8325 segments into file c:tmpFile22
Generated  55537 samples    7841 segments into file c:tmpFile23
Generated  55235 samples    7417 segments into file c:tmpFile24
Sample ../../Jan_02/WebGoodPanelp.nni into 25  components with fraction 1
20215 samples, 37 features, 3 targettypes
Reading 55235 samples, writing with prob 1.000000...
20215 samples out of 20215 chosen. 838761 Segments out of 838761
Generated  56360 samples   32528 segments into file c:tmpFile00
Generated  56483 samples   32339 segments into file c:tmpFile01
Generated  56427 samples   32631 segments into file c:tmpFile02
Generated  56428 samples   33181 segments into file c:tmpFile03
Generated  56260 samples   33254 segments into file c:tmpFile04
Generated  56379 samples   33550 segments into file c:tmpFile05
Generated  56085 samples   33965 segments into file c:tmpFile06
Generated  56355 samples   33589 segments into file c:tmpFile07
Generated  56360 samples   32650 segments into file c:tmpFile08
Generated  56385 samples   32731 segments into file c:tmpFile09
Generated  56090 samples   34148 segments into file c:tmpFile10
Generated  56263 samples   32881 segments into file c:tmpFile11
Generated  56252 samples   35033 segments into file c:tmpFile12
Generated  56299 samples   34838 segments into file c:tmpFile13
Generated  56505 samples   34140 segments into file c:tmpFile14
Generated  55828 samples   33207 segments into file c:tmpFile15
Generated  56474 samples   34364 segments into file c:tmpFile16
Generated  56149 samples   34015 segments into file c:tmpFile17
Generated  56095 samples   33500 segments into file c:tmpFile18
Generated  56185 samples   32597 segments into file c:tmpFile19
Generated  56471 samples   35124 segments into file c:tmpFile20
Generated  56038 samples   33466 segments into file c:tmpFile21
Generated  56197 samples   34526 segments into file c:tmpFile22
Generated  56346 samples   33255 segments into file c:tmpFile23
Generated  56051 samples   33249 segments into file c:tmpFile24
Sample ../../Jan_02/SingGoodc.nni into 25  components with fraction 1
625 samples, 37 features, 3 targettypes
Reading 56051 samples, writing with prob 1.000000...
625 samples out of 625 chosen. 1931 Segments out of 1931
Generated  56378 samples      57 segments into file c:tmpFile00
Generated  56518 samples     105 segments into file c:tmpFile01
Generated  56448 samples      65 segments into file c:tmpFile02
Generated  56451 samples      75 segments into file c:tmpFile03
Generated  56281 samples      64 segments into file c:tmpFile04
Generated  56407 samples      84 segments into file c:tmpFile05
Generated  56120 samples     110 segments into file c:tmpFile06
Generated  56377 samples      66 segments into file c:tmpFile07
Generated  56397 samples     111 segments into file c:tmpFile08
Generated  56410 samples      78 segments into file c:tmpFile09
Generated  56119 samples      89 segments into file c:tmpFile10
Generated  56295 samples      96 segments into file c:tmpFile11
Generated  56275 samples      69 segments into file c:tmpFile12
Generated  56321 samples      68 segments into file c:tmpFile13
Generated  56528 samples      82 segments into file c:tmpFile14
Generated  55845 samples      51 segments into file c:tmpFile15
Generated  56500 samples      79 segments into file c:tmpFile16
Generated  56169 samples      60 segments into file c:tmpFile17
Generated  56122 samples      82 segments into file c:tmpFile18
Generated  56202 samples      51 segments into file c:tmpFile19
Generated  56490 samples      59 segments into file c:tmpFile20
Generated  56065 samples      82 segments into file c:tmpFile21
Generated  56225 samples      93 segments into file c:tmpFile22
Generated  56374 samples      87 segments into file c:tmpFile23
Generated  56073 samples      68 segments into file c:tmpFile24
Sample ../../Jan_02/SingGoodc.nni into 25  components with fraction 1
625 samples, 37 features, 3 targettypes
Reading 56073 samples, writing with prob 1.000000...
625 samples out of 625 chosen. 1931 Segments out of 1931
Generated  56400 samples      66 segments into file c:tmpFile00
Generated  56558 samples     123 segments into file c:tmpFile01
Generated  56480 samples      98 segments into file c:tmpFile02
Generated  56478 samples      86 segments into file c:tmpFile03
Generated  56313 samples     105 segments into file c:tmpFile04
Generated  56431 samples      72 segments into file c:tmpFile05
Generated  56145 samples      76 segments into file c:tmpFile06
Generated  56402 samples      78 segments into file c:tmpFile07
Generated  56419 samples      68 segments into file c:tmpFile08
Generated  56440 samples      90 segments into file c:tmpFile09
Generated  56145 samples      78 segments into file c:tmpFile10
Generated  56314 samples      59 segments into file c:tmpFile11
Generated  56300 samples      79 segments into file c:tmpFile12
Generated  56340 samples      58 segments into file c:tmpFile13
Generated  56551 samples      70 segments into file c:tmpFile14
Generated  55867 samples      67 segments into file c:tmpFile15
Generated  56536 samples     109 segments into file c:tmpFile16
Generated  56197 samples      91 segments into file c:tmpFile17
Generated  56139 samples      52 segments into file c:tmpFile18
Generated  56217 samples      45 segments into file c:tmpFile19
Generated  56509 samples      58 segments into file c:tmpFile20
Generated  56086 samples      63 segments into file c:tmpFile21
Generated  56246 samples      64 segments into file c:tmpFile22
Generated  56401 samples      89 segments into file c:tmpFile23
Generated  56101 samples      87 segments into file c:tmpFile24
Data sampling complete at Wed Jan 30 00:28:11 Pacific Standard Time 2002
Loading from c:tmpFile00.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile00.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 818515 in 56400 Words. Total 818515 in 56400 words
Good+Bad: 818515 in 56400 words.
Total 818515 in 56400 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 818515 in 56400 Words. Total 818515 in 56400 words
Good+Bad: 818515 in 56400 words.
Tot Mem 131413 (kB)]
Data loading complete at Wed Jan 30 00:29:24 Pacific Standard Time 2002
m_bUseBadWords = 1
40 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30018   0.000   0.461  -1.000  13.3% 0.000500  3997  13832.25 ({   0.00 0   0.0%} {   0.00 167   0.6%} {   0.46 3830  12.8%} ) 0 2052   0.0
0 60021   0.461   0.446   0.033  13.1% 0.000500  7842  26774.10 ({   0.00 0   0.0%} {   0.00 356   0.6%} {   0.44 7486  12.5%} ) 0 4126   0.0
0 90021   0.446   0.439   0.015  12.9% 0.000500  11627  39560.08 ({   0.00 0   0.0%} {   0.00 534   0.6%} {   0.44 11093  12.3%} ) 0 6176   0.0
0 120023   0.439   0.436   0.008  12.8% 0.000500  15375  52322.45 ({   0.00 0   0.0%} {   0.00 713   0.6%} {   0.43 14662  12.2%} ) 0 8305   0.0
0 150025   0.436   0.436   0.000  12.8% 0.000500  19195  65390.44 ({   0.00 0   0.0%} {   0.00 881   0.6%} {   0.43 18314  12.2%} ) 0 10340   0.0
0 180025   0.436   0.436  -0.001  12.8% 0.000500  22997  78557.73 ({   0.00 0   0.0%} {   0.00 1062   0.6%} {   0.43 21935  12.2%} ) 0 12457   0.0
0 210030   0.436   0.439  -0.006  12.9% 0.000500  27019  92205.90 ({   0.00 0   0.0%} {   0.00 1263   0.6%} {   0.44 25756  12.3%} ) 0 14641   0.0
0 240041   0.439   0.442  -0.006  12.9% 0.000500  31044 106066.71 ({   0.00 0   0.0%} {   0.00 1433   0.6%} {   0.44 29611  12.3%} ) 0 16789   0.0
0 270067   0.442   0.442  -0.001  12.9% 0.000500  34869 119502.40 ({   0.00 0   0.0%} {   0.00 1579   0.6%} {   0.44 33290  12.3%} ) 0 18796   0.0
0 300067   0.442   0.441   0.004  12.9% 0.000500  38641 132265.16 ({   0.00 0   0.0%} {   0.00 1759   0.6%} {   0.44 36882  12.3%} ) 0 20858   0.0
0 330076   0.441   0.440   0.003  12.8% 0.000500  42318 145070.73 ({   0.00 0   0.0%} {   0.00 1964   0.6%} {   0.44 40354  12.2%} ) 0 22851   0.0
0 360087   0.440   0.440  -0.002  12.8% 0.000500  46255 158574.73 ({   0.00 0   0.0%} {   0.00 2152   0.6%} {   0.44 44103  12.2%} ) 0 24916   0.0
0 390091   0.440   0.440   0.001  12.8% 0.000500  50054 171646.96 ({   0.00 0   0.0%} {   0.00 2319   0.6%} {   0.44 47735  12.2%} ) 0 26914   0.0
0 420131   0.440   0.439   0.002  12.8% 0.000500  53859 184559.23 ({   0.00 0   0.0%} {   0.00 2512   0.6%} {   0.44 51347  12.2%} ) 0 29003   0.0
0 450133   0.439   0.439   0.002  12.8% 0.000500  57645 197437.12 ({   0.00 0   0.0%} {   0.00 2680   0.6%} {   0.44 54965  12.2%} ) 0 31063   0.0
0 480161   0.439   0.438   0.000  12.8% 0.000500  61461 210519.53 ({   0.00 0   0.0%} {   0.00 2877   0.6%} {   0.44 58584  12.2%} ) 0 33158   0.0
0 510161   0.438   0.438   0.001  12.8% 0.000500  65125 223355.84 ({   0.00 0   0.0%} {   0.00 3052   0.6%} {   0.44 62073  12.2%} ) 0 35257   0.0
0 540217   0.438   0.438  -0.000  12.8% 0.000500  69010 236562.99 ({   0.00 0   0.0%} {   0.00 3239   0.6%} {   0.44 65771  12.2%} ) 0 37377   0.0
0 570223   0.438   0.438   0.000  12.8% 0.000500  72795 249617.13 ({   0.00 0   0.0%} {   0.00 3412   0.6%} {   0.44 69383  12.2%} ) 0 39378   0.0
0 600227   0.438   0.438  -0.000  12.8% 0.000500  76659 262761.47 ({   0.00 0   0.0%} {   0.00 3590   0.6%} {   0.44 73069  12.2%} ) 0 41371   0.0
0 630278   0.438   0.437   0.002  12.7% 0.000500  80348 275318.15 ({   0.00 0   0.0%} {   0.00 3778   0.6%} {   0.43 76570  12.1%} ) 0 43378   0.0
0 660303   0.437   0.437  -0.000  12.8% 0.000500  84242 288521.94 ({   0.00 0   0.0%} {   0.00 3977   0.6%} {   0.43 80265  12.2%} ) 0 45520   0.0
0 690321   0.437   0.436   0.002  12.7% 0.000500  87927 300983.64 ({   0.00 0   0.0%} {   0.00 4158   0.6%} {   0.43 83769  12.1%} ) 0 47638   0.0
0 720331   0.436   0.437  -0.002  12.8% 0.000500  91858 314604.51 ({   0.00 0   0.0%} {   0.00 4336   0.6%} {   0.43 87522  12.2%} ) 0 49800   0.0
0 750385   0.437   0.437  -0.000  12.8% 0.000500  95761 327859.70 ({   0.00 0   0.0%} {   0.00 4506   0.6%} {   0.43 91255  12.2%} ) 0 51839   0.0
0 780406   0.437   0.437  -0.001  12.8% 0.000500  99631 341205.13 ({   0.00 0   0.0%} {   0.00 4686   0.6%} {   0.43 94945  12.2%} ) 0 53877   0.0
0 810407   0.437   0.437   0.000  12.8% 0.000500  103467 354213.73 ({   0.00 0   0.0%} {   0.00 4858   0.6%} {   0.43 98609  12.2%} ) 0 55773   0.0
0 816249   0.437   0.437  -0.000  12.8% 0.000500  104236 356836.07 ({   0.00 0   0.0%} {   0.00 4894   0.6%} {   0.43 99342  12.2%} ) 0 56177   0.0
Finished on Wed Jan 30 04:04:11 Pacific Standard Time 2002
NN_saveWeights save_40.wgt
Loading from c:tmpFile01.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile01.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 821506 in 56558 Words. Total 821506 in 56558 words
Good+Bad: 821506 in 56558 words.
Total 821506 in 56558 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 821506 in 56558 Words. Total 821506 in 56558 words
Good+Bad: 821506 in 56558 words.
Tot Mem 131893 (kB)]
Data loading complete at Wed Jan 30 04:05:24 Pacific Standard Time 2002
m_bUseBadWords = 1
41 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30001   0.000   0.433  -1.000  12.6% 0.000500  3788  13005.03 ({   0.00 0   0.0%} {   0.00 189   0.6%} {   0.43 3599  12.0%} ) 0 2062   0.0
0 60004   0.433   0.434  -0.002  12.7% 0.000500  7609  26066.35 ({   0.00 0   0.0%} {   0.00 381   0.6%} {   0.43 7228  12.0%} ) 0 4103   0.0
0 90008   0.434   0.432   0.005  12.6% 0.000500  11351  38919.78 ({   0.00 0   0.0%} {   0.00 573   0.6%} {   0.43 10778  12.0%} ) 0 6221   0.0
0 120049   0.432   0.436  -0.007  12.7% 0.000500  15297  52291.68 ({   0.00 0   0.0%} {   0.00 765   0.6%} {   0.43 14532  12.1%} ) 0 8264   0.0
0 150078   0.436   0.431   0.010  12.7% 0.000500  18988  64710.26 ({   0.00 0   0.0%} {   0.00 971   0.6%} {   0.43 18017  12.0%} ) 0 10348   0.0
0 180135   0.431   0.426   0.013  12.5% 0.000500  22574  76677.44 ({   0.00 0   0.0%} {   0.00 1162   0.6%} {   0.42 21412  11.9%} ) 0 12383   0.0
0 210167   0.426   0.426  -0.002  12.5% 0.000500  26318  89621.55 ({   0.00 0   0.0%} {   0.00 1331   0.6%} {   0.42 24987  11.9%} ) 0 14490   0.0
0 240194   0.426   0.426   0.002  12.5% 0.000500  30019 102233.88 ({   0.00 0   0.0%} {   0.00 1526   0.6%} {   0.42 28493  11.9%} ) 0 16536   0.0
0 270223   0.426   0.426   0.000  12.5% 0.000500  33720 115005.71 ({   0.00 0   0.0%} {   0.00 1722   0.6%} {   0.42 31998  11.8%} ) 0 18616   0.0
0 300240   0.426   0.425   0.002  12.5% 0.000500  37401 127516.73 ({   0.00 0   0.0%} {   0.00 1907   0.6%} {   0.42 35494  11.8%} ) 0 20712   0.0
0 330240   0.425   0.426  -0.004  12.5% 0.000500  41273 140765.86 ({   0.00 0   0.0%} {   0.00 2078   0.6%} {   0.42 39195  11.9%} ) 0 22905   0.0
0 360243   0.426   0.425   0.003  12.4% 0.000500  44834 153082.08 ({   0.00 0   0.0%} {   0.00 2240   0.6%} {   0.42 42594  11.8%} ) 0 24976   0.0
0 390275   0.425   0.425   0.000  12.4% 0.000500  48534 165828.77 ({   0.00 0   0.0%} {   0.00 2436   0.6%} {   0.42 46098  11.8%} ) 0 27070   0.0
0 420298   0.425   0.425  -0.001  12.5% 0.000500  52395 178826.70 ({   0.00 0   0.0%} {   0.00 2637   0.6%} {   0.42 49758  11.8%} ) 0 29157   0.0
0 450302   0.425   0.425   0.000  12.5% 0.000500  56158 191553.01 ({   0.00 0   0.0%} {   0.00 2838   0.6%} {   0.42 53320  11.8%} ) 0 31227   0.0
0 480340   0.425   0.425   0.002  12.4% 0.000500  59780 204011.30 ({   0.00 0   0.0%} {   0.00 3010   0.6%} {   0.42 56770  11.8%} ) 0 33292   0.0
0 510344   0.425   0.426  -0.003  12.5% 0.000500  63644 217369.11 ({   0.00 0   0.0%} {   0.00 3207   0.6%} {   0.42 60437  11.8%} ) 0 35365   0.0
0 540351   0.426   0.425   0.001  12.5% 0.000500  67362 229835.28 ({   0.00 0   0.0%} {   0.00 3369   0.6%} {   0.42 63993  11.8%} ) 0 37406   0.0
0 570386   0.425   0.425   0.000  12.5% 0.000500  71142 242516.83 ({   0.00 0   0.0%} {   0.00 3569   0.6%} {   0.42 67573  11.8%} ) 0 39462   0.0
0 600390   0.425   0.425  -0.000  12.5% 0.000500  74970 255295.66 ({   0.00 0   0.0%} {   0.00 3754   0.6%} {   0.42 71216  11.9%} ) 0 41554   0.0
0 630391   0.425   0.425  -0.000  12.5% 0.000500  78740 268105.79 ({   0.00 0   0.0%} {   0.00 3942   0.6%} {   0.42 74798  11.9%} ) 0 43606   0.0
0 660397   0.425   0.426  -0.001  12.5% 0.000500  82507 281048.24 ({   0.00 0   0.0%} {   0.00 4133   0.6%} {   0.42 78374  11.9%} ) 0 45603   0.0
0 690405   0.426   0.425   0.000  12.5% 0.000500  86182 293682.17 ({   0.00 0   0.0%} {   0.00 4288   0.6%} {   0.42 81894  11.9%} ) 0 47733   0.0
0 720407   0.425   0.425   0.000  12.5% 0.000500  89862 306347.78 ({   0.00 0   0.0%} {   0.00 4446   0.6%} {   0.42 85416  11.9%} ) 0 49784   0.0
0 750408   0.425   0.425   0.000  12.5% 0.000500  93555 318949.82 ({   0.00 0   0.0%} {   0.00 4622   0.6%} {   0.42 88933  11.9%} ) 0 51869   0.0
0 780423   0.425   0.425  -0.001  12.5% 0.000500  97420 332044.94 ({   0.00 0   0.0%} {   0.00 4814   0.6%} {   0.42 92606  11.9%} ) 0 53795   0.0
0 810436   0.425   0.426  -0.001  12.5% 0.000500  101223 345235.51 ({   0.00 0   0.0%} {   0.00 5010   0.6%} {   0.42 96213  11.9%} ) 0 55826   0.0
0 818424   0.426   0.426  -0.000  12.5% 0.000500  102222 348664.11 ({   0.00 0   0.0%} {   0.00 5064   0.6%} {   0.42 97158  11.9%} ) 0 56305   0.0
Finished on Wed Jan 30 07:40:49 Pacific Standard Time 2002
NN_saveWeights save_41.wgt
Loading from c:tmpFile02.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile02.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 821578 in 56480 Words. Total 821578 in 56480 words
Good+Bad: 821578 in 56480 words.
Total 821578 in 56480 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 821578 in 56480 Words. Total 821578 in 56480 words
Good+Bad: 821578 in 56480 words.
Tot Mem 131904 (kB)]
Data loading complete at Wed Jan 30 07:42:04 Pacific Standard Time 2002
m_bUseBadWords = 1
42 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30015   0.000   0.432  -1.000  12.8% 0.000500  3828  12968.89 ({   0.00 0   0.0%} {   0.00 180   0.6%} {   0.43 3648  12.2%} ) 0 2188   0.0
0 60060   0.432   0.432  -0.001  12.8% 0.000500  7709  25966.67 ({   0.00 0   0.0%} {   0.00 409   0.7%} {   0.43 7300  12.2%} ) 0 4191   0.0
0 90060   0.432   0.435  -0.006  12.9% 0.000500  11591  39175.04 ({   0.00 0   0.0%} {   0.00 607   0.7%} {   0.43 10984  12.2%} ) 0 6250   0.0
0 120060   0.435   0.430   0.012  12.7% 0.000500  15211  51592.94 ({   0.00 0   0.0%} {   0.00 788   0.7%} {   0.43 14423  12.0%} ) 0 8338   0.0
0 150061   0.430   0.431  -0.004  12.7% 0.000500  19037  64747.38 ({   0.00 0   0.0%} {   0.00 992   0.7%} {   0.43 18045  12.0%} ) 0 10402   0.0
0 180063   0.431   0.429   0.006  12.7% 0.000500  22829  77265.08 ({   0.00 0   0.0%} {   0.00 1198   0.7%} {   0.43 21631  12.0%} ) 0 12456   0.0
0 210065   0.429   0.432  -0.007  12.7% 0.000500  26743  90750.49 ({   0.00 0   0.0%} {   0.00 1396   0.7%} {   0.43 25347  12.1%} ) 0 14449   0.0
0 240066   0.432   0.433  -0.001  12.7% 0.000500  30607 103865.63 ({   0.00 0   0.0%} {   0.00 1570   0.7%} {   0.43 29037  12.1%} ) 0 16504   0.0
0 270123   0.433   0.431   0.003  12.7% 0.000500  34322 116514.26 ({   0.00 0   0.0%} {   0.00 1755   0.6%} {   0.43 32567  12.1%} ) 0 18606   0.0
0 300126   0.431   0.429   0.004  12.6% 0.000500  37925 128886.82 ({   0.00 0   0.0%} {   0.00 1938   0.6%} {   0.43 35987  12.0%} ) 0 20675   0.0
0 330147   0.429   0.430  -0.002  12.7% 0.000500  41781 142070.08 ({   0.00 0   0.0%} {   0.00 2111   0.6%} {   0.43 39670  12.0%} ) 0 22698   0.0
0 360150   0.430   0.431  -0.000  12.6% 0.000500  45520 155050.21 ({   0.00 0   0.0%} {   0.00 2260   0.6%} {   0.43 43260  12.0%} ) 0 24699   0.0
0 390150   0.431   0.430   0.001  12.6% 0.000500  49263 167819.77 ({   0.00 0   0.0%} {   0.00 2439   0.6%} {   0.43 46824  12.0%} ) 0 26824   0.0
0 420150   0.430   0.429   0.002  12.6% 0.000500  52962 180311.30 ({   0.00 0   0.0%} {   0.00 2621   0.6%} {   0.43 50341  12.0%} ) 0 28875   0.0
0 450166   0.429   0.428   0.003  12.6% 0.000500  56603 192606.42 ({   0.00 0   0.0%} {   0.00 2811   0.6%} {   0.43 53792  11.9%} ) 0 30977   0.0
0 480173   0.428   0.429  -0.002  12.6% 0.000500  60489 205940.18 ({   0.00 0   0.0%} {   0.00 2984   0.6%} {   0.43 57505  12.0%} ) 0 33048   0.0
0 510180   0.429   0.429  -0.000  12.6% 0.000500  64301 218903.44 ({   0.00 0   0.0%} {   0.00 3150   0.6%} {   0.43 61151  12.0%} ) 0 35140   0.0
0 540180   0.429   0.429  -0.000  12.6% 0.000500  68154 231845.10 ({   0.00 0   0.0%} {   0.00 3359   0.6%} {   0.43 64795  12.0%} ) 0 37157   0.0
0 570192   0.429   0.431  -0.004  12.7% 0.000500  72144 245767.00 ({   0.00 0   0.0%} {   0.00 3569   0.6%} {   0.43 68575  12.0%} ) 0 39234   0.0
0 600198   0.431   0.431   0.001  12.6% 0.000500  75823 258424.69 ({   0.00 0   0.0%} {   0.00 3727   0.6%} {   0.43 72096  12.0%} ) 0 41291   0.0
0 630207   0.431   0.430   0.001  12.6% 0.000500  79588 271004.59 ({   0.00 0   0.0%} {   0.00 3898   0.6%} {   0.43 75690  12.0%} ) 0 43350   0.0
0 660208   0.430   0.429   0.001  12.6% 0.000500  83369 283554.07 ({   0.00 0   0.0%} {   0.00 4100   0.6%} {   0.43 79269  12.0%} ) 0 45425   0.0
0 690212   0.429   0.430  -0.001  12.6% 0.000500  87166 296662.22 ({   0.00 0   0.0%} {   0.00 4271   0.6%} {   0.43 82895  12.0%} ) 0 47469   0.0
0 720214   0.430   0.431  -0.002  12.7% 0.000500  91158 310262.78 ({   0.00 0   0.0%} {   0.00 4490   0.6%} {   0.43 86668  12.0%} ) 0 49469   0.0
0 750262   0.431   0.431  -0.000  12.7% 0.000500  95002 323295.32 ({   0.00 0   0.0%} {   0.00 4701   0.6%} {   0.43 90301  12.0%} ) 0 51525   0.0
0 780271   0.431   0.432  -0.002  12.7% 0.000500  98828 336878.98 ({   0.00 0   0.0%} {   0.00 4866   0.6%} {   0.43 93962  12.0%} ) 0 53520   0.0
0 810285   0.432   0.431   0.001  12.6% 0.000500  102484 349503.56 ({   0.00 0   0.0%} {   0.00 5054   0.6%} {   0.43 97430  12.0%} ) 0 55624   0.0
0 819373   0.431   0.432  -0.001  12.7% 0.000500  103704 353827.59 ({   0.00 0   0.0%} {   0.00 5106   0.6%} {   0.43 98598  12.0%} ) 0 56249   0.0
Finished on Wed Jan 30 11:17:46 Pacific Standard Time 2002
NN_saveWeights save_42.wgt
Loading from c:tmpFile03.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile03.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 823606 in 56478 Words. Total 823606 in 56478 words
Good+Bad: 823606 in 56478 words.
Total 823606 in 56478 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 823606 in 56478 Words. Total 823606 in 56478 words
Good+Bad: 823606 in 56478 words.
Tot Mem 132228 (kB)]
Data loading complete at Wed Jan 30 11:19:01 Pacific Standard Time 2002
m_bUseBadWords = 1
43 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30012   0.000   0.434  -1.000  12.4% 0.000500  3729  13014.85 ({   0.00 0   0.0%} {   0.00 173   0.6%} {   0.43 3556  11.8%} ) 0 2019   0.0
0 60016   0.434   0.425   0.020  12.2% 0.000500  7313  25526.79 ({   0.00 0   0.0%} {   0.00 343   0.6%} {   0.42 6970  11.6%} ) 0 4143   0.0
0 90057   0.425   0.422   0.009  12.2% 0.000500  10961  37980.91 ({   0.00 0   0.0%} {   0.00 496   0.6%} {   0.42 10465  11.6%} ) 0 6251   0.0
0 120105   0.422   0.425  -0.008  12.2% 0.000500  14698  51057.81 ({   0.00 0   0.0%} {   0.00 693   0.6%} {   0.42 14005  11.7%} ) 0 8265   0.0
0 150132   0.425   0.425   0.000  12.2% 0.000500  18374  63821.70 ({   0.00 0   0.0%} {   0.00 852   0.6%} {   0.42 17522  11.7%} ) 0 10304   0.0
0 180132   0.425   0.425   0.001  12.2% 0.000500  22066  76486.51 ({   0.00 0   0.0%} {   0.00 1036   0.6%} {   0.42 21030  11.7%} ) 0 12409   0.0
0 210137   0.425   0.422   0.005  12.2% 0.000500  25597  88766.65 ({   0.00 0   0.0%} {   0.00 1228   0.6%} {   0.42 24369  11.6%} ) 0 14445   0.0
0 240157   0.422   0.423  -0.002  12.2% 0.000500  29400 101694.68 ({   0.00 0   0.0%} {   0.00 1436   0.6%} {   0.42 27964  11.6%} ) 0 16517   0.0
0 270162   0.423   0.425  -0.004  12.3% 0.000500  33231 114828.14 ({   0.00 0   0.0%} {   0.00 1628   0.6%} {   0.42 31603  11.7%} ) 0 18594   0.0
0 300177   0.425   0.424   0.002  12.3% 0.000500  36871 127314.62 ({   0.00 0   0.0%} {   0.00 1779   0.6%} {   0.42 35092  11.7%} ) 0 20644   0.0
0 330179   0.424   0.424  -0.001  12.3% 0.000500  40579 140140.53 ({   0.00 0   0.0%} {   0.00 1945   0.6%} {   0.42 38634  11.7%} ) 0 22744   0.0
0 360208   0.424   0.424   0.001  12.3% 0.000500  44243 152711.03 ({   0.00 0   0.0%} {   0.00 2129   0.6%} {   0.42 42114  11.7%} ) 0 24743   0.0
0 390241   0.424   0.424  -0.000  12.3% 0.000500  48015 165467.38 ({   0.00 0   0.0%} {   0.00 2294   0.6%} {   0.42 45721  11.7%} ) 0 26801   0.0
0 420256   0.424   0.425  -0.002  12.3% 0.000500  51877 178466.81 ({   0.00 0   0.0%} {   0.00 2473   0.6%} {   0.42 49404  11.8%} ) 0 28867   0.0
0 450263   0.425   0.425  -0.001  12.4% 0.000500  55733 191442.24 ({   0.00 0   0.0%} {   0.00 2638   0.6%} {   0.42 53095  11.8%} ) 0 30931   0.0
0 480270   0.425   0.426  -0.002  12.4% 0.000500  59672 204663.97 ({   0.00 0   0.0%} {   0.00 2827   0.6%} {   0.42 56845  11.8%} ) 0 33029   0.0
0 510296   0.426   0.426  -0.001  12.4% 0.000500  63363 217592.57 ({   0.00 0   0.0%} {   0.00 3012   0.6%} {   0.42 60351  11.8%} ) 0 35067   0.0
0 540331   0.426   0.427  -0.001  12.4% 0.000500  67198 230573.20 ({   0.00 0   0.0%} {   0.00 3202   0.6%} {   0.42 63996  11.8%} ) 0 37117   0.0
0 570335   0.427   0.427  -0.002  12.4% 0.000500  71006 243801.11 ({   0.00 0   0.0%} {   0.00 3407   0.6%} {   0.43 67599  11.9%} ) 0 39191   0.0
0 600337   0.427   0.427  -0.000  12.5% 0.000500  74780 256642.21 ({   0.00 0   0.0%} {   0.00 3598   0.6%} {   0.43 71182  11.9%} ) 0 41177   0.0
0 630339   0.427   0.428  -0.001  12.5% 0.000500  78532 269667.29 ({   0.00 0   0.0%} {   0.00 3753   0.6%} {   0.43 74779  11.9%} ) 0 43233   0.0
0 660339   0.428   0.428  -0.001  12.5% 0.000500  82298 282714.87 ({   0.00 0   0.0%} {   0.00 3922   0.6%} {   0.43 78376  11.9%} ) 0 45328   0.0
0 690344   0.428   0.427   0.002  12.5% 0.000500  85975 295114.46 ({   0.00 0   0.0%} {   0.00 4101   0.6%} {   0.43 81874  11.9%} ) 0 47330   0.0
0 720400   0.427   0.427   0.000  12.4% 0.000500  89686 307877.18 ({   0.00 0   0.0%} {   0.00 4283   0.6%} {   0.43 85403  11.9%} ) 0 49365   0.0
0 750446   0.427   0.428  -0.001  12.5% 0.000500  93461 320989.44 ({   0.00 0   0.0%} {   0.00 4448   0.6%} {   0.43 89013  11.9%} ) 0 51373   0.0
0 780450   0.428   0.429  -0.003  12.5% 0.000500  97562 334802.18 ({   0.00 0   0.0%} {   0.00 4656   0.6%} {   0.43 92906  11.9%} ) 0 53479   0.0
0 810486   0.429   0.429   0.000  12.5% 0.000500  101327 347651.44 ({   0.00 0   0.0%} {   0.00 4828   0.6%} {   0.43 96499  11.9%} ) 0 55559   0.0
0 820771   0.429   0.429  -0.001  12.5% 0.000500  102626 352264.19 ({   0.00 0   0.0%} {   0.00 4890   0.6%} {   0.43 97736  11.9%} ) 0 56243   0.0
Finished on Wed Jan 30 14:55:07 Pacific Standard Time 2002
NN_saveWeights save_43.wgt
Loading from c:tmpFile04.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile04.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 829618 in 56313 Words. Total 829618 in 56313 words
Good+Bad: 829618 in 56313 words.
Total 829618 in 56313 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 829618 in 56313 Words. Total 829618 in 56313 words
Good+Bad: 829618 in 56313 words.
Tot Mem 133189 (kB)]
Data loading complete at Wed Jan 30 14:56:21 Pacific Standard Time 2002
m_bUseBadWords = 1
44 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30020   0.000   0.425  -1.000  12.2% 0.000500  3658  12760.27 ({   0.00 0   0.0%} {   0.00 171   0.6%} {   0.42 3487  11.6%} ) 0 2143   0.0
0 60021   0.425   0.424   0.001  12.4% 0.000500  7443  25477.34 ({   0.00 0   0.0%} {   0.00 366   0.6%} {   0.42 7077  11.8%} ) 0 4231   0.0
0 90022   0.424   0.422   0.005  12.3% 0.000500  11073  38021.24 ({   0.00 0   0.0%} {   0.00 558   0.6%} {   0.42 10515  11.7%} ) 0 6300   0.0
0 120030   0.422   0.421   0.004  12.3% 0.000500  14725  50501.29 ({   0.00 0   0.0%} {   0.00 730   0.6%} {   0.42 13995  11.7%} ) 0 8465   0.0
0 150039   0.421   0.423  -0.004  12.3% 0.000500  18503  63394.92 ({   0.00 0   0.0%} {   0.00 883   0.6%} {   0.42 17620  11.7%} ) 0 10496   0.0
0 180042   0.423   0.422   0.002  12.3% 0.000500  22199  75945.18 ({   0.00 0   0.0%} {   0.00 1043   0.6%} {   0.42 21156  11.8%} ) 0 12503   0.0
0 210044   0.422   0.422  -0.000  12.3% 0.000500  25865  88614.23 ({   0.00 0   0.0%} {   0.00 1232   0.6%} {   0.42 24633  11.7%} ) 0 14554   0.0
0 240078   0.422   0.421   0.002  12.3% 0.000500  29553 101068.80 ({   0.00 0   0.0%} {   0.00 1417   0.6%} {   0.42 28136  11.7%} ) 0 16615   0.0
0 270082   0.421   0.422  -0.002  12.3% 0.000500  33248 113892.07 ({   0.00 0   0.0%} {   0.00 1596   0.6%} {   0.42 31652  11.7%} ) 0 18644   0.0
0 300084   0.422   0.421   0.002  12.3% 0.000500  36839 126307.59 ({   0.00 0   0.0%} {   0.00 1754   0.6%} {   0.42 35085  11.7%} ) 0 20646   0.0
0 330084   0.421   0.422  -0.002  12.3% 0.000500  40582 139202.38 ({   0.00 0   0.0%} {   0.00 1940   0.6%} {   0.42 38642  11.7%} ) 0 22635   0.0
0 360090   0.422   0.424  -0.005  12.3% 0.000500  44437 152561.71 ({   0.00 0   0.0%} {   0.00 2124   0.6%} {   0.42 42313  11.8%} ) 0 24595   0.0
0 390094   0.424   0.422   0.003  12.3% 0.000500  48029 164787.66 ({   0.00 0   0.0%} {   0.00 2332   0.6%} {   0.42 45697  11.7%} ) 0 26634   0.0
0 420096   0.422   0.424  -0.003  12.3% 0.000500  51833 177962.22 ({   0.00 0   0.0%} {   0.00 2528   0.6%} {   0.42 49305  11.7%} ) 0 28690   0.0
0 450097   0.424   0.424   0.000  12.3% 0.000500  55535 190658.41 ({   0.00 0   0.0%} {   0.00 2713   0.6%} {   0.42 52822  11.7%} ) 0 30709   0.0
0 480110   0.424   0.424  -0.000  12.3% 0.000500  59267 203465.70 ({   0.00 0   0.0%} {   0.00 2884   0.6%} {   0.42 56383  11.7%} ) 0 32791   0.0
0 510162   0.424   0.423   0.001  12.3% 0.000500  62927 215957.84 ({   0.00 0   0.0%} {   0.00 3074   0.6%} {   0.42 59853  11.7%} ) 0 34882   0.0
0 540190   0.423   0.424  -0.002  12.4% 0.000500  66800 229060.85 ({   0.00 0   0.0%} {   0.00 3264   0.6%} {   0.42 63536  11.8%} ) 0 36862   0.0
0 570194   0.424   0.424   0.000  12.4% 0.000500  70464 241735.79 ({   0.00 0   0.0%} {   0.00 3431   0.6%} {   0.42 67033  11.8%} ) 0 38833   0.0
0 600239   0.424   0.425  -0.002  12.4% 0.000500  74316 254932.85 ({   0.00 0   0.0%} {   0.00 3607   0.6%} {   0.42 70709  11.8%} ) 0 40910   0.0
0 630247   0.425   0.425   0.000  12.4% 0.000500  77950 267671.78 ({   0.00 0   0.0%} {   0.00 3790   0.6%} {   0.42 74160  11.8%} ) 0 42921   0.0
0 660305   0.425   0.425   0.000  12.4% 0.000500  81625 280354.42 ({   0.00 0   0.0%} {   0.00 3966   0.6%} {   0.42 77659  11.8%} ) 0 44974   0.0
0 690323   0.425   0.425  -0.000  12.4% 0.000500  85374 293143.81 ({   0.00 0   0.0%} {   0.00 4136   0.6%} {   0.42 81238  11.8%} ) 0 47039   0.0
0 720324   0.425   0.425  -0.001  12.4% 0.000500  89188 306256.00 ({   0.00 0   0.0%} {   0.00 4366   0.6%} {   0.42 84822  11.8%} ) 0 49043   0.0
0 750330   0.425   0.425   0.001  12.4% 0.000500  92806 318678.62 ({   0.00 0   0.0%} {   0.00 4543   0.6%} {   0.42 88263  11.8%} ) 0 51028   0.0
0 780346   0.425   0.424   0.001  12.4% 0.000500  96489 331243.65 ({   0.00 0   0.0%} {   0.00 4737   0.6%} {   0.42 91752  11.8%} ) 0 52969   0.0
0 810351   0.424   0.425  -0.001  12.4% 0.000500  100199 344264.87 ({   0.00 0   0.0%} {   0.00 4927   0.6%} {   0.42 95272  11.8%} ) 0 54929   0.0
0 826998   0.425   0.425  -0.001  12.4% 0.000500  102386 351800.07 ({   0.00 0   0.0%} {   0.00 5037   0.6%} {   0.42 97349  11.8%} ) 0 56100   0.0
Finished on Wed Jan 30 18:34:02 Pacific Standard Time 2002
NN_saveWeights save_44.wgt
Loading from c:tmpFile05.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile05.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 824053 in 56431 Words. Total 824053 in 56431 words
Good+Bad: 824053 in 56431 words.
Total 824053 in 56431 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 824053 in 56431 Words. Total 824053 in 56431 words
Good+Bad: 824053 in 56431 words.
Tot Mem 132299 (kB)]
Data loading complete at Wed Jan 30 18:35:18 Pacific Standard Time 2002
m_bUseBadWords = 1
45 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30019   0.000   0.411  -1.000  11.9% 0.000500  3560  12344.98 ({   0.00 0   0.0%} {   0.00 177   0.6%} {   0.41 3383  11.3%} ) 0 2133   0.0
0 60023   0.411   0.414  -0.007  12.1% 0.000500  7234  24849.93 ({   0.00 0   0.0%} {   0.00 347   0.6%} {   0.41 6887  11.5%} ) 0 4317   0.0
0 90036   0.414   0.423  -0.020  12.2% 0.000500  11028  38049.82 ({   0.00 0   0.0%} {   0.00 506   0.6%} {   0.42 10522  11.7%} ) 0 6448   0.0
0 120042   0.423   0.425  -0.006  12.3% 0.000500  14811  51028.06 ({   0.00 0   0.0%} {   0.00 691   0.6%} {   0.42 14120  11.8%} ) 0 8501   0.0
0 150052   0.425   0.424   0.002  12.3% 0.000500  18387  63659.46 ({   0.00 0   0.0%} {   0.00 832   0.6%} {   0.42 17555  11.7%} ) 0 10538   0.0
0 180055   0.424   0.420   0.011  12.2% 0.000500  21923  75591.91 ({   0.00 0   0.0%} {   0.00 1022   0.6%} {   0.42 20901  11.6%} ) 0 12641   0.0
0 210080   0.420   0.419   0.003  12.2% 0.000500  25534  87923.90 ({   0.00 0   0.0%} {   0.00 1192   0.6%} {   0.42 24342  11.6%} ) 0 14679   0.0
0 240088   0.419   0.420  -0.004  12.2% 0.000500  29309 100895.06 ({   0.00 0   0.0%} {   0.00 1392   0.6%} {   0.42 27917  11.6%} ) 0 16781   0.0
0 270088   0.420   0.420  -0.000  12.2% 0.000500  33055 113552.37 ({   0.00 0   0.0%} {   0.00 1564   0.6%} {   0.42 31491  11.7%} ) 0 18835   0.0
0 300089   0.420   0.424  -0.007  12.4% 0.000500  37072 127118.35 ({   0.00 0   0.0%} {   0.00 1796   0.6%} {   0.42 35276  11.8%} ) 0 20834   0.0
0 330107   0.424   0.422   0.003  12.3% 0.000500  40696 139382.67 ({   0.00 0   0.0%} {   0.00 1996   0.6%} {   0.42 38700  11.7%} ) 0 22905   0.0
0 360137   0.422   0.421   0.002  12.3% 0.000500  44375 151739.92 ({   0.00 0   0.0%} {   0.00 2183   0.6%} {   0.42 42192  11.7%} ) 0 24992   0.0
0 390139   0.421   0.420   0.002  12.3% 0.000500  47910 163999.59 ({   0.00 0   0.0%} {   0.00 2356   0.6%} {   0.42 45554  11.7%} ) 0 26998   0.0
0 420151   0.420   0.421  -0.002  12.3% 0.000500  51677 176928.39 ({   0.00 0   0.0%} {   0.00 2550   0.6%} {   0.42 49127  11.7%} ) 0 29126   0.0
0 450176   0.421   0.423  -0.005  12.4% 0.000500  55668 190594.50 ({   0.00 0   0.0%} {   0.00 2759   0.6%} {   0.42 52909  11.8%} ) 0 31168   0.0
0 480176   0.423   0.422   0.003  12.3% 0.000500  59268 202715.10 ({   0.00 0   0.0%} {   0.00 2925   0.6%} {   0.42 56343  11.7%} ) 0 33174   0.0
0 510207   0.422   0.422   0.000  12.3% 0.000500  62994 215347.76 ({   0.00 0   0.0%} {   0.00 3130   0.6%} {   0.42 59864  11.7%} ) 0 35199   0.0
0 540216   0.422   0.423  -0.002  12.4% 0.000500  66865 228359.69 ({   0.00 0   0.0%} {   0.00 3312   0.6%} {   0.42 63553  11.8%} ) 0 37209   0.0
0 570256   0.423   0.423   0.000  12.4% 0.000500  70535 241018.79 ({   0.00 0   0.0%} {   0.00 3479   0.6%} {   0.42 67056  11.8%} ) 0 39323   0.0
0 600258   0.423   0.422   0.002  12.4% 0.000500  74158 253207.22 ({   0.00 0   0.0%} {   0.00 3656   0.6%} {   0.42 70502  11.7%} ) 0 41319   0.0
0 630260   0.422   0.422  -0.002  12.4% 0.000500  77947 266283.32 ({   0.00 0   0.0%} {   0.00 3894   0.6%} {   0.42 74053  11.7%} ) 0 43406   0.0
0 660264   0.422   0.423  -0.001  12.4% 0.000500  81681 279137.39 ({   0.00 0   0.0%} {   0.00 4074   0.6%} {   0.42 77607  11.8%} ) 0 45472   0.0
0 690271   0.423   0.422   0.002  12.4% 0.000500  85314 291299.48 ({   0.00 0   0.0%} {   0.00 4284   0.6%} {   0.42 81030  11.7%} ) 0 47530   0.0
0 720271   0.422   0.422   0.001  12.3% 0.000500  88937 303715.27 ({   0.00 0   0.0%} {   0.00 4445   0.6%} {   0.42 84492  11.7%} ) 0 49505   0.0
0 750275   0.422   0.421   0.001  12.3% 0.000500  92637 316121.50 ({   0.00 0   0.0%} {   0.00 4662   0.6%} {   0.42 87975  11.7%} ) 0 51455   0.0
0 780297   0.421   0.421   0.001  12.3% 0.000500  96152 328563.36 ({   0.00 0   0.0%} {   0.00 4819   0.6%} {   0.42 91333  11.7%} ) 0 53481   0.0
0 810302   0.421   0.421  -0.001  12.3% 0.000500  99887 341409.94 ({   0.00 0   0.0%} {   0.00 4987   0.6%} {   0.42 94900  11.7%} ) 0 55488   0.0
0 821070   0.421   0.421   0.000  12.3% 0.000500  101173 345793.14 ({   0.00 0   0.0%} {   0.00 5068   0.6%} {   0.42 96105  11.7%} ) 0 56179   0.0
Finished on Wed Jan 30 22:11:30 Pacific Standard Time 2002
NN_saveWeights save_45.wgt
Loading from c:tmpFile06.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile06.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 817432 in 56145 Words. Total 817432 in 56145 words
Good+Bad: 817432 in 56145 words.
Total 817432 in 56145 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 817432 in 56145 Words. Total 817432 in 56145 words
Good+Bad: 817432 in 56145 words.
Tot Mem 131238 (kB)]
Data loading complete at Wed Jan 30 22:12:45 Pacific Standard Time 2002
m_bUseBadWords = 1
46 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30008   0.000   0.412  -1.000  12.2% 0.000500  3670  12365.93 ({   0.00 0   0.0%} {   0.00 188   0.6%} {   0.41 3482  11.6%} ) 0 2107   0.0
0 60028   0.412   0.402   0.024  12.0% 0.000500  7216  24146.36 ({   0.00 0   0.0%} {   0.00 341   0.6%} {   0.40 6875  11.5%} ) 0 4234   0.0
0 90028   0.402   0.412  -0.023  12.2% 0.000500  10943  37078.89 ({   0.00 0   0.0%} {   0.00 489   0.5%} {   0.41 10454  11.6%} ) 0 6378   0.0
0 120042   0.412   0.416  -0.010  12.3% 0.000500  14717  49945.11 ({   0.00 0   0.0%} {   0.00 674   0.6%} {   0.41 14043  11.7%} ) 0 8489   0.0
0 150046   0.416   0.424  -0.019  12.5% 0.000500  18684  63606.36 ({   0.00 0   0.0%} {   0.00 871   0.6%} {   0.42 17813  11.9%} ) 0 10592   0.0
0 180086   0.424   0.425  -0.002  12.5% 0.000500  22455  76494.39 ({   0.00 0   0.0%} {   0.00 1068   0.6%} {   0.42 21387  11.9%} ) 0 12711   0.0
0 210098   0.425   0.422   0.006  12.4% 0.000500  25985  88698.14 ({   0.00 0   0.0%} {   0.00 1226   0.6%} {   0.42 24759  11.8%} ) 0 14692   0.0
0 240099   0.422   0.423  -0.001  12.4% 0.000500  29790 101491.45 ({   0.00 0   0.0%} {   0.00 1438   0.6%} {   0.42 28352  11.8%} ) 0 16721   0.0
0 270153   0.423   0.423  -0.002  12.4% 0.000500  33567 114372.47 ({   0.00 0   0.0%} {   0.00 1611   0.6%} {   0.42 31956  11.8%} ) 0 18829   0.0
0 300161   0.423   0.424  -0.003  12.4% 0.000500  37190 127395.21 ({   0.00 0   0.0%} {   0.00 1763   0.6%} {   0.42 35427  11.8%} ) 0 20858   0.0
0 330165   0.424   0.422   0.005  12.3% 0.000500  40720 139409.32 ({   0.00 0   0.0%} {   0.00 1954   0.6%} {   0.42 38766  11.7%} ) 0 22912   0.0
0 360169   0.422   0.421   0.003  12.3% 0.000500  44260 151555.12 ({   0.00 0   0.0%} {   0.00 2135   0.6%} {   0.42 42125  11.7%} ) 0 24983   0.0
0 390210   0.421   0.420   0.002  12.3% 0.000500  47903 163813.58 ({   0.00 0   0.0%} {   0.00 2315   0.6%} {   0.42 45588  11.7%} ) 0 27099   0.0
0 420225   0.420   0.421  -0.002  12.3% 0.000500  51652 176742.48 ({   0.00 0   0.0%} {   0.00 2487   0.6%} {   0.42 49165  11.7%} ) 0 29226   0.0
0 450266   0.421   0.421  -0.001  12.3% 0.000500  55395 189641.03 ({   0.00 0   0.0%} {   0.00 2640   0.6%} {   0.42 52755  11.7%} ) 0 31324   0.0
0 480275   0.421   0.423  -0.004  12.4% 0.000500  59335 203037.36 ({   0.00 0   0.0%} {   0.00 2835   0.6%} {   0.42 56500  11.8%} ) 0 33394   0.0
0 510342   0.423   0.423  -0.002  12.4% 0.000500  63093 216093.25 ({   0.00 0   0.0%} {   0.00 2984   0.6%} {   0.42 60109  11.8%} ) 0 35426   0.0
0 540351   0.423   0.424  -0.002  12.4% 0.000500  66884 229238.78 ({   0.00 0   0.0%} {   0.00 3177   0.6%} {   0.42 63707  11.8%} ) 0 37510   0.0
0 570352   0.424   0.424   0.000  12.4% 0.000500  70528 241931.20 ({   0.00 0   0.0%} {   0.00 3319   0.6%} {   0.42 67209  11.8%} ) 0 39608   0.0
0 600353   0.424   0.423   0.003  12.3% 0.000500  74056 253906.85 ({   0.00 0   0.0%} {   0.00 3487   0.6%} {   0.42 70569  11.8%} ) 0 41673   0.0
0 630365   0.423   0.423   0.000  12.3% 0.000500  77785 266594.05 ({   0.00 0   0.0%} {   0.00 3687   0.6%} {   0.42 74098  11.8%} ) 0 43631   0.0
0 660371   0.423   0.423   0.000  12.3% 0.000500  81484 279165.03 ({   0.00 0   0.0%} {   0.00 3840   0.6%} {   0.42 77644  11.8%} ) 0 45699   0.0
0 690409   0.423   0.422   0.002  12.3% 0.000500  85188 291410.16 ({   0.00 0   0.0%} {   0.00 4050   0.6%} {   0.42 81138  11.8%} ) 0 47714   0.0
0 720410   0.422   0.422  -0.001  12.4% 0.000500  88975 304357.60 ({   0.00 0   0.0%} {   0.00 4243   0.6%} {   0.42 84732  11.8%} ) 0 49672   0.0
0 750431   0.422   0.422   0.000  12.3% 0.000500  92663 317039.01 ({   0.00 0   0.0%} {   0.00 4396   0.6%} {   0.42 88267  11.8%} ) 0 51585   0.0
0 780446   0.422   0.422   0.001  12.3% 0.000500  96258 329287.21 ({   0.00 0   0.0%} {   0.00 4592   0.6%} {   0.42 91666  11.7%} ) 0 53578   0.0
0 810466   0.422   0.423  -0.002  12.3% 0.000500  100089 342648.88 ({   0.00 0   0.0%} {   0.00 4771   0.6%} {   0.42 95318  11.8%} ) 0 55658   0.0
0 814842   0.423   0.423  -0.001  12.4% 0.000500  100659 344937.33 ({   0.00 0   0.0%} {   0.00 4780   0.6%} {   0.42 95879  11.8%} ) 0 55900   0.0
Finished on Thu Jan 31 01:47:16 Pacific Standard Time 2002
NN_saveWeights save_46.wgt
Loading from c:tmpFile07.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile07.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 820218 in 56402 Words. Total 820218 in 56402 words
Good+Bad: 820218 in 56402 words.
Total 820218 in 56402 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 820218 in 56402 Words. Total 820218 in 56402 words
Good+Bad: 820218 in 56402 words.
Tot Mem 131686 (kB)]
Data loading complete at Thu Jan 31 01:48:31 Pacific Standard Time 2002
m_bUseBadWords = 1
47 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30031   0.000   0.440  -1.000  12.5% 0.000500  3742  13228.08 ({   0.00 0   0.0%} {   0.00 192   0.6%} {   0.44 3550  11.8%} ) 0 2131   0.0
0 60034   0.440   0.431   0.022  12.4% 0.000500  7435  25877.91 ({   0.00 0   0.0%} {   0.00 371   0.6%} {   0.43 7064  11.8%} ) 0 4329   0.0
0 90085   0.431   0.427   0.009  12.3% 0.000500  11105  38493.19 ({   0.00 0   0.0%} {   0.00 562   0.6%} {   0.42 10543  11.7%} ) 0 6500   0.0
0 120088   0.427   0.428  -0.002  12.3% 0.000500  14819  51424.93 ({   0.00 0   0.0%} {   0.00 708   0.6%} {   0.43 14111  11.8%} ) 0 8553   0.0
0 150108   0.428   0.428   0.001  12.4% 0.000500  18548  64235.78 ({   0.00 0   0.0%} {   0.00 860   0.6%} {   0.43 17688  11.8%} ) 0 10611   0.0
0 180128   0.428   0.429  -0.003  12.5% 0.000500  22448  77322.19 ({   0.00 0   0.0%} {   0.00 1052   0.6%} {   0.43 21396  11.9%} ) 0 12727   0.0
0 210129   0.429   0.428   0.004  12.5% 0.000500  26178  89878.14 ({   0.00 0   0.0%} {   0.00 1211   0.6%} {   0.43 24967  11.9%} ) 0 14849   0.0
0 240135   0.428   0.429  -0.004  12.5% 0.000500  30043 103100.10 ({   0.00 0   0.0%} {   0.00 1391   0.6%} {   0.43 28652  11.9%} ) 0 16888   0.0
0 270139   0.429   0.429   0.001  12.5% 0.000500  33738 115893.01 ({   0.00 0   0.0%} {   0.00 1549   0.6%} {   0.43 32189  11.9%} ) 0 18956   0.0
0 300140   0.429   0.429   0.001  12.5% 0.000500  37430 128628.31 ({   0.00 0   0.0%} {   0.00 1719   0.6%} {   0.43 35711  11.9%} ) 0 21031   0.0
0 330151   0.429   0.428   0.001  12.5% 0.000500  41210 141361.19 ({   0.00 0   0.0%} {   0.00 1964   0.6%} {   0.43 39246  11.9%} ) 0 23087   0.0
0 360205   0.428   0.430  -0.003  12.5% 0.000500  45033 154737.87 ({   0.00 0   0.0%} {   0.00 2157   0.6%} {   0.43 42876  11.9%} ) 0 25143   0.0
0 390231   0.430   0.429   0.002  12.5% 0.000500  48727 167224.94 ({   0.00 0   0.0%} {   0.00 2317   0.6%} {   0.43 46410  11.9%} ) 0 27208   0.0
0 420252   0.429   0.427   0.004  12.4% 0.000500  52283 179285.26 ({   0.00 0   0.0%} {   0.00 2487   0.6%} {   0.42 49796  11.8%} ) 0 29259   0.0
0 450254   0.427   0.426   0.000  12.5% 0.000500  56062 191993.02 ({   0.00 0   0.0%} {   0.00 2696   0.6%} {   0.42 53366  11.9%} ) 0 31326   0.0
0 480256   0.426   0.427  -0.002  12.5% 0.000500  59926 205230.20 ({   0.00 0   0.0%} {   0.00 2876   0.6%} {   0.43 57050  11.9%} ) 0 33311   0.0
0 510260   0.427   0.427   0.000  12.5% 0.000500  63681 217998.72 ({   0.00 0   0.0%} {   0.00 3060   0.6%} {   0.42 60621  11.9%} ) 0 35430   0.0
0 540278   0.427   0.427   0.001  12.5% 0.000500  67325 230533.80 ({   0.00 0   0.0%} {   0.00 3241   0.6%} {   0.42 64084  11.9%} ) 0 37413   0.0
0 570318   0.427   0.427  -0.000  12.5% 0.000500  71018 243439.93 ({   0.00 0   0.0%} {   0.00 3428   0.6%} {   0.42 67590  11.9%} ) 0 39537   0.0
0 600323   0.427   0.426   0.001  12.4% 0.000500  74678 255970.04 ({   0.00 0   0.0%} {   0.00 3578   0.6%} {   0.42 71100  11.8%} ) 0 41547   0.0
0 630359   0.426   0.427  -0.002  12.5% 0.000500  78565 269186.81 ({   0.00 0   0.0%} {   0.00 3757   0.6%} {   0.42 74808  11.9%} ) 0 43594   0.0
0 660370   0.427   0.426   0.003  12.4% 0.000500  82142 281247.78 ({   0.00 0   0.0%} {   0.00 3948   0.6%} {   0.42 78194  11.8%} ) 0 45618   0.0
0 690377   0.426   0.426   0.000  12.4% 0.000500  85778 293881.37 ({   0.00 0   0.0%} {   0.00 4119   0.6%} {   0.42 81659  11.8%} ) 0 47623   0.0
0 720386   0.426   0.426   0.000  12.4% 0.000500  89503 306586.50 ({   0.00 0   0.0%} {   0.00 4307   0.6%} {   0.42 85196  11.8%} ) 0 49569   0.0
0 750437   0.426   0.426  -0.002  12.4% 0.000500  93386 320041.26 ({   0.00 0   0.0%} {   0.00 4488   0.6%} {   0.42 88898  11.8%} ) 0 51501   0.0
0 780441   0.426   0.427  -0.000  12.4% 0.000500  97128 332859.39 ({   0.00 0   0.0%} {   0.00 4655   0.6%} {   0.42 92473  11.8%} ) 0 53614   0.0
0 810447   0.427   0.426   0.000  12.4% 0.000500  100804 345600.18 ({   0.00 0   0.0%} {   0.00 4831   0.6%} {   0.42 95973  11.8%} ) 0 55660   0.0
0 817524   0.426   0.426  -0.000  12.4% 0.000500  101672 348632.65 ({   0.00 0   0.0%} {   0.00 4892   0.6%} {   0.42 96780  11.8%} ) 0 56179   0.0
Finished on Thu Jan 31 05:23:40 Pacific Standard Time 2002
NN_saveWeights save_47.wgt
Loading from c:tmpFile08.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile08.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 824561 in 56419 Words. Total 824561 in 56419 words
Good+Bad: 824561 in 56419 words.
Total 824561 in 56419 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 824561 in 56419 Words. Total 824561 in 56419 words
Good+Bad: 824561 in 56419 words.
Tot Mem 132381 (kB)]
Data loading complete at Thu Jan 31 05:24:55 Pacific Standard Time 2002
m_bUseBadWords = 1
48 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30025   0.000   0.422  -1.000  12.4% 0.000500  3721  12674.65 ({   0.00 0   0.0%} {   0.00 164   0.5%} {   0.42 3557  11.8%} ) 0 2112   0.0
0 60031   0.422   0.429  -0.015  12.6% 0.000500  7543  25735.16 ({   0.00 0   0.0%} {   0.00 358   0.6%} {   0.43 7185  12.0%} ) 0 4207   0.0
0 90035   0.429   0.431  -0.005  12.6% 0.000500  11323  38777.64 ({   0.00 0   0.0%} {   0.00 563   0.6%} {   0.43 10760  12.0%} ) 0 6297   0.0
0 120057   0.431   0.424   0.016  12.4% 0.000500  14831  50880.25 ({   0.00 0   0.0%} {   0.00 706   0.6%} {   0.42 14125  11.8%} ) 0 8385   0.0
0 150059   0.424   0.421   0.008  12.3% 0.000500  18414  63105.64 ({   0.00 0   0.0%} {   0.00 890   0.6%} {   0.42 17524  11.7%} ) 0 10422   0.0
0 180071   0.421   0.419   0.003  12.2% 0.000500  22022  75497.95 ({   0.00 0   0.0%} {   0.00 1071   0.6%} {   0.42 20951  11.6%} ) 0 12481   0.0
0 210077   0.419   0.418   0.002  12.2% 0.000500  25640  87902.91 ({   0.00 0   0.0%} {   0.00 1258   0.6%} {   0.42 24382  11.6%} ) 0 14524   0.0
0 240081   0.418   0.419  -0.001  12.2% 0.000500  29363 100553.09 ({   0.00 0   0.0%} {   0.00 1429   0.6%} {   0.42 27934  11.6%} ) 0 16589   0.0
0 270088   0.419   0.418   0.002  12.2% 0.000500  32962 112946.57 ({   0.00 0   0.0%} {   0.00 1590   0.6%} {   0.42 31372  11.6%} ) 0 18529   0.0
0 300092   0.418   0.420  -0.004  12.3% 0.000500  36786 126013.49 ({   0.00 0   0.0%} {   0.00 1765   0.6%} {   0.42 35021  11.7%} ) 0 20635   0.0
0 330122   0.420   0.422  -0.005  12.3% 0.000500  40705 139349.38 ({   0.00 0   0.0%} {   0.00 1974   0.6%} {   0.42 38731  11.7%} ) 0 22667   0.0
0 360129   0.422   0.423  -0.002  12.4% 0.000500  44497 152353.54 ({   0.00 0   0.0%} {   0.00 2135   0.6%} {   0.42 42362  11.8%} ) 0 24763   0.0
0 390131   0.423   0.423   0.001  12.3% 0.000500  48068 164831.67 ({   0.00 0   0.0%} {   0.00 2283   0.6%} {   0.42 45785  11.7%} ) 0 26857   0.0
0 420133   0.423   0.421   0.003  12.3% 0.000500  51565 177046.65 ({   0.00 0   0.0%} {   0.00 2444   0.6%} {   0.42 49121  11.7%} ) 0 28978   0.0
0 450134   0.421   0.422  -0.001  12.3% 0.000500  55256 189833.04 ({   0.00 0   0.0%} {   0.00 2623   0.6%} {   0.42 52633  11.7%} ) 0 31047   0.0
0 480171   0.422   0.422  -0.000  12.3% 0.000500  58968 202548.95 ({   0.00 0   0.0%} {   0.00 2822   0.6%} {   0.42 56146  11.7%} ) 0 33163   0.0
0 510181   0.422   0.421   0.002  12.3% 0.000500  62555 214775.51 ({   0.00 0   0.0%} {   0.00 3023   0.6%} {   0.42 59532  11.7%} ) 0 35158   0.0
0 540207   0.421   0.421  -0.001  12.3% 0.000500  66270 227607.25 ({   0.00 0   0.0%} {   0.00 3185   0.6%} {   0.42 63085  11.7%} ) 0 37240   0.0
0 570211   0.421   0.422  -0.002  12.3% 0.000500  70067 240713.11 ({   0.00 0   0.0%} {   0.00 3364   0.6%} {   0.42 66703  11.7%} ) 0 39330   0.0
0 600220   0.422   0.423  -0.001  12.3% 0.000500  73832 253680.36 ({   0.00 0   0.0%} {   0.00 3562   0.6%} {   0.42 70270  11.7%} ) 0 41390   0.0
0 630227   0.423   0.423  -0.001  12.3% 0.000500  77568 266573.90 ({   0.00 0   0.0%} {   0.00 3753   0.6%} {   0.42 73815  11.7%} ) 0 43458   0.0
0 660228   0.423   0.424  -0.003  12.3% 0.000500  81405 279981.15 ({   0.00 0   0.0%} {   0.00 3963   0.6%} {   0.42 77442  11.7%} ) 0 45460   0.0
0 690236   0.424   0.424  -0.001  12.3% 0.000500  85164 292901.76 ({   0.00 0   0.0%} {   0.00 4132   0.6%} {   0.42 81032  11.7%} ) 0 47434   0.0
0 720243   0.424   0.425  -0.001  12.3% 0.000500  88940 305863.52 ({   0.00 0   0.0%} {   0.00 4336   0.6%} {   0.42 84604  11.7%} ) 0 49413   0.0
0 750247   0.425   0.424   0.001  12.3% 0.000500  92577 318228.08 ({   0.00 0   0.0%} {   0.00 4528   0.6%} {   0.42 88049  11.7%} ) 0 51416   0.0
0 780265   0.424   0.425  -0.001  12.4% 0.000500  96474 331398.92 ({   0.00 0   0.0%} {   0.00 4749   0.6%} {   0.42 91725  11.8%} ) 0 53388   0.0
0 810278   0.425   0.425  -0.001  12.4% 0.000500  100223 344649.80 ({   0.00 0   0.0%} {   0.00 4909   0.6%} {   0.42 95314  11.8%} ) 0 55425   0.0
0 822410   0.425   0.425   0.001  12.4% 0.000500  101622 349414.38 ({   0.00 0   0.0%} {   0.00 4962   0.6%} {   0.42 96660  11.8%} ) 0 56233   0.0
Finished on Thu Jan 31 09:01:24 Pacific Standard Time 2002
NN_saveWeights save_48.wgt
Loading from c:tmpFile09.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile09.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 821465 in 56440 Words. Total 821465 in 56440 words
Good+Bad: 821465 in 56440 words.
Total 821465 in 56440 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 821465 in 56440 Words. Total 821465 in 56440 words
Good+Bad: 821465 in 56440 words.
Tot Mem 131885 (kB)]
Data loading complete at Thu Jan 31 09:02:39 Pacific Standard Time 2002
m_bUseBadWords = 1
49 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30007   0.000   0.407  -1.000  11.9% 0.000500  3568  12198.70 ({   0.00 0   0.0%} {   0.00 158   0.5%} {   0.40 3410  11.4%} ) 0 2033   0.0
0 60036   0.407   0.421  -0.034  12.4% 0.000500  7429  25265.79 ({   0.00 0   0.0%} {   0.00 363   0.6%} {   0.42 7066  11.8%} ) 0 4070   0.0
0 90042   0.421   0.413   0.018  12.2% 0.000500  10945  37215.14 ({   0.00 0   0.0%} {   0.00 545   0.6%} {   0.41 10400  11.6%} ) 0 6159   0.0
0 120072   0.413   0.418  -0.010  12.3% 0.000500  14764  50130.37 ({   0.00 0   0.0%} {   0.00 737   0.6%} {   0.42 14027  11.7%} ) 0 8347   0.0
0 150101   0.418   0.420  -0.005  12.3% 0.000500  18536  63005.43 ({   0.00 0   0.0%} {   0.00 912   0.6%} {   0.42 17624  11.7%} ) 0 10398   0.0
0 180102   0.420   0.421  -0.003  12.4% 0.000500  22334  75795.02 ({   0.00 0   0.0%} {   0.00 1147   0.6%} {   0.42 21187  11.8%} ) 0 12498   0.0
0 210102   0.421   0.420   0.003  12.3% 0.000500  25918  88193.73 ({   0.00 0   0.0%} {   0.00 1312   0.6%} {   0.42 24606  11.7%} ) 0 14634   0.0
0 240162   0.420   0.419   0.002  12.3% 0.000500  29626 100582.09 ({   0.00 0   0.0%} {   0.00 1503   0.6%} {   0.42 28123  11.7%} ) 0 16705   0.0
0 270176   0.419   0.417   0.003  12.3% 0.000500  33295 112790.23 ({   0.00 0   0.0%} {   0.00 1696   0.6%} {   0.42 31599  11.7%} ) 0 18774   0.0
0 300192   0.417   0.417   0.001  12.3% 0.000500  36915 125172.06 ({   0.00 0   0.0%} {   0.00 1880   0.6%} {   0.41 35035  11.7%} ) 0 20859   0.0
0 330230   0.417   0.418  -0.003  12.3% 0.000500  40608 138049.21 ({   0.00 0   0.0%} {   0.00 2028   0.6%} {   0.42 38580  11.7%} ) 0 22843   0.0
0 360233   0.418   0.417   0.003  12.3% 0.000500  44154 150197.01 ({   0.00 0   0.0%} {   0.00 2224   0.6%} {   0.41 41930  11.6%} ) 0 24960   0.0
0 390236   0.417   0.417  -0.000  12.2% 0.000500  47730 162737.89 ({   0.00 0   0.0%} {   0.00 2409   0.6%} {   0.41 45321  11.6%} ) 0 27075   0.0
0 420237   0.417   0.417   0.001  12.2% 0.000500  51303 175114.80 ({   0.00 0   0.0%} {   0.00 2571   0.6%} {   0.41 48732  11.6%} ) 0 29038   0.0
0 450250   0.417   0.418  -0.002  12.2% 0.000500  55055 188010.63 ({   0.00 0   0.0%} {   0.00 2760   0.6%} {   0.42 52295  11.6%} ) 0 31074   0.0
0 480266   0.418   0.418  -0.000  12.2% 0.000500  58742 200568.29 ({   0.00 0   0.0%} {   0.00 2938   0.6%} {   0.42 55804  11.6%} ) 0 33111   0.0
0 510268   0.418   0.418  -0.000  12.2% 0.000500  62439 213123.68 ({   0.00 0   0.0%} {   0.00 3100   0.6%} {   0.42 59339  11.6%} ) 0 35298   0.0
0 540282   0.418   0.417   0.001  12.2% 0.000500  66038 225440.96 ({   0.00 0   0.0%} {   0.00 3247   0.6%} {   0.41 62791  11.6%} ) 0 37353   0.0
0 570289   0.417   0.417   0.000  12.2% 0.000500  69640 237917.93 ({   0.00 0   0.0%} {   0.00 3381   0.6%} {   0.41 66259  11.6%} ) 0 39454   0.0
0 600295   0.417   0.417   0.001  12.2% 0.000500  73229 250288.61 ({   0.00 0   0.0%} {   0.00 3562   0.6%} {   0.41 69667  11.6%} ) 0 41489   0.0
0 630305   0.417   0.416   0.001  12.2% 0.000500  76806 262456.05 ({   0.00 0   0.0%} {   0.00 3745   0.6%} {   0.41 73061  11.6%} ) 0 43513   0.0
0 660309   0.416   0.416   0.000  12.2% 0.000500  80526 274933.19 ({   0.00 0   0.0%} {   0.00 3957   0.6%} {   0.41 76569  11.6%} ) 0 45555   0.0
0 690320   0.416   0.418  -0.003  12.2% 0.000500  84422 288265.06 ({   0.00 0   0.0%} {   0.00 4153   0.6%} {   0.42 80269  11.6%} ) 0 47672   0.0
0 720328   0.418   0.418  -0.000  12.2% 0.000500  88177 300856.05 ({   0.00 0   0.0%} {   0.00 4375   0.6%} {   0.42 83802  11.6%} ) 0 49544   0.0
0 750331   0.418   0.418  -0.001  12.2% 0.000500  91914 313680.61 ({   0.00 0   0.0%} {   0.00 4576   0.6%} {   0.42 87338  11.6%} ) 0 51552   0.0
0 780339   0.418   0.418   0.000  12.2% 0.000500  95553 326150.52 ({   0.00 0   0.0%} {   0.00 4776   0.6%} {   0.42 90777  11.6%} ) 0 53650   0.0
0 810340   0.418   0.419  -0.002  12.3% 0.000500  99331 339297.60 ({   0.00 0   0.0%} {   0.00 4935   0.6%} {   0.42 94396  11.6%} ) 0 55652   0.0
0 818907   0.419   0.419   0.000  12.3% 0.000500  100367 342874.15 ({   0.00 0   0.0%} {   0.00 4980   0.6%} {   0.42 95387  11.6%} ) 0 56228   0.0
Finished on Thu Jan 31 12:38:18 Pacific Standard Time 2002
NN_saveWeights save_49.wgt
Loading from c:tmpFile10.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile10.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 821732 in 56145 Words. Total 821732 in 56145 words
Good+Bad: 821732 in 56145 words.
Total 821732 in 56145 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 821732 in 56145 Words. Total 821732 in 56145 words
Good+Bad: 821732 in 56145 words.
Tot Mem 131926 (kB)]
Data loading complete at Thu Jan 31 12:39:32 Pacific Standard Time 2002
m_bUseBadWords = 1
50 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30030   0.000   0.419  -1.000  12.4% 0.000500  3711  12576.86 ({   0.00 0   0.0%} {   0.00 145   0.5%} {   0.42 3566  11.9%} ) 0 2133   0.0
0 60060   0.419   0.426  -0.018  12.5% 0.000500  7487  25611.29 ({   0.00 0   0.0%} {   0.00 328   0.5%} {   0.42 7159  11.9%} ) 0 4279   0.0
0 90083   0.426   0.436  -0.021  12.7% 0.000500  11464  39234.74 ({   0.00 0   0.0%} {   0.00 516   0.6%} {   0.43 10948  12.2%} ) 0 6329   0.0
0 120107   0.436   0.431   0.010  12.7% 0.000500  15227  51775.50 ({   0.00 0   0.0%} {   0.00 708   0.6%} {   0.43 14519  12.1%} ) 0 8467   0.0
0 150143   0.431   0.431   0.001  12.6% 0.000500  18921  64636.85 ({   0.00 0   0.0%} {   0.00 899   0.6%} {   0.43 18022  12.0%} ) 0 10460   0.0
0 180156   0.431   0.430   0.001  12.6% 0.000500  22730  77476.34 ({   0.00 0   0.0%} {   0.00 1089   0.6%} {   0.43 21641  12.0%} ) 0 12596   0.0
0 210158   0.430   0.429   0.002  12.6% 0.000500  26470  90221.01 ({   0.00 0   0.0%} {   0.00 1229   0.6%} {   0.43 25241  12.0%} ) 0 14622   0.0
0 240161   0.429   0.427   0.005  12.5% 0.000500  30076 102565.95 ({   0.00 0   0.0%} {   0.00 1381   0.6%} {   0.42 28695  11.9%} ) 0 16630   0.0
0 270171   0.427   0.427   0.000  12.5% 0.000500  33760 115332.37 ({   0.00 0   0.0%} {   0.00 1541   0.6%} {   0.42 32219  11.9%} ) 0 18714   0.0
0 300188   0.427   0.426   0.002  12.5% 0.000500  37405 127856.40 ({   0.00 0   0.0%} {   0.00 1710   0.6%} {   0.42 35695  11.9%} ) 0 20752   0.0
0 330236   0.426   0.425   0.001  12.5% 0.000500  41179 140488.32 ({   0.00 0   0.0%} {   0.00 1921   0.6%} {   0.42 39258  11.9%} ) 0 22869   0.0
0 360247   0.425   0.424   0.003  12.4% 0.000500  44757 152851.52 ({   0.00 0   0.0%} {   0.00 2087   0.6%} {   0.42 42670  11.8%} ) 0 24935   0.0
0 390282   0.424   0.424   0.000  12.4% 0.000500  48424 165518.85 ({   0.00 0   0.0%} {   0.00 2233   0.6%} {   0.42 46191  11.8%} ) 0 27052   0.0
0 420282   0.424   0.422   0.004  12.4% 0.000500  51973 177542.45 ({   0.00 0   0.0%} {   0.00 2454   0.6%} {   0.42 49519  11.8%} ) 0 29040   0.0
0 450282   0.422   0.422   0.000  12.3% 0.000500  55593 190123.99 ({   0.00 0   0.0%} {   0.00 2619   0.6%} {   0.42 52974  11.8%} ) 0 31043   0.0
0 480283   0.422   0.422   0.000  12.3% 0.000500  59242 202731.18 ({   0.00 0   0.0%} {   0.00 2763   0.6%} {   0.42 56479  11.8%} ) 0 33231   0.0
0 510317   0.422   0.421   0.003  12.3% 0.000500  62820 214756.16 ({   0.00 0   0.0%} {   0.00 2947   0.6%} {   0.42 59873  11.7%} ) 0 35296   0.0
0 540367   0.421   0.421  -0.001  12.3% 0.000500  66573 227662.93 ({   0.00 0   0.0%} {   0.00 3160   0.6%} {   0.42 63413  11.7%} ) 0 37309   0.0
0 570368   0.421   0.421   0.000  12.3% 0.000500  70212 240186.70 ({   0.00 0   0.0%} {   0.00 3327   0.6%} {   0.42 66885  11.7%} ) 0 39344   0.0
0 600369   0.421   0.420   0.002  12.3% 0.000500  73817 252420.14 ({   0.00 0   0.0%} {   0.00 3498   0.6%} {   0.42 70319  11.7%} ) 0 41460   0.0
0 630372   0.420   0.420   0.001  12.3% 0.000500  77362 264800.82 ({   0.00 0   0.0%} {   0.00 3671   0.6%} {   0.42 73691  11.7%} ) 0 43467   0.0
0 660406   0.420   0.420  -0.001  12.3% 0.000500  81043 277691.81 ({   0.00 0   0.0%} {   0.00 3836   0.6%} {   0.42 77207  11.7%} ) 0 45512   0.0
0 690433   0.420   0.420   0.000  12.3% 0.000500  84715 290271.44 ({   0.00 0   0.0%} {   0.00 4029   0.6%} {   0.42 80686  11.7%} ) 0 47498   0.0
0 720433   0.420   0.421  -0.000  12.3% 0.000500  88437 303009.32 ({   0.00 0   0.0%} {   0.00 4211   0.6%} {   0.42 84226  11.7%} ) 0 49462   0.0
0 750442   0.421   0.420   0.001  12.3% 0.000500  92085 315423.84 ({   0.00 0   0.0%} {   0.00 4389   0.6%} {   0.42 87696  11.7%} ) 0 51398   0.0
0 780446   0.420   0.420   0.000  12.3% 0.000500  95807 327908.36 ({   0.00 0   0.0%} {   0.00 4573   0.6%} {   0.42 91234  11.7%} ) 0 53384   0.0
0 810501   0.420   0.420  -0.001  12.3% 0.000500  99580 340727.93 ({   0.00 0   0.0%} {   0.00 4751   0.6%} {   0.42 94829  11.7%} ) 0 55371   0.0
0 818613   0.420   0.421  -0.001  12.3% 0.000500  100630 344312.63 ({   0.00 0   0.0%} {   0.00 4813   0.6%} {   0.42 95817  11.7%} ) 0 55917   0.0
Finished on Thu Jan 31 16:15:11 Pacific Standard Time 2002
NN_saveWeights save_50.wgt
Loading from c:tmpFile11.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile11.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 825752 in 56314 Words. Total 825752 in 56314 words
Good+Bad: 825752 in 56314 words.
Total 825752 in 56314 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 825752 in 56314 Words. Total 825752 in 56314 words
Good+Bad: 825752 in 56314 words.
Tot Mem 132570 (kB)]
Data loading complete at Thu Jan 31 16:16:26 Pacific Standard Time 2002
m_bUseBadWords = 1
51 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30033   0.000   0.411  -1.000  12.1% 0.000500  3621  12331.99 ({   0.00 0   0.0%} {   0.00 152   0.5%} {   0.41 3469  11.6%} ) 0 2052   0.0
0 60051   0.411   0.411  -0.001  12.0% 0.000500  7193  24670.50 ({   0.00 0   0.0%} {   0.00 307   0.5%} {   0.41 6886  11.5%} ) 0 4180   0.0
0 90052   0.411   0.415  -0.011  12.2% 0.000500  10958  37393.18 ({   0.00 0   0.0%} {   0.00 488   0.5%} {   0.41 10470  11.6%} ) 0 6207   0.0
0 120062   0.415   0.419  -0.008  12.2% 0.000500  14694  50256.95 ({   0.00 0   0.0%} {   0.00 653   0.5%} {   0.42 14041  11.7%} ) 0 8297   0.0
0 150072   0.419   0.419  -0.000  12.2% 0.000500  18341  62847.71 ({   0.00 0   0.0%} {   0.00 839   0.6%} {   0.42 17502  11.7%} ) 0 10338   0.0
0 180079   0.419   0.417   0.003  12.2% 0.000500  21912  75160.64 ({   0.00 0   0.0%} {   0.00 1006   0.6%} {   0.42 20906  11.6%} ) 0 12375   0.0
0 210084   0.417   0.418  -0.002  12.2% 0.000500  25571  87888.54 ({   0.00 0   0.0%} {   0.00 1176   0.6%} {   0.42 24395  11.6%} ) 0 14438   0.0
0 240090   0.418   0.417   0.003  12.1% 0.000500  29127 100178.49 ({   0.00 0   0.0%} {   0.00 1360   0.6%} {   0.42 27767  11.6%} ) 0 16479   0.0
0 270117   0.417   0.413   0.010  12.0% 0.000500  32510 111537.04 ({   0.00 0   0.0%} {   0.00 1519   0.6%} {   0.41 30991  11.5%} ) 0 18485   0.0
0 300118   0.413   0.415  -0.004  12.1% 0.000500  36244 124476.63 ({   0.00 0   0.0%} {   0.00 1679   0.6%} {   0.41 34565  11.5%} ) 0 20554   0.0
0 330153   0.415   0.416  -0.004  12.1% 0.000500  39969 137489.48 ({   0.00 0   0.0%} {   0.00 1837   0.6%} {   0.41 38132  11.5%} ) 0 22698   0.0
0 360167   0.416   0.417  -0.002  12.1% 0.000500  43708 150322.64 ({   0.00 0   0.0%} {   0.00 2024   0.6%} {   0.42 41684  11.6%} ) 0 24738   0.0
0 390177   0.417   0.417   0.001  12.1% 0.000500  47308 162642.92 ({   0.00 0   0.0%} {   0.00 2210   0.6%} {   0.41 45098  11.6%} ) 0 26764   0.0
0 420180   0.417   0.416   0.002  12.1% 0.000500  50906 174744.02 ({   0.00 0   0.0%} {   0.00 2388   0.6%} {   0.41 48518  11.5%} ) 0 28823   0.0
0 450194   0.416   0.415   0.002  12.1% 0.000500  54485 186773.02 ({   0.00 0   0.0%} {   0.00 2553   0.6%} {   0.41 51932  11.5%} ) 0 30908   0.0
0 480208   0.415   0.414   0.003  12.1% 0.000500  57993 198634.02 ({   0.00 0   0.0%} {   0.00 2719   0.6%} {   0.41 55274  11.5%} ) 0 32904   0.0
0 510214   0.414   0.414  -0.001  12.1% 0.000500  61808 211349.14 ({   0.00 0   0.0%} {   0.00 2891   0.6%} {   0.41 58917  11.5%} ) 0 34926   0.0
0 540220   0.414   0.414  -0.000  12.1% 0.000500  65504 223875.35 ({   0.00 0   0.0%} {   0.00 3074   0.6%} {   0.41 62430  11.6%} ) 0 36977   0.0
0 570233   0.414   0.415  -0.002  12.2% 0.000500  69311 236815.52 ({   0.00 0   0.0%} {   0.00 3278   0.6%} {   0.41 66033  11.6%} ) 0 38969   0.0
0 600249   0.415   0.415   0.001  12.1% 0.000500  72849 249049.19 ({   0.00 0   0.0%} {   0.00 3438   0.6%} {   0.41 69411  11.6%} ) 0 40993   0.0
0 630250   0.415   0.415  -0.001  12.1% 0.000500  76545 261813.30 ({   0.00 0   0.0%} {   0.00 3651   0.6%} {   0.41 72894  11.6%} ) 0 42980   0.0
0 660253   0.415   0.417  -0.003  12.2% 0.000500  80328 275092.61 ({   0.00 0   0.0%} {   0.00 3830   0.6%} {   0.41 76498  11.6%} ) 0 44997   0.0
0 690254   0.417   0.417   0.000  12.2% 0.000500  83969 287510.86 ({   0.00 0   0.0%} {   0.00 4013   0.6%} {   0.41 79956  11.6%} ) 0 47030   0.0
0 720268   0.417   0.416   0.002  12.1% 0.000500  87504 299460.47 ({   0.00 0   0.0%} {   0.00 4202   0.6%} {   0.41 83302  11.6%} ) 0 49112   0.0
0 750272   0.416   0.416   0.000  12.1% 0.000500  91057 311847.55 ({   0.00 0   0.0%} {   0.00 4380   0.6%} {   0.41 86677  11.6%} ) 0 51100   0.0
0 780272   0.416   0.416  -0.000  12.1% 0.000500  94776 324401.37 ({   0.00 0   0.0%} {   0.00 4579   0.6%} {   0.41 90197  11.6%} ) 0 53198   0.0
0 810273   0.416   0.415   0.002  12.1% 0.000500  98260 336190.32 ({   0.00 0   0.0%} {   0.00 4778   0.6%} {   0.41 93482  11.5%} ) 0 55246   0.0
0 822766   0.415   0.415   0.000  12.1% 0.000500  99745 341204.01 ({   0.00 0   0.0%} {   0.00 4852   0.6%} {   0.41 94893  11.5%} ) 0 56069   0.0
Finished on Thu Jan 31 19:53:04 Pacific Standard Time 2002
NN_saveWeights save_51.wgt
Loading from c:tmpFile12.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile12.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 816222 in 56300 Words. Total 816222 in 56300 words
Good+Bad: 816222 in 56300 words.
Total 816222 in 56300 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 816222 in 56300 Words. Total 816222 in 56300 words
Good+Bad: 816222 in 56300 words.
Tot Mem 131045 (kB)]
Data loading complete at Thu Jan 31 19:54:18 Pacific Standard Time 2002
m_bUseBadWords = 1
52 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30027   0.000   0.407  -1.000  11.8% 0.000500  3539  12228.46 ({   0.00 0   0.0%} {   0.00 164   0.5%} {   0.41 3375  11.2%} ) 0 2089   0.0
0 60028   0.407   0.409  -0.003  11.7% 0.000500  7051  24530.47 ({   0.00 0   0.0%} {   0.00 316   0.5%} {   0.41 6735  11.2%} ) 0 4174   0.0
0 90091   0.409   0.413  -0.011  11.9% 0.000500  10708  37207.96 ({   0.00 0   0.0%} {   0.00 479   0.5%} {   0.41 10229  11.4%} ) 0 6342   0.0
0 120136   0.413   0.413  -0.001  11.9% 0.000500  14342  49656.63 ({   0.00 0   0.0%} {   0.00 635   0.5%} {   0.41 13707  11.4%} ) 0 8395   0.0
0 150146   0.413   0.413   0.000  12.0% 0.000500  18007  62038.70 ({   0.00 0   0.0%} {   0.00 818   0.5%} {   0.41 17189  11.4%} ) 0 10539   0.0
0 180162   0.413   0.412   0.002  12.0% 0.000500  21655  74271.82 ({   0.00 0   0.0%} {   0.00 998   0.6%} {   0.41 20657  11.5%} ) 0 12603   0.0
0 210193   0.412   0.410   0.005  12.0% 0.000500  25203  86182.34 ({   0.00 0   0.0%} {   0.00 1196   0.6%} {   0.41 24007  11.4%} ) 0 14698   0.0
0 240194   0.410   0.410  -0.000  12.0% 0.000500  28876  98510.79 ({   0.00 0   0.0%} {   0.00 1356   0.6%} {   0.41 27520  11.5%} ) 0 16691   0.0
0 270224   0.410   0.414  -0.009  12.1% 0.000500  32715 111777.54 ({   0.00 0   0.0%} {   0.00 1518   0.6%} {   0.41 31197  11.5%} ) 0 18806   0.0
0 300231   0.414   0.416  -0.005  12.2% 0.000500  36485 124759.78 ({   0.00 0   0.0%} {   0.00 1705   0.6%} {   0.41 34780  11.6%} ) 0 20864   0.0
0 330241   0.416   0.417  -0.003  12.2% 0.000500  40231 137629.55 ({   0.00 0   0.0%} {   0.00 1889   0.6%} {   0.41 38342  11.6%} ) 0 22928   0.0
0 360252   0.417   0.418  -0.002  12.2% 0.000500  43888 150418.86 ({   0.00 0   0.0%} {   0.00 2079   0.6%} {   0.42 41809  11.6%} ) 0 25024   0.0
0 390274   0.418   0.418  -0.001  12.2% 0.000500  47538 163074.03 ({   0.00 0   0.0%} {   0.00 2256   0.6%} {   0.42 45282  11.6%} ) 0 27080   0.0
0 420309   0.418   0.419  -0.002  12.2% 0.000500  51338 176015.42 ({   0.00 0   0.0%} {   0.00 2440   0.6%} {   0.42 48898  11.6%} ) 0 29166   0.0
0 450319   0.419   0.418   0.002  12.2% 0.000500  54897 188207.24 ({   0.00 0   0.0%} {   0.00 2624   0.6%} {   0.42 52273  11.6%} ) 0 31245   0.0
0 480321   0.418   0.418   0.000  12.2% 0.000500  58528 200671.46 ({   0.00 0   0.0%} {   0.00 2810   0.6%} {   0.42 55718  11.6%} ) 0 33320   0.0
0 510364   0.418   0.418   0.000  12.2% 0.000500  62197 213123.45 ({   0.00 0   0.0%} {   0.00 3003   0.6%} {   0.42 59194  11.6%} ) 0 35432   0.0
0 540426   0.418   0.418  -0.001  12.2% 0.000500  65924 225856.82 ({   0.00 0   0.0%} {   0.00 3208   0.6%} {   0.42 62716  11.6%} ) 0 37498   0.0
0 570463   0.418   0.418   0.001  12.2% 0.000500  69632 238201.35 ({   0.00 0   0.0%} {   0.00 3391   0.6%} {   0.42 66241  11.6%} ) 0 39577   0.0
0 600463   0.418   0.417   0.002  12.2% 0.000500  73114 250130.15 ({   0.00 0   0.0%} {   0.00 3574   0.6%} {   0.41 69540  11.6%} ) 0 41610   0.0
0 630468   0.417   0.417  -0.001  12.2% 0.000500  76901 262881.97 ({   0.00 0   0.0%} {   0.00 3755   0.6%} {   0.41 73146  11.6%} ) 0 43637   0.0
0 660479   0.417   0.416   0.001  12.2% 0.000500  80499 275050.72 ({   0.00 0   0.0%} {   0.00 3942   0.6%} {   0.41 76557  11.6%} ) 0 45740   0.0
0 690482   0.416   0.416   0.000  12.2% 0.000500  84109 287521.63 ({   0.00 0   0.0%} {   0.00 4092   0.6%} {   0.41 80017  11.6%} ) 0 47753   0.0
0 720484   0.416   0.416   0.000  12.2% 0.000500  87658 299958.73 ({   0.00 0   0.0%} {   0.00 4274   0.6%} {   0.41 83384  11.6%} ) 0 49787   0.0
0 750485   0.416   0.417  -0.000  12.2% 0.000500  91442 312583.25 ({   0.00 0   0.0%} {   0.00 4486   0.6%} {   0.41 86956  11.6%} ) 0 51769   0.0
0 780494   0.417   0.416   0.000  12.2% 0.000500  95059 324994.26 ({   0.00 0   0.0%} {   0.00 4681   0.6%} {   0.41 90378  11.6%} ) 0 53792   0.0
0 810539   0.416   0.417  -0.001  12.2% 0.000500  98878 337848.90 ({   0.00 0   0.0%} {   0.00 4870   0.6%} {   0.41 94008  11.6%} ) 0 55853   0.0
0 813413   0.417   0.417  -0.000  12.2% 0.000500  99264 339114.88 ({   0.00 0   0.0%} {   0.00 4895   0.6%} {   0.41 94369  11.6%} ) 0 56062   0.0
Finished on Thu Jan 31 23:28:25 Pacific Standard Time 2002
NN_saveWeights save_52.wgt
Loading from c:tmpFile13.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile13.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 827479 in 56340 Words. Total 827479 in 56340 words
Good+Bad: 827479 in 56340 words.
Total 827479 in 56340 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 827479 in 56340 Words. Total 827479 in 56340 words
Good+Bad: 827479 in 56340 words.
Tot Mem 132847 (kB)]
Data loading complete at Thu Jan 31 23:29:40 Pacific Standard Time 2002
m_bUseBadWords = 1
53 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30000   0.000   0.425  -1.000  12.4% 0.000500  3715  12736.76 ({   0.00 0   0.0%} {   0.00 169   0.6%} {   0.42 3546  11.8%} ) 0 2140   0.0
0 60029   0.425   0.419   0.013  12.1% 0.000500  7279  25146.39 ({   0.00 0   0.0%} {   0.00 339   0.6%} {   0.42 6940  11.6%} ) 0 4245   0.0
0 90033   0.419   0.419   0.001  12.1% 0.000500  10918  37695.47 ({   0.00 0   0.0%} {   0.00 495   0.5%} {   0.42 10423  11.6%} ) 0 6424   0.0
0 120037   0.419   0.417   0.003  12.1% 0.000500  14531  50112.39 ({   0.00 0   0.0%} {   0.00 641   0.5%} {   0.42 13890  11.6%} ) 0 8497   0.0
0 150048   0.417   0.418  -0.002  12.1% 0.000500  18166  62761.81 ({   0.00 0   0.0%} {   0.00 807   0.5%} {   0.42 17359  11.6%} ) 0 10520   0.0
0 180104   0.418   0.416   0.005  12.1% 0.000500  21800  74976.43 ({   0.00 0   0.0%} {   0.00 994   0.6%} {   0.41 20806  11.6%} ) 0 12593   0.0
0 210148   0.416   0.417  -0.001  12.1% 0.000500  25480  87534.68 ({   0.00 0   0.0%} {   0.00 1162   0.6%} {   0.41 24318  11.6%} ) 0 14644   0.0
0 240148   0.417   0.417   0.000  12.1% 0.000500  29121 100024.96 ({   0.00 0   0.0%} {   0.00 1340   0.6%} {   0.41 27781  11.6%} ) 0 16704   0.0
0 270155   0.417   0.415   0.003  12.1% 0.000500  32771 112213.63 ({   0.00 0   0.0%} {   0.00 1548   0.6%} {   0.41 31223  11.6%} ) 0 18764   0.0
0 300157   0.415   0.416  -0.001  12.2% 0.000500  36481 124753.52 ({   0.00 0   0.0%} {   0.00 1718   0.6%} {   0.41 34763  11.6%} ) 0 20740   0.0
0 330194   0.416   0.416  -0.001  12.2% 0.000500  40160 137323.56 ({   0.00 0   0.0%} {   0.00 1873   0.6%} {   0.41 38287  11.6%} ) 0 22745   0.0
0 360234   0.416   0.415   0.003  12.1% 0.000500  43707 149374.27 ({   0.00 0   0.0%} {   0.00 2059   0.6%} {   0.41 41648  11.6%} ) 0 24780   0.0
0 390240   0.415   0.416  -0.003  12.2% 0.000500  47417 162354.49 ({   0.00 0   0.0%} {   0.00 2227   0.6%} {   0.41 45190  11.6%} ) 0 26786   0.0
0 420242   0.416   0.416   0.001  12.1% 0.000500  51000 174640.06 ({   0.00 0   0.0%} {   0.00 2428   0.6%} {   0.41 48572  11.6%} ) 0 28754   0.0
0 450244   0.416   0.415   0.001  12.1% 0.000500  54655 186914.58 ({   0.00 0   0.0%} {   0.00 2575   0.6%} {   0.41 52080  11.6%} ) 0 30699   0.0
0 480259   0.415   0.416  -0.002  12.2% 0.000500  58391 199703.86 ({   0.00 0   0.0%} {   0.00 2777   0.6%} {   0.41 55614  11.6%} ) 0 32703   0.0
0 510260   0.416   0.415   0.002  12.2% 0.000500  61997 211833.77 ({   0.00 0   0.0%} {   0.00 2949   0.6%} {   0.41 59048  11.6%} ) 0 34779   0.0
0 540275   0.415   0.416  -0.001  12.2% 0.000500  65686 224594.58 ({   0.00 0   0.0%} {   0.00 3098   0.6%} {   0.41 62588  11.6%} ) 0 36815   0.0
0 570287   0.416   0.415   0.001  12.2% 0.000500  69421 236944.18 ({   0.00 0   0.0%} {   0.00 3297   0.6%} {   0.41 66124  11.6%} ) 0 38802   0.0
0 600295   0.415   0.415   0.001  12.1% 0.000500  72894 249208.49 ({   0.00 0   0.0%} {   0.00 3442   0.6%} {   0.41 69452  11.6%} ) 0 40755   0.0
0 630309   0.415   0.415   0.000  12.1% 0.000500  76494 261642.76 ({   0.00 0   0.0%} {   0.00 3599   0.6%} {   0.41 72895  11.6%} ) 0 42766   0.0
0 660317   0.415   0.415   0.000  12.1% 0.000500  80136 274075.57 ({   0.00 0   0.0%} {   0.00 3793   0.6%} {   0.41 76343  11.6%} ) 0 44845   0.0
0 690319   0.415   0.415   0.000  12.1% 0.000500  83738 286440.64 ({   0.00 0   0.0%} {   0.00 3983   0.6%} {   0.41 79755  11.6%} ) 0 46996   0.0
0 720370   0.415   0.415  -0.000  12.1% 0.000500  87483 299027.92 ({   0.00 0   0.0%} {   0.00 4148   0.6%} {   0.41 83335  11.6%} ) 0 49088   0.0
0 750400   0.415   0.415   0.000  12.1% 0.000500  91161 311443.49 ({   0.00 0   0.0%} {   0.00 4324   0.6%} {   0.41 86837  11.6%} ) 0 51110   0.0
0 780437   0.415   0.415  -0.001  12.2% 0.000500  94863 324081.74 ({   0.00 0   0.0%} {   0.00 4512   0.6%} {   0.41 90351  11.6%} ) 0 53172   0.0
0 810464   0.415   0.415   0.000  12.2% 0.000500  98570 336547.00 ({   0.00 0   0.0%} {   0.00 4709   0.6%} {   0.41 93861  11.6%} ) 0 55184   0.0
0 825168   0.415   0.416  -0.001  12.2% 0.000500  100418 343006.00 ({   0.00 0   0.0%} {   0.00 4779   0.6%} {   0.41 95639  11.6%} ) 0 56123   0.0
Finished on Fri Feb 01 03:06:51 Pacific Standard Time 2002
NN_saveWeights save_53.wgt
Loading from c:tmpFile14.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile14.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 825541 in 56551 Words. Total 825541 in 56551 words
Good+Bad: 825541 in 56551 words.
Total 825541 in 56551 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 825541 in 56551 Words. Total 825541 in 56551 words
Good+Bad: 825541 in 56551 words.
Tot Mem 132538 (kB)]
Data loading complete at Fri Feb 01 03:08:05 Pacific Standard Time 2002
m_bUseBadWords = 1
54 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30019   0.000   0.403  -1.000  11.6% 0.000500  3482  12101.06 ({   0.00 0   0.0%} {   0.00 155   0.5%} {   0.40 3327  11.1%} ) 0 2145   0.0
0 60020   0.403   0.398   0.013  11.6% 0.000500  6951  23893.50 ({   0.00 0   0.0%} {   0.00 349   0.6%} {   0.40 6602  11.0%} ) 0 4258   0.0
0 90044   0.398   0.406  -0.020  11.9% 0.000500  10682  36587.07 ({   0.00 0   0.0%} {   0.00 534   0.6%} {   0.40 10148  11.3%} ) 0 6338   0.0
0 120045   0.406   0.409  -0.007  11.9% 0.000500  14304  49129.66 ({   0.00 0   0.0%} {   0.00 738   0.6%} {   0.41 13566  11.3%} ) 0 8417   0.0
0 150057   0.409   0.407   0.005  11.9% 0.000500  17832  61114.23 ({   0.00 0   0.0%} {   0.00 891   0.6%} {   0.40 16941  11.3%} ) 0 10483   0.0
0 180098   0.407   0.410  -0.006  12.0% 0.000500  21539  73825.39 ({   0.00 0   0.0%} {   0.00 1078   0.6%} {   0.41 20461  11.4%} ) 0 12640   0.0
0 210150   0.410   0.412  -0.004  12.0% 0.000500  25218  86485.18 ({   0.00 0   0.0%} {   0.00 1254   0.6%} {   0.41 23964  11.4%} ) 0 14737   0.0
0 240182   0.412   0.412  -0.001  12.0% 0.000500  28872  98945.01 ({   0.00 0   0.0%} {   0.00 1435   0.6%} {   0.41 27437  11.4%} ) 0 16733   0.0
0 270222   0.412   0.413  -0.004  12.1% 0.000500  32562 111728.39 ({   0.00 0   0.0%} {   0.00 1630   0.6%} {   0.41 30932  11.4%} ) 0 18809   0.0
0 300226   0.413   0.414  -0.001  12.1% 0.000500  36260 124266.73 ({   0.00 0   0.0%} {   0.00 1807   0.6%} {   0.41 34453  11.5%} ) 0 20904   0.0
0 330227   0.414   0.415  -0.002  12.1% 0.000500  39985 136956.47 ({   0.00 0   0.0%} {   0.00 1946   0.6%} {   0.41 38039  11.5%} ) 0 23058   0.0
0 360271   0.415   0.416  -0.004  12.2% 0.000500  43797 149946.52 ({   0.00 0   0.0%} {   0.00 2125   0.6%} {   0.41 41672  11.6%} ) 0 25090   0.0
0 390271   0.416   0.416   0.001  12.2% 0.000500  47445 162233.03 ({   0.00 0   0.0%} {   0.00 2293   0.6%} {   0.41 45152  11.6%} ) 0 27234   0.0
0 420296   0.416   0.416  -0.001  12.2% 0.000500  51160 174956.11 ({   0.00 0   0.0%} {   0.00 2503   0.6%} {   0.41 48657  11.6%} ) 0 29305   0.0
0 450311   0.416   0.416   0.002  12.1% 0.000500  54688 187143.39 ({   0.00 0   0.0%} {   0.00 2669   0.6%} {   0.41 52019  11.6%} ) 0 31402   0.0
0 480335   0.416   0.416  -0.001  12.2% 0.000500  58415 199884.06 ({   0.00 0   0.0%} {   0.00 2838   0.6%} {   0.41 55577  11.6%} ) 0 33378   0.0
0 510351   0.416   0.416   0.001  12.1% 0.000500  61976 212086.72 ({   0.00 0   0.0%} {   0.00 3024   0.6%} {   0.41 58952  11.6%} ) 0 35336   0.0
0 540353   0.416   0.415   0.001  12.1% 0.000500  65532 224373.97 ({   0.00 0   0.0%} {   0.00 3193   0.6%} {   0.41 62339  11.5%} ) 0 37345   0.0
0 570364   0.415   0.415   0.002  12.1% 0.000500  69072 236442.76 ({   0.00 0   0.0%} {   0.00 3367   0.6%} {   0.41 65705  11.5%} ) 0 39460   0.0
0 600368   0.415   0.414   0.001  12.1% 0.000500  72634 248659.94 ({   0.00 0   0.0%} {   0.00 3545   0.6%} {   0.41 69089  11.5%} ) 0 41477   0.0
0 630378   0.414   0.413   0.002  12.1% 0.000500  76125 260650.70 ({   0.00 0   0.0%} {   0.00 3717   0.6%} {   0.41 72408  11.5%} ) 0 43545   0.0
0 660384   0.413   0.414  -0.001  12.1% 0.000500  79719 273289.03 ({   0.00 0   0.0%} {   0.00 3901   0.6%} {   0.41 75818  11.5%} ) 0 45513   0.0
0 690390   0.414   0.414  -0.000  12.1% 0.000500  83282 285762.06 ({   0.00 0   0.0%} {   0.00 4086   0.6%} {   0.41 79196  11.5%} ) 0 47512   0.0
0 720414   0.414   0.414   0.000  12.1% 0.000500  86853 298136.04 ({   0.00 0   0.0%} {   0.00 4258   0.6%} {   0.41 82595  11.5%} ) 0 49502   0.0
0 750432   0.414   0.414  -0.001  12.1% 0.000500  90583 310716.35 ({   0.00 0   0.0%} {   0.00 4451   0.6%} {   0.41 86132  11.5%} ) 0 51532   0.0
0 780462   0.414   0.414  -0.000  12.1% 0.000500  94286 323236.82 ({   0.00 0   0.0%} {   0.00 4628   0.6%} {   0.41 89658  11.5%} ) 0 53519   0.0
0 810481   0.414   0.415  -0.001  12.1% 0.000500  98043 336109.62 ({   0.00 0   0.0%} {   0.00 4798   0.6%} {   0.41 93245  11.5%} ) 0 55456   0.0
0 823357   0.415   0.415   0.000  12.1% 0.000500  99578 341430.73 ({   0.00 0   0.0%} {   0.00 4883   0.6%} {   0.41 94695  11.5%} ) 0 56329   0.0
Finished on Fri Feb 01 06:44:45 Pacific Standard Time 2002
NN_saveWeights save_54.wgt
Loading from c:tmpFile15.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile15.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 815448 in 55867 Words. Total 815448 in 55867 words
Good+Bad: 815448 in 55867 words.
Total 815448 in 55867 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 815448 in 55867 Words. Total 815448 in 55867 words
Good+Bad: 815448 in 55867 words.
Tot Mem 130918 (kB)]
Data loading complete at Fri Feb 01 06:46:00 Pacific Standard Time 2002
m_bUseBadWords = 1
55 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30038   0.000   0.425  -1.000  12.3% 0.000500  3703  12776.45 ({   0.00 0   0.0%} {   0.00 190   0.6%} {   0.42 3513  11.7%} ) 0 2148   0.0
0 60072   0.425   0.421   0.010  12.2% 0.000500  7346  25300.09 ({   0.00 0   0.0%} {   0.00 373   0.6%} {   0.42 6973  11.6%} ) 0 4210   0.0
0 90078   0.421   0.419   0.005  12.1% 0.000500  10909  37738.87 ({   0.00 0   0.0%} {   0.00 539   0.6%} {   0.42 10370  11.5%} ) 0 6342   0.0
0 120084   0.419   0.421  -0.004  12.2% 0.000500  14639  50520.02 ({   0.00 0   0.0%} {   0.00 731   0.6%} {   0.42 13908  11.6%} ) 0 8454   0.0
0 150087   0.421   0.419   0.005  12.2% 0.000500  18249  62838.04 ({   0.00 0   0.0%} {   0.00 915   0.6%} {   0.42 17334  11.5%} ) 0 10536   0.0
0 180121   0.419   0.415   0.008  12.1% 0.000500  21853  74818.35 ({   0.00 0   0.0%} {   0.00 1106   0.6%} {   0.41 20747  11.5%} ) 0 12579   0.0
0 210154   0.415   0.415   0.001  12.1% 0.000500  25482  87208.26 ({   0.00 0   0.0%} {   0.00 1281   0.6%} {   0.41 24201  11.5%} ) 0 14616   0.0
0 240157   0.415   0.414   0.003  12.1% 0.000500  29063  99387.07 ({   0.00 0   0.0%} {   0.00 1467   0.6%} {   0.41 27596  11.5%} ) 0 16627   0.0
0 270161   0.414   0.413   0.002  12.1% 0.000500  32626 111559.00 ({   0.00 0   0.0%} {   0.00 1629   0.6%} {   0.41 30997  11.5%} ) 0 18682   0.0
0 300162   0.413   0.412   0.001  12.1% 0.000500  36193 123765.88 ({   0.00 0   0.0%} {   0.00 1818   0.6%} {   0.41 34375  11.5%} ) 0 20802   0.0
0 330168   0.412   0.412   0.001  12.1% 0.000500  39829 136012.35 ({   0.00 0   0.0%} {   0.00 2009   0.6%} {   0.41 37820  11.5%} ) 0 22883   0.0
0 360171   0.412   0.412   0.001  12.0% 0.000500  43336 148265.71 ({   0.00 0   0.0%} {   0.00 2176   0.6%} {   0.41 41160  11.4%} ) 0 25008   0.0
0 390176   0.412   0.414  -0.005  12.1% 0.000500  47122 161359.26 ({   0.00 0   0.0%} {   0.00 2353   0.6%} {   0.41 44769  11.5%} ) 0 27149   0.0
0 420189   0.414   0.414  -0.001  12.1% 0.000500  50796 173980.23 ({   0.00 0   0.0%} {   0.00 2531   0.6%} {   0.41 48265  11.5%} ) 0 29191   0.0
0 450197   0.414   0.415  -0.002  12.1% 0.000500  54543 186699.98 ({   0.00 0   0.0%} {   0.00 2713   0.6%} {   0.41 51830  11.5%} ) 0 31287   0.0
0 480199   0.415   0.415  -0.000  12.1% 0.000500  58196 199157.25 ({   0.00 0   0.0%} {   0.00 2884   0.6%} {   0.41 55312  11.5%} ) 0 33361   0.0
0 510218   0.415   0.415  -0.001  12.1% 0.000500  61829 211804.73 ({   0.00 0   0.0%} {   0.00 3060   0.6%} {   0.41 58769  11.5%} ) 0 35423   0.0
0 540223   0.415   0.415  -0.000  12.1% 0.000500  65502 224279.70 ({   0.00 0   0.0%} {   0.00 3237   0.6%} {   0.41 62265  11.5%} ) 0 37441   0.0
0 570271   0.415   0.415  -0.000  12.1% 0.000500  69175 236836.36 ({   0.00 0   0.0%} {   0.00 3420   0.6%} {   0.41 65755  11.5%} ) 0 39453   0.0
0 600289   0.415   0.415   0.001  12.1% 0.000500  72794 249016.17 ({   0.00 0   0.0%} {   0.00 3606   0.6%} {   0.41 69188  11.5%} ) 0 41423   0.0
0 630325   0.415   0.414   0.002  12.1% 0.000500  76202 260905.59 ({   0.00 0   0.0%} {   0.00 3773   0.6%} {   0.41 72429  11.5%} ) 0 43497   0.0
0 660328   0.414   0.413   0.002  12.1% 0.000500  79649 272900.15 ({   0.00 0   0.0%} {   0.00 3938   0.6%} {   0.41 75711  11.5%} ) 0 45508   0.0
0 690328   0.413   0.413   0.000  12.1% 0.000500  83255 285174.58 ({   0.00 0   0.0%} {   0.00 4127   0.6%} {   0.41 79128  11.5%} ) 0 47496   0.0
0 720330   0.413   0.413  -0.000  12.1% 0.000500  86979 297597.47 ({   0.00 0   0.0%} {   0.00 4331   0.6%} {   0.41 82648  11.5%} ) 0 49505   0.0
0 750339   0.413   0.414  -0.003  12.1% 0.000500  90932 310963.42 ({   0.00 0   0.0%} {   0.00 4527   0.6%} {   0.41 86405  11.5%} ) 0 51486   0.0
0 780339   0.414   0.414   0.001  12.1% 0.000500  94470 322928.29 ({   0.00 0   0.0%} {   0.00 4732   0.6%} {   0.41 89738  11.5%} ) 0 53503   0.0
0 810347   0.414   0.413   0.002  12.1% 0.000500  97925 334842.28 ({   0.00 0   0.0%} {   0.00 4906   0.6%} {   0.41 93019  11.5%} ) 0 55475   0.0
0 812904   0.413   0.413   0.000  12.1% 0.000500  98184 335732.91 ({   0.00 0   0.0%} {   0.00 4922   0.6%} {   0.41 93262  11.5%} ) 0 55644   0.0
Finished on Fri Feb 01 10:20:02 Pacific Standard Time 2002
NN_saveWeights save_55.wgt
Loading from c:tmpFile16.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile16.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 821245 in 56536 Words. Total 821245 in 56536 words
Good+Bad: 821245 in 56536 words.
Total 821245 in 56536 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 821245 in 56536 Words. Total 821245 in 56536 words
Good+Bad: 821245 in 56536 words.
Tot Mem 131851 (kB)]
Data loading complete at Fri Feb 01 10:21:18 Pacific Standard Time 2002
m_bUseBadWords = 1
56 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30001   0.000   0.427  -1.000  12.4% 0.000500  3708  12808.05 ({   0.00 0   0.0%} {   0.00 179   0.6%} {   0.42 3529  11.8%} ) 0 2152   0.0
0 60006   0.427   0.427   0.001  12.4% 0.000500  7470  25598.08 ({   0.00 0   0.0%} {   0.00 376   0.6%} {   0.42 7094  11.8%} ) 0 4232   0.0
0 90011   0.427   0.423   0.007  12.4% 0.000500  11149  38118.61 ({   0.00 0   0.0%} {   0.00 555   0.6%} {   0.42 10594  11.8%} ) 0 6251   0.0
0 120045   0.423   0.420   0.009  12.3% 0.000500  14795  50390.10 ({   0.00 0   0.0%} {   0.00 778   0.6%} {   0.42 14017  11.7%} ) 0 8316   0.0
0 150071   0.420   0.418   0.005  12.3% 0.000500  18439  62703.12 ({   0.00 0   0.0%} {   0.00 974   0.6%} {   0.42 17465  11.6%} ) 0 10321   0.0
0 180076   0.418   0.417   0.003  12.3% 0.000500  22112  75023.18 ({   0.00 0   0.0%} {   0.00 1125   0.6%} {   0.41 20987  11.7%} ) 0 12472   0.0
0 210081   0.417   0.419  -0.006  12.3% 0.000500  25944  88094.79 ({   0.00 0   0.0%} {   0.00 1309   0.6%} {   0.42 24635  11.7%} ) 0 14553   0.0
0 240083   0.419   0.419   0.002  12.3% 0.000500  29622 100507.48 ({   0.00 0   0.0%} {   0.00 1470   0.6%} {   0.42 28152  11.7%} ) 0 16643   0.0
0 270096   0.419   0.419  -0.001  12.3% 0.000500  33287 113147.94 ({   0.00 0   0.0%} {   0.00 1660   0.6%} {   0.42 31627  11.7%} ) 0 18736   0.0
0 300123   0.419   0.418   0.002  12.3% 0.000500  36883 125425.56 ({   0.00 0   0.0%} {   0.00 1802   0.6%} {   0.42 35081  11.7%} ) 0 20805   0.0
0 330135   0.418   0.417   0.003  12.3% 0.000500  40474 137574.15 ({   0.00 0   0.0%} {   0.00 1978   0.6%} {   0.41 38496  11.7%} ) 0 22847   0.0
0 360154   0.417   0.417  -0.001  12.3% 0.000500  44151 150268.58 ({   0.00 0   0.0%} {   0.00 2138   0.6%} {   0.41 42013  11.7%} ) 0 24914   0.0
0 390156   0.417   0.418  -0.002  12.3% 0.000500  47876 163042.62 ({   0.00 0   0.0%} {   0.00 2320   0.6%} {   0.42 45556  11.7%} ) 0 27033   0.0
0 420161   0.418   0.417   0.002  12.3% 0.000500  51490 175176.69 ({   0.00 0   0.0%} {   0.00 2489   0.6%} {   0.41 49001  11.7%} ) 0 29102   0.0
0 450180   0.417   0.418  -0.002  12.3% 0.000500  55211 188070.77 ({   0.00 0   0.0%} {   0.00 2654   0.6%} {   0.42 52557  11.7%} ) 0 31161   0.0
0 480182   0.418   0.417   0.001  12.2% 0.000500  58765 200337.39 ({   0.00 0   0.0%} {   0.00 2820   0.6%} {   0.41 55945  11.7%} ) 0 33279   0.0
0 510207   0.417   0.417   0.000  12.2% 0.000500  62366 212797.71 ({   0.00 0   0.0%} {   0.00 3014   0.6%} {   0.41 59352  11.6%} ) 0 35367   0.0
0 540229   0.417   0.418  -0.002  12.2% 0.000500  66114 225798.91 ({   0.00 0   0.0%} {   0.00 3174   0.6%} {   0.42 62940  11.7%} ) 0 37368   0.0
0 570231   0.418   0.418  -0.000  12.2% 0.000500  69698 238364.95 ({   0.00 0   0.0%} {   0.00 3376   0.6%} {   0.42 66322  11.6%} ) 0 39471   0.0
0 600240   0.418   0.418   0.001  12.2% 0.000500  73249 250653.02 ({   0.00 0   0.0%} {   0.00 3552   0.6%} {   0.42 69697  11.6%} ) 0 41513   0.0
0 630240   0.418   0.418  -0.001  12.2% 0.000500  76876 263355.87 ({   0.00 0   0.0%} {   0.00 3722   0.6%} {   0.42 73154  11.6%} ) 0 43607   0.0
0 660251   0.418   0.419  -0.002  12.2% 0.000500  80642 276563.37 ({   0.00 0   0.0%} {   0.00 3913   0.6%} {   0.42 76729  11.6%} ) 0 45657   0.0
0 690252   0.419   0.418   0.001  12.2% 0.000500  84153 288799.94 ({   0.00 0   0.0%} {   0.00 4068   0.6%} {   0.42 80085  11.6%} ) 0 47781   0.0
0 720276   0.418   0.418   0.002  12.2% 0.000500  87716 300854.50 ({   0.00 0   0.0%} {   0.00 4235   0.6%} {   0.42 83481  11.6%} ) 0 49788   0.0
0 750311   0.418   0.417   0.001  12.2% 0.000500  91254 313175.52 ({   0.00 0   0.0%} {   0.00 4377   0.6%} {   0.42 86877  11.6%} ) 0 51756   0.0
0 780319   0.417   0.418  -0.000  12.2% 0.000500  94946 325860.99 ({   0.00 0   0.0%} {   0.00 4526   0.6%} {   0.42 90420  11.6%} ) 0 53823   0.0
0 810319   0.418   0.418  -0.001  12.2% 0.000500  98684 338574.37 ({   0.00 0   0.0%} {   0.00 4740   0.6%} {   0.42 93944  11.6%} ) 0 55760   0.0
0 818738   0.418   0.418  -0.000  12.2% 0.000500  99718 342143.80 ({   0.00 0   0.0%} {   0.00 4791   0.6%} {   0.42 94927  11.6%} ) 0 56307   0.0
Finished on Fri Feb 01 13:56:51 Pacific Standard Time 2002
NN_saveWeights save_56.wgt
Loading from c:tmpFile17.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile17.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 822351 in 56197 Words. Total 822351 in 56197 words
Good+Bad: 822351 in 56197 words.
Total 822351 in 56197 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 822351 in 56197 Words. Total 822351 in 56197 words
Good+Bad: 822351 in 56197 words.
Tot Mem 132025 (kB)]
Data loading complete at Fri Feb 01 13:58:04 Pacific Standard Time 2002
m_bUseBadWords = 1
57 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30018   0.000   0.408  -1.000  11.9% 0.000500  3581  12261.60 ({   0.00 0   0.0%} {   0.00 185   0.6%} {   0.41 3396  11.3%} ) 0 2153   0.0
0 60018   0.408   0.418  -0.024  12.2% 0.000500  7344  25109.33 ({   0.00 0   0.0%} {   0.00 369   0.6%} {   0.42 6975  11.6%} ) 0 4289   0.0
0 90043   0.418   0.418   0.002  12.2% 0.000500  10969  37611.41 ({   0.00 0   0.0%} {   0.00 558   0.6%} {   0.42 10411  11.6%} ) 0 6433   0.0
0 120076   0.418   0.413   0.012  12.0% 0.000500  14468  49540.87 ({   0.00 0   0.0%} {   0.00 701   0.6%} {   0.41 13767  11.5%} ) 0 8561   0.0
0 150081   0.413   0.412   0.001  12.0% 0.000500  18054  61865.94 ({   0.00 0   0.0%} {   0.00 871   0.6%} {   0.41 17183  11.4%} ) 0 10645   0.0
0 180113   0.412   0.412  -0.000  12.1% 0.000500  21737  74270.68 ({   0.00 0   0.0%} {   0.00 1045   0.6%} {   0.41 20692  11.5%} ) 0 12692   0.0
0 210134   0.412   0.413  -0.002  12.1% 0.000500  25340  86791.75 ({   0.00 0   0.0%} {   0.00 1202   0.6%} {   0.41 24138  11.5%} ) 0 14784   0.0
0 240137   0.413   0.411   0.004  12.0% 0.000500  28933  98805.95 ({   0.00 0   0.0%} {   0.00 1394   0.6%} {   0.41 27539  11.5%} ) 0 16800   0.0
0 270140   0.411   0.412  -0.003  12.1% 0.000500  32609 111430.98 ({   0.00 0   0.0%} {   0.00 1575   0.6%} {   0.41 31034  11.5%} ) 0 18798   0.0
0 300141   0.412   0.411   0.004  12.0% 0.000500  36120 123279.07 ({   0.00 0   0.0%} {   0.00 1783   0.6%} {   0.41 34337  11.4%} ) 0 20838   0.0
0 330194   0.411   0.414  -0.007  12.1% 0.000500  39973 136641.75 ({   0.00 0   0.0%} {   0.00 1970   0.6%} {   0.41 38003  11.5%} ) 0 22894   0.0
0 360218   0.414   0.413   0.001  12.1% 0.000500  43524 148892.05 ({   0.00 0   0.0%} {   0.00 2118   0.6%} {   0.41 41406  11.5%} ) 0 24956   0.0
0 390229   0.413   0.414  -0.001  12.1% 0.000500  47251 161485.31 ({   0.00 0   0.0%} {   0.00 2328   0.6%} {   0.41 44923  11.5%} ) 0 27092   0.0
0 420233   0.414   0.415  -0.002  12.1% 0.000500  50923 174269.51 ({   0.00 0   0.0%} {   0.00 2527   0.6%} {   0.41 48396  11.5%} ) 0 29192   0.0
0 450236   0.415   0.414   0.001  12.1% 0.000500  54520 186505.96 ({   0.00 0   0.0%} {   0.00 2703   0.6%} {   0.41 51817  11.5%} ) 0 31178   0.0
0 480257   0.414   0.415  -0.003  12.1% 0.000500  58237 199537.67 ({   0.00 0   0.0%} {   0.00 2870   0.6%} {   0.41 55367  11.5%} ) 0 33337   0.0
0 510263   0.415   0.415   0.002  12.1% 0.000500  61728 211581.38 ({   0.00 0   0.0%} {   0.00 3032   0.6%} {   0.41 58696  11.5%} ) 0 35310   0.0
0 540264   0.415   0.415  -0.002  12.1% 0.000500  65430 224391.19 ({   0.00 0   0.0%} {   0.00 3225   0.6%} {   0.41 62205  11.5%} ) 0 37368   0.0
0 570270   0.415   0.416  -0.003  12.1% 0.000500  69147 237501.87 ({   0.00 0   0.0%} {   0.00 3397   0.6%} {   0.41 65750  11.5%} ) 0 39358   0.0
0 600270   0.416   0.417  -0.001  12.1% 0.000500  72880 250135.92 ({   0.00 0   0.0%} {   0.00 3575   0.6%} {   0.41 69305  11.5%} ) 0 41426   0.0
0 630278   0.417   0.418  -0.002  12.2% 0.000500  76657 263289.62 ({   0.00 0   0.0%} {   0.00 3740   0.6%} {   0.42 72917  11.6%} ) 0 43447   0.0
0 660295   0.418   0.418  -0.001  12.2% 0.000500  80376 276015.08 ({   0.00 0   0.0%} {   0.00 3928   0.6%} {   0.42 76448  11.6%} ) 0 45440   0.0
0 690319   0.418   0.419  -0.001  12.2% 0.000500  84160 288948.47 ({   0.00 0   0.0%} {   0.00 4107   0.6%} {   0.42 80053  11.6%} ) 0 47432   0.0
0 720349   0.419   0.419  -0.000  12.2% 0.000500  87900 301585.98 ({   0.00 0   0.0%} {   0.00 4302   0.6%} {   0.42 83598  11.6%} ) 0 49362   0.0
0 750358   0.419   0.419  -0.000  12.2% 0.000500  91584 314150.94 ({   0.00 0   0.0%} {   0.00 4468   0.6%} {   0.42 87116  11.6%} ) 0 51289   0.0
0 780362   0.419   0.418   0.002  12.2% 0.000500  95222 326222.83 ({   0.00 0   0.0%} {   0.00 4647   0.6%} {   0.42 90575  11.6%} ) 0 53315   0.0
0 810366   0.418   0.418   0.001  12.2% 0.000500  98765 338388.84 ({   0.00 0   0.0%} {   0.00 4816   0.6%} {   0.42 93949  11.6%} ) 0 55372   0.0
0 819337   0.418   0.418  -0.000  12.2% 0.000500  99866 342230.70 ({   0.00 0   0.0%} {   0.00 4862   0.6%} {   0.42 95004  11.6%} ) 0 55948   0.0
Finished on Fri Feb 01 17:33:51 Pacific Standard Time 2002
NN_saveWeights save_57.wgt
Loading from c:tmpFile18.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile18.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 814927 in 56139 Words. Total 814927 in 56139 words
Good+Bad: 814927 in 56139 words.
Total 814927 in 56139 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 814927 in 56139 Words. Total 814927 in 56139 words
Good+Bad: 814927 in 56139 words.
Tot Mem 130837 (kB)]
Data loading complete at Fri Feb 01 17:35:04 Pacific Standard Time 2002
m_bUseBadWords = 1
58 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30009   0.000   0.419  -1.000  12.3% 0.000500  3691  12569.95 ({   0.00 0   0.0%} {   0.00 198   0.7%} {   0.42 3493  11.6%} ) 0 2066   0.0
0 60037   0.419   0.413   0.013  12.1% 0.000500  7260  24815.86 ({   0.00 0   0.0%} {   0.00 380   0.6%} {   0.41 6880  11.5%} ) 0 4130   0.0
0 90038   0.413   0.408   0.012  11.9% 0.000500  10759  36760.32 ({   0.00 0   0.0%} {   0.00 556   0.6%} {   0.41 10203  11.3%} ) 0 6232   0.0
0 120048   0.408   0.410  -0.004  12.0% 0.000500  14428  49197.65 ({   0.00 0   0.0%} {   0.00 737   0.6%} {   0.41 13691  11.4%} ) 0 8272   0.0
0 150063   0.410   0.409   0.001  12.0% 0.000500  17973  61423.23 ({   0.00 0   0.0%} {   0.00 903   0.6%} {   0.41 17070  11.4%} ) 0 10365   0.0
0 180118   0.409   0.408   0.004  11.9% 0.000500  21441  73420.84 ({   0.00 0   0.0%} {   0.00 1070   0.6%} {   0.41 20371  11.3%} ) 0 12472   0.0
0 210142   0.408   0.408  -0.001  11.9% 0.000500  25062  85740.13 ({   0.00 0   0.0%} {   0.00 1230   0.6%} {   0.41 23832  11.3%} ) 0 14581   0.0
0 240142   0.408   0.410  -0.006  12.0% 0.000500  28836  98529.46 ({   0.00 0   0.0%} {   0.00 1419   0.6%} {   0.41 27417  11.4%} ) 0 16640   0.0
0 270150   0.410   0.410   0.000  12.0% 0.000500  32399 110793.11 ({   0.00 0   0.0%} {   0.00 1574   0.6%} {   0.41 30825  11.4%} ) 0 18702   0.0
0 300159   0.410   0.412  -0.003  12.1% 0.000500  36174 123523.24 ({   0.00 0   0.0%} {   0.00 1752   0.6%} {   0.41 34422  11.5%} ) 0 20856   0.0
0 330164   0.412   0.412  -0.002  12.0% 0.000500  39740 136124.12 ({   0.00 0   0.0%} {   0.00 1921   0.6%} {   0.41 37819  11.5%} ) 0 22932   0.0
0 360165   0.412   0.414  -0.004  12.1% 0.000500  43514 149155.17 ({   0.00 0   0.0%} {   0.00 2061   0.6%} {   0.41 41453  11.5%} ) 0 25070   0.0
0 390180   0.414   0.414   0.000  12.1% 0.000500  47120 161567.32 ({   0.00 0   0.0%} {   0.00 2259   0.6%} {   0.41 44861  11.5%} ) 0 27152   0.0
0 420187   0.414   0.415  -0.002  12.1% 0.000500  50821 174258.26 ({   0.00 0   0.0%} {   0.00 2436   0.6%} {   0.41 48385  11.5%} ) 0 29298   0.0
0 450200   0.415   0.415   0.000  12.1% 0.000500  54376 186704.41 ({   0.00 0   0.0%} {   0.00 2590   0.6%} {   0.41 51786  11.5%} ) 0 31366   0.0
0 480213   0.415   0.415   0.000  12.1% 0.000500  58039 199135.44 ({   0.00 0   0.0%} {   0.00 2764   0.6%} {   0.41 55275  11.5%} ) 0 33434   0.0
0 510232   0.415   0.413   0.003  12.1% 0.000500  61516 210935.95 ({   0.00 0   0.0%} {   0.00 2929   0.6%} {   0.41 58587  11.5%} ) 0 35539   0.0
0 540232   0.413   0.415  -0.003  12.1% 0.000500  65304 224029.27 ({   0.00 0   0.0%} {   0.00 3099   0.6%} {   0.41 62205  11.5%} ) 0 37607   0.0
0 570279   0.415   0.415  -0.001  12.1% 0.000500  68928 236636.33 ({   0.00 0   0.0%} {   0.00 3267   0.6%} {   0.41 65661  11.5%} ) 0 39605   0.0
0 600280   0.415   0.415  -0.001  12.1% 0.000500  72631 249343.76 ({   0.00 0   0.0%} {   0.00 3452   0.6%} {   0.41 69179  11.5%} ) 0 41707   0.0
0 630283   0.415   0.416  -0.001  12.1% 0.000500  76377 262012.25 ({   0.00 0   0.0%} {   0.00 3612   0.6%} {   0.41 72765  11.5%} ) 0 43778   0.0
0 660290   0.416   0.415   0.001  12.1% 0.000500  79909 274125.73 ({   0.00 0   0.0%} {   0.00 3771   0.6%} {   0.41 76138  11.5%} ) 0 45827   0.0
0 690323   0.415   0.415   0.002  12.1% 0.000500  83393 286146.03 ({   0.00 0   0.0%} {   0.00 3936   0.6%} {   0.41 79457  11.5%} ) 0 47803   0.0
0 720324   0.415   0.415  -0.002  12.1% 0.000500  87210 299226.37 ({   0.00 0   0.0%} {   0.00 4127   0.6%} {   0.41 83083  11.5%} ) 0 49788   0.0
0 750347   0.415   0.415   0.000  12.1% 0.000500  90816 311593.43 ({   0.00 0   0.0%} {   0.00 4313   0.6%} {   0.41 86503  11.5%} ) 0 51771   0.0
0 780351   0.415   0.414   0.002  12.1% 0.000500  94329 323355.58 ({   0.00 0   0.0%} {   0.00 4498   0.6%} {   0.41 89831  11.5%} ) 0 53765   0.0
0 810368   0.414   0.414   0.001  12.1% 0.000500  97902 335563.03 ({   0.00 0   0.0%} {   0.00 4658   0.6%} {   0.41 93244  11.5%} ) 0 55791   0.0
0 812079   0.414   0.414  -0.001  12.1% 0.000500  98161 336460.14 ({   0.00 0   0.0%} {   0.00 4670   0.6%} {   0.41 93491  11.5%} ) 0 55901   0.0
Finished on Fri Feb 01 21:08:53 Pacific Standard Time 2002
NN_saveWeights save_58.wgt
Loading from c:tmpFile19.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile19.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 818763 in 56217 Words. Total 818763 in 56217 words
Good+Bad: 818763 in 56217 words.
Total 818763 in 56217 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 818763 in 56217 Words. Total 818763 in 56217 words
Good+Bad: 818763 in 56217 words.
Tot Mem 131451 (kB)]
Data loading complete at Fri Feb 01 21:10:08 Pacific Standard Time 2002
m_bUseBadWords = 1
59 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30000   0.000   0.406  -1.000  11.9% 0.000500  3577  12175.70 ({   0.00 0   0.0%} {   0.00 178   0.6%} {   0.40 3399  11.3%} ) 0 2177   0.0
0 60006   0.406   0.412  -0.014  12.1% 0.000500  7285  24706.62 ({   0.00 0   0.0%} {   0.00 365   0.6%} {   0.41 6920  11.5%} ) 0 4308   0.0
0 90066   0.412   0.406   0.014  12.0% 0.000500  10819  36585.98 ({   0.00 0   0.0%} {   0.00 563   0.6%} {   0.40 10256  11.4%} ) 0 6363   0.0
0 120124   0.406   0.404   0.006  12.0% 0.000500  14372  48505.99 ({   0.00 0   0.0%} {   0.00 790   0.7%} {   0.40 13582  11.3%} ) 0 8444   0.0
0 150150   0.404   0.407  -0.008  12.0% 0.000500  18032  61094.95 ({   0.00 0   0.0%} {   0.00 970   0.6%} {   0.40 17062  11.4%} ) 0 10494   0.0
0 180153   0.407   0.410  -0.007  12.0% 0.000500  21677  73790.80 ({   0.00 0   0.0%} {   0.00 1093   0.6%} {   0.41 20584  11.4%} ) 0 12569   0.0
0 210160   0.410   0.411  -0.002  12.1% 0.000500  25349  86288.19 ({   0.00 0   0.0%} {   0.00 1302   0.6%} {   0.41 24047  11.4%} ) 0 14589   0.0
0 240161   0.411   0.413  -0.007  12.1% 0.000500  29077  99257.06 ({   0.00 0   0.0%} {   0.00 1504   0.6%} {   0.41 27573  11.5%} ) 0 16652   0.0
0 270194   0.413   0.412   0.003  12.1% 0.000500  32644 111332.57 ({   0.00 0   0.0%} {   0.00 1688   0.6%} {   0.41 30956  11.5%} ) 0 18682   0.0
0 300195   0.412   0.412   0.000  12.1% 0.000500  36248 123679.96 ({   0.00 0   0.0%} {   0.00 1846   0.6%} {   0.41 34402  11.5%} ) 0 20791   0.0
0 330198   0.412   0.413  -0.002  12.1% 0.000500  39910 136335.66 ({   0.00 0   0.0%} {   0.00 2006   0.6%} {   0.41 37904  11.5%} ) 0 22900   0.0
0 360248   0.413   0.413   0.000  12.1% 0.000500  43491 148697.83 ({   0.00 0   0.0%} {   0.00 2178   0.6%} {   0.41 41313  11.5%} ) 0 24994   0.0
0 390254   0.413   0.413  -0.002  12.1% 0.000500  47183 161325.56 ({   0.00 0   0.0%} {   0.00 2344   0.6%} {   0.41 44839  11.5%} ) 0 27113   0.0
0 420304   0.413   0.413   0.002  12.1% 0.000500  50788 173437.08 ({   0.00 0   0.0%} {   0.00 2516   0.6%} {   0.41 48272  11.5%} ) 0 29263   0.0
0 450306   0.413   0.413  -0.002  12.1% 0.000500  54518 186181.68 ({   0.00 0   0.0%} {   0.00 2710   0.6%} {   0.41 51808  11.5%} ) 0 31319   0.0
0 480318   0.413   0.414  -0.000  12.1% 0.000500  58153 198689.46 ({   0.00 0   0.0%} {   0.00 2915   0.6%} {   0.41 55238  11.5%} ) 0 33372   0.0
0 510323   0.414   0.414  -0.001  12.1% 0.000500  61824 211294.90 ({   0.00 0   0.0%} {   0.00 3094   0.6%} {   0.41 58730  11.5%} ) 0 35454   0.0
0 540350   0.414   0.414   0.000  12.1% 0.000500  65471 223726.68 ({   0.00 0   0.0%} {   0.00 3296   0.6%} {   0.41 62175  11.5%} ) 0 37453   0.0
0 570353   0.414   0.415  -0.002  12.1% 0.000500  69147 236505.21 ({   0.00 0   0.0%} {   0.00 3480   0.6%} {   0.41 65667  11.5%} ) 0 39522   0.0
0 600368   0.415   0.415  -0.001  12.1% 0.000500  72866 249322.39 ({   0.00 0   0.0%} {   0.00 3625   0.6%} {   0.41 69241  11.5%} ) 0 41502   0.0
0 630372   0.415   0.416  -0.001  12.2% 0.000500  76650 262126.36 ({   0.00 0   0.0%} {   0.00 3825   0.6%} {   0.41 72825  11.6%} ) 0 43536   0.0
0 660383   0.416   0.417  -0.002  12.2% 0.000500  80470 275090.75 ({   0.00 0   0.0%} {   0.00 4004   0.6%} {   0.41 76466  11.6%} ) 0 45554   0.0
0 690423   0.417   0.416   0.000  12.2% 0.000500  84162 287502.61 ({   0.00 0   0.0%} {   0.00 4186   0.6%} {   0.41 79976  11.6%} ) 0 47488   0.0
0 720450   0.416   0.417  -0.000  12.2% 0.000500  87757 300146.29 ({   0.00 0   0.0%} {   0.00 4371   0.6%} {   0.41 83386  11.6%} ) 0 49548   0.0
0 750464   0.417   0.416   0.001  12.2% 0.000500  91470 312477.91 ({   0.00 0   0.0%} {   0.00 4544   0.6%} {   0.41 86926  11.6%} ) 0 51597   0.0
0 780482   0.416   0.416  -0.000  12.2% 0.000500  95209 325060.60 ({   0.00 0   0.0%} {   0.00 4737   0.6%} {   0.41 90472  11.6%} ) 0 53588   0.0
0 810498   0.416   0.417  -0.001  12.2% 0.000500  98974 337957.94 ({   0.00 0   0.0%} {   0.00 4937   0.6%} {   0.41 94037  11.6%} ) 0 55614   0.0
0 815845   0.417   0.417   0.000  12.2% 0.000500  99592 340073.56 ({   0.00 0   0.0%} {   0.00 4962   0.6%} {   0.41 94630  11.6%} ) 0 55972   0.0
Finished on Sat Feb 02 00:44:56 Pacific Standard Time 2002
NN_saveWeights save_59.wgt
Loading from c:tmpFile20.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile20.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 824377 in 56509 Words. Total 824377 in 56509 words
Good+Bad: 824377 in 56509 words.
Total 824377 in 56509 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 824377 in 56509 Words. Total 824377 in 56509 words
Good+Bad: 824377 in 56509 words.
Tot Mem 132352 (kB)]
Data loading complete at Sat Feb 02 00:46:10 Pacific Standard Time 2002
m_bUseBadWords = 1
60 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30007   0.000   0.389  -1.000  11.5% 0.000500  3438  11682.42 ({   0.00 0   0.0%} {   0.00 178   0.6%} {   0.39 3260  10.9%} ) 0 2109   0.0
0 60010   0.389   0.398  -0.022  11.6% 0.000500  6967  23879.64 ({   0.00 0   0.0%} {   0.00 339   0.6%} {   0.40 6628  11.0%} ) 0 4239   0.0
0 90013   0.398   0.401  -0.009  11.7% 0.000500  10550  36128.31 ({   0.00 0   0.0%} {   0.00 521   0.6%} {   0.40 10029  11.1%} ) 0 6363   0.0
0 120016   0.401   0.399   0.006  11.7% 0.000500  13992  47898.12 ({   0.00 0   0.0%} {   0.00 703   0.6%} {   0.40 13289  11.1%} ) 0 8479   0.0
0 150054   0.399   0.400  -0.003  11.7% 0.000500  17547  60077.08 ({   0.00 0   0.0%} {   0.00 877   0.6%} {   0.40 16670  11.1%} ) 0 10592   0.0
0 180062   0.400   0.401  -0.001  11.7% 0.000500  21145  72185.23 ({   0.00 0   0.0%} {   0.00 1070   0.6%} {   0.40 20075  11.1%} ) 0 12691   0.0
0 210066   0.401   0.400   0.002  11.7% 0.000500  24671  84052.05 ({   0.00 0   0.0%} {   0.00 1231   0.6%} {   0.40 23440  11.2%} ) 0 14756   0.0
0 240084   0.400   0.400   0.000  11.8% 0.000500  28218  96044.65 ({   0.00 0   0.0%} {   0.00 1423   0.6%} {   0.40 26795  11.2%} ) 0 16761   0.0
0 270121   0.400   0.401  -0.002  11.7% 0.000500  31702 108262.65 ({   0.00 0   0.0%} {   0.00 1559   0.6%} {   0.40 30143  11.2%} ) 0 18824   0.0
0 300152   0.401   0.402  -0.002  11.8% 0.000500  35363 120577.49 ({   0.00 0   0.0%} {   0.00 1753   0.6%} {   0.40 33610  11.2%} ) 0 20886   0.0
0 330168   0.402   0.401   0.001  11.7% 0.000500  38789 132478.95 ({   0.00 0   0.0%} {   0.00 1931   0.6%} {   0.40 36858  11.2%} ) 0 22902   0.0
0 360169   0.401   0.402  -0.003  11.8% 0.000500  42374 144900.74 ({   0.00 0   0.0%} {   0.00 2103   0.6%} {   0.40 40271  11.2%} ) 0 24987   0.0
0 390170   0.402   0.402  -0.000  11.8% 0.000500  45969 157041.53 ({   0.00 0   0.0%} {   0.00 2302   0.6%} {   0.40 43667  11.2%} ) 0 27042   0.0
0 420170   0.402   0.403  -0.001  11.8% 0.000500  49574 169359.96 ({   0.00 0   0.0%} {   0.00 2494   0.6%} {   0.40 47080  11.2%} ) 0 29037   0.0
0 450178   0.403   0.406  -0.006  11.9% 0.000500  53415 182570.50 ({   0.00 0   0.0%} {   0.00 2702   0.6%} {   0.40 50713  11.3%} ) 0 31144   0.0
0 480185   0.406   0.406  -0.001  11.9% 0.000500  57001 194924.56 ({   0.00 0   0.0%} {   0.00 2851   0.6%} {   0.40 54150  11.3%} ) 0 33168   0.0
0 510195   0.406   0.407  -0.002  11.9% 0.000500  60729 207560.04 ({   0.00 0   0.0%} {   0.00 3020   0.6%} {   0.40 57709  11.3%} ) 0 35232   0.0
0 540248   0.407   0.408  -0.003  11.9% 0.000500  64435 220354.78 ({   0.00 0   0.0%} {   0.00 3208   0.6%} {   0.41 61227  11.3%} ) 0 37318   0.0
0 570248   0.408   0.408  -0.001  11.9% 0.000500  68053 232933.04 ({   0.00 0   0.0%} {   0.00 3383   0.6%} {   0.41 64670  11.3%} ) 0 39399   0.0
0 600248   0.408   0.409  -0.002  11.9% 0.000500  71679 245559.63 ({   0.00 0   0.0%} {   0.00 3567   0.6%} {   0.41 68112  11.3%} ) 0 41337   0.0
0 630257   0.409   0.409   0.001  11.9% 0.000500  75204 257572.28 ({   0.00 0   0.0%} {   0.00 3747   0.6%} {   0.41 71457  11.3%} ) 0 43329   0.0
0 660276   0.409   0.409  -0.001  11.9% 0.000500  78869 270045.32 ({   0.00 0   0.0%} {   0.00 3889   0.6%} {   0.41 74980  11.4%} ) 0 45349   0.0
0 690285   0.409   0.409  -0.000  11.9% 0.000500  82464 282389.62 ({   0.00 0   0.0%} {   0.00 4095   0.6%} {   0.41 78369  11.4%} ) 0 47331   0.0
0 720293   0.409   0.409  -0.000  11.9% 0.000500  86020 294721.77 ({   0.00 0   0.0%} {   0.00 4237   0.6%} {   0.41 81783  11.4%} ) 0 49322   0.0
0 750297   0.409   0.409   0.000  11.9% 0.000500  89572 306936.87 ({   0.00 0   0.0%} {   0.00 4414   0.6%} {   0.41 85158  11.3%} ) 0 51402   0.0
0 780300   0.409   0.409   0.001  11.9% 0.000500  93083 318960.43 ({   0.00 0   0.0%} {   0.00 4590   0.6%} {   0.41 88493  11.3%} ) 0 53393   0.0
0 810300   0.409   0.409  -0.001  11.9% 0.000500  96709 331493.52 ({   0.00 0   0.0%} {   0.00 4749   0.6%} {   0.41 91960  11.3%} ) 0 55493   0.0
0 821808   0.409   0.409   0.000  11.9% 0.000500  98085 336199.59 ({   0.00 0   0.0%} {   0.00 4822   0.6%} {   0.41 93263  11.3%} ) 0 56271   0.0
Finished on Sat Feb 02 04:22:27 Pacific Standard Time 2002
NN_saveWeights save_60.wgt
Loading from c:tmpFile21.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile21.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 813948 in 56086 Words. Total 813948 in 56086 words
Good+Bad: 813948 in 56086 words.
Total 813948 in 56086 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 813948 in 56086 Words. Total 813948 in 56086 words
Good+Bad: 813948 in 56086 words.
Tot Mem 130680 (kB)]
Data loading complete at Sat Feb 02 04:23:40 Pacific Standard Time 2002
m_bUseBadWords = 1
61 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30049   0.000   0.413  -1.000  12.0% 0.000500  3612  12414.13 ({   0.00 0   0.0%} {   0.00 160   0.5%} {   0.41 3452  11.5%} ) 0 2108   0.0
0 60049   0.413   0.417  -0.009  12.1% 0.000500  7290  25040.27 ({   0.00 0   0.0%} {   0.00 351   0.6%} {   0.41 6939  11.6%} ) 0 4188   0.0
0 90050   0.417   0.416   0.002  12.1% 0.000500  10919  37458.05 ({   0.00 0   0.0%} {   0.00 540   0.6%} {   0.41 10379  11.5%} ) 0 6270   0.0
0 120051   0.416   0.416  -0.001  12.1% 0.000500  14543  49965.16 ({   0.00 0   0.0%} {   0.00 721   0.6%} {   0.41 13822  11.5%} ) 0 8391   0.0
0 150058   0.416   0.416   0.001  12.1% 0.000500  18128  62399.84 ({   0.00 0   0.0%} {   0.00 884   0.6%} {   0.41 17244  11.5%} ) 0 10449   0.0
0 180063   0.416   0.416   0.000  12.1% 0.000500  21763  74874.23 ({   0.00 0   0.0%} {   0.00 1071   0.6%} {   0.41 20692  11.5%} ) 0 12496   0.0
0 210072   0.416   0.416  -0.001  12.1% 0.000500  25455  87447.16 ({   0.00 0   0.0%} {   0.00 1262   0.6%} {   0.41 24193  11.5%} ) 0 14529   0.0
0 240074   0.416   0.414   0.005  12.1% 0.000500  28965  99465.09 ({   0.00 0   0.0%} {   0.00 1422   0.6%} {   0.41 27543  11.5%} ) 0 16498   0.0
0 270110   0.414   0.414   0.001  12.0% 0.000500  32463 111765.51 ({   0.00 0   0.0%} {   0.00 1585   0.6%} {   0.41 30878  11.4%} ) 0 18546   0.0
0 300112   0.414   0.413   0.002  12.0% 0.000500  35979 123956.25 ({   0.00 0   0.0%} {   0.00 1776   0.6%} {   0.41 34203  11.4%} ) 0 20628   0.0
0 330125   0.413   0.413   0.001  12.0% 0.000500  39649 136266.87 ({   0.00 0   0.0%} {   0.00 1979   0.6%} {   0.41 37670  11.4%} ) 0 22761   0.0
0 360125   0.413   0.411   0.003  12.0% 0.000500  43157 148167.60 ({   0.00 0   0.0%} {   0.00 2155   0.6%} {   0.41 41002  11.4%} ) 0 24833   0.0
0 390137   0.411   0.412  -0.001  12.0% 0.000500  46802 160719.04 ({   0.00 0   0.0%} {   0.00 2319   0.6%} {   0.41 44483  11.4%} ) 0 26914   0.0
0 420143   0.412   0.412   0.000  12.0% 0.000500  50306 173064.56 ({   0.00 0   0.0%} {   0.00 2481   0.6%} {   0.41 47825  11.4%} ) 0 28892   0.0
0 450145   0.412   0.412  -0.001  12.0% 0.000500  54073 185655.48 ({   0.00 0   0.0%} {   0.00 2665   0.6%} {   0.41 51408  11.4%} ) 0 31088   0.0
0 480146   0.412   0.413  -0.001  12.0% 0.000500  57752 198277.79 ({   0.00 0   0.0%} {   0.00 2827   0.6%} {   0.41 54925  11.4%} ) 0 33130   0.0
0 510156   0.413   0.413   0.001  12.0% 0.000500  61220 210473.55 ({   0.00 0   0.0%} {   0.00 2976   0.6%} {   0.41 58244  11.4%} ) 0 35226   0.0
0 540181   0.413   0.413  -0.001  12.0% 0.000500  64822 223071.11 ({   0.00 0   0.0%} {   0.00 3150   0.6%} {   0.41 61672  11.4%} ) 0 37325   0.0
0 570182   0.413   0.413  -0.001  12.0% 0.000500  68467 235644.29 ({   0.00 0   0.0%} {   0.00 3311   0.6%} {   0.41 65156  11.4%} ) 0 39423   0.0
0 600183   0.413   0.413   0.001  12.0% 0.000500  72001 247767.81 ({   0.00 0   0.0%} {   0.00 3454   0.6%} {   0.41 68547  11.4%} ) 0 41522   0.0
0 630207   0.413   0.412   0.002  12.0% 0.000500  75521 259537.40 ({   0.00 0   0.0%} {   0.00 3647   0.6%} {   0.41 71874  11.4%} ) 0 43582   0.0
0 660242   0.412   0.412  -0.001  12.0% 0.000500  79234 272125.09 ({   0.00 0   0.0%} {   0.00 3826   0.6%} {   0.41 75408  11.4%} ) 0 45586   0.0
0 690245   0.412   0.413  -0.001  12.0% 0.000500  82948 284762.92 ({   0.00 0   0.0%} {   0.00 4004   0.6%} {   0.41 78944  11.4%} ) 0 47616   0.0
0 720264   0.413   0.412   0.001  12.0% 0.000500  86568 296884.19 ({   0.00 0   0.0%} {   0.00 4190   0.6%} {   0.41 82378  11.4%} ) 0 49664   0.0
0 750264   0.412   0.412   0.002  12.0% 0.000500  90001 308742.30 ({   0.00 0   0.0%} {   0.00 4368   0.6%} {   0.41 85633  11.4%} ) 0 51714   0.0
0 780264   0.412   0.411   0.000  12.0% 0.000500  93561 320930.69 ({   0.00 0   0.0%} {   0.00 4534   0.6%} {   0.41 89027  11.4%} ) 0 53792   0.0
0 810297   0.411   0.413  -0.003  12.0% 0.000500  97373 334397.99 ({   0.00 0   0.0%} {   0.00 4719   0.6%} {   0.41 92654  11.4%} ) 0 55778   0.0
0 811485   0.413   0.413   0.000  12.0% 0.000500  97507 334797.92 ({   0.00 0   0.0%} {   0.00 4730   0.6%} {   0.41 92777  11.4%} ) 0 55849   0.0
Finished on Sat Feb 02 07:57:14 Pacific Standard Time 2002
NN_saveWeights save_61.wgt
Loading from c:tmpFile22.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile22.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 820614 in 56246 Words. Total 820614 in 56246 words
Good+Bad: 820614 in 56246 words.
Total 820614 in 56246 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 820614 in 56246 Words. Total 820614 in 56246 words
Good+Bad: 820614 in 56246 words.
Tot Mem 131748 (kB)]
Data loading complete at Sat Feb 02 07:58:27 Pacific Standard Time 2002
m_bUseBadWords = 1
62 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30058   0.000   0.417  -1.000  12.5% 0.000500  3747  12542.16 ({   0.00 0   0.0%} {   0.00 181   0.6%} {   0.41 3566  11.9%} ) 0 2183   0.0
0 60089   0.417   0.416   0.002  12.3% 0.000500  7363  25014.47 ({   0.00 0   0.0%} {   0.00 329   0.5%} {   0.41 7034  11.7%} ) 0 4337   0.0
0 90123   0.416   0.419  -0.006  12.2% 0.000500  10993  37747.27 ({   0.00 0   0.0%} {   0.00 486   0.5%} {   0.42 10507  11.7%} ) 0 6453   0.0
0 120131   0.419   0.416   0.006  12.1% 0.000500  14577  50031.27 ({   0.00 0   0.0%} {   0.00 652   0.5%} {   0.41 13925  11.6%} ) 0 8543   0.0
0 150133   0.416   0.419  -0.005  12.1% 0.000500  18175  62847.32 ({   0.00 0   0.0%} {   0.00 837   0.6%} {   0.42 17338  11.5%} ) 0 10565   0.0
0 180159   0.419   0.417   0.004  12.1% 0.000500  21801  75138.39 ({   0.00 0   0.0%} {   0.00 1037   0.6%} {   0.41 20764  11.5%} ) 0 12648   0.0
0 210161   0.417   0.419  -0.004  12.2% 0.000500  25592  88040.64 ({   0.00 0   0.0%} {   0.00 1213   0.6%} {   0.42 24379  11.6%} ) 0 14688   0.0
0 240162   0.419   0.417   0.003  12.1% 0.000500  29172 100267.33 ({   0.00 0   0.0%} {   0.00 1377   0.6%} {   0.42 27795  11.6%} ) 0 16778   0.0
0 270162   0.417   0.419  -0.003  12.2% 0.000500  32949 113169.65 ({   0.00 0   0.0%} {   0.00 1553   0.6%} {   0.42 31396  11.6%} ) 0 18780   0.0
0 300170   0.419   0.416   0.007  12.1% 0.000500  36385 124911.26 ({   0.00 0   0.0%} {   0.00 1724   0.6%} {   0.41 34661  11.5%} ) 0 20887   0.0
0 330207   0.416   0.416  -0.000  12.1% 0.000500  39985 137433.69 ({   0.00 0   0.0%} {   0.00 1888   0.6%} {   0.41 38097  11.5%} ) 0 22981   0.0
0 360227   0.416   0.416  -0.001  12.1% 0.000500  43654 150004.66 ({   0.00 0   0.0%} {   0.00 2038   0.6%} {   0.41 41616  11.6%} ) 0 25021   0.0
0 390232   0.416   0.415   0.004  12.1% 0.000500  47172 161843.32 ({   0.00 0   0.0%} {   0.00 2238   0.6%} {   0.41 44934  11.5%} ) 0 27168   0.0
0 420234   0.415   0.414   0.002  12.1% 0.000500  50767 173953.13 ({   0.00 0   0.0%} {   0.00 2404   0.6%} {   0.41 48363  11.5%} ) 0 29285   0.0
0 450247   0.414   0.414   0.001  12.1% 0.000500  54339 186275.52 ({   0.00 0   0.0%} {   0.00 2586   0.6%} {   0.41 51753  11.5%} ) 0 31279   0.0
0 480279   0.414   0.412   0.004  12.0% 0.000500  57761 197839.27 ({   0.00 0   0.0%} {   0.00 2757   0.6%} {   0.41 55004  11.5%} ) 0 33334   0.0
0 510302   0.412   0.412   0.001  12.0% 0.000500  61303 210012.91 ({   0.00 0   0.0%} {   0.00 2927   0.6%} {   0.41 58376  11.4%} ) 0 35415   0.0
0 540312   0.412   0.412  -0.002  12.0% 0.000500  65027 222811.40 ({   0.00 0   0.0%} {   0.00 3082   0.6%} {   0.41 61945  11.5%} ) 0 37408   0.0
0 570316   0.412   0.412   0.000  12.0% 0.000500  68682 235151.83 ({   0.00 0   0.0%} {   0.00 3268   0.6%} {   0.41 65414  11.5%} ) 0 39483   0.0
0 600316   0.412   0.412   0.001  12.0% 0.000500  72243 247250.03 ({   0.00 0   0.0%} {   0.00 3449   0.6%} {   0.41 68794  11.5%} ) 0 41568   0.0
0 630318   0.412   0.412  -0.000  12.0% 0.000500  75904 259714.71 ({   0.00 0   0.0%} {   0.00 3630   0.6%} {   0.41 72274  11.5%} ) 0 43524   0.0
0 660327   0.412   0.413  -0.002  12.1% 0.000500  79577 272521.87 ({   0.00 0   0.0%} {   0.00 3819   0.6%} {   0.41 75758  11.5%} ) 0 45539   0.0
0 690343   0.413   0.413  -0.001  12.1% 0.000500  83270 285191.63 ({   0.00 0   0.0%} {   0.00 3990   0.6%} {   0.41 79280  11.5%} ) 0 47501   0.0
0 720367   0.413   0.413  -0.000  12.1% 0.000500  86943 297703.77 ({   0.00 0   0.0%} {   0.00 4145   0.6%} {   0.41 82798  11.5%} ) 0 49472   0.0
0 750378   0.413   0.413   0.000  12.1% 0.000500  90473 310041.36 ({   0.00 0   0.0%} {   0.00 4334   0.6%} {   0.41 86139  11.5%} ) 0 51439   0.0
0 780395   0.413   0.412   0.002  12.0% 0.000500  93946 321810.04 ({   0.00 0   0.0%} {   0.00 4476   0.6%} {   0.41 89470  11.5%} ) 0 53470   0.0
0 810398   0.412   0.412   0.000  12.0% 0.000500  97550 334123.81 ({   0.00 0   0.0%} {   0.00 4641   0.6%} {   0.41 92909  11.5%} ) 0 55491   0.0
0 818156   0.412   0.412   0.000  12.0% 0.000500  98397 337210.54 ({   0.00 0   0.0%} {   0.00 4686   0.6%} {   0.41 93711  11.5%} ) 0 56024   0.0
Finished on Sat Feb 02 11:33:50 Pacific Standard Time 2002
NN_saveWeights save_62.wgt
Loading from c:tmpFile23.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile23.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 818131 in 56401 Words. Total 818131 in 56401 words
Good+Bad: 818131 in 56401 words.
Total 818131 in 56401 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 818131 in 56401 Words. Total 818131 in 56401 words
Good+Bad: 818131 in 56401 words.
Tot Mem 131352 (kB)]
Data loading complete at Sat Feb 02 11:35:06 Pacific Standard Time 2002
m_bUseBadWords = 1
63 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30025   0.000   0.390  -1.000  11.4% 0.000500  3428  11705.48 ({   0.00 0   0.0%} {   0.00 170   0.6%} {   0.39 3258  10.9%} ) 0 2146   0.0
0 60029   0.390   0.406  -0.039  11.8% 0.000500  7081  24364.46 ({   0.00 0   0.0%} {   0.00 352   0.6%} {   0.40 6729  11.2%} ) 0 4286   0.0
0 90045   0.406   0.407  -0.003  11.9% 0.000500  10711  36665.36 ({   0.00 0   0.0%} {   0.00 554   0.6%} {   0.40 10157  11.3%} ) 0 6482   0.0
0 120049   0.407   0.413  -0.014  12.0% 0.000500  14433  49564.65 ({   0.00 0   0.0%} {   0.00 733   0.6%} {   0.41 13700  11.4%} ) 0 8638   0.0
0 150063   0.413   0.411   0.004  12.0% 0.000500  18005  61710.06 ({   0.00 0   0.0%} {   0.00 897   0.6%} {   0.41 17108  11.4%} ) 0 10768   0.0
0 180066   0.411   0.410   0.004  12.0% 0.000500  21524  73758.48 ({   0.00 0   0.0%} {   0.00 1058   0.6%} {   0.41 20466  11.4%} ) 0 12840   0.0
0 210073   0.410   0.407   0.006  11.9% 0.000500  24952  85535.79 ({   0.00 0   0.0%} {   0.00 1204   0.6%} {   0.40 23748  11.3%} ) 0 14914   0.0
0 240100   0.407   0.406   0.002  11.9% 0.000500  28488  97573.52 ({   0.00 0   0.0%} {   0.00 1365   0.6%} {   0.40 27123  11.3%} ) 0 16980   0.0
0 270100   0.406   0.407  -0.003  11.9% 0.000500  32118 110053.82 ({   0.00 0   0.0%} {   0.00 1537   0.6%} {   0.41 30581  11.3%} ) 0 19097   0.0
0 300113   0.407   0.405   0.005  11.8% 0.000500  35455 121655.93 ({   0.00 0   0.0%} {   0.00 1689   0.6%} {   0.40 33766  11.3%} ) 0 21132   0.0
0 330113   0.405   0.406  -0.002  11.9% 0.000500  39153 134140.12 ({   0.00 0   0.0%} {   0.00 1917   0.6%} {   0.40 37236  11.3%} ) 0 23275   0.0
0 360145   0.406   0.407  -0.001  11.9% 0.000500  42698 146484.28 ({   0.00 0   0.0%} {   0.00 2081   0.6%} {   0.40 40617  11.3%} ) 0 25377   0.0
0 390186   0.407   0.408  -0.002  11.9% 0.000500  46305 159009.62 ({   0.00 0   0.0%} {   0.00 2220   0.6%} {   0.41 44085  11.3%} ) 0 27455   0.0
0 420189   0.408   0.409  -0.003  11.9% 0.000500  50010 171824.33 ({   0.00 0   0.0%} {   0.00 2396   0.6%} {   0.41 47614  11.3%} ) 0 29568   0.0
0 450199   0.409   0.410  -0.002  11.9% 0.000500  53720 184456.43 ({   0.00 0   0.0%} {   0.00 2547   0.6%} {   0.41 51173  11.4%} ) 0 31581   0.0
0 480201   0.410   0.410   0.000  12.0% 0.000500  57423 196727.63 ({   0.00 0   0.0%} {   0.00 2698   0.6%} {   0.41 54725  11.4%} ) 0 33641   0.0
0 510203   0.410   0.410   0.000  12.0% 0.000500  61010 208940.34 ({   0.00 0   0.0%} {   0.00 2855   0.6%} {   0.41 58155  11.4%} ) 0 35628   0.0
0 540209   0.410   0.410  -0.001  12.0% 0.000500  64618 221389.19 ({   0.00 0   0.0%} {   0.00 2995   0.6%} {   0.41 61623  11.4%} ) 0 37719   0.0
0 570215   0.410   0.409   0.002  11.9% 0.000500  68130 233307.77 ({   0.00 0   0.0%} {   0.00 3177   0.6%} {   0.41 64953  11.4%} ) 0 39841   0.0
0 600226   0.409   0.409  -0.000  11.9% 0.000500  71702 245623.11 ({   0.00 0   0.0%} {   0.00 3378   0.6%} {   0.41 68324  11.4%} ) 0 41853   0.0
0 630227   0.409   0.410  -0.001  12.0% 0.000500  75342 258217.61 ({   0.00 0   0.0%} {   0.00 3575   0.6%} {   0.41 71767  11.4%} ) 0 43849   0.0
0 660237   0.410   0.409   0.001  11.9% 0.000500  78769 270155.29 ({   0.00 0   0.0%} {   0.00 3762   0.6%} {   0.41 75007  11.4%} ) 0 45815   0.0
0 690249   0.409   0.409   0.002  11.9% 0.000500  82182 282005.06 ({   0.00 0   0.0%} {   0.00 3945   0.6%} {   0.41 78237  11.3%} ) 0 47824   0.0
0 720256   0.409   0.409  -0.001  11.9% 0.000500  85812 294426.42 ({   0.00 0   0.0%} {   0.00 4128   0.6%} {   0.41 81684  11.3%} ) 0 49844   0.0
0 750261   0.409   0.409  -0.000  11.9% 0.000500  89438 306756.90 ({   0.00 0   0.0%} {   0.00 4285   0.6%} {   0.41 85153  11.3%} ) 0 51785   0.0
0 780289   0.409   0.409  -0.000  11.9% 0.000500  92978 319098.03 ({   0.00 0   0.0%} {   0.00 4443   0.6%} {   0.41 88535  11.3%} ) 0 53810   0.0
0 810309   0.409   0.409  -0.001  11.9% 0.000500  96694 331786.82 ({   0.00 0   0.0%} {   0.00 4603   0.6%} {   0.41 92091  11.4%} ) 0 55825   0.0
0 815652   0.409   0.410  -0.000  11.9% 0.000500  97329 334010.72 ({   0.00 0   0.0%} {   0.00 4650   0.6%} {   0.41 92679  11.4%} ) 0 56192   0.0
Finished on Sat Feb 02 15:09:48 Pacific Standard Time 2002
NN_saveWeights save_63.wgt
Loading from c:tmpFile24.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile24.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 815574 in 56101 Words. Total 815574 in 56101 words
Good+Bad: 815574 in 56101 words.
Total 815574 in 56101 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 815574 in 56101 Words. Total 815574 in 56101 words
Good+Bad: 815574 in 56101 words.
Tot Mem 130940 (kB)]
Data loading complete at Sat Feb 02 15:11:01 Pacific Standard Time 2002
m_bUseBadWords = 1
64 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30009   0.000   0.410  -1.000  12.0% 0.000500  3612  12293.23 ({   0.00 0   0.0%} {   0.00 149   0.5%} {   0.41 3463  11.5%} ) 0 2175   0.0
0 60038   0.410   0.399   0.027  11.7% 0.000500  7053  23953.54 ({   0.00 0   0.0%} {   0.00 320   0.5%} {   0.40 6733  11.2%} ) 0 4273   0.0
0 90063   0.399   0.403  -0.009  11.7% 0.000500  10562  36266.84 ({   0.00 0   0.0%} {   0.00 457   0.5%} {   0.40 10105  11.2%} ) 0 6396   0.0
0 120093   0.403   0.406  -0.009  11.8% 0.000500  14195  48779.05 ({   0.00 0   0.0%} {   0.00 643   0.5%} {   0.40 13552  11.3%} ) 0 8463   0.0
0 150093   0.406   0.410  -0.009  11.9% 0.000500  17871  61491.88 ({   0.00 0   0.0%} {   0.00 857   0.6%} {   0.41 17014  11.3%} ) 0 10537   0.0
0 180115   0.410   0.415  -0.012  12.0% 0.000500  21664  74659.02 ({   0.00 0   0.0%} {   0.00 1063   0.6%} {   0.41 20601  11.4%} ) 0 12594   0.0
0 210116   0.415   0.412   0.007  12.0% 0.000500  25191  86464.36 ({   0.00 0   0.0%} {   0.00 1231   0.6%} {   0.41 23960  11.4%} ) 0 14621   0.0
0 240125   0.412   0.411   0.001  12.0% 0.000500  28767  98721.25 ({   0.00 0   0.0%} {   0.00 1432   0.6%} {   0.41 27335  11.4%} ) 0 16639   0.0
0 270138   0.411   0.411   0.000  12.0% 0.000500  32350 111037.58 ({   0.00 0   0.0%} {   0.00 1592   0.6%} {   0.41 30758  11.4%} ) 0 18729   0.0
0 300141   0.411   0.413  -0.006  12.0% 0.000500  35987 124088.17 ({   0.00 0   0.0%} {   0.00 1767   0.6%} {   0.41 34220  11.4%} ) 0 20842   0.0
0 330168   0.413   0.413   0.002  12.0% 0.000500  39493 136223.36 ({   0.00 0   0.0%} {   0.00 1930   0.6%} {   0.41 37563  11.4%} ) 0 23005   0.0
0 360196   0.413   0.412   0.002  12.0% 0.000500  43094 148304.62 ({   0.00 0   0.0%} {   0.00 2126   0.6%} {   0.41 40968  11.4%} ) 0 25108   0.0
0 390199   0.412   0.413  -0.003  12.0% 0.000500  46828 161147.05 ({   0.00 0   0.0%} {   0.00 2284   0.6%} {   0.41 44544  11.4%} ) 0 27236   0.0
0 420243   0.413   0.412   0.003  12.0% 0.000500  50315 172965.82 ({   0.00 0   0.0%} {   0.00 2459   0.6%} {   0.41 47856  11.4%} ) 0 29341   0.0
0 450277   0.412   0.411   0.001  11.9% 0.000500  53774 185084.07 ({   0.00 0   0.0%} {   0.00 2613   0.6%} {   0.41 51161  11.4%} ) 0 31446   0.0
0 480277   0.411   0.411  -0.000  12.0% 0.000500  57411 197509.32 ({   0.00 0   0.0%} {   0.00 2757   0.6%} {   0.41 54654  11.4%} ) 0 33424   0.0
0 510286   0.411   0.412  -0.002  12.0% 0.000500  61146 210216.53 ({   0.00 0   0.0%} {   0.00 2937   0.6%} {   0.41 58209  11.4%} ) 0 35473   0.0
0 540291   0.412   0.412  -0.000  12.0% 0.000500  64762 222631.35 ({   0.00 0   0.0%} {   0.00 3090   0.6%} {   0.41 61672  11.4%} ) 0 37541   0.0
0 570309   0.412   0.412   0.001  12.0% 0.000500  68344 234790.53 ({   0.00 0   0.0%} {   0.00 3249   0.6%} {   0.41 65095  11.4%} ) 0 39530   0.0
0 600313   0.412   0.412  -0.002  12.0% 0.000500  72069 247542.87 ({   0.00 0   0.0%} {   0.00 3449   0.6%} {   0.41 68620  11.4%} ) 0 41582   0.0
0 630322   0.412   0.412   0.000  12.0% 0.000500  75665 259916.71 ({   0.00 0   0.0%} {   0.00 3606   0.6%} {   0.41 72059  11.4%} ) 0 43675   0.0
0 660323   0.412   0.413  -0.001  12.0% 0.000500  79331 272570.76 ({   0.00 0   0.0%} {   0.00 3790   0.6%} {   0.41 75541  11.4%} ) 0 45591   0.0
0 690350   0.413   0.412   0.001  12.0% 0.000500  82835 284546.32 ({   0.00 0   0.0%} {   0.00 3936   0.6%} {   0.41 78899  11.4%} ) 0 47528   0.0
0 720384   0.412   0.412  -0.000  12.0% 0.000500  86494 296992.04 ({   0.00 0   0.0%} {   0.00 4122   0.6%} {   0.41 82372  11.4%} ) 0 49556   0.0
0 750447   0.412   0.413  -0.001  12.0% 0.000500  90183 309798.37 ({   0.00 0   0.0%} {   0.00 4279   0.6%} {   0.41 85904  11.4%} ) 0 51613   0.0
0 780453   0.413   0.412   0.003  12.0% 0.000500  93546 321372.35 ({   0.00 0   0.0%} {   0.00 4461   0.6%} {   0.41 89085  11.4%} ) 0 53592   0.0
0 810477   0.412   0.412  -0.000  12.0% 0.000500  97104 333766.30 ({   0.00 0   0.0%} {   0.00 4645   0.6%} {   0.41 92459  11.4%} ) 0 55664   0.0
0 812738   0.412   0.412   0.000  12.0% 0.000500  97360 334627.56 ({   0.00 0   0.0%} {   0.00 4655   0.6%} {   0.41 92705  11.4%} ) 0 55841   0.0
Finished on Sat Feb 02 18:45:00 Pacific Standard Time 2002
NN_saveWeights save_64.wgt
Start sampling from 22 files. Starting at Sat Feb 02 18:45:01 Pacific Standard Time 2002
Sample ../../strictc.nni into 25  components with fraction 1
36799 samples, 37 features, 3 targettypes
Reading 36799 samples, writing with prob 1.000000...
36799 samples out of 36799 chosen. 346946 Segments out of 346946
Generated   1482 samples   13883 segments into file c:tmpFile00
Generated   1528 samples   14470 segments into file c:tmpFile01
Generated   1525 samples   14013 segments into file c:tmpFile02
Generated   1381 samples   12391 segments into file c:tmpFile03
Generated   1509 samples   14183 segments into file c:tmpFile04
Generated   1472 samples   13891 segments into file c:tmpFile05
Generated   1484 samples   13662 segments into file c:tmpFile06
Generated   1423 samples   13108 segments into file c:tmpFile07
Generated   1466 samples   13594 segments into file c:tmpFile08
Generated   1405 samples   13346 segments into file c:tmpFile09
Generated   1500 samples   14412 segments into file c:tmpFile10
Generated   1457 samples   13977 segments into file c:tmpFile11
Generated   1450 samples   13851 segments into file c:tmpFile12
Generated   1468 samples   14013 segments into file c:tmpFile13
Generated   1432 samples   13937 segments into file c:tmpFile14
Generated   1483 samples   14013 segments into file c:tmpFile15
Generated   1579 samples   15079 segments into file c:tmpFile16
Generated   1528 samples   14325 segments into file c:tmpFile17
Generated   1500 samples   14126 segments into file c:tmpFile18
Generated   1454 samples   14115 segments into file c:tmpFile19
Generated   1495 samples   14338 segments into file c:tmpFile20
Generated   1499 samples   14073 segments into file c:tmpFile21
Generated   1408 samples   13248 segments into file c:tmpFile22
Generated   1411 samples   13213 segments into file c:tmpFile23
Generated   1460 samples   13685 segments into file c:tmpFile24
Sample ../../strictp.nni into 25  components with fraction 1
122708 samples, 37 features, 3 targettypes
Reading 1460 samples, writing with prob 1.000000...
122708 samples out of 122708 chosen. 1137967 Segments out of 1137967
Generated   6379 samples   45526 segments into file c:tmpFile00
Generated   6444 samples   44624 segments into file c:tmpFile01
Generated   6486 samples   45663 segments into file c:tmpFile02
Generated   6238 samples   45085 segments into file c:tmpFile03
Generated   6414 samples   45884 segments into file c:tmpFile04
Generated   6381 samples   45043 segments into file c:tmpFile05
Generated   6496 samples   45936 segments into file c:tmpFile06
Generated   6236 samples   44939 segments into file c:tmpFile07
Generated   6416 samples   46432 segments into file c:tmpFile08
Generated   6342 samples   45315 segments into file c:tmpFile09
Generated   6421 samples   45910 segments into file c:tmpFile10
Generated   6371 samples   46018 segments into file c:tmpFile11
Generated   6307 samples   44844 segments into file c:tmpFile12
Generated   6316 samples   44751 segments into file c:tmpFile13
Generated   6309 samples   45619 segments into file c:tmpFile14
Generated   6351 samples   44671 segments into file c:tmpFile15
Generated   6434 samples   44965 segments into file c:tmpFile16
Generated   6429 samples   45469 segments into file c:tmpFile17
Generated   6466 samples   46016 segments into file c:tmpFile18
Generated   6299 samples   45572 segments into file c:tmpFile19
Generated   6494 samples   46239 segments into file c:tmpFile20
Generated   6413 samples   45680 segments into file c:tmpFile21
Generated   6403 samples   46424 segments into file c:tmpFile22
Generated   6367 samples   45782 segments into file c:tmpFile23
Generated   6295 samples   45560 segments into file c:tmpFile24
Sample ../../restc.nni into 25  components with fraction 0.25
225990 samples, 37 features, 3 targettypes
Reading 6295 samples, writing with prob 0.250000...
56512 samples out of 225990 chosen. 534944 Segments out of 2144224
Generated   8608 samples   21608 segments into file c:tmpFile00
Generated   8602 samples   20807 segments into file c:tmpFile01
Generated   8759 samples   21368 segments into file c:tmpFile02
Generated   8519 samples   22056 segments into file c:tmpFile03
Generated   8678 samples   21344 segments into file c:tmpFile04
Generated   8666 samples   21341 segments into file c:tmpFile05
Generated   8700 samples   20529 segments into file c:tmpFile06
Generated   8547 samples   21553 segments into file c:tmpFile07
Generated   8698 samples   21547 segments into file c:tmpFile08
Generated   8618 samples   21840 segments into file c:tmpFile09
Generated   8708 samples   21877 segments into file c:tmpFile10
Generated   8625 samples   21641 segments into file c:tmpFile11
Generated   8565 samples   21462 segments into file c:tmpFile12
Generated   8541 samples   20753 segments into file c:tmpFile13
Generated   8559 samples   21255 segments into file c:tmpFile14
Generated   8557 samples   20547 segments into file c:tmpFile15
Generated   8668 samples   21078 segments into file c:tmpFile16
Generated   8750 samples   22127 segments into file c:tmpFile17
Generated   8708 samples   21553 segments into file c:tmpFile18
Generated   8554 samples   21202 segments into file c:tmpFile19
Generated   8814 samples   21697 segments into file c:tmpFile20
Generated   8707 samples   21824 segments into file c:tmpFile21
Generated   8719 samples   21530 segments into file c:tmpFile22
Generated   8589 samples   20582 segments into file c:tmpFile23
Generated   8560 samples   21823 segments into file c:tmpFile24
Sample ../../restp.nni into 25  components with fraction 0.25
874009 samples, 37 features, 3 targettypes
Reading 8560 samples, writing with prob 0.250000...
218501 samples out of 874009 chosen. 2097879 Segments out of 8388106
Generated  17385 samples   83956 segments into file c:tmpFile00
Generated  17366 samples   85543 segments into file c:tmpFile01
Generated  17411 samples   83282 segments into file c:tmpFile02
Generated  17290 samples   84369 segments into file c:tmpFile03
Generated  17319 samples   83048 segments into file c:tmpFile04
Generated  17631 samples   86038 segments into file c:tmpFile05
Generated  17431 samples   83782 segments into file c:tmpFile06
Generated  17290 samples   84691 segments into file c:tmpFile07
Generated  17481 samples   84423 segments into file c:tmpFile08
Generated  17274 samples   82308 segments into file c:tmpFile09
Generated  17378 samples   83779 segments into file c:tmpFile10
Generated  17320 samples   83779 segments into file c:tmpFile11
Generated  17219 samples   82493 segments into file c:tmpFile12
Generated  17362 samples   84485 segments into file c:tmpFile13
Generated  17280 samples   84381 segments into file c:tmpFile14
Generated  17283 samples   84230 segments into file c:tmpFile15
Generated  17537 samples   83744 segments into file c:tmpFile16
Generated  17527 samples   83714 segments into file c:tmpFile17
Generated  17378 samples   82696 segments into file c:tmpFile18
Generated  17265 samples   83663 segments into file c:tmpFile19
Generated  17596 samples   83720 segments into file c:tmpFile20
Generated  17558 samples   85269 segments into file c:tmpFile21
Generated  17435 samples   84519 segments into file c:tmpFile22
Generated  17089 samples   81678 segments into file c:tmpFile23
Generated  17415 samples   84289 segments into file c:tmpFile24
Sample ../../singlec.nni into 25  components with fraction 1
389 samples, 37 features, 3 targettypes
Reading 17415 samples, writing with prob 1.000000...
389 samples out of 389 chosen. 1205 Segments out of 1205
Generated  17399 samples      42 segments into file c:tmpFile00
Generated  17377 samples      33 segments into file c:tmpFile01
Generated  17429 samples      56 segments into file c:tmpFile02
Generated  17307 samples      55 segments into file c:tmpFile03
Generated  17332 samples      44 segments into file c:tmpFile04
Generated  17645 samples      48 segments into file c:tmpFile05
Generated  17446 samples      45 segments into file c:tmpFile06
Generated  17303 samples      39 segments into file c:tmpFile07
Generated  17499 samples      54 segments into file c:tmpFile08
Generated  17289 samples      46 segments into file c:tmpFile09
Generated  17392 samples      43 segments into file c:tmpFile10
Generated  17340 samples      64 segments into file c:tmpFile11
Generated  17242 samples      69 segments into file c:tmpFile12
Generated  17385 samples      71 segments into file c:tmpFile13
Generated  17293 samples      39 segments into file c:tmpFile14
Generated  17300 samples      52 segments into file c:tmpFile15
Generated  17546 samples      31 segments into file c:tmpFile16
Generated  17543 samples      48 segments into file c:tmpFile17
Generated  17392 samples      43 segments into file c:tmpFile18
Generated  17283 samples      55 segments into file c:tmpFile19
Generated  17614 samples      54 segments into file c:tmpFile20
Generated  17576 samples      57 segments into file c:tmpFile21
Generated  17445 samples      30 segments into file c:tmpFile22
Generated  17099 samples      30 segments into file c:tmpFile23
Generated  17433 samples      57 segments into file c:tmpFile24
Sample ../../singlep.nni into 25  components with fraction 1
13226 samples, 37 features, 3 targettypes
Reading 17433 samples, writing with prob 1.000000...
13226 samples out of 13226 chosen. 23503 Segments out of 23503
Generated  17945 samples     974 segments into file c:tmpFile00
Generated  17907 samples     953 segments into file c:tmpFile01
Generated  17983 samples     979 segments into file c:tmpFile02
Generated  17856 samples     956 segments into file c:tmpFile03
Generated  17838 samples     915 segments into file c:tmpFile04
Generated  18223 samples    1065 segments into file c:tmpFile05
Generated  18015 samples     992 segments into file c:tmpFile06
Generated  17825 samples     926 segments into file c:tmpFile07
Generated  17991 samples     881 segments into file c:tmpFile08
Generated  17827 samples     956 segments into file c:tmpFile09
Generated  17922 samples     914 segments into file c:tmpFile10
Generated  17915 samples    1004 segments into file c:tmpFile11
Generated  17744 samples     895 segments into file c:tmpFile12
Generated  17866 samples     868 segments into file c:tmpFile13
Generated  17861 samples    1006 segments into file c:tmpFile14
Generated  17818 samples     963 segments into file c:tmpFile15
Generated  18066 samples     888 segments into file c:tmpFile16
Generated  18072 samples     945 segments into file c:tmpFile17
Generated  17886 samples     861 segments into file c:tmpFile18
Generated  17822 samples     941 segments into file c:tmpFile19
Generated  18110 samples     903 segments into file c:tmpFile20
Generated  18132 samples    1025 segments into file c:tmpFile21
Generated  17942 samples     854 segments into file c:tmpFile22
Generated  17633 samples     947 segments into file c:tmpFile23
Generated  17936 samples     892 segments into file c:tmpFile24
Sample ../../strictPanelc.nni into 25  components with fraction 1
3668 samples, 37 features, 3 targettypes
Reading 17936 samples, writing with prob 1.000000...
3668 samples out of 3668 chosen. 142167 Segments out of 142167
Generated  18098 samples    5966 segments into file c:tmpFile00
Generated  18049 samples    5551 segments into file c:tmpFile01
Generated  18133 samples    5803 segments into file c:tmpFile02
Generated  18007 samples    5927 segments into file c:tmpFile03
Generated  17995 samples    6079 segments into file c:tmpFile04
Generated  18375 samples    5936 segments into file c:tmpFile05
Generated  18161 samples    5645 segments into file c:tmpFile06
Generated  17974 samples    5828 segments into file c:tmpFile07
Generated  18154 samples    6307 segments into file c:tmpFile08
Generated  17975 samples    5912 segments into file c:tmpFile09
Generated  18091 samples    6561 segments into file c:tmpFile10
Generated  18078 samples    6430 segments into file c:tmpFile11
Generated  17880 samples    5278 segments into file c:tmpFile12
Generated  17993 samples    4961 segments into file c:tmpFile13
Generated  18001 samples    5346 segments into file c:tmpFile14
Generated  17981 samples    6155 segments into file c:tmpFile15
Generated  18227 samples    6113 segments into file c:tmpFile16
Generated  18194 samples    4723 segments into file c:tmpFile17
Generated  18049 samples    6237 segments into file c:tmpFile18
Generated  17964 samples    5562 segments into file c:tmpFile19
Generated  18247 samples    5267 segments into file c:tmpFile20
Generated  18276 samples    5559 segments into file c:tmpFile21
Generated  18072 samples    4972 segments into file c:tmpFile22
Generated  17755 samples    4720 segments into file c:tmpFile23
Generated  18074 samples    5329 segments into file c:tmpFile24
Sample ../../strictPanelp.nni into 25  components with fraction 1
13415 samples, 37 features, 3 targettypes
Reading 18074 samples, writing with prob 1.000000...
13415 samples out of 13415 chosen. 617371 Segments out of 617371
Generated  18662 samples   25803 segments into file c:tmpFile00
Generated  18590 samples   24870 segments into file c:tmpFile01
Generated  18655 samples   24272 segments into file c:tmpFile02
Generated  18533 samples   24199 segments into file c:tmpFile03
Generated  18540 samples   24626 segments into file c:tmpFile04
Generated  18916 samples   25116 segments into file c:tmpFile05
Generated  18719 samples   26101 segments into file c:tmpFile06
Generated  18498 samples   24251 segments into file c:tmpFile07
Generated  18668 samples   23276 segments into file c:tmpFile08
Generated  18522 samples   24857 segments into file c:tmpFile09
Generated  18628 samples   24866 segments into file c:tmpFile10
Generated  18603 samples   24058 segments into file c:tmpFile11
Generated  18396 samples   23733 segments into file c:tmpFile12
Generated  18564 samples   25463 segments into file c:tmpFile13
Generated  18504 samples   23492 segments into file c:tmpFile14
Generated  18516 samples   24624 segments into file c:tmpFile15
Generated  18803 samples   26248 segments into file c:tmpFile16
Generated  18712 samples   23849 segments into file c:tmpFile17
Generated  18574 samples   24143 segments into file c:tmpFile18
Generated  18475 samples   24093 segments into file c:tmpFile19
Generated  18792 samples   24382 segments into file c:tmpFile20
Generated  18813 samples   25540 segments into file c:tmpFile21
Generated  18648 samples   26394 segments into file c:tmpFile22
Generated  18271 samples   24074 segments into file c:tmpFile23
Generated  18616 samples   25041 segments into file c:tmpFile24
Sample ../../restPanelc.nni into 25  components with fraction 0.5
17631 samples, 37 features, 3 targettypes
Reading 18616 samples, writing with prob 0.500000...
8869 samples out of 17631 chosen. 488841 Segments out of 972305
Generated  19013 samples   19188 segments into file c:tmpFile00
Generated  18946 samples   19687 segments into file c:tmpFile01
Generated  19039 samples   21440 segments into file c:tmpFile02
Generated  18888 samples   19064 segments into file c:tmpFile03
Generated  18903 samples   19828 segments into file c:tmpFile04
Generated  19270 samples   19426 segments into file c:tmpFile05
Generated  19038 samples   17612 segments into file c:tmpFile06
Generated  18858 samples   19900 segments into file c:tmpFile07
Generated  19008 samples   18963 segments into file c:tmpFile08
Generated  18886 samples   19853 segments into file c:tmpFile09
Generated  18975 samples   19376 segments into file c:tmpFile10
Generated  18953 samples   19373 segments into file c:tmpFile11
Generated  18771 samples   20907 segments into file c:tmpFile12
Generated  18911 samples   19030 segments into file c:tmpFile13
Generated  18856 samples   19271 segments into file c:tmpFile14
Generated  18865 samples   18783 segments into file c:tmpFile15
Generated  19149 samples   19199 segments into file c:tmpFile16
Generated  19073 samples   19670 segments into file c:tmpFile17
Generated  18923 samples   19419 segments into file c:tmpFile18
Generated  18824 samples   19253 segments into file c:tmpFile19
Generated  19157 samples   20087 segments into file c:tmpFile20
Generated  19186 samples   20656 segments into file c:tmpFile21
Generated  18990 samples   19053 segments into file c:tmpFile22
Generated  18640 samples   20185 segments into file c:tmpFile23
Generated  18965 samples   19618 segments into file c:tmpFile24
Sample ../../restPanelp.nni into 25  components with fraction 0.5
96783 samples, 37 features, 3 targettypes
Reading 18965 samples, writing with prob 0.500000...
48127 samples out of 96783 chosen. 2459124 Segments out of 4944354
Generated  20946 samples   98666 segments into file c:tmpFile00
Generated  20864 samples   98625 segments into file c:tmpFile01
Generated  21002 samples  101241 segments into file c:tmpFile02
Generated  20896 samples  102734 segments into file c:tmpFile03
Generated  20851 samples   98125 segments into file c:tmpFile04
Generated  21168 samples   96220 segments into file c:tmpFile05
Generated  20948 samples   98031 segments into file c:tmpFile06
Generated  20759 samples   96283 segments into file c:tmpFile07
Generated  20965 samples   99722 segments into file c:tmpFile08
Generated  20824 samples  100521 segments into file c:tmpFile09
Generated  20926 samples   99570 segments into file c:tmpFile10
Generated  20848 samples   96733 segments into file c:tmpFile11
Generated  20737 samples   98590 segments into file c:tmpFile12
Generated  20824 samples   97255 segments into file c:tmpFile13
Generated  20726 samples   96263 segments into file c:tmpFile14
Generated  20766 samples   96749 segments into file c:tmpFile15
Generated  21074 samples   98334 segments into file c:tmpFile16
Generated  21078 samples  103440 segments into file c:tmpFile17
Generated  20818 samples   96939 segments into file c:tmpFile18
Generated  20668 samples   94312 segments into file c:tmpFile19
Generated  21074 samples   97686 segments into file c:tmpFile20
Generated  21045 samples   95017 segments into file c:tmpFile21
Generated  20934 samples  100351 segments into file c:tmpFile22
Generated  20578 samples   99443 segments into file c:tmpFile23
Generated  20895 samples   98274 segments into file c:tmpFile24
Sample ../../Jan_02/addrGoodWordc.nni into 25  components with fraction 1
49407 samples, 37 features, 3 targettypes
Reading 20895 samples, writing with prob 1.000000...
49407 samples out of 49407 chosen. 564569 Segments out of 564569
Generated  22927 samples   22807 segments into file c:tmpFile00
Generated  22781 samples   22088 segments into file c:tmpFile01
Generated  22926 samples   21977 segments into file c:tmpFile02
Generated  22874 samples   22937 segments into file c:tmpFile03
Generated  22784 samples   21936 segments into file c:tmpFile04
Generated  23114 samples   22287 segments into file c:tmpFile05
Generated  22931 samples   22876 segments into file c:tmpFile06
Generated  22770 samples   23097 segments into file c:tmpFile07
Generated  22959 samples   22673 segments into file c:tmpFile08
Generated  22830 samples   22655 segments into file c:tmpFile09
Generated  22911 samples   22894 segments into file c:tmpFile10
Generated  22773 samples   22454 segments into file c:tmpFile11
Generated  22805 samples   23364 segments into file c:tmpFile12
Generated  22799 samples   23108 segments into file c:tmpFile13
Generated  22616 samples   21177 segments into file c:tmpFile14
Generated  22687 samples   22376 segments into file c:tmpFile15
Generated  23100 samples   22947 segments into file c:tmpFile16
Generated  23066 samples   23264 segments into file c:tmpFile17
Generated  22730 samples   21721 segments into file c:tmpFile18
Generated  22709 samples   23171 segments into file c:tmpFile19
Generated  23081 samples   22237 segments into file c:tmpFile20
Generated  23122 samples   23210 segments into file c:tmpFile21
Generated  22902 samples   22099 segments into file c:tmpFile22
Generated  22537 samples   22355 segments into file c:tmpFile23
Generated  22887 samples   22859 segments into file c:tmpFile24
Sample ../../Jan_02/addrGoodWordp.nni into 25  components with fraction 1
305542 samples, 37 features, 3 targettypes
Reading 22887 samples, writing with prob 1.000000...
305542 samples out of 305542 chosen. 2318188 Segments out of 2318188
Generated  35190 samples   93023 segments into file c:tmpFile00
Generated  34925 samples   92415 segments into file c:tmpFile01
Generated  35208 samples   92962 segments into file c:tmpFile02
Generated  35188 samples   93242 segments into file c:tmpFile03
Generated  35098 samples   93166 segments into file c:tmpFile04
Generated  35226 samples   92124 segments into file c:tmpFile05
Generated  35246 samples   93909 segments into file c:tmpFile06
Generated  34901 samples   92832 segments into file c:tmpFile07
Generated  35291 samples   93035 segments into file c:tmpFile08
Generated  34941 samples   91983 segments into file c:tmpFile09
Generated  35212 samples   92876 segments into file c:tmpFile10
Generated  35040 samples   92352 segments into file c:tmpFile11
Generated  34949 samples   92076 segments into file c:tmpFile12
Generated  35078 samples   93767 segments into file c:tmpFile13
Generated  34654 samples   90596 segments into file c:tmpFile14
Generated  34781 samples   92535 segments into file c:tmpFile15
Generated  35305 samples   92537 segments into file c:tmpFile16
Generated  35287 samples   93069 segments into file c:tmpFile17
Generated  34859 samples   91621 segments into file c:tmpFile18
Generated  34882 samples   92208 segments into file c:tmpFile19
Generated  35072 samples   90825 segments into file c:tmpFile20
Generated  35452 samples   94786 segments into file c:tmpFile21
Generated  35212 samples   92655 segments into file c:tmpFile22
Generated  34961 samples   93628 segments into file c:tmpFile23
Generated  35205 samples   93966 segments into file c:tmpFile24
Sample ../../Jan_02/addrGoodPanelc.nni into 25  components with fraction 1
3471 samples, 37 features, 3 targettypes
Reading 35205 samples, writing with prob 1.000000...
3471 samples out of 3471 chosen. 145629 Segments out of 145629
Generated  35317 samples    5519 segments into file c:tmpFile00
Generated  35071 samples    6018 segments into file c:tmpFile01
Generated  35344 samples    5783 segments into file c:tmpFile02
Generated  35340 samples    6237 segments into file c:tmpFile03
Generated  35239 samples    5834 segments into file c:tmpFile04
Generated  35367 samples    6190 segments into file c:tmpFile05
Generated  35398 samples    6227 segments into file c:tmpFile06
Generated  35031 samples    5259 segments into file c:tmpFile07
Generated  35428 samples    5586 segments into file c:tmpFile08
Generated  35082 samples    5979 segments into file c:tmpFile09
Generated  35343 samples    5502 segments into file c:tmpFile10
Generated  35198 samples    6630 segments into file c:tmpFile11
Generated  35088 samples    5924 segments into file c:tmpFile12
Generated  35213 samples    5849 segments into file c:tmpFile13
Generated  34796 samples    5964 segments into file c:tmpFile14
Generated  34929 samples    6203 segments into file c:tmpFile15
Generated  35452 samples    6017 segments into file c:tmpFile16
Generated  35407 samples    5139 segments into file c:tmpFile17
Generated  34999 samples    5856 segments into file c:tmpFile18
Generated  35025 samples    6014 segments into file c:tmpFile19
Generated  35208 samples    5487 segments into file c:tmpFile20
Generated  35595 samples    5989 segments into file c:tmpFile21
Generated  35345 samples    5554 segments into file c:tmpFile22
Generated  35092 samples    5528 segments into file c:tmpFile23
Generated  35327 samples    5341 segments into file c:tmpFile24
Sample ../../Jan_02/addrGoodPanelp.nni into 25  components with fraction 1
37906 samples, 37 features, 3 targettypes
Reading 35327 samples, writing with prob 1.000000...
37906 samples out of 37906 chosen. 1364088 Segments out of 1364088
Generated  36798 samples   52776 segments into file c:tmpFile00
Generated  36571 samples   53875 segments into file c:tmpFile01
Generated  36907 samples   55632 segments into file c:tmpFile02
Generated  36824 samples   53305 segments into file c:tmpFile03
Generated  36814 samples   56493 segments into file c:tmpFile04
Generated  36865 samples   55397 segments into file c:tmpFile05
Generated  36918 samples   53672 segments into file c:tmpFile06
Generated  36526 samples   53663 segments into file c:tmpFile07
Generated  36939 samples   54461 segments into file c:tmpFile08
Generated  36569 samples   52167 segments into file c:tmpFile09
Generated  36898 samples   56302 segments into file c:tmpFile10
Generated  36736 samples   55269 segments into file c:tmpFile11
Generated  36686 samples   57448 segments into file c:tmpFile12
Generated  36783 samples   56211 segments into file c:tmpFile13
Generated  36299 samples   55340 segments into file c:tmpFile14
Generated  36399 samples   52996 segments into file c:tmpFile15
Generated  36947 samples   52850 segments into file c:tmpFile16
Generated  36882 samples   53524 segments into file c:tmpFile17
Generated  36411 samples   51519 segments into file c:tmpFile18
Generated  36575 samples   56059 segments into file c:tmpFile19
Generated  36802 samples   58064 segments into file c:tmpFile20
Generated  37106 samples   54518 segments into file c:tmpFile21
Generated  36864 samples   55113 segments into file c:tmpFile22
Generated  36643 samples   54722 segments into file c:tmpFile23
Generated  36778 samples   52712 segments into file c:tmpFile24
Sample ../../Jan_02/NatGoodWordc.nni into 25  components with fraction 0.5
253146 samples, 37 features, 3 targettypes
Reading 36778 samples, writing with prob 0.500000...
126644 samples out of 253146 chosen. 1155506 Segments out of 2307833
Generated  41851 samples   46387 segments into file c:tmpFile00
Generated  41617 samples   45492 segments into file c:tmpFile01
Generated  42029 samples   47336 segments into file c:tmpFile02
Generated  41759 samples   44377 segments into file c:tmpFile03
Generated  41925 samples   47056 segments into file c:tmpFile04
Generated  41850 samples   44792 segments into file c:tmpFile05
Generated  42040 samples   46684 segments into file c:tmpFile06
Generated  41419 samples   45246 segments into file c:tmpFile07
Generated  42131 samples   47468 segments into file c:tmpFile08
Generated  41655 samples   46455 segments into file c:tmpFile09
Generated  42026 samples   47000 segments into file c:tmpFile10
Generated  41940 samples   47982 segments into file c:tmpFile11
Generated  41596 samples   44282 segments into file c:tmpFile12
Generated  41733 samples   44853 segments into file c:tmpFile13
Generated  41406 samples   46179 segments into file c:tmpFile14
Generated  41517 samples   46841 segments into file c:tmpFile15
Generated  42019 samples   45898 segments into file c:tmpFile16
Generated  42010 samples   46508 segments into file c:tmpFile17
Generated  41402 samples   46053 segments into file c:tmpFile18
Generated  41644 samples   46805 segments into file c:tmpFile19
Generated  41820 samples   45584 segments into file c:tmpFile20
Generated  42313 samples   47695 segments into file c:tmpFile21
Generated  41907 samples   45930 segments into file c:tmpFile22
Generated  41696 samples   45450 segments into file c:tmpFile23
Generated  41879 samples   47153 segments into file c:tmpFile24
Sample ../../Jan_02/NatGoodWordp.nni into 25  components with fraction 0.5
495244 samples, 37 features, 3 targettypes
Reading 41879 samples, writing with prob 0.500000...
247441 samples out of 495244 chosen. 2330740 Segments out of 4665299
Generated  51780 samples   92823 segments into file c:tmpFile00
Generated  51504 samples   93873 segments into file c:tmpFile01
Generated  51929 samples   92912 segments into file c:tmpFile02
Generated  51627 samples   93342 segments into file c:tmpFile03
Generated  51625 samples   92395 segments into file c:tmpFile04
Generated  51890 samples   94944 segments into file c:tmpFile05
Generated  52041 samples   93214 segments into file c:tmpFile06
Generated  51246 samples   91904 segments into file c:tmpFile07
Generated  51882 samples   91947 segments into file c:tmpFile08
Generated  51518 samples   93526 segments into file c:tmpFile09
Generated  51965 samples   93766 segments into file c:tmpFile10
Generated  51913 samples   93254 segments into file c:tmpFile11
Generated  51506 samples   93386 segments into file c:tmpFile12
Generated  51650 samples   93550 segments into file c:tmpFile13
Generated  51366 samples   93936 segments into file c:tmpFile14
Generated  51515 samples   94984 segments into file c:tmpFile15
Generated  51880 samples   92482 segments into file c:tmpFile16
Generated  51925 samples   93770 segments into file c:tmpFile17
Generated  51330 samples   93031 segments into file c:tmpFile18
Generated  51537 samples   92569 segments into file c:tmpFile19
Generated  51738 samples   93842 segments into file c:tmpFile20
Generated  52068 samples   90914 segments into file c:tmpFile21
Generated  51708 samples   92146 segments into file c:tmpFile22
Generated  51608 samples   93956 segments into file c:tmpFile23
Generated  51874 samples   94274 segments into file c:tmpFile24
Sample ../../Jan_02/NatGoodPanelc.nni into 25  components with fraction 1
29114 samples, 37 features, 3 targettypes
Reading 51874 samples, writing with prob 1.000000...
29114 samples out of 29114 chosen. 1107447 Segments out of 1107447
Generated  52947 samples   44505 segments into file c:tmpFile00
Generated  52662 samples   44107 segments into file c:tmpFile01
Generated  53108 samples   44921 segments into file c:tmpFile02
Generated  52773 samples   43374 segments into file c:tmpFile03
Generated  52796 samples   44721 segments into file c:tmpFile04
Generated  53125 samples   47350 segments into file c:tmpFile05
Generated  53244 samples   46220 segments into file c:tmpFile06
Generated  52421 samples   44530 segments into file c:tmpFile07
Generated  53035 samples   43693 segments into file c:tmpFile08
Generated  52695 samples   44865 segments into file c:tmpFile09
Generated  53085 samples   41879 segments into file c:tmpFile10
Generated  53096 samples   44887 segments into file c:tmpFile11
Generated  52664 samples   44882 segments into file c:tmpFile12
Generated  52839 samples   45367 segments into file c:tmpFile13
Generated  52547 samples   44753 segments into file c:tmpFile14
Generated  52669 samples   43945 segments into file c:tmpFile15
Generated  53007 samples   42563 segments into file c:tmpFile16
Generated  53061 samples   43456 segments into file c:tmpFile17
Generated  52515 samples   44990 segments into file c:tmpFile18
Generated  52695 samples   44157 segments into file c:tmpFile19
Generated  52843 samples   42248 segments into file c:tmpFile20
Generated  53213 samples   43560 segments into file c:tmpFile21
Generated  52880 samples   43884 segments into file c:tmpFile22
Generated  52810 samples   45282 segments into file c:tmpFile23
Generated  53009 samples   43308 segments into file c:tmpFile24
Sample ../../Jan_02/NatGoodPanelp.nni into 25  components with fraction 1
59361 samples, 37 features, 3 targettypes
Reading 53009 samples, writing with prob 1.000000...
59361 samples out of 59361 chosen. 2623320 Segments out of 2623320
Generated  55388 samples  108179 segments into file c:tmpFile00
Generated  55028 samples  102256 segments into file c:tmpFile01
Generated  55412 samples  101727 segments into file c:tmpFile02
Generated  55152 samples  105194 segments into file c:tmpFile03
Generated  55246 samples  108871 segments into file c:tmpFile04
Generated  55463 samples  103269 segments into file c:tmpFile05
Generated  55602 samples  104620 segments into file c:tmpFile06
Generated  54738 samples  102227 segments into file c:tmpFile07
Generated  55371 samples  104296 segments into file c:tmpFile08
Generated  55050 samples  104165 segments into file c:tmpFile09
Generated  55474 samples  105794 segments into file c:tmpFile10
Generated  55591 samples  110303 segments into file c:tmpFile11
Generated  54970 samples  103601 segments into file c:tmpFile12
Generated  55296 samples  108188 segments into file c:tmpFile13
Generated  54888 samples  103220 segments into file c:tmpFile14
Generated  54990 samples  102330 segments into file c:tmpFile15
Generated  55456 samples  108443 segments into file c:tmpFile16
Generated  55460 samples  105340 segments into file c:tmpFile17
Generated  54900 samples  103928 segments into file c:tmpFile18
Generated  55043 samples  103831 segments into file c:tmpFile19
Generated  55216 samples  105895 segments into file c:tmpFile20
Generated  55567 samples  103724 segments into file c:tmpFile21
Generated  55271 samples  105086 segments into file c:tmpFile22
Generated  55089 samples  101029 segments into file c:tmpFile23
Generated  55439 samples  107804 segments into file c:tmpFile24
Sample ../../Jan_02/WebGoodPanelc.nni into 25  components with fraction 1
4702 samples, 37 features, 3 targettypes
Reading 55439 samples, writing with prob 1.000000...
4702 samples out of 4702 chosen. 201995 Segments out of 201995
Generated  55555 samples    7112 segments into file c:tmpFile00
Generated  55219 samples    8222 segments into file c:tmpFile01
Generated  55596 samples    7914 segments into file c:tmpFile02
Generated  55325 samples    7629 segments into file c:tmpFile03
Generated  55430 samples    7707 segments into file c:tmpFile04
Generated  55660 samples    8391 segments into file c:tmpFile05
Generated  55808 samples    8590 segments into file c:tmpFile06
Generated  54937 samples    8387 segments into file c:tmpFile07
Generated  55564 samples    8220 segments into file c:tmpFile08
Generated  55237 samples    8151 segments into file c:tmpFile09
Generated  55662 samples    8029 segments into file c:tmpFile10
Generated  55757 samples    7568 segments into file c:tmpFile11
Generated  55167 samples    8470 segments into file c:tmpFile12
Generated  55468 samples    7599 segments into file c:tmpFile13
Generated  55077 samples    8175 segments into file c:tmpFile14
Generated  55184 samples    8436 segments into file c:tmpFile15
Generated  55645 samples    8076 segments into file c:tmpFile16
Generated  55637 samples    7573 segments into file c:tmpFile17
Generated  55068 samples    7057 segments into file c:tmpFile18
Generated  55247 samples    8747 segments into file c:tmpFile19
Generated  55410 samples    7991 segments into file c:tmpFile20
Generated  55764 samples    8286 segments into file c:tmpFile21
Generated  55457 samples    8215 segments into file c:tmpFile22
Generated  55288 samples    8373 segments into file c:tmpFile23
Generated  55640 samples    9077 segments into file c:tmpFile24
Sample ../../Jan_02/WebGoodPanelp.nni into 25  components with fraction 1
20215 samples, 37 features, 3 targettypes
Reading 55640 samples, writing with prob 1.000000...
20215 samples out of 20215 chosen. 838761 Segments out of 838761
Generated  56385 samples   34515 segments into file c:tmpFile00
Generated  56005 samples   32339 segments into file c:tmpFile01
Generated  56376 samples   32190 segments into file c:tmpFile02
Generated  56155 samples   34213 segments into file c:tmpFile03
Generated  56243 samples   33801 segments into file c:tmpFile04
Generated  56480 samples   33933 segments into file c:tmpFile05
Generated  56672 samples   35765 segments into file c:tmpFile06
Generated  55795 samples   35833 segments into file c:tmpFile07
Generated  56328 samples   31826 segments into file c:tmpFile08
Generated  56067 samples   33740 segments into file c:tmpFile09
Generated  56452 samples   32964 segments into file c:tmpFile10
Generated  56526 samples   32077 segments into file c:tmpFile11
Generated  56025 samples   35478 segments into file c:tmpFile12
Generated  56319 samples   35514 segments into file c:tmpFile13
Generated  55871 samples   33018 segments into file c:tmpFile14
Generated  55974 samples   32660 segments into file c:tmpFile15
Generated  56455 samples   33684 segments into file c:tmpFile16
Generated  56469 samples   34884 segments into file c:tmpFile17
Generated  55813 samples   30656 segments into file c:tmpFile18
Generated  56069 samples   33964 segments into file c:tmpFile19
Generated  56201 samples   32634 segments into file c:tmpFile20
Generated  56562 samples   32749 segments into file c:tmpFile21
Generated  56264 samples   33966 segments into file c:tmpFile22
Generated  56075 samples   32802 segments into file c:tmpFile23
Generated  56436 samples   33556 segments into file c:tmpFile24
Sample ../../Jan_02/SingGoodc.nni into 25  components with fraction 1
625 samples, 37 features, 3 targettypes
Reading 56436 samples, writing with prob 1.000000...
625 samples out of 625 chosen. 1931 Segments out of 1931
Generated  56416 samples     102 segments into file c:tmpFile00
Generated  56033 samples      86 segments into file c:tmpFile01
Generated  56402 samples      78 segments into file c:tmpFile02
Generated  56170 samples      45 segments into file c:tmpFile03
Generated  56276 samples     101 segments into file c:tmpFile04
Generated  56502 samples      72 segments into file c:tmpFile05
Generated  56697 samples      75 segments into file c:tmpFile06
Generated  55815 samples      63 segments into file c:tmpFile07
Generated  56348 samples      61 segments into file c:tmpFile08
Generated  56090 samples      73 segments into file c:tmpFile09
Generated  56480 samples      90 segments into file c:tmpFile10
Generated  56551 samples      78 segments into file c:tmpFile11
Generated  56052 samples      82 segments into file c:tmpFile12
Generated  56334 samples      46 segments into file c:tmpFile13
Generated  55900 samples      88 segments into file c:tmpFile14
Generated  55998 samples      72 segments into file c:tmpFile15
Generated  56487 samples      96 segments into file c:tmpFile16
Generated  56493 samples      72 segments into file c:tmpFile17
Generated  55845 samples      97 segments into file c:tmpFile18
Generated  56087 samples      56 segments into file c:tmpFile19
Generated  56227 samples      81 segments into file c:tmpFile20
Generated  56586 samples      75 segments into file c:tmpFile21
Generated  56290 samples      85 segments into file c:tmpFile22
Generated  56098 samples      69 segments into file c:tmpFile23
Generated  56465 samples      88 segments into file c:tmpFile24
Sample ../../Jan_02/SingGoodc.nni into 25  components with fraction 1
625 samples, 37 features, 3 targettypes
Reading 56465 samples, writing with prob 1.000000...
625 samples out of 625 chosen. 1931 Segments out of 1931
Generated  56440 samples      73 segments into file c:tmpFile00
Generated  56063 samples      90 segments into file c:tmpFile01
Generated  56439 samples     114 segments into file c:tmpFile02
Generated  56186 samples      49 segments into file c:tmpFile03
Generated  56305 samples      88 segments into file c:tmpFile04
Generated  56529 samples      87 segments into file c:tmpFile05
Generated  56720 samples      71 segments into file c:tmpFile06
Generated  55838 samples      80 segments into file c:tmpFile07
Generated  56375 samples      87 segments into file c:tmpFile08
Generated  56109 samples      60 segments into file c:tmpFile09
Generated  56501 samples      63 segments into file c:tmpFile10
Generated  56571 samples      60 segments into file c:tmpFile11
Generated  56077 samples      75 segments into file c:tmpFile12
Generated  56357 samples      70 segments into file c:tmpFile13
Generated  55922 samples      76 segments into file c:tmpFile14
Generated  56021 samples      72 segments into file c:tmpFile15
Generated  56514 samples      84 segments into file c:tmpFile16
Generated  56515 samples      66 segments into file c:tmpFile17
Generated  55871 samples      80 segments into file c:tmpFile18
Generated  56113 samples      78 segments into file c:tmpFile19
Generated  56254 samples      81 segments into file c:tmpFile20
Generated  56618 samples      96 segments into file c:tmpFile21
Generated  56314 samples      74 segments into file c:tmpFile22
Generated  56122 samples      73 segments into file c:tmpFile23
Generated  56493 samples      84 segments into file c:tmpFile24
Data sampling complete at Sat Feb 02 19:16:33 Pacific Standard Time 2002
Loading from c:tmpFile00.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile00.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 823433 in 56440 Words. Total 823433 in 56440 words
Good+Bad: 823433 in 56440 words.
Total 823433 in 56440 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 823433 in 56440 Words. Total 823433 in 56440 words
Good+Bad: 823433 in 56440 words.
Tot Mem 132200 (kB)]
Data loading complete at Sat Feb 02 19:17:44 Pacific Standard Time 2002
m_bUseBadWords = 1
65 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30001   0.000   0.398  -1.000  11.3% 0.000500  3389  11934.06 ({   0.00 0   0.0%} {   0.00 169   0.6%} {   0.40 3220  10.7%} ) 0 2123   0.0
0 60034   0.398   0.409  -0.029  11.8% 0.000500  7091  24581.61 ({   0.00 0   0.0%} {   0.00 344   0.6%} {   0.41 6747  11.2%} ) 0 4204   0.0
0 90037   0.409   0.409   0.001  11.8% 0.000500  10660  36815.03 ({   0.00 0   0.0%} {   0.00 528   0.6%} {   0.41 10132  11.3%} ) 0 6281   0.0
0 120085   0.409   0.411  -0.005  11.9% 0.000500  14337  49332.53 ({   0.00 0   0.0%} {   0.00 706   0.6%} {   0.41 13631  11.4%} ) 0 8358   0.0
0 150129   0.411   0.414  -0.008  12.0% 0.000500  18085  62161.22 ({   0.00 0   0.0%} {   0.00 868   0.6%} {   0.41 17217  11.5%} ) 0 10533   0.0
0 180182   0.414   0.415  -0.003  12.1% 0.000500  21736  74822.87 ({   0.00 0   0.0%} {   0.00 1006   0.6%} {   0.41 20730  11.5%} ) 0 12643   0.0
0 210182   0.415   0.414   0.002  12.0% 0.000500  25296  87063.22 ({   0.00 0   0.0%} {   0.00 1206   0.6%} {   0.41 24090  11.5%} ) 0 14741   0.0
0 240185   0.414   0.413   0.004  12.0% 0.000500  28866  99085.70 ({   0.00 0   0.0%} {   0.00 1367   0.6%} {   0.41 27499  11.4%} ) 0 16841   0.0
0 270185   0.413   0.412   0.002  12.0% 0.000500  32395 111240.02 ({   0.00 0   0.0%} {   0.00 1545   0.6%} {   0.41 30850  11.4%} ) 0 18810   0.0
0 300231   0.412   0.411   0.002  11.9% 0.000500  35872 123317.50 ({   0.00 0   0.0%} {   0.00 1708   0.6%} {   0.41 34164  11.4%} ) 0 20851   0.0
0 330245   0.411   0.409   0.004  11.9% 0.000500  39393 135086.09 ({   0.00 0   0.0%} {   0.00 1887   0.6%} {   0.41 37506  11.4%} ) 0 22752   0.0
0 360246   0.409   0.410  -0.002  11.9% 0.000500  43015 147617.80 ({   0.00 0   0.0%} {   0.00 2054   0.6%} {   0.41 40961  11.4%} ) 0 24752   0.0
0 390251   0.410   0.411  -0.004  12.0% 0.000500  46649 160501.13 ({   0.00 0   0.0%} {   0.00 2213   0.6%} {   0.41 44436  11.4%} ) 0 26847   0.0
0 420253   0.411   0.411   0.001  12.0% 0.000500  50242 172727.81 ({   0.00 0   0.0%} {   0.00 2392   0.6%} {   0.41 47850  11.4%} ) 0 28919   0.0
0 450274   0.411   0.410   0.003  11.9% 0.000500  53734 184490.25 ({   0.00 0   0.0%} {   0.00 2576   0.6%} {   0.41 51158  11.4%} ) 0 31019   0.0
0 480282   0.410   0.409   0.001  11.9% 0.000500  57309 196668.49 ({   0.00 0   0.0%} {   0.00 2749   0.6%} {   0.41 54560  11.4%} ) 0 33060   0.0
0 510293   0.409   0.409   0.001  11.9% 0.000500  60822 208707.86 ({   0.00 0   0.0%} {   0.00 2925   0.6%} {   0.41 57897  11.3%} ) 0 35126   0.0
0 540314   0.409   0.409   0.000  11.9% 0.000500  64433 220960.06 ({   0.00 0   0.0%} {   0.00 3090   0.6%} {   0.41 61343  11.4%} ) 0 37258   0.0
0 570329   0.409   0.409   0.001  11.9% 0.000500  68015 233039.55 ({   0.00 0   0.0%} {   0.00 3299   0.6%} {   0.41 64716  11.3%} ) 0 39280   0.0
0 600335   0.409   0.408   0.002  11.9% 0.000500  71497 244701.39 ({   0.00 0   0.0%} {   0.00 3465   0.6%} {   0.41 68032  11.3%} ) 0 41313   0.0
0 630387   0.408   0.408  -0.001  11.9% 0.000500  75122 257104.42 ({   0.00 0   0.0%} {   0.00 3621   0.6%} {   0.41 71501  11.3%} ) 0 43382   0.0
0 660389   0.408   0.408  -0.001  11.9% 0.000500  78720 269662.55 ({   0.00 0   0.0%} {   0.00 3763   0.6%} {   0.41 74957  11.4%} ) 0 45430   0.0
0 690392   0.408   0.409  -0.001  11.9% 0.000500  82495 282253.87 ({   0.00 0   0.0%} {   0.00 3941   0.6%} {   0.41 78554  11.4%} ) 0 47484   0.0
0 720403   0.409   0.408   0.001  11.9% 0.000500  86020 294148.06 ({   0.00 0   0.0%} {   0.00 4120   0.6%} {   0.41 81900  11.4%} ) 0 49520   0.0
0 750407   0.408   0.408  -0.000  11.9% 0.000500  89630 306420.31 ({   0.00 0   0.0%} {   0.00 4298   0.6%} {   0.41 85332  11.4%} ) 0 51570   0.0
0 780418   0.408   0.408   0.000  11.9% 0.000500  93194 318530.94 ({   0.00 0   0.0%} {   0.00 4508   0.6%} {   0.41 88686  11.4%} ) 0 53571   0.0
0 810427   0.408   0.408   0.001  11.9% 0.000500  96721 330477.31 ({   0.00 0   0.0%} {   0.00 4700   0.6%} {   0.41 92021  11.4%} ) 0 55567   0.0
0 820316   0.408   0.407   0.001  11.9% 0.000500  97842 334262.70 ({   0.00 0   0.0%} {   0.00 4770   0.6%} {   0.41 93072  11.3%} ) 0 56203   0.0
Finished on Sat Feb 02 22:53:47 Pacific Standard Time 2002
NN_saveWeights save_65.wgt
Loading from c:tmpFile01.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile01.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 816024 in 56063 Words. Total 816024 in 56063 words
Good+Bad: 816024 in 56063 words.
Total 816024 in 56063 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 816024 in 56063 Words. Total 816024 in 56063 words
Good+Bad: 816024 in 56063 words.
Tot Mem 131012 (kB)]
Data loading complete at Sat Feb 02 22:55:01 Pacific Standard Time 2002
m_bUseBadWords = 1
66 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30051   0.000   0.420  -1.000  12.3% 0.000500  3684  12608.63 ({   0.00 0   0.0%} {   0.00 177   0.6%} {   0.42 3507  11.7%} ) 0 2041   0.0
0 60056   0.420   0.423  -0.008  12.2% 0.000500  7341  25407.74 ({   0.00 0   0.0%} {   0.00 346   0.6%} {   0.42 6995  11.6%} ) 0 4207   0.0
0 90061   0.423   0.421   0.006  12.2% 0.000500  11032  37883.05 ({   0.00 0   0.0%} {   0.00 533   0.6%} {   0.42 10499  11.7%} ) 0 6383   0.0
0 120077   0.421   0.410   0.025  11.9% 0.000500  14343  49268.78 ({   0.00 0   0.0%} {   0.00 699   0.6%} {   0.41 13644  11.4%} ) 0 8498   0.0
0 150081   0.410   0.415  -0.010  12.0% 0.000500  18078  62219.73 ({   0.00 0   0.0%} {   0.00 863   0.6%} {   0.41 17215  11.5%} ) 0 10544   0.0
0 180089   0.415   0.416  -0.004  12.1% 0.000500  21828  74934.69 ({   0.00 0   0.0%} {   0.00 1065   0.6%} {   0.41 20763  11.5%} ) 0 12603   0.0
0 210110   0.416   0.416  -0.000  12.1% 0.000500  25367  87460.80 ({   0.00 0   0.0%} {   0.00 1228   0.6%} {   0.41 24139  11.5%} ) 0 14681   0.0
0 240112   0.416   0.414   0.005  12.0% 0.000500  28920  99484.31 ({   0.00 0   0.0%} {   0.00 1405   0.6%} {   0.41 27515  11.5%} ) 0 16790   0.0
0 270114   0.414   0.412   0.006  12.0% 0.000500  32326 111283.22 ({   0.00 0   0.0%} {   0.00 1584   0.6%} {   0.41 30742  11.4%} ) 0 18864   0.0
0 300120   0.412   0.413  -0.003  12.0% 0.000500  35940 123984.32 ({   0.00 0   0.0%} {   0.00 1740   0.6%} {   0.41 34200  11.4%} ) 0 20908   0.0
0 330140   0.413   0.413   0.001  12.0% 0.000500  39585 136316.62 ({   0.00 0   0.0%} {   0.00 1923   0.6%} {   0.41 37662  11.4%} ) 0 23034   0.0
0 360157   0.413   0.415  -0.006  12.0% 0.000500  43373 149629.33 ({   0.00 0   0.0%} {   0.00 2098   0.6%} {   0.41 41275  11.5%} ) 0 25143   0.0
0 390161   0.415   0.414   0.003  12.0% 0.000500  46976 161642.64 ({   0.00 0   0.0%} {   0.00 2282   0.6%} {   0.41 44694  11.5%} ) 0 27226   0.0
0 420175   0.414   0.414   0.000  12.1% 0.000500  50646 174013.65 ({   0.00 0   0.0%} {   0.00 2465   0.6%} {   0.41 48181  11.5%} ) 0 29231   0.0
0 450202   0.414   0.413   0.003  12.0% 0.000500  54200 185916.90 ({   0.00 0   0.0%} {   0.00 2644   0.6%} {   0.41 51556  11.5%} ) 0 31409   0.0
0 480229   0.413   0.414  -0.002  12.1% 0.000500  57927 198623.30 ({   0.00 0   0.0%} {   0.00 2805   0.6%} {   0.41 55122  11.5%} ) 0 33431   0.0
0 510233   0.414   0.413   0.001  12.1% 0.000500  61590 210908.55 ({   0.00 0   0.0%} {   0.00 3006   0.6%} {   0.41 58584  11.5%} ) 0 35506   0.0
0 540236   0.413   0.413   0.001  12.1% 0.000500  65256 223162.04 ({   0.00 0   0.0%} {   0.00 3214   0.6%} {   0.41 62042  11.5%} ) 0 37507   0.0
0 570258   0.413   0.414  -0.001  12.1% 0.000500  68991 235864.83 ({   0.00 0   0.0%} {   0.00 3387   0.6%} {   0.41 65604  11.5%} ) 0 39635   0.0
0 600291   0.414   0.414  -0.001  12.1% 0.000500  72699 248629.42 ({   0.00 0   0.0%} {   0.00 3568   0.6%} {   0.41 69131  11.5%} ) 0 41660   0.0
0 630293   0.414   0.414   0.001  12.1% 0.000500  76218 260782.10 ({   0.00 0   0.0%} {   0.00 3745   0.6%} {   0.41 72473  11.5%} ) 0 43717   0.0
0 660311   0.414   0.413   0.001  12.1% 0.000500  79817 272949.86 ({   0.00 0   0.0%} {   0.00 3914   0.6%} {   0.41 75903  11.5%} ) 0 45774   0.0
0 690333   0.413   0.414  -0.001  12.1% 0.000500  83490 285703.34 ({   0.00 0   0.0%} {   0.00 4088   0.6%} {   0.41 79402  11.5%} ) 0 47710   0.0
0 720350   0.414   0.415  -0.002  12.1% 0.000500  87245 298648.17 ({   0.00 0   0.0%} {   0.00 4286   0.6%} {   0.41 82959  11.5%} ) 0 49638   0.0
0 750350   0.415   0.415   0.000  12.1% 0.000500  90928 311035.23 ({   0.00 0   0.0%} {   0.00 4443   0.6%} {   0.41 86485  11.5%} ) 0 51653   0.0
0 780351   0.415   0.415  -0.000  12.1% 0.000500  94617 323547.93 ({   0.00 0   0.0%} {   0.00 4630   0.6%} {   0.41 89987  11.5%} ) 0 53630   0.0
0 810383   0.415   0.415  -0.000  12.1% 0.000500  98269 336068.66 ({   0.00 0   0.0%} {   0.00 4845   0.6%} {   0.41 93424  11.5%} ) 0 55641   0.0
0 813496   0.415   0.415  -0.000  12.1% 0.000500  98680 337523.45 ({   0.00 0   0.0%} {   0.00 4868   0.6%} {   0.41 93812  11.5%} ) 0 55851   0.0
Finished on Sun Feb 03 02:29:06 Pacific Standard Time 2002
NN_saveWeights save_66.wgt
Loading from c:tmpFile02.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile02.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 821663 in 56439 Words. Total 821663 in 56439 words
Good+Bad: 821663 in 56439 words.
Total 821663 in 56439 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 821663 in 56439 Words. Total 821663 in 56439 words
Good+Bad: 821663 in 56439 words.
Tot Mem 131917 (kB)]
Data loading complete at Sun Feb 03 02:30:20 Pacific Standard Time 2002
m_bUseBadWords = 1
67 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30012   0.000   0.419  -1.000  11.8% 0.000500  3537  12574.63 ({   0.00 0   0.0%} {   0.00 158   0.5%} {   0.42 3379  11.3%} ) 0 2178   0.0
0 60048   0.419   0.416   0.008  11.9% 0.000500  7174  24960.80 ({   0.00 0   0.0%} {   0.00 295   0.5%} {   0.41 6879  11.5%} ) 0 4279   0.0
0 90048   0.416   0.411   0.011  11.9% 0.000500  10758  37013.71 ({   0.00 0   0.0%} {   0.00 459   0.5%} {   0.41 10299  11.4%} ) 0 6360   0.0
0 120085   0.411   0.408   0.006  11.9% 0.000500  14325  49041.97 ({   0.00 0   0.0%} {   0.00 645   0.5%} {   0.41 13680  11.4%} ) 0 8382   0.0
0 150101   0.408   0.407   0.003  11.9% 0.000500  17881  61142.55 ({   0.00 0   0.0%} {   0.00 864   0.6%} {   0.41 17017  11.3%} ) 0 10565   0.0
0 180129   0.407   0.409  -0.003  11.9% 0.000500  21516  73626.18 ({   0.00 0   0.0%} {   0.00 1066   0.6%} {   0.41 20450  11.4%} ) 0 12600   0.0
0 210133   0.409   0.411  -0.006  12.0% 0.000500  25172  86432.89 ({   0.00 0   0.0%} {   0.00 1220   0.6%} {   0.41 23952  11.4%} ) 0 14705   0.0
0 240177   0.411   0.411   0.002  12.0% 0.000500  28777  98610.56 ({   0.00 0   0.0%} {   0.00 1416   0.6%} {   0.41 27361  11.4%} ) 0 16748   0.0
0 270185   0.411   0.411  -0.002  12.0% 0.000500  32498 111160.12 ({   0.00 0   0.0%} {   0.00 1628   0.6%} {   0.41 30870  11.4%} ) 0 18830   0.0
0 300185   0.411   0.410   0.003  12.0% 0.000500  36094 123153.07 ({   0.00 0   0.0%} {   0.00 1816   0.6%} {   0.41 34278  11.4%} ) 0 20932   0.0
0 330206   0.410   0.409   0.002  12.0% 0.000500  39635 135157.55 ({   0.00 0   0.0%} {   0.00 2012   0.6%} {   0.41 37623  11.4%} ) 0 23026   0.0
0 360250   0.409   0.408   0.003  12.0% 0.000500  43144 147077.35 ({   0.00 0   0.0%} {   0.00 2167   0.6%} {   0.41 40977  11.4%} ) 0 25162   0.0
0 390259   0.408   0.409  -0.003  12.0% 0.000500  46891 159773.88 ({   0.00 0   0.0%} {   0.00 2352   0.6%} {   0.41 44539  11.4%} ) 0 27153   0.0
0 420263   0.409   0.409   0.001  12.0% 0.000500  50454 171852.86 ({   0.00 0   0.0%} {   0.00 2498   0.6%} {   0.41 47956  11.4%} ) 0 29210   0.0
0 450273   0.409   0.410  -0.002  12.0% 0.000500  54084 184549.10 ({   0.00 0   0.0%} {   0.00 2658   0.6%} {   0.41 51426  11.4%} ) 0 31227   0.0
0 480278   0.410   0.410  -0.000  12.0% 0.000500  57701 196870.43 ({   0.00 0   0.0%} {   0.00 2810   0.6%} {   0.41 54891  11.4%} ) 0 33259   0.0
0 510297   0.410   0.410   0.001  12.0% 0.000500  61289 208994.04 ({   0.00 0   0.0%} {   0.00 3029   0.6%} {   0.41 58260  11.4%} ) 0 35259   0.0
0 540312   0.410   0.409   0.001  12.0% 0.000500  64904 221146.83 ({   0.00 0   0.0%} {   0.00 3202   0.6%} {   0.41 61702  11.4%} ) 0 37354   0.0
0 570315   0.409   0.410  -0.001  12.0% 0.000500  68493 233569.90 ({   0.00 0   0.0%} {   0.00 3367   0.6%} {   0.41 65126  11.4%} ) 0 39452   0.0
0 600316   0.410   0.410  -0.001  12.0% 0.000500  72058 246067.47 ({   0.00 0   0.0%} {   0.00 3529   0.6%} {   0.41 68529  11.4%} ) 0 41457   0.0
0 630336   0.410   0.410  -0.000  12.0% 0.000500  75683 258457.00 ({   0.00 0   0.0%} {   0.00 3737   0.6%} {   0.41 71946  11.4%} ) 0 43496   0.0
0 660338   0.410   0.410   0.001  12.0% 0.000500  79239 270530.17 ({   0.00 0   0.0%} {   0.00 3898   0.6%} {   0.41 75341  11.4%} ) 0 45558   0.0
0 690352   0.410   0.410   0.000  12.0% 0.000500  82848 282787.27 ({   0.00 0   0.0%} {   0.00 4055   0.6%} {   0.41 78793  11.4%} ) 0 47539   0.0
0 720360   0.410   0.410  -0.002  12.0% 0.000500  86579 295607.75 ({   0.00 0   0.0%} {   0.00 4228   0.6%} {   0.41 82351  11.4%} ) 0 49547   0.0
0 750386   0.410   0.411  -0.001  12.0% 0.000500  90177 308204.88 ({   0.00 0   0.0%} {   0.00 4383   0.6%} {   0.41 85794  11.4%} ) 0 51532   0.0
0 780388   0.411   0.411   0.000  12.0% 0.000500  93814 320471.07 ({   0.00 0   0.0%} {   0.00 4560   0.6%} {   0.41 89254  11.4%} ) 0 53588   0.0
0 810449   0.411   0.411   0.000  12.0% 0.000500  97472 332788.40 ({   0.00 0   0.0%} {   0.00 4726   0.6%} {   0.41 92746  11.4%} ) 0 55593   0.0
0 819308   0.411   0.411  -0.000  12.0% 0.000500  98540 336475.55 ({   0.00 0   0.0%} {   0.00 4775   0.6%} {   0.41 93765  11.4%} ) 0 56209   0.0
Finished on Sun Feb 03 06:06:05 Pacific Standard Time 2002
NN_saveWeights save_67.wgt
Loading from c:tmpFile03.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile03.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 820780 in 56186 Words. Total 820780 in 56186 words
Good+Bad: 820780 in 56186 words.
Total 820780 in 56186 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 820780 in 56186 Words. Total 820780 in 56186 words
Good+Bad: 820780 in 56186 words.
Tot Mem 131774 (kB)]
Data loading complete at Sun Feb 03 06:07:18 Pacific Standard Time 2002
m_bUseBadWords = 1
68 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30008   0.000   0.391  -1.000  11.4% 0.000500  3435  11733.02 ({   0.00 0   0.0%} {   0.00 186   0.6%} {   0.39 3249  10.8%} ) 0 2037   0.0
0 60016   0.391   0.402  -0.026  11.9% 0.000500  7125  24101.21 ({   0.00 0   0.0%} {   0.00 364   0.6%} {   0.40 6761  11.3%} ) 0 4108   0.0
0 90038   0.402   0.402  -0.001  11.9% 0.000500  10737  36208.19 ({   0.00 0   0.0%} {   0.00 556   0.6%} {   0.40 10181  11.3%} ) 0 6159   0.0
0 120079   0.402   0.405  -0.006  11.9% 0.000500  14299  48600.12 ({   0.00 0   0.0%} {   0.00 736   0.6%} {   0.40 13563  11.3%} ) 0 8324   0.0
0 150086   0.405   0.405  -0.000  11.9% 0.000500  17845  60754.14 ({   0.00 0   0.0%} {   0.00 895   0.6%} {   0.40 16950  11.3%} ) 0 10386   0.0
0 180087   0.405   0.403   0.004  11.9% 0.000500  21406  72638.92 ({   0.00 0   0.0%} {   0.00 1096   0.6%} {   0.40 20310  11.3%} ) 0 12445   0.0
0 210141   0.403   0.404  -0.003  11.9% 0.000500  24961  84976.28 ({   0.00 0   0.0%} {   0.00 1256   0.6%} {   0.40 23705  11.3%} ) 0 14550   0.0
0 240141   0.404   0.406  -0.005  11.9% 0.000500  28666  97573.93 ({   0.00 0   0.0%} {   0.00 1404   0.6%} {   0.40 27262  11.4%} ) 0 16593   0.0
0 270141   0.406   0.406  -0.000  11.9% 0.000500  32256 109777.06 ({   0.00 0   0.0%} {   0.00 1574   0.6%} {   0.40 30682  11.4%} ) 0 18543   0.0
0 300170   0.406   0.407  -0.001  12.0% 0.000500  35932 122079.71 ({   0.00 0   0.0%} {   0.00 1776   0.6%} {   0.40 34156  11.4%} ) 0 20639   0.0
0 330171   0.407   0.406   0.001  11.9% 0.000500  39416 134122.12 ({   0.00 0   0.0%} {   0.00 1934   0.6%} {   0.40 37482  11.4%} ) 0 22627   0.0
0 360176   0.406   0.406  -0.000  11.9% 0.000500  42982 146347.73 ({   0.00 0   0.0%} {   0.00 2122   0.6%} {   0.40 40860  11.3%} ) 0 24761   0.0
0 390197   0.406   0.407  -0.001  12.0% 0.000500  46646 158734.44 ({   0.00 0   0.0%} {   0.00 2281   0.6%} {   0.40 44365  11.4%} ) 0 26932   0.0
0 420197   0.407   0.407  -0.001  12.0% 0.000500  50257 171128.01 ({   0.00 0   0.0%} {   0.00 2450   0.6%} {   0.41 47807  11.4%} ) 0 28996   0.0
0 450201   0.407   0.408  -0.002  12.0% 0.000500  53938 183789.91 ({   0.00 0   0.0%} {   0.00 2609   0.6%} {   0.41 51329  11.4%} ) 0 31092   0.0
0 480215   0.408   0.409  -0.002  12.0% 0.000500  57601 196340.60 ({   0.00 0   0.0%} {   0.00 2783   0.6%} {   0.41 54818  11.4%} ) 0 33154   0.0
0 510218   0.409   0.409  -0.001  12.0% 0.000500  61245 208800.75 ({   0.00 0   0.0%} {   0.00 2974   0.6%} {   0.41 58271  11.4%} ) 0 35190   0.0
0 540253   0.409   0.408   0.003  12.0% 0.000500  64748 220364.12 ({   0.00 0   0.0%} {   0.00 3170   0.6%} {   0.41 61578  11.4%} ) 0 37277   0.0
0 570259   0.408   0.407   0.002  12.0% 0.000500  68152 232162.15 ({   0.00 0   0.0%} {   0.00 3324   0.6%} {   0.40 64828  11.4%} ) 0 39324   0.0
0 600265   0.407   0.407  -0.001  11.9% 0.000500  71700 244517.58 ({   0.00 0   0.0%} {   0.00 3512   0.6%} {   0.41 68188  11.4%} ) 0 41329   0.0
0 630294   0.407   0.407   0.000  11.9% 0.000500  75231 256669.15 ({   0.00 0   0.0%} {   0.00 3711   0.6%} {   0.40 71520  11.3%} ) 0 43307   0.0
0 660310   0.407   0.408  -0.002  11.9% 0.000500  78865 269349.28 ({   0.00 0   0.0%} {   0.00 3851   0.6%} {   0.41 75014  11.4%} ) 0 45399   0.0
0 690312   0.408   0.409  -0.003  12.0% 0.000500  82606 282429.06 ({   0.00 0   0.0%} {   0.00 4005   0.6%} {   0.41 78601  11.4%} ) 0 47397   0.0
0 720334   0.409   0.410  -0.003  12.0% 0.000500  86441 295523.92 ({   0.00 0   0.0%} {   0.00 4236   0.6%} {   0.41 82205  11.4%} ) 0 49449   0.0
0 750341   0.410   0.411  -0.001  12.0% 0.000500  90141 308097.94 ({   0.00 0   0.0%} {   0.00 4435   0.6%} {   0.41 85706  11.4%} ) 0 51331   0.0
0 780357   0.411   0.411  -0.000  12.0% 0.000500  93771 320490.08 ({   0.00 0   0.0%} {   0.00 4587   0.6%} {   0.41 89184  11.4%} ) 0 53329   0.0
0 810393   0.411   0.411  -0.001  12.0% 0.000500  97379 333245.74 ({   0.00 0   0.0%} {   0.00 4737   0.6%} {   0.41 92642  11.4%} ) 0 55392   0.0
0 818360   0.411   0.411   0.000  12.0% 0.000500  98306 336502.30 ({   0.00 0   0.0%} {   0.00 4777   0.6%} {   0.41 93529  11.4%} ) 0 55958   0.0
Finished on Sun Feb 03 09:42:41 Pacific Standard Time 2002
NN_saveWeights save_68.wgt
Loading from c:tmpFile04.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile04.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 826245 in 56305 Words. Total 826245 in 56305 words
Good+Bad: 826245 in 56305 words.
Total 826245 in 56305 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 826245 in 56305 Words. Total 826245 in 56305 words
Good+Bad: 826245 in 56305 words.
Tot Mem 132649 (kB)]
Data loading complete at Sun Feb 03 09:43:54 Pacific Standard Time 2002
m_bUseBadWords = 1
69 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30003   0.000   0.425  -1.000  12.3% 0.000500  3698  12744.82 ({   0.00 0   0.0%} {   0.00 179   0.6%} {   0.42 3519  11.7%} ) 0 2179   0.0
0 60021   0.425   0.413   0.028  11.9% 0.000500  7131  24795.14 ({   0.00 0   0.0%} {   0.00 347   0.6%} {   0.41 6784  11.3%} ) 0 4311   0.0
0 90072   0.413   0.409   0.009  11.9% 0.000500  10687  36869.53 ({   0.00 0   0.0%} {   0.00 530   0.6%} {   0.41 10157  11.3%} ) 0 6420   0.0
0 120076   0.409   0.406   0.009  11.8% 0.000500  14199  48729.88 ({   0.00 0   0.0%} {   0.00 723   0.6%} {   0.40 13476  11.2%} ) 0 8420   0.0
0 150104   0.406   0.408  -0.006  11.9% 0.000500  17838  61288.90 ({   0.00 0   0.0%} {   0.00 893   0.6%} {   0.41 16945  11.3%} ) 0 10462   0.0
0 180108   0.408   0.411  -0.007  11.9% 0.000500  21418  74038.91 ({   0.00 0   0.0%} {   0.00 1071   0.6%} {   0.41 20347  11.3%} ) 0 12505   0.0
0 210109   0.411   0.413  -0.004  11.9% 0.000500  25093  86746.99 ({   0.00 0   0.0%} {   0.00 1219   0.6%} {   0.41 23874  11.4%} ) 0 14494   0.0
0 240150   0.413   0.414  -0.002  11.9% 0.000500  28680  99320.82 ({   0.00 0   0.0%} {   0.00 1385   0.6%} {   0.41 27295  11.4%} ) 0 16476   0.0
0 270211   0.414   0.413   0.001  11.9% 0.000500  32262 111684.27 ({   0.00 0   0.0%} {   0.00 1559   0.6%} {   0.41 30703  11.4%} ) 0 18542   0.0
0 300218   0.413   0.410   0.007  11.9% 0.000500  35655 123204.64 ({   0.00 0   0.0%} {   0.00 1721   0.6%} {   0.41 33934  11.3%} ) 0 20638   0.0
0 330223   0.410   0.412  -0.003  11.9% 0.000500  39435 135911.06 ({   0.00 0   0.0%} {   0.00 1892   0.6%} {   0.41 37543  11.4%} ) 0 22680   0.0
0 360248   0.412   0.413  -0.002  12.0% 0.000500  43090 148603.17 ({   0.00 0   0.0%} {   0.00 2046   0.6%} {   0.41 41044  11.4%} ) 0 24761   0.0
0 390288   0.413   0.412   0.002  11.9% 0.000500  46630 160713.60 ({   0.00 0   0.0%} {   0.00 2198   0.6%} {   0.41 44432  11.4%} ) 0 26908   0.0
0 420308   0.412   0.411   0.002  11.9% 0.000500  50168 172680.66 ({   0.00 0   0.0%} {   0.00 2412   0.6%} {   0.41 47756  11.4%} ) 0 28936   0.0
0 450347   0.411   0.410   0.003  11.9% 0.000500  53615 184463.73 ({   0.00 0   0.0%} {   0.00 2596   0.6%} {   0.41 51019  11.3%} ) 0 31062   0.0
0 480378   0.410   0.409   0.002  11.9% 0.000500  57043 196426.93 ({   0.00 0   0.0%} {   0.00 2766   0.6%} {   0.41 54277  11.3%} ) 0 33133   0.0
0 510432   0.409   0.410  -0.001  11.9% 0.000500  60732 209023.16 ({   0.00 0   0.0%} {   0.00 2936   0.6%} {   0.41 57796  11.3%} ) 0 35144   0.0
0 540472   0.410   0.409   0.001  11.9% 0.000500  64201 221065.83 ({   0.00 0   0.0%} {   0.00 3091   0.6%} {   0.41 61110  11.3%} ) 0 37210   0.0
0 570479   0.409   0.409   0.000  11.9% 0.000500  67848 233334.68 ({   0.00 0   0.0%} {   0.00 3284   0.6%} {   0.41 64564  11.3%} ) 0 39248   0.0
0 600515   0.409   0.409   0.000  11.9% 0.000500  71415 245510.96 ({   0.00 0   0.0%} {   0.00 3441   0.6%} {   0.41 67974  11.3%} ) 0 41234   0.0
0 630517   0.409   0.408   0.002  11.9% 0.000500  74927 257273.39 ({   0.00 0   0.0%} {   0.00 3621   0.6%} {   0.41 71306  11.3%} ) 0 43220   0.0
0 660533   0.408   0.409  -0.001  11.9% 0.000500  78608 269912.39 ({   0.00 0   0.0%} {   0.00 3805   0.6%} {   0.41 74803  11.3%} ) 0 45215   0.0
0 690542   0.409   0.408   0.001  11.9% 0.000500  82071 281956.79 ({   0.00 0   0.0%} {   0.00 3965   0.6%} {   0.41 78106  11.3%} ) 0 47192   0.0
0 720546   0.408   0.409  -0.000  11.9% 0.000500  85720 294346.96 ({   0.00 0   0.0%} {   0.00 4126   0.6%} {   0.41 81594  11.3%} ) 0 49237   0.0
0 750589   0.409   0.407   0.003  11.9% 0.000500  89069 305849.99 ({   0.00 0   0.0%} {   0.00 4305   0.6%} {   0.41 84764  11.3%} ) 0 51192   0.0
0 780595   0.407   0.406   0.002  11.8% 0.000500  92400 317300.73 ({   0.00 0   0.0%} {   0.00 4448   0.6%} {   0.40 87952  11.3%} ) 0 53146   0.0
0 810624   0.406   0.406   0.001  11.8% 0.000500  95876 329126.69 ({   0.00 0   0.0%} {   0.00 4614   0.6%} {   0.40 91262  11.3%} ) 0 55192   0.0
0 823465   0.406   0.406   0.001  11.8% 0.000500  97375 334164.00 ({   0.00 0   0.0%} {   0.00 4691   0.6%} {   0.40 92684  11.3%} ) 0 56048   0.0
Finished on Sun Feb 03 13:20:41 Pacific Standard Time 2002
NN_saveWeights save_69.wgt
Loading from c:tmpFile05.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile05.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 822960 in 56529 Words. Total 822960 in 56529 words
Good+Bad: 822960 in 56529 words.
Total 822960 in 56529 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 822960 in 56529 Words. Total 822960 in 56529 words
Good+Bad: 822960 in 56529 words.
Tot Mem 132125 (kB)]
Data loading complete at Sun Feb 03 13:21:55 Pacific Standard Time 2002
m_bUseBadWords = 1
70 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30000   0.000   0.426  -1.000  12.4% 0.000500  3708  12768.29 ({   0.00 0   0.0%} {   0.00 177   0.6%} {   0.42 3531  11.8%} ) 0 2081   0.0
0 60001   0.426   0.414   0.029  12.0% 0.000500  7219  24814.31 ({   0.00 0   0.0%} {   0.00 372   0.6%} {   0.41 6847  11.4%} ) 0 4173   0.0
0 90022   0.414   0.408   0.014  11.9% 0.000500  10722  36709.84 ({   0.00 0   0.0%} {   0.00 512   0.6%} {   0.41 10210  11.3%} ) 0 6291   0.0
0 120025   0.408   0.411  -0.007  11.9% 0.000500  14340  49281.87 ({   0.00 0   0.0%} {   0.00 686   0.6%} {   0.41 13654  11.4%} ) 0 8403   0.0
0 150038   0.411   0.409   0.003  12.0% 0.000500  17939  61413.67 ({   0.00 0   0.0%} {   0.00 875   0.6%} {   0.41 17064  11.4%} ) 0 10421   0.0
0 180042   0.409   0.411  -0.005  12.0% 0.000500  21668  74064.41 ({   0.00 0   0.0%} {   0.00 1033   0.6%} {   0.41 20635  11.5%} ) 0 12546   0.0
0 210048   0.411   0.409   0.005  12.0% 0.000500  25184  85984.68 ({   0.00 0   0.0%} {   0.00 1210   0.6%} {   0.41 23974  11.4%} ) 0 14613   0.0
0 240067   0.409   0.407   0.007  11.9% 0.000500  28597  97625.44 ({   0.00 0   0.0%} {   0.00 1374   0.6%} {   0.40 27223  11.3%} ) 0 16728   0.0
0 270071   0.407   0.406   0.003  11.9% 0.000500  32124 109539.61 ({   0.00 0   0.0%} {   0.00 1559   0.6%} {   0.40 30565  11.3%} ) 0 18788   0.0
0 300089   0.406   0.405   0.001  11.9% 0.000500  35698 121608.81 ({   0.00 0   0.0%} {   0.00 1750   0.6%} {   0.40 33948  11.3%} ) 0 20898   0.0
0 330092   0.405   0.407  -0.003  11.9% 0.000500  39290 134196.63 ({   0.00 0   0.0%} {   0.00 1900   0.6%} {   0.40 37390  11.3%} ) 0 22961   0.0
0 360098   0.407   0.407   0.000  11.9% 0.000500  42822 146390.96 ({   0.00 0   0.0%} {   0.00 2077   0.6%} {   0.40 40745  11.3%} ) 0 24997   0.0
0 390112   0.407   0.407  -0.001  11.9% 0.000500  46389 158727.13 ({   0.00 0   0.0%} {   0.00 2240   0.6%} {   0.40 44149  11.3%} ) 0 27083   0.0
0 420123   0.407   0.407  -0.001  11.9% 0.000500  50097 171071.49 ({   0.00 0   0.0%} {   0.00 2434   0.6%} {   0.40 47663  11.3%} ) 0 29135   0.0
0 450142   0.407   0.407   0.001  11.9% 0.000500  53693 183165.36 ({   0.00 0   0.0%} {   0.00 2621   0.6%} {   0.40 51072  11.3%} ) 0 31245   0.0
0 480171   0.407   0.408  -0.003  11.9% 0.000500  57375 195994.55 ({   0.00 0   0.0%} {   0.00 2773   0.6%} {   0.41 54602  11.4%} ) 0 33296   0.0
0 510181   0.408   0.409  -0.002  12.0% 0.000500  61075 208726.93 ({   0.00 0   0.0%} {   0.00 2935   0.6%} {   0.41 58140  11.4%} ) 0 35305   0.0
0 540202   0.409   0.411  -0.003  12.0% 0.000500  64902 221754.52 ({   0.00 0   0.0%} {   0.00 3108   0.6%} {   0.41 61794  11.4%} ) 0 37434   0.0
0 570240   0.411   0.410   0.001  12.0% 0.000500  68535 233903.76 ({   0.00 0   0.0%} {   0.00 3291   0.6%} {   0.41 65244  11.4%} ) 0 39543   0.0
0 600240   0.410   0.409   0.002  12.0% 0.000500  72058 245714.91 ({   0.00 0   0.0%} {   0.00 3483   0.6%} {   0.41 68575  11.4%} ) 0 41587   0.0
0 630246   0.409   0.410  -0.003  12.0% 0.000500  75825 258645.81 ({   0.00 0   0.0%} {   0.00 3682   0.6%} {   0.41 72143  11.4%} ) 0 43591   0.0
0 660278   0.410   0.410   0.000  12.0% 0.000500  79445 270864.75 ({   0.00 0   0.0%} {   0.00 3888   0.6%} {   0.41 75557  11.4%} ) 0 45616   0.0
0 690284   0.410   0.410   0.000  12.0% 0.000500  83077 283156.70 ({   0.00 0   0.0%} {   0.00 4077   0.6%} {   0.41 79000  11.4%} ) 0 47631   0.0
0 720287   0.410   0.411  -0.002  12.1% 0.000500  86837 296051.90 ({   0.00 0   0.0%} {   0.00 4257   0.6%} {   0.41 82580  11.5%} ) 0 49612   0.0
0 750298   0.411   0.411   0.000  12.0% 0.000500  90384 308267.12 ({   0.00 0   0.0%} {   0.00 4402   0.6%} {   0.41 85982  11.5%} ) 0 51656   0.0
0 780310   0.411   0.410   0.001  12.0% 0.000500  93968 320315.32 ({   0.00 0   0.0%} {   0.00 4590   0.6%} {   0.41 89378  11.5%} ) 0 53659   0.0
0 810316   0.410   0.410   0.000  12.0% 0.000500  97522 332574.97 ({   0.00 0   0.0%} {   0.00 4730   0.6%} {   0.41 92792  11.5%} ) 0 55616   0.0
0 819878   0.410   0.410  -0.000  12.0% 0.000500  98629 336512.02 ({   0.00 0   0.0%} {   0.00 4794   0.6%} {   0.41 93835  11.4%} ) 0 56282   0.0
Finished on Sun Feb 03 16:57:46 Pacific Standard Time 2002
NN_saveWeights save_70.wgt
Loading from c:tmpFile06.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile06.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 824258 in 56720 Words. Total 824258 in 56720 words
Good+Bad: 824258 in 56720 words.
Total 824258 in 56720 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 824258 in 56720 Words. Total 824258 in 56720 words
Good+Bad: 824258 in 56720 words.
Tot Mem 132335 (kB)]
Data loading complete at Sun Feb 03 16:59:00 Pacific Standard Time 2002
m_bUseBadWords = 1
71 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30041   0.000   0.399  -1.000  11.8% 0.000500  3544  11999.96 ({   0.00 0   0.0%} {   0.00 213   0.7%} {   0.40 3331  11.1%} ) 0 2072   0.0
0 60041   0.399   0.412  -0.030  12.0% 0.000500  7183  24716.10 ({   0.00 0   0.0%} {   0.00 377   0.6%} {   0.41 6806  11.3%} ) 0 4181   0.0
0 90044   0.412   0.413  -0.004  12.0% 0.000500  10820  37213.93 ({   0.00 0   0.0%} {   0.00 546   0.6%} {   0.41 10274  11.4%} ) 0 6322   0.0
0 120072   0.413   0.414  -0.003  12.2% 0.000500  14602  49755.94 ({   0.00 0   0.0%} {   0.00 761   0.6%} {   0.41 13841  11.5%} ) 0 8380   0.0
0 150087   0.414   0.416  -0.003  12.2% 0.000500  18248  62388.60 ({   0.00 0   0.0%} {   0.00 918   0.6%} {   0.41 17330  11.5%} ) 0 10550   0.0
0 180129   0.416   0.411   0.012  12.0% 0.000500  21664  73982.82 ({   0.00 0   0.0%} {   0.00 1101   0.6%} {   0.41 20563  11.4%} ) 0 12664   0.0
0 210129   0.411   0.410   0.003  12.0% 0.000500  25160  86059.85 ({   0.00 0   0.0%} {   0.00 1268   0.6%} {   0.41 23892  11.4%} ) 0 14770   0.0
0 240151   0.410   0.410  -0.001  12.0% 0.000500  28802  98454.13 ({   0.00 0   0.0%} {   0.00 1404   0.6%} {   0.41 27398  11.4%} ) 0 16820   0.0
0 270180   0.410   0.410  -0.001  12.0% 0.000500  32407 110891.93 ({   0.00 0   0.0%} {   0.00 1565   0.6%} {   0.41 30842  11.4%} ) 0 18916   0.0
0 300210   0.410   0.410   0.002  11.9% 0.000500  35875 122953.67 ({   0.00 0   0.0%} {   0.00 1727   0.6%} {   0.41 34148  11.4%} ) 0 20955   0.0
0 330230   0.410   0.408   0.005  11.9% 0.000500  39255 134613.55 ({   0.00 0   0.0%} {   0.00 1895   0.6%} {   0.41 37360  11.3%} ) 0 22995   0.0
0 360289   0.408   0.408  -0.001  11.9% 0.000500  42900 147074.42 ({   0.00 0   0.0%} {   0.00 2081   0.6%} {   0.41 40819  11.3%} ) 0 25075   0.0
0 390292   0.408   0.409  -0.003  11.9% 0.000500  46600 159774.56 ({   0.00 0   0.0%} {   0.00 2262   0.6%} {   0.41 44338  11.4%} ) 0 27192   0.0
0 420311   0.409   0.409  -0.000  12.0% 0.000500  50260 172106.21 ({   0.00 0   0.0%} {   0.00 2448   0.6%} {   0.41 47812  11.4%} ) 0 29295   0.0
0 450315   0.409   0.408   0.003  11.9% 0.000500  53727 183843.91 ({   0.00 0   0.0%} {   0.00 2624   0.6%} {   0.41 51103  11.3%} ) 0 31385   0.0
0 480328   0.408   0.408   0.002  11.9% 0.000500  57237 195772.56 ({   0.00 0   0.0%} {   0.00 2803   0.6%} {   0.41 54434  11.3%} ) 0 33446   0.0
0 510342   0.408   0.407   0.001  11.9% 0.000500  60750 207765.86 ({   0.00 0   0.0%} {   0.00 3009   0.6%} {   0.40 57741  11.3%} ) 0 35458   0.0
0 540343   0.407   0.407  -0.000  11.9% 0.000500  64329 219996.59 ({   0.00 0   0.0%} {   0.00 3161   0.6%} {   0.40 61168  11.3%} ) 0 37471   0.0
0 570359   0.407   0.407   0.001  11.9% 0.000500  67844 231993.05 ({   0.00 0   0.0%} {   0.00 3296   0.6%} {   0.40 64548  11.3%} ) 0 39554   0.0
0 600363   0.407   0.406   0.001  11.9% 0.000500  71313 243984.06 ({   0.00 0   0.0%} {   0.00 3448   0.6%} {   0.40 67865  11.3%} ) 0 41573   0.0
0 630368   0.406   0.407  -0.001  11.9% 0.000500  74888 256360.56 ({   0.00 0   0.0%} {   0.00 3589   0.6%} {   0.40 71299  11.3%} ) 0 43675   0.0
0 660393   0.407   0.407  -0.001  11.9% 0.000500  78501 268816.40 ({   0.00 0   0.0%} {   0.00 3781   0.6%} {   0.40 74720  11.3%} ) 0 45757   0.0
0 690429   0.407   0.408  -0.002  11.9% 0.000500  82213 281535.69 ({   0.00 0   0.0%} {   0.00 3967   0.6%} {   0.41 78246  11.3%} ) 0 47774   0.0
0 720434   0.408   0.408  -0.002  11.9% 0.000500  86024 294227.87 ({   0.00 0   0.0%} {   0.00 4164   0.6%} {   0.41 81860  11.4%} ) 0 49792   0.0
0 750434   0.408   0.408   0.001  11.9% 0.000500  89581 306178.73 ({   0.00 0   0.0%} {   0.00 4345   0.6%} {   0.41 85236  11.4%} ) 0 51796   0.0
0 780479   0.408   0.408   0.000  11.9% 0.000500  93143 318360.13 ({   0.00 0   0.0%} {   0.00 4528   0.6%} {   0.41 88615  11.4%} ) 0 53732   0.0
0 810481   0.408   0.408  -0.001  11.9% 0.000500  96769 330984.16 ({   0.00 0   0.0%} {   0.00 4685   0.6%} {   0.41 92084  11.4%} ) 0 55786   0.0
0 821776   0.408   0.408   0.000  11.9% 0.000500  98126 335498.28 ({   0.00 0   0.0%} {   0.00 4759   0.6%} {   0.41 93367  11.4%} ) 0 56492   0.0
Finished on Sun Feb 03 20:35:19 Pacific Standard Time 2002
NN_saveWeights save_71.wgt
Loading from c:tmpFile07.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile07.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 814639 in 55838 Words. Total 814639 in 55838 words
Good+Bad: 814639 in 55838 words.
Total 814639 in 55838 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 814639 in 55838 Words. Total 814639 in 55838 words
Good+Bad: 814639 in 55838 words.
Tot Mem 130788 (kB)]
Data loading complete at Sun Feb 03 20:36:31 Pacific Standard Time 2002
m_bUseBadWords = 1
72 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30000   0.000   0.403  -1.000  11.6% 0.000500  3489  12094.25 ({   0.00 0   0.0%} {   0.00 190   0.6%} {   0.40 3299  11.0%} ) 0 2096   0.0
0 60017   0.403   0.399   0.012  11.6% 0.000500  6963  23916.83 ({   0.00 0   0.0%} {   0.00 378   0.6%} {   0.40 6585  11.0%} ) 0 4183   0.0
0 90018   0.399   0.410  -0.029  11.9% 0.000500  10703  36938.22 ({   0.00 0   0.0%} {   0.00 562   0.6%} {   0.41 10141  11.3%} ) 0 6261   0.0
0 120018   0.410   0.409   0.003  11.8% 0.000500  14197  49076.94 ({   0.00 0   0.0%} {   0.00 741   0.6%} {   0.41 13456  11.2%} ) 0 8378   0.0
0 150068   0.409   0.413  -0.009  11.9% 0.000500  17858  61917.08 ({   0.00 0   0.0%} {   0.00 900   0.6%} {   0.41 16958  11.3%} ) 0 10396   0.0
0 180110   0.413   0.413  -0.001  11.9% 0.000500  21515  74383.44 ({   0.00 0   0.0%} {   0.00 1074   0.6%} {   0.41 20441  11.3%} ) 0 12477   0.0
0 210121   0.413   0.409   0.009  11.9% 0.000500  24995  86021.85 ({   0.00 0   0.0%} {   0.00 1283   0.6%} {   0.41 23712  11.3%} ) 0 14550   0.0
0 240134   0.409   0.408   0.004  11.8% 0.000500  28449  97910.11 ({   0.00 0   0.0%} {   0.00 1467   0.6%} {   0.41 26982  11.2%} ) 0 16624   0.0
0 270152   0.408   0.405   0.007  11.8% 0.000500  31868 109403.73 ({   0.00 0   0.0%} {   0.00 1651   0.6%} {   0.40 30217  11.2%} ) 0 18721   0.0
0 300183   0.405   0.407  -0.005  11.9% 0.000500  35590 122224.86 ({   0.00 0   0.0%} {   0.00 1832   0.6%} {   0.40 33758  11.2%} ) 0 20782   0.0
0 330185   0.407   0.407   0.001  11.8% 0.000500  39106 134335.97 ({   0.00 0   0.0%} {   0.00 2022   0.6%} {   0.40 37084  11.2%} ) 0 22747   0.0
0 360214   0.407   0.407  -0.001  11.8% 0.000500  42640 146668.95 ({   0.00 0   0.0%} {   0.00 2170   0.6%} {   0.40 40470  11.2%} ) 0 24820   0.0
0 390244   0.407   0.409  -0.004  11.9% 0.000500  46390 159472.73 ({   0.00 0   0.0%} {   0.00 2360   0.6%} {   0.41 44030  11.3%} ) 0 26931   0.0
0 420244   0.409   0.409  -0.000  11.9% 0.000500  49944 171735.06 ({   0.00 0   0.0%} {   0.00 2544   0.6%} {   0.41 47400  11.3%} ) 0 28954   0.0
0 450253   0.409   0.408   0.001  11.9% 0.000500  53602 183879.03 ({   0.00 0   0.0%} {   0.00 2761   0.6%} {   0.41 50841  11.3%} ) 0 31004   0.0
0 480271   0.408   0.409  -0.001  11.9% 0.000500  57267 196377.27 ({   0.00 0   0.0%} {   0.00 2903   0.6%} {   0.41 54364  11.3%} ) 0 33042   0.0
0 510295   0.409   0.409  -0.000  12.0% 0.000500  60995 208681.33 ({   0.00 0   0.0%} {   0.00 3127   0.6%} {   0.41 57868  11.3%} ) 0 35105   0.0
0 540298   0.409   0.409   0.001  11.9% 0.000500  64525 220719.43 ({   0.00 0   0.0%} {   0.00 3311   0.6%} {   0.41 61214  11.3%} ) 0 37210   0.0
0 570315   0.409   0.408   0.001  11.9% 0.000500  67991 232702.86 ({   0.00 0   0.0%} {   0.00 3442   0.6%} {   0.41 64549  11.3%} ) 0 39235   0.0
0 600316   0.408   0.409  -0.001  11.9% 0.000500  71723 245272.70 ({   0.00 0   0.0%} {   0.00 3616   0.6%} {   0.41 68107  11.3%} ) 0 41242   0.0
0 630322   0.409   0.408   0.001  11.9% 0.000500  75317 257194.87 ({   0.00 0   0.0%} {   0.00 3799   0.6%} {   0.41 71518  11.3%} ) 0 43288   0.0
0 660333   0.408   0.408   0.001  11.9% 0.000500  78894 269229.86 ({   0.00 0   0.0%} {   0.00 3972   0.6%} {   0.41 74922  11.3%} ) 0 45382   0.0
0 690335   0.408   0.407   0.001  11.9% 0.000500  82369 281265.77 ({   0.00 0   0.0%} {   0.00 4130   0.6%} {   0.41 78239  11.3%} ) 0 47400   0.0
0 720338   0.407   0.407   0.001  11.9% 0.000500  85932 293250.76 ({   0.00 0   0.0%} {   0.00 4320   0.6%} {   0.40 81612  11.3%} ) 0 49425   0.0
0 750342   0.407   0.407   0.000  11.9% 0.000500  89517 305405.69 ({   0.00 0   0.0%} {   0.00 4507   0.6%} {   0.40 85010  11.3%} ) 0 51445   0.0
0 780389   0.407   0.407   0.000  11.9% 0.000500  93101 317628.73 ({   0.00 0   0.0%} {   0.00 4686   0.6%} {   0.40 88415  11.3%} ) 0 53456   0.0
0 810401   0.407   0.408  -0.002  11.9% 0.000500  96797 330487.20 ({   0.00 0   0.0%} {   0.00 4883   0.6%} {   0.41 91914  11.3%} ) 0 55510   0.0
0 811556   0.408   0.408  -0.000  11.9% 0.000500  96959 331005.87 ({   0.00 0   0.0%} {   0.00 4887   0.6%} {   0.41 92072  11.3%} ) 0 55580   0.0
Finished on Mon Feb 04 00:10:08 Pacific Standard Time 2002
NN_saveWeights save_72.wgt
Loading from c:tmpFile08.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile08.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 818552 in 56375 Words. Total 818552 in 56375 words
Good+Bad: 818552 in 56375 words.
Total 818552 in 56375 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 818552 in 56375 Words. Total 818552 in 56375 words
Good+Bad: 818552 in 56375 words.
Tot Mem 131419 (kB)]
Data loading complete at Mon Feb 04 00:11:23 Pacific Standard Time 2002
m_bUseBadWords = 1
73 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30005   0.000   0.395  -1.000  11.6% 0.000500  3467  11839.27 ({   0.00 0   0.0%} {   0.00 167   0.6%} {   0.39 3300  11.0%} ) 0 2105   0.0
0 60010   0.395   0.402  -0.018  11.6% 0.000500  6987  24105.38 ({   0.00 0   0.0%} {   0.00 316   0.5%} {   0.40 6671  11.1%} ) 0 4226   0.0
0 90023   0.402   0.400   0.005  11.7% 0.000500  10497  35965.45 ({   0.00 0   0.0%} {   0.00 531   0.6%} {   0.40 9966  11.1%} ) 0 6338   0.0
0 120025   0.400   0.401  -0.003  11.7% 0.000500  14001  48107.41 ({   0.00 0   0.0%} {   0.00 719   0.6%} {   0.40 13282  11.1%} ) 0 8434   0.0
0 150049   0.401   0.402  -0.004  11.6% 0.000500  17443  60356.73 ({   0.00 0   0.0%} {   0.00 885   0.6%} {   0.40 16558  11.0%} ) 0 10455   0.0
0 180063   0.402   0.403  -0.001  11.7% 0.000500  21062  72512.83 ({   0.00 0   0.0%} {   0.00 1043   0.6%} {   0.40 20019  11.1%} ) 0 12581   0.0
0 210081   0.403   0.404  -0.002  11.7% 0.000500  24684  84802.57 ({   0.00 0   0.0%} {   0.00 1244   0.6%} {   0.40 23440  11.2%} ) 0 14678   0.0
0 240084   0.404   0.403   0.002  11.7% 0.000500  28087  96692.67 ({   0.00 0   0.0%} {   0.00 1405   0.6%} {   0.40 26682  11.1%} ) 0 16748   0.0
0 270085   0.403   0.405  -0.005  11.8% 0.000500  31744 109311.57 ({   0.00 0   0.0%} {   0.00 1593   0.6%} {   0.40 30151  11.2%} ) 0 18833   0.0
0 300088   0.405   0.404   0.001  11.7% 0.000500  35246 121361.08 ({   0.00 0   0.0%} {   0.00 1751   0.6%} {   0.40 33495  11.2%} ) 0 20881   0.0
0 330089   0.404   0.402   0.005  11.7% 0.000500  38629 132820.54 ({   0.00 0   0.0%} {   0.00 1891   0.6%} {   0.40 36738  11.1%} ) 0 22923   0.0
0 360092   0.402   0.404  -0.003  11.7% 0.000500  42294 145397.18 ({   0.00 0   0.0%} {   0.00 2071   0.6%} {   0.40 40223  11.2%} ) 0 25012   0.0
0 390108   0.404   0.405  -0.002  11.8% 0.000500  45969 157894.61 ({   0.00 0   0.0%} {   0.00 2229   0.6%} {   0.40 43740  11.2%} ) 0 27113   0.0
0 420120   0.405   0.405   0.000  11.8% 0.000500  49645 169992.92 ({   0.00 0   0.0%} {   0.00 2417   0.6%} {   0.40 47228  11.2%} ) 0 29150   0.0
0 450140   0.405   0.405   0.000  11.8% 0.000500  53223 182093.59 ({   0.00 0   0.0%} {   0.00 2578   0.6%} {   0.40 50645  11.3%} ) 0 31221   0.0
0 480202   0.405   0.406  -0.003  11.9% 0.000500  56927 194823.12 ({   0.00 0   0.0%} {   0.00 2768   0.6%} {   0.40 54159  11.3%} ) 0 33267   0.0
0 510213   0.406   0.406  -0.002  11.9% 0.000500  60571 207354.17 ({   0.00 0   0.0%} {   0.00 2933   0.6%} {   0.40 57638  11.3%} ) 0 35371   0.0
0 540213   0.406   0.407  -0.001  11.9% 0.000500  64130 219687.39 ({   0.00 0   0.0%} {   0.00 3083   0.6%} {   0.40 61047  11.3%} ) 0 37443   0.0
0 570218   0.407   0.407  -0.002  11.9% 0.000500  67827 232361.00 ({   0.00 0   0.0%} {   0.00 3265   0.6%} {   0.41 64562  11.3%} ) 0 39496   0.0
0 600224   0.407   0.408  -0.001  11.9% 0.000500  71521 244781.89 ({   0.00 0   0.0%} {   0.00 3489   0.6%} {   0.41 68032  11.3%} ) 0 41554   0.0
0 630225   0.408   0.408  -0.001  11.9% 0.000500  75155 257154.42 ({   0.00 0   0.0%} {   0.00 3684   0.6%} {   0.41 71471  11.3%} ) 0 43582   0.0
0 660233   0.408   0.408   0.001  11.9% 0.000500  78672 269240.68 ({   0.00 0   0.0%} {   0.00 3859   0.6%} {   0.41 74813  11.3%} ) 0 45637   0.0
0 690233   0.408   0.408  -0.001  11.9% 0.000500  82300 281773.40 ({   0.00 0   0.0%} {   0.00 4025   0.6%} {   0.41 78275  11.3%} ) 0 47663   0.0
0 720258   0.408   0.408  -0.000  11.9% 0.000500  85942 294048.29 ({   0.00 0   0.0%} {   0.00 4216   0.6%} {   0.41 81726  11.3%} ) 0 49655   0.0
0 750258   0.408   0.408   0.000  11.9% 0.000500  89513 306226.57 ({   0.00 0   0.0%} {   0.00 4381   0.6%} {   0.41 85132  11.3%} ) 0 51642   0.0
0 780287   0.408   0.408   0.001  11.9% 0.000500  93044 318187.26 ({   0.00 0   0.0%} {   0.00 4542   0.6%} {   0.41 88502  11.3%} ) 0 53628   0.0
0 810313   0.408   0.407   0.002  11.9% 0.000500  96421 329829.59 ({   0.00 0   0.0%} {   0.00 4708   0.6%} {   0.40 91713  11.3%} ) 0 55739   0.0
0 815986   0.407   0.407  -0.000  11.9% 0.000500  97103 332166.60 ({   0.00 0   0.0%} {   0.00 4747   0.6%} {   0.40 92356  11.3%} ) 0 56150   0.0
Finished on Mon Feb 04 03:46:06 Pacific Standard Time 2002
NN_saveWeights save_73.wgt
Loading from c:tmpFile09.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile09.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 818773 in 56109 Words. Total 818773 in 56109 words
Good+Bad: 818773 in 56109 words.
Total 818773 in 56109 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 818773 in 56109 Words. Total 818773 in 56109 words
Good+Bad: 818773 in 56109 words.
Tot Mem 131452 (kB)]
Data loading complete at Mon Feb 04 03:47:19 Pacific Standard Time 2002
m_bUseBadWords = 1
74 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30001   0.000   0.400  -1.000  11.8% 0.000500  3541  12013.44 ({   0.00 0   0.0%} {   0.00 169   0.6%} {   0.40 3372  11.2%} ) 0 2114   0.0
0 60001   0.400   0.411  -0.025  12.0% 0.000500  7185  24648.57 ({   0.00 0   0.0%} {   0.00 338   0.6%} {   0.41 6847  11.4%} ) 0 4218   0.0
0 90026   0.411   0.405   0.015  11.8% 0.000500  10589  36430.38 ({   0.00 0   0.0%} {   0.00 499   0.6%} {   0.40 10090  11.2%} ) 0 6243   0.0
0 120030   0.405   0.406  -0.004  11.8% 0.000500  14193  48750.74 ({   0.00 0   0.0%} {   0.00 700   0.6%} {   0.40 13493  11.2%} ) 0 8394   0.0
0 150044   0.406   0.404   0.005  11.8% 0.000500  17686  60658.55 ({   0.00 0   0.0%} {   0.00 866   0.6%} {   0.40 16820  11.2%} ) 0 10377   0.0
0 180097   0.404   0.408  -0.008  11.9% 0.000500  21356  73391.47 ({   0.00 0   0.0%} {   0.00 1042   0.6%} {   0.41 20314  11.3%} ) 0 12432   0.0
0 210103   0.408   0.407   0.002  11.9% 0.000500  25009  85423.59 ({   0.00 0   0.0%} {   0.00 1247   0.6%} {   0.40 23762  11.3%} ) 0 14399   0.0
0 240108   0.407   0.404   0.005  11.9% 0.000500  28499  97097.60 ({   0.00 0   0.0%} {   0.00 1431   0.6%} {   0.40 27068  11.3%} ) 0 16437   0.0
0 270125   0.404   0.402   0.005  11.8% 0.000500  31876 108678.51 ({   0.00 0   0.0%} {   0.00 1586   0.6%} {   0.40 30290  11.2%} ) 0 18495   0.0
0 300141   0.402   0.405  -0.006  11.9% 0.000500  35622 121511.61 ({   0.00 0   0.0%} {   0.00 1786   0.6%} {   0.40 33836  11.3%} ) 0 20581   0.0
0 330202   0.405   0.405   0.000  11.9% 0.000500  39179 133671.07 ({   0.00 0   0.0%} {   0.00 1930   0.6%} {   0.40 37249  11.3%} ) 0 22723   0.0
0 360237   0.405   0.405  -0.000  11.9% 0.000500  42744 145887.27 ({   0.00 0   0.0%} {   0.00 2109   0.6%} {   0.40 40635  11.3%} ) 0 24809   0.0
0 390240   0.405   0.406  -0.002  11.9% 0.000500  46419 158359.92 ({   0.00 0   0.0%} {   0.00 2296   0.6%} {   0.40 44123  11.3%} ) 0 26870   0.0
0 420252   0.406   0.406   0.001  11.9% 0.000500  49988 170435.00 ({   0.00 0   0.0%} {   0.00 2488   0.6%} {   0.40 47500  11.3%} ) 0 28971   0.0
0 450260   0.406   0.405   0.001  11.9% 0.000500  53496 182477.48 ({   0.00 0   0.0%} {   0.00 2667   0.6%} {   0.40 50829  11.3%} ) 0 31020   0.0
0 480261   0.405   0.405   0.000  11.9% 0.000500  57074 194608.59 ({   0.00 0   0.0%} {   0.00 2819   0.6%} {   0.40 54255  11.3%} ) 0 33077   0.0
0 510264   0.405   0.406  -0.002  11.9% 0.000500  60742 207118.93 ({   0.00 0   0.0%} {   0.00 3014   0.6%} {   0.40 57728  11.3%} ) 0 35125   0.0
0 540271   0.406   0.407  -0.002  11.9% 0.000500  64377 219631.85 ({   0.00 0   0.0%} {   0.00 3171   0.6%} {   0.40 61206  11.3%} ) 0 37179   0.0
0 570293   0.407   0.406   0.002  11.9% 0.000500  67876 231384.11 ({   0.00 0   0.0%} {   0.00 3353   0.6%} {   0.40 64523  11.3%} ) 0 39249   0.0
0 600296   0.406   0.406  -0.001  11.9% 0.000500  71412 243687.23 ({   0.00 0   0.0%} {   0.00 3524   0.6%} {   0.40 67888  11.3%} ) 0 41329   0.0
0 630309   0.406   0.406  -0.000  11.9% 0.000500  74989 255952.12 ({   0.00 0   0.0%} {   0.00 3682   0.6%} {   0.40 71307  11.3%} ) 0 43402   0.0
0 660312   0.406   0.406  -0.000  11.9% 0.000500  78578 268207.27 ({   0.00 0   0.0%} {   0.00 3850   0.6%} {   0.40 74728  11.3%} ) 0 45511   0.0
0 690359   0.406   0.406   0.001  11.9% 0.000500  82092 280259.81 ({   0.00 0   0.0%} {   0.00 4038   0.6%} {   0.40 78054  11.3%} ) 0 47516   0.0
0 720360   0.406   0.406   0.001  11.9% 0.000500  85662 292220.47 ({   0.00 0   0.0%} {   0.00 4196   0.6%} {   0.40 81466  11.3%} ) 0 49513   0.0
0 750384   0.406   0.405   0.002  11.9% 0.000500  89125 303915.01 ({   0.00 0   0.0%} {   0.00 4384   0.6%} {   0.40 84741  11.3%} ) 0 51480   0.0
0 780419   0.405   0.405  -0.001  11.9% 0.000500  92797 316285.56 ({   0.00 0   0.0%} {   0.00 4573   0.6%} {   0.40 88224  11.3%} ) 0 53491   0.0
0 810422   0.405   0.406  -0.001  11.9% 0.000500  96439 328837.56 ({   0.00 0   0.0%} {   0.00 4736   0.6%} {   0.40 91703  11.3%} ) 0 55473   0.0
0 815891   0.406   0.406  -0.000  11.9% 0.000500  97141 331061.10 ({   0.00 0   0.0%} {   0.00 4779   0.6%} {   0.40 92362  11.3%} ) 0 55872   0.0
Finished on Mon Feb 04 07:22:03 Pacific Standard Time 2002
NN_saveWeights save_74.wgt
Loading from c:tmpFile10.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile10.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 824467 in 56501 Words. Total 824467 in 56501 words
Good+Bad: 824467 in 56501 words.
Total 824467 in 56501 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 824467 in 56501 Words. Total 824467 in 56501 words
Good+Bad: 824467 in 56501 words.
Tot Mem 132366 (kB)]
Data loading complete at Mon Feb 04 07:23:17 Pacific Standard Time 2002
m_bUseBadWords = 1
75 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30006   0.000   0.386  -1.000  11.2% 0.000500  3373  11596.92 ({   0.00 0   0.0%} {   0.00 170   0.6%} {   0.38 3203  10.7%} ) 0 2176   0.0
0 60016   0.386   0.393  -0.018  11.6% 0.000500  6960  23609.47 ({   0.00 0   0.0%} {   0.00 336   0.6%} {   0.39 6624  11.0%} ) 0 4313   0.0
0 90037   0.393   0.400  -0.017  11.7% 0.000500  10561  36038.07 ({   0.00 0   0.0%} {   0.00 510   0.6%} {   0.40 10051  11.2%} ) 0 6467   0.0
0 120047   0.400   0.398   0.005  11.7% 0.000500  14036  47818.66 ({   0.00 0   0.0%} {   0.00 666   0.6%} {   0.40 13370  11.1%} ) 0 8596   0.0
0 150050   0.398   0.400  -0.004  11.7% 0.000500  17587  60025.95 ({   0.00 0   0.0%} {   0.00 812   0.5%} {   0.40 16775  11.2%} ) 0 10690   0.0
0 180075   0.400   0.404  -0.009  11.8% 0.000500  21203  72693.79 ({   0.00 0   0.0%} {   0.00 967   0.5%} {   0.40 20236  11.2%} ) 0 12855   0.0
0 210106   0.404   0.400   0.008  11.7% 0.000500  24525  84130.10 ({   0.00 0   0.0%} {   0.00 1100   0.5%} {   0.40 23425  11.1%} ) 0 14845   0.0
0 240140   0.400   0.400   0.002  11.7% 0.000500  28088  95981.08 ({   0.00 0   0.0%} {   0.00 1263   0.5%} {   0.40 26825  11.2%} ) 0 16844   0.0
0 270143   0.400   0.399   0.002  11.7% 0.000500  31503 107790.15 ({   0.00 0   0.0%} {   0.00 1430   0.5%} {   0.40 30073  11.1%} ) 0 18921   0.0
0 300167   0.399   0.399  -0.001  11.7% 0.000500  35073 119885.53 ({   0.00 0   0.0%} {   0.00 1568   0.5%} {   0.40 33505  11.2%} ) 0 21103   0.0
0 330197   0.399   0.401  -0.004  11.7% 0.000500  38779 132460.26 ({   0.00 0   0.0%} {   0.00 1718   0.5%} {   0.40 37061  11.2%} ) 0 23123   0.0
0 360211   0.401   0.403  -0.004  11.8% 0.000500  42489 145108.96 ({   0.00 0   0.0%} {   0.00 1883   0.5%} {   0.40 40606  11.3%} ) 0 25218   0.0
0 390212   0.403   0.404  -0.003  11.8% 0.000500  46202 157630.82 ({   0.00 0   0.0%} {   0.00 2052   0.5%} {   0.40 44150  11.3%} ) 0 27384   0.0
0 420256   0.404   0.404  -0.001  11.8% 0.000500  49764 169867.17 ({   0.00 0   0.0%} {   0.00 2224   0.5%} {   0.40 47540  11.3%} ) 0 29434   0.0
0 450277   0.404   0.403   0.002  11.8% 0.000500  53269 181572.98 ({   0.00 0   0.0%} {   0.00 2411   0.5%} {   0.40 50858  11.3%} ) 0 31461   0.0
0 480286   0.403   0.405  -0.005  11.9% 0.000500  57075 194634.88 ({   0.00 0   0.0%} {   0.00 2592   0.5%} {   0.40 54483  11.3%} ) 0 33455   0.0
0 510293   0.405   0.406  -0.001  11.9% 0.000500  60674 207015.78 ({   0.00 0   0.0%} {   0.00 2758   0.5%} {   0.40 57916  11.3%} ) 0 35410   0.0
0 540308   0.406   0.406  -0.000  11.9% 0.000500  64219 219217.52 ({   0.00 0   0.0%} {   0.00 2926   0.5%} {   0.40 61293  11.3%} ) 0 37474   0.0
0 570346   0.406   0.406  -0.001  11.9% 0.000500  67836 231642.72 ({   0.00 0   0.0%} {   0.00 3111   0.5%} {   0.40 64725  11.3%} ) 0 39525   0.0
0 600362   0.406   0.406  -0.000  11.9% 0.000500  71422 243858.04 ({   0.00 0   0.0%} {   0.00 3298   0.5%} {   0.40 68124  11.3%} ) 0 41590   0.0
0 630363   0.406   0.406   0.000  11.9% 0.000500  75078 256034.53 ({   0.00 0   0.0%} {   0.00 3477   0.6%} {   0.40 71601  11.4%} ) 0 43617   0.0
0 660414   0.406   0.406  -0.000  11.9% 0.000500  78675 268345.37 ({   0.00 0   0.0%} {   0.00 3646   0.6%} {   0.40 75029  11.4%} ) 0 45628   0.0
0 690468   0.406   0.406   0.001  11.9% 0.000500  82148 280376.11 ({   0.00 0   0.0%} {   0.00 3812   0.6%} {   0.40 78336  11.3%} ) 0 47537   0.0
0 720494   0.406   0.406  -0.000  11.9% 0.000500  85761 292684.03 ({   0.00 0   0.0%} {   0.00 4014   0.6%} {   0.40 81747  11.3%} ) 0 49532   0.0
0 750500   0.406   0.406  -0.000  11.9% 0.000500  89323 304983.15 ({   0.00 0   0.0%} {   0.00 4186   0.6%} {   0.40 85137  11.3%} ) 0 51500   0.0
0 780514   0.406   0.406   0.001  11.9% 0.000500  92787 316926.83 ({   0.00 0   0.0%} {   0.00 4345   0.6%} {   0.40 88442  11.3%} ) 0 53468   0.0
0 810522   0.406   0.407  -0.001  11.9% 0.000500  96391 329507.33 ({   0.00 0   0.0%} {   0.00 4500   0.6%} {   0.40 91891  11.3%} ) 0 55488   0.0
0 821726   0.407   0.406   0.000  11.9% 0.000500  97627 333928.06 ({   0.00 0   0.0%} {   0.00 4543   0.6%} {   0.40 93084  11.3%} ) 0 56266   0.0
Finished on Mon Feb 04 10:59:39 Pacific Standard Time 2002
NN_saveWeights save_75.wgt
Loading from c:tmpFile11.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile11.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 825991 in 56571 Words. Total 825991 in 56571 words
Good+Bad: 825991 in 56571 words.
Total 825991 in 56571 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 825991 in 56571 Words. Total 825991 in 56571 words
Good+Bad: 825991 in 56571 words.
Tot Mem 132611 (kB)]
Data loading complete at Mon Feb 04 11:00:53 Pacific Standard Time 2002
m_bUseBadWords = 1
76 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30042   0.000   0.402  -1.000  12.1% 0.000500  3635  12063.80 ({   0.00 0   0.0%} {   0.00 181   0.6%} {   0.40 3454  11.5%} ) 0 2074   0.0
0 60044   0.402   0.414  -0.029  12.2% 0.000500  7337  24835.28 ({   0.00 0   0.0%} {   0.00 374   0.6%} {   0.41 6963  11.6%} ) 0 4176   0.0
0 90047   0.414   0.416  -0.006  12.2% 0.000500  11003  37472.21 ({   0.00 0   0.0%} {   0.00 552   0.6%} {   0.41 10451  11.6%} ) 0 6257   0.0
0 120090   0.416   0.416   0.001  12.2% 0.000500  14671  49943.87 ({   0.00 0   0.0%} {   0.00 748   0.6%} {   0.41 13923  11.6%} ) 0 8270   0.0
0 150100   0.416   0.412   0.010  12.1% 0.000500  18133  61783.21 ({   0.00 0   0.0%} {   0.00 912   0.6%} {   0.41 17221  11.5%} ) 0 10323   0.0
0 180107   0.412   0.407   0.012  11.9% 0.000500  21422  73228.01 ({   0.00 0   0.0%} {   0.00 1061   0.6%} {   0.40 20361  11.3%} ) 0 12303   0.0
0 210119   0.407   0.406   0.001  11.9% 0.000500  24944  85363.62 ({   0.00 0   0.0%} {   0.00 1217   0.6%} {   0.40 23727  11.3%} ) 0 14389   0.0
0 240129   0.406   0.407  -0.001  11.9% 0.000500  28527  97623.26 ({   0.00 0   0.0%} {   0.00 1370   0.6%} {   0.40 27157  11.3%} ) 0 16466   0.0
0 270135   0.407   0.407  -0.001  11.9% 0.000500  32108 109952.36 ({   0.00 0   0.0%} {   0.00 1563   0.6%} {   0.40 30545  11.3%} ) 0 18434   0.0
0 300157   0.407   0.409  -0.005  11.9% 0.000500  35760 122781.52 ({   0.00 0   0.0%} {   0.00 1734   0.6%} {   0.41 34026  11.3%} ) 0 20525   0.0
0 330214   0.409   0.409  -0.001  11.9% 0.000500  39328 135202.28 ({   0.00 0   0.0%} {   0.00 1898   0.6%} {   0.41 37430  11.3%} ) 0 22661   0.0
0 360229   0.409   0.408   0.004  11.9% 0.000500  42776 146943.61 ({   0.00 0   0.0%} {   0.00 2040   0.6%} {   0.41 40736  11.3%} ) 0 24819   0.0
0 390246   0.408   0.408   0.001  11.9% 0.000500  46419 159081.50 ({   0.00 0   0.0%} {   0.00 2218   0.6%} {   0.41 44201  11.3%} ) 0 26963   0.0
0 420279   0.408   0.407   0.001  11.9% 0.000500  49951 171120.75 ({   0.00 0   0.0%} {   0.00 2386   0.6%} {   0.40 47565  11.3%} ) 0 29039   0.0
0 450323   0.407   0.408  -0.001  11.9% 0.000500  53643 183571.89 ({   0.00 0   0.0%} {   0.00 2564   0.6%} {   0.41 51079  11.3%} ) 0 31071   0.0
0 480324   0.408   0.407   0.000  11.9% 0.000500  57257 195725.11 ({   0.00 0   0.0%} {   0.00 2731   0.6%} {   0.41 54526  11.4%} ) 0 33144   0.0
0 510350   0.407   0.406   0.003  11.9% 0.000500  60585 207283.44 ({   0.00 0   0.0%} {   0.00 2887   0.6%} {   0.40 57698  11.3%} ) 0 35156   0.0
0 540350   0.406   0.406   0.001  11.9% 0.000500  64134 219160.46 ({   0.00 0   0.0%} {   0.00 3087   0.6%} {   0.40 61047  11.3%} ) 0 37157   0.0
0 570355   0.406   0.407  -0.003  11.9% 0.000500  67868 231944.44 ({   0.00 0   0.0%} {   0.00 3275   0.6%} {   0.40 64593  11.3%} ) 0 39218   0.0
0 600370   0.407   0.408  -0.002  11.9% 0.000500  71529 244670.67 ({   0.00 0   0.0%} {   0.00 3441   0.6%} {   0.41 68088  11.3%} ) 0 41211   0.0
0 630373   0.408   0.407   0.001  11.9% 0.000500  75108 256760.05 ({   0.00 0   0.0%} {   0.00 3632   0.6%} {   0.41 71476  11.3%} ) 0 43333   0.0
0 660374   0.407   0.408  -0.001  11.9% 0.000500  78714 269290.16 ({   0.00 0   0.0%} {   0.00 3809   0.6%} {   0.41 74905  11.3%} ) 0 45407   0.0
0 690380   0.408   0.408   0.000  11.9% 0.000500  82324 281457.45 ({   0.00 0   0.0%} {   0.00 3993   0.6%} {   0.41 78331  11.3%} ) 0 47451   0.0
0 720383   0.408   0.408  -0.001  11.9% 0.000500  85972 294055.21 ({   0.00 0   0.0%} {   0.00 4166   0.6%} {   0.41 81806  11.4%} ) 0 49501   0.0
0 750384   0.408   0.408   0.001  11.9% 0.000500  89503 305979.74 ({   0.00 0   0.0%} {   0.00 4363   0.6%} {   0.41 85140  11.3%} ) 0 51502   0.0
0 780387   0.408   0.407   0.001  11.9% 0.000500  93118 317977.83 ({   0.00 0   0.0%} {   0.00 4528   0.6%} {   0.41 88590  11.4%} ) 0 53514   0.0
0 810389   0.407   0.408  -0.000  11.9% 0.000500  96667 330268.07 ({   0.00 0   0.0%} {   0.00 4715   0.6%} {   0.41 91952  11.3%} ) 0 55467   0.0
0 823358   0.408   0.408   0.000  11.9% 0.000500  98258 335531.45 ({   0.00 0   0.0%} {   0.00 4799   0.6%} {   0.41 93459  11.4%} ) 0 56348   0.0
Finished on Mon Feb 04 14:37:40 Pacific Standard Time 2002
NN_saveWeights save_76.wgt
Loading from c:tmpFile12.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile12.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 821190 in 56077 Words. Total 821190 in 56077 words
Good+Bad: 821190 in 56077 words.
Total 821190 in 56077 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 821190 in 56077 Words. Total 821190 in 56077 words
Good+Bad: 821190 in 56077 words.
Tot Mem 131839 (kB)]
Data loading complete at Mon Feb 04 14:38:52 Pacific Standard Time 2002
m_bUseBadWords = 1
77 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30006   0.000   0.403  -1.000  11.8% 0.000500  3542  12089.43 ({   0.00 0   0.0%} {   0.00 179   0.6%} {   0.40 3363  11.2%} ) 0 2092   0.0
0 60009   0.403   0.410  -0.018  12.0% 0.000500  7193  24614.76 ({   0.00 0   0.0%} {   0.00 356   0.6%} {   0.41 6837  11.4%} ) 0 4163   0.0
0 90027   0.410   0.409   0.002  11.9% 0.000500  10676  36855.24 ({   0.00 0   0.0%} {   0.00 517   0.6%} {   0.41 10159  11.3%} ) 0 6330   0.0
0 120048   0.409   0.406   0.007  11.8% 0.000500  14190  48797.90 ({   0.00 0   0.0%} {   0.00 715   0.6%} {   0.40 13475  11.2%} ) 0 8403   0.0
0 150056   0.406   0.409  -0.005  11.9% 0.000500  17794  61327.65 ({   0.00 0   0.0%} {   0.00 874   0.6%} {   0.41 16920  11.3%} ) 0 10509   0.0
0 180063   0.409   0.407   0.004  11.9% 0.000500  21362  73275.51 ({   0.00 0   0.0%} {   0.00 1051   0.6%} {   0.40 20311  11.3%} ) 0 12533   0.0
0 210070   0.407   0.407  -0.000  11.8% 0.000500  24890  85489.29 ({   0.00 0   0.0%} {   0.00 1236   0.6%} {   0.40 23654  11.3%} ) 0 14671   0.0
0 240078   0.407   0.407   0.001  11.8% 0.000500  28392  97629.45 ({   0.00 0   0.0%} {   0.00 1423   0.6%} {   0.40 26969  11.2%} ) 0 16664   0.0
0 270111   0.407   0.406   0.001  11.8% 0.000500  31924 109718.49 ({   0.00 0   0.0%} {   0.00 1614   0.6%} {   0.40 30310  11.2%} ) 0 18680   0.0
0 300123   0.406   0.408  -0.005  11.9% 0.000500  35597 122490.01 ({   0.00 0   0.0%} {   0.00 1759   0.6%} {   0.41 33838  11.3%} ) 0 20698   0.0
0 330125   0.408   0.409  -0.001  11.9% 0.000500  39300 134913.67 ({   0.00 0   0.0%} {   0.00 1965   0.6%} {   0.41 37335  11.3%} ) 0 22728   0.0
0 360135   0.409   0.408   0.002  11.9% 0.000500  42809 146891.55 ({   0.00 0   0.0%} {   0.00 2178   0.6%} {   0.41 40631  11.3%} ) 0 24766   0.0
0 390141   0.408   0.409  -0.002  11.9% 0.000500  46438 159469.21 ({   0.00 0   0.0%} {   0.00 2351   0.6%} {   0.41 44087  11.3%} ) 0 26880   0.0
0 420143   0.409   0.408   0.001  11.9% 0.000500  49899 171510.39 ({   0.00 0   0.0%} {   0.00 2521   0.6%} {   0.41 47378  11.3%} ) 0 28966   0.0
0 450162   0.408   0.407   0.002  11.9% 0.000500  53454 183400.16 ({   0.00 0   0.0%} {   0.00 2690   0.6%} {   0.41 50764  11.3%} ) 0 31081   0.0
0 480194   0.407   0.407   0.001  11.9% 0.000500  56983 195357.22 ({   0.00 0   0.0%} {   0.00 2843   0.6%} {   0.40 54140  11.3%} ) 0 33152   0.0
0 510218   0.407   0.407   0.000  11.9% 0.000500  60526 207492.96 ({   0.00 0   0.0%} {   0.00 3044   0.6%} {   0.40 57482  11.3%} ) 0 35231   0.0
0 540225   0.407   0.407   0.000  11.9% 0.000500  64074 219643.44 ({   0.00 0   0.0%} {   0.00 3199   0.6%} {   0.40 60875  11.3%} ) 0 37273   0.0
0 570228   0.407   0.407  -0.000  11.9% 0.000500  67755 231918.67 ({   0.00 0   0.0%} {   0.00 3382   0.6%} {   0.40 64373  11.3%} ) 0 39326   0.0
0 600235   0.407   0.407  -0.001  11.9% 0.000500  71343 244275.63 ({   0.00 0   0.0%} {   0.00 3563   0.6%} {   0.40 67780  11.3%} ) 0 41335   0.0
0 630238   0.407   0.407  -0.000  11.9% 0.000500  74952 256507.37 ({   0.00 0   0.0%} {   0.00 3723   0.6%} {   0.40 71229  11.3%} ) 0 43366   0.0
0 660239   0.407   0.408  -0.002  11.9% 0.000500  78766 269165.98 ({   0.00 0   0.0%} {   0.00 3896   0.6%} {   0.41 74870  11.3%} ) 0 45380   0.0
0 690270   0.408   0.408   0.000  11.9% 0.000500  82275 281398.62 ({   0.00 0   0.0%} {   0.00 4046   0.6%} {   0.41 78229  11.3%} ) 0 47371   0.0
0 720272   0.408   0.407   0.001  11.9% 0.000500  85723 293213.32 ({   0.00 0   0.0%} {   0.00 4233   0.6%} {   0.40 81490  11.3%} ) 0 49447   0.0
0 750280   0.407   0.407   0.001  11.9% 0.000500  89290 305114.35 ({   0.00 0   0.0%} {   0.00 4423   0.6%} {   0.40 84867  11.3%} ) 0 51310   0.0
0 780295   0.407   0.406   0.001  11.9% 0.000500  92755 317107.06 ({   0.00 0   0.0%} {   0.00 4597   0.6%} {   0.40 88158  11.3%} ) 0 53225   0.0
0 810337   0.406   0.407  -0.001  11.9% 0.000500  96378 329683.26 ({   0.00 0   0.0%} {   0.00 4785   0.6%} {   0.40 91593  11.3%} ) 0 55208   0.0
0 818766   0.407   0.407   0.000  11.9% 0.000500  97352 333089.97 ({   0.00 0   0.0%} {   0.00 4822   0.6%} {   0.40 92530  11.3%} ) 0 55823   0.0
Finished on Mon Feb 04 18:14:28 Pacific Standard Time 2002
NN_saveWeights save_77.wgt
Loading from c:tmpFile13.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile13.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 825772 in 56357 Words. Total 825772 in 56357 words
Good+Bad: 825772 in 56357 words.
Total 825772 in 56357 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 825772 in 56357 Words. Total 825772 in 56357 words
Good+Bad: 825772 in 56357 words.
Tot Mem 132574 (kB)]
Data loading complete at Mon Feb 04 18:15:43 Pacific Standard Time 2002
m_bUseBadWords = 1
78 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30015   0.000   0.403  -1.000  11.7% 0.000500  3506  12096.13 ({   0.00 0   0.0%} {   0.00 154   0.5%} {   0.40 3352  11.2%} ) 0 2105   0.0
0 60047   0.403   0.392   0.029  11.4% 0.000500  6865  23516.25 ({   0.00 0   0.0%} {   0.00 327   0.5%} {   0.39 6538  10.9%} ) 0 4234   0.0
0 90078   0.392   0.399  -0.019  11.7% 0.000500  10566  35954.46 ({   0.00 0   0.0%} {   0.00 524   0.6%} {   0.40 10042  11.1%} ) 0 6348   0.0
0 120082   0.399   0.402  -0.007  11.8% 0.000500  14176  48264.46 ({   0.00 0   0.0%} {   0.00 690   0.6%} {   0.40 13486  11.2%} ) 0 8381   0.0
0 150083   0.402   0.404  -0.005  11.9% 0.000500  17785  60641.08 ({   0.00 0   0.0%} {   0.00 870   0.6%} {   0.40 16915  11.3%} ) 0 10405   0.0
0 180107   0.404   0.407  -0.007  11.9% 0.000500  21481  73300.79 ({   0.00 0   0.0%} {   0.00 1061   0.6%} {   0.40 20420  11.3%} ) 0 12520   0.0
0 210129   0.407   0.410  -0.008  12.0% 0.000500  25162  86169.45 ({   0.00 0   0.0%} {   0.00 1229   0.6%} {   0.41 23933  11.4%} ) 0 14584   0.0
0 240134   0.410   0.412  -0.005  12.0% 0.000500  28777  98921.47 ({   0.00 0   0.0%} {   0.00 1391   0.6%} {   0.41 27386  11.4%} ) 0 16641   0.0
0 270146   0.412   0.412  -0.000  12.0% 0.000500  32310 111311.90 ({   0.00 0   0.0%} {   0.00 1549   0.6%} {   0.41 30761  11.4%} ) 0 18700   0.0
0 300149   0.412   0.410   0.005  11.9% 0.000500  35668 123056.71 ({   0.00 0   0.0%} {   0.00 1684   0.6%} {   0.41 33984  11.3%} ) 0 20749   0.0
0 330166   0.410   0.410  -0.000  11.9% 0.000500  39245 135381.63 ({   0.00 0   0.0%} {   0.00 1835   0.6%} {   0.41 37410  11.3%} ) 0 22765   0.0
0 360181   0.410   0.409   0.002  11.9% 0.000500  42832 147323.52 ({   0.00 0   0.0%} {   0.00 2053   0.6%} {   0.41 40779  11.3%} ) 0 24897   0.0
0 390189   0.409   0.409   0.001  11.9% 0.000500  46359 159496.45 ({   0.00 0   0.0%} {   0.00 2219   0.6%} {   0.41 44140  11.3%} ) 0 26869   0.0
0 420215   0.409   0.409  -0.001  11.9% 0.000500  49994 171919.31 ({   0.00 0   0.0%} {   0.00 2408   0.6%} {   0.41 47586  11.3%} ) 0 29005   0.0
0 450215   0.409   0.409  -0.001  11.9% 0.000500  53626 184296.73 ({   0.00 0   0.0%} {   0.00 2588   0.6%} {   0.41 51038  11.3%} ) 0 31071   0.0
0 480242   0.409   0.409   0.002  11.9% 0.000500  57165 196184.80 ({   0.00 0   0.0%} {   0.00 2760   0.6%} {   0.41 54405  11.3%} ) 0 33107   0.0
0 510278   0.409   0.409  -0.001  11.9% 0.000500  60844 208708.84 ({   0.00 0   0.0%} {   0.00 2945   0.6%} {   0.41 57899  11.3%} ) 0 35123   0.0
0 540307   0.409   0.409   0.001  11.9% 0.000500  64336 220808.91 ({   0.00 0   0.0%} {   0.00 3101   0.6%} {   0.41 61235  11.3%} ) 0 37126   0.0
0 570316   0.409   0.409   0.000  11.9% 0.000500  67954 233043.70 ({   0.00 0   0.0%} {   0.00 3262   0.6%} {   0.41 64692  11.3%} ) 0 39139   0.0
0 600354   0.409   0.409   0.000  11.9% 0.000500  71534 245258.98 ({   0.00 0   0.0%} {   0.00 3427   0.6%} {   0.41 68107  11.3%} ) 0 41202   0.0
0 630359   0.409   0.408   0.001  11.9% 0.000500  75123 257283.68 ({   0.00 0   0.0%} {   0.00 3602   0.6%} {   0.41 71521  11.3%} ) 0 43310   0.0
0 660372   0.408   0.408  -0.000  11.9% 0.000500  78702 269650.73 ({   0.00 0   0.0%} {   0.00 3744   0.6%} {   0.41 74958  11.4%} ) 0 45342   0.0
0 690374   0.408   0.408   0.001  11.9% 0.000500  82220 281618.86 ({   0.00 0   0.0%} {   0.00 3909   0.6%} {   0.41 78311  11.3%} ) 0 47248   0.0
0 720375   0.408   0.409  -0.002  11.9% 0.000500  85879 294417.32 ({   0.00 0   0.0%} {   0.00 4058   0.6%} {   0.41 81821  11.4%} ) 0 49205   0.0
0 750387   0.409   0.408   0.002  11.9% 0.000500  89338 306200.19 ({   0.00 0   0.0%} {   0.00 4211   0.6%} {   0.41 85127  11.3%} ) 0 51182   0.0
0 780393   0.408   0.408   0.000  11.9% 0.000500  92924 318302.88 ({   0.00 0   0.0%} {   0.00 4396   0.6%} {   0.41 88528  11.3%} ) 0 53105   0.0
0 810412   0.408   0.409  -0.003  11.9% 0.000500  96820 331387.91 ({   0.00 0   0.0%} {   0.00 4624   0.6%} {   0.41 92196  11.4%} ) 0 55208   0.0
0 823136   0.409   0.409   0.000  11.9% 0.000500  98315 336545.94 ({   0.00 0   0.0%} {   0.00 4696   0.6%} {   0.41 93619  11.4%} ) 0 56134   0.0
Finished on Mon Feb 04 21:52:21 Pacific Standard Time 2002
NN_saveWeights save_78.wgt
Loading from c:tmpFile14.nni
Sphereing data from ../../word.sta
Loaded from c:tmpFile14.nni
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 813131 in 55922 Words. Total 813131 in 55922 words
Good+Bad: 813131 in 55922 words.
Total 813131 in 55922 words
Weighted Numbers
Labelled Segments: 0 in 0 Words Total 0 in 0 words
UnLabelled Segments: 813131 in 55922 Words. Total 813131 in 55922 words
Good+Bad: 813131 in 55922 words.
Tot Mem 130548 (kB)]
Data loading complete at Mon Feb 04 21:53:35 Pacific Standard Time 2002
m_bUseBadWords = 1
79 m_outputTemp  1
m_bConvertTargets = 0 momentum 0.1 m_bDoSpace 1
m_iDtwPass  = 1 noiseLevel 0.0
NN_trainTDNN 1 0 0
0 30030   0.000   0.407  -1.000  11.9% 0.000500  3576  12236.00 ({   0.00 0   0.0%} {   0.00 177   0.6%} {   0.41 3399  11.3%} ) 0 2082   0.0
0 60052   0.407   0.397   0.025  11.7% 0.000500  7046  23861.36 ({   0.00 0   0.0%} {   0.00 345   0.6%} {   0.40 6701  11.2%} ) 0 4178   0.0
0 90082   0.397   0.399  -0.005  11.8% 0.000500  10596  35975.07 ({   0.00 0   0.0%} {   0.00 501   0.6%} {   0.40 10095  11.2%} ) 0 6262   0.0
0 120085   0.399   0.403  -0.010  11.8% 0.000500  14215  48424.25 ({   0.00 0   0.0%} {   0.00 674   0.6%} {   0.40 13541  11.3%} ) 0 8346   0.0
0 150086   0.403   0.403   0.000  11.8% 0.000500  17747  60495.32 ({   0.00 0   0.0%} {   0.00 828   0.6%} {   0.40 16919  11.3%} ) 0 10353   0.0
0 180103   0.403   0.404  -0.002  11.8% 0.000500  21296  72758.07 ({   0.00 0   0.0%} {   0.00 977   0.5%} {   0.40 20319  11.3%} ) 0 12532   0.0
0 210107   0.404   0.405  -0.002  11.9% 0.000500  24915  85028.96 ({   0.00 0   0.0%} {   0.00 1144   0.5%} {   0.40 23771  11.3%} ) 0 14708   0.0
0 240121   0.405   0.403   0.005  11.8% 0.000500  28409  96696.20 ({   0.00 0   0.0%} {   0.00 1328   0.6%} {   0.40 27081  11.3%} ) 0 16790   0.0
0 270122   0.403   0.403  -0.001  11.9% 0.000500  32029 108870.68 ({   0.00 0   0.0%} {   0.00 1508   0.6%} {   0.40 30521  11.3%} ) 0 18864   0.0
0 300123   0.403   0.403  -0.001  11.8% 0.000500  35521 121060.58 ({   0.00 0   0.0%} {   0.00 1671   0.6%} {   0.40 33850  11.3%} ) 0 20970   0.0
0 330123   0.403   0.402   0.003  11.8% 0.000500  38925 132813.83 ({   0.00 0   0.0%} {   0.00 1832   0.6%} {   0.40 37093  11.2%} ) 0 23037   0.0
0 360127   0.402   0.402   0.000  11.8% 0.000500  42463 144873.65 ({   0.00 0   0.0%} {   0.00 1992   0.6%} {   0.40 40471  11.2%} ) 0 25248   0.0
0 390165   0.402   0.400   0.005  11.7% 0.000500  45790 156199.68 ({   0.00 0   0.0%} {   0.00 2166   0.6%} {   0.40 43624  11.2%} ) 0 27322   0.0
0 420170   0.400   0.401  -0.003  11.8% 0.000500  49446 168659.43 ({   0.00 0   0.0%} {   0.00 2340   0.6%} {   0.40 47106  11.2%} ) 0 29442   0.0
0 450175   0.401   0.402  -0.002  11.8% 0.000500  53166 181017.69 ({   0.00 0   0.0%} {   0.00 2532   0.6%} {   0.40 50634  11.2%} ) 0 31500   0.0
0 480199   0.402   0.402  -0.001  11.8% 0.000500  56750 193222.21 ({   0.00 0   0.0%} {   0.00 2729   0.6%} {   0.40 54021  11.2%} ) 0 33536   0.0
0 510237   0.402   0.404  -0.004  11.8% 0.000500  60451 206226.34 ({   0.00 0   0.0%} {   0.00 2876   0.6%} {   0.40 57575  11.3%} ) 0 35583   0.0
0 540239   0.404   0.405  -0.002  11.9% 0.000500  64154 218750.93 ({   0.00 0   0.0%} {   0.00 3039   0.6%} {   0.40 61115  11.3%} ) 0 37674   0.0
0 570255   0.405   0.404   0.002  11.8% 0.000500  67559 230499.76 ({   0.00 0   0.0%} {   0.00 3212   0.6%} {   0.40 64347  11.3%} ) 0 39695   0.0
0 600261   0.404   0.406  -0.004  11.9% 0.000500  71319 243563.77 ({   0.00 0   0.0%} {   0.00 3365   0.6%} {   0.40 67954  11.3%} ) 0 41734   0.0
0 630278   0.406   0.406  -0.000  11.9% 0.000500  74879 255860.03 ({   0.00 0   0.0%} {   0.00 3549   0.6%} {   0.40 71330  11.3%} ) 0 43683   0.0
0 660282   0.406   0.406  -0.000  11.9% 0.000500  78431 268106.70 ({   0.00 0   0.0%} {   0.00 3723   0.6%} {   0.40 74708  11.3%} ) 0 45678   0.0
0 690308   0.406   0.406   0.001  11.9% 0.000500  81957 280066.99 ({   0.00 0   0.0%} {   0.00 3913   0.6%} {   0.40 78044  11.3%} ) 0 47668   0.0
0 720350   0.406   0.406  -0.000  11.9% 0.000500  85608 292356.64 ({   0.00 0   0.0%} {   0.00 4075   0.6%} {   0.40 81533  11.3%} ) 0 49722   0.0
0 750351   0.406   0.406   0.000  11.9% 0.000500  89169 304403.96 ({   0.00 0   0.0%} {   0.00 4264   0.6%} {   0.40 84905  11.3%} ) 0 51672   0.0
0 780354   0.406   0.406   0.000  11.9% 0.000500  92758 316558.26 ({   0.00 0   0.0%} {   0.00 4438   0.6%} {   0.40 88320  11.3%} ) 0 53631   0.0
0 810357   0.406   0.406   0.000  11.9% 0.000500  96397 328675.08 ({   0.00 0   0.0%} {   0.00 4620   0.6%} {   0.40 91777  11.3%} ) 0 55690   0.0
0 810423   0.406   0.406   0.000  11.9% 0.000500  96399 328687.12 ({   0.00 0   0.0%} {   0.00 4620   0.6%} {   0.40 91779  11.3%} ) 0 55691   0.0
Finished on Tue Feb 05 01:26:53 Pacific Standard Time 2002
NN_saveWeights save_79.wgt


$$$$$$$$$$$$$$$$$$$$$$$ Try train the space output &&&&&&&&&&&&&&&&&&&&&&&&&&&


Start on Wed Feb 13 21:19:52 Pacific Standard Time 2002
Building Net from net description file ../../../net-desc_37_150_1_1_183.txt
Net built from ../../../net-desc_37_150_1_1_183.txt
Independant Weights 100535 Shared Weights 33300
German Charmap Last updated 19 Oct 2001 - matches LM spec of 10/11/2001
CheckPoint Weights every 40000 Segments
Batch size 30000
Loading weights from save_79.wgt
Randomizing 451 Output Space Weights
Start sampling from 22 files. Starting at Wed Feb 13 21:20:02 Pacific Standard Time 2002
Sample ../../strictc.nni into 25  components with fraction 1
36799 samples, 37 features, 3 targettypes
Reading 36799 samples, writing with prob 1.000000...
36799 samples out of 36799 chosen. 346946 Segments out of 346946
Generated   1494 samples   13688 segments into file c:tmpFile00
Generated   1453 samples   13670 segments into file c:tmpFile01
Generated   1440 samples   13292 segments into file c:tmpFile02
Generated   1500 samples   13968 segments into file c:tmpFile03
Generated   1487 samples   14088 segments into file c:tmpFile04
Generated   1542 samples   14654 segments into file c:tmpFile05
Generated   1487 samples   13811 segments into file c:tmpFile06
Generated   1418 samples   13437 segments into file c:tmpFile07
Generated   1470 samples   13933 segments into file c:tmpFile08
Generated   1500 samples   14356 segments into file c:tmpFile09
Generated   1443 samples   13281 segments into file c:tmpFile10
Generated   1478 samples   13832 segments into file c:tmpFile11
Generated   1465 samples   13815 segments into file c:tmpFile12
Generated   1495 samples   14317 segments into file c:tmpFile13
Generated   1454 samples   13832 segments into file c:tmpFile14
Generated   1492 samples   14030 segments into file c:tmpFile15
Generated   1472 samples   14012 segments into file c:tmpFile16
Generated   1469 samples   13925 segments into file c:tmpFile17
Generated   1545 samples   14874 segments into file c:tmpFile18
Generated   1500 samples   14205 segments into file c:tmpFile19
Generated   1441 samples   13458 segments into file c:tmpFile20
Generated   1420 samples   13505 segments into file c:tmpFile21
Generated   1443 samples   13364 segments into file c:tmpFile22
Generated   1440 samples   13703 segments into file c:tmpFile23
Generated   1451 samples   13896 segments into file c:tmpFile24
Sample ../../strictp.nni into 25  components with fraction 1
122708 samples, 37 features, 3 targettypes
Reading 1451 samples, writing with prob 1.000000...
122708 samples out of 122708 chosen. 1137967 Segments out of 1137967
Generated   6410 samples   45313 segments into file c:tmpFile00
Generated   6361 samples   45811 segments into file c:tmpFile01
Generated   6534 samples   48116 segments into file c:tmpFile02
Generated   6356 samples   45038 segments into file c:tmpFile03
Generated   6295 samples   44697 segments int